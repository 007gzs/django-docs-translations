# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-02 15:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../faq/admin.txt:2
# 6e70ff5e669a4f07953f914417e3c373
msgid "FAQ: The admin"
msgstr ""

#: ../../faq/admin.txt:5
# 0f04266faf704d3695633bb4c0c8126e
msgid "I can't log in. When I enter a valid username and password, it just brings up the login page again, with no error messages."
msgstr ""

#: ../../faq/admin.txt:7
# d6cf583e15314cd2b14f086a6fe5a046
msgid "The login cookie isn't being set correctly, because the domain of the cookie sent out by Django doesn't match the domain in your browser. Try these two things:"
msgstr ""

#: ../../faq/admin.txt:11
# a9b967184318412188b1c54d5d424762
msgid "Set the :setting:`SESSION_COOKIE_DOMAIN` setting in your admin config file to match your domain. For example, if you're going to \"http://www.example.com/admin/\" in your browser, in \"myproject.settings\" you should set :setting:`SESSION_COOKIE_DOMAIN` = 'www.example.com'."
msgstr ""

#: ../../faq/admin.txt:16
# bf2fa984756b48beaaa33121494e720f
msgid "Some browsers (Firefox?) don't like to accept cookies from domains that don't have dots in them. If you're running the admin site on \"localhost\" or another domain that doesn't have a dot in it, try going to \"localhost.localdomain\" or \"127.0.0.1\". And set :setting:`SESSION_COOKIE_DOMAIN` accordingly."
msgstr ""

#: ../../faq/admin.txt:23
# 7aa9e5121ce04566b54742b4aa333983
msgid "I can't log in. When I enter a valid username and password, it brings up the login page again, with a \"Please enter a correct username and password\" error."
msgstr ""

#: ../../faq/admin.txt:25
# a8f31638b58a437cafe14f4eaa9e5c29
msgid "If you're sure your username and password are correct, make sure your user account has :attr:`~django.contrib.auth.models.User.is_active` and :attr:`~django.contrib.auth.models.User.is_staff` set to True. The admin site only allows access to users with those two fields both set to True."
msgstr ""

#: ../../faq/admin.txt:31
# b322a627deed45048a61f69224581226
msgid "How do I automatically set a field's value to the user who last edited the object in the admin?"
msgstr ""

#: ../../faq/admin.txt:33
# ae8ae87dbade44d3b04d7d05d65face2
msgid "The :class:`~django.contrib.admin.ModelAdmin` class provides customization hooks that allow you to transform an object as it saved, using details from the request. By extracting the current user from the request, and customizing the :meth:`~django.contrib.admin.ModelAdmin.save_model` hook, you can update an object to reflect the user that edited it. See :ref:`the documentation on ModelAdmin methods <model-admin-methods>` for an example."
msgstr ""

#: ../../faq/admin.txt:41
# abc964369a794e2b8109de77a74c3310
msgid "How do I limit admin access so that objects can only be edited by the users who created them?"
msgstr ""

#: ../../faq/admin.txt:43
# 5af1bc6f61884e1eac3f7ca26802a095
msgid "The :class:`~django.contrib.admin.ModelAdmin` class also provides customization hooks that allow you to control the visibility and editability of objects in the admin. Using the same trick of extracting the user from the request, the :meth:`~django.contrib.admin.ModelAdmin.get_queryset` and :meth:`~django.contrib.admin.ModelAdmin.has_change_permission` can be used to control the visibility and editability of objects in the admin."
msgstr ""

#: ../../faq/admin.txt:51
# 7d75a0eb6c1545cd83fd17a700d5c58c
msgid "My admin-site CSS and images showed up fine using the development server, but they're not displaying when using mod_wsgi."
msgstr ""

#: ../../faq/admin.txt:53
# 484305fc790444ba8547bb5a0d077785
msgid "See :ref:`serving the admin files <serving-the-admin-files>` in the \"How to use Django with mod_wsgi\" documentation."
msgstr ""

#: ../../faq/admin.txt:57
# cf25b7a3a3c44cd098b14789fb20ea28
msgid "My \"list_filter\" contains a ManyToManyField, but the filter doesn't display."
msgstr ""

#: ../../faq/admin.txt:59
# e7f5fb79b5a6465592f8de1a5a6fedde
msgid "Django won't bother displaying the filter for a ``ManyToManyField`` if there are fewer than two related objects."
msgstr ""

#: ../../faq/admin.txt:62
# c1ab37b293de422dbdfc4f80abf751e3
msgid "For example, if your :attr:`~django.contrib.admin.ModelAdmin.list_filter` includes :doc:`sites </ref/contrib/sites>`, and there's only one site in your database, it won't display a \"Site\" filter. In that case, filtering by site would be meaningless."
msgstr ""

#: ../../faq/admin.txt:68
# e4d9b0aec75041a3b5c2056ae31570de
msgid "Some objects aren't appearing in the admin."
msgstr ""

#: ../../faq/admin.txt:70
# 909e828622bc4e09a453c9e35a7c6e0d
msgid "Inconsistent row counts may be caused by missing foreign key values or a foreign key field incorrectly set to :attr:`null=False <django.db.models.Field.null>`. If you have a record with a :class:`~django.db.models.ForeignKey` pointing to a non-existent object and that foreign key is included is :attr:`~django.contrib.admin.ModelAdmin.list_display`, the record will not be shown in the admin changelist because the Django model is declaring an integrity constraint that is not implemented at the database level."
msgstr ""

#: ../../faq/admin.txt:80
# 2e6a62af7bab49899b9ed8381d534690
msgid "How can I customize the functionality of the admin interface?"
msgstr ""

#: ../../faq/admin.txt:82
# 43ea570a56dc4da891107632f8b9ca35
msgid "You've got several options. If you want to piggyback on top of an add/change form that Django automatically generates, you can attach arbitrary JavaScript modules to the page via the model's class Admin :ref:`js parameter <modeladmin-asset-definitions>`. That parameter is a list of URLs, as strings, pointing to JavaScript modules that will be included within the admin form via a ``<script>`` tag."
msgstr ""

#: ../../faq/admin.txt:89
# 9cb13282ff8d4ca28d7fd54b1cbb018c
msgid "If you want more flexibility than simply tweaking the auto-generated forms, feel free to write custom views for the admin. The admin is powered by Django itself, and you can write custom views that hook into the authentication system, check permissions and do whatever else they need to do."
msgstr ""

#: ../../faq/admin.txt:94
# 593b25ddaf9f42228581bd2e82bdc6d7
msgid "If you want to customize the look-and-feel of the admin interface, read the next question."
msgstr ""

#: ../../faq/admin.txt:98
# d584f738124f483581f56ca4d396d5e9
msgid "The dynamically-generated admin site is ugly! How can I change it?"
msgstr ""

#: ../../faq/admin.txt:100
# b9695ad30bdd474898100194170123c8
msgid "We like it, but if you don't agree, you can modify the admin site's presentation by editing the CSS stylesheet and/or associated image files. The site is built using semantic HTML and plenty of CSS hooks, so any changes you'd like to make should be possible by editing the stylesheet."
msgstr ""

#: ../../faq/admin.txt:106
# 4eabe0a500c84eb6b0265c1574405754
msgid "What browsers are supported for using the admin?"
msgstr ""

#: ../../faq/admin.txt:108
# 40cc85aea65740df95cfb4392719ef6b
msgid "The admin provides a fully-functional experience to `YUI's A-grade`_ browsers, with the notable exception of IE6, which is not supported."
msgstr ""

#: ../../faq/admin.txt:111
# 8d4fe09796c84bbcb3073937796fb36f
msgid "There *may* be minor stylistic differences between supported browsersâ€”for example, some browsers may not support rounded corners. These are considered acceptable variations in rendering."
msgstr ""

#: ../../faq/contributing.txt:2
# 11cc94b36d1e491fae81cd48b8eb57eb
msgid "FAQ: Contributing code"
msgstr ""

#: ../../faq/contributing.txt:5
# 23c3dc2be7db44859412b72a7307b684
msgid "How can I get started contributing code to Django?"
msgstr ""

#: ../../faq/contributing.txt:7
# 3536ba129f31441c9046f59f3830f4d0
msgid "Thanks for asking! We've written an entire document devoted to this question. It's titled :doc:`Contributing to Django </internals/contributing/index>`."
msgstr ""

#: ../../faq/contributing.txt:11
# 72c31e100e8a429887f0afdf8ea7fe72
msgid "I submitted a bug fix in the ticket system several weeks ago. Why are you ignoring my patch?"
msgstr ""

#: ../../faq/contributing.txt:13
# 209deab1359c44078caa2587d067b057
msgid "Don't worry: We're not ignoring you!"
msgstr ""

#: ../../faq/contributing.txt:15
# 06f26f97781d4d0fa93ee1318ebd9e4e
msgid "It's important to understand there is a difference between \"a ticket is being ignored\" and \"a ticket has not been attended to yet.\" Django's ticket system contains hundreds of open tickets, of various degrees of impact on end-user functionality, and Django's developers have to review and prioritize."
msgstr ""

#: ../../faq/contributing.txt:20
# fca291f78ed84e0382fb6ce17dee8420
msgid "On top of that: the people who work on Django are all volunteers. As a result, the amount of time that we have to work on the framework is limited and will vary from week to week depending on our spare time. If we're busy, we may not be able to spend as much time on Django as we might want."
msgstr ""

#: ../../faq/contributing.txt:25
# d8414437052d4e469deefe82386c6b09
msgid "The best way to make sure tickets do not get hung up on the way to checkin is to make it dead easy, even for someone who may not be intimately familiar with that area of the code, to understand the problem and verify the fix:"
msgstr ""

#: ../../faq/contributing.txt:29
# 1b03eaff440f4534b98b3ffed705d297
msgid "Are there clear instructions on how to reproduce the bug? If this touches a dependency (such as Pillow/PIL), a contrib module, or a specific database, are those instructions clear enough even for someone not familiar with it?"
msgstr ""

#: ../../faq/contributing.txt:34
# b029447cfdc2477c9933a7829c9dc3e8
msgid "If there are several patches attached to the ticket, is it clear what each one does, which ones can be ignored and which matter?"
msgstr ""

#: ../../faq/contributing.txt:37
# f79355e105e841bba198e1c6bc3e439a
msgid "Does the patch include a unit test? If not, is there a very clear explanation why not? A test expresses succinctly what the problem is, and shows that the patch actually fixes it."
msgstr ""

#: ../../faq/contributing.txt:41
# 24169125f6984ee292e70b3c1b5561c4
msgid "If your patch stands no chance of inclusion in Django, we won't ignore it -- we'll just close the ticket. So if your ticket is still open, it doesn't mean we're ignoring you; it just means we haven't had time to look at it yet."
msgstr ""

#: ../../faq/contributing.txt:46
# 9219119809d448aa9dd528ef9dcee71a
msgid "When and how might I remind the core team of a patch I care about?"
msgstr ""

#: ../../faq/contributing.txt:48
# 4a814a16bcc449778807c62929f342f6
msgid "A polite, well-timed message to the mailing list is one way to get attention. To determine the right time, you need to keep an eye on the schedule. If you post your message when the core developers are trying to hit a feature deadline or manage a planning phase, you're not going to get the sort of attention you require. However, if you draw attention to a ticket when the core developers are paying particular attention to bugs -- just before a bug fixing sprint, or in the lead up to a beta release for example -- you're much more likely to get a productive response."
msgstr ""

#: ../../faq/contributing.txt:57
# 70b45106c3b347b98c71607858a7dd46
msgid "Gentle IRC reminders can also work -- again, strategically timed if possible. During a bug sprint would be a very good time, for example."
msgstr ""

#: ../../faq/contributing.txt:60
# 5bfe2d7522c84b1aa76e5cf3cf2678a4
msgid "Another way to get traction is to pull several related tickets together. When the core developers sit down to fix a bug in an area they haven't touched for a while, it can take a few minutes to remember all the fine details of how that area of code works. If you collect several minor bug fixes together into a similarly themed group, you make an attractive target, as the cost of coming up to speed on an area of code can be spread over multiple tickets."
msgstr ""

#: ../../faq/contributing.txt:67
# 09432a61efa046878b1d072a8aec5af2
msgid "Please refrain from emailing core developers personally, or repeatedly raising the same issue over and over. This sort of behavior will not gain you any additional attention -- certainly not the attention that you need in order to get your pet bug addressed."
msgstr ""

#: ../../faq/contributing.txt:73
# 3ebf3a5b33e14b2d87ad288caaf48d03
msgid "But I've reminded you several times and you keep ignoring my patch!"
msgstr ""

#: ../../faq/contributing.txt:75
# 475f60ec36774bfeb78a76123ee68dcc
msgid "Seriously - we're not ignoring you. If your patch stands no chance of inclusion in Django, we'll close the ticket. For all the other tickets, we need to prioritize our efforts, which means that some tickets will be addressed before others."
msgstr ""

#: ../../faq/contributing.txt:80
# 70da038da0ec4899b40e2a74a0f2bb35
msgid "One of the criteria that is used to prioritize bug fixes is the number of people that will likely be affected by a given bug. Bugs that have the potential to affect many people will generally get priority over those that are edge cases."
msgstr ""

#: ../../faq/contributing.txt:85
# cb102910130848f3a9b420e42da914a4
msgid "Another reason that bugs might be ignored for while is if the bug is a symptom of a larger problem. While we can spend time writing, testing and applying lots of little patches, sometimes the right solution is to rebuild. If a rebuild or refactor of a particular component has been proposed or is underway, you may find that bugs affecting that component will not get as much attention. Again, this is just a matter of prioritizing scarce resources. By concentrating on the rebuild, we can close all the little bugs at once, and hopefully prevent other little bugs from appearing in the future."
msgstr ""

#: ../../faq/contributing.txt:94
# e5e5345c23d94179af50c51a233898a2
msgid "Whatever the reason, please keep in mind that while you may hit a particular bug regularly, it doesn't necessarily follow that every single Django user will hit the same bug. Different users use Django in different ways, stressing different parts of the code under different conditions. When we evaluate the relative priorities, we are generally trying to consider the needs of the entire community, not just the severity for one particular user. This doesn't mean that we think your problem is unimportant -- just that in the limited time we have available, we will always err on the side of making 10 people happy rather than making 1 person happy."
msgstr ""

#: ../../faq/general.txt:2
# b0d22204d1b84edf980cd8b089d0e941
msgid "FAQ: General"
msgstr ""

#: ../../faq/general.txt:5
# 56993f73993d47839232ca95ad864151
msgid "Why does this project exist?"
msgstr ""

#: ../../faq/general.txt:7
# 45e2f11fef57481092166c0d4ae4ea64
msgid "Django grew from a very practical need: World Online, a newspaper Web operation, is responsible for building intensive Web applications on journalism deadlines. In the fast-paced newsroom, World Online often has only a matter of hours to take a complicated Web application from concept to public launch."
msgstr ""

#: ../../faq/general.txt:12
# 3af794119bd9405290c89072b3e4b0da
msgid "At the same time, the World Online Web developers have consistently been perfectionists when it comes to following best practices of Web development."
msgstr ""

#: ../../faq/general.txt:15
# 9efa96c698154f4c985c52332624a518
msgid "In fall 2003, the World Online developers (Adrian Holovaty and Simon Willison) ditched PHP and began using Python to develop its Web sites. As they built intensive, richly interactive sites such as Lawrence.com, they began to extract a generic Web development framework that let them build Web applications more and more quickly. They tweaked this framework constantly, adding improvements over two years."
msgstr ""

#: ../../faq/general.txt:22
# e1a09ffc28744577bf9841672bf02e01
msgid "In summer 2005, World Online decided to open-source the resulting software, Django. Django would not be possible without a whole host of open-source projects -- `Apache`_, `Python`_, and `PostgreSQL`_ to name a few -- and we're thrilled to be able to give something back to the open-source community."
msgstr ""

#: ../../faq/general.txt:32
# 1e918754224246c7909c03abf4263bd0
msgid "What does \"Django\" mean, and how do you pronounce it?"
msgstr ""

#: ../../faq/general.txt:34
# 0734cdbc54b14ad6a80382f09e5b2fc7
msgid "Django is named after `Django Reinhardt`_, a gypsy jazz guitarist from the 1930s to early 1950s. To this day, he's considered one of the best guitarists of all time."
msgstr ""

#: ../../faq/general.txt:37
# d4dc2700682645b08027baf8824ecf28
msgid "Listen to his music. You'll like it."
msgstr ""

#: ../../faq/general.txt:39
# 46d057e059fd41ee81b0962311abb300
msgid "Django is pronounced **JANG**-oh. Rhymes with FANG-oh. The \"D\" is silent."
msgstr ""

#: ../../faq/general.txt:41
# e8c5b704c38046fc84d0fedcd793dcd5
msgid "We've also recorded an `audio clip of the pronunciation`_."
msgstr ""

#: ../../faq/general.txt:47
# 919e1d66a972407cb104c2af25114030
msgid "Is Django stable?"
msgstr ""

#: ../../faq/general.txt:49
# 42136dd672f3495c9b8295db7a7b08bb
msgid "Yes, it's quite stable. World Online has been using Django for many years. Sites built on Django have weathered traffic spikes of over one million hits an hour."
msgstr ""

#: ../../faq/general.txt:53
# 468eac6d6ca14b37bc8d4edb18609e10
msgid "Does Django scale?"
msgstr ""

#: ../../faq/general.txt:55
# 81ff668e6b7a4405bab24e2a7a64232c
msgid "Yes. Compared to development time, hardware is cheap, and so Django is designed to take advantage of as much hardware as you can throw at it."
msgstr ""

#: ../../faq/general.txt:58
# 3826d214803e44d2a942c41def354147
msgid "Django uses a \"shared-nothing\" architecture, which means you can add hardware at any level -- database servers, caching servers or Web/application servers."
msgstr ""

#: ../../faq/general.txt:61
# 96b0aebc8a4e45dcb5217bb21ef7f108
msgid "The framework cleanly separates components such as its database layer and application layer. And it ships with a simple-yet-powerful :doc:`cache framework </topics/cache>`."
msgstr ""

#: ../../faq/general.txt:66
# bcc6c87efd2a43029dcd6d7f68daf8fe
msgid "Who's behind this?"
msgstr ""

#: ../../faq/general.txt:68
# aec7884c03a24f73b1fbc2c51f5ce882
msgid "Django was originally developed at World Online, the Web department of a newspaper in Lawrence, Kansas, USA. Django's now run by an international team of volunteers; you can read all about them over at the :doc:`list of committers </internals/committers>`."
msgstr ""

#: ../../faq/general.txt:74
# 1ba4df5459c34c35bfdc32d7d990c971
msgid "Which sites use Django?"
msgstr ""

#: ../../faq/general.txt:76
# 40b223d1e1e7423e8224f8e8f5d2be63
msgid "`DjangoSites.org`_ features a constantly growing list of Django-powered sites."
msgstr ""

#: ../../faq/general.txt:83
# 729ec0e3ad7541968697710b912f7db1
msgid "Django appears to be a MVC framework, but you call the Controller the \"view\", and the View the \"template\". How come you don't use the standard names?"
msgstr ""

#: ../../faq/general.txt:85
# b4b8490281d64bba8c5144d3306e7517
msgid "Well, the standard names are debatable."
msgstr ""

#: ../../faq/general.txt:87
# f447c09349ad4ad2a176a605737f7dd6
msgid "In our interpretation of MVC, the \"view\" describes the data that gets presented to the user. It's not necessarily *how* the data *looks*, but *which* data is presented. The view describes *which data you see*, not *how you see it.* It's a subtle distinction."
msgstr ""

#: ../../faq/general.txt:92
# 37ab672f63134ae5b445e0ce9ecbe1fc
msgid "So, in our case, a \"view\" is the Python callback function for a particular URL, because that callback function describes which data is presented."
msgstr ""

#: ../../faq/general.txt:95
# d08f2c929a57479c87ff30c8a2ac2be1
msgid "Furthermore, it's sensible to separate content from presentation -- which is where templates come in. In Django, a \"view\" describes which data is presented, but a view normally delegates to a template, which describes *how* the data is presented."
msgstr ""

#: ../../faq/general.txt:100
# 7525b42b3b8544748ad3bab0fff375bb
msgid "Where does the \"controller\" fit in, then? In Django's case, it's probably the framework itself: the machinery that sends a request to the appropriate view, according to the Django URL configuration."
msgstr ""

#: ../../faq/general.txt:104
# e5b6d835a1644e629cef8be1c80c4226
msgid "If you're hungry for acronyms, you might say that Django is a \"MTV\" framework -- that is, \"model\", \"template\", and \"view.\" That breakdown makes much more sense."
msgstr ""

#: ../../faq/general.txt:108
# 448dbda07f594745af13a564c65429c0
msgid "At the end of the day, of course, it comes down to getting stuff done. And, regardless of how things are named, Django gets stuff done in a way that's most logical to us."
msgstr ""

#: ../../faq/general.txt:113
# 047cf4e8da904ec989242535193b99cb
msgid "<Framework X> does <feature Y> -- why doesn't Django?"
msgstr ""

#: ../../faq/general.txt:115
# 70927ea64f124917b40384105467e993
msgid "We're well aware that there are other awesome Web frameworks out there, and we're not averse to borrowing ideas where appropriate. However, Django was developed precisely because we were unhappy with the status quo, so please be aware that \"because <Framework X> does it\" is not going to be sufficient reason to add a given feature to Django."
msgstr ""

#: ../../faq/general.txt:122
# 3515713128b049d78c3ce2e8144184bb
msgid "Why did you write all of Django from scratch, instead of using other Python libraries?"
msgstr ""

#: ../../faq/general.txt:124
# 55ec35aec01a4a1bb0e35e14957899b6
msgid "When Django was originally written a couple of years ago, Adrian and Simon spent quite a bit of time exploring the various Python Web frameworks available."
msgstr ""

#: ../../faq/general.txt:128
# d769ff8ae7e14810ae370b46dfbd317a
msgid "In our opinion, none of them were completely up to snuff."
msgstr ""

#: ../../faq/general.txt:130
# e5c46d1e3c714c728e3a2de58a028dcb
msgid "We're picky. You might even call us perfectionists. (With deadlines.)"
msgstr ""

#: ../../faq/general.txt:132
# 5c6c234fbc8c454fb168cd3b8cfe2977
msgid "Over time, we stumbled across open-source libraries that did things we'd already implemented. It was reassuring to see other people solving similar problems in similar ways, but it was too late to integrate outside code: We'd already written, tested and implemented our own framework bits in several production settings -- and our own code met our needs delightfully."
msgstr ""

#: ../../faq/general.txt:138
# d623f80ba4ef48cb8c4247ab736ea700
msgid "In most cases, however, we found that existing frameworks/tools inevitably had some sort of fundamental, fatal flaw that made us squeamish. No tool fit our philosophies 100%."
msgstr ""

#: ../../faq/general.txt:142
# eb07abe355804e76bc69210e3d5884a7
msgid "Like we said: We're picky."
msgstr ""

#: ../../faq/general.txt:144
# d0b9dea0c2cf4e9889bcd977302ae2a4
msgid "We've documented our philosophies on the :doc:`design philosophies page </misc/design-philosophies>`."
msgstr ""

#: ../../faq/general.txt:148
# 3ab6526619db4a1bb04c5023feeab2af
msgid "Is Django a content-management-system (CMS)?"
msgstr ""

#: ../../faq/general.txt:150
# 0586b491399b46ac9754b3bd52f522f0
msgid "No, Django is not a CMS, or any sort of \"turnkey product\" in and of itself. It's a Web framework; it's a programming tool that lets you build Web sites."
msgstr ""

#: ../../faq/general.txt:153
# 3aff559c998e48ef873715783def442e
msgid "For example, it doesn't make much sense to compare Django to something like Drupal_, because Django is something you use to *create* things like Drupal."
msgstr ""

#: ../../faq/general.txt:156
# 594dff3e76c545038148edb2a4fd9ab5
msgid "Of course, Django's automatic admin site is fantastic and timesaving -- but the admin site is one module of Django the framework. Furthermore, although Django has special conveniences for building \"CMS-y\" apps, that doesn't mean it's not just as appropriate for building \"non-CMS-y\" apps (whatever that means!)."
msgstr ""

#: ../../faq/general.txt:165
# 4adf2c8b205a467da584ef0251966fe4
msgid "How can I download the Django documentation to read it offline?"
msgstr ""

#: ../../faq/general.txt:167
# 395d13d44c6d4c06b889da7d4442e0ce
msgid "The Django docs are available in the ``docs`` directory of each Django tarball release. These docs are in reST (reStructuredText) format, and each text file corresponds to a Web page on the official Django site."
msgstr ""

#: ../../faq/general.txt:171
# b83e5c5959354f3da142ffd965c3e1e4
msgid "Because the documentation is `stored in revision control`_, you can browse documentation changes just like you can browse code changes."
msgstr ""

#: ../../faq/general.txt:174
# 32ee330cf997463b82d2efdfd2b1f9c2
msgid "Technically, the docs on Django's site are generated from the latest development versions of those reST documents, so the docs on the Django site may offer more information than the docs that come with the latest Django release."
msgstr ""

#: ../../faq/general.txt:181
# cf116a5c106f4adba53ef0e30d089d21
msgid "Where can I find Django developers for hire?"
msgstr ""

#: ../../faq/general.txt:183
# c9a0f9b9750248918d60038c43db1527
msgid "Consult our `developers for hire page`_ for a list of Django developers who would be happy to help you."
msgstr ""

#: ../../faq/general.txt:186
# b1d1d095487a4c91b995bb2f99161c8e
msgid "You might also be interested in posting a job to http://djangogigs.com/ . If you want to find Django-capable people in your local area, try https://people.djangoproject.com/ ."
msgstr ""

#: ../../faq/general.txt:193
# 794abc85369145c9b1bbac58726290fb
msgid "How do I cite Django?"
msgstr ""

#: ../../faq/general.txt:195
# 8b1d1c5f8bba4303b3eb97e9d6e95bac
msgid "It's difficult to give an official citation format, for two reasons: citation formats can vary wildly between publications, and citation standards for software are still a matter of some debate."
msgstr ""

#: ../../faq/general.txt:199
# c547716c10934754a967a7ccc8f98498
msgid "For example, `APA style`_,  would dictate something like::"
msgstr ""

#: ../../faq/general.txt:203
# 9301f846de0f487c86b4b8dbcfb9facd
msgid "However, the only true guide is what your publisher will accept, so get a copy of those guidelines and fill in the gaps as best you can."
msgstr ""

#: ../../faq/general.txt:206
# 607954ff162546f5bf536ff857595d1f
msgid "If your referencing style guide requires a publisher name, use \"Django Software Foundation\"."
msgstr ""

#: ../../faq/general.txt:209
# f3a6326246a04dffa8674cf4e0ecdf62
msgid "If you need a publishing location, use \"Lawrence, Kansas\"."
msgstr ""

#: ../../faq/general.txt:211
# 3325028bb6b14e2fa1e0d26968417b1d
msgid "If you need a web address, use http://djangoproject.com."
msgstr ""

#: ../../faq/general.txt:213
# 1d04ab8614bf4e55b1012a25aa8ada50
msgid "If you need a name, just use \"Django\", without any tagline."
msgstr ""

#: ../../faq/general.txt:215
# f792248aa4834e94926ad302aba22f4e
msgid "If you need a publication date, use the year of release of the version you're referencing (e.g., 2013 for v1.5)"
msgstr ""

#: ../../faq/help.txt:2
# 756619872a064b7c990b004a2316eda9
msgid "FAQ: Getting Help"
msgstr ""

#: ../../faq/help.txt:5
# ab30012a377543278d03c2006d1c4ba6
msgid "How do I do X? Why doesn't Y work? Where can I go to get help?"
msgstr ""

#: ../../faq/help.txt:7
# 7603cf035c9a43e0a9e461c9deeb9c6a
msgid "If this FAQ doesn't contain an answer to your question, you might want to try the `django-users mailing list`_. Feel free to ask any question related to installing, using, or debugging Django."
msgstr ""

#: ../../faq/help.txt:11
# 90618d52a77a48e9a599c6a4eff21d11
msgid "If you prefer IRC, the `#django IRC channel`_ on the Freenode IRC network is an active community of helpful individuals who may be able to solve your problem."
msgstr ""

#: ../../faq/help.txt:18
# 53c67b16c868478dbd286868c4deca8e
msgid "Why hasn't my message appeared on django-users?"
msgstr ""

#: ../../faq/help.txt:20
# bae44e99f4b5488ba13eb5e5ba8a8490
msgid "django-users_ has a lot of subscribers. This is good for the community, as it means many people are available to contribute answers to questions. Unfortunately, it also means that django-users_ is an attractive target for spammers."
msgstr ""

#: ../../faq/help.txt:25
# 03108402e8b648c58a596981025b45f3
msgid "In order to combat the spam problem, when you join the django-users_ mailing list, we manually moderate the first message you send to the list. This means that spammers get caught, but it also means that your first question to the list might take a little longer to get answered. We apologize for any inconvenience that this policy may cause."
msgstr ""

#: ../../faq/help.txt:34
# 56cd289a43934ea2a662270b85e467d2
msgid "Nobody on django-users answered my question! What should I do?"
msgstr ""

#: ../../faq/help.txt:36
# 5ee7cd5c9dcb41918a7839173cf1fa46
msgid "Try making your question more specific, or provide a better example of your problem."
msgstr ""

#: ../../faq/help.txt:39
# 98710135969d4b55b2c7fd9aca677fe0
msgid "As with most open-source mailing lists, the folks on django-users_ are volunteers. If nobody has answered your question, it may be because nobody knows the answer, it may be because nobody can understand the question, or it may be that everybody that can help is busy. One thing you might try is to ask the question on IRC -- visit the `#django IRC channel`_ on the Freenode IRC network."
msgstr ""

#: ../../faq/help.txt:46
# 588f8f344ae744498a0395f65808c69d
msgid "You might notice we have a second mailing list, called django-developers_ -- but please don't email support questions to this mailing list. This list is for discussion of the development of Django itself. Asking a tech support question there is considered quite impolite."
msgstr ""

#: ../../faq/help.txt:54
# f5c5319622cc4ad29a8732dd2cc7f8b4
msgid "I think I've found a bug! What should I do?"
msgstr ""

#: ../../faq/help.txt:56
# d907bce1dada4cb2bc9c45e8ca9300d6
msgid "Detailed instructions on how to handle a potential bug can be found in our :ref:`Guide to contributing to Django <reporting-bugs>`."
msgstr ""

#: ../../faq/help.txt:60
# 24d0f62218d346e7b832706e000565b8
msgid "I think I've found a security problem! What should I do?"
msgstr ""

#: ../../faq/help.txt:62
# c5a4b675f3a64fbf972b9b92892cd375
msgid "If you think you've found a security problem with Django, please send a message to security@djangoproject.com. This is a private list only open to long-time, highly trusted Django developers, and its archives are not publicly readable."
msgstr ""

#: ../../faq/help.txt:66
# 1e4cdb6e148d41949274934d5ccc767a
msgid "Due to the sensitive nature of security issues, we ask that if you think you have found a security problem, *please* don't send a message to one of the public mailing lists. Django has a :ref:`policy for handling security issues <reporting-security-issues>`; while a defect is outstanding, we would like to minimize any damage that could be inflicted through public knowledge of that defect."
msgstr ""

#: ../../faq/index.txt:3
# 18f07ae282af41038dcee9434ea118b8
msgid "Django FAQ"
msgstr ""

#: ../../faq/install.txt:2
# 087f17420c12429e824b6d388da13b19
msgid "FAQ: Installation"
msgstr ""

#: ../../faq/install.txt:5
# b32681b4c918468bb2fd5a14153b5c9f
msgid "How do I get started?"
msgstr ""

#: ../../faq/install.txt:7
# fb50733d8498433780f88fbcde9bdd83
msgid "`Download the code`_."
msgstr ""

#: ../../faq/install.txt:8
# bba967423d5a4055963132c6cc17e39a
msgid "Install Django (read the :doc:`installation guide </intro/install>`)."
msgstr ""

#: ../../faq/install.txt:9
# 721821ff407a4ca5a39bcd609686c007
msgid "Walk through the :doc:`tutorial </intro/tutorial01>`."
msgstr ""

#: ../../faq/install.txt:10
# 7d367318894e4462bc9fe9c3747a54fa
msgid "Check out the rest of the :doc:`documentation </index>`, and `ask questions`_ if you run into trouble."
msgstr ""

#: ../../faq/install.txt:17
# 4a4d0e6934824a79bf78e970440ac039
msgid "What are Django's prerequisites?"
msgstr ""

#: ../../faq/install.txt:19
# 9d4daffddb1f46e38b35c31472806f6a
msgid "Django requires Python, specifically Python 2.6.5 - 2.7.x, or 3.2.3 and above. No other Python libraries are required for basic Django usage."
msgstr ""

#: ../../faq/install.txt:22
# 6650a6c7a84a4004b760ce182795eaa8
msgid "For a development environment -- if you just want to experiment with Django -- you don't need to have a separate Web server installed; Django comes with its own lightweight development server. For a production environment, Django follows the WSGI spec, :pep:`3333`, which means it can run on a variety of server platforms. See :doc:`Deploying Django </howto/deployment/index>` for some popular alternatives. Also, the `server arrangements wiki page`_ contains details for several deployment strategies."
msgstr ""

#: ../../faq/install.txt:30
# 4d5b7a17cc1244ecac948d6350e6a1be
msgid "If you want to use Django with a database, which is probably the case, you'll also need a database engine. PostgreSQL_ is recommended, because we're PostgreSQL fans, and MySQL_, `SQLite 3`_, and Oracle_ are also supported."
msgstr ""

#: ../../faq/install.txt:42
# 52aea5ae6c254abb9aa20b81e736c527
msgid "What Python version can I use with Django?"
msgstr ""

#: ../../faq/install.txt:45
# 676bb412b7594cd98d00a3f67679cac0
msgid "Django version"
msgstr ""

#: ../../faq/install.txt:45
# a9fb5b48c25e4b8299cfd8ad972e3fd0
msgid "Python versions"
msgstr ""

#: ../../faq/install.txt:47
# 685e07be4df4490eab662a4a626da316
msgid "1.0"
msgstr ""

#: ../../faq/install.txt:47
#: ../../faq/install.txt:48
# 120c9835d8334d2696840b797b2de192
# 76e7e18c7b754fa08ecf2237d17c3764
msgid "2.3, 2.4, 2.5, 2.6"
msgstr ""

#: ../../faq/install.txt:48
# 67723657e74e49b39dab47e02f368cca
msgid "1.1"
msgstr ""

#: ../../faq/install.txt:49
# 079bbee9af2548b2b658d8a9be0dbddf
msgid "1.2"
msgstr ""

#: ../../faq/install.txt:49
#: ../../faq/install.txt:50
# 91d9413a5abf46bf847db8efd7a612fe
# 0b9c7542bff04c4abb8ca3ce5dc3d5c3
msgid "2.4, 2.5, 2.6, 2.7"
msgstr ""

#: ../../faq/install.txt:50
# f8f08db7f2b2400da5cadec7f677b9a8
msgid "1.3"
msgstr ""

#: ../../faq/install.txt:51
# 83e160192e5a458b87675d2e4694485e
msgid "1.4"
msgstr ""

#: ../../faq/install.txt:51
# 772528386e51448495c5a7cdf656af77
msgid "2.5, 2.6, 2.7"
msgstr ""

#: ../../faq/install.txt:52
# 0e4f1c651f884049a2ca285d02fee9b7
msgid "1.5"
msgstr ""

#: ../../faq/install.txt:52
# 25b21e7936024384be2d91d401431945
msgid "2.6, 2.7 and 3.2, 3.3 (experimental)"
msgstr ""

#: ../../faq/install.txt:53
# 74bc660b0aa34b7c849a15e32b65e5ff
msgid "**1.6**"
msgstr ""

#: ../../faq/install.txt:53
# 1025379825ec43bba32727bb03e2d087
msgid "**2.6, 2.7** and **3.2, 3.3**"
msgstr ""

#: ../../faq/install.txt:54
# ba9a912757b64febb856dfc4923688ed
msgid "*1.7 (future)*"
msgstr ""

#: ../../faq/install.txt:54
# 0f903770634c4d76b2aa9f537648a498
msgid "*2.7* and *3.2, 3.3*"
msgstr ""

#: ../../faq/install.txt:57
# 53fc40361894450ba3a0ba99cc7bf03f
msgid "For a given series of Python versions, only the latest release is officially supported. For instance, at the time of writing (July 1st, 2013), the latest release in the 2.7 series is 2.7.5."
msgstr ""

#: ../../faq/install.txt:62
# 740f4f5aabe1423fbb64ef284dccb5b4
msgid "What Python version should I use with Django?"
msgstr ""

#: ../../faq/install.txt:64
# da239022d80a4b1cbb2a69af8591ef93
msgid "As of Django 1.6, Python 3 support is considered stable and you can safely use it in production. See also :doc:`/topics/python3`. However, the community is still in the process of migrating third-party packages and applications to Python 3."
msgstr ""

#: ../../faq/install.txt:69
# 85d0edd4d1ef4fd7b8993323c167a4be
msgid "If you're starting a new project, and the dependencies you plan to use work on Python 3, you should use Python 3. If they don't, consider contributing to the porting efforts, or stick to Python 2."
msgstr ""

#: ../../faq/install.txt:73
# 4bf6f222b4174a20a478fdd3d285e95f
msgid "Since newer versions of Python are often faster, have more features, and are better supported, all else being equal, we recommend that you use the latest 2.x.y or 3.x.y release."
msgstr ""

#: ../../faq/install.txt:77
# 4e88b1803cf543529f03b9dd5dc74690
msgid "You don't lose anything in Django by using an older release, but you don't take advantage of the improvements and optimizations in newer Python releases. Third-party applications for use with Django are, of course, free to set their own version requirements."
msgstr ""

#: ../../faq/install.txt:83
# fdefc21c003c406ebc9d9a7cf5c00345
msgid "Will Django run under shared hosting (like TextDrive or Dreamhost)?"
msgstr ""

#: ../../faq/install.txt:85
# d6bb754b8a1948ce86d42784a0ce0321
msgid "See our `Django-friendly Web hosts`_ page."
msgstr ""

#: ../../faq/install.txt:90
# d62850c78a7b466c833f2892f3c852c0
msgid "Should I use the stable version or development version?"
msgstr ""

#: ../../faq/install.txt:92
# 4479926e95774db486de850694706ae3
msgid "Generally, if you're using code in production, you should be using a stable release. The Django project publishes a full stable release every nine months or so, with bugfix updates in between. These stable releases contain the API that is covered by our backwards compatibility guarantees; if you write code against stable releases, you shouldn't have any problems upgrading when the next official version is released."
msgstr ""

#: ../../faq/models.txt:2
# 4dfe713f881d4493b556d434fb9df96a
msgid "FAQ: Databases and models"
msgstr ""

#: ../../faq/models.txt:7
# 4ddebb3cf7b0472f98cf45810a65151c
msgid "How can I see the raw SQL queries Django is running?"
msgstr ""

#: ../../faq/models.txt:9
# 7875883dbca241859a01edf5871db05f
msgid "Make sure your Django :setting:`DEBUG` setting is set to ``True``. Then, just do this::"
msgstr ""

#: ../../faq/models.txt:17
# 5800e0cbb8114ab1a271fa2e68dfc361
msgid "``connection.queries`` is only available if :setting:`DEBUG` is ``True``. It's a list of dictionaries in order of query execution. Each dictionary has the following::"
msgstr ""

#: ../../faq/models.txt:24
# c64a04bdbb994bb69d17693f7918382b
msgid "``connection.queries`` includes all SQL statements -- INSERTs, UPDATES, SELECTs, etc. Each time your app hits the database, the query will be recorded. Note that the SQL recorded here may be :ref:`incorrectly quoted under SQLite <sqlite-connection-queries>`."
msgstr ""

#: ../../faq/models.txt:29
# f6f2d827698343cc93c262118f3aad6e
msgid "If you are using :doc:`multiple databases</topics/db/multi-db>`, you can use the same interface on each member of the ``connections`` dictionary::"
msgstr ""

#: ../../faq/models.txt:36
# 4e0ef98f5cae43549614a80314d0e114
msgid "Can I use Django with a pre-existing database?"
msgstr ""

#: ../../faq/models.txt:38
# d371b1711c6141b69e82ba078172b91f
msgid "Yes. See :doc:`Integrating with a legacy database </howto/legacy-databases>`."
msgstr ""

#: ../../faq/models.txt:41
# 0dd72980b0024bef8d64b1e39120163a
msgid "If I make changes to a model, how do I update the database?"
msgstr ""

#: ../../faq/models.txt:43
# bc18cff26d9f4386873ccf5d9261024f
msgid "If you don't mind clearing data, your project's ``manage.py`` utility has a :djadmin:`flush` option to reset the database to the state it was in immediately after :djadmin:`syncdb` was executed."
msgstr ""

#: ../../faq/models.txt:47
# aee86ee911404578823e214502c4da09
msgid "If you do care about deleting data, you'll have to execute the ``ALTER TABLE`` statements manually in your database."
msgstr ""

#: ../../faq/models.txt:50
# d62f32e7199b40ab8b151f71b53d0a81
msgid "There are `external projects which handle schema updates <http://www.djangopackages.com/grids/g/database-migration/>`_, of which the current defacto standard is `south <http://south.aeracode.org/>`_."
msgstr ""

#: ../../faq/models.txt:55
# 16992883605a4e17a10c76ff1b0a5049
msgid "Do Django models support multiple-column primary keys?"
msgstr ""

#: ../../faq/models.txt:57
# fd475ef762b04b01b0639a76b1cce82c
msgid "No. Only single-column primary keys are supported."
msgstr ""

#: ../../faq/models.txt:59
# 59e84267b87f4fbbabb2e60b640c9a20
msgid "But this isn't an issue in practice, because there's nothing stopping you from adding other constraints (using the ``unique_together`` model option or creating the constraint directly in your database), and enforcing the uniqueness at that level. Single-column primary keys are needed for things such as the admin interface to work; e.g., you need a simple way of being able to specify an object to edit or delete."
msgstr ""

#: ../../faq/models.txt:67
# 9c78c78550d14823ab3ca90f0f8d080e
msgid "How do I add database-specific options to my CREATE TABLE statements, such as specifying MyISAM as the table type?"
msgstr ""

#: ../../faq/models.txt:69
# ba19a7791f954b439ebbc5d289f67245
msgid "We try to avoid adding special cases in the Django code to accommodate all the database-specific options such as table type, etc. If you'd like to use any of these options, create an :ref:`SQL initial data file <initial-sql>` that contains ``ALTER TABLE`` statements that do what you want to do. The initial data files are executed in your database after the ``CREATE TABLE`` statements."
msgstr ""

#: ../../faq/models.txt:75
# c97d755929414babbe1d7e60bc7874b6
msgid "For example, if you're using MySQL and want your tables to use the MyISAM table type, create an initial data file and put something like this in it::"
msgstr ""

#: ../../faq/models.txt:80
# dd5e9acce6d349299643c401f2af3762
msgid "As explained in the :ref:`SQL initial data file <initial-sql>` documentation, this SQL file can contain arbitrary SQL, so you can make any sorts of changes you need to make."
msgstr ""

#: ../../faq/models.txt:85
# 02ab0b38dbf64cb68e2d000176b35fea
msgid "Why is Django leaking memory?"
msgstr ""

#: ../../faq/models.txt:87
# feaa1dc691da4403ac02c9bba2c785d4
msgid "Django isn't known to leak memory. If you find your Django processes are allocating more and more memory, with no sign of releasing it, check to make sure your :setting:`DEBUG` setting is set to ``False``. If :setting:`DEBUG` is ``True``, then Django saves a copy of every SQL statement it has executed."
msgstr ""

#: ../../faq/models.txt:92
# 660a52d1913f42c78443773a5ba72499
msgid "(The queries are saved in ``django.db.connection.queries``. See `How can I see the raw SQL queries Django is running?`_.)"
msgstr ""

#: ../../faq/models.txt:95
# 525bfc97001f4961b433b85ee38b7ed5
msgid "To fix the problem, set :setting:`DEBUG` to ``False``."
msgstr ""

#: ../../faq/models.txt:97
# e97f0f0973cd48cd948ac4e3f5c6ea62
msgid "If you need to clear the query list manually at any point in your functions, just call ``reset_queries()``, like this::"
msgstr ""

#: ../../faq/troubleshooting.txt:3
# 9e397b56e6b4476399ec6f1c00519213
msgid "Troubleshooting"
msgstr ""

#: ../../faq/troubleshooting.txt:5
# 69b5d2b23b0e4f0ab5b1c7faa5da65fa
msgid "This page contains some advice about errors and problems commonly encountered during the development of Django applications."
msgstr ""

#: ../../faq/troubleshooting.txt:11
# 4996241724fd4489b3ec381df7c53fe2
msgid "Problems running django-admin.py"
msgstr ""

#: ../../faq/troubleshooting.txt:14
# 8f41560ecf554769a546cd40e654989b
msgid "\"command not found: django-admin.py\""
msgstr ""

#: ../../faq/troubleshooting.txt:16
# 537f304c10ef49c59ba446c5857e6d7d
msgid ":doc:`django-admin.py </ref/django-admin>` should be on your system path if you installed Django via ``python setup.py``. If it's not on your path, you can find it in ``site-packages/django/bin``, where ``site-packages`` is a directory within your Python installation. Consider symlinking to :doc:`django-admin.py </ref/django-admin>` from some place on your path, such as :file:`/usr/local/bin`."
msgstr ""

#: ../../faq/troubleshooting.txt:24
# 220b365a36e0442dbe0afc1b0c2ded13
msgid "Script name may differ in distribution packages"
msgstr ""

#: ../../faq/troubleshooting.txt:26
# 28a344a514104a72a14f74f0bad360a9
msgid "If you installed Django using a Linux distribution's package manager (e.g. ``apt-get`` or ``yum``) ``django-admin.py`` may have been renamed to ``django-admin``; use that instead."
msgstr ""

#: ../../faq/troubleshooting.txt:31
# ea0f7a1418f0437e813deea82f90644c
msgid "Mac OS X permissions"
msgstr ""

#: ../../faq/troubleshooting.txt:33
# 09633e39993044428d101d6e4dd8ab38
msgid "If you're using Mac OS X, you may see the message \"permission denied\" when you try to run ``django-admin.py``. This is because, on Unix-based systems like OS X, a file must be marked as \"executable\" before it can be run as a program. To do this, open Terminal.app and navigate (using the ``cd`` command) to the directory where :doc:`django-admin.py </ref/django-admin>` is installed, then run the command ``sudo chmod +x django-admin.py``."
msgstr ""

#: ../../faq/troubleshooting.txt:41
# a65506d491074af5aab8546ea4ad1a1d
msgid "Running virtualenv on Windows"
msgstr ""

#: ../../faq/troubleshooting.txt:43
# 518d2c6420e64f29bd59ad59346da5f8
msgid "If you used virtualenv_ to :ref:`install Django <installing-official-release>` on Windows, you may get an ``ImportError`` when you try to run ``django-admin.py``. This is because Windows does not run the Python interpreter from your virtual environment unless you invoke it directly. Instead, prefix all commands that use .py files with ``python`` and use the full path to the file, like so: ``python C:\\pythonXY\\Scripts\\django-admin.py``."
msgstr ""

#: ../../faq/usage.txt:2
# 309b6b8d9ad642b38b9e5ffaaffaa14c
msgid "FAQ: Using Django"
msgstr ""

#: ../../faq/usage.txt:5
# 7b86bff05a794330aad909470427c01d
msgid "Why do I get an error about importing DJANGO_SETTINGS_MODULE?"
msgstr ""

#: ../../faq/usage.txt:7
# 92bebc7dc5364e58a9254c6680da7308
msgid "Make sure that:"
msgstr ""

#: ../../faq/usage.txt:9
# 0f7a977b35fc42919e1bc7f8d40a73c0
msgid "The environment variable DJANGO_SETTINGS_MODULE is set to a fully-qualified Python module (i.e. \"mysite.settings\")."
msgstr ""

#: ../../faq/usage.txt:12
# 663e8bcef5c84e0891a2b4682f3f9277
msgid "Said module is on ``sys.path`` (``import mysite.settings`` should work)."
msgstr ""

#: ../../faq/usage.txt:14
# cc352063d29d414d9727602b00121ff7
msgid "The module doesn't contain syntax errors (of course)."
msgstr ""

#: ../../faq/usage.txt:17
# d7199c631ccb42edb7f413e924b2d0c9
msgid "I can't stand your template language. Do I have to use it?"
msgstr ""

#: ../../faq/usage.txt:19
# bd3bd42dbaf84e8bb2d6db1cbaafb5bc
msgid "We happen to think our template engine is the best thing since chunky bacon, but we recognize that choosing a template language runs close to religion. There's nothing about Django that requires using the template language, so if you're attached to ZPT, Cheetah, or whatever, feel free to use those."
msgstr ""

#: ../../faq/usage.txt:25
# f2b502d0dcdb431981108d22afee9153
msgid "Do I have to use your model/database layer?"
msgstr ""

#: ../../faq/usage.txt:27
# 4b68ec05b94c417cb4be6632296e65f8
msgid "Nope. Just like the template system, the model/database layer is decoupled from the rest of the framework."
msgstr ""

#: ../../faq/usage.txt:30
# 39c3a25a3cee4ee097c9603f6a2c15cd
msgid "The one exception is: If you use a different database library, you won't get to use Django's automatically-generated admin site. That app is coupled to the Django database layer."
msgstr ""

#: ../../faq/usage.txt:35
# fe5b3ae790b24a9e82487539e9e4a37c
msgid "How do I use image and file fields?"
msgstr ""

#: ../../faq/usage.txt:37
# 9548c38885f5482eabd411984c7f01bc
msgid "Using a :class:`~django.db.models.FileField` or an :class:`~django.db.models.ImageField` in a model takes a few steps:"
msgstr ""

#: ../../faq/usage.txt:40
# 76f0b7822f7e43cd9c095fdbf5e24662
msgid "In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the full path to a directory where you'd like Django to store uploaded files. (For performance, these files are not stored in the database.) Define :setting:`MEDIA_URL` as the base public URL of that directory. Make sure that this directory is writable by the Web server's user account."
msgstr ""

#: ../../faq/usage.txt:47
# 0dfbc7f4b8fb4f139dbf89e2d68fa3f7
msgid "Add the :class:`~django.db.models.FileField` or :class:`~django.db.models.ImageField` to your model, making sure to define the :attr:`~django.db.models.FileField.upload_to` option to tell Django to which subdirectory of :setting:`MEDIA_ROOT` it should upload files."
msgstr ""

#: ../../faq/usage.txt:53
# 5373218e55b7482c9d31db16f350d90c
msgid "All that will be stored in your database is a path to the file (relative to :setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:`~django.db.models.fields.files.FieldFile.url` attribute provided by Django. For example, if your :class:`~django.db.models.ImageField` is called ``mug_shot``, you can get the absolute path to your image in a template with ``{{ object.mug_shot.url }}``."
msgstr ""

#: ../../faq/usage.txt:62
# 42c05830a53d49398d3c7bb0447cf015
msgid "How do I make a variable available to all my templates?"
msgstr ""

#: ../../faq/usage.txt:64
# b61f8e408595408889b49ed5430c08e2
msgid "Sometimes your templates just all need the same thing. A common example would be dynamically-generated menus. At first glance, it seems logical to simply add a common dictionary to the template context."
msgstr ""

#: ../../faq/usage.txt:68
# ba7b9f7073954512acc39b1ab9cf4107
msgid "The correct solution is to use a ``RequestContext``. Details on how to do this are here: :ref:`subclassing-context-requestcontext`."
msgstr ""

