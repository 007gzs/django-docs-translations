# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-02 15:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../internals/committers.txt:3
# 19dac1a48b0b4cb9a82bc7ae4a00133c
msgid "Django committers"
msgstr ""

#: ../../internals/committers.txt:6
# 1e06ed30434b4cccbebc04b20d1ba933
msgid "The original team"
msgstr ""

#: ../../internals/committers.txt:8
# 50a6c3d19ce04760b39bd1fbf82af139
msgid "Django originally started at World Online, the Web department of the `Lawrence Journal-World`_ of Lawrence, Kansas, USA."
msgstr ""

#: ../../internals/committers.txt:21
# 2bf1a91681f840a7bf4af9876ac6ce59
msgid "`Adrian Holovaty`_"
msgstr ""

#: ../../internals/committers.txt:12
# 9e37c09730814d14a686a670080cd4b5
msgid "Adrian is a Web developer with a background in journalism. He's known in journalism circles as one of the pioneers of \"journalism via computer programming\", and in technical circles as \"the guy who invented Django.\""
msgstr ""

#: ../../internals/committers.txt:16
# 933b6deb306e4372a1ba62a5e280242b
msgid "He was lead developer at World Online for 2.5 years, during which time Django was developed and implemented on World Online's sites. He was the leader and founder of EveryBlock_, a \"news feed for your block.\" He now develops for Soundslice_."
msgstr ""

#: ../../internals/committers.txt:21
# 6a0a23c2f4254599a144f38861092139
msgid "Adrian lives in Chicago, USA."
msgstr ""

#: ../../internals/committers.txt:30
# fbde28fa2a334659934e2abcca535784
msgid "`Simon Willison`_"
msgstr ""

#: ../../internals/committers.txt:24
# a7ad1c14414743ec9c4e2544dd5e2a11
msgid "Simon is a well-respected Web developer from England. He had a one-year internship at World Online, during which time he and Adrian developed Django from scratch. The most enthusiastic Brit you'll ever meet, he's passionate about best practices in Web development and maintains a well-read `web-development blog`_."
msgstr ""

#: ../../internals/committers.txt:30
# d8765b1276ae40b0ad81bc09f4a258a0
msgid "Simon lives in Brighton, England."
msgstr ""

#: ../../internals/committers.txt:36
# e24b4555b1844471807860091f15435a
msgid "`Jacob Kaplan-Moss`_"
msgstr ""

#: ../../internals/committers.txt:33
# a479b7746ef741868eee81f60a04a3cf
msgid "Jacob is Director of Platform Security at Heroku_. He worked at World Online for four years, where he helped open source Django and found the Django Software Foundation. Jacob lives on a hobby farm outside of Lawrence where he spends his weekends playing with dirt and power tools."
msgstr ""

#: ../../internals/committers.txt:44
# 8f6e2f18784b4659acca668a4eda0dde
msgid "`Wilson Miner`_"
msgstr ""

#: ../../internals/committers.txt:39
# 39fe45cf8c5c4a43a862a1c71fa87ae3
msgid "Wilson's design-fu is what makes Django look so nice. He designed the Web site you're looking at right now, as well as Django's acclaimed admin interface. Wilson was the designer for EveryBlock and Rdio_. He now designs for Facebook."
msgstr ""

#: ../../internals/committers.txt:44
# b54ff5de9a7b4e35ba0efd2ce3644e46
msgid "Wilson lives in San Francisco, USA."
msgstr ""

#: ../../internals/committers.txt:59
# 4c8e7622b31c4a2e9930a3718116cfab
msgid "Current developers"
msgstr ""

#: ../../internals/committers.txt:61
# b36b570eea3344ff9095bccec012f0a4
msgid "Currently, Django is led by a team of volunteers from around the globe."
msgstr ""

#: ../../internals/committers.txt:66
# dff02b94a82f40db8201af395afcd125
msgid "BDFLs"
msgstr ""

#: ../../internals/committers.txt:68
# be90b9133dbb4993b15dc8d98f990baa
msgid "Adrian and Jacob are the Co-`Benevolent Dictators for Life`_ of Django. When \"rough consensus and working code\" fails, they're the ones who make the tough decisions."
msgstr ""

#: ../../internals/committers.txt:75
# fbb50c1b27474623ab662c2059ebbef3
msgid "Core developers"
msgstr ""

#: ../../internals/committers.txt:77
# 69c00a6ca22444caacf0a70f061d8f6f
msgid "These are the folks who have a long history of contributions, a solid track record of being helpful on the mailing lists, and a proven desire to dedicate serious time to Django. In return, they've been granted the coveted commit bit, and have free rein to hack on all parts of Django."
msgstr ""

#: ../../internals/committers.txt:90
# b5391cab00a0416ca886fbc94efd95f5
msgid "Malcolm Tredinnick"
msgstr ""

#: ../../internals/committers.txt:83
# e8afb04c24984aa0ae897ede090e9c6c
msgid "Malcolm originally wanted to be a mathematician, somehow ended up a software developer. He's contributed to many Open Source projects, has served on the board of the GNOME foundation, and will kick your ass at chess."
msgstr ""

#: ../../internals/committers.txt:87
# f6a3cb9c9774470a825be2de6c150530
msgid "When he's not busy being an International Man of Mystery, Malcolm lives in Sydney, Australia."
msgstr ""

#: ../../internals/committers.txt:90
# 92d5e155e3944a91954c7e9a2201e533
msgid "*Malcolm passed away on March 17, 2013.*"
msgstr ""

#: ../../internals/committers.txt:104
# ef7056eb5b7245d692e66f80fb0dd382
msgid "`Luke Plant`_"
msgstr ""

#: ../../internals/committers.txt:93
# 1beae8913a3a46209564819dcd833171
msgid "At University Luke studied physics and Materials Science and also met `Michael Meeks`_ who introduced him to Linux and Open Source, re-igniting an interest in programming.  Since then he has contributed to a number of Open Source projects and worked professionally as a developer."
msgstr ""

#: ../../internals/committers.txt:99
# 1a5b514623444b1298e2dfadba173810
msgid "Luke has contributed many excellent improvements to Django, including database-level improvements, the CSRF middleware and many unit tests."
msgstr ""

#: ../../internals/committers.txt:103
# fe047da796af43cfa0d8cfb3b2542db6
msgid "Luke currently works for a church in Bradford, UK, and part-time as a freelance developer."
msgstr ""

#: ../../internals/committers.txt:119
# 8dcd427c100e4b1aa7dea5f4f57f41f4
msgid "`Russell Keith-Magee`_"
msgstr ""

#: ../../internals/committers.txt:110
# 2eecde5bdb26480eb4eba46967e8d195
msgid "Russell studied physics as an undergraduate, and studied neural networks for his PhD. His first job was with a startup in the defense industry developing simulation frameworks. Over time, mostly through work with Django, he's become more involved in Web development."
msgstr ""

#: ../../internals/committers.txt:115
# af42c04961c14a34ba664e82de18c061
msgid "Russell has helped with several major aspects of Django, including a couple major internal refactorings, creation of the test system, and more."
msgstr ""

#: ../../internals/committers.txt:118
# ecdd59a11a56445f96074c50d4d62694
msgid "Russell lives in the most isolated capital city in the world â€” Perth, Australia."
msgstr ""

#: ../../internals/committers.txt:133
# 61f4024a31c7458e9b58e7e2a41ec59a
msgid "`James Bennett`_"
msgstr ""

#: ../../internals/committers.txt:124
# f3e5d3d4a3494ab390f16bf8e3120e6f
msgid "James is Django's release manager, and also contributes to the documentation and provide the occasional bugfix."
msgstr ""

#: ../../internals/committers.txt:127
# bc6672a8a813458cbb52c29dfa90f93b
msgid "James came to Web development from philosophy when he discovered that programmers get to argue just as much while collecting much better pay. He lives in Lawrence, Kansas and previously worked at World Online; currently, he's part of the Web development team at Mozilla."
msgstr ""

#: ../../internals/committers.txt:133
# a60eb88e58434402b47c73d6e8e5143d
msgid "He `keeps a blog`_, and enjoys fine port and talking to his car."
msgstr ""

#: ../../internals/committers.txt:148
# 7e45f7c18dd54beca1d45391963fa8b4
msgid "`Gary Wilson`_"
msgstr ""

#: ../../internals/committers.txt:139
# 272edda895364ba3b4dbff75d3edbc82
msgid "Gary starting contributing patches to Django in 2006 while developing Web applications for `The University of Texas`_ (UT).  Since, he has made contributions to the email and forms systems, as well as many other improvements and code cleanups throughout the code base."
msgstr ""

#: ../../internals/committers.txt:144
# f7c4201953ad4ba9aecb583efaf9fb70
msgid "Gary is currently a developer and software engineering graduate student at UT, where his dedication to spreading the ways of Python and Django never ceases."
msgstr ""

#: ../../internals/committers.txt:148
# d030c683a22a48d2aaf5d618870f75ce
msgid "Gary lives in Austin, Texas, USA."
msgstr ""

#: ../../internals/committers.txt:154
# b82d4dd4f83c4d208edd898e1bdc02fa
msgid "Matt Boersma"
msgstr ""

#: ../../internals/committers.txt:154
# 4bca256408094816bd65403ca69b19e7
msgid "Matt is responsible for Django's Oracle support."
msgstr ""

#: ../../internals/committers.txt:157
# 0ec849c9d84b4cc8942539364a5d2732
msgid "Ian Kelly"
msgstr ""

#: ../../internals/committers.txt:157
# 47c4735f066a4b6fb79a87189b673bca
msgid "Ian is also responsible for Django's support for Oracle."
msgstr ""

#: ../../internals/committers.txt:171
# 1a272b8c49ef4b62af41c1e7b47aad0d
msgid "Joseph Kocherhans"
msgstr ""

#: ../../internals/committers.txt:160
# 6ce9f13280be4545a72f5a92d3efe739
msgid "Joseph was the director of lead development at EveryBlock and previously developed at the Lawrence Journal-World. He is treasurer of the `Django Software Foundation`_. He often disappears for several days into the woods, attempts to teach himself computational linguistics, and annoys his neighbors with his Charango_ playing."
msgstr ""

#: ../../internals/committers.txt:166
# 2ed83d72d8d147d4b064bdc839f3c8f2
msgid "Joseph's first contribution to Django was a series of improvements to the authorization system leading up to support for pluggable authorization. Since then, he's worked on the new forms system, its use in the admin, and many other smaller improvements."
msgstr ""

#: ../../internals/committers.txt:171
# 61da5a8f469b43ad9c9f67a9bdeae71e
msgid "Joseph lives in Chicago, USA."
msgstr ""

#: ../../internals/committers.txt:186
# 5892e0a9004a4cab97d0c860d54b8ebd
msgid "`Brian Rosner`_"
msgstr ""

#: ../../internals/committers.txt:177
# 44fd6c60dae44672b9381aab0d158ef0
msgid "Brian is the Chief Architect at Eldarion_ managing and developing Django / Pinax_ based Web sites. He enjoys learning more about programming languages and system architectures and contributing to open source projects."
msgstr ""

#: ../../internals/committers.txt:182
# 42c9d616279f49cb80d00e6c08945f2b
msgid "Brian helped immensely in getting Django's \"newforms-admin\" branch finished in time for Django 1.0; he's now a full committer, continuing to improve on the admin and forms system."
msgstr ""

#: ../../internals/committers.txt:186
# 2f46005f1e2d4ccfa3fcedd78b04d681
msgid "Brian lives in Denver, Colorado, USA."
msgstr ""

#: ../../internals/committers.txt:201
# d66864ab5dc548fb9c4f229890d9c8cd
msgid "Justin Bronn"
msgstr ""

#: ../../internals/committers.txt:193
# 607046310b5a4fe8b4bbe706fc51c6f8
msgid "Justin Bronn is a computer scientist and attorney specializing in legal topics related to intellectual property and spatial law."
msgstr ""

#: ../../internals/committers.txt:196
# 09aca6352cb544afb0ef0a42b9452991
msgid "In 2007, Justin began developing ``django.contrib.gis`` in a branch, a.k.a. GeoDjango_, which was merged in time for Django 1.0.  While implementing GeoDjango, Justin obtained a deep knowledge of Django's internals including the ORM, the admin, and Oracle support."
msgstr ""

#: ../../internals/committers.txt:201
# 3e2436f3114e490cb9d7be7e704b4300
msgid "Justin lives in San Francisco, CA."
msgstr ""

#: ../../internals/committers.txt:213
# 29f7474ece7c4de989940cca4f6bbc23
msgid "Karen Tracey"
msgstr ""

#: ../../internals/committers.txt:206
# 9b28e8e6f7a941b2a112b260328c8e2b
msgid "Karen has a background in distributed operating systems (graduate school), communications software (industry) and crossword puzzle construction (freelance).  The last of these brought her to Django, in late 2006, when she set out to put a Web front-end on her crossword puzzle database. That done, she stuck around in the community answering questions, debugging problems, etc. -- because coding puzzles are as much fun as word puzzles."
msgstr ""

#: ../../internals/committers.txt:213
# 676a7577b39f474cb37e4c01406c9f8b
msgid "Karen lives in Apex, NC, USA."
msgstr ""

#: ../../internals/committers.txt:224
# f4369cd0f8ec4adba11872644189a334
msgid "`Jannis Leidel`_"
msgstr ""

#: ../../internals/committers.txt:216
# 58eff3a760ba4573bda05aaffb18900a
msgid "Jannis graduated in media design from `Bauhaus-University Weimar`_, is the author of a number of pluggable Django apps and likes to contribute to Open Source projects like virtualenv_ and pip_."
msgstr ""

#: ../../internals/committers.txt:220
# d40c62d7208f46e08fdc61bda8752672
msgid "He has worked on Django's auth, admin and staticfiles apps as well as the form, core, internationalization and test systems. He currently works at Mozilla_."
msgstr ""

#: ../../internals/committers.txt:224
# 6a40e25a14824b45a8fb4d558f8927bc
msgid "Jannis lives in Berlin, Germany."
msgstr ""

#: ../../internals/committers.txt:241
# 959e0b3b79db49b9b6f4acc29ced7358
msgid "`James Tauber`_"
msgstr ""

#: ../../internals/committers.txt:233
# b11cc99aafb746a48ff4b9efc969a986
msgid "James is the lead developer of Pinax_ and the CEO and founder of Eldarion_. He has been doing open source software since 1993, Python since 1998 and Django since 2006. He serves on the board of the Python Software Foundation and is currently on a leave of absence from a PhD in linguistics."
msgstr ""

#: ../../internals/committers.txt:239
# d6d7e69c5a054cd8b90ee7c5dd692073
msgid "James currently lives in Boston, MA, USA but originally hails from Perth, Western Australia where he attended the same high school as Russell Keith-Magee."
msgstr ""

#: ../../internals/committers.txt:251
# b1a035997b60400c97c3d528775f9f79
msgid "`Alex Gaynor`_"
msgstr ""

#: ../../internals/committers.txt:246
# 7cd9aabdbbef4a679c7526a404a2b65f
msgid "Alex is a software engineer working at Rackspace_. He found Django in 2007 and has been addicted ever since he found out you don't need to write out your forms by hand. He has a small obsession with compilers.  He's contributed to the ORM, forms, admin, and other components of Django."
msgstr ""

#: ../../internals/committers.txt:251
# f35096aeeea547fa9a23525ced3af5a3
msgid "Alex lives in San Francisco, CA, USA."
msgstr ""

#: ../../internals/committers.txt:261
# 4f9e69ba80fe402dada59e2080e33997
msgid "`Simon Meers`_"
msgstr ""

#: ../../internals/committers.txt:257
# cb76a69f779c4f119c30ebbc4c23bc3a
msgid "Simon discovered Django 0.96 during his Computer Science PhD research and has been developing with it full-time ever since. His core code contributions are mostly in Django's admin application."
msgstr ""

#: ../../internals/committers.txt:261
# bfb860d22a4d45b1a45c6e4c276054d4
msgid "Simon works as a freelance developer based in Wollongong, Australia."
msgstr ""

#: ../../internals/committers.txt:272
# 60ece03ff7704dc8913dcb867b583e1f
msgid "`Andrew Godwin`_"
msgstr ""

#: ../../internals/committers.txt:266
# 03326cc3ace84c40bd1487712bcb14b2
msgid "Andrew is a freelance Python developer and tinkerer, and has been developing against Django since 2007. He graduated from Oxford University with a degree in Computer Science, and has become most well known in the Django community for his work on South, the schema migrations library."
msgstr ""

#: ../../internals/committers.txt:272
# 1a733d0bf0bd43e6898e54c7fd7aa8a1
msgid "Andrew lives in London, UK."
msgstr ""

#: ../../internals/committers.txt:282
# 461c2106a6684536a69865c2ccd2b66e
msgid "`Carl Meyer`_"
msgstr ""

#: ../../internals/committers.txt:277
# 7d069fc965bb44fabc7e56e5f3b32416
msgid "Carl has been working with Django since 2007 (long enough to remember queryset-refactor, but not magic-removal), and works as a freelance developer with OddBird_.  He became a Django contributor by accident, because fixing bugs is more interesting than working around them."
msgstr ""

#: ../../internals/committers.txt:282
# a559b3b45d0f4e579419c3ab6fb51073
msgid "Carl lives in Rapid City, SD, USA."
msgstr ""

#: ../../internals/committers.txt:296
# 85be6a9fdd55487cb9654ebf936bea49
msgid "Ramiro Morales"
msgstr ""

#: ../../internals/committers.txt:288
# 4e83120f5742468abb372fd038c112e3
msgid "Ramiro has been reading Django source code and submitting patches since mid-2006 after researching for a Python Web tool with matching awesomeness and being pointed to it by an old ninja."
msgstr ""

#: ../../internals/committers.txt:292
# 8f8fb89c70d24adca0e2f6f0edf07444
msgid "A software developer in the electronic transactions industry, he is a living proof of the fact that anyone with enough enthusiasm can contribute to Django, learning a lot and having fun in the process."
msgstr ""

#: ../../internals/committers.txt:296
# aa79ad64476b4818a42a02bdfb92e13e
msgid "Ramiro lives in CÃ³rdoba, Argentina."
msgstr ""

#: ../../internals/committers.txt:306
# 08824f77dc27493bbd1ebdc390c5b928
msgid "`Gabriel Hurley`_"
msgstr ""

#: ../../internals/committers.txt:299
# 122209dd7f9a45c38a147efcb772610f
msgid "Gabriel has been working with Django since 2008, shortly after the 1.0 release. Convinced by his business partner that Python and Django were the right direction for the company, he couldn't have been more happy with the decision. His contributions range across many areas in Django, but years of copy-editing and an eye for detail lead him to be particularly at home while working on Django's documentation."
msgstr ""

#: ../../internals/committers.txt:306
# 9f652e91a9374d35a70f2f0e67087eb3
msgid "Gabriel works as a web developer in Berkeley, CA, USA."
msgstr ""

#: ../../internals/committers.txt:317
# 596f382e8af449738e1b92f6dd2e3c18
msgid "`Chris Beaven`_"
msgstr ""

#: ../../internals/committers.txt:311
# 21f2f49bf60b4241bf7671fe3c48dfe0
msgid "Chris has been submitting patches and suggesting crazy ideas for Django since early 2006. An advocate for community involvement and a long-term triager, he is still often found answering questions in the #django IRC channel."
msgstr ""

#: ../../internals/committers.txt:316
# 1bb7c8c57a394cf1955f5b8b436defec
msgid "Chris lives in Napier, New Zealand (adding to the pool of Oceanic core developers). He works remotely as a developer for `Lincoln Loop`_."
msgstr ""

#: ../../internals/committers.txt:331
# 417a4872a12d4c3d9d295b854a5b95b6
msgid "Honza KrÃ¡l"
msgstr ""

#: ../../internals/committers.txt:323
# 0d4637b1d40b479a80099928503a3da4
msgid "Honza first discovered Django in 2006 and started using it right away, first for school and personal projects and later in his full time job. He contributed various patches and fixes mostly to the newforms library, newforms admin and, through participation in the Google Summer of Code project, assisted in creating the :ref:`model validation <validating-objects>` functionality."
msgstr ""

#: ../../internals/committers.txt:330
# 9d0bb90c369b42aa8587b34e84be8692
msgid "He is currently working for `Whiskey Media`_ in San Francisco developing awesome sites running on pure Django."
msgstr ""

#: ../../internals/committers.txt:340
# 7e08b0ca12024790bd93b3e409426546
msgid "Tim Graham"
msgstr ""

#: ../../internals/committers.txt:336
# f0c88f8ae07648dda43411f82bee20c8
msgid "When exploring Web frameworks for an independent study project in the fall of 2008, Tim discovered Django and was lured to it by the documentation. He enjoys contributing to the docs because they're awesome."
msgstr ""

#: ../../internals/committers.txt:340
# 62b5874c593e4413b074d71d74404ab5
msgid "Tim works as a software engineer and lives in Philadelphia, PA, USA."
msgstr ""

#: ../../internals/committers.txt:352
# 881a5911977d4648aeee7ec245a73559
msgid "`Idan Gazit`_"
msgstr ""

#: ../../internals/committers.txt:343
# 5550bee195c343709680d4aa7b6714ee
msgid "As a self-professed design geek, Idan was initially attracted to Django sometime between magic-removal and queryset-refactor. Formally trained as a software engineer, Idan straddles the worlds of design and code, jack of two trades and master of none. He is passionate about usability and finding novel ways to extract meaning from data, and is a longtime photographer_."
msgstr ""

#: ../../internals/committers.txt:350
# a20c8111ac9c499794660b57141b648b
msgid "Idan previously accepted freelance work under the Pixane_ imprint, but now splits his days between his startup, Skills_, and beautifying all things Django and Python."
msgstr ""

#: ../../internals/committers.txt:368
# 1db01ae0db9845d7b3ce38d7b8e9259a
msgid "`Paul McMillan`_"
msgstr ""

#: ../../internals/committers.txt:360
# 2c16a457cd6a4bafb10b9e4c4f8aa137
msgid "Paul found Django in 2008 while looking for a more structured approach to web programming. He stuck around after figuring out that the developers of Django had already invented many of the wheels he needed. His passion for breaking (and then fixing) things led to his current role working to maintain and improve the security of Django."
msgstr ""

#: ../../internals/committers.txt:367
# 92611bf58ab74e4abef6be3ff769e72e
msgid "Paul works in Berkeley, California as a `web developer`_ and `security consultant`_."
msgstr ""

#: ../../internals/committers.txt:381
# a1bc786ef5024905a2392485045d5e86
msgid "`Julien Phalip`_"
msgstr ""

#: ../../internals/committers.txt:375
# e569f9c4e37c40c79ee313a02bb8c3a1
msgid "Julien has a background in software engineering and human-computer interaction. As a Web developer, he enjoys tinkering with the backend as much as designing and coding user interfaces. Julien discovered Django in 2007 while doing his PhD in Computing Sciences. Since then he has contributed patches to various components of the framework, in particular the admin. Julien was a co-founder of the `Interaction Consortium`_. He now works at Odopod_, a digital agency based in San Francisco, CA, USA."
msgstr ""

#: ../../internals/committers.txt:397
# 1f326814632f46e88b29078b0067fe09
msgid "`Aymeric Augustin`_"
msgstr ""

#: ../../internals/committers.txt:388
# f518ea0b76874eddb950a645c3ecc8b1
msgid "Aymeric is an engineer with a background in mathematics and computer science. He chose Django because he believes that software should be simple, explicit and tested. His perfectionist tendencies quickly led him to triage tickets and contribute patches."
msgstr ""

#: ../../internals/committers.txt:393
# 40ae68c835d14cf7bf94464ee113fb27
msgid "Aymeric has a pragmatic approach to software engineering, can't live without a continuous integration server, and likes proving that Django is a good choice for enterprise software."
msgstr ""

#: ../../internals/committers.txt:397
# 37c98ff92e0d41a18c5628f86827483d
msgid "He works in a `management consulting company`_ in Paris, France."
msgstr ""

#: ../../internals/committers.txt:410
# ecb8156a2e544d91bf8ce1e4e082a3e0
msgid "`Claude Paroz`_"
msgstr ""

#: ../../internals/committers.txt:403
# cc4627efd4944cb5958241dc15cfb8ce
msgid "Claude is a former teacher who fell in love with free software at the beginning of the 21st century. He's now working as freelancer in Web development in his native Switzerland. He has found in Django a perfect match for his needs of a stable, clean, documented and well-maintained Web framework."
msgstr ""

#: ../../internals/committers.txt:409
# 40b50137a74d43298bbc50a8c408fcd7
msgid "He's also helping the GNOME Translation Project as maintainer of the Django-based `l10n.gnome.org`_."
msgstr ""

#: ../../internals/committers.txt:423
# 263c186acf98433a9a8a93691fe1cad0
msgid "Anssi KÃ¤Ã¤riÃ¤inen"
msgstr ""

#: ../../internals/committers.txt:416
# 974ffc869e6d46fa9cd60d931d5afe16
msgid "Anssi works as a developer at Finnish National Institute for Health and Welfare. He is also a computer science student at Aalto University. In his work he uses Django for developing internal business applications and sees Django as a great match for that use case."
msgstr ""

#: ../../internals/committers.txt:421
# 20f22f047f3a47d1837a5ba5812ecd01
msgid "Anssi is interested in developing the object relational mapper (ORM) and all related features. He's also a fan of benckmarking and he tries keep Django as fast as possible."
msgstr ""

#: ../../internals/committers.txt:430
# b5731d96a0e741bebfb7bf0c5f5dbd4c
msgid "Florian Apolloner"
msgstr ""

#: ../../internals/committers.txt:426
# 086971a99b064ff786c59a286ddaedbe
msgid "Florian is currently studying Physics at the `Graz University of Technology`_. Soon after he started using Django he joined the `Ubuntuusers webteam`_ to work on *Inyoka*, the software powering the whole Ubuntusers site."
msgstr ""

#: ../../internals/committers.txt:430
# 46cbf45422c4420f93f857a5775bffa9
msgid "For the time beeing he lives in Graz, Austria (not Australia ;))."
msgstr ""

#: ../../internals/committers.txt:447
# 83670265d31f4e9ca5cafbd9cccfd609
msgid "Jeremy Dunck"
msgstr ""

#: ../../internals/committers.txt:436
# 447eae3f235741ca8c2df532e3a71b09
msgid "Jeremy was rescued from corporate IT drudgery by Free Software and, in part, Django.  Many of Jeremy's interests center around access to information."
msgstr ""

#: ../../internals/committers.txt:439
# d197b1ab8e4445ea8633c45c00e2bf0e
msgid "Jeremy was the lead developer of Pegasus News, one of the first uses of Django outside World Online, and has since joined Votizen, a startup intent on reducing the influence of money in politics."
msgstr ""

#: ../../internals/committers.txt:443
# 20e8a8347ae4471e987c5d00e8294a8c
msgid "He serves as DSF Secretary, organizes and helps organize sprints, cares about the health and equity of the Django community.  He has gone an embarrassingly long time without a working blog."
msgstr ""

#: ../../internals/committers.txt:447
# 212efb39eb904631a18e8d4168f74486
msgid "Jeremy lives in Mountain View, CA, USA."
msgstr ""

#: ../../internals/committers.txt:457
# 3d7920f9afbc47a986da6abfde969876
msgid "`Bryan Veloso`_"
msgstr ""

#: ../../internals/committers.txt:450
# 41c0781154334ea6b7cf204214e7481b
msgid "Bryan found Django 0.96 through a fellow designer who was evangelizing its use. It was his first foray outside of the land that was PHP-based templating. Although he has only ever used Django for personal projects, it is the very reason he considers himself a designer/developer hybrid and is working to further design within the Django community."
msgstr ""

#: ../../internals/committers.txt:456
# 59b8367ba5bd4edca242673ba6cb8349
msgid "Bryan works as a designer at GitHub by day, and masquerades as a `vlogger`_ and `shoutcaster`_ in the after-hours. Bryan lives in Los Angeles, CA, USA."
msgstr ""

#: ../../internals/committers.txt:471
# 5ca0320b4f084a5d8b5b8d3c3488041c
msgid "`Preston Holmes`_"
msgstr ""

#: ../../internals/committers.txt:464
# c94d495abbb940d39ab1a2f20cf2fbbd
msgid "Preston is a recovering neuroscientist who originally discovered Django as part of a sweeping move to Python from a grab bag of half a dozen languages. He was drawn to Django's balance of practical batteries included philosophy, care and thought in code design, and strong open source community. In addition to his current job in private progressive education, Preston contributes some developer time to local non-profits."
msgstr ""

#: ../../internals/committers.txt:471
# 3bb836e9c1634074bd49b8ac6cea6c7b
msgid "Preston lives with his family and animal menagerie in Santa Barbara, CA, USA."
msgstr ""

#: ../../internals/committers.txt:485
# fb6cc9e9749e4c52988bfbe999f6bfde
msgid "`Simon Charette`_"
msgstr ""

#: ../../internals/committers.txt:476
# 62613078b5f1478195223ed2053e95b5
msgid "Simon is a mathematic student who discovered Django while searching for a replacement framework to an in-house PHP entity. Since that faithful day Django has been a big part of his life. So far, he's been involved in some ORM and forms API fixes."
msgstr ""

#: ../../internals/committers.txt:481
# 861514570c3642b880f1317a52f62379
msgid "Apart from contributing to multiple open source projects he spends most of his spare-time playing `Ultimate Frisbee`_ and working part-time at this awesome place called `Reptiletech`_."
msgstr ""

#: ../../internals/committers.txt:485
# 8797c88e6dce4d32bd7f4ca20c9238a5
msgid "Simon lives in MontrÃ©al, QuÃ©bec, Canada."
msgstr ""

#: ../../internals/committers.txt:499
# cdc3c86230a245849dbc1605382d3d1c
msgid "Donald Stufft"
msgstr ""

#: ../../internals/committers.txt:492
# 0c6ff1ca237d4bec852936e20258bef6
msgid "Donald found Python and Django in 2007 while trying to find a language, and web framework that he really enjoyed using after many years of PHP. He fell in love with the beauty of Python and the way Django made tasks simple and easy. His contributions to Django focus primarily on ensuring that it is and remains a secure web framework."
msgstr ""

#: ../../internals/committers.txt:498
# 8e00965ab8e84c2ca2ef55b0c9f286ab
msgid "Donald currently works at `Nebula Inc`_ as a Software Engineer for their security team and lives in the Greater Philadelphia Area."
msgstr ""

#: ../../internals/committers.txt:512
# cf3e780008ec4a2c8ab521b320bf71ee
msgid "`Daniel Lindsley`_"
msgstr ""

#: ../../internals/committers.txt:504
# 6f952c7b6c68489e8bdd9ec9aff9257b
msgid "Pythonista since 2003, Djangonaut since 2006. Daniel started with Django just after the v0.90 release (back when ``Manipulators`` looked good) & fell in love. Since then, he wrote third-party apps like Haystack & Tastypie & has run the annual Django Dash since 2007. One of the testing faithful, Daniel's contributions include rewriting the ``Forms`` test suite & the addition of ``request.is_ajax``. Daniel currently works as a Python developer at `Amazon Web Services`_ on the ``boto`` library."
msgstr ""

#: ../../internals/committers.txt:512
# e6a2af5097774434bb22b165ebe92ba7
msgid "Daniel lives in Seattle, WA, USA."
msgstr ""

#: ../../internals/committers.txt:524
# 4ff1c175603147e985d180fd1b9791b8
msgid "Marc Tamlyn"
msgstr ""

#: ../../internals/committers.txt:518
# 4ec5593075c24b48963e6339cd12228a
msgid "Marc started life on the web using Django 1.2 back in 2010, and has never looked back. He was involved with rewriting the class based view documentation at DjangoCon EU 2012, and also helped to develop `CCBV`_, an additional class based view reference tool."
msgstr ""

#: ../../internals/committers.txt:523
# e03d82de2b034253ae0ae264d812ad5b
msgid "Marc currently works at `Incuna Ltd`_, a digital healthcare agency in Oxford, UK."
msgstr ""

#: ../../internals/committers.txt:536
# 2c8be80a5cb54851a3a587fd3b080a98
msgid "Baptiste Mispelon"
msgstr ""

#: ../../internals/committers.txt:530
# 28936ff5490440108b3366a0f07d83de
msgid "Baptiste discovered Django around the 1.2 version and promptly switched away from his homegrown PHP framework. He started getting more involved in the project after attending DjangoCon EU 2012, mostly by triaging tickets and submitting small patches."
msgstr ""

#: ../../internals/committers.txt:535
# 8ce5e39769214968a7f8ea1631e3d3c6
msgid "Baptiste currently lives in Budapest, Hungary and works for `M2BPO`_, a small French company providing services to architects."
msgstr ""

#: ../../internals/committers.txt:541
# 44bd70bcc1164548b786c66bc02f0036
msgid "Developers Emeritus"
msgstr ""

#: ../../internals/committers.txt:546
# 5b846f0c42194a4cb3abd25acaa7733a
msgid "Georg \"Hugo\" Bauer"
msgstr ""

#: ../../internals/committers.txt:544
# 0d578e43edf4415abad98e437ff62c95
msgid "Georg created Django's internationalization system, managed i18n contributions and made a ton of excellent tweaks, feature additions and bug fixes."
msgstr ""

#: ../../internals/committers.txt:550
# a9043725604a454d805107917ec41caf
msgid "Robert Wittams"
msgstr ""

#: ../../internals/committers.txt:549
# 099bbdd3d1914b268edb488b395fc45c
msgid "Robert was responsible for the *first* refactoring of Django's admin application to allow for easier reuse and has made a ton of excellent tweaks, feature additions and bug fixes."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:3
# 4a1db28937ae4878a6b9bf3543a023b3
msgid "Reporting bugs and requesting features"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:7
# cc946a2567494ff393b0f123a53199a6
msgid "Please report security issues **only** to security@djangoproject.com.  This is a private list only open to long-time, highly trusted Django developers, and its archives are not public. For further details, please see :doc:`our security policies </internals/security>`."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:14
# fc28b55722304a7383dae138e4bb3ee1
msgid "Otherwise, before reporting a bug or requesting a new feature, please consider these general points:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:17
# 0eb5bfbbb3a14269a68578b853996266
msgid "Check that someone hasn't already filed the bug or feature request by `searching`_ or running `custom queries`_ in the ticket tracker."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:20
# 7317db6d0437490aa63874fb709610ce
msgid "Don't use the ticket system to ask support questions. Use the `django-users`_ list or the `#django`_ IRC channel for that."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:23
# 4f4a155ca6614c94a415ed643cf08cea
msgid "Don't reopen issues that have been marked \"wontfix\" by a core developer. This mark means that the decision has been made that we can't or won't fix this particular issue. If you're not sure why, please ask on `django-developers`_."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:28
# a8a738477094422a8b7d0230e9d5c78d
msgid "Don't use the ticket tracker for lengthy discussions, because they're likely to get lost. If a particular ticket is controversial, please move the discussion to `django-developers`_."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:35
# c41a07e46c4545c286535f7b4ec7f801
msgid "Reporting bugs"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:37
# 50154d21ba824baea2bbff132ac943ba
msgid "Well-written bug reports are *incredibly* helpful. However, there's a certain amount of overhead involved in working with any bug tracking system so your help in keeping our ticket tracker as useful as possible is appreciated. In particular:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:42
# cff582e4fa43449ca2ca75ade091523e
msgid "**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a well-known question."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:45
# 4979df3e54dd454a8cbeb13e3e8f3889
msgid "**Do** ask on `django-users`_ or `#django`_ *first* if you're not sure if what you're seeing is a bug."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:48
# d99c9af130a44778b9011172f848f457
msgid "**Do** write complete, reproducible, specific bug reports. You must include a clear, concise description of the problem, and a set of instructions for replicating it. Add as much debug information as you can: code snippets, test cases, exception backtraces, screenshots, etc. A nice small test case is the best way to report a bug, as it gives us an easy way to confirm the bug quickly."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:55
# c5492c7b55894d4d995607f84e940871
msgid "**Don't** post to `django-developers`_ just to announce that you have filed a bug report. All the tickets are mailed to another list, `django-updates`_, which is tracked by developers and interested community members; we see them as they are filed."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:60
# af4b51e252a0483fb1a755ad59da4a0c
msgid "To understand the lifecycle of your ticket once you have created it, refer to :doc:`triaging-tickets`."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:66
# ae611c2bbd114c09ae82441da0170bff
msgid "Reporting user interface bugs and features"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:68
# 73f72f52115244b28d9e9e67a8f19558
msgid "If your bug or feature request touches on anything visual in nature, there are a few additional guidelines to follow:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:71
# d8305c9e5d72492d91eb81bc5a5a3d0f
msgid "Include screenshots in your ticket which are the visual equivalent of a minimal testcase. Show off the issue, not the crazy customizations you've made to your browser."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:75
# 6bee7fdd3bfa468b8691aaaabe60ec24
msgid "If the issue is difficult to show off using a still image, consider capturing a *brief* screencast. If your software permits it, capture only the relevant area of the screen."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:79
# 8ac2fa977c284059ae67e4490339ecbb
msgid "If you're offering a patch which changes the look or behavior of Django's UI, you **must** attach before *and* after screenshots/screencasts. Tickets lacking these are difficult for triagers and core developers to assess quickly."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:84
# a5d6e74b80e345f283d7bfe47c6b4d3d
msgid "Screenshots don't absolve you of other good reporting practices. Make sure to include URLs, code snippets, and step-by-step instructions on how to reproduce the behavior visible in the screenshots."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:88
# 84e02842e18442d5ab5487a6f94409b0
msgid "Make sure to set the UI/UX flag on the ticket so interested parties can find your ticket."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:92
# a190446a46f84fe182cffdd1ad3cfd7c
msgid "Requesting features"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:94
# 6e4a5c29a5ae47bc9e503c1125380161
msgid "We're always trying to make Django better, and your feature requests are a key part of that. Here are some tips on how to make a request most effectively:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:97
# 05a4252bcdf94dec82bf5cd66849e63f
msgid "Make sure the feature actually requires changes in Django's core. If your idea can be developed as an independent application or module â€” for instance, you want to support another database engine â€” we'll probably suggest that you to develop it independently. Then, if your project gathers sufficient community support, we may consider it for inclusion in Django."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:104
# b4966d9c00de403396ecfbfc65ccb49d
msgid "First request the feature on the `django-developers`_ list, not in the ticket tracker. It'll get read more closely if it's on the mailing list. This is even more important for large-scale feature requests. We like to discuss any big changes to Django's core on the mailing list before actually working on them."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:110
# ff69e7bea57b477e82427a1f9ad60691
msgid "Describe clearly and concisely what the missing feature is and how you'd like to see it implemented. Include example code (non-functional is OK) if possible."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:114
# 0dd1af47c3b14ecaa58e00aadadf10aa
msgid "Explain *why* you'd like the feature. In some cases this is obvious, but since Django is designed to help real developers get real work done, you'll need to explain it, if it isn't obvious why the feature would be useful."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:119
# 13ad56a770654b6da0a42e61fe6e9016
msgid "If core developers agree on the feature, then it's appropriate to create a ticket. Include a link the discussion on `django-developers`_ in the ticket description."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:123
# 58b800eb916143ada27dcc21088c254d
msgid "As with most open-source projects, code talks. If you are willing to write the code for the feature yourself or, even better, if you've already written it, it's much more likely to be accepted. Just fork Django on GitHub, create a feature branch, and show us your work!"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:128
# d81621bde6b443b9ba6906c35990362a
msgid "See also: :ref:`documenting-new-features`."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:133
# ddb83220a34142ffbe698b92258f8360
msgid "How we make decisions"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:135
# 3539570360a54865886856f5beec3afb
msgid "Whenever possible, we strive for a rough consensus. To that end, we'll often have informal votes on `django-developers`_ about a feature. In these votes we follow the voting style invented by Apache and used on Python itself, where votes are given as +1, +0, -0, or -1. Roughly translated, these votes mean:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:140
# f55e220b01c34f48bf6763bc88cd85b6
msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:142
# 8d21aa2bcf234ca4b6ddd25c5b811637
msgid "+0: \"Sounds OK to me.\""
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:144
# c7d7258807aa4ccbabc32b166a3e0a94
msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:146
# 99d57ad114c9489cbc138877b9e993c8
msgid "-1: \"I strongly disagree and would be very unhappy to see the idea turn into reality.\""
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:149
# eac879ad25414e52aef8aa0db8795621
msgid "Although these votes on `django-developers`_ are informal, they'll be taken very seriously. After a suitable voting period, if an obvious consensus arises we'll follow the votes."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:153
# b997f1c6ba844326a6f90200bda41a5b
msgid "However, consensus is not always possible. If consensus cannot be reached, or if the discussion towards a consensus fizzles out without a concrete decision, we use a more formal process."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:157
# 2d53feb18b0746a2be773978f6c2997d
msgid "Any :doc:`core committer</internals/committers>` may call for a formal vote using the same voting mechanism above. A proposition will be considered carried by the core team if:"
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:161
# d914a4ff70ba4b03815ebd16d43f7a38
msgid "There are three \"+1\" votes from members of the core team."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:163
# e268790c680b40d4b78a988efccb8b40
msgid "There is no \"-1\" vote from any member of the core team."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:165
# aee34bd94c3743cfa9d7f2cb215e0d03
msgid "The :ref:`BDFLs<django-bdfls>` haven't stepped in and executed their positive or negative veto."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:168
# 2543e11e79884724b9ca4923e5e9c1e4
msgid "When calling for a vote, the caller should specify a deadline by which votes must be received. One week is generally suggested as the minimum amount of time."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:172
# b900c73cb299465fbd24e80ff955ba46
msgid "Since this process allows any core committer to veto a proposal, any \"-1\" votes (or BDFL vetos) should be accompanied by an explanation that explains what it would take to convert that \"-1\" into at least a \"+0\"."
msgstr ""

#: ../../internals/contributing/bugs-and-features.txt:176
# a21a1519be724fdcb936a1094837cf6d
msgid "Whenever possible, these formal votes should be announced and held in public on the `django-developers`_ mailing list. However, overly sensitive or contentious issues -- including, most notably, votes on new core committers -- may be held in private."
msgstr ""

#: ../../internals/contributing/committing-code.txt:3
# fbe891ef0d4342018302cdf41247694c
msgid "Committing code"
msgstr ""

#: ../../internals/contributing/committing-code.txt:5
# 2da08e2e73c6411f8b4c0f03d6a82c4c
msgid "This section is addressed to the :doc:`/internals/committers` and to anyone interested in knowing how code gets committed into Django core. If you're a community member who wants to contribute code to Django, have a look at :doc:`writing-code/working-with-git` instead."
msgstr ""

#: ../../internals/contributing/committing-code.txt:11
# cac2a46b78cf4cafaab9f4cda56cc079
msgid "Commit access"
msgstr ""

#: ../../internals/contributing/committing-code.txt:13
# 4005474c08834a4ba636e9d385ca0d68
msgid "Django has two types of committers:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:19
# 6c3603d272694cd4918777adc4ae6bc0
msgid "Core committers"
msgstr ""

#: ../../internals/contributing/committing-code.txt:16
# a1be32900ea949d1bb2f08d62a2a707d
msgid "These are people who have a long history of contributions to Django's codebase, a solid track record of being polite and helpful on the mailing lists, and a proven desire to dedicate serious time to Django's development. The bar is high for full commit access."
msgstr ""

#: ../../internals/contributing/committing-code.txt:30
# d25ffc0da048476189bfc09f24e8ba4f
msgid "Partial committers"
msgstr ""

#: ../../internals/contributing/committing-code.txt:22
# 65ed647d45274a949aba3eaa8a3ad4a2
msgid "These are people who are \"domain experts.\" They have direct check-in access to the subsystems that fall under their jurisdiction, and they're given a formal vote in questions that involve their subsystems. This type of access is likely to be given to someone who contributes a large sub-framework to Django and wants to continue to maintain it."
msgstr ""

#: ../../internals/contributing/committing-code.txt:28
# 9aa134d7a993401ba67a0178e4d6be5d
msgid "Partial commit access is granted by the same process as full committers. However, the bar is set lower; proven expertise in the area in question is likely to be sufficient."
msgstr ""

#: ../../internals/contributing/committing-code.txt:32
# 01cceefd0181460c9b9d233eef592d90
msgid "Decisions on new committers will follow the process explained in :ref:`how-we-make-decisions`. To request commit access, please contact an existing committer privately. Public requests for commit access are potential flame-war starters, and will simply be ignored."
msgstr ""

#: ../../internals/contributing/committing-code.txt:40
# 7fe8e1b8c8d84a4ab036b7bfe2f35fb4
msgid "Handling pull requests"
msgstr ""

#: ../../internals/contributing/committing-code.txt:42
# 4fbc23a2b79d4495842ce016ec7c166b
msgid "Since Django is now hosted at GitHub, many patches are provided in the form of pull requests."
msgstr ""

#: ../../internals/contributing/committing-code.txt:45
# 7e8f99fee54a4340833b6f255f8b773f
msgid "When committing a pull request, make sure each individual commit matches the commit guidelines described below. Contributors are expected to provide the best pull requests possible. In practice however, committers - who will likely be more familiar with the commit guidelines - may decide to bring a commit up to standard themselves."
msgstr ""

#: ../../internals/contributing/committing-code.txt:51
# 10af8422bca24f04865a82cb9df0b064
msgid "Here is one way to commit a pull request::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:60
# 689499eb5dd14fcf8d6761d1e53a0f26
msgid "At this point, you can work on the code. Use ``git rebase -i`` and ``git commit --amend`` to make sure the commits have the expected level of quality. Once you're ready::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:77
# dfe178523ee84674b0efa301646fb80e
msgid "An alternative is to add the contributor's repository as a new remote, checkout the branch and work from there::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:83
# 37eb5653ebf448e89468c45b483a3b2d
msgid "Yet another alternative is to fetch the branch without adding the contributor's repository as a remote::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:89
# ff455087860549dd8f231f2a9f0796bc
msgid "At this point, you can work on the code and continue as above."
msgstr ""

#: ../../internals/contributing/committing-code.txt:91
# 99d53f42a0c747a8959c6b4108ce467c
msgid "GitHub provides a one-click merge functionality for pull requests. This should only be used if the pull request is 100% ready, and you have checked it for errors (or trust the request maker enough to skip checks). Currently, it isn't possible to check that the tests pass and that the docs build without downloading the changes to your development environment."
msgstr ""

#: ../../internals/contributing/committing-code.txt:97
# b5917a444b34460c86314e76282724d0
msgid "When rewriting the commit history of a pull request, the goal is to make Django's commit history as usable as possible:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:100
# 9a6a578875294ab2b8fa6aa245afa4e2
msgid "If a patch contains back-and-forth commits, then rewrite those into one. Typically, a commit can add some code, and a second commit can fix stylistic issues introduced in the first commit."
msgstr ""

#: ../../internals/contributing/committing-code.txt:104
# 8f62765f93114f43872c596a3d6f1ab8
msgid "Separate changes to different commits by logical grouping: if you do a stylistic cleanup at the same time as you do other changes to a file, separating the changes into two different commits will make reviewing history easier."
msgstr ""

#: ../../internals/contributing/committing-code.txt:109
# 70208646adf64771b77136edb63e7d8a
msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

#: ../../internals/contributing/committing-code.txt:111
# 399b7930c48b4604b8913ef5988cd407
msgid "Tests should pass and docs should build after each commit. Neither the tests nor the docs should emit warnings."
msgstr ""

#: ../../internals/contributing/committing-code.txt:114
# f4014fbe73f84b2dbdf31af346a292f9
msgid "Trivial and small patches usually are best done in one commit. Medium to large work should be split into multiple commits if possible."
msgstr ""

#: ../../internals/contributing/committing-code.txt:117
# c05c49704e444384a32d5087e6672d47
msgid "Practicality beats purity, so it is up to each committer to decide how much history mangling to do for a pull request. The main points are engaging the community, getting work done, and having a usable commit history."
msgstr ""

#: ../../internals/contributing/committing-code.txt:124
# 2a23154cf59449c2be4b22b3c733f514
msgid "Committing guidelines"
msgstr ""

#: ../../internals/contributing/committing-code.txt:126
# 72ade9bfd76c4a0a82cbd5a760d147d9
msgid "In addition, please follow the following guidelines when committing code to Django's Git repository:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:129
# 663a569e42904eb6b2beddc98b020680
msgid "Never change the published history of django/django branches! **Never force- push your changes to django/django.** If you absolutely must (for security reasons for example) first discuss the situation with the core team."
msgstr ""

#: ../../internals/contributing/committing-code.txt:133
# 6cb0361c83e741f187ae34b853ffc699
msgid "For any medium-to-big changes, where \"medium-to-big\" is according to your judgment, please bring things up on the `django-developers`_ mailing list before making the change."
msgstr ""

#: ../../internals/contributing/committing-code.txt:137
# a469d8668e77410cbe7b71a349dcbc72
msgid "If you bring something up on `django-developers`_ and nobody responds, please don't take that to mean your idea is great and should be implemented immediately because nobody contested it. Django's lead developers don't have a lot of time to read mailing-list discussions immediately, so you may have to wait a couple of days before getting a response."
msgstr ""

#: ../../internals/contributing/committing-code.txt:144
# 9da0fcdcbbdf47b19900fcc5d4ed2587
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

#: ../../internals/contributing/committing-code.txt:146
# 0f4252c2db03444cb92d5db328d33a40
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:147
# 82f1304f585f4e19a89572633e7e1ead
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:148
# 34b1554a1ec04d50831f81590d325dd1
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:150
# a05065918c1a4b039c5ceb169b3e20d5
msgid "The commit message should be in lines of 72 chars maximum. There should be a subject line, separated by a blank line and then paragraphs of 72 char lines. The limits are soft. For the subject line, shorter is better. In the body of the commit message more detail is better than less::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:161
# 18309db21f07429db32c0a083ead04d1
msgid "If the patch wasn't a pull request, you should credit the contributors in the commit message: \"Thanks A for report, B for the patch and C for the review.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:165
# 6f25a4374c3a489b946d034f5ccbc343
msgid "For commits to a branch, prefix the commit message with the branch name. For example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:168
# 6dc05a1aeec448a39fe1ad04aacf160a
msgid "Limit commits to the most granular change that makes sense. This means, use frequent small commits rather than infrequent large commits. For example, if implementing feature X requires a small change to library Y, first commit the change to library Y, then commit feature X in a separate commit. This goes a *long way* in helping all core Django developers follow your changes."
msgstr ""

#: ../../internals/contributing/committing-code.txt:175
# ead0bc4bc99e4decbbea354867afa3e9
msgid "Separate bug fixes from feature changes. Bugfixes may need to be backported to the stable branch, according to the :ref:`backwards-compatibility policy <backwards-compatibility-policy>`."
msgstr ""

#: ../../internals/contributing/committing-code.txt:179
# 85138134c41247079e8c753357eeeb96
msgid "If your commit closes a ticket in the Django `ticket tracker`_, begin your commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang feature.\". We've rigged Trac so that any commit message in that format will automatically close the referenced ticket and post a comment to it with the full commit message."
msgstr ""

#: ../../internals/contributing/committing-code.txt:186
# 554df2832a3f404384b868b76e401227
msgid "If your commit closes a ticket and is in a branch, use the branch name first, then the \"Fixed #xxxxx.\" For example: \"[1.4.x] Fixed #123 -- Added whizbang feature.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:190
# 7b4b54a2c918443589506fb8c2005bb0
msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

#: ../../internals/contributing/committing-code.txt:194
# 5ae527601eb146adb6d8311bfaf8a9fd
msgid "Note that the Trac integration doesn't know anything about pull requests. So if you try to close a pull request with the phrase \"closes #400\" in your commit message, GitHub will close the pull request, but the Trac plugin will also close the same numbered ticket in Trac."
msgstr ""

#: ../../internals/contributing/committing-code.txt:202
# 5e77945a086e47678922028b33889fe8
msgid "If your commit references a ticket in the Django `ticket tracker`_ but does *not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" is the number of the ticket your commit references. This will automatically post a comment to the appropriate ticket."
msgstr ""

#: ../../internals/contributing/committing-code.txt:207
# 82a8864087b448ccafd28c012df948a4
msgid "Write commit messages for backports using this pattern::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:213
# a1d0d12b8c024cff917e52e488b7da6c
msgid "For example::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:220
# dbd16ceaecf14274a47bf293b30116d7
msgid "Reverting commits"
msgstr ""

#: ../../internals/contributing/committing-code.txt:222
# 77189158716541bfbf6e42eb5235a510
msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

#: ../../internals/contributing/committing-code.txt:224
# 8b8d0b7da64149c4a308caaa2e76f0d8
msgid "But try very hard to ensure that mistakes don't happen. Just because we have a reversion policy doesn't relax your responsibility to aim for the highest quality possible. Really: double-check your work, or have it checked by another committer, **before** you commit it in the first place!"
msgstr ""

#: ../../internals/contributing/committing-code.txt:229
# 937ec6bb0540415d8f3f53e6e11b8a54
msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:231
# 89c41efe5ba0496d9db3724c010917c3
msgid "If possible, have the original author revert his/her own commit."
msgstr ""

#: ../../internals/contributing/committing-code.txt:233
# c9e8c199681e4cc59ba64884a2a4ea6b
msgid "Don't revert another author's changes without permission from the original author."
msgstr ""

#: ../../internals/contributing/committing-code.txt:236
# f7dabb47eebd48e38475e91457e83ee2
msgid "Use git revert -- this will make a reverse commit, but the original commit will still be part of the commit history."
msgstr ""

#: ../../internals/contributing/committing-code.txt:239
# 71d24f84dc164519afe8d27847819d0d
msgid "If the original author can't be reached (within a reasonable amount of time -- a day or so) and the problem is severe -- crashing bug, major test failures, etc -- then ask for objections on the `django-developers`_ mailing list then revert if there are none."
msgstr ""

#: ../../internals/contributing/committing-code.txt:244
# 9466e0fd31a04255950338b4e4566cdc
msgid "If the problem is small (a feature commit after feature freeze, say), wait it out."
msgstr ""

#: ../../internals/contributing/committing-code.txt:247
# 40900090f91542e18b98ccd5bc868cb3
msgid "If there's a disagreement between the committer and the reverter-to-be then try to work it out on the `django-developers`_ mailing list. If an agreement can't be reached then it should be put to a vote."
msgstr ""

#: ../../internals/contributing/committing-code.txt:252
# c53b12baa03f453b8b37cd69fd1ab6a6
msgid "If the commit introduced a confirmed, disclosed security vulnerability then the commit may be reverted immediately without permission from anyone."
msgstr ""

#: ../../internals/contributing/committing-code.txt:256
# b8b9a67b39584bcd867f8a57f3769dc1
msgid "The release branch maintainer may back out commits to the release branch without permission if the commit breaks the release branch."
msgstr ""

#: ../../internals/contributing/committing-code.txt:259
# db116094a55549cb9871f2fc72b0f139
msgid "If you mistakenly push a topic branch to django/django, just delete it. For instance, if you did: ``git push upstream feature_antigravity``, just do a reverse push: ``git push upstream :feature_antigravity``."
msgstr ""

#: ../../internals/contributing/index.txt:3
# eff54a72163c4324914bf1e533d7af52
msgid "Contributing to Django"
msgstr ""

#: ../../internals/contributing/index.txt:5
# 56706558ece34f2ab5edc8e06d8d525c
msgid "Django is a community that lives on its volunteers. As it keeps growing, we always need more people to help others. As soon as you learn Django, you can contribute in many ways:"
msgstr ""

#: ../../internals/contributing/index.txt:9
# 218d936800e04c5cb7de151d13fa7641
msgid "Join the `django-users`_ mailing list and answer questions. This mailing list has a huge audience, and we really want to maintain a friendly and helpful atmosphere. If you're new to the Django community, you should read the `posting guidelines`_."
msgstr ""

#: ../../internals/contributing/index.txt:14
# 88e5d7b97d6d49f8a329037aae016e33
msgid "Join the `#django IRC channel`_ on Freenode and answer questions. By explaining Django to other users, you're going to learn a lot about the framework yourself."
msgstr ""

#: ../../internals/contributing/index.txt:18
# 383ec2a6b7a44488bb1a3a36103ca1ee
msgid "Blog about Django. We syndicate all the Django blogs we know about on the `community page`_; if you'd like to see your blog on that page you can `register it here`_."
msgstr ""

#: ../../internals/contributing/index.txt:22
# 8ad3f4c545e6448eb1294faf7d6baab0
msgid "Contribute to open-source Django projects, write some documentation, or release your own code as an open-source pluggable application. The ecosystem of pluggable applications is a big strength of Django, help us build it!"
msgstr ""

#: ../../internals/contributing/index.txt:27
# 06eb6ad836b741a4988f54b27a4d05a0
msgid "If you think working *with* Django is fun, wait until you start working *on* it. We're passionate about helping Django users make the jump to contributing members of the community, so there are several ways you can help Django's development:"
msgstr ""

#: ../../internals/contributing/index.txt:32
# 17d4f53bd91d4c60a8a4f102e847da59
msgid ":doc:`Report bugs <bugs-and-features>` in our `ticket tracker`_."
msgstr ""

#: ../../internals/contributing/index.txt:34
# 9f609f618b48464cbe721e19f34f1587
msgid "Join the `django-developers`_ mailing list and share your ideas for how to improve Django. We're always open to suggestions."
msgstr ""

#: ../../internals/contributing/index.txt:37
# 76be46e316d343ebb7f854eef28310d4
msgid ":doc:`Submit patches <writing-code/submitting-patches>` for new and/or fixed behavior. If you're looking for an easy way to start contributing to Django have a look at the `easy pickings`_ tickets."
msgstr ""

#: ../../internals/contributing/index.txt:41
# 9739ad584d98440fbbf73a0742ac4537
msgid ":doc:`Improve the documentation <writing-documentation>` or :doc:`write unit tests <writing-code/unit-tests>`."
msgstr ""

#: ../../internals/contributing/index.txt:44
# 923f70928a0e4159b8da171960d9154d
msgid ":doc:`Triage tickets and review patches <triaging-tickets>` created by other users."
msgstr ""

#: ../../internals/contributing/index.txt:47
# ebe89201132e46a29831e038898162ab
msgid "Really, **ANYONE** can do something to help make Django better and greater!"
msgstr ""

#: ../../internals/contributing/index.txt:49
# 880c9b428c404ccda2228a7350ab94e1
msgid "Browse the following sections to find out how:"
msgstr ""

#: ../../internals/contributing/localizing.txt:3
# 4bb5a86a854a44cdb9611b3230881884
msgid "Localizing Django"
msgstr ""

#: ../../internals/contributing/localizing.txt:5
# d2cdd3ff98bd46709ea671b65798b30f
msgid "Various parts of Django, such as the admin site and validation error messages, are internationalized. This means they display differently depending on each user's language or country. For this, Django uses the same internationalization and localization infrastructure available to Django applications, described in the :doc:`i18n documentation </topics/i18n/index>`."
msgstr ""

#: ../../internals/contributing/localizing.txt:12
# f997b8ad40c5408cb7b03a315bc846bf
msgid "Translations"
msgstr ""

#: ../../internals/contributing/localizing.txt:14
# 2dfd7d571a2247abae679f05ec6eeec1
msgid "Translations are contributed by Django users worldwide. The translation work is coordinated at `Transifex`_."
msgstr ""

#: ../../internals/contributing/localizing.txt:17
# 76972ac394244646a6c0eb61936a04b1
msgid "If you find an incorrect translation or want to discuss specific translations, go to the `Django project page`_. If you would like to help out with translating or add a language that isn't yet translated, here's what to do:"
msgstr ""

#: ../../internals/contributing/localizing.txt:21
# 91d5b71f0c614565ab3383ee94171a1c
msgid "Join the `Django i18n mailing list`_ and introduce yourself."
msgstr ""

#: ../../internals/contributing/localizing.txt:23
# c0bd805adde444f6bfe5eeb3d0006eb0
msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ""

#: ../../internals/contributing/localizing.txt:25
# 53aff3b6e4034641bf7fc899e5aff51d
msgid "Signup at `Transifex`_ and visit the `Django project page`_."
msgstr ""

#: ../../internals/contributing/localizing.txt:27
# 1b0a060986bc4a8d9e4fe78c025ddcb2
msgid "On the `Django project page`_, choose the language you want to work on, **or** -- in case the language doesn't exist yet -- request a new language team by clicking on the \"Request language\" link and selecting the appropriate language."
msgstr ""

#: ../../internals/contributing/localizing.txt:32
# 5e5bcb7d0bf447f49a7762414fafcf59
msgid "Then, click the \"Join this Team\" button to become a member of this team. Every team has at least one coordinator who is responsible to review your membership request. You can of course also contact the team coordinator to clarify procedural problems and handle the actual translation process."
msgstr ""

#: ../../internals/contributing/localizing.txt:38
# dd6625e1edda4877a3736f4623c2cf37
msgid "Once you are a member of a team choose the translation resource you want to update on the team page. For example the \"core\" resource refers to the translation catalogue that contains all non-contrib translations. Each of the contrib apps also have a resource (prefixed with \"contrib\")."
msgstr ""

#: ../../internals/contributing/localizing.txt:44
# cb13306054194580a791cde620b8bc03
msgid "For more information about how to use Transifex, read the `Transifex User Guide`_."
msgstr ""

#: ../../internals/contributing/localizing.txt:48
# d1bca3665bc140bb91dd983e3bba9767
msgid "Formats"
msgstr ""

#: ../../internals/contributing/localizing.txt:50
# d40ba1a99b444ed49461e0d459a242e9
msgid "You can also review ``conf/locale/<locale>/formats.py``. This file describes the date, time and numbers formatting particularities of your locale. See :ref:`format-localization` for details."
msgstr ""

#: ../../internals/contributing/localizing.txt:54
# 3b998098f0a8492ba4f91080341021f0
msgid "The format files aren't managed by the use of Transifex. To change them, you must :doc:`create a patch<writing-code/submitting-patches>` against the Django source tree, as for any code change:"
msgstr ""

#: ../../internals/contributing/localizing.txt:58
# b1542e6add214b3c9dc9a0a3093dcf3c
msgid "Create a diff against the current Git master branch."
msgstr ""

#: ../../internals/contributing/localizing.txt:60
# 378f10d6597e481f9e43bfee06e3f528
msgid "Open a ticket in Django's ticket system, set its ``Component`` field to ``Translations``, and attach the patch to it."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:3
# f1426bfdd6fe4651b7474eff5618a623
msgid "Advice for new contributors"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:5
# 627bf23d8b36488bbb2efb0859f56857
msgid "New contributor and not sure what to do? Want to help but just don't know how to get started? This is the section for you."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:9
# b5f93047d9714d018b98371d460aa807
msgid "First steps"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:11
# 6dd2f484f13d42e8ac6189cd1a412dfb
msgid "Start with these easy tasks to discover Django's development process."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:13
# 495b28cb8ffd4feaab00dc1906765d93
msgid "**Sign the Contributor License Agreement**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:15
# 21ebc00f57384886910282f9a21a25ea
msgid "The code that you write belongs to you or your employer. If your contribution is more than one or two lines of code, you need to sign the `CLA`_. See the `Contributor License Agreement FAQ`_ for a more thorough explanation."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:20
# bc918d2b005e47dfb58dcf3fbc55b644
msgid "**Triage tickets**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:22
# 358ef4508ba240a8aa30bad98b78420c
msgid "If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can reproduce it and it seems valid, make a note that you confirmed the bug and accept the ticket. Make sure the ticket is filed under the correct component area. Consider writing a patch that adds a test for the bug's behavior, even if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-triaging`"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:29
# 13640a3e498b4dea8c3cf33830a1dead
msgid "**Look for tickets that are accepted and review patches to build familiarity with the codebase and the process**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:32
# 103f295c1ec745d08ba7056938c4f3fd
msgid "Mark the appropriate flags if a patch needs docs or tests. Look through the changes a patch makes, and keep an eye out for syntax that is incompatible with older but still supported versions of Python. Run the tests and make sure they pass on your system.  Where possible and relevant, try them out on a database other than SQLite. Leave comments and feedback!"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:38
# f8e2d581ced74f3cbb890c17c1a4ada1
msgid "**Keep old patches up to date**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:40
# 5dfc38f1a6514e63b5b7b282a5654bfb
msgid "Oftentimes the codebase will change between a patch being submitted and the time it gets reviewed. Make sure it still applies cleanly and functions as expected. Simply updating a patch is both useful and important! See more on :doc:`writing-code/submitting-patches`."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:45
# 818dfae12dc84219ac7295befac53c75
msgid "**Write some documentation**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:47
# 5d77f6e8eee94f7bb82904b3bd995d15
msgid "Django's documentation is great but it can always be improved. Did you find a typo? Do you think that something should be clarified? Go ahead and suggest a documentation patch! See also the guide on :doc:`writing-documentation`, in particular the tips for :ref:`improving-the-documentation`."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:55
# 92977a2ed6464114a57bb5766a8093b4
msgid "The `reports page`_ contains links to many useful Trac queries, including several that are useful for triaging tickets and reviewing patches as suggested above."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:67
# b4ba6f743df7473fb5d9bee000f91e93
msgid "Guidelines"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:69
# 15e49939674643029074e98afba4ea85
msgid "As a newcomer on a large project, it's easy to experience frustration. Here's some advice to make your work on Django more useful and rewarding."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:72
# 3fdd2fafdc0e48a49c1ae5b2a3d2bec0
msgid "**Pick a subject area that you care about, that you are familiar with, or that you want to learn about**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:75
# 97fecbf618ce4440990219c9fd6cd108
msgid "You don't already have to be an expert on the area you want to work on; you become an expert through your ongoing contributions to the code."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:78
# b4f3cc0b720c432cb3ce7eadb9d92878
msgid "**Analyze tickets' context and history**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:80
# 1cf9741641e34a6e9daf9e42b68d723f
msgid "Trac isn't an absolute; the context is just as important as the words. When reading Trac, you need to take into account who says things, and when they were said. Support for an idea two years ago doesn't necessarily mean that the idea will still have support. You also need to pay attention to who *hasn't* spoken -- for example, if a core team member hasn't been recently involved in a discussion, then a ticket may not have the support required to get into trunk."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:88
# 7fcc1d1d6acd4f27bb52efd9d7b8814c
msgid "**Start small**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:90
# 60c81c28ec704864ad8f1927c342036f
msgid "It's easier to get feedback on a little issue than on a big one. See the `easy pickings`_."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:93
# 046a9703bb574c2696ea377e3f08aa32
msgid "**If you're going to engage in a big task, make sure that your idea has support first**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:96
# 1332ce1bdfc04549b58ea6326a4ff239
msgid "This means getting someone else to confirm that a bug is real before you fix the issue, and ensuring that the core team supports a proposed feature before you go implementing it."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:100
# 66f3f85724b44dd8a8af470ddac502f0
msgid "**Be bold! Leave feedback!**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:102
# 699ba6d111c9498090d1b213ddd28cb2
msgid "Sometimes it can be scary to put your opinion out to the world and say \"this ticket is correct\" or \"this patch needs work\", but it's the only way the project moves forward. The contributions of the broad Django community ultimately have a much greater impact than that of the core developers. We can't do it without YOU!"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:108
# bf6e285c7ab944009333e6a22b5f1744
msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:110
# 3b87ab2d515e4a5f8dfb3e1b6c25aebb
msgid "If you're really not certain if a ticket is ready, don't mark it as such. Leave a comment instead, letting others know your thoughts.  If you're mostly certain, but not completely certain, you might also try asking on IRC to see if someone else can confirm your suspicions."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:115
# c1010e29c38b4d479987de91dcfff1af
msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:117
# 6fb6f6a633cb4007ac38717f0a54ed6a
msgid "Focus on one or two tickets, see them through from start to finish, and repeat. The shotgun approach of taking on lots of tickets and letting some fall by the wayside ends up doing more harm than good."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:121
# 766cce0851254653882879a48f833c19
msgid "**Be rigorous**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:123
# 58e9a0ce39934d468271e3c4731f1ab3
msgid "When we say \":pep:`8`, and must have docs and tests\", we mean it. If a patch doesn't have docs and tests, there had better be a good reason. Arguments like \"I couldn't find any existing tests of this feature\" don't carry much weight--while it may be true, that means you have the extra-important job of writing the very first tests for that feature, not that you get a pass from writing tests altogether."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:135
# 53d2eeffd46d400d9d560e373e3aefa2
msgid "FAQ"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:137
# ce48e374e2f8426fb85ad7a6144d4709
msgid "**This ticket I care about has been ignored for days/weeks/months! What can I do to get it committed?**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:140
# 4a2f75a0f22b49de873d567d3111ff46
msgid "First off, it's not personal. Django is entirely developed by volunteers (even the core developers), and sometimes folks just don't have time. The best thing to do is to send a gentle reminder to the django-developers mailing list asking for review on the ticket, or to bring it up in the #django-dev IRC channel."
msgstr ""

#: ../../internals/contributing/new-contributors.txt:146
# 519555d8e07f4f6e93326745804b52ab
msgid "**I'm sure my ticket is absolutely 100% perfect, can I mark it as RFC myself?**"
msgstr ""

#: ../../internals/contributing/new-contributors.txt:149
# 52ad18ee88ae4217a35fe136b7a29cbc
msgid "Short answer: No. It's always better to get another set of eyes on a ticket. If you're having trouble getting that second set of eyes, see question 1, above."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:3
# da776f3e8569484586dc83b46568ae68
msgid "Triaging tickets"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:5
# d5c65bdc12e74ad88e3df8098c4f8a8b
msgid "Django uses Trac_ for managing the work on the code base. Trac is a community-tended garden of the bugs people have found and the features people would like to see added. As in any garden, sometimes there are weeds to be pulled and sometimes there are flowers and vegetables that need picking. We need your help to sort out one from the other, and in the end we all benefit together."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:12
# 5488ee40dd4c48758bd60d7d75c64ee1
msgid "Like all gardens, we can aspire to perfection but in reality there's no such thing. Even in the most pristine garden there are still snails and insects. In a community garden there are also helpful people who -- with the best of intentions -- fertilize the weeds and poison the roses. It's the job of the community as a whole to self-manage, keep the problems to a minimum, and educate those coming into the community so that they can become valuable contributing members."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:20
# c10b44fdd61e481cbe884f790b4f3e34
msgid "Similarly, while we aim for Trac to be a perfect representation of the state of Django's progress, we acknowledge that this simply will not happen. By distributing the load of Trac maintenance to the community, we accept that there will be mistakes. Trac is \"mostly accurate\", and we give allowances for the fact that sometimes it will be wrong. That's okay. We're perfectionists with deadlines."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:27
# 34653d01e6884918a1cb7c44b8b9d8c4
msgid "We rely on the community to keep participating, keep tickets as accurate as possible, and raise issues for discussion on our mailing lists when there is confusion or disagreement."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:31
# 2f546ef66a8147e9a57f438555d55c35
msgid "Django is a community project, and every contribution helps. We can't do this without YOU!"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:35
# 7a1b89eed5ca41e5965c3494d03252ef
msgid "Triage workflow"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:37
# 3456858760254ff0ae5f3317649728af
msgid "Unfortunately, not all bug reports and feature requests in the ticket tracker provide all the :doc:`required details<bugs-and-features>`. A number of tickets have patches, but those patches don't meet all the requirements of a :ref:`good patch<patch-style>`."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:42
# 71c4783f2aba49e4bd75a601c124b115
msgid "One way to help out is to *triage* tickets that have been created by other users. The core team and several community members work on this regularly, but more help is always appreciated."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:46
# ed75ab0e98b2402f9d0ee074197849fe
msgid "Most of the workflow is based around the concept of a ticket's :ref:`triage stages <triage-stages>`. Each stage describes where in its lifetime a given ticket is at any time. Along with a handful of flags, this attribute easily tells us what and who each ticket is waiting on."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:51
# 053269309eeb4208ba7e16af70c4a48d
msgid "Since a picture is worth a thousand words, let's start there:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:58
# aec696e9176e4a8782e0daf68c547221
msgid "We've got two roles in this diagram:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:60
# 2f7a414d01374820b9452f373effac9b
msgid ":doc:`Committers</internals/committers>` (also called core developers): people with commit access who are responsible for making the big decisions, writing large portions of the code and integrating the contributions of the community."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:65
# 1f9d3bf7942a42948ca3a70dfc4f2aed
msgid "Ticket triagers: anyone in the Django community who chooses to become involved in Django's development process. Our Trac installation is intentionally left open to the public, and anyone can triage tickets. Django is a community project, and we encourage :ref:`triage by the community<how-can-i-help-with-triaging>`."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:71
# ebe3d0ec19f64635b9f99d7b3686b580
msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:73
# e70d67c77abf4580a0442e0023f53340
msgid "Alice creates a ticket, and uploads an incomplete patch (no tests, incorrect implementation)."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:76
# 6a58473c987a4a54a8994ef72e39c877
msgid "Bob reviews the patch, marks it \"Accepted\", \"needs tests\", and \"patch needs improvement\", and leaves a comment telling Alice how the patch could be improved."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:80
# 383a2c0e616c4a27b221aa182fcb682b
msgid "Alice updates the patch, adding tests (but not changing the implementation). She removes the two flags."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:83
# c14580bebd774cb599e368a7ebfdb997
msgid "Charlie reviews the patch and resets the \"patch needs improvement\" flag with another comment about improving the implementation."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:86
# 77af1d65827144469722d06ffb364f7e
msgid "Alice updates the patch, fixing the implementation. She removes the \"patch needs improvement\" flag."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:89
# d59793c090bb4f50a1987876ee751a08
msgid "Daisy reviews the patch, and marks it RFC."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:91
# f3a958cb54d84257b7fb7b2e0aa3e848
msgid "Jacob, a core developer, reviews the RFC patch, applies it to his checkout, and commits it."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:94
# f607cd013fc0427b9f85b4601f8b9a14
msgid "Some tickets require much less feedback than this, but then again some tickets require much much more."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:100
# 0c8bb722402f47c0bc3709d2778657db
msgid "Triage stages"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:102
# 7fa66a1af5f943b8832bc2e85819071a
msgid "Below we describe in more detail the various stages that a ticket may flow through during its lifetime."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:106
# 558da92c3cc946c5ae729ac7cb75b87d
msgid "Unreviewed"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:108
# 49409421dc2242f3aa65c04156ab5335
msgid "The ticket has not been reviewed by anyone who felt qualified to make a judgment about whether the ticket contained a valid issue, a viable feature, or ought to be closed for any of the various reasons."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:113
# ff1a5493f5d9449ca8f606e33a6deff2
msgid "Accepted"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:115
# e2b0537ac5934a48a8de7fd76bfa464b
msgid "The big grey area! The absolute meaning of \"accepted\" is that the issue described in the ticket is valid and is in some stage of being worked on. Beyond that there are several considerations:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:119
# 9e7183ceecaa4e7ab75ad9f2507303b8
msgid "**Accepted + No Flags**"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:121
# 85bca8d7e5824646be3d1ff51b315a5f
msgid "The ticket is valid, but no one has submitted a patch for it yet. Often this means you could safely start writing a patch for it. This is generally more true for the case of accepted bugs than accepted features. A ticket for a bug that has been accepted means that the issue has been verified by at least one triager as a legitimate bug - and should probably be fixed if possible. An accepted new feature may only mean that one triager thought the feature would be good to have, but this alone does not represent a consensus view or imply with any certainty that a patch will be accepted for that feature. Seek more feedback before writing an extensive patch if you are in doubt."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:131
# a224a805840a44689ccfedf91133cd69
msgid "**Accepted + Has Patch**"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:133
# 151e1b33bc7049c5a5463b10e3e91af2
msgid "The ticket is waiting for people to review the supplied patch. This means downloading the patch and trying it out, verifying that it contains tests and docs, running the test suite with the included patch, and leaving feedback on the ticket."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:138
# 5f43608652f44b06a0b8a59a303e460b
msgid "**Accepted + Has Patch + Needs ...**"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:140
# 2efb6dbe805d4995952848569e739430
msgid "This means the ticket has been reviewed, and has been found to need further work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. \"Patch needs improvement\" will generally be accompanied by a comment on the ticket explaining what is needed to improve the code."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:146
# 74a88ec8bf8b423db36eb81a964c9c33
msgid "Ready For Checkin"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:148
# 3e21df8d85cc4c49ba5d9df7e443a6f7
msgid "The ticket was reviewed by any member of the community other than the person who supplied the patch and found to meet all the requirements for a commit-ready patch. A core committer now needs to give the patch a final review prior to being committed. See the :ref:`New contributors' FAQ<new-contributors-faq>` for \"My ticket has been in RFC forever! What should I do?\""
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:156
# b27cbdb25f3c4f828a10e7df501a750c
msgid "Someday/Maybe"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:158
# 5c469a1409dd4889b00cfa748f81c207
msgid "This stage isn't shown on the diagram. It's only used by core developers to keep track of high-level ideas or long term feature requests."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:161
# a5847129935641939794166d902b886f
msgid "These tickets are uncommon and overall less useful since they don't describe concrete actionable issues. They are enhancement requests that we might consider adding someday to the framework if an excellent patch is submitted. They are not a high priority."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:167
# b6c8c7e04e1d4b64ab863b2385e57e76
msgid "Other triage attributes"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:169
# ce495ed5496f4250a28542ed8bd86683
msgid "A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:172
# 5b7363206b9747a393ceed9b28317afc
msgid "Has patch"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:174
# 90fda82f07704597a484336fe8ff8881
msgid "This means the ticket has an associated :doc:`patch<writing-code/submitting-patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:179
# 88b2044877734d9383d82d20369f1d44
msgid "Needs documentation"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:181
# 6aba34d906ed4bb8a482726609ca1da0
msgid "This flag is used for tickets with patches that need associated documentation. Complete documentation of features is a prerequisite before we can check them into the codebase."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:186
# a661b8c949534a83942bfcd8541bf346
msgid "Needs tests"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:188
# 7beba87fbfe84294b52e584b97992aa0
msgid "This flags the patch as needing associated unit tests. Again, this is a required part of a valid patch."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:192
# 1655b0da0dbb4980a8db40df9e7409ef
msgid "Patch needs improvement"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:194
# cf43b0d6b90640d181075324bb5aeab0
msgid "This flag means that although the ticket *has* a patch, it's not quite ready for checkin. This could mean the patch no longer applies cleanly, there is a flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:200
# 46da1efa03e64851a4a0e9ecfca89c2b
msgid "Easy pickings"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:202
# cc12f15363aa4ef3866451cb0c2783ce
msgid "Tickets that would require small, easy, patches."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:205
# a59e220ac0914bcba4c4dca8f7c169f3
msgid "Type"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:207
# 15411f5b4e884579b8a3720c7c645b40
msgid "Tickets should be categorized by *type* between:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:210
# 0bbe695b3a2942c98bd399bdb70ce3eb
msgid "New Feature"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:210
# 52a35b111734430b9e5750f06817fe2f
msgid "For adding something new."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:213
# 616dd50d9ad24a6a89ca613e853ede4a
msgid "Bug"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:213
# a53beb34d8604443b7a08378bd3bd9c4
msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:217
# e44cf4701d484c9494d3333dc0e78ab7
msgid "Cleanup/optimization"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:216
# 36579ab67dfb42d188d36ab3bd2fbc57
msgid "For when nothing is broken but something could be made cleaner, better, faster, stronger."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:220
# 0bbe415f86904cd49306ef88bf965022
msgid "Component"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:222
# 6fd4705ca9da41d48924a48c0104d10a
msgid "Tickets should be classified into *components* indicating which area of the Django codebase they belong to. This makes tickets better organized and easier to find."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:227
# 7234cc5892814044abe7901f28197871
msgid "Severity"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:229
# 2000fe9720c84e6b81fb4d1704ee78b3
msgid "The *severity* attribute is used to identify blockers, that is, issues which should get fixed before releasing the next version of Django. Typically those issues are bugs causing regressions from earlier versions or potentially causing severe data losses. This attribute is quite rarely used and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:236
# 64e69528babb4b0f9d91515db038d296
msgid "Version"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:238
# 150b7d0936a24b7fa1870bcf477f12a9
msgid "It is possible to use the *version* attribute to indicate in which version the reported bug was identified."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:242
# 38e3bff4b9fa40b6abc0257375d4466d
msgid "UI/UX"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:244
# 523e3b326c994c498593505b4a9067e8
msgid "This flag is used for tickets that relate to User Interface and User Experiences questions. For example, this flag would be appropriate for user-facing features in forms or the admin interface."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:249
# eb7caff15b054e6794def6f2e2a5b987
msgid "Cc"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:251
# 702f2fe7e9d9495d94592196c706cd98
msgid "You may add your username or email address to this field to be notified when new contributions are made to the ticket."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:255
# bb86506f738c4dd3bffa94d60c2f96b7
msgid "Keywords"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:257
# cc242652303841f3aaaf044c27315603
msgid "With this field you may label a ticket with multiple keywords. This can be useful, for example, to group several tickets of a same theme. Keywords can either be comma or space separated. Keyword search finds the keyword string anywhere in the keywords. For example, clicking on a ticket with the keyword \"form\" will yield similar tickets tagged with keywords containing strings such as \"formset\", \"modelformset\", and \"ManagementForm\"."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:267
# 823cfd96189842a8af2dcf7455292a62
msgid "Closing Tickets"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:269
# 4166c569b886475ebdb3b470b0bb48bd
msgid "When a ticket has completed its useful lifecycle, it's time for it to be closed. Closing a ticket is a big responsibility, though. You have to be sure that the issue is really resolved, and you need to keep in mind that the reporter of the ticket may not be happy to have their ticket closed (unless it's fixed, of course). If you're not certain about closing a ticket, just leave a comment with your thoughts instead."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:276
# d2db3fa307224afbae523cdac2354e4a
msgid "If you do close a ticket, you should always make sure of the following:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:278
# ea58b95e4a8b4d09852b3cb13446d643
msgid "Be certain that the issue is resolved."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:280
# 2466062176584a1ab5c07653d5a92ba7
msgid "Leave a comment explaining the decision to close the ticket."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:282
# 436acd40f4b145938bb8e58fcc3ce2e3
msgid "If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:284
# 4658706f0db44ec588565be7a85ba4bd
msgid "If the ticket is a duplicate, reference the original ticket. Also cross-reference the closed ticket by leaving a comment in the original one -- this allows to access more related information about the reported bug or requested feature."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:289
# 49fa427141c24ca9a236742757db21b2
msgid "**Be polite.** No one likes having their ticket closed. It can be frustrating or even discouraging. The best way to avoid turning people off from contributing to Django is to be polite and friendly and to offer suggestions for how they could improve this ticket and other tickets in the future."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:295
# 45557e9846304634bdfb6840bcde2623
msgid "A ticket can be resolved in a number of ways:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:299
# ae1cea804d9e46228f52bc1c5dfdb45d
msgid "fixed"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:298
# e2368c67dc8d434fb011193a56d92ece
msgid "Used by the core developers once a patch has been rolled into Django and the issue is fixed."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:306
# c7c83ad45576447ca8823ec77a9c269d
msgid "invalid"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:302
# f1bada10e7694d91b6b27cc82d3eb737
msgid "Used if the ticket is found to be incorrect. This means that the issue in the ticket is actually the result of a user error, or describes a problem with something other than Django, or isn't a bug report or feature request at all (for example, some new users submit support queries as tickets)."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:314
# 7ab3d9ea3d0741d7873e9ced86381631
msgid "wontfix"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:309
# 5ecb178ca8644194a716cabcb884548c
msgid "Used when a core developer decides that this request is not appropriate for consideration in Django. This is usually chosen after discussion in the `django-developers`_ mailing list. Feel free to start or join in discussions of \"wontfix\" tickets on the django-developers_ mailing list, but please do not reopen tickets closed as \"wontfix\" by a :doc:`core developer</internals/committers>`."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:319
# 7f822e7f7ef5443b8acdc1e2aa9fedc3
msgid "duplicate"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:317
# a79a5f0c33d345ff8496bc4226e5c35f
msgid "Used when another ticket covers the same issue. By closing duplicate tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:323
# 0cdaba0681ce4b689bc84bc765c06394
msgid "worksforme"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:322
# 325448658eb24a5d9733462e9c89c50f
msgid "Used when the ticket doesn't contain enough detail to replicate the original bug."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:328
# e7cea616cf6d4f9fb8a316e85db2082f
msgid "needsinfo"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:326
# 0e8e435c055a4171a5f957dad919f2a5
msgid "Used when the ticket does not contain enough information to replicate the reported issue but is potentially still valid. The ticket should be reopened when more information is supplied."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:330
# 33b48511031a4bba9be559e3cff7a93d
msgid "If you believe that the ticket was closed in error -- because you're still having the issue, or it's popped up somewhere else, or the triagers have made a mistake -- please reopen the ticket and provide further information. Again, please do not reopen tickets that have been marked as \"wontfix\" by core developers and bring the issue to django-developers_ instead."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:339
# d1766b8741864e4592724d5cd5fbc20e
msgid "How can I help with triaging?"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:341
# 1a9b392d46e04cfe9f4a0bda06864b0d
msgid "The triage process is primarily driven by community members. Really, **ANYONE** can help."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:344
# 0d96aac5a57049a4be796c3e8bafd2de
msgid "Core developers may provide feedback on issues they're familiar with, or make decisions on controversial ones, but they aren't responsible for triaging tickets in general."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:348
# 2d96a2e0e17b4c0895b84736741d352f
msgid "To get involved, start by `creating an account on Trac`_. If you have an account but have forgotten your password, you can reset it using the `password reset page`_."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:352
# 4e3fc8caf8ea4385a3349b0e1e6b2179
msgid "Then, you can help out by:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:354
# 98f9432317824085a8129a103a6734ed
msgid "Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\" or \"duplicate.\""
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:356
# 81c78fcf4d2c468ab3888ada8441b947
msgid "Closing \"Unreviewed\" tickets as \"needsinfo\" when the description is too sparse to be actionnable, or when they're feature requests requiring a discussion on `django-developers`_."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:360
# 9334b730725949368438f3907253cb1e
msgid "Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" flags for tickets where they are incorrectly set."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:363
# 631533aa5d894815b2a41bd5294a71e2
msgid "Setting the \"`Easy pickings`_\" flag for tickets that are small and relatively straightforward."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:366
# 841b2a56552f4487afff771d420cf537
msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:368
# 4c18e4dc2cca42cd9b381f9f67927e76
msgid "Checking that old tickets are still valid. If a ticket hasn't seen any activity in a long time, it's possible that the problem has been fixed but the ticket hasn't yet been closed."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:372
# ee67d20b80fb44008d6801dac6d8935c
msgid "Identifying trends and themes in the tickets. If there a lot of bug reports about a particular part of Django, it may indicate we should consider refactoring that part of the code. If a trend is emerging, you should raise it for discussion (referencing the relevant tickets) on `django-developers`_."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:378
# ce01fa5c8c8547bfba7fbde8d891fde2
msgid "Verify if patches submitted by other users are correct. If they do and also contain appropriate documentation and tests then move them to the \"Ready for Checkin\" stage. If they don't then leave a comment to explain why and set the corresponding flags (\"Patch needs improvement\", \"Needs tests\" etc.)."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:386
# 641a35c480e046719cda48545885dccf
msgid "The `Reports page`_ contains links to many useful Trac queries, including several that are useful for triaging tickets and reviewing patches as suggested above."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:390
# e825fe86099a486994fd73f17017e65c
msgid "You can also find more :doc:`new-contributors`."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:394
# e5efe9ffd0294f3cb37b4f320a042d5a
msgid "However, we do ask the following of all general community members working in the ticket database:"
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:397
# bcb02b3c59394f46bd2f6b3f3f458700
msgid "Please **don't** close tickets as \"wontfix.\" The core developers will make the final determination of the fate of a ticket, usually after consultation with the community."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:401
# 20ae6d7a6e584c3bbe75146855beb060
msgid "Please **don't** promote your own tickets to \"Ready for checkin\". You may mark other people's tickets which you've reviewed as \"Ready for checkin\", but you should get at minimum one other community member to review a patch that you submit."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:406
# f4eb38976fb841cf9c12a0f91dd385f6
msgid "Please **don't** reverse a decision that has been made by a :doc:`core developer</internals/committers>`. If you disagree with a decision that has been made, please post a message to `django-developers`_."
msgstr ""

#: ../../internals/contributing/triaging-tickets.txt:410
# 9769751449d644a0b7f9c8c31ef00f08
msgid "If you're unsure if you should be making a change, don't make the change but instead leave a comment with your concerns on the ticket, or post a message to `django-developers`_. It's okay to be unsure, but your input is still valuable."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:3
# 77061ab0aa51409e8637b4439795b312
msgid "Coding style"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:5
# 06f43ed959604274b004b80185169765
msgid "Please follow these coding standards when writing code for inclusion in Django."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:8
# 55b418ab9d11497c9345ab8f7ca71b1f
msgid "Python style"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:10
# 3cca8d70042e4621b5c37ae8667e2b19
msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:12
# 54ebd1769ab04317bda0fafd312900c6
msgid "You could use a tool like `pep8`_ to check for some problems in this area, but remember that :pep:`8` is only a guide, so respect the style of the surrounding code as a primary goal."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:16
# 8346637b14d24401b31c1a7cb4421f2f
msgid "One big exception to :pep:`8` is our preference of longer line lengths. We're well into the 21st Century, and we have high-resolution computer screens that can fit way more than 79 characters on a screen. Don't limit lines of code to 79 characters if it means the code looks significantly uglier or is harder to read."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:22
# 855b3b2234c544c88bb39691e8e3e708
msgid "Use four spaces for indentation."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:24
# 8db659d7f8954bdeb8463a2720c6a9c2
msgid "Use underscores, not camelCase, for variable, function and method names (i.e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters``)."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:27
# 4d1285db359242009ccb32336d4cc1e4
msgid "Use ``InitialCaps`` for class names (or for factory functions that return classes)."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:30
# fdc780408f5d4a0b87ad3932a308aab5
msgid "In docstrings, use \"action words\" such as::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:38
# 25b831226c3f4652b5f364cd194fb36f
msgid "Here's an example of what not to do::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:47
# 57e85b53d9cd45d18b19edb83f55292b
msgid "Template style"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:49
# d855cb5dd695466fab1309249eb1777a
msgid "In Django template code, put one (and only one) space between the curly brackets and the tag contents."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:52
# 4e1da8afeab2477ebfc38d6b4e714cd3
msgid "Do this:"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:58
# ffe946f48f074183a322a5f7b0caa497
msgid "Don't do this:"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:65
# b30a97e32c2d4759acfcfc50f8434721
msgid "View style"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:67
# f890656b494c4f128becf25c64716d9b
msgid "In Django views, the first parameter in a view function should be called ``request``."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:70
#: ../../internals/contributing/writing-code/coding-style.txt:86
#: ../../internals/contributing/writing-code/coding-style.txt:101
# 4bd1a566038544b1a6001bd4d62a9bdb
# 271749598d594a40b53419fd6513f338
# 1641d56e124c4ace9a55c9842080cd43
msgid "Do this::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:75
#: ../../internals/contributing/writing-code/coding-style.txt:92
#: ../../internals/contributing/writing-code/coding-style.txt:110
# 46c38eced9c34dae96039dfab382b890
# 914f90901b784613a07bd29d03d6cc63
# 831a8e989a8f479985f130ed6d43c936
msgid "Don't do this::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:81
# 1bc9d012341644758f8f5a43272cecf8
msgid "Model style"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:83
# 9b631afed1694f028664675f7c495251
msgid "Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:98
# 866e89318f3e4f109a54599f4869539f
msgid "The ``class Meta`` should appear *after* the fields are defined, with a single blank line separating the fields and the class definition."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:118
# 5cb7e6ffc17d457a9af4570e9fbb717c
msgid "Don't do this, either::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:127
# 8a599b5afb0d4ddf92717c6ab73678d8
msgid "If you define a ``__str__`` method (previously ``__unicode__`` before Python 3 was supported), decorate the model class with :func:`~django.utils.encoding.python_2_unicode_compatible`."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:131
# a6c4b3c2be9d4da3a226ebffc0b0e609
msgid "The order of model inner classes and standard methods should be as follows (noting that these are not all required):"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:134
# f844d9ba84bc42008c3763ba051d0332
msgid "All database fields"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:135
# 240cc5d02d03475eb50e214d7b157c9e
msgid "Custom manager attributes"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:136
# be280a3c972a4d408173d356407e3c27
msgid "``class Meta``"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:137
# 0e5deabea81b46e7957f628b8780855f
msgid "``def __str__()``"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:138
# 48077f66033046dba14e4cf7f01cd87f
msgid "``def save()``"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:139
# b73b7451fa364cd1ab5a48091ef57818
msgid "``def get_absolute_url()``"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:140
# 73696d7688504905b72c60aabf2f3c1c
msgid "Any custom methods"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:142
# cd89d5c41e5d4cb082e9251fd0f455a6
msgid "If ``choices`` is defined for a given model field, define each choice as a tuple of tuples, with an all-uppercase name as a class attribute on the model. Example::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:155
# 33930a7b8289412c8479c78d3f9f4f29
msgid "Use of ``django.conf.settings``"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:157
# 9813f6cc829d4defbb5946230a60ed27
msgid "Modules should not in general use settings stored in ``django.conf.settings`` at the top level (i.e. evaluated when the module is imported). The explanation for this is as follows:"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:161
# 839c6728fe4c4b58b2882124d21b7656
msgid "Manual configuration of settings (i.e. not relying on the ``DJANGO_SETTINGS_MODULE`` environment variable) is allowed and possible as follows::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:169
# 7e488c4ab61d4694b4884c5cc46ab478
msgid "However, if any setting is accessed before the ``settings.configure`` line, this will not work. (Internally, ``settings`` is a ``LazyObject`` which configures itself automatically when the settings are accessed if it has not already been configured)."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:174
# 30f30cd1744740a59d62b62343504820
msgid "So, if there is a module containing some code as follows::"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:181
# 7325a1d2d76948ad87bec9278a3f4b86
msgid "...then importing this module will cause the settings object to be configured. That means that the ability for third parties to import the module at the top level is incompatible with the ability to configure the settings object manually, or makes it very difficult in some circumstances."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:186
# 3e1e4f9c0a244130a039991b3228e704
msgid "Instead of the above code, a level of laziness or indirection must be used, such as ``django.utils.functional.LazyObject``, ``django.utils.functional.lazy()`` or ``lambda``."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:191
# 4a6709a687f04e8c9fa9d60f84e146cd
msgid "Miscellaneous"
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:193
# 592e8e126bc643bf84da1950dca82e80
msgid "Mark all strings for internationalization; see the :doc:`i18n documentation </topics/i18n/index>` for details."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:196
# c818ad2a10ba46d29ffd04bc237fa600
msgid "Remove ``import`` statements that are no longer used when you change code. The most common tools for this task are `pyflakes`_ and `pylint`_."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:199
# f3c13b45c5804546a5161be2fcd46385
msgid "Systematically remove all trailing whitespaces from your code as those add unnecessary bytes, add visual clutter to the patches and can also occasionally cause unnecessary merge conflicts. Some IDE's can be configured to automatically remove them and most VCS tools can be set to highlight them in diff outputs. Note, however, that patches which only remove whitespace (or only make changes for nominal :pep:`8` conformance) are likely to be rejected, since they only introduce noise rather than code improvement. Tidy up when you're next changing code in the area."
msgstr ""

#: ../../internals/contributing/writing-code/coding-style.txt:208
# b9fa4449dfbb459c8c81e089d99ed621
msgid "Please don't put your name in the code you contribute. Our policy is to keep contributors' names in the ``AUTHORS`` file distributed with Django -- not scattered throughout the codebase itself. Feel free to include a change to the ``AUTHORS`` file in your patch if you make more than a single trivial change."
msgstr ""

#: ../../internals/contributing/writing-code/index.txt:3
# 533c9143d40c408886edb24e003fdbc5
msgid "Writing code"
msgstr ""

#: ../../internals/contributing/writing-code/index.txt:5
# a367802bea2848ed827706c9e59ef446
msgid "So you'd like to write some code to improve Django. Awesome! Browse the following sections to find out how to give your code patches the best chances to be included in Django core:"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:3
# a284745f970b43c78eec4d7c2869bb19
msgid "Submitting patches"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:5
# 140bdcf7e43b4c09961e43f2626d3158
msgid "We're always grateful for patches to Django's code. Indeed, bug reports with associated patches will get fixed *far* more quickly than those without patches."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:10
# f4a5f85a8d0a4cf6845e91a0712ae168
msgid "Typo fixes and trivial documentation changes"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:12
# a9ec39ee18f7432a8ca3663f87164899
msgid "If you are fixing a really trivial issue, for example changing a word in the documentation, the preferred way to provide the patch is using GitHub pull requests without a Trac ticket. Trac tickets are still acceptable."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:16
# 81a0c3da560746c79fea0a272e3b1f2b
msgid "See the :doc:`working-with-git` for more details on how to use pull requests."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:19
# 7591c8267ff04b9cab7261fa559c6167
msgid "\"Claiming\" tickets"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:21
# 535f63e240404fe1a8ce4639263ba1cb
msgid "In an open-source project with hundreds of contributors around the world, it's important to manage communication efficiently so that work doesn't get duplicated and contributors can be as effective as possible."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:25
# 5c0ad189f5bd454a87c7d46c99bf4140
msgid "Hence, our policy is for contributors to \"claim\" tickets in order to let other developers know that a particular bug or feature is being worked on."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:28
# 808f745867824aff88b647c67008d1ca
msgid "If you have identified a contribution you want to make and you're capable of fixing it (as measured by your coding ability, knowledge of Django internals and time availability), claim it by following these steps:"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:32
# 4c60c2b3ab4947978e83869ddd77f2b2
msgid "`Create an account`_ to use in our ticket system. If you have an account but have forgotten your password, you can reset it using the `password reset page`_."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:36
# 6cc53d143e634ef2947389be4bce437e
msgid "If a ticket for this issue doesn't exist yet, create one in our `ticket tracker`_."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:39
# e872e31459de48c19f53d8abeea8d73e
msgid "If a ticket for this issue already exists, make sure nobody else has claimed it. To do this, look at the \"Owned by\" section of the ticket. If it's assigned to \"nobody,\" then it's available to be claimed. Otherwise, somebody else is working on this ticket, and you either find another bug/feature to work on, or contact the developer working on the ticket to offer your help."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:46
# baf11088936a4a9fa3f416f6225b1401
msgid "Log into your account, if you haven't already, by clicking \"Login\" in the upper right of the ticket page."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:49
# 472a49e7e16e44a78d7c31b8d241bea8
msgid "Claim the ticket:"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:51
# affa7cacf60746568101d195a535ab92
msgid "click the \"assign to myself\" radio button under \"Action\" near the bottom of the page,"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:53
# a0532de3421a4ca5b56b04d7cc5f5605
msgid "then click \"Submit changes.\""
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:56
# 642edefa7f5442f7875e23e6814e033e
msgid "The Django software foundation requests that anyone contributing more than a trivial patch to Django sign and submit a `Contributor License Agreement`_, this ensures that the Django Software Foundation has clear license to all contributions allowing for a clear license for all users."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:66
# 03cd97dae4594ac683acf2ef41a8771b
msgid "Ticket claimers' responsibility"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:68
# f046873d48f84cda8b26b9bcc90445a2
msgid "Once you've claimed a ticket, you have a responsibility to work on that ticket in a reasonably timely fashion. If you don't have time to work on it, either unclaim it or don't claim it in the first place!"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:72
# 409a1e2778694d608ca3c87e19db038b
msgid "If there's no sign of progress on a particular claimed ticket for a week or two, another developer may ask you to relinquish the ticket claim so that it's no longer monopolized and somebody else can claim it."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:76
# dfb0a94fc7e7470eb8e447475e154469
msgid "If you've claimed a ticket and it's taking a long time (days or weeks) to code, keep everybody updated by posting comments on the ticket. If you don't provide regular updates, and you don't respond to a request for a progress report, your claim on the ticket may be revoked."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:81
# 2903cc74490344b9a8b2859c07fce026
msgid "As always, more communication is better than less communication!"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:84
# 328db288573d48f29811c047d37726ba
msgid "Which tickets should be claimed?"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:86
# d24af2dbc0f648b1878422e07e804afd
msgid "Of course, going through the steps of claiming tickets is overkill in some cases."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:89
# cd447eb7becd4d4ca7b762cf9a850a37
msgid "In the case of small changes, such as typos in the documentation or small bugs that will only take a few minutes to fix, you don't need to jump through the hoops of claiming tickets. Just submit your patch and be done with it."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:94
# 66ebe9d89ebf41099dcba98f959b72e7
msgid "Of course, it is *always* acceptable, regardless whether someone has claimed it or not, to submit patches to a ticket if you happen to have a patch ready."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:100
# e758c89787c347559c8eaf53b76e5349
msgid "Patch style"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:102
# 2bd5faa2b82f42598ef12539ecdf9987
msgid "Make sure that any contribution you do fulfills at least the following requirements:"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:105
# 7f5839776d0f4b879c94cc5ada18d566
msgid "The code required to fix a problem or add a feature is an essential part of a patch, but it is not the only part. A good patch should also include a :doc:`regression test <unit-tests>` to validate the behavior that has been fixed and to prevent the problem from arising again. Also, if some tickets are relevant to the code that you've written, mention the ticket numbers in some comments in the test so that one can easily trace back the relevant discussions after your patch gets committed, and the tickets get closed."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:113
# 32ae31a30b854f3099f70b0c17d583cc
msgid "If the code associated with a patch adds a new feature, or modifies behavior of an existing feature, the patch should also contain documentation."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:117
# bf9b6ab5842e428cafdf1e60fd966c1f
msgid "You can use either GitHub branches and pull requests or direct patches to publish your work. If you use the Git workflow, then you should announce your branch in the ticket by including a link to your branch. When you think your work is ready to be merged in create a pull request."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:122
# 0b52b58ae2274f7c878a5deadc65aa8a
msgid "See the :doc:`working-with-git` documentation for mode details."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:124
# 61252e352fc042a7b963fd6d2c9b5362
msgid "You can also use patches in Trac. When using this style, follow these guidelines."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:127
# 5483bd2045d643f5a4b9fc33a14c9b95
msgid "Submit patches in the format returned by the ``git diff`` command. An exception is for code changes that are described more clearly in plain English than in code. Indentation is the most common example; it's hard to read patches when the only difference in code is that it's indented."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:133
# e98224487ce94a75bf4cb10ef5665a5e
msgid "Attach patches to a ticket in the `ticket tracker`_, using the \"attach file\" button. Please *don't* put the patch in the ticket description or comment unless it's a single line patch."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:137
# 8b83ff49459640ba8db5174d29688318
msgid "Name the patch file with a ``.diff`` extension; this will let the ticket tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:140
# 3510f3fb5a5a48c5af7736ed3ebd267d
msgid "Regardless of the way you submit your work, follow these steps."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:142
# 196c80b303e54a6c87ef23b05cc34300
msgid "Make sure your code matches our :doc:`coding-style`."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:144
# 098f7359a1f74fb5883f4a6ac61b6caf
msgid "Check the \"Has patch\" box on the ticket details. This will make it obvious that the ticket includes a patch, and it will add the ticket to the `list of tickets with patches`_."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:150
# a723060f35cc4519a276994a8652ef7d
msgid "Non-trivial patches"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:152
# 34f2fcb7ddfa4aedbfffe78dd5ad20ca
msgid "A \"non-trivial\" patch is one that is more than a simple bug fix. It's a patch that introduces Django functionality and makes some sort of design decision."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:155
# 54e7bd918bc84559b0087ac5c80d040c
msgid "If you provide a non-trivial patch, include evidence that alternatives have been discussed on `django-developers`_."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:158
# 00074ed2e2534b1383e873487c69a9f2
msgid "If you're not sure whether your patch should be considered non-trivial, just ask."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:162
# bffdfda3032941509ef196387765ced7
msgid "Javascript patches"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:164
# fb4cf80ec122401797cac09f78d1330e
msgid "Django's admin system leverages the jQuery framework to increase the capabilities of the admin interface. In conjunction, there is an emphasis on admin javascript performance and minimizing overall admin media file size. Serving compressed or \"minified\" versions of javascript files is considered best practice in this regard."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:170
# 0ce878f0e772401aa7d79acfc260af52
msgid "To that end, patches for javascript files should include both the original code for future development (e.g. ``foo.js``), and a compressed version for production use (e.g. ``foo.min.js``). Any links to the file in the codebase should point to the compressed version."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:176
# f6fd3de611ff4bd19368506c4adf3664
msgid "Compressing JavaScript"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:178
# 73134ab624df46ad8404f0d48fe63424
msgid "To simplify the process of providing optimized javascript code, Django includes a handy python script which should be used to create a \"minified\" version. To run it::"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:184
# 9efb9a0cff7e430391a59f74070c3901
msgid "Behind the scenes, ``compress.py`` is a front-end for Google's `Closure Compiler`_ which is written in Java. However, the Closure Compiler library is not bundled with Django directly, so those wishing to contribute complete javascript patches will need to download and install the library independently."
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:190
# 71de1570e147489b8f8f054fe4bc9ecd
msgid "The Closure Compiler library requires Java version 6 or higher (Java 1.6 or higher on Mac OS X. Note that Mac OS X 10.5 and earlier did not ship with Java 1.6 by default, so it may be necessary to upgrade your Java installation before the tool will be functional. Also note that even after upgrading Java, the default ``/usr/bin/java`` command may remain linked to the previous Java binary, so relinking that command may be necessary as well.)"
msgstr ""

#: ../../internals/contributing/writing-code/submitting-patches.txt:197
# 6e2d9eecad534516a3166eb0a11d59ec
msgid "Please don't forget to run ``compress.py`` and include the ``diff`` of the minified scripts when submitting patches for Django's javascript."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:3
# d3087de61cf04c53b47e3c26a81f067e
msgid "Unit tests"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:5
# bf8f60bb5d4f4dae8b74cc79ba6e1fd1
msgid "Django comes with a test suite of its own, in the ``tests`` directory of the code base. It's our policy to make sure all tests pass at all times."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:8
# 6c159e85151b4b68869eb84d2ec9c9eb
msgid "The tests cover:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:10
# 2c28a88c25034e71b2d4daadcd0b1ac5
msgid "Models, the database API and everything else in core Django core (``tests/``),"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:11
# 38dd32f5ff5a4f1ebd3a98f3c0339292
msgid ":ref:`contrib-apps` (``django/contrib/<app>/tests`` or ``tests/<app>_...``)."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:13
# e8c873fa64914afbb6bcbc221bda7a88
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:15
# bf9ea9fd601546d89dee2ed2c77efbb7
msgid "The Django tests all use the testing infrastructure that ships with Django for testing applications. See :doc:`Testing Django applications </topics/testing/overview>` for an explanation of how to write new tests."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:22
# 60d0f8bc1ffc4363b770c77e5d4f24c2
msgid "Running the unit tests"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:25
# acdc139352354456b37944153cf00056
msgid "Quickstart"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:27
# ad172ce1fa984a5895181fc3fc1a62bc
msgid "Running the tests requires a Django settings module that defines the databases to use. To make it easy to get started, Django provides a sample settings module that uses the SQLite database. To run the tests with this sample ``settings`` module:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:41
# 2a60aaed4d10420ca33cb651fa142321
msgid "Using another ``settings`` module"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:43
# 66f58f1edb264d15a7291d4d737089cd
msgid "The included settings module allows you to run the test suite using SQLite. If you want to test behavior using a different database (and if you're proposing patches for Django, it's a good idea to test across databases), you may need to define your own settings file."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:48
# 4e4ee2170675445dac674428c26dd97f
msgid "To run the tests with different settings, ensure that the module is on your ``PYTHONPATH`` and pass the module with ``--settings``."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:51
# cd9c682624734044bf2156d33381f74a
msgid "The :setting:`DATABASES` setting in any test settings module needs to define two databases:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:54
# 0029b93c95054141b71d26686b28f0a9
msgid "A ``default`` database. This database should use the backend that you want to use for primary testing"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:57
# 5ead28565a9f4be3861c42d2649f2f5c
msgid "A database with the alias ``other``. The ``other`` database is used to establish that queries can be directed to different databases. As a result, this database can use any backend you want. It doesn't need to use the same backend as the ``default`` database (although it can use the same backend if you want to)."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:63
# 653a78876c6f4a0bb9954048337e9b58
msgid "If you're using a backend that isn't SQLite, you will need to provide other details for each database:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:66
# e90d325c1106489ebba29eefd45be96d
msgid "The :setting:`USER` option needs to specify an existing user account for the database."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:69
# f9bc029c61b941018afa1bf481a82f5b
msgid "The :setting:`PASSWORD` option needs to provide the password for the :setting:`USER` that has been specified."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:72
# 257d5016fda94a1e87b3b9809eabc4c5
msgid "The :setting:`NAME` option must be the name of an existing database to which the given user has permission to connect. The unit tests will not touch this database; the test runner creates a new database whose name is :setting:`NAME` prefixed with ``test_``, and this test database is deleted when the tests are finished. This means your user account needs permission to execute ``CREATE DATABASE``."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:79
# 3c1c1eb55de94a4d93eccea72d0ca8f6
msgid "You will also need to ensure that your database uses UTF-8 as the default character set. If your database server doesn't use UTF-8 as a default charset, you will need to include a value for :setting:`TEST_CHARSET` in the settings dictionary for the applicable database."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:85
# a175b3ec2be349f28648068021642053
msgid "Running only some of the tests"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:87
# 87db3b1f423747e9b6bbf527c152a4a7
msgid "Django's entire test suite takes a while to run, and running every single test could be redundant if, say, you just added a test to Django that you want to run quickly without running everything else. You can run a subset of the unit tests by appending the names of the test modules to ``runtests.py`` on the command line."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:93
# a7522a5d053d4523b504ccff9029d5f1
msgid "For example, if you'd like to run tests only for generic relations and internationalization, type:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:100
# c6fdd56e91144574b029b9341b178aec
msgid "How do you find out the names of individual tests? Look in ``tests/`` â€” each directory name there is the name of a test. Contrib app names are also valid test names."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:104
# c58f34a937ed47e882bb4a86f391ee49
msgid "If you just want to run a particular class of tests, you can specify a list of paths to individual test classes. For example, to run the ``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:112
# 7bb859dc077242138f8425d2fcabfa89
msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:119
# 997ad7add30843aba71f1990481138e2
msgid "Running the Selenium tests"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:121
# 3dc112128459478abc25675adb19d427
msgid "Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a real Web browser. To allow those tests to run and not be skipped, you must install the selenium_ package (version > 2.13) into your Python path and run the tests with the ``--selenium`` option:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:134
# e43d29bb57e4444ba56bc4514536ae90
msgid "Running all the tests"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:136
# 46d2bbd801564adb878ff931bded97d5
msgid "If you want to run the full suite of tests, you'll need to install a number of dependencies:"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:139
# 6294c39fd72a4547bbd6fd6abf181e80
msgid "bcrypt_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:140
# ac7c113805f74d55bd97039cadb85ebf
msgid "docutils_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:141
# 7f45980b008245f293980ffbd19689a0
msgid "Pillow_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:142
# 273f897d1fc04794a16d2cfa700e1341
msgid "PyYAML_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:143
# b96a6fdc1e1340f386ab487c24719725
msgid "pytz_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:144
# 95e66daf0a5e4788913170caedac28be
msgid "setuptools_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:145
# a73dfc3e4c794df687c682c97cfb5a41
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:146
# 5ead865dedbd4f49a054d96222815e37
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:147
# 8eebcff5a24d455fa8f9392d17baeca3
msgid "selenium_"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:149
# 49b1a391de9a45cf80762081caef6aa0
msgid "You can find these dependencies in `pip requirements files`_ inside the ``tests/requirements`` directory of the Django source tree and install them like so::"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:155
# a5b5ce193e3f4e67893d5012171eff01
msgid "You can also install the database adapter(s) of your choice using ``oracle.txt``, ``mysql.txt``, or ``postgres.txt``."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:158
# 149c2b29596347fab5371d5d3189dbc7
msgid "If you want to test the memcached cache backend, you'll also need to define a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:161
# 438a3ef8b38e4b53954e4a78ca28c30c
msgid "To run the GeoDjango tests, you will need to :doc:`setup a spatial database and install the Geospatial libraries</ref/contrib/gis/install/index>`."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:164
# 3fe889990c6643ec88e0132481c96810
msgid "Each of these dependencies is optional. If you're missing any of them, the associated tests will be skipped."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:179
# 6dddd58cfdf645de98e45a4ea5bb931f
msgid "Code coverage"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:181
# dc55389aed4b4af6b89c533ed1e943af
msgid "Contributors are encouraged to run coverage on the test suite to identify areas that need additional tests. The coverage tool installation and use is described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:185
# fc46d446aa6648e0bceca91632ec3591
msgid "To run coverage on the Django test suite using the standard test settings::"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:189
# 1b21ddb65fae4df6855cd7acb1e6e90a
msgid "After running coverage, generate the html report by running::"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:193
# 561f36a535344ccd9dd4ed65a425af83
msgid "When running coverage for the Django tests, the included ``.coveragerc`` settings file  defines ``coverage_html`` as the output directory for the report and also excludes several directories not relevant to the results (test code or external code included in Django)."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:201
# 2b625c3d13f64563948dc10452ade0ec
msgid "Contrib apps"
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:203
# 7f27c87e71d14bb7b7262a16ac82b768
msgid "Tests for contrib apps go in their respective directories under ``django/contrib``, in a ``tests.py`` file. You can split the tests over multiple modules by using a ``tests`` directory in the normal Python way."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:207
# 8ee17e9591e34bea9e7f950614f38e78
msgid "For the tests to be found, a ``models.py`` file must exist, even if it's empty. If you have URLs that need to be mapped, put them in ``tests/urls.py``."
msgstr ""

#: ../../internals/contributing/writing-code/unit-tests.txt:210
# f895266075e1477c8027a7ccc97d238a
msgid "To run tests for just one contrib app (e.g. ``auth``), use the same method as above::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:2
# b1d0782ff6694cbe89cc4c5e6f1b380a
msgid "Working with Git and GitHub"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:4
# 46f95f9b2ccb474fa53058cdce7d5fc8
msgid "This section explains how the community can contribute code to Django via pull requests. If you're interested in how core developers handle them, see :doc:`../committing-code`."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:8
# 9e8bb559c18f4c23b36c5a12f9782fbe
msgid "Below, we are going to show how to create a GitHub pull request containing the changes for Trac ticket #xxxxx. By creating a fully-ready pull request you will make the committers' job easier, meaning that your work is more likely to be merged into Django."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:13
# d5e6302e703f4c14a7c4227f7f9afaf2
msgid "You could also upload a traditional patch to Trac, but it's less practical for reviews."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:17
# 8c9969a36ad84904a04281d43d01824d
msgid "Installing Git"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:19
# 9ee4643f73aa444b8653698b32583c12
msgid "Django uses `Git`_ for its source control. You can `download <http://git-scm.com/download>`_ Git, but it's often easier to install with your operating system's package manager."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:23
# 95b139f5249c4639b555807b68f48819
msgid "Django's `Git repository`_ is hosted on `GitHub`_, and it is recommended that you also work using GitHub."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:26
# 3b251d7236a54ff3a1b300aaa51ce307
msgid "After installing Git the first thing you should do is setup your name and email::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:32
# fc59a5cba49b49809d3ebbb68b770d28
msgid "Note that ``user.name`` should be your real name, not your GitHub nick. GitHub should know the email you use in the ``user.email`` field, as this will be used to associate your commits with your GitHub account."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:41
# 4d890162d88446439464acba56f29a93
msgid "Setting up local repository"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:43
# 44ad4abf593f4804af0813c5f99f363d
msgid "When you have created your GitHub account, with the nick \"github_nick\", and forked Django's repository, create a local copy of your fork::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:48
# fbb8083492b3446191550a7066d644e1
msgid "This will create a new directory \"django\", containing a clone of your GitHub repository."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:51
# 596323188bf547c78d4ae3f47ed8a4b6
msgid "Your GitHub repository will be called \"origin\" in Git."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:53
# 9b5d41d9d3f542c5aa9ea67a867406fa
msgid "You should also setup django/django as an \"upstream\" remote (that is, tell git that the reference Django repository was the source of your fork of it)::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:59
# 3dd5067b074d42f68654c6f92a0f81a6
msgid "You can add other remotes similarly, for example::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:64
# fa7ca985d12046258c3d6962225f9783
msgid "Working on a ticket"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:66
# 947f8c3570ed4898ba91f9d07992fc6d
msgid "When working on a ticket create a new branch for the work, and base that work on upstream/master::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:71
# 9452b2903fa447539d67be81890d354c
msgid "The -b flag creates a new branch for you locally. Don't hesitate to create new branches even for the smallest things - that's what they are there for."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:74
# 152a37fd459e440c997d48789b0566a7
msgid "If instead you were working for a fix on the 1.4 branch, you would do::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:78
# 2af24980c3044b2c9024c41b1997b189
msgid "Assume the work is carried on ticket_xxxxx branch. Make some changes and commit them::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:83
# cc658aac144b4057bfdfcb9cf2341b30
msgid "When writing the commit message, follow the :ref:`commit message guidelines <committing-guidelines>` to ease the work of the committer. If you're uncomfortable with English, try at least to describe precisely what the commit does."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:88
# 62bb46b0ff234899928e65a604403d6d
msgid "If you need to do additional work on your branch, commit as often as necessary::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:94
# 5ea8c50cf5c145b1be732f9fabd829c3
msgid "Publishing work"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:96
# b8c06eb548004953ae110717015c7009
msgid "You can publish your work on GitHub just by doing::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:100
# 6aec155b73294139aa8bdd9eacd115e0
msgid "When you go to your GitHub page you will notice a new branch has been created."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:102
# 71e18535df2a4b6cb9dd5b5b4d0f8f61
msgid "If you are working on a Trac ticket, you should mention in the ticket that your work is available from branch ticket_xxxxx of your github repo. Include a link to your branch."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:106
# c1528e56b1904d1c8dde02eb9408b97a
msgid "Note that the above branch is called a \"topic branch\" in Git parlance. You are free to rewrite the history of this branch, by using ``git rebase`` for example. Other people shouldn't base their work on such a branch, because their clone would become corrupt when you edit commits."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:111
# 0a6de437dfba4c4e989815724f5022a4
msgid "There are also \"public branches\". These are branches other people are supposed to fork, so the history of these branches should never change. Good examples of public branches are the ``master`` and ``stable/A.B.x`` branches in the django/django repository."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:116
# c6c20671e6864571988b1724bb5cee5e
msgid "When you think your work is ready to be pulled into Django, you should create a pull request at GitHub. A good pull request means:"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:119
# df6ef0ed4e734094acb654cc1bff962f
msgid "commits with one logical change in each, following the :doc:`coding style <coding-style>`,"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:122
# 2bbcc01e6ec14f29b1908eede6ab796e
msgid "well-formed messages for each commit: a summary line and then paragraphs wrapped at 72 characters thereafter -- see the :ref:`committing guidelines <committing-guidelines>` for more details,"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:126
# 59acc3ee31214315b057c5b0a4331ffb
msgid "documentation and tests, if needed -- actually tests are always needed, except for documentation changes."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:129
# c0c9c7a65cbd4c9da5e48fcc6d2bbe6a
msgid "The test suite must pass and the documentation must build without warnings."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:131
# 5e178a72d89743a3b5b906297867144f
msgid "Once you have created your pull request, you should add a comment in the related Trac ticket explaining what you've done. In particular you should note the environment in which you ran the tests, for instance: \"all tests pass under SQLite and MySQL\"."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:136
# d655ba42398541a29e9f9b1e021d9fbd
msgid "Pull requests at GitHub have only two states: open and closed. The committer who will deal with your pull request has only two options: merge it or close it. For this reason, it isn't useful to make a pull request until the code is ready for merging -- or sufficiently close that a committer will finish it himself."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:143
# 54a69142dfe849e29b616c64dfabb116
msgid "Rebasing branches"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:145
# 3f86597b427a4540a27253294fd92efc
msgid "In the example above you created two commits, the \"Fixed ticket_xxxxx\" commit and \"Added two more tests\" commit."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:148
# b62847dd096a47698e715ffcdf8b41c4
msgid "We do not want to have the entire history of your working process in your repository. Your commit \"Added two more tests\" would be unhelpful noise. Instead, we would rather only have one commit containing all your work."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:152
# fa729590cd514788867ab67ed225dab9
msgid "To rework the history of your branch you can squash the commits into one by using interactive rebase::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:157
# bfbd4600f60f43d0aa2688de5f853bc5
msgid "The HEAD~2 above is shorthand for two latest commits. The above command will open an editor showing the two commits, prefixed with the word \"pick\"."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:160
# d4e45b384bed4b388611bf32d812e7b6
msgid "Change the second line to \"squash\" instead. This will keep the first commit, and squash the second commit into the first one. Save and quit the editor. A second editor window should open, so you can reword the commit message for the commit now that it includes both your steps."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:165
# bb890d07bbe84c60a5da5ebb45c8a3c0
msgid "You can also use the \"edit\" option in rebase. This way you can change a single commit, for example to fix a typo in a docstring::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:177
# 82780ebc9a0b4803806ee7faf91fc611
msgid "If your topic branch is already published at GitHub, for example if you're making minor changes to take into account a review, you will need to force- push the changes::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:183
# c7463c2f3195475f9a70e72a5a4e415f
msgid "Note that this will rewrite history of ticket_xxxxx - if you check the commit hashes before and after the operation at GitHub you will notice that the commit hashes do not match any more. This is acceptable, as the branch is merely a topic branch, and nobody should be basing their work on it."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:189
# 7d75d6fbedf140b390a354f7653c2ca2
msgid "After upstream has changed"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:191
# 8a5e20d61533486ba2038534f3d55277
msgid "When upstream (django/django) has changed, you should rebase your work. To do this, use::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:197
# e8521e41672a4f2784477315c0199069
msgid "The work is automatically rebased using the branch you forked on, in the example case using upstream/master."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:200
# 950345b521ac4a4c82b6ba9ed11a28f2
msgid "The rebase command removes all your local commits temporarily, applies the upstream commits, and then applies your local commits again on the work."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:203
# dda72b285e844b019b5f8d6eefa85979
msgid "If there are merge conflicts you will need to resolve them and then use ``git rebase --continue``. At any point you can use ``git rebase --abort`` to return to the original state."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:207
# 32ca8f941b164eb09824ff0b5645e951
msgid "Note that you want to *rebase* on upstream, not *merge* the upstream."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:209
# 4921d11938834718aef6c98df032a5ac
msgid "The reason for this is that by rebasing, your commits will always be *on top of* the upstream's work, not *mixed in with* the changes in the upstream. This way your branch will contain only commits related to its topic, which makes squashing easier."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:215
# 1be53011682041529ef2a98bbc2723d0
msgid "After review"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:217
# 07bb040b7aba41659d26a5646434ebae
msgid "It is unusual to get any non-trivial amount of code into core without changes requested by reviewers. In this case, it is often a good idea to add the changes as one incremental commit to your work. This allows the reviewer to easily check what changes you have done."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:222
# f242a37f67384668807920e5e223457d
msgid "In this case, do the changes required by the reviewer. Commit as often as necessary. Before publishing the changes, rebase your work. If you added two commits, you would run::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:228
# 9b243c22030c4ad1adaa09633acd7305
msgid "Squash the second commit into the first. Write a commit message along the lines of::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:236
# 9bc0be3d622e4fda914c58ce20b295a9
msgid "Finally push your work back to your GitHub repository. Since you didn't touch the public commits during the rebase, you should not need to force-push::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:241
# 9de3744939e44c33ad3a72ca9097e579
msgid "Your pull request should now contain the new commit too."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:243
# 54300037cde6412181cced959f58a1ff
msgid "Note that the committer is likely to squash the review commit into the previous commit when committing the code."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:247
# 5fcd11b1faf84521aba2ad440015157f
msgid "Working on a patch"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:249
# 3e244019682c4e3d9bb2c8329505cc47
msgid "One of the ways that developers can contribute to Django is by reviewing patches. Those patches will typically exist as pull requests on GitHub and can be easily integrated into your local repository::"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:256
# 68e97428c5af46beb091f3945a68f23c
msgid "This will create a new branch and then apply the changes from the pull request to it. At this point you can run the tests or do anything else you need to do to investigate the quality of the patch."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:260
# d3ab6b62032746fa8c44409da8ad6ca6
msgid "For more detail on working with pull requests see the :ref:`guidelines for committers <handling-pull-requests>`."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:264
# 1f8c0ae588ea434a9d6a17c5500aa2dc
msgid "Summary"
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:266
# 8b54419b73f14b07a12b28a3e37528df
msgid "Work on GitHub if you can."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:267
# 70bec58c6e244999800b3daa4a2dd359
msgid "Announce your work on the Trac ticket by linking to your GitHub branch."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:268
# 0671472dc7664865b25a6deb5dc4e971
msgid "When you have something ready, make a pull request."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:269
# 1f2c79ab357e47b994b79f7759cc6e9e
msgid "Make your pull requests as good as you can."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:270
# 5d4f17fe5be348e594273654c81b5339
msgid "When doing fixes to your work, use ``git rebase -i`` to squash the commits."
msgstr ""

#: ../../internals/contributing/writing-code/working-with-git.txt:271
# 9b4f2aa8c1634216bb9e6b62cf559100
msgid "When upstream has changed, do ``git fetch upstream; git rebase``."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:3
# 1619e7c3b2f9491dacad9d2c2d5feb33
msgid "Writing documentation"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:5
# accf700c39fe4d5293b2384a85cd8e2e
msgid "We place a high importance on consistency and readability of documentation. After all, Django was created in a journalism environment! So we treat our documentation like we treat our code: we aim to improve it as often as possible."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:10
# 5e1eeaec83d9406bbed3f01beee93d13
msgid "Documentation changes generally come in two forms:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:12
# ab02cf6494254ba6828a5a9145af1dad
msgid "General improvements: typo corrections, error fixes and better explanations through clearer writing and more examples."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:15
# 905e4e36ae124b7481fccc60f8254a36
msgid "New features: documentation of features that have been added to the framework since the last release."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:18
# 1e815a15f5d1410ca0128d313ba1a850
msgid "This section explains how writers can craft their documentation changes in the most useful and least error-prone ways."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:22
# 6d57f42069b24bbd983dd25630f52a9a
msgid "Getting the raw documentation"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:24
# f841bea6e2b246dfa09da40121049177
msgid "Though Django's documentation is intended to be read as HTML at https://docs.djangoproject.com/, we edit it as a collection of text files for maximum flexibility. These files live in the top-level ``docs/`` directory of a Django release."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:29
# db7e1599f4fe49b59b9fdbe4184d282d
msgid "If you'd like to start contributing to our docs, get the development version of Django from the source code repository (see :ref:`installing-development-version`). The development version has the latest-and-greatest documentation, just as it has latest-and-greatest code. We also backport documentation fixes and improvements, at the discretion of the committer, to the last release branch. That's because it's highly advantageous to have the docs for the last release be up-to-date and correct (see :ref:`differences-between-doc-versions`)."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:39
# 891e49ae03ba477784d4035b105259e0
msgid "Getting started with Sphinx"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:41
# f18adef2e04049459dd084f78ca3eed0
msgid "Django's documentation uses the Sphinx__ documentation system, which in turn is based on docutils__. The basic idea is that lightly-formatted plain-text documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:48
# f5617d3699a84f8aae48a861cbb365d6
msgid "To actually build the documentation locally, you'll currently need to install Sphinx -- ``sudo pip install Sphinx`` should do the trick."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:53
# 029b83dd343642cab2e6e7a97319b2f1
msgid "Building the Django documentation requires Sphinx 1.0.2 or newer. Sphinx also requires the Pygments__ library for syntax highlighting; building the Django documentation requires Pygments 1.1 or newer (a new-enough version should automatically be installed along with Sphinx)."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:60
# 8909957dc2444bb897d3df04c08b4550
msgid "Then, building the HTML is easy; just ``make html`` (or ``make.bat html`` on Windows) from the ``docs`` directory."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:63
# c7f451596d744f8384e1737b84b6f783
msgid "To get started contributing, you'll want to read the :ref:`reStructuredText Primer <sphinx:rst-primer>`. After that, you'll want to read about the :ref:`Sphinx-specific markup <sphinx:sphinxmarkup>` that's used to manage metadata, indexing, and cross-references."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:69
# c773d1bb71e545fe98f9192017932eb7
msgid "Commonly used terms"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:71
# 9c849e3bfe214c7e81725e7ccf42830d
msgid "Here are some style guidelines on commonly used terms throughout the documentation:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:74
# 010aeef8994f4919978d4a0e9aede7d0
msgid "**Django** -- when referring to the framework, capitalize Django. It is lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:77
# 99913c0f464f42a09a5e4a90a9a95d36
msgid "**email** -- no hyphen."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:79
# 2400189123bc433db718d659344c45aa
msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:81
# 3a03f12042d04f33a7027baff301d91c
msgid "**SQL** -- when referring to SQL, the expected pronunciation should be \"Ess Queue Ell\" and not \"sequel\". Thus in a phrase like \"Returns an SQL expression\", \"SQL\" should be preceded by \"an\" and not \"a\"."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:85
# 6b136dfe0563444089016d829529a811
msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:87
# 0ad3370cde6e409ead398563522e3085
msgid "**realize**, **customize**, **initialize**, etc. -- use the American \"ize\" suffix, not \"ise.\""
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:90
# f6b54642cd2a4076bcd30f5c428b2f10
msgid "**subclass** -- it's a single word without a hyphen, both as a verb (\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:93
# b9d510b73cb54f4799188e3efc992021
msgid "**Web**, **World Wide Web**, **the Web** -- note Web is always capitalized when referring to the World Wide Web."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:96
# 715087dfe73944829ce194bbe5a35cc3
msgid "**Web site** -- use two words, with Web capitalized."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:99
# 800e04c87ecc430aa0d1f5a55f30e7f2
msgid "Django-specific terminology"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:101
# 0ddb690a3e83491aa5492a718809f5a7
msgid "**model** -- it's not capitalized."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:103
# 1b2b8ee172114b18861693835a808b4e
msgid "**template** -- it's not capitalized."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:105
# 93718fef1a734fa4ad809658914b8b85
msgid "**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:108
# 5e83b06a74fc49068d59a399354cdcab
msgid "**view** -- it's not capitalized."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:111
# 7b38b1eec8534a68bb1df8fd0cec2c7d
msgid "Guidelines for reStructuredText files"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:113
# 729905feb567429293a471c8252edc3a
msgid "These guidelines regulate the format of our reST (reStructuredText) documentation:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:116
# 4e0ec2e2edab4326b74a73bddec87dca
msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:118
# 9a6c734721184a2f9bbef73c7c6235bd
msgid "Wrap the documentation at 80 characters wide, unless a code example is significantly less readable when split over two lines, or for another good reason."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:122
# ca8b2c01e6a94901a159d36f2aa695a1
msgid "The main thing to keep in mind as you write and edit docs is that the more semantic markup you can add the better. So::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:127
# 6b0a547725b640d193533b0665603619
msgid "Isn't nearly as helpful as::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:131
# 76edd24a57364bdda0c9b4472219fb65
msgid "This is because Sphinx will generate proper links for the latter, which greatly helps readers. There's basically no limit to the amount of useful markup you can add."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:135
# d8e91748368241c5bcbb880d2fdcd45e
msgid "Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' documentation."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:139
# 350a1eee5f354e72a13e4c2425a588ce
msgid "Django-specific markup"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:141
# 5a58bf50535f49db814e8c9805da85a4
msgid "Besides the `Sphinx built-in markup`__, Django's docs defines some extra description units:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:146
# 5505a3d8bc3f4753a77c136fa850cf46
msgid "Settings::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:150
# d1a08ffba28244ac9e7fbc5b075280e6
msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:152
# 8089190aebda420b8b1d55e1c828b2de
msgid "Template tags::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:156
# a13064bd80ed41c4b8e10b65a65e1325
msgid "To link, use ``:ttag:`regroup```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:158
# 8c2e1495462f4b45b29bd86a793f60f2
msgid "Template filters::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:162
# 7e3cd4cb0a9e4af9823a5af69f0d527a
msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:164
# bdece6d52747429bbceabfbc6de43b56
msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``)::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:168
# f678517738ce478f9d64b220f2f00a95
msgid "To link, use ``:lookup:`exact```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:170
# 84302fa479194910be175b7f28ee897c
msgid "``django-admin`` commands::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:174
# 48606a03e48e44da95ea16a5e52d9c4f
msgid "To link, use ``:djadmin:`syncdb```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:176
# 74d1cdfb5f1346cb8bf185df98b422e1
msgid "``django-admin`` command-line options::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:180
# 1aa635eb731348afafec881f57545772
msgid "To link, use ``:djadminopt:`--traceback```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:185
# 518037edaac448e7b0a72e7df339d379
msgid "Documenting new features"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:187
# e8080822e5e1483ebb1667fa55fa2090
msgid "Our policy for new features is:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:189
# 76b334c055b8480e9638fe16d88b2847
msgid "All documentation of new features should be written in a way that clearly designates the features are only available in the Django development version. Assume documentation readers are using the latest release, not the development version."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:194
# 956b9a6a297e45a5b9f59d447743d630
msgid "Our preferred way for marking new features is by prefacing the features' documentation with: \"``.. versionadded:: X.Y``\", followed by a a mandatory blank line and an optional content (indented)."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:198
# adc1d09c1c6646c1bba4e472c263450e
msgid "General improvements, or other changes to the APIs that should be emphasized should use the \"``.. versionchanged:: X.Y``\" directive (with the same format as the ``versionadded`` mentioned above."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:203
# dc56fc2849604e959b2ba490b8975106
msgid "An example"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:205
# 25fe6dcf2ce2440eb5aac2f06154f0ab
msgid "For a quick example of how it all fits together, consider this hypothetical example:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:208
# 77d9e4cb30d74f999427d88ff252343b
msgid "First, the ``ref/settings.txt`` document could have an overall layout like this:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:233
# 487b05cc2b5b46f4924c65a8bacadfa5
msgid "Next, the ``topics/settings.txt`` document could contain something like this:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:245
# 7a3484c364a24dd9b5801a570b66f7dd
msgid "We use the Sphinx :rst:role:`doc` cross reference element when we want to link to another document as a whole and the :rst:role:`ref` element when we want to link to an arbitrary location in a document."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:249
# d5f452fbaf094fe899d7ca0714f62b6d
msgid "Next, notice how the settings are annotated:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:267
# b279b03fbc584fb18899d5568ebb3cac
msgid "This marks up the following header as the \"canonical\" target for the setting ``ADMIN_FOR`` This means any time I talk about ``ADMIN_FOR``, I can reference it using ``:setting:`ADMIN_FOR```."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:271
# d706f712290540919d021c84f3c6c2cd
msgid "That's basically how everything fits together."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:276
# cc5b5350cb95468c9c332272e417675f
msgid "Improving the documentation"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:278
# 6a4d779270684b81aeb7e82ad2dcae58
msgid "A few small improvements can be made to make the documentation read and look better:"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:281
# 68856d7aef5f4fcb804008a45627f10e
msgid "Most of the various ``index.txt`` documents have *very* short or even non-existent intro text. Each of those documents needs a good short intro the content below that point."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:285
# 820a1a276c624de7876de9b26a5f7e40
msgid "The glossary is very perfunctory. It needs to be filled out."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:287
# 4072b321dc0b4e9a9595bb0e3469524a
msgid "Add more metadata targets. Lots of places look like::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:292
# ea823e17eea14d62b1d145feea2bc3c7
msgid "\\... these should be::"
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:296
# b91d3d91f1434e2f9747d1b353413721
msgid "That is, use metadata instead of titles."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:298
# 8cdaba7513ba46d9a102adb48f3a5765
msgid "Add more links -- nearly everything that's an inline code literal right now can probably be turned into a xref."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:301
# 30a008882742470dacef7aeda974a740
msgid "See the ``literals_to_xrefs.py`` file in ``_ext`` -- it's a shell script to help do this work."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:304
# 36e2d9e53023426e8bca748fe7964896
msgid "This will probably be a continuing, never-ending project."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:306
# d4e784fc03d342e280323b8071871302
msgid "Add `info field lists`__ where appropriate."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:310
# 1c558e37c2484eddbaf09ae8af2c9351
msgid "Whenever possible, use links. So, use ``:setting:`ADMIN_FOR``` instead of ````ADMIN_FOR````."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:313
# 89015bfae02b4d14a25e291eba66278d
msgid "Use directives where appropriate. Some directives (e.g. ``.. setting::``) are prefix-style directives; they go *before* the unit they're describing. These are known as \"crossref\" directives. Others (e.g. ``.. class::``) generate their own markup; these should go inside the section they're describing. These are called \"description units\"."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:320
# 8c5660d8c7f644c29ed9c58b72b462b7
msgid "You can tell which are which by looking at in :file:`_ext/djangodocs.py`; it registers roles as one of the other."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:323
# 4f87567f502e4e86b561efce775702ef
msgid "Add ``.. code-block:: <lang>`` to literal blocks so that they get highlighted."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:326
# 50a7a388724444d78490ef53f7da98ea
msgid "When referring to classes/functions/modules, etc., you'll want to use the fully-qualified name of the target (``:class:`django.contrib.contenttypes.models.ContentType```)."
msgstr ""

#: ../../internals/contributing/writing-documentation.txt:330
# 7809857ec52243c493b94650bcd3ff16
msgid "Since this doesn't look all that awesome in the output -- it shows the entire path to the object -- you can prefix the target with a ``~`` (that's a tilde) to get just the \"last bit\" of that path. So ``:class:`~django.contrib.contenttypes.models.ContentType``` will just display a link with the title \"ContentType\"."
msgstr ""

#: ../../internals/deprecation.txt:3
# 5fd79e7629c1495f98a4068a6a349a9f
msgid "Django Deprecation Timeline"
msgstr ""

#: ../../internals/deprecation.txt:5
# 197417bdf59a474f8676c1d609c55886
msgid "This document outlines when various pieces of Django will be removed or altered in a backward incompatible way, following their deprecation, as per the :ref:`deprecation policy <internal-release-deprecation-policy>`. More details about each item can often be found in the release notes of two versions prior."
msgstr ""

#: ../../internals/deprecation.txt:11
# 35daad4bc5ce4de3a6c912ae78b7e2a8
msgid "1.4"
msgstr ""

#: ../../internals/deprecation.txt:13
# 46fdc1bfa8b147ad87f5bd4eed028f46
msgid "See the :doc:`Django 1.2 release notes</releases/1.2>` for more details on these changes."
msgstr ""

#: ../../internals/deprecation.txt:16
# 596e6d5674704478b60fc3bcadb400ae
msgid "``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the ``{% csrf_token %}`` template tag inside forms to enable CSRF protection. ``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

#: ../../internals/deprecation.txt:20
# ca1b3a7fd0e94c4d82b2928f42f8cda1
msgid "The old imports for CSRF functionality (``django.contrib.csrf.*``), which moved to core in 1.2, will be removed."
msgstr ""

#: ../../internals/deprecation.txt:23
# 9c76aaefdcd7459aa53cb2281ccd81d4
msgid "The ``django.contrib.gis.db.backend`` module will be removed in favor of the specific backends."
msgstr ""

#: ../../internals/deprecation.txt:26
# 499a873eea3345f5a15ff7d9ae912361
msgid "``SMTPConnection`` will be removed in favor of a generic Email backend API."
msgstr ""

#: ../../internals/deprecation.txt:28
# ed2516a5f4b64abbb60ca62e35cffe12
msgid "The many to many SQL generation functions on the database backends will be removed."
msgstr ""

#: ../../internals/deprecation.txt:31
# 785c1f8623684c299a182d3986c89c9a
msgid "The ability to use the ``DATABASE_*`` family of top-level settings to define database connections will be removed."
msgstr ""

#: ../../internals/deprecation.txt:34
# 4bd9d480cd654eaca45d4e141d5fa026
msgid "The ability to use shorthand notation to specify a database backend (i.e., ``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

#: ../../internals/deprecation.txt:38
# 39c2d4edebe04d42b200ddfb2628c511
msgid "The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` methods will have to support multiple databases."
msgstr ""

#: ../../internals/deprecation.txt:41
# d1b3e87a7a044bdc9d9638e086e2166f
msgid "The ``Message`` model (in ``django.contrib.auth``), its related manager in the ``User`` model (``user.message_set``), and the associated methods (``user.message_set.create()`` and ``user.get_and_delete_messages()``), will be removed.  The :doc:`messages framework </ref/contrib/messages>` should be used instead. The related ``messages`` variable returned by the auth context processor will also be removed. Note that this means that the admin application will depend on the messages context processor."
msgstr ""

#: ../../internals/deprecation.txt:51
# 0c361783d340406794840cb5a4a286e0
msgid "Authentication backends will need to support the ``obj`` parameter for permission checking. The ``supports_object_permissions`` attribute will no longer be checked and can be removed from custom backends."
msgstr ""

#: ../../internals/deprecation.txt:55
# a375541d06ea4126affd5d23e58635a2
msgid "Authentication backends will need to support the ``AnonymousUser`` class being passed to all methods dealing with permissions.  The ``supports_anonymous_user`` variable will no longer be checked and can be removed from custom backends."
msgstr ""

#: ../../internals/deprecation.txt:60
# 4e03ace9f9c94824abb1be120969cc97
msgid "The ability to specify a callable template loader rather than a ``Loader`` class will be removed, as will the ``load_template_source`` functions that are included with the built in template loaders for backwards compatibility."
msgstr ""

#: ../../internals/deprecation.txt:65
# 6c5093f5569a4ec4b7e856b6af7861bd
msgid "``django.utils.translation.get_date_formats()`` and ``django.utils.translation.get_partial_date_formats()``. These functions will be removed; use the locale-aware ``django.utils.formats.get_format()`` to get the appropriate formats."
msgstr ""

#: ../../internals/deprecation.txt:70
# 66a4829da4e647b7a8a09894680bf6aa
msgid "In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, ``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will be removed. Use ``django.utils.formats.get_format()`` to get the appropriate formats."
msgstr ""

#: ../../internals/deprecation.txt:76
# c0523ac096c14297a4ac77854484b46f
msgid "The ability to use a function-based test runner will be removed, along with the ``django.test.simple.run_tests()`` test runner."
msgstr ""

#: ../../internals/deprecation.txt:79
# 5975b88d6f174242a385c009bb2c70a7
msgid "The ``views.feed()`` view and ``feeds.Feed`` class in ``django.contrib.syndication`` will be removed. The class-based view ``views.Feed`` should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:83
# d19a13cf9b4e47b9b61409bf509cb78e
msgid "``django.core.context_processors.auth``.  This release will remove the old method in favor of the new method in ``django.contrib.auth.context_processors.auth``."
msgstr ""

#: ../../internals/deprecation.txt:87
# eb47618a0d714cb3be29e3b4f0870370
msgid "The ``postgresql`` database backend will be removed, use the ``postgresql_psycopg2`` backend instead."
msgstr ""

#: ../../internals/deprecation.txt:90
# 08bfe5d55db94f93ae0995f0314a76a6
msgid "The ``no`` language code will be removed and has been replaced by the ``nb`` language code."
msgstr ""

#: ../../internals/deprecation.txt:93
# c8e2854d8f7e425aa4dd59190f6c67c9
msgid "Authentication backends will need to define the boolean attribute ``supports_inactive_user`` until version 1.5 when it will be assumed that all backends will handle inactive users."
msgstr ""

#: ../../internals/deprecation.txt:97
# c3f42d60c93b453199ea29b2c79569cc
msgid "``django.db.models.fields.XMLField`` will be removed. This was deprecated as part of the 1.3 release. An accelerated deprecation schedule has been used because the field hasn't performed any role beyond that of a simple ``TextField`` since the removal of oldforms. All uses of ``XMLField`` can be replaced with ``TextField``."
msgstr ""

#: ../../internals/deprecation.txt:103
# 3d50fda32158426eb275ca1b099880f6
msgid "The undocumented ``mixin`` parameter to the ``open()`` method of ``django.core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

#: ../../internals/deprecation.txt:108
# 43510ff0545748448a75f045c8930e42
msgid "1.5"
msgstr ""

#: ../../internals/deprecation.txt:110
# 1793dbc208db4c3aa1589a454976369e
msgid "See the :doc:`Django 1.3 release notes</releases/1.3>` for more details on these changes."
msgstr ""

#: ../../internals/deprecation.txt:113
# 7aa8521cd2124b13ad38b84b2bf43974
msgid "Starting Django without a :setting:`SECRET_KEY` will result in an exception rather than a ``DeprecationWarning``. (This is accelerated from the usual deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

#: ../../internals/deprecation.txt:117
# c0c17d2a016b49978ea80ab6deb0bbdc
msgid "The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:120
# 03cc3044ea504138b11ba57d0adf849a
msgid "The ``template`` attribute on :class:`~django.test.client.Response` objects returned by the :ref:`test client <test-client>` will be removed. The :attr:`~django.test.client.Response.templates` attribute should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:125
# 087914bc3a3d4af9ab5b9f3b7ad11ca9
msgid "The ``django.test.simple.DjangoTestRunner`` will be removed. Instead use a unittest-native class.  The features of the ``django.test.simple.DjangoTestRunner`` (including fail-fast and Ctrl-C test termination) can currently be provided by the unittest-native :class:`~unittest.TextTestRunner`."
msgstr ""

#: ../../internals/deprecation.txt:131
# fb5f3403dd0342ddb6c6c036b2c63818
msgid "The undocumented function ``django.contrib.formtools.utils.security_hash`` will be removed, instead use ``django.contrib.formtools.utils.form_hmac``"
msgstr ""

#: ../../internals/deprecation.txt:135
# e911aaee9ee0409589db774b6c5de3d3
msgid "The function-based generic view modules will be removed in favor of their class-based equivalents, outlined :doc:`here </topics/class-based-views/index>`."
msgstr ""

#: ../../internals/deprecation.txt:139
# 3db976e3be234f908023ca02ed226344
msgid "The ``django.core.servers.basehttp.AdminMediaHandler`` will be removed.  In its place use ``django.contrib.staticfiles.handlers.StaticFilesHandler``."
msgstr ""

#: ../../internals/deprecation.txt:143
# 6534015746f9448b988b9eb1a544a8d1
msgid "The template tags library ``adminmedia`` and the template tag ``{% admin_media_prefix %}`` will be removed in favor of the generic static files handling. (This is faster than the usual deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

#: ../../internals/deprecation.txt:148
# cf4e680641804da190d8e95392888f05
msgid "The :ttag:`url` and :ttag:`ssi` template tags will be modified so that the first argument to each tag is a template variable, not an implied string. In 1.4, this behavior is provided by a version of the tag in the ``future`` template tag library."
msgstr ""

#: ../../internals/deprecation.txt:153
# aa8181e67bd741ba819de3216fe6f2a6
msgid "The ``reset`` and ``sqlreset`` management commands will be removed."
msgstr ""

#: ../../internals/deprecation.txt:155
# f506f98d920349a79a24441de2bdf2e9
msgid "Authentication backends will need to support an inactive user being passed to all methods dealing with permissions. The ``supports_inactive_user`` attribute will no longer be checked and can be removed from custom backends."
msgstr ""

#: ../../internals/deprecation.txt:160
# 9472e1799b83441081591e5508a49506
msgid ":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a :class:`~django.contrib.gis.geos.GEOSException` when called on a geometry with no SRID value."
msgstr ""

#: ../../internals/deprecation.txt:164
# 14491858ab4c4131b1671ad56eef7bd5
msgid "``django.http.CompatCookie`` will be removed in favor of ``django.http.SimpleCookie``."
msgstr ""

#: ../../internals/deprecation.txt:167
# d60f1d5ed5794eff9c4cac0d25d390fa
msgid "``django.core.context_processors.PermWrapper`` and ``django.core.context_processors.PermLookupDict`` will be removed in favor of the corresponding ``django.contrib.auth.context_processors.PermWrapper`` and ``django.contrib.auth.context_processors.PermLookupDict``, respectively."
msgstr ""

#: ../../internals/deprecation.txt:173
# 2c9fd186aadc425a8810c79866366bc4
msgid "The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required to end with a trailing slash to ensure there is a consistent way to combine paths in templates."
msgstr ""

#: ../../internals/deprecation.txt:177
# a944003e413f469c9477d486dbf67597
msgid "``django.db.models.fields.URLField.verify_exists`` will be removed. The feature was deprecated in 1.3.1 due to intractable security and performance issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

#: ../../internals/deprecation.txt:182
# 17e02c0ccc664d97944b1dae05ed766a
msgid "Translations located under the so-called *project path* will be ignored during the translation building process performed at runtime. The :setting:`LOCALE_PATHS` setting can be used for the same task by including the filesystem path to a ``locale`` directory containing non-app-specific translations in its value."
msgstr ""

#: ../../internals/deprecation.txt:188
# 1d755a8fd7e44f279436e4d5d8132ef1
msgid "The Markup contrib app will no longer support versions of Python-Markdown library earlier than 2.1. An accelerated timeline was used as this was a security related deprecation."
msgstr ""

#: ../../internals/deprecation.txt:192
# 22f795e8bdc1415387cdb2d549b407c7
msgid "The ``CACHE_BACKEND`` setting will be removed. The cache backend(s) should be specified in the :setting:`CACHES` setting."
msgstr ""

#: ../../internals/deprecation.txt:196
# 62044597d9454467962327de2c9493e4
msgid "1.6"
msgstr ""

#: ../../internals/deprecation.txt:198
# e3149eef26224e4bb4bd5fb72b8c4564
msgid "See the :doc:`Django 1.4 release notes</releases/1.4>` for more details on these changes."
msgstr ""

#: ../../internals/deprecation.txt:201
# 0ee772675cc2477f9ac7ba6c00628afa
msgid "``django.contrib.databrowse`` will be removed."
msgstr ""

#: ../../internals/deprecation.txt:203
# e68778a71e4d445e894aa42f75a66c2d
msgid "``django.contrib.localflavor`` will be removed following an accelerated deprecation."
msgstr ""

#: ../../internals/deprecation.txt:206
# c062de0eae534b19a73f220c5047b99a
msgid "``django.contrib.markup`` will be removed following an accelerated deprecation."
msgstr ""

#: ../../internals/deprecation.txt:209
# cfb6e5d27b554b5eae35c3bb486f2160
msgid "The compatibility modules ``django.utils.copycompat`` and ``django.utils.hashcompat`` as well as the functions ``django.utils.itercompat.all`` and ``django.utils.itercompat.any`` will be removed. The Python builtin versions should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:214
# 6b07e7cad0064deda1d3371b05685c4d
msgid "The ``csrf_response_exempt`` and ``csrf_view_exempt`` decorators will be removed. Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the same function), and ``csrf_view_exempt`` has been a synonym for ``django.views.decorators.csrf.csrf_exempt``, which should be used to replace it."
msgstr ""

#: ../../internals/deprecation.txt:220
# 535a7ab478d9497985105a67fae92539
msgid "The ``django.core.cache.backends.memcached.CacheClass`` backend was split into two in Django 1.3 in order to introduce support for PyLibMC. The historical ``CacheClass`` will be removed in favor of ``django.core.cache.backends.memcached.MemcachedCache``."
msgstr ""

#: ../../internals/deprecation.txt:225
# 11800b5a89c54910a0e59ae01a38359e
msgid "The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be accessible through their GB-prefixed names (GB is the correct ISO 3166 code for United Kingdom)."
msgstr ""

#: ../../internals/deprecation.txt:229
# b1c89d70798b4e63967da109b985b714
msgid "The ``IGNORABLE_404_STARTS`` and ``IGNORABLE_404_ENDS`` settings have been superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 release. They will be removed."
msgstr ""

#: ../../internals/deprecation.txt:233
# 7f54799a1d764269bf05d7403838b52d
msgid "The :doc:`form wizard </ref/contrib/formtools/form-wizard>` has been refactored to use class-based views with pluggable backends in 1.4. The previous implementation will be removed."
msgstr ""

#: ../../internals/deprecation.txt:237
# 7cfe4f8fd8d142c1bd9705cee054b259
msgid "Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` will be removed."
msgstr ""

#: ../../internals/deprecation.txt:240
# 5d30a79216b7431f96d1fb368c0aefea
msgid "The backward-compatibility shim to automatically add a debug-false filter to the ``'mail_admins'`` logging handler will be removed. The :setting:`LOGGING` setting should include this filter explicitly if it is desired."
msgstr ""

#: ../../internals/deprecation.txt:245
# fa0dabe3d0874e85b759da55358020f1
msgid "The builtin truncation functions ``django.utils.text.truncate_words()`` and ``django.utils.text.truncate_html_words()`` will be removed in favor of the ``django.utils.text.Truncator`` class."
msgstr ""

#: ../../internals/deprecation.txt:249
# cf850e43e4294243aa4f108105ae5dd2
msgid "The :class:`~django.contrib.gis.geoip.GeoIP` class was moved to :mod:`django.contrib.gis.geoip` in 1.4 -- the shortcut in :mod:`django.contrib.gis.utils` will be removed."
msgstr ""

#: ../../internals/deprecation.txt:253
# dbc6fac836354e0cbb23db0653587ddb
msgid "``django.conf.urls.defaults`` will be removed. The functions :func:`~django.conf.urls.include`, :func:`~django.conf.urls.patterns` and :func:`~django.conf.urls.url` plus :data:`~django.conf.urls.handler404`, :data:`~django.conf.urls.handler500`, are now available through :mod:`django.conf.urls` ."
msgstr ""

#: ../../internals/deprecation.txt:259
# 0d91023758cd408c85430116372752b8
msgid "The functions ``setup_environ()`` and ``execute_manager()`` will be removed from :mod:`django.core.management`. This also means that the old (pre-1.4) style of :file:`manage.py` file will no longer work."
msgstr ""

#: ../../internals/deprecation.txt:263
# 130afb2ea972467287879e0ce4f1cc90
msgid "Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of template filter functions will no longer be supported."
msgstr ""

#: ../../internals/deprecation.txt:266
# cf45bc2dcb924db592d766d8f2499d8c
msgid "The attribute ``HttpRequest.raw_post_data`` was renamed to ``HttpRequest.body`` in 1.4. The backward compatibility will be removed -- ``HttpRequest.raw_post_data`` will no longer work."
msgstr ""

#: ../../internals/deprecation.txt:270
# cd54cacaa9a74400a134f1ef89f6245a
msgid "The value for the ``post_url_continue`` parameter in ``ModelAdmin.response_add()`` will have to be either ``None`` (to redirect to the newly created object's edit page) or a pre-formatted url. String formats, such as the previous default ``'../%s/'``, will not be accepted any more."
msgstr ""

#: ../../internals/deprecation.txt:277
# 068e9d3eb7b74fb6b4714c601063aa6c
msgid "1.7"
msgstr ""

#: ../../internals/deprecation.txt:279
# ef55d29a3ea24b47a1d6b635ccf88f8d
msgid "See the :doc:`Django 1.5 release notes</releases/1.5>` for more details on these changes."
msgstr ""

#: ../../internals/deprecation.txt:282
# e06a60e6c8184c999c7c15efa1ce1414
msgid "The module ``django.utils.simplejson`` will be removed. The standard library provides :mod:`json` which should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:285
# 9b9a668c72e74ebfbdd426673855aed3
msgid "The function ``django.utils.itercompat.product`` will be removed. The Python builtin version should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:288
# d7fee8d2578343b9ab2a447766c132aa
msgid "Auto-correction of INSTALLED_APPS and TEMPLATE_DIRS settings when they are specified as a plain string instead of a tuple will be removed and raise an exception."
msgstr ""

#: ../../internals/deprecation.txt:292
# 2077466b86114a90827e700840757a89
msgid "The ``mimetype`` argument to the ``__init__`` methods of :class:`~django.http.HttpResponse`, :class:`~django.template.response.SimpleTemplateResponse`, and :class:`~django.template.response.TemplateResponse`, will be removed. ``content_type`` should be used instead. This also applies to the :func:`~django.shortcuts.render_to_response` shortcut and the sitemamp views, :func:`~django.contrib.sitemaps.views.index` and :func:`~django.contrib.sitemaps.views.sitemap`."
msgstr ""

#: ../../internals/deprecation.txt:301
# 0b0431e01e3c4a6c82d8bc2173291b9e
msgid "When :class:`~django.http.HttpResponse` is instantiated with an iterator, or when :attr:`~django.http.HttpResponse.content` is set to an iterator, that iterator will be immediately consumed."
msgstr ""

#: ../../internals/deprecation.txt:305
# d1d9172efc444d6ebfac5873d94c8ec3
msgid "The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the User model, will be removed."
msgstr ""

#: ../../internals/deprecation.txt:308
# a1c3529550f647109c8d1553d0121cfe
msgid "The ``cleanup`` management command will be removed. It's replaced by ``clearsessions``."
msgstr ""

#: ../../internals/deprecation.txt:311
# d6ba6ff0a3034571906b3d197791831c
msgid "The ``daily_cleanup.py`` script will be removed."
msgstr ""

#: ../../internals/deprecation.txt:313
# e1b40af7a28a435b9db8eb26efc6d49d
msgid "The ``depth`` keyword argument will be removed from :meth:`~django.db.models.query.QuerySet.select_related`."
msgstr ""

#: ../../internals/deprecation.txt:316
# 73f9c8a5f8a1472685315474ea164dd6
msgid "The undocumented ``get_warnings_state()``/``restore_warnings_state()`` functions from :mod:`django.test.utils` and the ``save_warnings_state()``/ ``restore_warnings_state()`` :ref:`django.test.*TestCase <django-testcase-subclasses>` methods are deprecated. Use the :class:`warnings.catch_warnings` context manager available starting with Python 2.6 instead."
msgstr ""

#: ../../internals/deprecation.txt:323
# 5488e38f8ea94170b1037fae2e9cf755
msgid "The undocumented ``check_for_test_cookie`` method in :class:`~django.contrib.auth.forms.AuthenticationForm` will be removed following an accelerated deprecation. Users subclassing this form should remove calls to this method, and instead ensure that their auth related views are CSRF protected, which ensures that cookies are enabled."
msgstr ""

#: ../../internals/deprecation.txt:329
# 8dfa808016e04c05a0a246773fb2fe0f
msgid "The version of :func:`django.contrib.auth.views.password_reset_confirm` that supports base36 encoded user IDs (``django.contrib.auth.views.password_reset_confirm_uidb36``) will be removed. If your site has been running Django 1.6 for more than :setting:`PASSWORD_RESET_TIMEOUT_DAYS`, this change will have no effect. If not, then any password reset links generated before you upgrade to Django 1.7 won't work after the upgrade."
msgstr ""

#: ../../internals/deprecation.txt:338
# 9b17e44ddca94c0fa719f1b41fbaf29a
msgid "1.8"
msgstr ""

#: ../../internals/deprecation.txt:340
# e0247c93cd2644d48fc039414e96001e
msgid "``django.contrib.comments`` will be removed."
msgstr ""

#: ../../internals/deprecation.txt:342
# 976cb5c1f7aa49a58cb82ea831e5d9a2
msgid "The following transaction management APIs will be removed:"
msgstr ""

#: ../../internals/deprecation.txt:344
# 9ecf6649591542ae986a9812a278cd5a
msgid "``TransactionMiddleware``,"
msgstr ""

#: ../../internals/deprecation.txt:345
# a1218f71eab141f4ba8797044149e7fc
msgid "the decorators and context managers ``autocommit``, ``commit_on_success``, and ``commit_manually``, defined in ``django.db.transaction``,"
msgstr ""

#: ../../internals/deprecation.txt:347
# 3907aa90e14844118d6eb737b13f53d6
msgid "the functions ``commit_unless_managed`` and ``rollback_unless_managed``, also defined in ``django.db.transaction``,"
msgstr ""

#: ../../internals/deprecation.txt:349
# 5dbd07f4413240098d2a90a44cdfc2de
msgid "the ``TRANSACTIONS_MANAGED`` setting."
msgstr ""

#: ../../internals/deprecation.txt:351
# ec3e367e711c4e3f999c364870b2bcbf
msgid "Upgrade paths are described in the :ref:`transaction management docs <transactions-upgrading-from-1.5>`."
msgstr ""

#: ../../internals/deprecation.txt:354
# 3f7dbd1b4d6a40f9b7913dec7bb1d456
msgid "The :ttag:`cycle` and :ttag:`firstof` template tags will auto-escape their arguments. In 1.6 and 1.7, this behavior is provided by the version of these tags in the ``future`` template tag library."
msgstr ""

#: ../../internals/deprecation.txt:358
# c739b22d9bb143c08b67f71334ec8e24
msgid "The ``SEND_BROKEN_LINK_EMAILS`` setting will be removed. Add the :class:`django.middleware.common.BrokenLinkEmailsMiddleware` middleware to your :setting:`MIDDLEWARE_CLASSES` setting instead."
msgstr ""

#: ../../internals/deprecation.txt:362
# c68180ddd7a94ade9f823c3c940b33e4
msgid "``Model._meta.module_name`` was renamed to ``model_name``."
msgstr ""

#: ../../internals/deprecation.txt:364
# 04c431dd611c47c6b1a29953b4e615d4
msgid "Remove the backward compatible shims introduced to rename ``get_query_set`` and similar queryset methods. This affects the following classes: ``BaseModelAdmin``, ``ChangeList``, ``BaseCommentNode``, ``GenericForeignKey``, ``Manager``, ``SingleRelatedObjectDescriptor`` and ``ReverseSingleRelatedObjectDescriptor``."
msgstr ""

#: ../../internals/deprecation.txt:370
# 5e0d135ca4b743af8bfc03a56cda3e3c
msgid "Remove the backward compatible shims introduced to rename the attributes ``ChangeList.root_query_set`` and ``ChangeList.query_set``."
msgstr ""

#: ../../internals/deprecation.txt:373
# 05a394811db243d6bc0d21ca4c4ad540
msgid "``django.views.defaults.shortcut`` will be removed, as part of the goal of removing all ``django.contrib`` references from the core Django codebase. Instead use ``django.contrib.contenttypes.views.shortcut``. ``django.conf.urls.shortcut`` will also be removed."
msgstr ""

#: ../../internals/deprecation.txt:379
# bec0e78856f540e983a825fecb7ffe72
msgid "Support for the Python Imaging Library (PIL) module will be removed, as it no longer appears to be actively maintained & does not work on Python 3. You are advised to install `Pillow`_, which should be used instead."
msgstr ""

#: ../../internals/deprecation.txt:385
# 04a042655f3a43d8af587537ec57caa8
msgid "The following private APIs will be removed:"
msgstr ""

#: ../../internals/deprecation.txt:387
# bdc8d02cb853406aa9f4c4935d90d37c
msgid "``django.db.backend``"
msgstr ""

#: ../../internals/deprecation.txt:388
# 2d9d0897c04a491185d6b15c1c919e8f
msgid "``django.db.close_connection()``"
msgstr ""

#: ../../internals/deprecation.txt:389
# c2ca93398d5b4134bd5868350e0bb57a
msgid "``django.db.backends.creation.BaseDatabaseCreation.set_autocommit()``"
msgstr ""

#: ../../internals/deprecation.txt:390
# efb5414144f8456db9aaea971e74035e
msgid "``django.db.transaction.is_managed()``"
msgstr ""

#: ../../internals/deprecation.txt:391
# 2c170c309dde4dc895bb8b59336e0855
msgid "``django.db.transaction.managed()``"
msgstr ""

#: ../../internals/deprecation.txt:393
# f085ce6060244b27bbdb697ddf40f118
msgid "``django.forms.widgets.RadioInput`` will be removed in favor of ``django.forms.widgets.RadioChoiceInput``."
msgstr ""

#: ../../internals/deprecation.txt:396
# a77df378d5f942628fa7e1c9027e2fe1
msgid "The module ``django.test.simple`` and the class ``django.test.simple.DjangoTestSuiteRunner`` will be removed. Instead use ``django.test.runner.DiscoverRunner``."
msgstr ""

#: ../../internals/deprecation.txt:400
# a3baa1b4435444e1a48c13c7d761efd7
msgid "The module ``django.test._doctest`` will be removed. Instead use the doctest module from the Python standard library."
msgstr ""

#: ../../internals/deprecation.txt:403
# 21d417e5260e44888a2f16d0ad3b84fe
msgid "The ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting will be removed."
msgstr ""

#: ../../internals/deprecation.txt:405
# 89799f8553514c31abd3706b488bcd80
msgid "Usage of the hard-coded *Hold down \"Control\", or \"Command\" on a Mac, to select more than one.* string to override or append to user-provided ``help_text`` in forms for ManyToMany model fields will not be performed by Django anymore either at the model or forms layer."
msgstr ""

#: ../../internals/deprecation.txt:410
# bb4530b514194e76b0c89fbb6a59fdb0
msgid "The ``Model._meta.get_(add|change|delete)_permission`` methods will be removed."
msgstr ""

#: ../../internals/deprecation.txt:414
# deb128cfdbba40249d1a0a01ba0d3056
msgid "2.0"
msgstr ""

#: ../../internals/deprecation.txt:416
# 07c5648cb7584c9faa4b217753b0d958
msgid "``ssi`` and ``url`` template tags will be removed from the ``future`` template tag library (used during the 1.3/1.4 deprecation period)."
msgstr ""

#: ../../internals/git.txt:3
# 6908a12966a946699ceecc9f08b5c43a
msgid "The Django source code repository"
msgstr ""

#: ../../internals/git.txt:5
# b88bf3595e42449d85b00771321f7761
msgid "When deploying a Django application into a real production environment, you will almost always want to use `an official packaged release of Django`_."
msgstr ""

#: ../../internals/git.txt:8
# 6e56f06bb34b4b21bf32e0001d42a424
msgid "However, if you'd like to try out in-development code from an upcoming release or contribute to the development of Django, you'll need to obtain a clone of Django's source code repository."
msgstr ""

#: ../../internals/git.txt:12
# aa21399bd3ca458a910815fec6e255af
msgid "This document covers the way the code repository is laid out and how to work with and find things in it."
msgstr ""

#: ../../internals/git.txt:18
# cc5a3b7a2c0649dbb7b11cd3f9e2884e
msgid "High-level overview"
msgstr ""

#: ../../internals/git.txt:20
# 700424fdda5345a6a38bec66b492f23b
msgid "The Django source code repository uses `Git`_ to track changes to the code over time, so you'll need a copy of the Git client (a program called ``git``) on your computer, and you'll want to familiarize yourself with the basics of how Git works."
msgstr ""

#: ../../internals/git.txt:25
# cf2c111604874f0d9c8abd71c87c666f
msgid "Git's web site offers downloads for various operating systems. The site also contains vast amounts of `documentation`_."
msgstr ""

#: ../../internals/git.txt:28
# e39be202a7284a8b86b33f0c023a7b0f
msgid "The Django Git repository is located online at `github.com/django/django <https://github.com/django/django>`_. It contains the full source code for all Django releases, which you can browse online."
msgstr ""

#: ../../internals/git.txt:32
# a87a2cfe6806458dacf56fd278997dde
msgid "The Git repository includes several `branches`_:"
msgstr ""

#: ../../internals/git.txt:34
# 93aed445ae2d46e7bc0b9fa6482fe6d8
msgid "``master`` contains the main in-development code which will become the next packaged release of Django. This is where most development activity is focused."
msgstr ""

#: ../../internals/git.txt:38
# 5abc9f412a1d43c585f0fe0d41206190
msgid "``stable/A.B.x`` are the branches where release preparation work happens. They are also used for support and bugfix releases which occur as necessary after the initial release of a major or minor version."
msgstr ""

#: ../../internals/git.txt:42
# 6e5009ba7fad45d8af938f943e8ab1a1
msgid "``soc20XX/<project>`` branches were used by students who worked on Django during the 2009 and 2010 Google Summer of Code programs."
msgstr ""

#: ../../internals/git.txt:45
# fc8899af742b4e0c963fd4894138635e
msgid "``attic/<project>`` branches were used to develop major or experimental new features without affecting the rest of Django's code."
msgstr ""

#: ../../internals/git.txt:48
# 2ca70c8227894713b1490420a5d47f95
msgid "The Git repository also contains `tags`_. These are the exact revisions from which packaged Django releases were produced, since version 1.0."
msgstr ""

#: ../../internals/git.txt:51
# 0d2fa71469cf489891b01cbc98471904
msgid "The source code for the `Djangoproject.com <https://www.djangoproject.com/>`_ web site can be found at `github.com/django/djangoproject.com <https://github.com/django/djangoproject.com>`_."
msgstr ""

#: ../../internals/git.txt:61
# dbe49ded36ae4d89a3202aba3d3c6cb5
msgid "The master branch"
msgstr ""

#: ../../internals/git.txt:63
# 0634fd225754432f961501ec3bd71230
msgid "If you'd like to try out the in-development code for the next release of Django, or if you'd like to contribute to Django by fixing bugs or developing new features, you'll want to get the code from the master branch."
msgstr ""

#: ../../internals/git.txt:67
# 11b0995dbf454aac814e0b169a643a84
msgid "Note that this will get *all* of Django: in addition to the top-level ``django`` module containing Python code, you'll also get a copy of Django's documentation, test suite, packaging scripts and other miscellaneous bits. Django's code will be present in your clone as a directory named ``django``."
msgstr ""

#: ../../internals/git.txt:73
# fcb5e3ad0ec94a30b89533ace3b28548
msgid "To try out the in-development code with your own applications, simply place the directory containing your clone on your Python import path. Then ``import`` statements which look for Django will find the ``django`` module within your clone."
msgstr ""

#: ../../internals/git.txt:78
# c6443bfec5774f95a92d7cd197478e9e
msgid "If you're going to be working on Django's code (say, to fix a bug or develop a new feature), you can probably stop reading here and move over to :doc:`the documentation for contributing to Django </internals/contributing/index>`, which covers things like the preferred coding style and how to generate and submit a patch."
msgstr ""

#: ../../internals/git.txt:85
# 1f80e3c3cec548f68ef504428ceab637
msgid "Other branches"
msgstr ""

#: ../../internals/git.txt:87
# f806b834723a408fa28b68adfea0959e
msgid "Django uses branches to prepare for releases of Django (whether they be :term:`major <Major release>`, :term:`minor <Minor release>`, or :term:`micro <Micro release>`)."
msgstr ""

#: ../../internals/git.txt:91
# 4183f581c9bc4afb9c5f19de4a34eae6
msgid "In the past when Django was hosted on Subversion, branches were also used for feature development. Now Django is hosted on Git and feature development is done on contributor's forks, but the Subversion feature branches remain in Git for historical reference."
msgstr ""

#: ../../internals/git.txt:97
# bcfba88afd234130a7599e48c1ffd30e
msgid "Stable branches"
msgstr ""

#: ../../internals/git.txt:99
# 5e994211fec64c2a9bd8e4329e7d5b86
msgid "These branches can be found in the repository as ``stable/A.B.x`` branches and will be created right after the first alpha is tagged."
msgstr ""

#: ../../internals/git.txt:102
# 1264bba91fd24c199ec459d4c74a5822
msgid "For example, immediately after *Django 1.5 alpha 1* was tagged, the branch ``stable/1.5.x`` was created and all further work on preparing the code for the final 1.5 release was done there."
msgstr ""

#: ../../internals/git.txt:106
# 90e909bdf8954f61ba0e4a13e018ca93
msgid "These branches also provide limited bugfix support for the most recent released version of Django and security support for the two most recently-released versions of Django."
msgstr ""

#: ../../internals/git.txt:110
# c8e9bc75f5944b779b4e9dfd844101c2
msgid "For example, after the release of Django 1.5, the branch ``stable/1.5.x`` receives only fixes for security and critical stability bugs, which are eventually released as Django 1.5.1 and so on, ``stable/1.4.x`` receives only security fixes, and ``stable/1.3.x`` no longer receives any updates."
msgstr ""

#: ../../internals/git.txt:115
#: ../../internals/git.txt:135
# 32fecf81303c4e398234def7568caf62
# 9b6f05b23ed9429fbfe09044f23025b0
msgid "Historical information"
msgstr ""

#: ../../internals/git.txt:117
# 6b15fba2cf0d45bb9ed4ef9a1db8b588
msgid "This policy for handling ``stable/A.B.x`` branches was adopted starting with the Django 1.5 release cycle."
msgstr ""

#: ../../internals/git.txt:120
# 6528cb213f4d401d98c5ceeebd048138
msgid "Previously, these branches weren't created until right after the releases and the stabilization work occurred on the main repository branch. Thus, no new features development work for the next release of Django could be committed until the final release happened."
msgstr ""

#: ../../internals/git.txt:125
# 4d236c715d8d40b38bbbb3282b24ab0d
msgid "For example, shortly after the release of Django 1.3 the branch ``stable/1.3.x`` was created. Official support for that release has expired, and so it no longer receives direct maintenance from the Django project. However, that and all other similarly named branches continue to exist and interested community members have occasionally used them to provide unofficial support for old Django releases."
msgstr ""

#: ../../internals/git.txt:133
# be28685c27a64b28a703c77930c92fd9
msgid "Feature-development branches"
msgstr ""

#: ../../internals/git.txt:137
# 1c8b38fe10934d608b8722324b1e804b
msgid "Since Django moved to Git in 2012, anyone can clone the repository and create his own branches, alleviating the need for official branches in the source code repository."
msgstr ""

#: ../../internals/git.txt:141
# 0505e4ea14104a9fb1727137c5d4d42c
msgid "The following section is mostly useful if you're exploring the repository's history, for example if you're trying to understand how some features were designed."
msgstr ""

#: ../../internals/git.txt:145
# ab2cc82852784545ab91d6cb31baea08
msgid "Feature-development branches tend by their nature to be temporary. Some produce successful features which are merged back into Django's master to become part of an official release, but others do not; in either case there comes a time when the branch is no longer being actively worked on by any developer. At this point the branch is considered closed."
msgstr ""

#: ../../internals/git.txt:151
# f40e1bff783045efa1998e72be6b8929
msgid "Unfortunately, Django used to be maintained with the Subversion revision control system, that has no standard way of indicating this. As a workaround, branches of Django which are closed and no longer maintained were moved into ``attic``."
msgstr ""

#: ../../internals/git.txt:156
# 102f5ed261e64c9e979208651f01f19d
msgid "For reference, the following are branches whose code eventually became part of Django itself, and so are no longer separately maintained:"
msgstr ""

#: ../../internals/git.txt:159
# f3441231a6514852bdb8ec82c2657ad5
msgid "``boulder-oracle-sprint``: Added support for Oracle databases to Django's object-relational mapper. This has been part of Django since the 1.0 release."
msgstr ""

#: ../../internals/git.txt:163
# c0aca7343b244639939d302a584f9eef
msgid "``gis``: Added support for geographic/spatial queries to Django's object-relational mapper. This has been part of Django since the 1.0 release, as the bundled application ``django.contrib.gis``."
msgstr ""

#: ../../internals/git.txt:167
# 715f79fdb6b344f6a01305a1ae5627ca
msgid "``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to Django. This has been part of Django since the 0.90 release."
msgstr ""

#: ../../internals/git.txt:170
# 08da7965de64452ebe308c3bd8553e6d
msgid "``magic-removal``: A major refactoring of both the internals and public APIs of Django's object-relational mapper. This has been part of Django since the 0.95 release."
msgstr ""

#: ../../internals/git.txt:174
# cb72fcae2fe44124b978ea7479eb2114
msgid "``multi-auth``: A refactoring of :doc:`Django's bundled authentication framework </topics/auth/index>` which added support for :ref:`authentication backends <authentication-backends>`. This has been part of Django since the 0.95 release."
msgstr ""

#: ../../internals/git.txt:179
# 21453de6199844ef80dfc603ef583e8f
msgid "``new-admin``: A refactoring of :doc:`Django's bundled administrative application </ref/contrib/admin/index>`. This became part of Django as of the 0.91 release, but was superseded by another refactoring (see next listing) prior to the Django 1.0 release."
msgstr ""

#: ../../internals/git.txt:184
# 55ba4f639de7438bab1ae81e17b88ede
msgid "``newforms-admin``: The second refactoring of Django's bundled administrative application. This became part of Django as of the 1.0 release, and is the basis of the current incarnation of ``django.contrib.admin``."
msgstr ""

#: ../../internals/git.txt:189
# f4845e9ce53c41618a1f1c3954e91dde
msgid "``queryset-refactor``: A refactoring of the internals of Django's object-relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

#: ../../internals/git.txt:193
# fe08ec617f8043b3b33e70caa130c01d
msgid "``unicode``: A refactoring of Django's internals to consistently use Unicode-based strings in most places within Django and Django applications. This became part of Django as of the 1.0 release."
msgstr ""

#: ../../internals/git.txt:197
# 54aadd33f76a4aacb563f30f3546aa05
msgid "When Django moved from SVN to Git, the information about branch merges wasn't preserved in the source code repository. This means that the ``master`` branch of Django doesn't contain merge commits for the above branches."
msgstr ""

#: ../../internals/git.txt:201
# 4ef75afa07874dab8cfadec36dfaee05
msgid "However, this information is `available as a grafts file`_. You can restore it by putting the following lines in ``.git/info/grafts`` in your local clone::"
msgstr ""

#: ../../internals/git.txt:219
# 4cdd8a9e51044480b9d3491e96956f2e
msgid "Additionally, the following branches are closed, but their code was never merged into Django and the features they aimed to implement were never finished:"
msgstr ""

#: ../../internals/git.txt:223
# 4948b30501da4010a05d70fe8e42f6e5
msgid "``full-history``"
msgstr ""

#: ../../internals/git.txt:225
# c9f92de17cb7455cae50697e80f46b1e
msgid "``generic-auth``"
msgstr ""

#: ../../internals/git.txt:227
# 0f13646b956c4f868c6868044160f002
msgid "``multiple-db-support``"
msgstr ""

#: ../../internals/git.txt:229
# 9a26f9b264ba4de99603dc0309d8571f
msgid "``per-object-permissions``"
msgstr ""

#: ../../internals/git.txt:231
# ad08109d46124c58b36c33654be5e4a9
msgid "``schema-evolution``"
msgstr ""

#: ../../internals/git.txt:233
# c31d2d063c594215a038ee2abdf6a9e9
msgid "``schema-evolution-ng``"
msgstr ""

#: ../../internals/git.txt:235
# 0f60fb46d35d4879a67000d0ed283136
msgid "``search-api``"
msgstr ""

#: ../../internals/git.txt:237
# 04028f91725c45d08d31e875318b1a34
msgid "``sqlalchemy``"
msgstr ""

#: ../../internals/git.txt:239
# 5795b28fab894b0e847e4af52d33f35a
msgid "All of the above-mentioned branches now reside in ``attic``."
msgstr ""

#: ../../internals/git.txt:241
# aa19afc9b82a459f8d99974bd62427be
msgid "Finally, the repository contains ``soc2009/xxx`` and ``soc2010/xxx`` feature branches, used for Google Summer of Code projects."
msgstr ""

#: ../../internals/git.txt:245
# 4b205d05e92242559aa13eb166c96bfc
msgid "Tags"
msgstr ""

#: ../../internals/git.txt:247
# 1cf6bcb82ab74046be9bf83c2fdc76ee
msgid "Each Django release is tagged and signed by Django's release manager."
msgstr ""

#: ../../internals/git.txt:249
# 5410bb80a11545ce80417b42228fde3f
msgid "The tags can be found on GitHub's `tags`_ page."
msgstr ""

#: ../../internals/howto-release-django.txt:3
# ff66bb057f1b448e9a468e18a8fa3fba
msgid "How is Django Formed?"
msgstr ""

#: ../../internals/howto-release-django.txt:5
# ee6c9da8b72d49a0a47511f4fd0ee47a
msgid "This document explains how to release Django. If you're unlucky enough to be driving a release, you should follow these instructions to get the package out."
msgstr ""

#: ../../internals/howto-release-django.txt:9
# e94d52ef02a648268749b783d0c4be9e
msgid "**Please, keep these instructions up-to-date if you make changes!** The point here is to be descriptive, not proscriptive, so feel free to streamline or otherwise make changes, but **update this document accordingly!**"
msgstr ""

#: ../../internals/howto-release-django.txt:14
# 19b5851b87954f6dbdb8990259be9ea9
msgid "Overview"
msgstr ""

#: ../../internals/howto-release-django.txt:16
# a2b0d7b3854745bbb375b7306f43c0e1
msgid "There are three types of releases that you might need to make"
msgstr ""

#: ../../internals/howto-release-django.txt:18
# 5c575337c3534105b1afcdce8734b66e
msgid "Security releases, disclosing and fixing a vulnerability. This'll generally involve two or three simultaneous releases -- e.g. 1.5.x, 1.6.x, and, depending on timing, perhaps a 1.7 alpha/beta/rc."
msgstr ""

#: ../../internals/howto-release-django.txt:22
# 4d26f31660e8403e8c08298b87da2993
msgid "Regular version releases, either a final release (e.g. 1.5) or a bugfix update (e.g. 1.5.1)."
msgstr ""

#: ../../internals/howto-release-django.txt:25
# 0de7e3df631945958ce891976c04feff
msgid "Pre-releases, e.g. 1.6 beta or something."
msgstr ""

#: ../../internals/howto-release-django.txt:27
# a8c4b91982124e459d402301f8314731
msgid "In general the steps are about the same regardless, but there are a few differences noted. The short version is:"
msgstr ""

#: ../../internals/howto-release-django.txt:30
# f45c1a9a1a3f4033b6b4dcf45c1e6288
msgid "If this is a security release, pre-notify the security distribution list at least one week before the actual release."
msgstr ""

#: ../../internals/howto-release-django.txt:33
# 7a7f95e361224d34b8920d0e66164815
msgid "Proofread (and create if needed) the release notes, looking for organization, writing errors, deprecation timelines, etc. Draft a blog post and email announcement."
msgstr ""

#: ../../internals/howto-release-django.txt:37
# cd8cf24048f641d8800e442d2cfbb208
msgid "Update version numbers and create the release package(s)!"
msgstr ""

#: ../../internals/howto-release-django.txt:39
# bc79800cc75a41b9890f5e5deed67fea
msgid "Upload the package(s) to the ``djangoproject.com`` server."
msgstr ""

#: ../../internals/howto-release-django.txt:41
# d4860ea410c344a290be3f69e7a6e47a
msgid "Unless this is a pre-release, add the new version(s) to PyPI."
msgstr ""

#: ../../internals/howto-release-django.txt:43
# b4419c4249d94882a6e01385c2a77bb6
msgid "Declare the new version in the admin on ``djangoproject.com``."
msgstr ""

#: ../../internals/howto-release-django.txt:45
# e3d4b7f1d53344958374a3cc640e78fb
msgid "Post the blog entry and send out the email announcements."
msgstr ""

#: ../../internals/howto-release-django.txt:47
# 5029b8c3552e4505a5161e92a196823b
msgid "Update version numbers post-release."
msgstr ""

#: ../../internals/howto-release-django.txt:49
# f4eeb735bf6b4ff590a484cf69485299
msgid "There are a lot of details, so please read on."
msgstr ""

#: ../../internals/howto-release-django.txt:52
# 51c5676cf999405fb493620bbe828c62
msgid "Prerequisites"
msgstr ""

#: ../../internals/howto-release-django.txt:54
# 9eee17fd5feb43bd94142d6cb1ceb69c
msgid "You'll need a few things hooked up to make this work:"
msgstr ""

#: ../../internals/howto-release-django.txt:56
# c2ad43c196b04cd9b5793a48b533b8bc
msgid "A GPG key recorded as an acceptable releaser in the `Django releasers`__ document. (If this key is not your default signing key, you'll need to add ``-u you@example.com`` to every GPG signing command below, where ``you@example.com`` is the email address associated with the key you want to use.)"
msgstr ""

#: ../../internals/howto-release-django.txt:62
# dd555caec0234e2d8c06d75448ebb5f4
msgid "Access to Django's record on PyPI."
msgstr ""

#: ../../internals/howto-release-django.txt:64
# 410972d9ad124669ac729c43b4b6ff29
msgid "Access to the ``djangoproject.com`` server to upload files and trigger a deploy."
msgstr ""

#: ../../internals/howto-release-django.txt:67
# 9ff1b89980304d6ebc46ac7646e5cfdc
msgid "Access to the admin on ``djangoproject.com`` as a \"Site maintainer\"."
msgstr ""

#: ../../internals/howto-release-django.txt:69
# 1b08c80bd4454293af24fe8947e7ead8
msgid "Access to post to ``django-announce``."
msgstr ""

#: ../../internals/howto-release-django.txt:71
# 438ce2a96a7c46ce8f443f354a68a270
msgid "If this is a security release, access to the pre-notification distribution list."
msgstr ""

#: ../../internals/howto-release-django.txt:74
# 13b759a3db3c4b7c9499639df62b0546
msgid "If this is your first release, you'll need to coordinate with James and/or Jacob to get all these things lined up."
msgstr ""

#: ../../internals/howto-release-django.txt:80
# fa53bf7cd9144254bd996d9a1a8261fe
msgid "Pre-release tasks"
msgstr ""

#: ../../internals/howto-release-django.txt:82
# f2376f1ff619457db2b902b777433072
msgid "A few items need to be taken care of before even beginning the release process. This stuff starts about a week before the release; most of it can be done any time leading up to the actual release:"
msgstr ""

#: ../../internals/howto-release-django.txt:86
# e96c92b9906a4def965405a44184a349
msgid "If this is a security release, send out pre-notification **one week** before the release. We maintain a list of who gets these pre-notification emails at *FIXME WHERE?*. This email should be signed by the key you'll use for the release, and should include patches for each issue being fixed."
msgstr ""

#: ../../internals/howto-release-django.txt:91
# d1e9082bdcd244699b6ab2c0bba3e460
msgid "If this is a major release, make sure the tests pass, then increase the default PBKDF2 iterations in ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` by about 10% (pick a round number). Run the tests, and update the 3 failing hasher tests with the new values. Make sure this gets noted in the release notes (see release notes on 1.6 for an example)."
msgstr ""

#: ../../internals/howto-release-django.txt:98
# 6a9c2b6c8da04457b57748e53669ed4f
msgid "As the release approaches, watch Trac to make sure no release blockers are left for the upcoming release."
msgstr ""

#: ../../internals/howto-release-django.txt:101
# e136e27349514bf882af4d775e872a5f
msgid "Check with the other committers to make sure they don't have any un-committed changes for the release."
msgstr ""

#: ../../internals/howto-release-django.txt:104
# a9e7e873f80d40aa91bb601c3a095593
msgid "Proofread the release notes, including looking at the online version to catch any broken links or reST errors, and make sure the release notes contain the correct date."
msgstr ""

#: ../../internals/howto-release-django.txt:108
# ac59ba2f72234761ba109cfb428f8feb
msgid "Double-check that the release notes mention deprecation timelines for any APIs noted as deprecated, and that they mention any changes in Python version support."
msgstr ""

#: ../../internals/howto-release-django.txt:112
# 7faf42e33f454899844006822924f6fd
msgid "Double-check that the release notes index has a link to the notes for the new release; this will be in ``docs/releases/index.txt``."
msgstr ""

#: ../../internals/howto-release-django.txt:116
# 98546aa5c5fe4f42a5f9078b707695ab
msgid "Preparing for release"
msgstr ""

#: ../../internals/howto-release-django.txt:118
# 16ef3b1b8cd34d6c875874b464c5f24a
msgid "Write the announcement blog post for the release. You can enter it into the admin at any time and mark it as inactive. Here are a few examples: `example security release announcement`__, `example regular release announcement`__, `example pre-release announcement`__."
msgstr ""

#: ../../internals/howto-release-django.txt:128
# f1f7f5d335884203beba5d070924a1b6
msgid "Actually rolling the release"
msgstr ""

#: ../../internals/howto-release-django.txt:130
# 16c58d9a444e476fb1c2f8096bdc5620
msgid "OK, this is the fun part, where we actually push out a release!"
msgstr ""

#: ../../internals/howto-release-django.txt:132
# d9c23352a3e04897aff04d38ca79ffac
msgid "Check `Jenkins`__ is green for the version(s) you're putting out. You probably shouldn't issue a release until it's green."
msgstr ""

#: ../../internals/howto-release-django.txt:137
# 5fcec9e369a84d19aac3f848ebfa472a
msgid "A release always begins from a release branch, so you should make sure you're on a stable branch and up-to-date. For example::"
msgstr ""

#: ../../internals/howto-release-django.txt:143
# fb83302686f24297a4bb6b7180219a08
msgid "If this is a security release, merge the appropriate patches from ``django-private``. Rebase these patches as necessary to make each one a simple commit on the release branch rather than a merge commit. To ensure this, merge them with the ``--ff-only`` flag; for example::"
msgstr ""

#: ../../internals/howto-release-django.txt:151
# 1f56b7bd83444554a2a465dfbf175a92
msgid "(This assumes ``security/1.5.x`` is a branch in the ``django-private`` repo containing the necessary security patches for the next release in the 1.5 series.)"
msgstr ""

#: ../../internals/howto-release-django.txt:155
# 1f183e2ca16b478aa6244de57a4f34b2
msgid "If git refuses to merge with ``--ff-only``, switch to the security-patch branch and rebase it on the branch you are about to merge it into (``git checkout security/1.5.x; git rebase stable/1.5.x``) and then switch back and do the merge. Make sure the commit message for each security fix explains that the commit is a security fix and that an announcement will follow (`example security commit`__)"
msgstr ""

#: ../../internals/howto-release-django.txt:164
# 28ae68443d694849bcd922588e52dbfe
msgid "Update version numbers for the release. This has to happen in three places: ``django/__init__.py``, ``docs/conf.py``, and ``setup.py``. Please see `notes on setting the VERSION tuple`_ below for details on ``VERSION``. Here's `an example commit updating version numbers`__"
msgstr ""

#: ../../internals/howto-release-django.txt:171
# 29057190adbb4b80b3d5b35458102944
msgid "If this is a pre-release package, update the \"Development Status\" trove classifier in ``setup.py`` to reflect this. Otherwise, make sure the classifier is set to ``Development Status :: 5 - Production/Stable``."
msgstr ""

#: ../../internals/howto-release-django.txt:175
# cf01f8bb03d742ed9074612100e3bae0
msgid "Tag the release using ``git tag``. For example::"
msgstr ""

#: ../../internals/howto-release-django.txt:179
# d6dce8ae253145a8a5a9f1db6e62e1f7
msgid "You can check your work by running ``git tag --verify <tag>``."
msgstr ""

#: ../../internals/howto-release-django.txt:181
# 09fc29f2bfeb4e2eb5ad959a4ea2d597
msgid "Push your work, including the tag: ``git push --tags``."
msgstr ""

#: ../../internals/howto-release-django.txt:183
# 3cf8a8c413c94f2bbf7fcccc250766bf
msgid "Make sure you have an absolutely clean tree by running ``git clean -dfx``."
msgstr ""

#: ../../internals/howto-release-django.txt:185
# e6c1fe0de05947a0931fbbffaf0d4155
msgid "Run ``make -f extras/Makefile`` to generate the release packages. This will create the release packages in a ``dist/`` directory."
msgstr ""

#: ../../internals/howto-release-django.txt:188
# 6d9633d54f2541348e84537e9bf73edb
msgid "Generate the hashes of the release packages::"
msgstr ""

#: ../../internals/howto-release-django.txt:193
# 5d572046e23a4d84917a513b8169ac9a
msgid "Create a \"checksums\" file containing the hashes and release information. Start with this template and insert the correct version, date, release URL and checksums::"
msgstr ""

#: ../../internals/howto-release-django.txt:234
# e414f8f2e2a94d07b19a9555233c3b30
msgid "Sign the checksum file (``gpg --clearsign Django-<version>.checksum.txt``). This generates a signed document, ``Django-<version>.checksum.txt.asc`` which you can then verify using ``gpg --verify Django-<version>.checksum.txt.asc``."
msgstr ""

#: ../../internals/howto-release-django.txt:239
# b09e95cd2d004d888d81a1ab62a069fb
msgid "If you're issuing multiple releases, repeat these steps for each release."
msgstr ""

#: ../../internals/howto-release-django.txt:242
# 288535493a564ae1ac92134c45f352ed
msgid "Making the release(s) available to the public"
msgstr ""

#: ../../internals/howto-release-django.txt:244
# 268b4fec870b4e9695577ebb15717def
msgid "Now you're ready to actually put the release out there. To do this:"
msgstr ""

#: ../../internals/howto-release-django.txt:246
# 6ae6b787f9ce42928370230ed5ec5e7d
msgid "Upload the release package(s) to the djangoproject server; releases go in ``/home/www/djangoproject.com/src/media/releases``, under a directory for the appropriate version number (e.g. ``/home/www/djangoproject.com/src/media/releases/1.5`` for a ``1.5.x`` release.)."
msgstr ""

#: ../../internals/howto-release-django.txt:252
# 81796d9f83684cf390368f137b85905a
msgid "Upload the checksum file(s); these go in ``/home/www/djangoproject.com/src/media/pgp``."
msgstr ""

#: ../../internals/howto-release-django.txt:255
# 36e62f764188445bbab49f91a9e74c7f
msgid "Test that the release packages install correctly using ``easy_install`` and ``pip``. Here's one method (which requires `virtualenvwrapper`__)::"
msgstr ""

#: ../../internals/howto-release-django.txt:268
# 6ec7d50661934d5784dc120b6ce8015f
msgid "This just tests that the tarballs are available (i.e. redirects are up) and that they install correctly, but it'll catch silly mistakes."
msgstr ""

#: ../../internals/howto-release-django.txt:273
# 3782c450a7854250ade030ecdd3875b7
msgid "Ask a few people on IRC to verify the checksums by visiting the checksums file (e.g. https://www.djangoproject.com/m/pgp/Django-1.5b1.checksum.txt) and following the instructions in it. For bonus points, they can also unpack the downloaded release tarball and verify that its contents appear to be correct (proper version numbers, no stray ``.pyc`` or other undesirable files)."
msgstr ""

#: ../../internals/howto-release-django.txt:280
# 3e9fb44654f741c1869f328b2307c3bb
msgid "If this is a release that should land on PyPI (i.e. anything except for a pre-release), register the new package with PyPI by running ``python setup.py register``."
msgstr ""

#: ../../internals/howto-release-django.txt:284
# 61c515435ccf438985a5c52ca3f1cc0e
msgid "Upload the sdist you generated a few steps back through the PyPI web interface. You'll log into PyPI, click \"Django\" in the right sidebar, find the release you just registered, and click \"files\" to upload the sdist."
msgstr ""

#: ../../internals/howto-release-django.txt:291
# a9ffc8dfe149410e9f59f364c7e6e59d
msgid "Why can't we just use ``setup.py sdist upload``? Well, if we do it above that pushes the sdist to PyPI before we've had a chance to sign, review and test it. And we can't just ``setup.py upload`` without ``sdist`` because ``setup.py`` prevents that. Nor can we ``sdist upload`` because that would generate a *new* sdist that might not match the file we just signed. Finally, uploading through the web interface is somewhat more secure: it sends the file over HTTPS."
msgstr ""

#: ../../internals/howto-release-django.txt:299
# 0165b463073447a98c8fa0bbed059235
msgid "Go to the `Add release page in the admin`__, enter the new release number exactly as it appears in the name of the tarball (Django-<version>.tar.gz). So for example enter \"1.5.1\" or \"1.4-rc-2\", etc."
msgstr ""

#: ../../internals/howto-release-django.txt:305
# a305ceb810e64e008ef31173d884de84
msgid "Make the blog post announcing the release live."
msgstr ""

#: ../../internals/howto-release-django.txt:307
# e1dcec6837334dea8d7dede24b62de89
msgid "For a new version release (e.g. 1.5, 1.6), update the default stable version of the docs by flipping the ``is_default`` flag to ``True`` on the appropriate ``DocumentRelease`` object in the ``docs.djangoproject.com`` database (this will automatically flip it to ``False`` for all others); you can do this using the site's admin."
msgstr ""

#: ../../internals/howto-release-django.txt:313
# f41af39e75cf42518535ac622b22ca2f
msgid "Post the release announcement to the django-announce, django-developers and django-users mailing lists. This should include links to the announcement blog post and the release notes."
msgstr ""

#: ../../internals/howto-release-django.txt:318
# 6f21b6cb6613471c822995a72da3d406
msgid "Post-release"
msgstr ""

#: ../../internals/howto-release-django.txt:320
# 0a158c86572146f795f5eac86829a5c0
msgid "You're almost done! All that's left to do now is:"
msgstr ""

#: ../../internals/howto-release-django.txt:322
# f6cb57d079694d8bbfae64ad901adc85
msgid "Update the ``VERSION`` tuple in ``django/__init__.py`` again, incrementing to whatever the next expected release will be. For example, after releasing 1.5.1, update ``VERSION`` to ``VERSION = (1, 5, 2, 'alpha', 0)``."
msgstr ""

#: ../../internals/howto-release-django.txt:327
# 159d3f4350624b9a8a3f4511147a58ca
msgid "For the first alpha release of a new version (when we create the ``stable/1.?.x`` git branch), you'll want to create a new ``DocumentRelease`` object in the ``docs.djangoproject.com`` database for the new version's docs, and update the ``docs/fixtures/doc_releases.json`` JSON fixture, so people without access to the production DB can still run an up-to-date copy of the docs site."
msgstr ""

#: ../../internals/howto-release-django.txt:334
# d389537fca2d4b3a93a092ebd568051e
msgid "Add the release in `Trac's versions list`_ if necessary. Not all versions are declared; take example on previous releases."
msgstr ""

#: ../../internals/howto-release-django.txt:340
# 30185b0272d1491d9490d5a3701b0c72
msgid "Notes on setting the VERSION tuple"
msgstr ""

#: ../../internals/howto-release-django.txt:342
# 74468c1f283d413b8d4b5309ca639d03
msgid "Django's version reporting is controlled by the ``VERSION`` tuple in ``django/__init__.py``. This is a five-element tuple, whose elements are:"
msgstr ""

#: ../../internals/howto-release-django.txt:346
# 12c467683a814c7598b678447de13545
msgid "Major version."
msgstr ""

#: ../../internals/howto-release-django.txt:347
# c0acdb66f77640fb9bbc53171386cb3e
msgid "Minor version."
msgstr ""

#: ../../internals/howto-release-django.txt:348
# b55f62a6af6f4f6dbb8cc73ff238d5ce
msgid "Micro version."
msgstr ""

#: ../../internals/howto-release-django.txt:349
# dbdd01dffd8a4d67b257bb90f5a5442e
msgid "Status -- can be one of \"alpha\", \"beta\", \"rc\" or \"final\"."
msgstr ""

#: ../../internals/howto-release-django.txt:350
# 3cbb767e04464a3d942c63c109fe627a
msgid "Series number, for alpha/beta/RC packages which run in sequence (allowing, for example, \"beta 1\", \"beta 2\", etc.)."
msgstr ""

#: ../../internals/howto-release-django.txt:353
# ef39a2f32c704157b7561e5f70a29531
msgid "For a final release, the status is always \"final\" and the series number is always 0. A series number of 0 with an \"alpha\" status will be reported as \"pre-alpha\"."
msgstr ""

#: ../../internals/howto-release-django.txt:357
# f1a62920bb934900931ad28704279225
msgid "Some examples:"
msgstr ""

#: ../../internals/howto-release-django.txt:359
# bd5373db872242c2b4e67b1d4512e2aa
msgid "``(1, 2, 1, 'final', 0)`` --> \"1.2.1\""
msgstr ""

#: ../../internals/howto-release-django.txt:361
# c07a4ef43f824e4abfead358f4a56202
msgid "``(1, 3, 0, 'alpha', 0)`` --> \"1.3 pre-alpha\""
msgstr ""

#: ../../internals/howto-release-django.txt:363
# eaa1188722924172b4f01081e2187bdb
msgid "``(1, 3, 0, 'beta', 2)`` --> \"1.3 beta 2\""
msgstr ""

#: ../../internals/index.txt:2
# c1ce9c41d91e44b798c12a4d0b0aac24
msgid "Django internals"
msgstr ""

#: ../../internals/index.txt:4
# 415f2e2c7d7c4f399b871b32c444c6b2
msgid "Documentation for people hacking on Django itself. This is the place to go if you'd like to help improve Django, learn or learn about how Django works \"under the hood\"."
msgstr ""

#: ../../internals/index.txt:10
# d45efa92f4774919bb294a6be6f6ae3e
msgid "Elsewhere in the Django documentation, coverage of a feature is a sort of a contract: once an API is in the official documentation, we consider it \"stable\" and don't change it without a good reason. APIs covered here, however, are considered \"internal-only\": we reserve the right to change these internals if we must."
msgstr ""

#: ../../internals/release-process.txt:3
# 46d038d99b5a486ba3f4dbe2ceb4b1aa
msgid "Django's release process"
msgstr ""

#: ../../internals/release-process.txt:8
# c238ec54ffe841938453ab0a406b9d70
msgid "Official releases"
msgstr ""

#: ../../internals/release-process.txt:10
# 8545a732ae2b46349d8cdb56adc5c6b5
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

#: ../../internals/release-process.txt:12
# d5a344d0646549cd886241954dfd7373
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

#: ../../internals/release-process.txt:14
# c131ad65642e4e0698c648d6e0625bca
msgid "``A`` is the *major version* number, which is only incremented for major changes to Django, and these changes are not necessarily backwards-compatible. That is, code you wrote for Django 1.6 may break when we release Django 2.0."
msgstr ""

#: ../../internals/release-process.txt:19
# 74fdcecfec0740819dbc821d17bb8d6f
msgid "``B`` is the *minor version* number, which is incremented for large yet backwards compatible changes.  Code written for Django 1.6 will continue to work under Django 1.7. Exceptions to this rule will be listed in the release notes."
msgstr ""

#: ../../internals/release-process.txt:24
# fa9314e05ac04448a1bf89f5bafde7fa
msgid "``C`` is the *micro version* number, which is incremented for bug and security fixes. A new micro-release will be 100% backwards-compatible with the previous micro-release. The only exception is when a security issue can't be fixed without breaking backwards-compatibility. If this happens, the release notes will provide detailed upgrade instructions."
msgstr ""

#: ../../internals/release-process.txt:30
# c20fe56963504d748ec1c54eaf27075c
msgid "Before a new minor release, we'll make alpha, beta, and release candidate releases. These are of the form ``A.B alpha/beta/rc N``, which means the ``Nth`` alpha/beta/release candidate of version ``A.B``."
msgstr ""

#: ../../internals/release-process.txt:34
# 3fd40922037244b0a31c125600deda37
msgid "In git, each Django release will have a tag indicating its version number, signed with the Django release key. Additionally, each release series has its own branch, called ``stable/A.B.x``, and bugfix/security releases will be issued from those branches."
msgstr ""

#: ../../internals/release-process.txt:39
# e77c6c70ffce4fcbbeecf988d528a8f0
msgid "For more information about how the Django project issues new releases for security purposes, please see :doc:`our security policies <security>`."
msgstr ""

#: ../../internals/release-process.txt:43
# cd57e6137621453d95c9efa59ef8351d
msgid "Major release"
msgstr ""

#: ../../internals/release-process.txt:45
# 32c6a5a9bdbb496a8ecdb7f12d761ef7
msgid "Major releases (1.0, 2.0, etc.) will happen very infrequently (think \"years\", not \"months\"), and may represent major, sweeping changes to Django."
msgstr ""

#: ../../internals/release-process.txt:47
# 1989a18948224651a869ddbd9bbfd517
msgid "Minor release"
msgstr ""

#: ../../internals/release-process.txt:49
# c6a11ec19f24459c91f23a4898729108
msgid "Minor release (1.5, 1.6, etc.) will happen roughly every nine months -- see `release process`_, below for details. These releases will contain new features, improvements to existing features, and such."
msgstr ""

#: ../../internals/release-process.txt:55
# e7aba72e8ad84b79950665d3df862065
msgid "A minor release may deprecate certain features from previous releases. If a feature is deprecated in version ``A.B``, it will continue to work in versions ``A.B`` and  ``A.B+1`` but raise warnings. It will be removed in version ``A.B+2``."
msgstr ""

#: ../../internals/release-process.txt:60
# be6fdcaf8a3441adb3cc46806cb2d888
msgid "So, for example, if we decided to start the deprecation of a function in Django 1.5:"
msgstr ""

#: ../../internals/release-process.txt:63
# 65ad3024ff6940a1a6e3ba16dee5aabd
msgid "Django 1.5 will contain a backwards-compatible replica of the function which will raise a ``PendingDeprecationWarning``. This warning is silent by default; you can turn on display of these warnings with the ``-Wd`` option of Python."
msgstr ""

#: ../../internals/release-process.txt:68
# a282d7637ebf43b0ae2a83a2a29cd265
msgid "Django 1.6 will contain the backwards-compatible replica, but the warning will be promoted to a full-fledged ``DeprecationWarning``. This warning is *loud* by default, and will likely be quite annoying."
msgstr ""

#: ../../internals/release-process.txt:72
# 14ca5b5ade8b4513b95df6c15481676b
msgid "Django 1.7 will remove the feature outright."
msgstr ""

#: ../../internals/release-process.txt:73
# 1ea7ef3f3f2f4783af54a9d10288ff8a
msgid "Micro release"
msgstr ""

#: ../../internals/release-process.txt:75
# 04d62d823a7f4f1fa4b1cae45e4783af
msgid "Micro releases (1.5.1, 1.6.2, 1.6.1, etc.) will be issued as needed, often to fix security issues."
msgstr ""

#: ../../internals/release-process.txt:78
# a03e878395f049c6b0596861f86178b3
msgid "These releases will be 100% compatible with the associated minor release, unless this is impossible for security reasons. So the answer to \"should I upgrade to the latest micro release?\" will always be \"yes.\""
msgstr ""

#: ../../internals/release-process.txt:85
#: ../../internals/security.txt:47
# 1f9538d7915e421dac7f9335652a466c
# 6644cc1b18354c6d97b1418dc7ab45ef
msgid "Supported versions"
msgstr ""

#: ../../internals/release-process.txt:87
# 04283bb9b91c47058f1d150458010a77
msgid "At any moment in time, Django's developer team will support a set of releases to varying levels:"
msgstr ""

#: ../../internals/release-process.txt:90
# 3ff12cd7ba394947ad557f6da5ed6866
msgid "The current development master will get new features and bug fixes requiring major refactoring."
msgstr ""

#: ../../internals/release-process.txt:93
# 7f537aa7d30947229d824fd82a40826b
msgid "Patches applied to the master branch must also be applied to the last minor release, to be released as the next micro release, when they fix critical problems:"
msgstr ""

#: ../../internals/release-process.txt:97
# bf358abcf5574bf9997c9d3a0002e117
msgid "Security issues."
msgstr ""

#: ../../internals/release-process.txt:99
# 2bf8a216d6da4c25b4078b2bfd7edbb7
msgid "Data-loss bugs."
msgstr ""

#: ../../internals/release-process.txt:101
# d9bdfb5dd1d04bcf9ecffd1e23312e2e
msgid "Crashing bugs."
msgstr ""

#: ../../internals/release-process.txt:103
# 60be41abf6344a83b6da800f7a47836c
msgid "Major functionality bugs in newly-introduced features."
msgstr ""

#: ../../internals/release-process.txt:105
# 984c4ed746494605a3fee3ef26fc190d
msgid "The rule of thumb is that fixes will be backported to the last minor release for bugs that would have prevented a release in the first place (release blockers)."
msgstr ""

#: ../../internals/release-process.txt:109
# df406589c2734ed8a85278c3039fc8d1
msgid "Security fixes will be applied to the current master and the previous two minor releases."
msgstr ""

#: ../../internals/release-process.txt:112
# fb48f7486d8f4998b60559c1ed8ea713
msgid "Committers may choose to backport bugfixes at their own discretion, provided they do not introduce backwards incompatibilities."
msgstr ""

#: ../../internals/release-process.txt:115
# 75673c5bffae45bcb2aa248f6dc7b4f6
msgid "Documentation fixes generally will be more freely backported to the last release branch. That's because it's highly advantageous to have the docs for the last release be up-to-date and correct, and the risk of introducing regressions is much less of a concern."
msgstr ""

#: ../../internals/release-process.txt:120
# ce90e7de26bf4c3fbe71d3f346526d4b
msgid "As a concrete example, consider a moment in time halfway between the release of Django 1.6 and 1.7. At this point in time:"
msgstr ""

#: ../../internals/release-process.txt:123
# 31b9b1382b96407b96f1dbb5ba46609e
msgid "Features will be added to development master, to be released as Django 1.7."
msgstr ""

#: ../../internals/release-process.txt:125
# aabdd3df64fd48569c75e9e59d1ddb4b
msgid "Critical bug fixes will be applied to the ``stable/1.6.x`` branch, and released as 1.6.1, 1.6.2, etc."
msgstr ""

#: ../../internals/release-process.txt:128
# e4fa3d4b86d94692b6823171cc2a059d
msgid "Security fixes will be applied to ``master``, to the ``stable/1.6.x`` branch, and to the ``stable/1.5.x`` branch. They will trigger the release of ``1.6.1``, ``1.5.1``, etc."
msgstr ""

#: ../../internals/release-process.txt:132
# 0e5099ccc57b4b4895c2e4be37163c69
msgid "Documentation fixes will be applied to master, and, if easily backported, to the ``1.6.x`` branch. Bugfixes may also be backported."
msgstr ""

#: ../../internals/release-process.txt:138
# f5877df9a2c94c7697e787ca6ec74fb3
msgid "Release process"
msgstr ""

#: ../../internals/release-process.txt:140
# bc1b87fe160243b9930adaec083f1e42
msgid "Django uses a time-based release schedule, with minor (i.e. 1.6, 1.7, etc.) releases every nine months, or more, depending on features."
msgstr ""

#: ../../internals/release-process.txt:143
# cb0ece39418c4918b89116e21abfe416
msgid "After each release, and after a suitable cooling-off period of a few weeks, the core development team will examine the landscape and announce a timeline for the next release. Most releases will be scheduled in the 6-9 month range, but if we have bigger features to development we might schedule a longer period to allow for more ambitious work."
msgstr ""

#: ../../internals/release-process.txt:150
# 2c36302ad6104657852a9bbf880b7d6c
msgid "Release cycle"
msgstr ""

#: ../../internals/release-process.txt:152
# a2c5c54bedc44e139af0c397cf23421c
msgid "Each release cycle will be split into three periods, each lasting roughly one-third of the cycle:"
msgstr ""

#: ../../internals/release-process.txt:156
# 31fe734d24c54ab4be447a4709659b09
msgid "Phase one: feature proposal"
msgstr ""

#: ../../internals/release-process.txt:158
# 803c15f58c594453b1c8e5e7c628e07d
msgid "The first phase of the release process will be devoted to figuring out what features to include in the next version. This should include a good deal of preliminary work on those features -- working code trumps grand design."
msgstr ""

#: ../../internals/release-process.txt:162
# f1f4aea7f4a744ccb03263fda733d062
msgid "At the end of part one, the core developers will propose a feature list for the upcoming release. This will be broken into:"
msgstr ""

#: ../../internals/release-process.txt:165
# 2edbd9b824114e89a20b4c5e837a1538
msgid "\"Must-have\": critical features that will delay the release if not finished"
msgstr ""

#: ../../internals/release-process.txt:166
# 5629410489104a598c7606b5be89d5fa
msgid "\"Maybe\" features: that will be pushed to the next release if not finished"
msgstr ""

#: ../../internals/release-process.txt:167
# b4d49a4f78b04b17a656ffb9b4851be8
msgid "\"Not going to happen\": features explicitly deferred to a later release."
msgstr ""

#: ../../internals/release-process.txt:169
# 68719afbf444400a9eb5815a955900b3
msgid "Anything that hasn't got at least some work done by the end of the first third isn't eligible for the next release; a design alone isn't sufficient."
msgstr ""

#: ../../internals/release-process.txt:173
# d8eb55de55fa48cda156de503edba352
msgid "Phase two: development"
msgstr ""

#: ../../internals/release-process.txt:175
# ad33e88095554560bb7375af6c30c9d8
msgid "The second third of the release schedule is the \"heads-down\" working period. Using the roadmap produced at the end of phase one, we'll all work very hard to get everything on it done."
msgstr ""

#: ../../internals/release-process.txt:179
# 18e3b5fcf958480197207ee3176432e1
msgid "Longer release schedules will likely spend more than a third of the time in this phase."
msgstr ""

#: ../../internals/release-process.txt:182
# 9f08f867d8e6421cae8dc4bea1c5c454
msgid "At the end of phase two, any unfinished \"maybe\" features will be postponed until the next release. Though it shouldn't happen, any \"must-have\" features will extend phase two, and thus postpone the final release."
msgstr ""

#: ../../internals/release-process.txt:186
# 6bacfac539e541b3ae00cde4c4eb5763
msgid "Phase two will culminate with an alpha release. At this point, the ``stable/A.B.x`` branch will be forked from ``master``."
msgstr ""

#: ../../internals/release-process.txt:190
# 7327c676302a4af0afebd326782ec122
msgid "Phase three: bugfixes"
msgstr ""

#: ../../internals/release-process.txt:192
# 12ade1e907d3427fad3bb2f1802f7ecd
msgid "The last third of a release cycle is spent fixing bugs -- no new features will be accepted during this time. We'll try to release a beta release after one month and a release candidate after two months."
msgstr ""

#: ../../internals/release-process.txt:196
# a1864503459e494f890c6bd0f417cffa
msgid "The release candidate marks the string freeze, and it happens at least two weeks before the final release. After this point, new translatable strings must not be added."
msgstr ""

#: ../../internals/release-process.txt:200
# 8aaddc821923473c8f555fc957a3afe3
msgid "During this phase, committers will be more and more conservative with backports, to avoid introducing regressions. After the release candidate, only release blockers and documentation fixes should be backported."
msgstr ""

#: ../../internals/release-process.txt:204
# 8f58a8f867d943beaf66de407b93daa8
msgid "In parallel to this phase, ``master`` can receive new features, to be released in the ``A.B+1`` cycle."
msgstr ""

#: ../../internals/release-process.txt:208
# 38b2954d0f35426587313df2d78782a6
msgid "Bug-fix releases"
msgstr ""

#: ../../internals/release-process.txt:210
# c92b399c97d243cfbb688fa9a6719f00
msgid "After a minor release (e.g. 1.6), the previous release will go into bugfix mode."
msgstr ""

#: ../../internals/release-process.txt:213
# c5c9b8aadce54efda5478afefc024f62
msgid "A branch will be created of the form ``stable/1.5.x`` to track bugfixes to the previous release. Critical bugs fixed on master must *also* be fixed on the bugfix branch; this means that commits need to cleanly separate bug fixes from feature additions. The developer who commits a fix to master will be responsible for also applying the fix to the current bugfix branch."
msgstr ""

#: ../../internals/release-process.txt:220
# 266c60974331448fa210b037b922c03e
msgid "How this all fits together"
msgstr ""

#: ../../internals/release-process.txt:222
# 591732064f4b4903996d327331525def
msgid "Let's look at a hypothetical example for how this all first together. Imagine, if you will, a point about halfway between 1.5 and 1.6. At this point, development will be happening in a bunch of places:"
msgstr ""

#: ../../internals/release-process.txt:226
# 7efe673db77e4eb3b211f1f0fdbb3bed
msgid "On master, development towards 1.6 proceeds with small additions, bugs fixes, etc. being checked in daily."
msgstr ""

#: ../../internals/release-process.txt:229
# 567ebbe45fd7486da27e5c5bb98af50b
msgid "On the branch ``stable/1.5.x``, fixes for critical bugs found in the 1.5 release are checked in as needed. At some point, this branch will be released as \"1.5.1\", \"1.5.2\", etc."
msgstr ""

#: ../../internals/release-process.txt:233
# d8b25c5a5a144d33a538f7ce8e75ad2e
msgid "On the branch ``stable/1.4.x``, security fixes are made if needed and released as \"1.4.2\", \"1.4.3\", etc."
msgstr ""

#: ../../internals/release-process.txt:236
# f31a301b5a364958abdf9232433e03ac
msgid "Development of major features is done in branches in forks of the main repository. These branches will be merged into ``master`` before \"1.6 alpha 1\"."
msgstr ""

#: ../../internals/security.txt:5
# 9f46b775c7fa452a8c15b7453931346a
msgid "Django's security policies"
msgstr ""

#: ../../internals/security.txt:7
# c0e962a3785f40999701f1dfa89d482f
msgid "Django's development team is strongly committed to responsible reporting and disclosure of security-related issues. As such, we've adopted and follow a set of policies which conform to that ideal and are geared toward allowing us to deliver timely security updates to the official distribution of Django, as well as to third-party distributions."
msgstr ""

#: ../../internals/security.txt:17
# f2cfb0282b6d43c286aac9a2c11db878
msgid "Reporting security issues"
msgstr ""

#: ../../internals/security.txt:19
# 8d22992aeca04ac4af034c37da5c667e
msgid "**Short version: please report security issues by emailing security@djangoproject.com**."
msgstr ""

#: ../../internals/security.txt:22
# ae0bd34334c7460dbf08a6e80b4a7c71
msgid "Most normal bugs in Django are reported to `our public Trac instance`_, but due to the sensitive nature of security issues, we ask that they *not* be publicly reported in this fashion."
msgstr ""

#: ../../internals/security.txt:26
# 07a90d84d3f44a9f8d11344dd66ed305
msgid "Instead, if you believe you've found something in Django which has security implications, please send a description of the issue via email to ``security@djangoproject.com``. Mail sent to that address reaches a subset of the core development team, who can forward security issues into the private committers' mailing list for broader discussion if needed."
msgstr ""

#: ../../internals/security.txt:33
# 4ac1e7af156f4555b3cfac671fed56ea
msgid "You can send encrypted email to this address; the public key ID for ``security@djangoproject.com`` is ``0xfcb84b8d1d17f80b``, and this public key is available from most commonly-used keyservers."
msgstr ""

#: ../../internals/security.txt:37
# 8071bfa5533c4e30a5129eba26a192a0
msgid "Once you've submitted an issue via email, you should receive an acknowledgment from a member of the Django development team within 48 hours, and depending on the action to be taken, you may receive further followup emails."
msgstr ""

#: ../../internals/security.txt:49
# 36d6080fb1d14b6fac4259de09534663
msgid "At any given time, the Django team provides official security support for several versions of Django:"
msgstr ""

#: ../../internals/security.txt:52
# 4f895dbd3e0349cca984c3f4dd20231a
msgid "The `master development branch`_, hosted on GitHub, which will become the next release of Django, receives security support."
msgstr ""

#: ../../internals/security.txt:55
# cfd932b89e3c4dafac7ae85934c23a26
msgid "The two most recent Django release series receive security support. For example, during the development cycle leading to the release of Django 1.5, support will be provided for Django 1.4 and Django 1.3. Upon the release of Django 1.5, Django 1.3's security support will end."
msgstr ""

#: ../../internals/security.txt:61
# 4349b944db2e42ea9b184c1a2671759e
msgid "When new releases are issued for security reasons, the accompanying notice will include a list of affected versions. This list is comprised solely of *supported* versions of Django: older versions may also be affected, but we do not investigate to determine that, and will not issue patches or new releases for those versions."
msgstr ""

#: ../../internals/security.txt:72
# 9c642c61b32c492d883995a2606e1340
msgid "How Django discloses security issues"
msgstr ""

#: ../../internals/security.txt:74
# 39c7eb4611f647b191221f65dd53b726
msgid "Our process for taking a security issue from private discussion to public disclosure involves multiple steps."
msgstr ""

#: ../../internals/security.txt:77
# bdf13c79b9724597be286affe9dae100
msgid "Approximately one week before full public disclosure, we will send advance notification of the issue to a list of people and organizations, primarily composed of operating-system vendors and other distributors of Django. This notification will consist of an email message, signed with the Django release key, containing:"
msgstr ""

#: ../../internals/security.txt:83
# 01869e63b4c042f99bc95f654f5d3b78
msgid "A full description of the issue and the affected versions of Django."
msgstr ""

#: ../../internals/security.txt:85
# 8f81e53850ac4f86bfafb0cf033ee887
msgid "The steps we will be taking to remedy the issue."
msgstr ""

#: ../../internals/security.txt:87
# e9f25d3e2cf247229d765fde211a8269
msgid "The patch(es), if any, that will be applied to Django."
msgstr ""

#: ../../internals/security.txt:89
# 4fc57d4bf4264ac4b8bb8b1b61108699
msgid "The date on which the Django team will apply these patches, issue new releases and publicy disclose the issue."
msgstr ""

#: ../../internals/security.txt:92
# 04d41d11cc894fc4930cf535ab5bcb1a
msgid "Simultaneously, the reporter of the issue will receive notification of the date on which we plan to take the issue public."
msgstr ""

#: ../../internals/security.txt:95
# 9fc6e7de290f4cdfb669d38d2552f836
msgid "On the day of disclosure, we will take the following steps:"
msgstr ""

#: ../../internals/security.txt:97
# e67c1486482446d396b5b6bcf9c4e5d2
msgid "Apply the relevant patch(es) to Django's codebase. The commit messages for these patches will indicate that they are for security issues, but will not describe the issue in any detail; instead, they will warn of upcoming disclosure."
msgstr ""

#: ../../internals/security.txt:102
# de98a70942b84e54b911b1588acaa277
msgid "Issue the relevant release(s), by placing new packages on `the Python Package Index`_ and on the Django website, and tagging the new release(s) in Django's git repository."
msgstr ""

#: ../../internals/security.txt:106
# 3330bc083f474e07b7ee0e8d9bb97696
msgid "Post a public entry on `the official Django development blog`_, describing the issue and its resolution in detail, pointing to the relevant patches and new releases, and crediting the reporter of the issue (if the reporter wishes to be publicly identified)."
msgstr ""

#: ../../internals/security.txt:111
# 47c90aa9f2934643ad13968b61c9a928
msgid "Post a notice to the `django-announce`_ mailing list that links to the blog post."
msgstr ""

#: ../../internals/security.txt:118
# 1361447101d54595a7fceb9a5ceafb76
msgid "If a reported issue is believed to be particularly time-sensitive -- due to a known exploit in the wild, for example -- the time between advance notification and public disclosure may be shortened considerably."
msgstr ""

#: ../../internals/security.txt:123
# d5e742c1cc354bd0a230c2fc9c72eca3
msgid "Additionally, if we have reason to believe that an issue reported to us affects other frameworks or tools in the Python/web ecosystem, we may privately contact and discuss those issues with the appropriate maintainers, and coordinate our own disclosure and resolution with theirs."
msgstr ""

#: ../../internals/security.txt:129
# b20b44931d00498db79fd3886241d622
msgid "The Django team also maintains an :doc:`archive of security issues disclosed in Django</releases/security>`."
msgstr ""

#: ../../internals/security.txt:136
# d4227ceb43854f9298b41587e2303bbc
msgid "Who receives advance notification"
msgstr ""

#: ../../internals/security.txt:138
# c78837c6ae2543e8934c99dfc3d0dad2
msgid "The full list of people and organizations who receive advance notification of security issues is not and will not be made public."
msgstr ""

#: ../../internals/security.txt:141
# 300d85d472214aae9820375d7b232d22
msgid "We also aim to keep this list as small as effectively possible, in order to better manage the flow of confidential information prior to disclosure. As such, our notification list is *not* simply a list of users of Django, and merely being a user of Django is not sufficient reason to be placed on the notification list."
msgstr ""

#: ../../internals/security.txt:147
# ed41d4d7e3f04fdda969115125bb345a
msgid "In broad terms, recipients of security notifications fall into three groups:"
msgstr ""

#: ../../internals/security.txt:150
# cc18322217a548a89ca4265156dde16b
msgid "Operating-system vendors and other distributors of Django who provide a suitably-generic (i.e., *not* an individual's personal email address) contact address for reporting issues with their Django package, or for general security reporting. In either case, such addresses **must not** forward to public mailing lists or bug trackers. Addresses which forward to the private email of an individual maintainer or security-response contact are acceptable, although private security trackers or security-response groups are strongly preferred."
msgstr ""

#: ../../internals/security.txt:160
# dea8f777d2f745c492c48d097335a2b9
msgid "On a case-by-case basis, individual package maintainers who have demonstrated a commitment to responding to and responsibly acting on these notifications."
msgstr ""

#: ../../internals/security.txt:164
# 021cb7bd05ac438f80c5e20d929542be
msgid "On a case-by-case basis, other entities who, in the judgment of the Django development team, need to be made aware of a pending security issue. Typically, membership in this group will consist of some of the largest and/or most likely to be severely impacted known users or distributors of Django, and will require a demonstrated ability to responsibly receive, keep confidential and act on these notifications."
msgstr ""

#: ../../internals/security.txt:172
# aad06d6cbb704a42844f1f4f4e531f94
msgid "Additionally, a maximum of six days prior to disclosure, notification will be sent to the ``distros@vs.openwall.org`` mailing list, whose membership includes representatives of most major open-source operating system vendors."
msgstr ""

#: ../../internals/security.txt:178
# e9a93e825a28483687c9398f94309981
msgid "Requesting notifications"
msgstr ""

#: ../../internals/security.txt:180
# 45b62f93b5c9474c9ed54470b0d2265c
msgid "If you believe that you, or an organization you are authorized to represent, fall into one of the groups listed above, you can ask to be added to Django's notification list by emailing ``security@djangoproject.com``. Please use the subject line \"Security notification request\"."
msgstr ""

#: ../../internals/security.txt:186
# 39f7f04989fb4291bddebeb1c6fcddc1
msgid "Your request **must** include the following information:"
msgstr ""

#: ../../internals/security.txt:188
# b1c006517502488580322df6fc590fe0
msgid "Your full, real name and the name of the organization you represent, if applicable, as well as your role within that organization."
msgstr ""

#: ../../internals/security.txt:191
# 7e87f2d507b340b9bcf2277b3c4e4bca
msgid "A detailed explanation of how you or your organization fit at least one set of criteria listed above."
msgstr ""

#: ../../internals/security.txt:194
# 21a2c36a03b7409b825b626992172a82
msgid "A detailed explanation of why you are requesting security notifications. Again, please keep in mind that this is *not* simply a list for users of Django, and the overwhelming majority of users of Django should not request notifications and will not be added to our notification list if they do."
msgstr ""

#: ../../internals/security.txt:200
# 094ebeaa557e48a29ead3edea46fb194
msgid "The email address you would like to have added to our notification list."
msgstr ""

#: ../../internals/security.txt:203
# 1f3e13cc530640dd9fd2ec3e0661fb69
msgid "An explanation of who will be receiving/reviewing mail sent to that address, as well as information regarding any automated actions that will be taken (i.e., filing of a confidential issue in a bug tracker)."
msgstr ""

#: ../../internals/security.txt:208
# cfd8fc99d36146a889c1d5ec3bb2b3e6
msgid "For individuals, the ID of a public key associated with your address which can be used to verify email received from you and encrypt email sent to you, as needed."
msgstr ""

#: ../../internals/security.txt:212
# b29a1d9f3e4149ffaa3ec8f460ae9018
msgid "Once submitted, your request will be considered by the Django development team; you will receive a reply notifying you of the result of your request within 30 days."
msgstr ""

#: ../../internals/security.txt:216
# 3fa84910cebb476989ed5cb05de49f74
msgid "Please also bear in mind that for any individual or organization, receiving security notifications is a privilege granted at the sole discretion of the Django development team, and that this privilege can be revoked at any time, with or without explanation."
msgstr ""

#: ../../internals/security.txt:221
# d0270e2d0bbd4551887145db2fc57f47
msgid "If you are added to the notification list, security-related emails will be sent to you by Django's release manager, and all notification emails will be signed with the same key used to sign Django releases; that key has the ID ``0x3684C0C08C8B2AE1``, and is available from most commonly-used keyservers."
msgstr ""

