# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# 
# Translators:
# claudep <claude@2xlibre.net>, 2013
# lburg <burg.lois@gmail.com>, 2013
# chrisglass <tribaal@gmail.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-23 14:56+0100\n"
"PO-Revision-Date: 2013-11-24 19:40+0000\n"
"Last-Translator: claudep <claude@2xlibre.net>\n"
"Language-Team: French (http://www.transifex.com/projects/p/django/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 83759bf4cfcd487da7f67c50b206d617
#: ../../topics/auth/customizing.txt:3
msgid "Customizing authentication in Django"
msgstr "Personnalisation de l'authentification dans Django"

# 34f527addf684990bae268b538f1520b
#: ../../topics/auth/customizing.txt:5
msgid ""
"The authentication that comes with Django is good enough for most common "
"cases, but you may have needs not met by the out-of-the-box defaults. To "
"customize authentication to your projects needs involves understanding what "
"points of the provided system are extendible or replaceable. This document "
"provides details about how the auth system can be customized."
msgstr "L'authentification livrée avec Django est suffisante dans la plupart des cas, mais vous pouvez rencontrez des besoins qui ne sont pas couverts par la solution proposée par défaut. Afin de personnaliser l'authentification pour les besoins de vos projets, vous devez comprendre quels sont les points d'ancrage permettant d'étendre et de remplacer les composants du système de Django. Ce document fournit des détails sur la façon dont le système d'authentification peut être adapté."

# dbbb7c8f58ba4caab751dc2ed6ac311c
#: ../../topics/auth/customizing.txt:11
msgid ""
":ref:`Authentication backends <authentication-backends>` provide an "
"extensible system for when a username and password stored with the User "
"model need to be authenticated against a different service than Django's "
"default."
msgstr "Les :ref:`moteurs d'authentification <authentication-backends>` permettent d'adapter le système lorsque un nom d'utilisateur et un mot de passe stockés dans le modèle ``User`` doivent servir à authentifier l'utilisateur avec un autre service que celui par défaut de Django."

# ca29a8243e4f42278253d67173a83d82
#: ../../topics/auth/customizing.txt:15
msgid ""
"You can give your models :ref:`custom permissions <custom-permissions>` that"
" can be checked through Django's authorization system."
msgstr "Vous pouvez donner des :ref:`permissions personnalisées <custom-permissions>` à vos modèles qui peuvent être vérifiées à travers le système d'autorisation de Django."

# e08305be584946a19c2e327555e06567
#: ../../topics/auth/customizing.txt:18
msgid ""
"You can :ref:`extend <extending-user>` the default User model, or "
":ref:`substitute <auth-custom-user>` a completely customized model."
msgstr "Vous pouvez :ref:`étendre <extending-user>` le modèle ``User`` par défaut ou le :ref:`substituer <auth-custom-user>` par un tout autre modèle personnalisé. "

# 36fff1b412b142958c03e4eb76e03772
#: ../../topics/auth/customizing.txt:24
msgid "Other authentication sources"
msgstr "Autres sources d'authentification"

# e85f9b70059f4b7ba3a93e91435e826f
#: ../../topics/auth/customizing.txt:26
msgid ""
"There may be times you have the need to hook into another authentication "
"source -- that is, another source of usernames and passwords or "
"authentication methods."
msgstr "Dans certaines situations, il peut être nécessaire de se connecter à une autre source d'authentification, c'est-à-dire une autre source de noms d'utilisateur et de mots de passe ou d'autres méthodes d'authentification."

# a979737d282d41faa3c1403beaf5f6dd
#: ../../topics/auth/customizing.txt:30
msgid ""
"For example, your company may already have an LDAP setup that stores a "
"username and password for every employee. It'd be a hassle for both the "
"network administrator and the users themselves if users had separate "
"accounts in LDAP and the Django-based applications."
msgstr "Par exemple, votre entreprise possède peut-être déjà une infrastructure LDAP stockant les noms d'utilisateur et mots de passe pour tous ses employés. Il serait fastidieux aussi bien pour l'administrateur réseau que pour les utilisateurs eux-mêmes de devoir gérer des comptes séparés dans LDAP et dans les applications basées sur Django."

# 956ed541099e40e6a2f6940236fa8a0c
#: ../../topics/auth/customizing.txt:35
msgid ""
"So, to handle situations like this, the Django authentication system lets "
"you plug in other authentication sources. You can override Django's default "
"database-based scheme, or you can use the default system in tandem with "
"other systems."
msgstr "Ainsi, pour faire face à ce genre de situations, le système d'authentification de Django vous permet de brancher d'autres sources d'authentification. Vous pouvez surcharger le système par défaut de Django basé sur la base de données ou vous pouvez utiliser le système par défaut en parallèle avec d'autres systèmes."

# fd81492ecffd425c93c30e06f861351a
#: ../../topics/auth/customizing.txt:40
msgid ""
"See the :ref:`authentication backend reference <authentication-backends-"
"reference>` for information on the authentication backends included with "
"Django."
msgstr "Consultez la :ref:`référence sur les moteurs d'authentification <authentication-backends-reference>` pour plus d'informations sur les moteurs d'authentification intégrés à Django."

# 69f68adc5db2426d9d212a1bec052ec5
#: ../../topics/auth/customizing.txt:45
msgid "Specifying authentication backends"
msgstr "Définition de moteurs d'authentification"

# 1bf5a30512e14c309c93411f5ed3743c
#: ../../topics/auth/customizing.txt:47
msgid ""
"Behind the scenes, Django maintains a list of \"authentication backends\" "
"that it checks for authentication. When somebody calls "
":func:`django.contrib.auth.authenticate()` -- as described in :ref:`How to "
"log a user in <how-to-log-a-user-in>` -- Django tries authenticating across "
"all of its authentication backends. If the first authentication method "
"fails, Django tries the second one, and so on, until all backends have been "
"attempted."
msgstr "En arrière-plan, Django maintient une liste de « moteurs d'authentification » qu'il sollicite lors de l'authentification. Lorsque quelqu'un appelle :func:`django.contrib.auth.authenticate()` comme expliqué ci-dessus dans :ref:`Comment connecter un utilisateur <how-to-log-a-user-in>`, Django tente une authentification avec chaque moteur d'authentification. Si la première méthode d'authentification échoue, Django essaie avec la deuxième et ainsi de suite jusqu'à ce que tous les moteurs aient été sollicités."

# 9ecbf591a5c444a484b935bbc14c7f0d
#: ../../topics/auth/customizing.txt:54
msgid ""
"The list of authentication backends to use is specified in the "
":setting:`AUTHENTICATION_BACKENDS` setting. This should be a tuple of Python"
" path names that point to Python classes that know how to authenticate. "
"These classes can be anywhere on your Python path."
msgstr "La liste des moteurs d'authentification à utiliser est définie dans le réglage :setting:`AUTHENTICATION_BACKENDS`. Il doit s'agir d'une liste de chemins Python vers des classes Python qui sont capables d'authentifier des utilisateurs. Ces classes peuvent se trouver n'importe où dans votre chemin Python."

# a2e639f484bd49cf8cff9e1601e53a44
#: ../../topics/auth/customizing.txt:59
msgid "By default, :setting:`AUTHENTICATION_BACKENDS` is set to::"
msgstr "Par défaut, :setting:`AUTHENTICATION_BACKENDS` contient ::"

# d306c16fef204382ad1f7dd186f93af9
#: ../../topics/auth/customizing.txt:63
msgid ""
"That's the basic authentication backend that checks the Django users "
"database and queries the built-in permissions. It does not provide "
"protection against brute force attacks via any rate limiting mechanism. You "
"may either implement your own rate limiting mechanism in a custom auth "
"backend, or use the mechanisms provided by most Web servers."
msgstr "Il s'agit du moteur d'authentification de base qui vérifie la base de données Django des utilisateurs et interroge les permissions intégrées. Il ne protège pas contre les attaques de force brute et n'utilise pas de mécanisme de « rate limiting » (restriction du nombre de tentatives dans le temps). Vous pouvez soit écrire votre propre mécanisme de restriction dans un moteur d'authentification personnalisé ou utiliser les mécanismes offerts par la plupart des serveurs Web."

# d82bebe49bcb4cca8e966426319a6ecb
#: ../../topics/auth/customizing.txt:69
msgid ""
"The order of :setting:`AUTHENTICATION_BACKENDS` matters, so if the same "
"username and password is valid in multiple backends, Django will stop "
"processing at the first positive match."
msgstr "L'ordre dans la liste :setting:`AUTHENTICATION_BACKENDS` a son importance ; si le même nom d'utilisateur et mot de passe est valable dans plusieurs moteurs, Django s'arrête dès qu'un moteur a accepté les données d'authentification."

# 034bfb8eb1ee46a882c36cd4731953ab
#: ../../topics/auth/customizing.txt:75
msgid ""
"Once a user has authenticated, Django stores which backend was used to "
"authenticate the user in the user's session, and re-uses the same backend "
"for the duration of that session whenever access to the currently "
"authenticated user is needed. This effectively means that authentication "
"sources are cached on a per-session basis, so if you change "
":setting:`AUTHENTICATION_BACKENDS`, you'll need to clear out session data if"
" you need to force users to re-authenticate using different methods. A "
"simple way to do that is simply to execute "
"``Session.objects.all().delete()``."
msgstr "Dès qu'un utilisateur s'est authentifié, Django mémorise le moteur utilisé pour authentifier cet utilisateur dans sa session ; il réutilise ensuite ce même moteur pour toute la durée de la session chaque fois qu'il est nécessaire d'accéder à l'utilisateur actuellement authentifié. Cela signifie en pratique que les sources d'authentification sont mises en cache par session et que si vous modifiez :setting:`AUTHENTICATION_BACKENDS`, vous devrez réinitialiser les données de sessions dans le cas où vous voulez forcer les utilisateurs à s'authentifier à nouveau en utilisant une autre méthode. Une façon simple de faire cela est d'exécuter ``Session.objects.all().delete()``."

# 1e6a3361498c4ee6b4cf6b64cdb5df60
#: ../../topics/auth/customizing.txt:86
msgid ""
"If a backend raises a :class:`~django.core.exceptions.PermissionDenied` "
"exception, authentication will immediately fail. Django won't check the "
"backends that follow."
msgstr "Si un moteur génère une exception :class:`~django.core.exceptions.PermissionDenied`, l'authentification échouera immédiatement. Django ne continue pas avec les moteurs suivants."

# 9a63b8c7a0374a7ebd92e87c6e65f891
#: ../../topics/auth/customizing.txt:91
msgid "Writing an authentication backend"
msgstr "Écriture d'un moteur d'authentification"

# 2d35ef6435c645dc888bf59dfc01f3ec
#: ../../topics/auth/customizing.txt:93
msgid ""
"An authentication backend is a class that implements two required methods: "
"``get_user(user_id)`` and ``authenticate(**credentials)``, as well as a set "
"of optional permission related :ref:`authorization methods "
"<authorization_methods>`."
msgstr "Un moteur d'authentification est une classe qui implémente obligatoirement deux méthodes : ``get_user(user_id)`` et ``authenticate(**credentials)``. Facultativement, elle peut aussi implémenter un ensemble de :ref:`méthodes d'autorisation <authorization_methods>` liées aux permissions."

# 820a15d4368d4a8199813c184a286a78
#: ../../topics/auth/customizing.txt:97
msgid ""
"The ``get_user`` method takes a ``user_id`` -- which could be a username, "
"database ID or whatever, but has to be the primary key of your ``User`` "
"object -- and returns a ``User`` object."
msgstr "La méthode ``get_user`` accepte un paramètre ``user_id``, qui peut être un nom d'utilisateur, un identifiant de base de données ou toute autre valeur, mais qui doit représenter la clé primaire de votre objet ``User``. Elle renvoie un objet ``User``."

# bf9666e2da794034b866d5b7e1dfa7fd
#: ../../topics/auth/customizing.txt:101
msgid ""
"The ``authenticate`` method takes credentials as keyword arguments. Most of "
"the time, it'll just look like this::"
msgstr "La méthode ``authenticate`` accepte des données d'authentification en paramètre. La plupart du temps, elle ressemblera à ceci ::"

# 70af605617454098834ae6860f54a70d
#: ../../topics/auth/customizing.txt:109
msgid "But it could also authenticate a token, like so::"
msgstr "Mais elle pourrait aussi authentifier avec un jeton, comme ceci ::"

# c7d62ed0d1c6499ca9b9ca8452446737
#: ../../topics/auth/customizing.txt:116
msgid ""
"Either way, ``authenticate`` should check the credentials it gets, and it "
"should return a ``User`` object that matches those credentials, if the "
"credentials are valid. If they're not valid, it should return ``None``."
msgstr "D'une manière ou d'une autre, ``authenticate`` doit vérifier les données d'authentification qu'elle reçoit et, dans le cas où ces données sont valides, elle doit renvoyer un objet ``User`` correspondant à ces données. Dans le cas contraire, elle doit renvoyer ``None``."

# 8e00e14364ff45488186f377ea65761f
#: ../../topics/auth/customizing.txt:120
msgid ""
"The Django admin system is tightly coupled to the Django ``User`` object "
"described at the beginning of this document. For now, the best way to deal "
"with this is to create a Django ``User`` object for each user that exists "
"for your backend (e.g., in your LDAP directory, your external SQL database, "
"etc.) You can either write a script to do this in advance, or your "
"``authenticate`` method can do it the first time a user logs in."
msgstr "Le système d'administration de Django est étroitement couplé à l'objet ``User`` de Django décrit au début de ce document. Pour l'instant, la meilleure façon de gérer cela est de créer un objet Django ``User`` pour chaque utilisateur existant dans votre moteur (par ex. dans votre annuaire LDAP, votre base de données SQL externe, etc.). Vous pouvez soit écrire un script pour le faire de manière anticipée, soit déléguer à votre méthode ``authenticate`` la création de l'objet ``User`` lors de chaque première connexion."

# dd0d23e1e4ab4dc199763c2c6d50a32a
#: ../../topics/auth/customizing.txt:127
msgid ""
"Here's an example backend that authenticates against a username and password"
" variable defined in your ``settings.py`` file and creates a Django ``User``"
" object the first time a user authenticates::"
msgstr "Voici un exemple de moteur qui s'authentifie en fonction de variables nom d'utilisateur et mot de passe définies dans votre fichier ``settings.py`` et crée un objet ``User`` de Django lors de la première authentification de l'utilisateur ::"

# 02c407c79424487aa58f41d2540ced1b
#: ../../topics/auth/customizing.txt:170
msgid "Handling authorization in custom backends"
msgstr "Gestion des autorisations dans les moteurs personnalisés"

# 57930a4191f14bcabb95b4240256b93f
#: ../../topics/auth/customizing.txt:172
msgid "Custom auth backends can provide their own permissions."
msgstr "Les moteurs d'authentification personnalisés peuvent fournir leurs propres permissions."

# 2b47258b6411402c8e57d90280ade2b5
#: ../../topics/auth/customizing.txt:174
msgid ""
"The user model will delegate permission lookup functions "
"(:meth:`~django.contrib.auth.models.User.get_group_permissions()`, "
":meth:`~django.contrib.auth.models.User.get_all_permissions()`, "
":meth:`~django.contrib.auth.models.User.has_perm()`, and "
":meth:`~django.contrib.auth.models.User.has_module_perms()`) to any "
"authentication backend that implements these functions."
msgstr "Le modèle utilisateur délègue les fonctions de consultation des permissions (:meth:`~django.contrib.auth.models.User.get_group_permissions()`, :meth:`~django.contrib.auth.models.User.get_all_permissions()`, :meth:`~django.contrib.auth.models.User.has_perm()` et :meth:`~django.contrib.auth.models.User.has_module_perms()`) à tout moteur d'authentification qui implémente ces fonctions."

# 99f398517c4142c7b016fa2eb5641d6f
#: ../../topics/auth/customizing.txt:181
msgid ""
"The permissions given to the user will be the superset of all permissions "
"returned by all backends. That is, Django grants a permission to a user that"
" any one backend grants."
msgstr "Les permissions données à l'utilisateur sera un surensemble de toutes les permissions renvoyées par tous les moteurs. Cela signifie que Django accorde une permission à un utilisateur pour autant qu'au moins un moteur le permette."

# 9a8ae4f745a04ff49a4b0f7651aea322
#: ../../topics/auth/customizing.txt:185
msgid ""
"The simple backend above could implement permissions for the magic admin "
"fairly simply::"
msgstr "Le moteur simple ci-dessus pourrait implémenter les permissions pour l'administrateur « magique » assez simplement ::"

# debf8bbe36e545f1ad1fdbaaf69df34d
#: ../../topics/auth/customizing.txt:196
msgid ""
"This gives full permissions to the user granted access in the above example."
" Notice that in addition to the same arguments given to the associated "
":class:`django.contrib.auth.models.User` functions, the backend auth "
"functions all take the user object, which may be an anonymous user, as an "
"argument."
msgstr "Cela accorde toutes les permissions à l'utilisateur dont l'accès a été accordé dans l'exemple précédent. Notez qu'en plus des mêmes paramètres passés aux fonctions associées à :class:`django.contrib.auth.models.User`, les fonctions du moteur d'authentification acceptent toutes en paramètre l'objet utilisateur, qui pourrait être l'utilisateur anonyme."

# 6b8cc9d2a214459e8b08756a180985e4
#: ../../topics/auth/customizing.txt:201
msgid ""
"A full authorization implementation can be found in the ``ModelBackend`` "
"class in `django/contrib/auth/backends.py`_, which is the default backend "
"and queries the ``auth_permission`` table most of the time. If you wish to "
"provide custom behavior for only part of the backend API, you can take "
"advantage of Python inheritance and subclass ``ModelBackend`` instead of "
"implementing the complete API in a custom backend."
msgstr "Une implémentation complète des autorisations se trouve dans la classe ``ModelBackend`` dans `django/contrib/auth/backends.py`_, qui constitue le moteur par défaut et interroge la plupart du temps la table ``auth_permission``. Si vous souhaitez définir un comportement personnalisé uniquement pour une partie de l'API des moteurs, vous pouvez profiter de l'héritage Python et hériter de ``ModelBackend`` au lieu de réécrire l'API complète dans votre propre moteur."

# e060420133124a18b45e4f3f4a734724
#: ../../topics/auth/customizing.txt:213
msgid "Authorization for anonymous users"
msgstr "Autorisation pour les utilisateurs anonymes"

# 879d271285354653858ea5dc3487e0b4
#: ../../topics/auth/customizing.txt:215
msgid ""
"An anonymous user is one that is not authenticated i.e. they have provided "
"no valid authentication details. However, that does not necessarily mean "
"they are not authorized to do anything. At the most basic level, most Web "
"sites authorize anonymous users to browse most of the site, and many allow "
"anonymous posting of comments etc."
msgstr "Un utilisateur anonyme est un utilisateur que ne s'est pas authentifié, c'est-à-dire qu'il n'a fourni aucun détail d'authentification valide. Cependant, cela ne signifie pas forcément qu'il ne reçoit aucune autorisation. Au niveau le plus élémentaire, la plupart des sites Web autorisent les utilisateurs anonymes à naviguer sur la plupart des pages du site, et certains autorisent également l'envoi de commentaires, etc."

# 4b8c85e6006e4e319ebf13a9bbc5633c
#: ../../topics/auth/customizing.txt:221
msgid ""
"Django's permission framework does not have a place to store permissions for"
" anonymous users. However, the user object passed to an authentication "
"backend may be an :class:`django.contrib.auth.models.AnonymousUser` object, "
"allowing the backend to specify custom authorization behavior for anonymous "
"users. This is especially useful for the authors of re-usable apps, who can "
"delegate all questions of authorization to the auth backend, rather than "
"needing settings, for example, to control anonymous access."
msgstr "Le système de permissions de Django ne prévoit pas d'endroit où stocker des permissions pour les utilisateurs anonymes. Cependant, l'objet utilisateur transmis au moteur d'authentification peut être un objet :class:`django.contrib.auth.models.AnonymousUser` permettant au moteur de définir un comportement d'autorisation spécifique aux utilisateurs anonymes. C'est particulièrement utile pour les auteurs d'applications réutilisables qui peuvent déléguer toutes les questions d'autorisations au moteur d'authentification, plutôt que, par exemple, d'exiger des réglages pour contrôler les droits d'accès anonymes."

# eb10957e3c164a0887c3718b66e6b7fa
#: ../../topics/auth/customizing.txt:232
msgid "Authorization for inactive users"
msgstr "Autorisation pour les utilisateurs inactifs"

# d4327e8346e14b1192b72e4cc3bb2634
#: ../../topics/auth/customizing.txt:234
msgid ""
"An inactive user is a one that is authenticated but has its attribute "
"``is_active`` set to ``False``. However this does not mean they are not "
"authorized to do anything. For example they are allowed to activate their "
"account."
msgstr "Un utilisateur inactif est un utilisateur authentifié mais dont l'attribut ``is_active`` est défini à ``False``. Toutefois, cela ne signifie pas qu'ils ne reçoivent aucun droit. Par exemple, ils sont autorisés à activer leur compte."

# a16e60d67fe44852b932d197661a2607
#: ../../topics/auth/customizing.txt:239
msgid ""
"The support for anonymous users in the permission system allows for a "
"scenario where anonymous users have permissions to do something while "
"inactive authenticated users do not."
msgstr "La prise en charge des utilisateurs anonymes dans le système des permissions permet d'imaginer un scénario où les utilisateurs anonymes ont certaines permissions que les utilisateurs authentifiés inactifs n'ont pas."

# bf8c880ed7cc4e0c8e92942420cf89b1
#: ../../topics/auth/customizing.txt:243
msgid ""
"Do not forget to test for the ``is_active`` attribute of the user in your "
"own backend permission methods."
msgstr "N'oubliez pas de tester l'attribut ``is_active`` de l'utilisateur dans les méthodes de votre propre moteur de permissions."

# f5e0e0957a6f4f0f88b41ee42b93a927
#: ../../topics/auth/customizing.txt:248
msgid "Handling object permissions"
msgstr "Gestion des permissions sur les objets"

# ce2582cbb4004fd387240480447364c5
#: ../../topics/auth/customizing.txt:250
msgid ""
"Django's permission framework has a foundation for object permissions, "
"though there is no implementation for it in the core. That means that "
"checking for object permissions will always return ``False`` or an empty "
"list (depending on the check performed). An authentication backend will "
"receive the keyword parameters ``obj`` and ``user_obj`` for each object "
"related authorization method and can return the object level permission as "
"appropriate."
msgstr "Le système de permissions de Django pose les fondations pour des permissions sur les objets, même s'il n'existe pas d'implémentation concrète dans le cœur de Django. Cela signifie que le contrôle des permissions sur les objets renvoie toujours ``False`` ou une liste vide (selon le contrôle effectué). Un moteur d'authentification reçoit les paramètres nommés ``obj`` et ``user_obj`` pour chaque méthode d'autorisation liée aux objets et peut renvoyer les permissions au niveau des objets comme il convient."

# 0cb68efaef394647a4c69e04f442183e
#: ../../topics/auth/customizing.txt:260
msgid "Custom permissions"
msgstr "Permissions personnalisées"

# d4de7d3cb33648808ed50a651f022d5b
#: ../../topics/auth/customizing.txt:262
msgid ""
"To create custom permissions for a given model object, use the "
"``permissions`` :ref:`model Meta attribute <meta-options>`."
msgstr "Pour créer des permissions personnalisées pour un objet modèle donné, utilisez l':ref:`attribut Meta <meta-options>` ``permissions`` du modèle`."

# 9f1439a16a7f4512afb2a02238b29958
#: ../../topics/auth/customizing.txt:265
msgid ""
"This example Task model creates three custom permissions, i.e., actions "
"users can or cannot do with Task instances, specific to your application::"
msgstr "Ce modèle d'exemple ``Task`` crée trois permissions personnalisées, c'est-à-dire des actions que les utilisateurs peuvent effectuer ou non avec les instances ``Task``, spécifiquement à votre application ::"

# 1a982f7909b1410092bcd23617991fbb
#: ../../topics/auth/customizing.txt:277
msgid ""
"The only thing this does is create those extra permissions when you run "
":djadmin:`manage.py syncdb <syncdb>`. Your code is in charge of checking the"
" value of these permissions when a user is trying to access the "
"functionality provided by the application (viewing tasks, changing the "
"status of tasks, closing tasks.) Continuing the above example, the following"
" checks if a user may view tasks::"
msgstr "La seule conséquence de ce code est la création de ces permissions supplémentaires lors du lancement de :djadmin:`manage.py syncdb <syncdb>`. Votre code a ensuite la charge de contrôler la valeur de ces permissions lorsqu'un utilisateur essaie d'accéder à la fonctionnalité fournie par l'application (affichage de tâches, modification de l'état des tâches, fermeture des tâches). En poursuivant sur l'exemple précédent, le code suivant contrôle si un utilisateur peut voir les tâches ::"

# 7247b943afab44fc8639f7d72778269b
#: ../../topics/auth/customizing.txt:289
msgid "Extending the existing User model"
msgstr "Extension du modèle User existant"

# 16e7e2fdb6964dfc94151fe8551e0593
#: ../../topics/auth/customizing.txt:291
msgid ""
"There are two ways to extend the default "
":class:`~django.contrib.auth.models.User` model without substituting your "
"own model. If the changes you need are purely behavioral, and don't require "
"any change to what is stored in the database, you can create a :ref:`proxy "
"model <proxy-models>` based on :class:`~django.contrib.auth.models.User`. "
"This allows for any of the features offered by proxy models including "
"default ordering, custom managers, or custom model methods."
msgstr "Il existe deux manières d'étendre le modèle :class:`~django.contrib.auth.models.User` par défaut sans le substituer par votre propre modèle. Si les modifications requises sont purement comportementales et ne nécessitent pas de modifier ce qui est stocké dans la base de données, vous pouvez créer un :ref:`modèle mandataire <proxy-models>` basé sur :class:`~django.contrib.auth.models.User`. Ceci expose toutes les fonctionnalités offertes par les modèles mandataires, y compris l'ordre de tri par défaut, les gestionnaires personnalisés ou les méthodes de modèle personnalisées."

# b153ec9eb86348b0b5957734d0cbac2e
#: ../../topics/auth/customizing.txt:299
msgid ""
"If you wish to store information related to ``User``, you can use a :ref"
":`one-to-one relationship <ref-onetoone>` to a model containing the fields "
"for additional information. This one-to-one model is often called a profile "
"model, as it might store non-auth related information about a site user. For"
" example you might create an Employee model::"
msgstr "Si vous souhaitez stocker des informations liées au modèle ``User``, vous pouvez utiliser une  :ref:`relation un-à-un <ref-onetoone>` vers un modèle contenant les champs correspondant aux informations supplémentaires. Ce modèle un-à-un est souvent appelé un modèle de profil, car il peut stocker des informations non liées à l'authentification au sujet d'un utilisateur du site. Par exemple, vous pouvez créer un modèle ``Employee``::"

# 65b0a33baff54bb59dd3de0f324814b3
#: ../../topics/auth/customizing.txt:311
msgid ""
"Assuming an existing Employee Fred Smith who has both a User and Employee "
"model, you can access the related information using Django's standard "
"related model conventions::"
msgstr "En supposant qu'il existe un employé Fred Smith référencé à la fois par un modèle ``User`` et un modèle ``Employee``, vous pouvez accéder aux informations liées en utilisant les conventions standards des modèles liés de Django ::"

# 099243be5a304270ac74d6efa42ad260
#: ../../topics/auth/customizing.txt:318
msgid ""
"To add a profile model's fields to the user page in the admin, define an "
":class:`~django.contrib.admin.InlineModelAdmin` (for this example, we'll use"
" a :class:`~django.contrib.admin.StackedInline`) in your app's ``admin.py`` "
"and add it to a ``UserAdmin`` class which is registered with the "
":class:`~django.contrib.auth.models.User` class::"
msgstr "Pour ajouter les champs du modèle de profil à la page de l'utilisateur dans l'interface d'administration, définissez un :class:`~django.contrib.admin.InlineModelAdmin` (pour cet exemple, nous utiliserons un :class:`~django.contrib.admin.StackedInline`) dans le fichier ``admin.py`` de votre application et ajoutez-le à une classe ``UserAdmin`` qui sera enregistrée avec la classe :class:`~django.contrib.auth.models.User`::"

# 406ddb3f1aca468f887683e8494a25c1
#: ../../topics/auth/customizing.txt:345
msgid ""
"These profile models are not special in any way - they are just Django "
"models that happen to have a one-to-one link with a User model. As such, "
"they do not get auto created when a user is created, but a "
":attr:`django.db.models.signals.post_save` could be used to create or update"
" related models as appropriate."
msgstr "Ces modèles de profil n'ont aucune particularité, ce ne sont que des modèles Django qui possèdent un lien un-à-un avec un modèle ``User``. En tant que tels, ils ne sont pas automatiquement créés lorsqu'un utilisateur est créé, mais il est possible de profiter du signal :attr:`django.db.models.signals.post_save` pour créer ou mettre à jour les modèles liés selon les besoins."

# 752401f4f8c8468689f8a835ba5d2c58
#: ../../topics/auth/customizing.txt:351
msgid ""
"Note that using related models results in additional queries or joins to "
"retrieve the related data, and depending on your needs substituting the User"
" model and adding the related fields may be your better option.  However "
"existing links to the default User model within your project's apps may "
"justify the extra database load."
msgstr "Notez que l'utilisation de modèles liés provoque des requêtes ou des jointures supplémentaires pour récupérer les données liées et que donc, en fonction de vos besoins, il peut être préférable de substituer le modèle ``User`` par un modèle possédant les champs supplémentaires. Cependant, des liens existants vers le modèle ``User`` par défaut dans les applications de votre projet pourraient justifier la charge supplémentaire sur la base de données."

# e1db204c7872454fb7d6ca52c51c9b42
#: ../../topics/auth/customizing.txt:359
msgid ""
"With the introduction of :ref:`custom User models <auth-custom-user>`, the "
"use of :setting:`AUTH_PROFILE_MODULE` to define a single profile model is no"
" longer supported. See the :doc:`Django 1.5 release notes</releases/1.5>` "
"for more information."
msgstr "Avec l'introduction des :ref:`modèles utilisateurs personnalisés <auth-custom-user>`, l'utilisation de :setting:`AUTH_PROFILE_MODULE` pour définir un modèle de profil n'est plus pris en charge. Consultez les :doc:`notes de publication de Django 1.5</releases/1.5>` pour plus d'informations."

# 50a0bcd3b36f435bb3e85d6f50f786e7
#: ../../topics/auth/customizing.txt:365
msgid ""
"Prior to 1.5, a single profile model could be specified site-wide with the "
"setting :setting:`AUTH_PROFILE_MODULE` with a string consisting of the "
"following items, separated by a dot:"
msgstr "Avant Django 1.5, un seul modèle de profil par site pouvait être indiqué dans le réglage :setting:`AUTH_PROFILE_MODULE` avec une chaîne de caractères composée des éléments suivants, séparés par des points :"

# 94ba2ab0176b4b7c87fbf5be43c6cf2f
#: ../../topics/auth/customizing.txt:369
msgid ""
"The name of the application (case sensitive) in which the user profile model"
" is defined (in other words, the name which was passed to "
":djadmin:`manage.py startapp <startapp>` to create the application)."
msgstr "Le nom de l'application (sensible à la casse) dans laquelle le modèle de profil utilisateur est défini (en d'autres termes, le nom qui avait été passé à :djadmin:`manage.py startapp <startapp>` lors de la création de l'application)."

# 3091bad541084740950fd577bd8fb661
#: ../../topics/auth/customizing.txt:374
msgid "The name of the model (not case sensitive) class."
msgstr "Le nom de la classe modèle (non sensible à la casse)."

# 168a38f506da45328c60afbfb8ab7fe7
#: ../../topics/auth/customizing.txt:376
msgid ""
"For example, if the profile model was a class named ``UserProfile`` and was "
"defined inside an application named ``accounts``, the appropriate setting "
"would be::"
msgstr "Par exemple, si le modèle de profil était une classe nommée ``UserProfile`` et était définie dans une application nommée ``accounts``, le réglage adéquat serait ::"

# e577412516d046a0a25056cff8ea1b8a
#: ../../topics/auth/customizing.txt:382
msgid ""
"When a user profile model has been defined and specified in this manner, "
"each :class:`~django.contrib.auth.models.User` object will have a method -- "
":class:`~django.contrib.auth.models.User.get_profile()` -- which returns the"
" instance of the user profile model associated with that "
":class:`~django.contrib.auth.models.User`."
msgstr "Lorsqu'un modèle de profil utilisateur a été défini de cette manière, chaque objet :class:`~django.contrib.auth.models.User` possède une méthode :class:`~django.contrib.auth.models.User.get_profile()` qui renvoie l'instance du modèle de profil utilisateur associée à cet objet :class:`~django.contrib.auth.models.User`."

# 47a6ed339067473b9163afab0eb21e73
#: ../../topics/auth/customizing.txt:388
msgid ""
"The method :class:`~django.contrib.auth.models.User.get_profile()` does not "
"create a profile if one does not exist."
msgstr "La méthode :class:`~django.contrib.auth.models.User.get_profile()` ne crée pas le profil si celui-ci n'existe pas encore."

# 487e26ed229d435194923b235e5cac04
#: ../../topics/auth/customizing.txt:394
msgid "Substituting a custom User model"
msgstr "Substitution par un modèle User personnalisé"

# d08a9ccec18f444bb05fce1f5528650e
#: ../../topics/auth/customizing.txt:398
msgid ""
"Some kinds of projects may have authentication requirements for which "
"Django's built-in :class:`~django.contrib.auth.models.User` model is not "
"always appropriate. For instance, on some sites it makes more sense to use "
"an email address as your identification token instead of a username."
msgstr "Certains types de projets ont des exigences en terme d'authentification pour lesquelles le modèle :class:`~django.contrib.auth.models.User` intégré de Django ne convient pas toujours. Par exemple, certains sites préfèrent utiliser l'adresse électronique comme identifiant d'identification plutôt qu'un nom d'utilisateur."

# c1012eb8c0514a7f835d39a80337265d
#: ../../topics/auth/customizing.txt:403
msgid ""
"Django allows you to override the default User model by providing a value "
"for the :setting:`AUTH_USER_MODEL` setting that references a custom model::"
msgstr "Django permet de surcharger le modèle ``User`` par défaut en attribuant une valeur au réglage :setting:`AUTH_USER_MODEL` se référant à un modèle personnalisé ::"

# f7981f77f3ba4c46aefd272ad61accbb
#: ../../topics/auth/customizing.txt:408
msgid ""
"This dotted pair describes the name of the Django app (which must be in your"
" :setting:`INSTALLED_APPS`), and the name of the Django model that you wish "
"to use as your User model."
msgstr "Cette syntaxe pointée spécifie le nom de l'application Django (qui doit figurer dans :setting:`INSTALLED_APPS`) et le nom du modèle Django que vous souhaitez utiliser comme modèle d'utilisateur."

# ac4d07986a244b0d96082a09ea8d96f3
#: ../../topics/auth/customizing.txt:414
msgid ""
"Changing :setting:`AUTH_USER_MODEL` has a big effect on your database "
"structure. It changes the tables that are available, and it will affect the "
"construction of foreign keys and many-to-many relationships. If you intend "
"to set :setting:`AUTH_USER_MODEL`, you should set it before running "
"``manage.py syncdb`` for the first time."
msgstr "La modification de :setting:`AUTH_USER_MODEL` a une forte influence sur la structure de votre base de données. Cela modifie les tables disponibles et affecte la construction de clés étrangères et de relations plusieurs-à-plusieurs. Si vous avez l'intention de définir :setting:`AUTH_USER_MODEL`, il est préférable de le faire avant de lancer ``manage.py syncdb`` pour la première fois."

# 7aaa1b9c0a48429997f9d0f548e052bf
#: ../../topics/auth/customizing.txt:420
msgid ""
"If you have an existing project and you want to migrate to using a custom "
"User model, you may need to look into using a migration tool like South_ to "
"ease the transition."
msgstr "Si vous avez un projet existant et que vous vouliez passer à l'utilisation d'un modèle d'utilisateur personnalisé, il peut être nécessaire d'envisager l'utilisation d'un outil de migration tel que South_ pour faciliter la transition."

# 046517792b5f47ae98a6061526c14fc9
#: ../../topics/auth/customizing.txt:427
msgid "Referencing the User model"
msgstr "Références au modèle d'utilisateur"

# 9c714bda7c8443a5a301de1ea0c79759
#: ../../topics/auth/customizing.txt:431
msgid ""
"If you reference :class:`~django.contrib.auth.models.User` directly (for "
"example, by referring to it in a foreign key), your code will not work in "
"projects where the :setting:`AUTH_USER_MODEL` setting has been changed to a "
"different User model."
msgstr "Si vous référencez directement :class:`~django.contrib.auth.models.User` (par exemple dans une clé étrangère), votre code ne fonctionnera pas dans des projets où le réglage :setting:`AUTH_USER_MODEL` a été défini à un autre modèle d'utilisateur."

# a957b219b5f34e3092197e2b7ec9791a
#: ../../topics/auth/customizing.txt:438
msgid ""
"Instead of referring to :class:`~django.contrib.auth.models.User` directly, "
"you should reference the user model using "
"``django.contrib.auth.get_user_model()``. This method will return the "
"currently active User model -- the custom User model if one is specified, or"
" :class:`~django.contrib.auth.models.User` otherwise."
msgstr "Au lieu de faire directement référence à  :class:`~django.contrib.auth.models.User`, il est préférable de référencer le modèle d'utilisateur en utilisant ``django.contrib.auth.get_user_model()``. Cette méthode renvoie le modèle d'utilisateur actuellement actif, soit le modèle personnalisé s'il a été défini, soit :class:`~django.contrib.auth.models.User`."

# 3ca182c58d864de89b7c42292f1487c1
#: ../../topics/auth/customizing.txt:444
msgid ""
"When you define a foreign key or many-to-many relations to the User model, "
"you should specify the custom model using the :setting:`AUTH_USER_MODEL` "
"setting. For example::"
msgstr "Lorsque vous définissez une clé étrangère ou des relations plusieurs-à-plusieurs vers le modèle d'utilisateur, vous devriez indiquer le modèle personnalisé au moyen du réglage :setting:`AUTH_USER_MODEL`. Par exemple ::"

# 171991958ced498c9a754f977e4dc9f7
#: ../../topics/auth/customizing.txt:455
msgid "Specifying a custom User model"
msgstr "Indication d'une modèle d'utilisateur personnalisé"

# 403f1092198540a88e78b8b02f780d82
#: ../../topics/auth/customizing.txt:457
msgid "Model design considerations"
msgstr "Considérations sur la conception des modèles"

# 66387424b5814be683c2342d2cba47d9
#: ../../topics/auth/customizing.txt:459
msgid ""
"Think carefully before handling information not directly related to "
"authentication in your custom User Model."
msgstr "Réfléchissez sérieusement avant de déléguer les informations non directement liées à l'authentification au modèle d'utilisateur personnalisé."

# a1827aad2da64d41b4b32e23e7976edb
#: ../../topics/auth/customizing.txt:462
msgid ""
"It may be better to store app-specific user information in a model that has "
"a relation with the User model. That allows each app to specify its own user"
" data requirements without risking conflicts with other apps. On the other "
"hand, queries to retrieve this related information will involve a database "
"join, which may have an effect on performance."
msgstr "Il peut être préférable de stocker les informations d'utilisateur spécifiques à une application dans un modèle ayant une relation avec le modèle ``User``. Cela permet à chaque application de définir ses propres exigences de données utilisateurs sans risquer d'entrer en conflit avec les autres applications. D'un autre côté, les requêtes qui auront besoin de ces informations liées devront effectuer une jointure de base de données, ce qui peut avoir une influence sur les performances."

# e7055a5072644cbea86f3b77ddb9bec6
#: ../../topics/auth/customizing.txt:468
msgid ""
"Django expects your custom User model to meet some minimum requirements."
msgstr "Django s'attend à ce qu'un minimum d'exigences soient respectées dans les modèles d'utilisateur personnalisés."

# 2c1aabac6a1d4bc5983a6ba20fb41028
#: ../../topics/auth/customizing.txt:470
msgid "Your model must have an integer primary key."
msgstr "Le modèle doit posséder un clé primaire de type nombre entier."

# 531b9694e7524290be656a229711a4ed
#: ../../topics/auth/customizing.txt:472
msgid ""
"Your model must have a single unique field that can be used for "
"identification purposes. This can be a username, an email address, or any "
"other unique attribute."
msgstr "Le modèle doit comporter un seul champ unique pouvant être utilisé pour l'identification. Cela peut être un nom d'utilisateur, une adresse électronique ou tout autre attribut unique."

# a73504fcc5584918a64288c6652ad6e5
#: ../../topics/auth/customizing.txt:476
msgid ""
"Your model must provide a way to address the user in a \"short\" and "
"\"long\" form. The most common interpretation of this would be to use the "
"user's given name as the \"short\" identifier, and the user's full name as "
"the \"long\" identifier. However, there are no constraints on what these two"
" methods return - if you want, they can return exactly the same value."
msgstr "Le modèle doit fournir une manière de décrire l'utilisateur dans une forme « courte » et dans une forme « longue ». L'interprétation la plus courante étant de considérer le prénom  comme identifiant « court » et le nom complet comme identifiant « long ». Cependant, il n'y a aucune contrainte sur les valeurs renvoyées par ces deux méthodes ; elles peuvent tout aussi bien renvoyer la même valeur si vous le souhaitez."

# 1fcd29df99f54b8a8cc3298ad1acff93
#: ../../topics/auth/customizing.txt:483
msgid ""
"The easiest way to construct a compliant custom User model is to inherit "
"from :class:`~django.contrib.auth.models.AbstractBaseUser`. "
":class:`~django.contrib.auth.models.AbstractBaseUser` provides the core "
"implementation of a ``User`` model, including hashed passwords and tokenized"
" password resets. You must then provide some key implementation details:"
msgstr "La manière la plus simple de construire un modèle d'utilisateur personnalisé en respectant les contraintes est d'hériter de :class:`~django.contrib.auth.models.AbstractBaseUser`. Cette classe fournit l'implémentation de base d'un modèle ``User``, y compris les mots de passe hachés et les jetons de réinitialisation des mots de passe. Vous devez ensuite fournir les détails d'implémentation critiques :"

# ecdb46b3e301459f9282da784b251c1e
#: ../../topics/auth/customizing.txt:495
msgid ""
"A string describing the name of the field on the User model that is used as "
"the unique identifier. This will usually be a username of some kind, but it "
"can also be an email address, or any other unique identifier. The field "
"*must* be unique (i.e., have ``unique=True`` set in its definition)."
msgstr "Une chaîne contenant le nom du champ du modèle d'utilisateur utilisé comme identifiant unique. C'est normalement quelque chose comme un nom d'utilisateur ou une adresse électronique, ou encore tout autre identifiant unique. Ce champ *doit* être unique (c'est-à-dire que ``unique=True`` doit apparaître dans sa définition)."

# 93042f5ead9a40a3bdc80c32aea0d558
#: ../../topics/auth/customizing.txt:501
msgid ""
"In the following example, the field ``identifier`` is used as the "
"identifying field::"
msgstr "Dans l'exemple suivant, le champ ``identifier`` est utilisé comme champ d'identification ::"

# 422016702a8b4dae8f54aca00f2d8e7f
#: ../../topics/auth/customizing.txt:511
msgid ""
"A list of the field names that will be prompted for when creating a user via"
" the :djadmin:`createsuperuser` management command. The user will be "
"prompted to supply a value for each of these fields. It must include any "
"field for which :attr:`~django.db.models.Field.blank` is ``False`` or "
"undefined and may include additional fields you want prompted for when a "
"user is created interactively. However, it will not work for "
":class:`~django.db.models.ForeignKey` fields. ``REQUIRED_FIELDS`` has no "
"effect in other parts of Django, like creating a user in the admin."
msgstr "Une liste de noms de champs qui devront être renseignés lors de la création d'un utilisateur par la commande de gestion :djadmin:`createsuperuser`. La commande demandera de fournir une valeur pour chacun de ces champs. Cette liste doit contenir tous les champs pour lesquels l'attribut  :attr:`~django.db.models.Field.blank` est ``False`` ou non défini, et peut inclure des champs supplémentaires pour lesquels vous souhaitez que l'utilisateur donne une valeur lorsqu'un utilisateur est créé de manière interactive. Cela ne fonctionnera cependant pas pour les champs de type :class:`~django.db.models.ForeignKey`. ``REQUIRED_FIELDS`` n'a aucun effet dans d'autres parties de Django, comme lors de la création d'un utilisateur par l'interface d'administration."

# 5e04521be04c410d89e858e14da2ff55
#: ../../topics/auth/customizing.txt:521
msgid ""
"For example, here is the partial definition for a ``User`` model that "
"defines two required fields - a date of birth and height::"
msgstr "Par exemple, voici la définition partielle d'un modèle d'utilisateur définissant deux champs obligatoires, une date de naissance et une hauteur ::"

# eb83c2161a75430b85d303c1269588c7
#: ../../topics/auth/customizing.txt:533
msgid ""
"``REQUIRED_FIELDS`` must contain all required fields on your User model, but"
" should *not* contain the ``USERNAME_FIELD``."
msgstr "``REQUIRED_FIELDS`` doit contenir tous les champs obligatoires de votre modèle d'utilisateur, mais ne doit *pas* contenir le champ ``USERNAME_FIELD``."

# 86ba10662292474f8f34b21d86ee0d6a
#: ../../topics/auth/customizing.txt:538
msgid ""
"A boolean attribute that indicates whether the user is considered "
"\"active\".  This attribute is provided as an attribute on "
"``AbstractBaseUser`` defaulting to ``True``. How you choose to implement it "
"will depend on the details of your chosen auth backends. See the "
"documentation of the :attr:`is_active attribute on the built-in user model "
"<django.contrib.auth.models.User.is_active>` for details."
msgstr "Un attribut booléen indiquant si l'utilisateur est considéré comme « actif ». Cet attribut est fournit comme attribut de ``AbstractBaseUser`` et valant ``True`` par défaut. La manière dont vous allez l'implémenter dépendra des détails des moteurs d'authentification choisis. Consultez la documentation de l':attr:`attribut is_active <django.contrib.auth.models.User.is_active>` du modèle d'utilisateur intégré pour plus de détails."

# 0a78c1604210461b8d223044d66dc39b
#: ../../topics/auth/customizing.txt:547
msgid ""
"A longer formal identifier for the user. A common interpretation would be "
"the full name of the user, but it can be any string that identifies the "
"user."
msgstr "Une façon longue d'identifier formellement un utilisateur. Fréquemment interprété comme le nom complet de l'utilisateur, mais cela peut être n'importe quelle chaîne de caractères identifiant la personne."

# 056e82eace6547c783e9df450a57cac8
#: ../../topics/auth/customizing.txt:553
msgid ""
"A short, informal identifier for the user. A common interpretation would be "
"the first name of the user, but it can be any string that identifies the "
"user in an informal way. It may also return the same value as "
":meth:`django.contrib.auth.models.User.get_full_name()`."
msgstr "Un identifiant court et informel de l'utilisateur. Fréquemment interprété comme le prénom de l'utilisateur,  mais cela peut être n'importe quelle chaîne de caractères identifiant l'utilisateur de manière informelle. Elle peut aussi renvoyer la même valeur que :meth:`django.contrib.auth.models.User.get_full_name()`."

# f467fd26c5f044a8a58ec8d47183c2af
#: ../../topics/auth/customizing.txt:558
msgid ""
"The following methods are available on any subclass of "
":class:`~django.contrib.auth.models.AbstractBaseUser`:"
msgstr "Les méthodes suivantes sont disponibles pour chaque sous-classe de :class:`~django.contrib.auth.models.AbstractBaseUser`:"

# 0e00b986ace348d39e8fde2270212dbf
#: ../../topics/auth/customizing.txt:565
msgid "Returns the value of the field nominated by ``USERNAME_FIELD``."
msgstr "Renvoie la valeur du champ spécifié dans ``USERNAME_FIELD``."

# 45932956fceb411cb5dc61fbe0679581
#: ../../topics/auth/customizing.txt:569
msgid ""
"Always returns ``False``. This is a way of differentiating from  "
":class:`~django.contrib.auth.models.AnonymousUser` objects. Generally, you "
"should prefer using "
":meth:`~django.contrib.auth.models.AbstractBaseUser.is_authenticated()` to "
"this method."
msgstr "Renvoie toujours ``False``. C'est une manière de différencier ces objets de :class:`~django.contrib.auth.models.AnonymousUser`. Généralement, il est préférable d'utiliser la méthode :meth:`~django.contrib.auth.models.AbstractBaseUser.is_authenticated()`."

# 7ad82c79ca7949748b2c2b5813eee176
#: ../../topics/auth/customizing.txt:577
msgid ""
"Always returns ``True``. This is a way to tell if the user has been "
"authenticated. This does not imply any permissions, and doesn't check if the"
" user is active - it only indicates that the user has provided a valid "
"username and password."
msgstr "Renvoie toujours ``True``. C'est une manière de savoir si l'utilisateur a été authentifié. Cela ne dit rien sur les permissions et ne vérifie pas si l'utilisateur est actif. C'est seulement une indication que l'utilisateur a fourni un nom d'utilisateur et un mot de passe valides."

# be707a7340514956996744f9694bca84
#: ../../topics/auth/customizing.txt:584
msgid ""
"Sets the user's password to the given raw string, taking care of the "
"password hashing. Doesn't save the "
":class:`~django.contrib.auth.models.AbstractBaseUser` object."
msgstr "Définit le mot de passe de l'utilisateur à la chaîne brute indiquée, en se chargeant du hachage du mot de passe. L'objet :class:`~django.contrib.auth.models.AbstractBaseUser` n'est pas enregistré par cette méthode."

# 9ce6d3200f314fcc94cf8d017978a866
#: ../../topics/auth/customizing.txt:588
msgid ""
"When the raw_password is ``None``, the password will be set to an unusable "
"password, as if "
":meth:`~django.contrib.auth.models.AbstractBaseUser.set_unusable_password()`"
" were used."
msgstr "Lorsque ``raw_password`` vaut ``None``, le mot de passe sera défini comme non utilisable, comme si on avait appelé :meth:`~django.contrib.auth.models.AbstractBaseUser.set_unusable_password()`."

# 3bc511456c7145308f1c5c89b64dbe33
#: ../../topics/auth/customizing.txt:595
msgid ""
"In Django 1.4 and 1.5, a blank string was unintentionally stored as an "
"unsable password as well."
msgstr "Dans Django 1.4 et 1.5, une chaîne vide était stockée de manière non intentionnelle comme mot de passe inutilisable."

# 8f9d6dcbce9c4652b8a2370e9e805fde
#: ../../topics/auth/customizing.txt:600
msgid ""
"Returns ``True`` if the given raw string is the correct password for the "
"user. (This takes care of the password hashing in making the comparison.)"
msgstr "Renvoie ``True`` si la chaîne brute transmise est le mot de passe correct de cet utilisateur (cette méthode se charge du hachage du mot de passe en vue de la comparaison)."

# 60181525fbd74577abc21a19d74b3c9c
# f84c68bf4363409ca1e2662e021a0883
#: ../../topics/auth/customizing.txt:606 ../../topics/auth/passwords.txt:219
msgid ""
"In Django 1.4 and 1.5, a blank string was unintentionally considered to be "
"an unusable password, resulting in this method returning ``False`` for such "
"a password."
msgstr "Dans Django 1.4 et 1.5, une chaîne vide était considérée de manière non intentionnelle comme était un mot de passe inutilisable, ce qui provoquait le renvoi de ``False`` par cette méthode pour un tel mot de passe."

# c9dce13a2483462b9606b90efa82060f
#: ../../topics/auth/customizing.txt:612
msgid ""
"Marks the user as having no password set.  This isn't the same as having a "
"blank string for a password. "
":meth:`~django.contrib.auth.models.AbstractBaseUser.check_password()` for "
"this user will never return ``True``. Doesn't save the "
":class:`~django.contrib.auth.models.AbstractBaseUser` object."
msgstr "Marque l'utilisateur comme n'ayant pas de mot de passe défini. Ce n'est pas la même chose que de définir une chaîne vide comme mot de passe. :meth:`~django.contrib.auth.models.AbstractBaseUser.check_password()` ne renvoie jamais ``True`` pour cet utilisateur. L'objet :class:`~django.contrib.auth.models.AbstractBaseUser` n'est pas enregistré par cette méthode."

# 8e9cf38b02c04a8aa3cb4dfd7380b176
#: ../../topics/auth/customizing.txt:618
msgid ""
"You may need this if authentication for your application takes place against"
" an existing external source such as an LDAP directory."
msgstr "Cela peut être utile si le processus d'authentification de votre application se fait par une source externe existante telle qu'un annuaire LDAP."

# 470d07b75ea946058242ddd83b0f7cd4
#: ../../topics/auth/customizing.txt:623
msgid ""
"Returns ``False`` if "
":meth:`~django.contrib.auth.models.AbstractBaseUser.set_unusable_password()`"
" has been called for this user."
msgstr "Renvoie ``False`` si :meth:`~django.contrib.auth.models.AbstractBaseUser.set_unusable_password()` a été appelée pour cet utilisateur."

# cfaf09668e33438fbaea67992f69ce02
#: ../../topics/auth/customizing.txt:627
msgid ""
"You should also define a custom manager for your ``User`` model. If your "
"``User`` model defines ``username``, ``email``, ``is_staff``, ``is_active``,"
" ``is_superuser``, ``last_login``, and ``date_joined`` fields the same as "
"Django's default ``User``, you can just install Django's "
":class:`~django.contrib.auth.models.UserManager`; however, if your ``User`` "
"model defines different fields, you will need to define a custom manager "
"that extends :class:`~django.contrib.auth.models.BaseUserManager` providing "
"two additional methods:"
msgstr "Il faudrait aussi défini un gestionnaire personnalisé pour votre modèle ``User``. Si ce dernier définit les champs ``username``, ``email``, ``is_staff``, ``is_active``, ``is_superuser``, ``last_login`` et ``date_joined`` comparables au modèle ``User`` par défaut de Django, vous pouvez simplement utiliser le gestionnaire :class:`~django.contrib.auth.models.UserManager` de Django. Cependant, si votre modèle ``User`` définit des champs différents, vous devrez définir un gestionnaire personnalisé héritant de :class:`~django.contrib.auth.models.BaseUserManager` et fournissant deux méthodes supplémentaires :"

# 77362eacf22241fdb0f0dd9e4501d317
#: ../../topics/auth/customizing.txt:640
msgid ""
"The prototype of ``create_user()`` should accept the username field, plus "
"all required fields as arguments. For example, if your user model uses "
"``email`` as the username field, and has ``date_of_birth`` as a required "
"field, then ``create_user`` should be defined as::"
msgstr "Le prototype de ``create_user()`` doit accepter en paramètre le champ nom d'utilisateur ainsi que tous les champs obligatoires. Par exemple, si votre modèle d'utilisateur utilise ``email`` comme champ nom d'utilisateur et que ``date_of_birth`` est un champ obligatoire, ``create_user`` devrait être définie ainsi ::"

# 7fb39ae43a5a41c4b9f642530661324c
#: ../../topics/auth/customizing.txt:651
msgid ""
"The prototype of ``create_superuser()`` should accept the username field, "
"plus all required fields as arguments. For example, if your user model uses "
"``email`` as the username field, and has ``date_of_birth`` as a required "
"field, then ``create_superuser`` should be defined as::"
msgstr "Le prototype de ``create_superuser()`` doit accepter en paramètre le champ nom d'utilisateur ainsi que tous les champs obligatoires. Par exemple, si votre modèle d'utilisateur utilise ``email`` comme champ nom d'utilisateur et que ``date_of_birth`` est un champ obligatoire, ``create_superuser`` devrait être définie ainsi ::"

# 2dc2e01561714586b9344830658f8b58
#: ../../topics/auth/customizing.txt:660
msgid ""
"Unlike ``create_user()``, ``create_superuser()`` *must* require the caller "
"to provide a password."
msgstr "Au contraire de ``create_user()``, ``create_superuser()`` *doit* exiger de l'appelant qu'il fournisse un mot de passe."

# 3597b53414fa48f8bde392077f174235
#: ../../topics/auth/customizing.txt:663
msgid ""
":class:`~django.contrib.auth.models.BaseUserManager` provides the following "
"utility methods:"
msgstr ":class:`~django.contrib.auth.models.BaseUserManager` fournit les méthodes utilitaires suivantes :"

# 941f6b294edf40629f8432e4b368570f
#: ../../topics/auth/customizing.txt:670
msgid ""
"A ``classmethod`` that normalizes email addresses by lowercasing the domain "
"portion of the email address."
msgstr "Une ``classmethod`` qui normalise les adresses électroniques en transformant en minuscules la partie nom de domaine de l'adresse."

# 41ae019020e04946842940b7788f62a0
#: ../../topics/auth/customizing.txt:675
msgid ""
"Retrieves a user instance using the contents of the field nominated by "
"``USERNAME_FIELD``."
msgstr "Récupère une instance utilisateur en utilisant le contenu du champ spécifié dans ``USERNAME_FIELD``."

# 2acb2c5a22c94b609455d25e9f7b014a
#: ../../topics/auth/customizing.txt:680
msgid ""
"Returns a random password with the given length and given string of allowed "
"characters. Note that the default value of ``allowed_chars`` doesn't contain"
" letters that can cause user confusion, including:"
msgstr "Renvoie un mot de passe aléatoire de la longueur indiquée et utilisant les caractères de la chaîne des caractères autorisés. Notez que la valeur par défaut de ``allowed_chars`` ne contient pas de lettres pouvant prêter à confusion, comme :"

# 399b5972b1b5495390e6aabaa0163235
#: ../../topics/auth/customizing.txt:684
msgid ""
"``i``, ``l``, ``I``, and ``1`` (lowercase letter i, lowercase letter L, "
"uppercase letter i, and the number one)"
msgstr "``i``, ``l``, ``I`` et ``1`` (i minuscule, L minuscule, i majuscule et le chiffre 1)"

# 0a395a2e6b154c678ee72a8ac6c6a557
#: ../../topics/auth/customizing.txt:686
msgid ""
"``o``, ``O``, and ``0`` (lowercase letter o, uppercase letter o, and zero)"
msgstr "``o``, ``O`` et ``0`` (o minuscule, o majuscule et zéro)"

# 4d5a570b71f8457b98fb6664d54cb3db
#: ../../topics/auth/customizing.txt:690
msgid "Extending Django's default User"
msgstr "Extension du modèle User par défaut de Django"

# 5a3a09d165b04abc8cb9228d66d18de5
#: ../../topics/auth/customizing.txt:692
msgid ""
"If you're entirely happy with Django's "
":class:`~django.contrib.auth.models.User` model and you just want to add "
"some additional profile information, you can simply subclass "
"``django.contrib.auth.models.AbstractUser`` and add your custom profile "
"fields. This class provides the full implementation of the default "
":class:`~django.contrib.auth.models.User` as an :ref:`abstract model "
"<abstract-base-classes>`."
msgstr "Si le modèle  :class:`~django.contrib.auth.models.User` de Django vous convient entièrement et que vous vouliez simplement ajouter quelques informations de profil supplémentaires, vous pouvez simplement hériter de ``django.contrib.auth.models.AbstractUser`` et ajouter vos propres champs de profil. Cette classe fournit une implémentation complète du modèle :class:`~django.contrib.auth.models.User` par défaut sous forme de :ref:`modèle abstrait <abstract-base-classes>`."

# 6bc48946a24d4a03804e9a0c03a6e4ec
#: ../../topics/auth/customizing.txt:702
msgid "Custom users and the built-in auth forms"
msgstr "Utilisateurs personnalisés et formulaires d'authentification intégrés"

# 15103e8fe3364463aba604eee2990091
#: ../../topics/auth/customizing.txt:704
msgid ""
"As you may expect, built-in Django's :ref:`forms <built-in-auth-forms>` and "
":ref:`views <built-in-auth-views>` make certain assumptions about the user "
"model that they are working with."
msgstr "Comme l'on peut s'y attendre, les :ref:`formulaires <built-in-auth-forms>` et les :ref:`vues <built-in-auth-views>` intégrés de Django ont certaines attentes à propos du modèle utilisateur avec lequel ils fonctionnent."

# 4a963b9a29d14b329856733ba967cde5
#: ../../topics/auth/customizing.txt:708
msgid ""
"If your user model doesn't follow the same assumptions, it may be necessary "
"to define a replacement form, and pass that form in as part of the "
"configuration of the auth views."
msgstr "Si votre modèle utilisateur ne correspond pas à ces attentes, il peut être nécessaire de définir des formulaires de remplacement et de transmettre ces formulaires dans la configuration des vues d'authentification."

# a85e19cb8c7b418e9332f31d06c673ca
#: ../../topics/auth/customizing.txt:712
msgid ":class:`~django.contrib.auth.forms.UserCreationForm`"
msgstr ":class:`~django.contrib.auth.forms.UserCreationForm`"

# 4e261e699ae44a9eb8b9af85886f79ed
# 5b9c104dce0b493b89adef0f368d63ec
#: ../../topics/auth/customizing.txt:714 ../../topics/auth/customizing.txt:719
msgid ""
"Depends on the :class:`~django.contrib.auth.models.User` model. Must be re-"
"written for any custom user model."
msgstr "Dépend du modèle :class:`~django.contrib.auth.models.User`. Doit être réécrit pour tout modèle utilisateur personnalisé."

# f61ff98b6742441cb23f7dac9584348f
#: ../../topics/auth/customizing.txt:717
msgid ":class:`~django.contrib.auth.forms.UserChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.UserChangeForm`"

# c379c0bd89f147969e9d4357a4f979ae
#: ../../topics/auth/customizing.txt:722
msgid ":class:`~django.contrib.auth.forms.AuthenticationForm`"
msgstr ":class:`~django.contrib.auth.forms.AuthenticationForm`"

# 2e4e15a617124170941193c1cf64d599
#: ../../topics/auth/customizing.txt:724
msgid ""
"Works with any subclass of "
":class:`~django.contrib.auth.models.AbstractBaseUser`, and will adapt to use"
" the field defined in `USERNAME_FIELD`."
msgstr "Fonctionne avec toute sous-classe de :class:`~django.contrib.auth.models.AbstractBaseUser` et s'adapte afin d'utiliser le champ défini dans ``USERNAME_FIELD``."

# 58f1aa2831164b98b8b7b3517ee47607
#: ../../topics/auth/customizing.txt:727
msgid ":class:`~django.contrib.auth.forms.PasswordResetForm`"
msgstr ":class:`~django.contrib.auth.forms.PasswordResetForm`"

# 777ec3ed60984aec8c8e1aada21ff53f
#: ../../topics/auth/customizing.txt:729
msgid ""
"Assumes that the user model has an integer primary key, has a field named "
"``email`` that can be used to identify the user, and a boolean field named "
"`is_active` to prevent password resets for inactive users."
msgstr "S'attend à ce que le modèle utilisateur possède une clé primaire de type nombre entier, qu'il ait un champ nommé ``email`` permettant d'identifier l'utilisateur et un champ booléen nommé ``is_active`` pour empêcher les utilisateurs inactifs de réinitialiser leur mot de passe."

# 511b676d1c014e0883780516fddce996
#: ../../topics/auth/customizing.txt:733
msgid ":class:`~django.contrib.auth.forms.SetPasswordForm`"
msgstr ":class:`~django.contrib.auth.forms.SetPasswordForm`"

# 4af12f80519647c79b47312a98ec68c4
# 3893727691474faca1365a3f766b4fe5
# 162a1e8d1e174b7c9b995dba23a005b2
#: ../../topics/auth/customizing.txt:735 ../../topics/auth/customizing.txt:739
#: ../../topics/auth/customizing.txt:743
msgid ""
"Works with any subclass of "
":class:`~django.contrib.auth.models.AbstractBaseUser`"
msgstr "Fonctionne avec toute sous-classe de :class:`~django.contrib.auth.models.AbstractBaseUser`."

# d29d8a36c1b94ad09d5aac1bbded8358
#: ../../topics/auth/customizing.txt:737
msgid ":class:`~django.contrib.auth.forms.PasswordChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.PasswordChangeForm`"

# 4991ea4bab4f4bc9970909619660bf6f
#: ../../topics/auth/customizing.txt:741
msgid ":class:`~django.contrib.auth.forms.AdminPasswordChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.AdminPasswordChangeForm`"

# ddf28e08bc084ee2bdbd0d2e2d042119
#: ../../topics/auth/customizing.txt:747
msgid "Custom users and :mod:`django.contrib.admin`"
msgstr "Utilisateurs personnalisés et  :mod:`django.contrib.admin`"

# fcf59ce964944de48d1248f8d0c95d9d
#: ../../topics/auth/customizing.txt:749
msgid ""
"If you want your custom User model to also work with Admin, your User model "
"must define some additional attributes and methods. These methods allow the "
"admin to control access of the User to admin content:"
msgstr "Si vous souhaitez que votre modèle utilisateur personnalisé fonctionne également dans l'interface d'administration, celui-ci doit définir certains attributs et méthodes supplémentaires. Ces méthodes permettent au site d'administration de contrôler l'accès de l'utilisateur à son contenu :"

# da0cf8257a7e463a9bff3d1878031125
#: ../../topics/auth/customizing.txt:757
msgid ""
"Returns ``True`` if the user is allowed to have access to the admin site."
msgstr "Renvoie ``True`` si l'utilisateur est autorisé à accéder au site d'administration."

# 36ac1cdbeb654a8e976c8584502839c1
#: ../../topics/auth/customizing.txt:761
msgid "Returns ``True`` if the user account is currently active."
msgstr "Renvoie ``True`` si le compte utilisateur est actuellement actif."

# 9a7078f1df104776b6bf405765394989
#: ../../topics/auth/customizing.txt:765
msgid ""
"Returns ``True`` if the user has the named permission. If ``obj`` is "
"provided, the permission needs to be checked against a specific object "
"instance."
msgstr "Renvoie ``True`` si l'utilisateur possède la permission indiquée. Si ``obj`` est transmis, la permission doit être vérifiée en relation avec une instance d'objet spécifique."

# 994da06f4fa94f519f27ca2d0a7e2bab
#: ../../topics/auth/customizing.txt:771
msgid ""
"Returns ``True`` if the user has permission to access models in the given "
"app."
msgstr "Renvoie ``True`` si l'utilisateur possède la permission d'accéder aux modèles de l'application indiquée."

# 7d63ef022716488ca84eac03cc0413ce
#: ../../topics/auth/customizing.txt:774
msgid ""
"You will also need to register your custom User model with the admin. If "
"your custom User model extends ``django.contrib.auth.models.AbstractUser``, "
"you can use Django's existing ``django.contrib.auth.admin.UserAdmin`` class."
" However, if your User model extends "
":class:`~django.contrib.auth.models.AbstractBaseUser`, you'll need to define"
" a custom ``ModelAdmin`` class. It may be possible to subclass the default "
"``django.contrib.auth.admin.UserAdmin``; however, you'll need to override "
"any of the definitions that refer to fields on "
"``django.contrib.auth.models.AbstractUser`` that aren't on your custom User "
"class."
msgstr "Il sera aussi nécessaire d'inscrire le modèle d'utilisateur personnalisé à l'interface d'administration. Si votre modèle hérite de ``django.contrib.auth.models.AbstractUser``, vous pouvez utiliser la classe existante de Django ``django.contrib.auth.admin.UserAdmin``. Cependant, si votre modèle hérite de :class:`~django.contrib.auth.models.AbstractBaseUser`, vous devrez définir une classe ``ModelAdmin`` personnalisée. Il est possible d'hériter de la classe ``django.contrib.auth.admin.UserAdmin``, mais il faudra alors surcharger toutes les définitions qui se référent à des champs de ``django.contrib.auth.models.AbstractUser`` et qui ne se trouvent pas dans votre classe d'utilisateur personnalisée."

# ec0c61f8fa0e4e89a8ecea59a1a9d171
#: ../../topics/auth/customizing.txt:786
msgid "Custom users and permissions"
msgstr "Utilisateurs personnalisés et permissions"

# 800da7b5ce1c49f78685070c1449675a
#: ../../topics/auth/customizing.txt:788
msgid ""
"To make it easy to include Django's permission framework into your own User "
"class, Django provides "
":class:`~django.contrib.auth.models.PermissionsMixin`. This is an abstract "
"model you can include in the class hierarchy for your User model, giving you"
" all the methods and database fields necessary to support Django's "
"permission model."
msgstr "Pour faciliter l'intégration du système des permissions de Django à votre propre classe d'utilisateur, Django propose :class:`~django.contrib.auth.models.PermissionsMixin`. Il s'agit d'un modèle abstrait que vous pouvez ajouter à la hiérarchie de classes de votre modèle d'utilisateur et qui vous offre ainsi toutes les méthodes et les champs de base de données nécessaires pour la prise en charge du modèle des permissions de Django."

# 2be7ca5110ac4f94b15442d7d8961edc
#: ../../topics/auth/customizing.txt:794
msgid ""
":class:`~django.contrib.auth.models.PermissionsMixin` provides the following"
" methods and attributes:"
msgstr ":class:`~django.contrib.auth.models.PermissionsMixin` contient les méthodes et attributs suivants :"

# fb014f699d5d435eb105431d3127e51f
#: ../../topics/auth/customizing.txt:801
msgid ""
"Boolean. Designates that this user has all permissions without explicitly "
"assigning them."
msgstr "Valeur booléenne. Indique que cet utilisateur possède toutes les permissions sans avoir besoin de les lui attribuer explicitement."

# 19543dc1a6b443afa0633a66bb0acd44
#: ../../topics/auth/customizing.txt:806
msgid ""
"Returns a set of permission strings that the user has, through his/her "
"groups."
msgstr "Renvoie l'ensemble des permissions (chaînes) que l'utilisateur obtient au travers des groupes auxquels il appartient. "

# d1e9f757a3e641ddbc949b866e775969
#: ../../topics/auth/customizing.txt:809
msgid ""
"If ``obj`` is passed in, only returns the group permissions for this "
"specific object."
msgstr "Si ``obj`` est transmis, ne renvoie que les permissions de groupe liées à cet objet spécifique."

# bf2170da66d04c0e88854d8553cd37ac
#: ../../topics/auth/customizing.txt:814
msgid ""
"Returns a set of permission strings that the user has, both through group "
"and user permissions."
msgstr "Renvoie l'ensemble des permissions (chaînes) que l'utilisateur obtient directement ou au travers des groupes auxquels il appartient. "

# bd9578a07d694ad58429465c7a79220a
#: ../../topics/auth/customizing.txt:817
msgid ""
"If ``obj`` is passed in, only returns the permissions for this specific "
"object."
msgstr "Si ``obj`` est transmis, ne renvoie que les permissions liées à cet objet spécifique."

# 6e585e2b0bce4d60878a9bd2755af794
#: ../../topics/auth/customizing.txt:822
msgid ""
"Returns ``True`` if the user has the specified permission, where ``perm`` is"
" in the format ``\"<app label>.<permission codename>\"`` (see "
":ref:`permissions <topic-authorization>`). If the user is inactive, this "
"method will always return ``False``."
msgstr "Renvoie ``True`` si l'utilisateur possède la permission indiquée, où ``perm`` est au format ``\"<étiquette application>.<code permission>\"`` (voir :ref:`permissions <topic-authorization>`). Si l'utilisateur est inactif, cette méthode renvoie toujours ``False``."

# b68d7bed76dc4e7888ae34c8a89e3765
#: ../../topics/auth/customizing.txt:827
msgid ""
"If ``obj`` is passed in, this method won't check for a permission for the "
"model, but for this specific object."
msgstr "Si ``obj`` est transmis, cette méthode ne contrôle pas la permission au niveau du modèle, mais pour l'objet indiqué."

# fb1da2d7467d42b8b4caa0d4087a18f6
#: ../../topics/auth/customizing.txt:832
msgid ""
"Returns ``True`` if the user has each of the specified permissions, where "
"each perm is in the format ``\"<app label>.<permission codename>\"``. If the"
" user is inactive, this method will always return ``False``."
msgstr "Renvoie ``True`` si l'utilisateur possède toutes les permissions indiquées, où chaque permission est au format ``\"<étiquette application>.<code permission>\"``. Si l'utilisateur est inactif, cette méthode renvoie toujours ``False``."

# bbc9884a90ef4736b04e192594b85771
#: ../../topics/auth/customizing.txt:837
msgid ""
"If ``obj`` is passed in, this method won't check for permissions for the "
"model, but for the specific object."
msgstr "Si ``obj`` est transmis, cette méthode ne contrôle pas les permissions au niveau du modèle, mais pour l'objet indiqué."

# fef7b632558346fa96a01af30ba84b62
#: ../../topics/auth/customizing.txt:842
msgid ""
"Returns ``True`` if the user has any permissions in the given package (the "
"Django app label). If the user is inactive, this method will always return "
"``False``."
msgstr "Renvoie ``True`` si l'utilisateur possède au moins une permission dans le module indiqué (l'étiquette d'application Django). Si l'utilisateur est inactif, cette méthode renvoie toujours ``False``."

# 5a8eb95c46e74fe196426125c016b959
#: ../../topics/auth/customizing.txt:846
msgid "ModelBackend"
msgstr "ModelBackend"

# 4d72becf51754754986ad5baabfc059a
#: ../../topics/auth/customizing.txt:848
msgid ""
"If you don't include the "
":class:`~django.contrib.auth.models.PermissionsMixin`, you must ensure you "
"don't invoke the permissions methods on ``ModelBackend``. ``ModelBackend`` "
"assumes that certain fields are available on your user model. If your User "
"model doesn't provide  those fields, you will receive database errors when "
"you check permissions."
msgstr "Si vous n'intégrez pas :class:`~django.contrib.auth.models.PermissionsMixin` vous devez vous assurer de ne pas appeler les méthodes de permissions sur ``ModelBackend``. ``ModelBackend`` s'attend à ce que certains champs soient disponibles dans votre modèle d'utilisateur. Si ce dernier ne fournit pas ces champs, vous obtiendrez des erreurs de base de données lorsque vous contrôlez les permissions."

# d2911089ffd5474b97b4470fb07f606c
#: ../../topics/auth/customizing.txt:856
msgid "Custom users and Proxy models"
msgstr "Utilisateurs personnalisés et modèles mandataires"

# a7a13e9880524156bda51cd830672443
#: ../../topics/auth/customizing.txt:858
msgid ""
"One limitation of custom User models is that installing a custom User model "
"will break any proxy model extending "
":class:`~django.contrib.auth.models.User`. Proxy models must be based on a "
"concrete base class; by defining a custom User model, you remove the ability"
" of Django to reliably identify the base class."
msgstr "Une limite connue des modèles d'utilisateur personnalisés est que leur installation casse tout modèle mandataire étendant le modèle :class:`~django.contrib.auth.models.User`. Les modèles mandataires doivent hériter d'une classe de base concrète ; en définissant un modèle d'utilisateur personnalisé, vous supprimez la capacité de Django à identifier de manière fiable la classe de base."

# 9d2539786a204ddcb52733000b73c89c
#: ../../topics/auth/customizing.txt:863
msgid ""
"If your project uses proxy models, you must either modify the proxy to "
"extend the User model that is currently in use in your project, or merge "
"your proxy's behavior into your User subclass."
msgstr "Si votre projet utilise des modèles mandataires, vous devez soit modifier ces modèles afin qu'ils étendent le modèle d'utilisateur réellement utilisé dans votre projet, soit fusionner le comportement du modèle mandataire dans votre sous-classe de ``User``."

# 0b27a7de3b5d46bab8a4da719ab764bc
#: ../../topics/auth/customizing.txt:868
msgid "Custom users and signals"
msgstr "Utilisateurs personnalisés et signaux"

# 32b9c5795b0f4f6fad4ef9d1b41a0239
#: ../../topics/auth/customizing.txt:870
msgid ""
"Another limitation of custom User models is that you can't use "
":func:`django.contrib.auth.get_user_model()` as the sender or target of a "
"signal handler. Instead, you must register the handler with the resulting "
"User model. See :doc:`/topics/signals` for more information on registering "
"and sending signals."
msgstr "Une autre limite connue des modèles d'utilisateur personnalisés est que vous ne pouvez pas utiliser :func:`django.contrib.auth.get_user_model()` comme expéditeur ou cible d'un gestionnaire de signal. Il est impératif d'inscrire le gestionnaire avec le modèle d'utilisateur réel. Consultez :doc:`/topics/signals` pour en savoir plus sur l'inscription et l'envoi de signaux."

# 0b0ae138fcaa463bb42e269dcba40a84
#: ../../topics/auth/customizing.txt:877
msgid "Custom users and testing/fixtures"
msgstr "Utilisateurs personnalisés et tests/instantanés"

# 9c4974aa135c4a7ba20b519edd81129d
#: ../../topics/auth/customizing.txt:879
msgid ""
"If you are writing an application that interacts with the User model, you "
"must take some precautions to ensure that your test suite will run "
"regardless of the User model that is being used by a project. Any test that "
"instantiates an instance of User will fail if the User model has been "
"swapped out. This includes any attempt to create an instance of User with a "
"fixture."
msgstr "Si vous écrivez une application qui interagit avec le modèle d'utilisateur, vous devez prendre certaines précautions pour vous assurer que votre suite de tests fonctionne quel que soit le modèle d'utilisateur utilisé par un projet. Tout test qui crée une instance d'utilisateur risque d'échouer si le modèle d'utilisateur a été substitué. Cela s'applique aussi à la création d'utilisateurs au moyen d'instantanés."

# 0dab911a607940e7b1ea00bd06c130c0
#: ../../topics/auth/customizing.txt:885
msgid ""
"To ensure that your test suite will pass in any project configuration, "
"``django.contrib.auth.tests.utils`` defines a ``@skipIfCustomUser`` "
"decorator. This decorator will cause a test case to be skipped if any User "
"model other than the default Django user is in use. This decorator can be "
"applied to a single test, or to an entire test class."
msgstr "Pour s'assurer que la suite de tests passe quelle que soit la configuration du projet, ``django.contrib.auth.tests.utils`` définit un décorateur ``@skipIfCustomUser``. Celui-ci provoque l'omission du test si un modèle ``User`` différent de celui de Django est utilisé. Ce décorateur peut être appliqué à un seul test ou à toute une classe de tests."

# 3d3e0f1502db449d9ee76083ca1c9d8a
#: ../../topics/auth/customizing.txt:891
msgid ""
"Depending on your application, tests may also be needed to be added to "
"ensure that the application works with *any* user model, not just the "
"default User model. To assist with this, Django provides two substitute user"
" models that can be used in test suites:"
msgstr "En fonction de votre application, il peut aussi être nécessaire d'ajouter des tests pour être sûr que l'application fonctionne avec *tout* modèle d'utilisateur, pas simplement avec le modèle ``User`` par défaut. Pour vous aider dans cette tâche, Django fournit deux modèles d'utilisateur de substitution pouvant être utilisés dans les suites de tests :"

# b405d76e2cb24205b94611ddb851747d
#: ../../topics/auth/customizing.txt:898
msgid ""
"A custom user model that uses an ``email`` field as the username, and has a "
"basic admin-compliant permissions setup"
msgstr "Un modèle d'utilisateur personnalisé utilisant un champ ``email`` comme nom d'utilisateur et doté d'une configuration de permissions de base adaptée à l'interface d'administration ;"

# 981eaa401d4643f886f8cbcf4912d0b5
#: ../../topics/auth/customizing.txt:903
msgid ""
"A custom user model that extends "
"``django.contrib.auth.models.AbstractUser``, adding a ``date_of_birth`` "
"field."
msgstr "Un modèle d'utilisateur personnalisé héritant de ``django.contrib.auth.models.AbstractUser`` et avec un champ supplémentaire ``date_of_birth``."

# 52ce1e5612654d6e8b70946f333c86f9
#: ../../topics/auth/customizing.txt:906
msgid ""
"You can then use the ``@override_settings`` decorator to make that test run "
"with the custom User model. For example, here is a skeleton for a test that "
"would test three possible User models -- the default, plus the two User "
"models provided by ``auth`` app::"
msgstr "Vous pouvez dès lors utiliser le décorateur ``@override_settings`` pour que le test en question utilise le modèle d'utilisateur personnalisé. Par exemple, voici un canevas de tests pour tester trois modèles d'utilisateur, celui par défaut ainsi que les deux modèles d'utilisateur fournis par l'application ``auth``::"

# 110077ae79464457b6152e6fc11a07c1
#: ../../topics/auth/customizing.txt:935
msgid ""
"In Django 1.5, it wasn't necessary to explicitly import the test User "
"models."
msgstr "Dans Django 1.5, il n'était pas nécessaire d'importer explicitement les modèles ``User`` de test."

# 20c629a1185c421f85ed7276f232e4ff
# d6c0d931a2884c9fbb6b0a9e95f6541c
#: ../../topics/auth/customizing.txt:938 ../../topics/forms/modelforms.txt:147
msgid "A full example"
msgstr "Un exemple complet"

# 71c006e2ca3d47a6b6e57860e20c77f4
#: ../../topics/auth/customizing.txt:940
msgid ""
"Here is an example of an admin-compliant custom user app. This user model "
"uses an email address as the username, and has a required date of birth; it "
"provides no permission checking, beyond a simple ``admin`` flag on the user "
"account. This model would be compatible with all the built-in auth forms and"
" views, except for the User creation forms. This example illustrates how "
"most of the components work together, but is not intended to be copied "
"directly into projects for production use."
msgstr "Voici un exemple d'application d'utilisateur personnalisé compatible avec l'interface d'administration. Ce modèle d'utilisateur utilise une adresse électronique comme nom d'utilisateur et possède un champ date de naissance obligatoire ; il ne fournit aucun contrôle de permission, excepté un simple drapeau ``admin`` sur le compte utilisateur. Ce modèle est compatible avec tous les formulaires et les vues d'authentification intégrés, à l'exception des formulaires de création d'utilisateur. Cet exemple illustre la façon dont la plupart des composants interagissent, mais il ne s'agit pas de code pouvant être directement copié dans des projets en production."

# 5b5eb2496dc64f528f85828cf3a116f7
#: ../../topics/auth/customizing.txt:948
msgid ""
"This code would all live in a ``models.py`` file for a custom authentication"
" app::"
msgstr "Ce code pourrait être entièrement placé dans un fichier ``models.py`` d'une application d'authentification personnalisée ::"

# ef75857e44a1431ba718bf6fc5e5b8cd
#: ../../topics/auth/customizing.txt:1033
msgid ""
"Then, to register this custom User model with Django's admin, the following "
"code would be required in the app's ``admin.py`` file::"
msgstr "Puis, pour inscrire ce modèle d'utilisateur personnalisé dans l'administration de Django, le code suivant doit se trouver dans le fichier ``admin.py`` de l'application ::"

# 14946b64baf441998de11c0bf4da2dc9
#: ../../topics/auth/customizing.txt:1123
msgid ""
"Finally, specify the custom model as the default user model for your project"
" using the :setting:`AUTH_USER_MODEL` setting in your ``settings.py``::"
msgstr "Finalement, définissez le modèle personnalisé comme modèle d'utilisateur par défaut dans votre projet au moyen du réglage :setting:`AUTH_USER_MODEL` dans votre fichier ``settings.py``::"

# 47f4f67ca0dd47f38724ee3303944abd
#: ../../topics/auth/default.txt:3
msgid "Using the Django authentication system"
msgstr "Utilisation du système d'authentification de Django"

# a701d13598da4eecb6f3812bb341eee0
#: ../../topics/auth/default.txt:7
msgid ""
"This document explains the usage of Django's authentication system in its "
"default configuration. This configuration has evolved to serve the most "
"common project needs, handling a reasonably wide range of tasks, and has a "
"careful implementation of passwords and permissions, and can handle many "
"projects as is.  For projects where authentication needs differ from the "
"default, Django supports extensive :doc:`extension and customization "
"</topics/auth/customizing>` of authentication."
msgstr "Ce document présente l'utilisation du système d'authentification de Django dans sa configuration par défaut. Cette configuration a évolué afin de pouvoir répondre aux besoins les plus courants des projets, étant capable de gérer une large palette de tâches ; elle possède une implémentation soigneuse des mots de passe et des permissions, convenant à de nombreux projets sans besoin de modification. Pour les projets où les besoins en terme d'authentification divergent de la configuration par défaut, Django permet :doc:`d'étendre et de personnaliser </topics/auth/customizing>` l'authentification de manière approfondie."

# a1adcbbbe7374d82b83be98fa450181d
#: ../../topics/auth/default.txt:15
msgid ""
"Django authentication provides both authentication and authorization, "
"together and is generally referred to as the authentication system, as these"
" features somewhat coupled."
msgstr "L'authentification de Django fournit à la fois l'authentification et l'autorisation, regroupés sous le terme général de système d'authentification, dans la mesure où ces fonctions sont assez étroitement liées."

# 25ed6c348e70427db8d6a628db98fbb6
#: ../../topics/auth/default.txt:22
msgid "User objects"
msgstr "Objets utilisateurs"

# dd263f84c89e45679c75ef39cb18902b
#: ../../topics/auth/default.txt:24
msgid ""
":class:`~django.contrib.auth.models.User` objects are the core of the "
"authentication system. They typically represent the people interacting with "
"your site and are used to enable things like restricting access, registering"
" user profiles, associating content with creators etc. Only one class of "
"user exists in Django's authentication framework, i.e., 'superusers' or "
"admin 'staff' users are just user objects with special attributes set, not "
"different classes of user objects."
msgstr "Les objets :class:`~django.contrib.auth.models.User` se trouvent au cœur du système d'authentification. Ils représentent typiquement les personnes qui interagissent avec votre site et sont utilisés pour activer des fonctionnalités comme la restriction d'accès, l'enregistrement de profils utilisateurs, l'association de contenus avec leur créateur, etc. Une seule classe d'utilisateurs existe dans le système d'authentification de Django ; cela signifie donc que les « superutilisateurs » ou les membres des équipes d'administration du site ne sont que des objets utilisateur normaux ayant certains attributs définis, et non pas une classe différente d'objet utilisateur."

# 24358509b5c540fc97ac89b51f865bc8
#: ../../topics/auth/default.txt:32
msgid "The primary attributes of the default user are:"
msgstr "Les attributs principaux de l'utilisateur par défaut sont :"

# 755bd072e7e34be1bf0277ff5088c671
#: ../../topics/auth/default.txt:34
msgid "username"
msgstr "nom d'utilisateur"

# c848609d3ef74c528f919f6172437144
#: ../../topics/auth/default.txt:35
msgid "password"
msgstr "mot de passe"

# 40899fd979c8401f89391d5c42e8b0ef
#: ../../topics/auth/default.txt:36
msgid "email"
msgstr "adresse électronique"

# 2248476f0dab4ddbbadec721b900b128
#: ../../topics/auth/default.txt:37
msgid "first name"
msgstr "prénom"

# 53601958f0944245abd589c62776b38a
#: ../../topics/auth/default.txt:38
msgid "last name"
msgstr "nom"

# 5e46385564ee46f29f03581416c80584
#: ../../topics/auth/default.txt:40
msgid ""
"See the :class:`full API documentation <django.contrib.auth.models.User>` "
"for full reference, the documentation that follows is more task oriented."
msgstr "Consultez la :class:`documentation complète de l'API <django.contrib.auth.models.User>` pour une référence exhaustive ; la documentation ci-après est plus orientée sur les tâches."

# ee998f14cc9e4035a5b22b5ac1b217b7
#: ../../topics/auth/default.txt:46
msgid "Creating users"
msgstr "Création d'utilisateurs"

# 3e0b48858df5485e956b839bd5600dc1
#: ../../topics/auth/default.txt:48
msgid ""
"The most direct way to create users is to use the included "
":meth:`~django.contrib.auth.models.UserManager.create_user` helper "
"function::"
msgstr "La manière la plus directe de créer des utilisateurs est d'utiliser la fonction utilitaire :meth:`~django.contrib.auth.models.UserManager.create_user`::"

# 1fdbec78c06044e7b27dc77abf79a231
#: ../../topics/auth/default.txt:60
msgid ""
"If you have the Django admin installed, you can also :ref:`create users "
"interactively <auth-admin>`."
msgstr "Si vous avez installé l'interface d'administration de Django, vous pouvez aussi  :ref:`créer des utilisateurs interactivement <auth-admin>`."

# ab25d02f1a2a4499ba749aca9bff5bf3
#: ../../topics/auth/default.txt:66
msgid "Creating superusers"
msgstr "Création de superutilisateurs"

# 17bff5abcd9a4864b1dec030ef809bd8
#: ../../topics/auth/default.txt:68
msgid ""
":djadmin:`manage.py syncdb <syncdb>` prompts you to create a superuser the "
"first time you run it with ``'django.contrib.auth'`` in your "
":setting:`INSTALLED_APPS`. If you need to create a superuser at a later "
"date, you can use a command line utility::"
msgstr ":djadmin:`manage.py syncdb <syncdb>` vous demande de créer un superutilisateur la première fois que vous la lancez, pour autant que ``'django.contrib.auth'`` figure dans le réglage  :setting:`INSTALLED_APPS`. Si vous avez besoin de créer un superutilisateur plus tard, vous pouvez utiliser un utilitaire en ligne de commande ::"

# c57369d24734437eb9ee4db07c9bcade
#: ../../topics/auth/default.txt:75
msgid ""
"You will be prompted for a password. After you enter one, the user will be "
"created immediately. If you leave off the :djadminopt:`--username` or the "
":djadminopt:`--email` options, it will prompt you for those values."
msgstr "Vous devrez saisir un mot de passe. Après l'avoir fait, l'utilisateur sera immédiatement créé. Si vous omettez les options :djadminopt:`--username` ou :djadminopt:`--email`, vous devrez aussi renseigner ces valeurs."

# d9c7cd5cd28a4fdabbfc5d0164f763c2
#: ../../topics/auth/default.txt:80
msgid "Changing passwords"
msgstr "Modification des mots de passe"

# f0caddc0407542479ea54b3bc1556f73
#: ../../topics/auth/default.txt:82
msgid ""
"Django does not store raw (clear text) passwords on the user model, but only"
" a hash (see :doc:`documentation of how passwords are managed "
"</topics/auth/passwords>` for full details). Because of this, do not attempt"
" to manipulate the password attribute of the user directly. This is why a "
"helper function is used when creating a user."
msgstr "Django ne stocke pas de mots de passe bruts (en clair) dans le modèle d'utilisateur, mais uniquement une empreinte hachée (voir la  :doc:`documentation sur la façon dont sont gérés les mots de passe </topics/auth/passwords>` pour des détails plus complets). C'est pourquoi il faut éviter de manipuler directement l'attribut ``password`` de l'utilisateur et qu'une fonction utilitaire est employée pour créer un utilisateur."

# 2b4f484af513460c9990c372dcd066ae
#: ../../topics/auth/default.txt:88
msgid "To change a user's password, you have several options:"
msgstr "Pour changer le mot de passe d'un utilisateur, vous disposez de plusieurs options :"

# 1427c68f99234e88b9201841cee7ebcc
#: ../../topics/auth/default.txt:90
msgid ""
":djadmin:`manage.py changepassword *username* <changepassword>` offers a "
"method of changing a User's password from the command line. It prompts you "
"to change the password of a given user which you must enter twice. If they "
"both match, the new password will be changed immediately. If you do not "
"supply a user, the command will attempt to change the password whose "
"username matches the current system user."
msgstr ":djadmin:`manage.py changepassword *nom d'utilisateur* <changepassword>` offre une méthode permettant de changer le mot de passe d'un utilisateur dans une ligne de commande. Vous serez invité à changer le mot de passe de l'utilisateur indiqué en le saisissant deux fois. Si les deux saisies correspondent, le nouveau mot de passe sera immédiatement défini. Si vous n'indiquez pas de nom d'utilisateur, la commande essaie de changer le mot de passe de l'utilisateur dont le nom correspond à l'utilisateur système en cours."

# cfd5f79098f84ffa89a7a6410524e5c7
#: ../../topics/auth/default.txt:97
msgid ""
"You can also change a password programmatically, using "
":meth:`~django.contrib.auth.models.User.set_password()`:"
msgstr "Il est aussi possible de changer un mot de passe de façon programmatique, en utilisant :meth:`~django.contrib.auth.models.User.set_password()`:"

# 82589440b1e3473486bddb6f4c39df44
#: ../../topics/auth/default.txt:107
msgid ""
"If you have the Django admin installed, you can also change user's passwords"
" on the :ref:`authentication system's admin pages <auth-admin>`."
msgstr "Si l'interface d'administration de Django est installée, vous pouvez aussi changer les mots de passe des utilisateurs dans les :ref:`pages d'administration du système d'authentification <auth-admin>`."

# cc7edd9df3b44325973480de55b8c76c
#: ../../topics/auth/default.txt:110
msgid ""
"Django also provides :ref:`views <built-in-auth-views>` and :ref:`forms "
"<built-in-auth-forms>` that may be used to allow users to change their own "
"passwords."
msgstr "Django fournit également des :ref:`vues <built-in-auth-views>` et des :ref:`formulaires <built-in-auth-forms>` permettant aux utilisateurs de changer leur propre mot de passe."

# 409dac88b5404f60bd92db6768e02937
#: ../../topics/auth/default.txt:115
msgid "Authenticating Users"
msgstr "Authentification des utilisateurs"

# 48abfbec8d6e41eba00648068b4bdc1f
#: ../../topics/auth/default.txt:119
msgid ""
"To authenticate a given username and password, use "
":func:`~django.contrib.auth.authenticate()`. It takes credentials in the "
"form of keyword arguments, for the default configuration this is "
"``username`` and ``password``, and it returns a "
":class:`~django.contrib.auth.models.User` object if the password is valid "
"for the given username. If the password is invalid, "
":func:`~django.contrib.auth.authenticate()` returns ``None``. Example::"
msgstr "Pour authentifier un nom d'utilisateur et un mot de passe donnés, utilisez :func:`~django.contrib.auth.authenticate()`. Cette méthode accepte les données d'authentification sous forme de paramètres nommés ; pour la configuration par défaut, il s'agit de ``username`` et ``password``, et elle renvoie un objet :class:`~django.contrib.auth.models.User` si le mot de passe est valable pour le nom d'utilisateur indiqué. Si le mot de passe n'est pas le bon, :func:`~django.contrib.auth.authenticate()` renvoie ``None``. Exemple ::"

# 268fcb442541402187ad89655d3c5f3e
#: ../../topics/auth/default.txt:142
msgid "Permissions and Authorization"
msgstr "Permissions et autorisations"

# dd9b61d9684d43a79a79b65956e74a1c
#: ../../topics/auth/default.txt:144
msgid ""
"Django comes with a simple permissions system. It provides a way to assign "
"permissions to specific users and groups of users."
msgstr "Django contient un système simple de permissions. Il permet d'attribuer des permissions à des utilisateurs ou des groupes d'utilisateurs particuliers."

# 9277eb2ba8854c008d20493a99450d75
#: ../../topics/auth/default.txt:147
msgid ""
"It's used by the Django admin site, but you're welcome to use it in your own"
" code."
msgstr "Ce système est utilisé par le site d'administration de Django, mais vous avez tout loisir de l'utiliser dans votre propre code."

# 2d0b9c2b52bd42e7a7186b9511cff68c
#: ../../topics/auth/default.txt:150
msgid "The Django admin site uses permissions as follows:"
msgstr "Le site d'administration de Django utilise les permissions ainsi :"

# c93ea197831a484b865843c737b2d154
#: ../../topics/auth/default.txt:152
msgid ""
"Access to view the \"add\" form and add an object is limited to users with "
"the \"add\" permission for that type of object."
msgstr "L'accès au formulaire d'ajout et l'ajout d'objet sont limités aux utilisateurs possédant la permission « add » pour ce type d'objet."

# eb408e68956f4fdbaba49917c0173735
#: ../../topics/auth/default.txt:154
msgid ""
"Access to view the change list, view the \"change\" form and change an "
"object is limited to users with the \"change\" permission for that type of "
"object."
msgstr "L'accès à la liste des objets pour modification, au formulaire de modification et la modification d'un objet sont limités aux utilisateurs possédant la permission « change » pour ce type d'objet. "

# 08402cb90718428881c41ed84bc788e7
#: ../../topics/auth/default.txt:157
msgid ""
"Access to delete an object is limited to users with the \"delete\" "
"permission for that type of object."
msgstr "L'accès à la suppression d'un objet est limité aux utilisateurs possédant la permission « delete » pour ce type d'objet."

# 1b70940779c34b359aca13aabf87ad2d
#: ../../topics/auth/default.txt:160
msgid ""
"Permissions can be set not only per type of object, but also per specific "
"object instance. By using the "
":meth:`~django.contrib.admin.ModelAdmin.has_add_permission`, "
":meth:`~django.contrib.admin.ModelAdmin.has_change_permission` and "
":meth:`~django.contrib.admin.ModelAdmin.has_delete_permission` methods "
"provided by the :class:`~django.contrib.admin.ModelAdmin` class, it is "
"possible to customize permissions for different object instances of the same"
" type."
msgstr "Les permissions peuvent non seulement être attribuées par type d'objet, mais aussi par instance d'objet spécifique. En utilisant les méthodes :meth:`~django.contrib.admin.ModelAdmin.has_add_permission`, :meth:`~django.contrib.admin.ModelAdmin.has_change_permission` et :meth:`~django.contrib.admin.ModelAdmin.has_delete_permission` fournies par la classe :class:`~django.contrib.admin.ModelAdmin`, il est possible de personnaliser les permissions pour différentes instances d'objets du même type."

# 3a5504b3e6954aaeafbddad2eec0e53f
#: ../../topics/auth/default.txt:168
msgid ""
":class:`~django.contrib.auth.models.User` objects have two many-to-many "
"fields: ``groups`` and ``user_permissions``. "
":class:`~django.contrib.auth.models.User` objects can access their related "
"objects in the same way as any other :doc:`Django model "
"</topics/db/models>`:"
msgstr "Les objets :class:`~django.contrib.auth.models.User` possèdent deux champs plusieurs-à-plusieurs : ``groups`` et ``user_permissions``. Les objets :class:`~django.contrib.auth.models.User` peuvent accéder à leurs objets liés de la même façon que pour tout autre :doc:`modèle Django </topics/db/models>`:"

# 6dc541f494434b6881759792f1c5846d
#: ../../topics/auth/default.txt:186
msgid "Default permissions"
msgstr "Permissions par défaut"

# 9c3de9ff240347d79fe9ed7a427cffb9
#: ../../topics/auth/default.txt:188
msgid ""
"When ``django.contrib.auth`` is listed in your :setting:`INSTALLED_APPS` "
"setting, it will ensure that three default permissions -- add, change and "
"delete -- are created for each Django model defined in one of your installed"
" applications."
msgstr "Quand l'application ``django.contrib.auth`` figure dans le réglage :setting:`INSTALLED_APPS`, elle s'assure que les trois permissions par défaut (« add », « change » et « delete ») soient créées pour chaque modèle Django défini dans toutes les applications installées."

# 5c5a97a4f5ad40768d68d0af445028b4
#: ../../topics/auth/default.txt:193
msgid ""
"These permissions will be created when you run :djadmin:`manage.py syncdb "
"<syncdb>`; the first time you run ``syncdb`` after adding "
"``django.contrib.auth`` to :setting:`INSTALLED_APPS`, the default "
"permissions will be created for all previously-installed models, as well as "
"for any new models being installed at that time. Afterward, it will create "
"default permissions for new models each time you run :djadmin:`manage.py "
"syncdb <syncdb>`."
msgstr "Ces permissions seront créées lorsque vous lancez :djadmin:`manage.py syncdb <syncdb>`; la première fois que vous lancez ``syncdb`` après l'ajout de ``django.contrib.auth`` à :setting:`INSTALLED_APPS`, les permissions par défaut seront créées pour tous les modèles précédemment installés de même que pour tout nouveau modèle installé à ce moment-là. Par la suite, chaque nouvelle exécution de :djadmin:`manage.py syncdb <syncdb>` crée les permissions par défaut pour les nouveaux modèles."

# 3b944ac9c23c4d85962b20355784e3a5
#: ../../topics/auth/default.txt:201
msgid ""
"Assuming you have an application with an "
":attr:`~django.db.models.Options.app_label` ``foo`` and a model named "
"``Bar``, to test for basic permissions you should use:"
msgstr "En supposant qu'une application ait l'attribut :attr:`~django.db.models.Options.app_label` ``foo`` et qu'un modèle soit nommé ``Bar``, voici comment il faut tester les permissions de base :"

# edf35858bcfb49ca94ccac66b82b5a5d
#: ../../topics/auth/default.txt:205
msgid "add: ``user.has_perm('foo.add_bar')``"
msgstr "ajout : ``user.has_perm('foo.add_bar')``"

# 45a4488a7d494901b73481acd4701497
#: ../../topics/auth/default.txt:206
msgid "change: ``user.has_perm('foo.change_bar')``"
msgstr "modification : ``user.has_perm('foo.change_bar')``"

# 9dce73fd8b4e454496ea998ea4832631
#: ../../topics/auth/default.txt:207
msgid "delete: ``user.has_perm('foo.delete_bar')``"
msgstr "suppression : ``user.has_perm('foo.delete_bar')``"

# c450b718a60845038dacfc2e7d9f503d
#: ../../topics/auth/default.txt:209
msgid ""
"The :class:`~django.contrib.auth.models.Permission` model is rarely accessed"
" directly."
msgstr "Le modèle :class:`~django.contrib.auth.models.Permission` est rarement accédé directement."

# ad1dc60dedeb4f71b6e7a318b05240a6
#: ../../topics/auth/default.txt:213
msgid "Groups"
msgstr "Groupes"

# f445ac4f888c42089d756d1b67db609c
#: ../../topics/auth/default.txt:215
msgid ""
":class:`django.contrib.auth.models.Group` models are a generic way of "
"categorizing users so you can apply permissions, or some other label, to "
"those users. A user can belong to any number of groups."
msgstr "Les modèles :class:`django.contrib.auth.models.Group` sont une manière générique de segmenter les utilisateurs afin de pouvoir leur attribuer des permissions ou de les désigner par un nom défini. Un utilisateur peut appartenir à autant de groupes que nécessaire."

# 39ff94a1edbb453880fa57733c724807
#: ../../topics/auth/default.txt:219
msgid ""
"A user in a group automatically has the permissions granted to that group. "
"For example, if the group ``Site editors`` has the permission "
"``can_edit_home_page``, any user in that group will have that permission."
msgstr "Un utilisateur d'un groupe reçoit automatiquement les permissions attribuées à ce groupe. Par exemple, si le groupe ``Éditeurs du site`` possède la permission ``can_edit_home_page``, tout utilisateur membre du groupe possédera cette permission."

# 520351dcc14b42f39cc6bff440641247
#: ../../topics/auth/default.txt:223
msgid ""
"Beyond permissions, groups are a convenient way to categorize users to give "
"them some label, or extended functionality. For example, you could create a "
"group ``'Special users'``, and you could write code that could, say, give "
"them access to a members-only portion of your site, or send them members-"
"only email messages."
msgstr "Au-delà des permissions, les groupes sont un bon moyen de regrouper les utilisateurs sous un nom défini, afin de leur attribuer certaines fonctionnalités particulières. Par exemple, vous pourriez créer un groupe ``Utilisateurs spéciaux`` et écrire ensuite du code qui leur donne accès à une section réservée aux membres sur le site, ou leur envoyer des courriels s'adressant uniquement aux membres."

# 757ee093410f4365a7d12a4f48d27a75
#: ../../topics/auth/default.txt:230
msgid "Programmatically creating permissions"
msgstr "Création programmatique de permissions"

# 13707c1388de4f28a76937da0b6249c8
#: ../../topics/auth/default.txt:232
msgid ""
"While :ref:`custom permissions <custom-permissions>` can be defined within a"
" model's ``Meta`` class, you can also create permissions directly. For "
"example, you can create the ``can_publish`` permission for a ``BlogPost`` "
"model in ``myapp``::"
msgstr "Bien que des :ref:`permissions personnalisées <custom-permissions>` puissent être définies dans la classe ``Meta`` d'un modèle, il est aussi possible de créer directement des permissions. Par exemple, vous pouvez créer la permission ``can_publish`` d'un modèle ``BlogPost`` dans ``myapp``::"

# f08f0c34a4d049a483db879fc0e99cdc
#: ../../topics/auth/default.txt:246
msgid ""
"The permission can then be assigned to a "
":class:`~django.contrib.auth.models.User` via its ``user_permissions`` "
"attribute or to a :class:`~django.contrib.auth.models.Group` via its "
"``permissions`` attribute."
msgstr "La permission peut ensuite être attribuée à un :class:`~django.contrib.auth.models.User` par son attribut ``user_permissions`` ou à un :class:`~django.contrib.auth.models.Group` par son attribut ``permissions``."

# 322e1ce62701415e9b26e6b7ee6ad329
#: ../../topics/auth/default.txt:254
msgid "Authentication in Web requests"
msgstr "Authentification dans les requêtes Web"

# 0b3af1570e124d7199a5da79b6972712
#: ../../topics/auth/default.txt:256
msgid ""
"Django uses :doc:`sessions </topics/http/sessions>` and middleware to hook "
"the authentication system into :class:`request objects "
"<django.http.HttpRequest>`."
msgstr "Django utilise les :doc:`sessions </topics/http/sessions>` et le système de middleware pour brancher le système d'authentification dans les :class:`objets requête <django.http.HttpRequest>`."

# b62eccc509454c7886d483cf6321f2d8
#: ../../topics/auth/default.txt:259
msgid ""
"These provide a :attr:`request.user <django.http.HttpRequest.user>`  "
"attribute on every request which represents the current user. If the current"
" user has not logged in, this attribute will be set to an instance of "
":class:`~django.contrib.auth.models.AnonymousUser`, otherwise it will be an "
"instance of :class:`~django.contrib.auth.models.User`."
msgstr "Un attribut :attr:`request.user <django.http.HttpRequest.user>` représentant l'utilisateur actuel est défini sur chaque objet requête. Si cet utilisateur ne s'est pas connecté, cet attribut sera constitué d'une instance de :class:`~django.contrib.auth.models.AnonymousUser`, sinon il s'agira d'une instance de :class:`~django.contrib.auth.models.User`."

# ee2171ebf0b94fe2a6e01d1bfadc993f
#: ../../topics/auth/default.txt:265
msgid ""
"You can tell them apart with "
":meth:`~django.contrib.auth.models.User.is_authenticated()`, like so::"
msgstr "Vous pouvez les différencier par la méthode :meth:`~django.contrib.auth.models.User.is_authenticated()`, comme ceci ::"

# f99652eda53b4aa98674f5498f5f49cf
#: ../../topics/auth/default.txt:276
msgid "How to log a user in"
msgstr "Connexion d'un utilisateur"

# 63d48004857649d8916301fcec15a452
#: ../../topics/auth/default.txt:278
msgid ""
"If you have an authenticated user you want to attach to the current session "
"- this is done with a :func:`~django.contrib.auth.login` function."
msgstr "Si vous disposez d'un utilisateur authentifié que vous voulez faire correspondre à la session en cours, utilisez la fonction :func:`~django.contrib.auth.login`."

# 481d96a383d44dd7a3789da453f08cfb
#: ../../topics/auth/default.txt:283
msgid ""
"To log a user in, from a view, use :func:`~django.contrib.auth.login()`. It "
"takes an :class:`~django.http.HttpRequest` object and a "
":class:`~django.contrib.auth.models.User` object. "
":func:`~django.contrib.auth.login()` saves the user's ID in the session, "
"using Django's session framework."
msgstr "Pour connecter un utilisateur à partir d'une vue, utilisez  :func:`~django.contrib.auth.login()`. Cette fonction accepte un objet :class:`~django.http.HttpRequest` et un objet :class:`~django.contrib.auth.models.User`. :func:`~django.contrib.auth.login()` enregistre l'identifiant de l'utilisateur dans la session en employant l'infrastructure des sessions de Django."

# fb3e95c672694fe0be0f09534585c3e0
#: ../../topics/auth/default.txt:289
msgid ""
"Note that any data set during the anonymous session is retained in the "
"session after a user logs in."
msgstr "Notez que toute information définie durant la session anonyme d'un utilisateur est conservée dans la session à la suite du processus de connexion."

# 50557e6ec47a400ea6d9f85b552749d9
#: ../../topics/auth/default.txt:292
msgid ""
"This example shows how you might use both "
":func:`~django.contrib.auth.authenticate()` and "
":func:`~django.contrib.auth.login()`::"
msgstr "Cet exemple montre comment utiliser à la fois :func:`~django.contrib.auth.authenticate()` et :func:`~django.contrib.auth.login()`::"

# 1fd92ad8d16a4b69bfacf2f69c843134
#: ../../topics/auth/default.txt:311
msgid "Calling ``authenticate()`` first"
msgstr "Appel préalable à ``authenticate()``"

# 8061b9e5b73948259539c65b1da1183a
#: ../../topics/auth/default.txt:313
msgid ""
"When you're manually logging a user in, you *must* call "
":func:`~django.contrib.auth.authenticate()` before you call "
":func:`~django.contrib.auth.login()`. "
":func:`~django.contrib.auth.authenticate()` sets an attribute on the "
":class:`~django.contrib.auth.models.User` noting which authentication "
"backend successfully authenticated that user (see the :ref:`backends "
"documentation <authentication-backends>` for details), and this information "
"is needed later during the login process. An error will be raised if you try"
" to login a user object retrieved from the database directly."
msgstr "Lorsque vous connectez un utilisateur manuellement, vous *devez* appeler :func:`~django.contrib.auth.authenticate()` avant d'appeler :func:`~django.contrib.auth.login()`. :func:`~django.contrib.auth.authenticate()` définit un attribut sur l'objet :class:`~django.contrib.auth.models.User` indiquant quel moteur d'authentification a servi à authentifier cet utilisateur (voir la :ref:`documentation sur les moteurs <authentication-backends>` pour plus de détails), cette information étant ensuite nécessaire durant le processus de connexion ultérieur. Une erreur sera générée si vous essayez de connecter un objet utilisateur directement obtenu à partir de la base de données."

# 2f16a98e7365443e85105c1cfbba022e
#: ../../topics/auth/default.txt:325
msgid "How to log a user out"
msgstr "Déconnexion d'un utilisateur"

# 85387b7c11754da3a3b3c50fa40f0657
#: ../../topics/auth/default.txt:329
msgid ""
"To log out a user who has been logged in via "
":func:`django.contrib.auth.login()`, use "
":func:`django.contrib.auth.logout()` within your view. It takes an "
":class:`~django.http.HttpRequest` object and has no return value. Example::"
msgstr "Pour déconnecter un utilisateur qui a été connecté par :func:`django.contrib.auth.login()`, utilisez :func:`django.contrib.auth.logout()` depuis la vue. Cette fonction accepte un objet :class:`~django.http.HttpRequest` et ne renvoie aucune valeur. Exemple ::"

# 4d7a180bd746470dbe8c2e8caaf90da7
#: ../../topics/auth/default.txt:341
msgid ""
"Note that :func:`~django.contrib.auth.logout()` doesn't throw any errors if "
"the user wasn't logged in."
msgstr "Notez que :func:`~django.contrib.auth.logout()` ne signale pas d'erreur si l'utilisateur n'était pas connecté."

# 176f2e4950434a3cbe31feddc57441a7
#: ../../topics/auth/default.txt:344
msgid ""
"When you call :func:`~django.contrib.auth.logout()`, the session data for "
"the current request is completely cleaned out. All existing data is removed."
" This is to prevent another person from using the same Web browser to log in"
" and have access to the previous user's session data. If you want to put "
"anything into the session that will be available to the user immediately "
"after logging out, do that *after* calling "
":func:`django.contrib.auth.logout()`."
msgstr "Lorsque vous appelez :func:`~django.contrib.auth.logout()`, les données de session de la requête en cours sont complètement effacées. Ce comportement empêche une autre personne d'utiliser le même navigateur Web pour se connecter et obtenir accès aux données de session de l'utilisateur précédent. Si vous souhaitez placer des informations dans la session qui doivent être disponibles pour l'utilisateur immédiatement après une déconnexion, faites-le *après* avoir appelé :func:`django.contrib.auth.logout()`."

# f78b49a7ba5b4fad962f1bf0964c4e2b
#: ../../topics/auth/default.txt:353
msgid "Limiting access to logged-in users"
msgstr "Restriction d'accès aux utilisateurs connectés"

# b3cfb5b795ea482880ff59d012cfe4f0
#: ../../topics/auth/default.txt:356
msgid "The raw way"
msgstr "La manière brute"

# 707c8f7b1331467b8559bf16d984262d
#: ../../topics/auth/default.txt:358
msgid ""
"The simple, raw way to limit access to pages is to check "
":meth:`request.user.is_authenticated() "
"<django.contrib.auth.models.User.is_authenticated()>` and either redirect to"
" a login page::"
msgstr "La manière simple et directe de limiter l'accès à certaines pages est de vérifier :meth:`request.user.is_authenticated() <django.contrib.auth.models.User.is_authenticated()>` et de rediriger l'utilisateur vers la page de connexion le cas échéant ::"

# 7ff252e6983848d181650038f72c544b
#: ../../topics/auth/default.txt:370
msgid "...or display an error message::"
msgstr "…ou d'afficher un message d'erreur ::"

# 69747c6930784a08a7e6c028b5de1f3e
#: ../../topics/auth/default.txt:382
msgid "The login_required decorator"
msgstr "Le décorateur login_required"

# b2ce049bec3d44d2bfb4d8cf669ef80f
#: ../../topics/auth/default.txt:386
msgid ""
"As a shortcut, you can use the convenient "
":func:`~django.contrib.auth.decorators.login_required` decorator::"
msgstr "Comme raccourci, vous pouvez utiliser le décorateur :func:`~django.contrib.auth.decorators.login_required` bien pratique ::"

# 96269e8eac8b4eb7bc48f336103f46fb
#: ../../topics/auth/default.txt:395
msgid ""
":func:`~django.contrib.auth.decorators.login_required` does the following:"
msgstr ":func:`~django.contrib.auth.decorators.login_required` effectue ceci :"

# cf53141bde7f47e29c91a3df5d627bc9
#: ../../topics/auth/default.txt:397
msgid ""
"If the user isn't logged in, redirect to :setting:`settings.LOGIN_URL "
"<LOGIN_URL>`, passing the current absolute path in the query string. "
"Example: ``/accounts/login/?next=/polls/3/``."
msgstr "Si l'utilisateur n'est pas connecté, il redirige vers :setting:`settings.LOGIN_URL <LOGIN_URL>` en transmettant le chemin absolu dans la chaîne de requête. Exemple : ``/accounts/login/?next=/polls/3/``."

# 3ce14416167e4b80bc10020f81934853
#: ../../topics/auth/default.txt:401
msgid ""
"If the user is logged in, execute the view normally. The view code is free "
"to assume the user is logged in."
msgstr "Si l'utilisateur est connecté, il exécute la vue normalement. Le code de la vue peut légitimement considérer l'utilisateur comme connecté."

# 427499fa9a7e48b99ae2741dfe69e562
#: ../../topics/auth/default.txt:404
msgid ""
"By default, the path that the user should be redirected to upon successful "
"authentication is stored in a query string parameter called ``\"next\"``. If"
" you would prefer to use a different name for this parameter, "
":func:`~django.contrib.auth.decorators.login_required` takes an optional "
"``redirect_field_name`` parameter::"
msgstr "Par défaut, le chemin vers lequel l'utilisateur doit être redirigé après un processus de connexion réussi est stocké dans le paramètre de chaîne de requête nommé ``\"next\"``. Si vous préférez que ce paramètre soit nommé différemment, :func:`~django.contrib.auth.decorators.login_required` accepte un paramètre facultatif ``redirect_field_name``::"

# 18c5655211de48f8846e4ef4163b4308
#: ../../topics/auth/default.txt:416
msgid ""
"Note that if you provide a value to ``redirect_field_name``, you will most "
"likely need to customize your login template as well, since the template "
"context variable which stores the redirect path will use the value of "
"``redirect_field_name`` as its key rather than ``\"next\"`` (the default)."
msgstr "Notez que si vous indiquez une valeur pour ``redirect_field_name``, il faudra très probablement aussi personnaliser le gabarit de connexion, dans la mesure où la variable de contexte du gabarit qui stocke le chemin de redirection utilise la valeur de ``redirect_field_name`` comme clé à la place de ``\"next\"`` (la valeur par défaut)."

# 54b9c51f0a024ec08e7364dfd0651997
#: ../../topics/auth/default.txt:421
msgid ""
":func:`~django.contrib.auth.decorators.login_required` also takes an "
"optional ``login_url`` parameter. Example::"
msgstr ":func:`~django.contrib.auth.decorators.login_required` accepte également un paramètre facultatif ``login_url``. Exemple ::"

# 8ff36d142ebf46d3930edabb8f6007fe
#: ../../topics/auth/default.txt:430
msgid ""
"Note that if you don't specify the ``login_url`` parameter, you'll need to "
"ensure that the :setting:`settings.LOGIN_URL <LOGIN_URL>` and your login "
"view are properly associated. For example, using the defaults, add the "
"following line to your URLconf::"
msgstr "Notez que si vous ne renseignez pas le paramètre ``login_url``, vous devez vous assurer que le réglage :setting:`settings.LOGIN_URL <LOGIN_URL>` et votre vue de connexion sont correctement liés. Par exemple, en utilisant les paramètres par défaut, ajoutez la ligne suivante dans votre configuration d'URL ::"

# 2ce2bab93f3a4a78923f968dc87d9220
#: ../../topics/auth/default.txt:439
msgid ""
"The :setting:`settings.LOGIN_URL <LOGIN_URL>` also accepts view function "
"names and :ref:`named URL patterns <naming-url-patterns>`. This allows you "
"to freely remap your login view within your URLconf without having to update"
" the setting."
msgstr "Le réglage :setting:`settings.LOGIN_URL <LOGIN_URL>` accepte également des noms de fonction vue et des :ref:`motifs d'URL nommés <naming-url-patterns>`. Cela permet de déplacer librement la vue de connexion dans la configuration d'URL sans avoir besoin de mettre à jour le réglage."

# 05cecd4c168f4c5d9cd35cd73d8b7d24
#: ../../topics/auth/default.txt:446
msgid ""
"The login_required decorator does NOT check the is_active flag on a user."
msgstr "Le décorateur ``login_required`` ne vérifie PAS le drapeau ``is_active`` d'un utilisateur."

# 07c04daa1e474f1cb8b0ff49dfdeeb44
#: ../../topics/auth/default.txt:449
msgid "Limiting access to logged-in users that pass a test"
msgstr "Restriction d'accès aux utilisateurs connectés passant un test"

# 57ee3014d19a42bb8d5173d1838c9807
#: ../../topics/auth/default.txt:451
msgid ""
"To limit access based on certain permissions or some other test, you'd do "
"essentially the same thing as described in the previous section."
msgstr "Pour limiter l'accès en fonction d'une certaine permission ou d'un test quelconque, le procédé est presque identique à celui décrit dans la section précédente."

# 90152d3ded7f4df4a7ad9d31c5c3f191
#: ../../topics/auth/default.txt:454
msgid ""
"The simple way is to run your test on :attr:`request.user "
"<django.http.HttpRequest.user>` in the view directly. For example, this view"
" checks to make sure the user has an email in the desired domain::"
msgstr "La manière simple est d'effectuer le test sur :attr:`request.user <django.http.HttpRequest.user>` directement dans la vue. Par exemple, cette vue vérifie que l'utilisateur possède bien une adresse électronique dans le domaine prévu ::"

# fbc304518dc3432fb8f9c85b84043252
#: ../../topics/auth/default.txt:465
msgid ""
"As a shortcut, you can use the convenient ``user_passes_test`` decorator::"
msgstr "Comme raccourci, vous pouvez utiliser le décorateur ``user_passes_test``::"

# 5221448a83044051b891aff849b07597
#: ../../topics/auth/default.txt:476
msgid ""
":func:`~django.contrib.auth.decorators.user_passes_test` takes a required "
"argument: a callable that takes a :class:`~django.contrib.auth.models.User` "
"object and returns ``True`` if the user is allowed to view the page. Note "
"that :func:`~django.contrib.auth.decorators.user_passes_test` does not "
"automatically check that the :class:`~django.contrib.auth.models.User` is "
"not anonymous."
msgstr ":func:`~django.contrib.auth.decorators.user_passes_test` requiert un paramètre : un exécutable acceptant un objet :class:`~django.contrib.auth.models.User` et renvoyant ``True`` si l'utilisateur est autorisé à voir la page. Notez que  :func:`~django.contrib.auth.decorators.user_passes_test` ne contrôle pas d'office que l'objet :class:`~django.contrib.auth.models.User` n'est pas anonyme."

# e242a1dac10a4a4c969674e719168b1f
#: ../../topics/auth/default.txt:484
msgid ""
":func:`~django.contrib.auth.decorators.user_passes_test()` takes an optional"
" ``login_url`` argument, which lets you specify the URL for your login page "
"(:setting:`settings.LOGIN_URL <LOGIN_URL>` by default)."
msgstr ":func:`~django.contrib.auth.decorators.user_passes_test()` accepte un paramètre facultatif ``login_url`` qui permet d'indiquer l'URL de la page de connexion (:setting:`settings.LOGIN_URL <LOGIN_URL>` par défaut)."

# 96e97e8fbe1445a7b749118294e3da27
# 62d31081a0a24051a3df9fbe74c951f3
# 9e5af6dc3b6c408f846d2238f2199fe3
# bd4322a125354bf6aecdbca194c9baaa
# cc89988cb67e4328989c8612700b583d
# d9967a2a87494d2684548cb2f551ae72
# 1f6c58eb8e214c8696e4ec15008bbfbd
# e4b46b3ff7ce4c43a35f1587ec04429d
# a07b7db89c1c457b87054ee97a658bd9
# e5a41db052864170b6a6a28c9cd30976
# eb926a4105014070ab29472dd8b0c055
# 1ab90050f4ec4eb2bb2736488acbee55
# ed5a63e57e5844a09b12863200d5a3bd
# 7b9ececfe3af4a66a1e59a1388ae65bb
# 858782928ec34dacb9271d3c63160813
# 80369b6dc07f406aa73d8db76f965c6b
# 2a0050f632ee4db0bf5d8273a53075ab
# f845ef3178714f15b2472da84d46c007
# 859356028b10494d9e793d64e708ae46
# aa8d35cd17d04e0aa4da2361ff9896ed
# 7131c2a0d34a4aaf86566a0f91376d12
# d701d780394442d8bbfe23f69d14b591
#: ../../topics/auth/default.txt:488 ../../topics/db/managers.txt:151
#: ../../topics/db/queries.txt:1237 ../../topics/db/sql.txt:225
#: ../../topics/email.txt:266 ../../topics/email.txt:309
#: ../../topics/forms/modelforms.txt:23 ../../topics/forms/modelforms.txt:398
#: ../../topics/http/urls.txt:433 ../../topics/http/urls.txt:860
#: ../../topics/i18n/formatting.txt:119 ../../topics/i18n/formatting.txt:137
#: ../../topics/i18n/timezones.txt:341 ../../topics/i18n/timezones.txt:354
#: ../../topics/i18n/timezones.txt:370 ../../topics/i18n/translation.txt:192
#: ../../topics/i18n/translation.txt:280
#: ../../topics/i18n/translation.txt:1500 ../../topics/settings.txt:257
#: ../../topics/templates.txt:154 ../../topics/testing/overview.txt:1307
#: ../../topics/testing/overview.txt:1343
msgid "For example::"
msgstr "Par exemple ::"

# 1b98350f32fa421eb8430d6dc06bdb49
#: ../../topics/auth/default.txt:495
msgid "The permission_required decorator"
msgstr "Le décorateur permission_required"

# c50c7e2aa36c4ab8a0f83dae484f7521
#: ../../topics/auth/default.txt:499
msgid ""
"It's a relatively common task to check whether a user has a particular "
"permission. For that reason, Django provides a shortcut for that case: the "
":func:`~django.contrib.auth.decorators.permission_required()` decorator.::"
msgstr "Il est relativement courant de devoir vérifier que l'utilisateur dispose d'une certaine permission. À cet effet, Django fournit un raccourci : le décorateur :func:`~django.contrib.auth.decorators.permission_required()`::"

# dce0022bd977442a971881a820e058e4
#: ../../topics/auth/default.txt:509
msgid ""
"As for the :meth:`~django.contrib.auth.models.User.has_perm` method, "
"permission names take the form ``\"<app label>.<permission codename>\"`` "
"(i.e. ``polls.can_vote`` for a permission on a model in the ``polls`` "
"application)."
msgstr "Comme pour la méthode :meth:`~django.contrib.auth.models.User.has_perm`, les noms de permission ont la forme ``\"<étiquette application>.<code permission>\"`` (par ex. ``polls.can_vote`` pour une permission d'un modèle de l'application ``polls``)."

# 0859addd29724f37b5ca3259d2448572
#: ../../topics/auth/default.txt:514
msgid ""
"Note that :func:`~django.contrib.auth.decorators.permission_required()` also"
" takes an optional ``login_url`` parameter. Example::"
msgstr "Notez que :func:`~django.contrib.auth.decorators.permission_required()` accepte également un paramètre facultatif ``login_url``. Exemple ::"

# 53c96f3659984c38a18cb98f6c5e0bc9
#: ../../topics/auth/default.txt:523
msgid ""
"As in the :func:`~django.contrib.auth.decorators.login_required` decorator, "
"``login_url`` defaults to :setting:`settings.LOGIN_URL <LOGIN_URL>`."
msgstr "Comme pour le décorateur :func:`~django.contrib.auth.decorators.login_required`, la valeur par défaut de ``login_url`` est :setting:`settings.LOGIN_URL <LOGIN_URL>`."

# 9c38469ceece450e945e6beb654a924a
#: ../../topics/auth/default.txt:526
msgid ""
"If the ``raise_exception`` parameter is given, the decorator will raise "
":exc:`~django.core.exceptions.PermissionDenied`, prompting :ref:`the 403 "
"(HTTP Forbidden) view<http_forbidden_view>` instead of redirecting to the "
"login page."
msgstr "Si le paramètre ``raise_exception`` est présent, le décorateur génère une exception :exc:`~django.core.exceptions.PermissionDenied` (permission refusée), déclenchant la  :ref:`vue 403 (HTTP Forbidden)<http_forbidden_view>` au lieu de rediriger vers la page de connexion."

# 9c2cd477718a48f1b4a9d555112c89c2
#: ../../topics/auth/default.txt:532
msgid "Applying permissions to generic views"
msgstr "Contrôle de permission sur les vues génériques"

# 4182e0ffab82445198f0d1b31d7af19d
#: ../../topics/auth/default.txt:534
msgid ""
"To apply a permission to a :doc:`class-based generic view </ref/class-based-"
"views/index>`, decorate the :meth:`View.dispatch "
"<django.views.generic.base.View.dispatch>` method on the class. See :ref"
":`decorating-class-based-views` for details."
msgstr "Pour vérifier une permission dans le cas des :doc:`vues génériques basées sur des classes </ref/class-based-views/index>`, décorez la méthode :meth:`View.dispatch <django.views.generic.base.View.dispatch>` de la classe. Voir :ref:`decorating-class-based-views` pour plus de détails."

# 1798c9726c414b0992c00bec3f4a96d7
#: ../../topics/auth/default.txt:543
msgid "Authentication Views"
msgstr "Vues d'authentification"

# c7d17bff35ef43828a4bbb842d76155f
#: ../../topics/auth/default.txt:547
msgid ""
"Django provides several views that you can use for handling login, logout, "
"and password management. These make use of the :ref:`stock auth forms "
"<built-in-auth-forms>` but you can pass in your own forms as well."
msgstr "Django fournit plusieurs vues permettant de gérer la connexion, la déconnexion et le traitement des mots de passe. Elles font appel aux :ref:`formulaires d'authentification intégrés <built-in-auth-forms>`, mais vous pouvez leur transmettre aussi vos propres formulaires."

# dcffd9baa0a342d28b503bcfdfc44f4f
#: ../../topics/auth/default.txt:551
msgid ""
"Django provides no default template for the authentication views - however "
"the template context is documented for each view below."
msgstr "Django ne fournit pas de gabarit par défaut pour les vues d'authentification, mais le contexte de gabarit est documenté ci-dessous pour chaque vue."

# 171fb4f92d1546788b5694cc215d24ae
#: ../../topics/auth/default.txt:554
msgid ""
"The built-in views all return a "
":class:`~django.template.response.TemplateResponse` instance, which allows "
"you to easily customize the response data before rendering.  For more "
"details, see the :doc:`TemplateResponse documentation </ref/template-"
"response>`."
msgstr "Les vues intégrées renvoient toutes une instance :class:`~django.template.response.TemplateResponse`, ce qui permet de personnaliser facilement les données de la réponse avant le rendu du gabarit. Pour plus de détails, consultez la :doc:`documentation de TemplateResponse </ref/template-response>`."

# a4bc9cdfb9054f1eb1f426622ca45c49
#: ../../topics/auth/default.txt:559
msgid ""
"Most built-in authentication views provide a URL name for easier reference. "
"See :doc:`the URL documentation </topics/http/urls>` for details on using "
"named URL patterns."
msgstr "La plupart des vues d'authentification intégrées fournissent un nom d'URL pour s'y référer plus facilement. Consultez la :doc:`documentation sur les URL </topics/http/urls>` pour plus de détails sur l'utilisation des motifs d'URL nommés."

# 5af2f28e99d04f5181cf4bec06c73ac8
#: ../../topics/auth/default.txt:566
msgid "**URL name:** ``login``"
msgstr "**Nom d'URL :** ``login``"

# 9fc7df0cafe44b83b9ea63736c99e2bd
#: ../../topics/auth/default.txt:568
msgid ""
"See :doc:`the URL documentation </topics/http/urls>` for details on using "
"named URL patterns."
msgstr "Consultez la :doc:`documentation sur les URL </topics/http/urls>` pour plus de détails sur l'utilisation des motifs d'URL nommés."

# 07c3efc4c9f341acb72b3e7607381527
# 5a39ec9ab1b8476f9cbbe4ae3e124721
# 49e4ba948450435c97ef19bfbf3ca63a
# 65cfc7cadb794e88a7d554baa3042b55
# 621c848d4294432c870b3aaf31d738cd
# 380d6967ebda4e2389884290ad4e85ba
# 579c7e8c8c0a488ab8ba8980b6cd5458
# 8f089d8facca4e4eafe6d39897c94988
# d9e20b2e743e4a2bb765bfa0bf7c20d7
# a6275966dcd24f48b9f323bc8c4fbaef
#: ../../topics/auth/default.txt:571 ../../topics/auth/default.txt:685
#: ../../topics/auth/default.txt:733 ../../topics/auth/default.txt:751
#: ../../topics/auth/default.txt:782 ../../topics/auth/default.txt:823
#: ../../topics/auth/default.txt:910 ../../topics/auth/default.txt:929
#: ../../topics/auth/default.txt:976 ../../topics/auth/default.txt:1002
msgid "**Optional arguments:**"
msgstr "**Paramètres facultatifs :**"

# 5458f4c5b36e422282d47363ffa498fa
#: ../../topics/auth/default.txt:573
msgid ""
"``template_name``: The name of a template to display for the view used to "
"log the user in. Defaults to :file:`registration/login.html`."
msgstr "``template_name``: le nom d'un gabarit pour afficher le résultat de la vue de connexion d'un utilisateur. Sa valeur par défaut est :file:`registration/login.html`."

# 4cfdce72400847398823c1f49eb0c5a3
#: ../../topics/auth/default.txt:576
msgid ""
"``redirect_field_name``: The name of a ``GET`` field containing the URL to "
"redirect to after login. Defaults to ``next``."
msgstr "``redirect_field_name``: le nom d'un champ ``GET`` contenant l'URL vers laquelle rediriger après la connexion. Sa valeur par défaut est ``next``."

# 9f503a22d92f4a018818196219e23427
#: ../../topics/auth/default.txt:579
msgid ""
"``authentication_form``: A callable (typically just a form class) to use for"
" authentication. Defaults to "
":class:`~django.contrib.auth.forms.AuthenticationForm`."
msgstr "``authentication_form``: un exécutable (typiquement une simple classe de formulaire) à utiliser pour l'authentification. Sa valeur par défaut est :class:`~django.contrib.auth.forms.AuthenticationForm`."

# 75a02cac0d74449ea7b7953f5298eb90
# 2dffe2c61d0447b2825d1ecd5a56655e
# 2662d09195b940dd88b3b6f28fb98a41
# c7d6f019203d4908869035d2c5bc42a0
# d25d0be2625d47f6892c7a9675bd76f6
# 38194acb12ca4b42af916b9ecbce628c
# 7d2052283cf745bcbf8d3736744eef91
# 32d324770f2a47229d55e0139807e4cf
# 7ae9342b096144f9bb1c7b50766f30e6
# edc1b2cb72ef4f82a52008a65c883ecb
#: ../../topics/auth/default.txt:583 ../../topics/auth/default.txt:697
#: ../../topics/auth/default.txt:720 ../../topics/auth/default.txt:738
#: ../../topics/auth/default.txt:765 ../../topics/auth/default.txt:788
#: ../../topics/auth/default.txt:851 ../../topics/auth/default.txt:916
#: ../../topics/auth/default.txt:954 ../../topics/auth/default.txt:981
msgid ""
"``current_app``: A hint indicating which application contains the current "
"view. See the :ref:`namespaced URL resolution strategy <topics-http-"
"reversing-url-namespaces>` for more information."
msgstr "``current_app``: une indication de l'application contenant la vue actuelle. Consultez la :ref:`stratégie de résolution des URL en espaces de noms <topics-http-reversing-url-namespaces>` pour plus d'informations."

# 2c796b8049af4646bc0768933db7ac9f
# ef8d2588b6a64e8788a7b4218149303d
# 1e9498e294b0455fa1a3f1294c3a645e
# 8d1eb1b0c10446a593da188395aa80e4
# b94b00bdecbf4828b79161c1cac44886
# dfb8329ba12a4fc486d4a257e0fb38ea
# add62188f3c5451980ffb77fecd4b29a
# 23f64ebeba434c7794692e17cd6977d8
# bfa221c5b1454c41853f1bbb290ee885
# e195016f5c6d474fbefe4cacce79cd86
#: ../../topics/auth/default.txt:587 ../../topics/auth/default.txt:701
#: ../../topics/auth/default.txt:724 ../../topics/auth/default.txt:742
#: ../../topics/auth/default.txt:769 ../../topics/auth/default.txt:792
#: ../../topics/auth/default.txt:855 ../../topics/auth/default.txt:920
#: ../../topics/auth/default.txt:958 ../../topics/auth/default.txt:985
msgid ""
"``extra_context``: A dictionary of context data that will be added to the "
"default context data passed to the template."
msgstr "``extra_context``: un dictionnaire de données de contexte qui sera fusionné avec les données de contexte par défaut transmises au gabarit."

# 525f67c9012046dfb02e54e928a19e3f
#: ../../topics/auth/default.txt:590
msgid "Here's what ``django.contrib.auth.views.login`` does:"
msgstr "Voici ce que fait ``django.contrib.auth.views.login``:"

# f18393b0e4c0434582237924ba2948a2
#: ../../topics/auth/default.txt:592
msgid ""
"If called via ``GET``, it displays a login form that POSTs to the same URL. "
"More on this in a bit."
msgstr "Quand elle est appelée par ``GET``, elle affiche un formulaire de connexion dont la cible ``POST`` envoie vers la même URL. Plus d'infos à ce sujet dans un moment."

# bb37b4f5da93491da37c5631cad269ae
#: ../../topics/auth/default.txt:595
msgid ""
"If called via ``POST`` with user submitted credentials, it tries to log the "
"user in. If login is successful, the view redirects to the URL specified in "
"``next``. If ``next`` isn't provided, it redirects to "
":setting:`settings.LOGIN_REDIRECT_URL <LOGIN_REDIRECT_URL>` (which defaults "
"to ``/accounts/profile/``). If login isn't successful, it redisplays the "
"login form."
msgstr "Quand elle est appelée par ``POST`` avec les données d'authentification d'un utilisateur, elle tente de connecter cet utilisateur. Si l'opération réussit, la vue redirige vers l'URL indiquée dans ``next``. Si ``next`` est absent, elle redirige vers :setting:`settings.LOGIN_REDIRECT_URL <LOGIN_REDIRECT_URL>` (``/accounts/profile/`` par défaut). Si la connexion échoue, la vue affiche à nouveau le formulaire de connexion."

# 96ef52cdb9d2454693dd4a18071af1a2
#: ../../topics/auth/default.txt:602
msgid ""
"It's your responsibility to provide the html for the login template , called"
" ``registration/login.html`` by default. This template gets passed four "
"template context variables:"
msgstr "Il est de votre devoir de fournir le code HTML du gabarit de connexion, nommé ``registration/login.html`` par défaut. Ce gabarit reçoit quatre variables de contexte de gabarit :"

# 1fa8c24cdf604884ac17656377cc8220
#: ../../topics/auth/default.txt:606
msgid ""
"``form``: A :class:`~django.forms.Form` object representing the "
":class:`~django.contrib.auth.forms.AuthenticationForm`."
msgstr "``form``: un objet :class:`~django.forms.Form` représentant le formulaire :class:`~django.contrib.auth.forms.AuthenticationForm`."

# a3c6cf90ed244cb6bec1803c6b81dc61
#: ../../topics/auth/default.txt:609
msgid ""
"``next``: The URL to redirect to after successful login. This may contain a "
"query string, too."
msgstr "``next``: l'URL vers laquelle rediriger après une connexion réussie. Elle peut aussi contenir une chaîne de requête."

# 482f9109c46b4134bf9557ed2b71b785
# 494b10cee1cc4df1945df9c75ac71755
#: ../../topics/auth/default.txt:612 ../../topics/auth/default.txt:708
msgid ""
"``site``: The current :class:`~django.contrib.sites.models.Site`, according "
"to the :setting:`SITE_ID` setting. If you don't have the site framework "
"installed, this will be set to an instance of "
":class:`~django.contrib.sites.models.RequestSite`, which derives the site "
"name and domain from the current :class:`~django.http.HttpRequest`."
msgstr "``site``: le :class:`~django.contrib.sites.models.Site` actuel, selon le réglage :setting:`SITE_ID`. Si l'application ``site`` n'est pas installée, il s'agira d'une instance de :class:`~django.contrib.sites.models.RequestSite` qui détecte le nom du site et le domaine à partir de l'objet :class:`~django.http.HttpRequest`."

# 34e8186ef7a14f9b9bfbf02e7cb6e2f0
# f5f472db3d9d4ca1be4eb49460a91cde
# c0c74d8a198a4cdf8a13376f0d05514b
#: ../../topics/auth/default.txt:619 ../../topics/auth/default.txt:715
#: ../../topics/auth/default.txt:871
msgid ""
"``site_name``: An alias for ``site.name``. If you don't have the site "
"framework installed, this will be set to the value of "
":attr:`request.META['SERVER_NAME'] <django.http.HttpRequest.META>`. For more"
" on sites, see :doc:`/ref/contrib/sites`."
msgstr "``site_name``: un alias de ``site.name``. Si l'application ``site`` n'est pas installée, cette variable contiendra la valeur de :attr:`request.META['SERVER_NAME'] <django.http.HttpRequest.META>`. Pour plus d'informations sur les sites, voir :doc:`/ref/contrib/sites`."

# a1e13f71e0804082be2efa4e415b5b4c
#: ../../topics/auth/default.txt:624
msgid ""
"If you'd prefer not to call the template :file:`registration/login.html`, "
"you can pass the ``template_name`` parameter via the extra arguments to the "
"view in your URLconf. For example, this URLconf line would use "
":file:`myapp/login.html` instead::"
msgstr "Si vous préférez ne pas utiliser le gabarit :file:`registration/login.html`, vous pouvez renseigner le paramètre ``template_name`` via les paramètres supplémentaires de vue dans votre configuration d'URL. Par exemple, cette ligne de configuration d'URL force l'utilisation de :file:`myapp/login.html`::"

# e0a3a24f5b33449a81a8024303c6447d
#: ../../topics/auth/default.txt:631
msgid ""
"You can also specify the name of the ``GET`` field which contains the URL to"
" redirect to after login by passing ``redirect_field_name`` to the view. By "
"default, the field is called ``next``."
msgstr "Vous pouvez également définir le nom du champ ``GET`` contenant l'URL vers laquelle rediriger après la connexion en passant ``redirect_field_name`` à la vue. Par défaut, ce champ s'appelle ``next``."

# 85cb85c6157b4e98972c85cb0a0bba1c
#: ../../topics/auth/default.txt:635
msgid ""
"Here's a sample :file:`registration/login.html` template you can use as a "
"starting point. It assumes you have a :file:`base.html` template that "
"defines a ``content`` block:"
msgstr "Voici un exemple de gabarit  :file:`registration/login.html` comme point de départ. Il compte sur la présence d'un gabarit :file:`base.html` qui définit un bloc ``content``:"

# 29d18db2582d4b66a48ea667d4a64ebd
#: ../../topics/auth/default.txt:668
msgid ""
"If you have customized authentication (see :doc:`Customizing Authentication "
"</topics/auth/customizing>`) you can pass a custom authentication form to "
"the login view via the ``authentication_form`` parameter. This form must "
"accept a ``request`` keyword argument in its ``__init__`` method, and "
"provide a ``get_user`` method which returns the authenticated user object "
"(this method is only ever called after successful form validation)."
msgstr "Si vous avez personnalisé l'authentification (voir :doc:`Personnalisation de l'authentification </topics/auth/customizing>`), il est possible de transmettre un formulaire d'authentification personnalisé à la vue de connexion par le paramètre ``authentication_form``. La méthode  ``__init__`` de ce formulaire doit accepter un paramètre nommé ``request``; le formulaire doit également implémenter une méthode ``get_user`` qui renvoie l'objet utilisateur authentifié (cette méthode n'est appelée qu'à la suite d'une validation de formulaire réussie)."

# f6f8088e5b0a45bdbae48bad0041bd25
#: ../../topics/auth/default.txt:681
msgid "Logs a user out."
msgstr "Déconnecte un utilisateur."

# e5e93d7b59e04c208628013b9d8e9f2e
#: ../../topics/auth/default.txt:683
msgid "**URL name:** ``logout``"
msgstr "**Nom d'URL :** ``logout``"

# d03bd4e542e24ddbade07e1923c46900
#: ../../topics/auth/default.txt:687
msgid "``next_page``: The URL to redirect to after logout."
msgstr "``next_page``: l'URL vers laquelle rediriger après la déconnexion."

# d548ab7edd424dff804c82b2d7a4630d
#: ../../topics/auth/default.txt:689
msgid ""
"``template_name``: The full name of a template to display after logging the "
"user out. Defaults to :file:`registration/logged_out.html` if no argument is"
" supplied."
msgstr "``template_name``: le nom complet d'un gabarit à afficher après la déconnexion d'un utilisateur. Sa valeur par défaut est :file:`registration/logged_out.html` si le paramètre n'est pas renseigné."

# b421f1fbdfef45b4ac7eca86959469a4
#: ../../topics/auth/default.txt:693
msgid ""
"``redirect_field_name``: The name of a ``GET`` field containing the URL to "
"redirect to after log out. Defaults to ``next``. Overrides the ``next_page``"
" URL if the given ``GET`` parameter is passed."
msgstr "``redirect_field_name``: le nom d'un champ ``GET`` contenant l'URL vers laquelle rediriger après la déconnexion. Sa valeur par défaut est ``next``. Cela surcharge l'URL ``next_page`` si le paramètre ``GET`` indiqué est renseigné."

# 5f05f8c4668c41e38ff8660c29423a4e
# 089dc3702a854168bb3fd915c460f6b2
# 03fd03f096f7414891b382d2b2c6cba6
# 630cc838dd5c40c7a755f7ec4e94afb1
#: ../../topics/auth/default.txt:704 ../../topics/auth/default.txt:772
#: ../../topics/auth/default.txt:858 ../../topics/auth/default.txt:961
msgid "**Template context:**"
msgstr "**Contexte de gabarit :**"

# 18da110d982f4c629eee0db63c2ca571
#: ../../topics/auth/default.txt:706
msgid "``title``: The string \"Logged out\", localized."
msgstr "``title``: la chaîne « Logged out », traduite."

# f58f488459934ef1a62c7dfabd05f662
#: ../../topics/auth/default.txt:729
msgid "Logs a user out, then redirects to the login page."
msgstr "Déconnecte un utilisateur, puis redirige vers la page de connexion."

# 9849083cd6d540289a25eb091fd4a1c4
#: ../../topics/auth/default.txt:731
msgid "**URL name:** No default URL provided"
msgstr "**Nom d'URL :** aucune URL par défaut"

# 7945ea9d02b949fcb48a32b5d36246e7
# 3a9bfd5a97fb42bf9f1ffe1c370e9f01
#: ../../topics/auth/default.txt:735 ../../topics/auth/default.txt:1004
msgid ""
"``login_url``: The URL of the login page to redirect to. Defaults to "
":setting:`settings.LOGIN_URL <LOGIN_URL>` if not supplied."
msgstr "``login_url``: l'URL de la page de connexion vers laquelle rediriger. Si ce paramètre n'est pas renseigné, la valeur par défaut utilisée est :setting:`settings.LOGIN_URL <LOGIN_URL>`."

# f534bcd16a9048c2adc8b86fc30664ce
#: ../../topics/auth/default.txt:747
msgid "Allows a user to change their password."
msgstr "Permet à un utilisateur de changer son mot de passe."

# 0fdd719810d14295a627c7a56b0045eb
#: ../../topics/auth/default.txt:749
msgid "**URL name:** ``password_change``"
msgstr "**Nom d'URL :** ``password_change``"

# bede274f67e14a6da52015936cdd45f5
#: ../../topics/auth/default.txt:753
msgid ""
"``template_name``: The full name of a template to use for displaying the "
"password change form. Defaults to "
":file:`registration/password_change_form.html` if not supplied."
msgstr "``template_name``: le nom complet d'un gabarit à utiliser pour l'affichage du formulaire de changement de mot de passe. Sa valeur par défaut est :file:`registration/password_change_form.html` si le paramètre n'est pas renseigné."

# c61e6708dacc4297920c50077089b255
#: ../../topics/auth/default.txt:757
msgid ""
"``post_change_redirect``: The URL to redirect to after a successful password"
" change."
msgstr "``post_change_redirect``: l'URL vers laquelle rediriger après un changement de mot de passe réussi."

# 9b2cd20c70d14e99948b332987fc7a13
#: ../../topics/auth/default.txt:760
msgid ""
"``password_change_form``: A custom \"change password\" form which must "
"accept a ``user`` keyword argument. The form is responsible for actually "
"changing the user's password. Defaults to "
":class:`~django.contrib.auth.forms.PasswordChangeForm`."
msgstr "``password_change_form``: un formulaire de changement de mot de passe personnalisé qui doit accepter un paramètre nommé ``user``. Le formulaire est responsable de changer réellement le mot de passe de l'utilisateur. La valeur par défaut est :class:`~django.contrib.auth.forms.PasswordChangeForm`."

# e80e9f5fb3994d6b863fd70406b20859
#: ../../topics/auth/default.txt:774
msgid ""
"``form``: The password change form (see ``password_change_form`` above)."
msgstr "``form``: le formulaire de changement de mot de passe (voir ``password_change_form`` ci-dessus)."

# 4bb0b37b2b974b03be0b03cffb51c8e0
#: ../../topics/auth/default.txt:778
msgid "The page shown after a user has changed their password."
msgstr "La page affichée après qu'un utilisateur a changé son mot de passe."

# e846047ff13848ff9d81b8106e90ab73
#: ../../topics/auth/default.txt:780
msgid "**URL name:** ``password_change_done``"
msgstr "**Nom d'URL :** ``password_change_done``"

# 565bba7d3aee4307970e7a28eea942b1
#: ../../topics/auth/default.txt:784
msgid ""
"``template_name``: The full name of a template to use. Defaults to "
":file:`registration/password_change_done.html` if not supplied."
msgstr "``template_name``: le nom complet d'un gabarit à utiliser. Sa valeur par défaut est :file:`registration/password_change_done.html` si le paramètre n'est pas renseigné."

# 90c42b340dcf46d39c395c4817652ae8
#: ../../topics/auth/default.txt:797
msgid ""
"Allows a user to reset their password by generating a one-time use link that"
" can be used to reset the password, and sending that link to the user's "
"registered email address."
msgstr "Permet à un utilisateur de réinitialiser son mot de passe en générant un lien à usage unique permettant la réinitialisation du mot de passe. Ce lien est envoyé à l'adresse électronique enregistrée pour cet utilisateur."

# fac5043c017844a79c27a5568d45fe27
#: ../../topics/auth/default.txt:801
msgid ""
"If the email address provided does not exist in the system, this view won't "
"send an email, but the user won't receive any error message either. This "
"prevents information leaking to potential attackers. If you want to provide "
"an error message in this case, you can subclass "
":class:`~django.contrib.auth.forms.PasswordResetForm` and use the "
"``password_reset_form`` argument."
msgstr "Si l'adresse électronique indiquée n'existe pas dans le système, cette vue n'envoie pas de courriel, mais l'utilisateur ne reçoit pas non plus de message d'erreur, ceci pour empêcher une divulgation d'information à de potentiels attaquants. Si vous souhaitez fournir un message d'erreur dans cette situation, vous pouvez créer une classe héritant de :class:`~django.contrib.auth.forms.PasswordResetForm` et employer le paramètre ``password_reset_form``."

# 863592946512454d8c61aa8cffd61995
#: ../../topics/auth/default.txt:809
msgid ""
"Users flagged with an unusable password (see "
":meth:`~django.contrib.auth.models.User.set_unusable_password()` aren't "
"allowed to request a password reset to prevent misuse when using an external"
" authentication source like LDAP. Note that they won't receive any error "
"message since this would expose their account's existence but no mail will "
"be sent either."
msgstr "Les utilisateurs possédant un mot de passe inutilisable (voir :meth:`~django.contrib.auth.models.User.set_unusable_password()`) ne sont pas autorisés à demander la réinitialisation de leur mot de passe afin de prévenir une utilisation abusive avec des sources d'authentification externes comme LDAP. Notez qu'ils ne reçoivent pas de message d'erreur car cela indiquerait que leur compte existe bel et bien, mais ils ne reçoivent pas de courriel non plus."

# 6df6ca557e9b4cf398c9d4c51287fcc7
#: ../../topics/auth/default.txt:818
msgid ""
"Previously, error messages indicated whether a given email was registered."
msgstr "Précédemment, on pouvait obtenir un message d'erreur indiquant si une adresse électronique était effectivement enregistrée."

# 76aaf6d034604cc19b6a6bc890ee2a92
#: ../../topics/auth/default.txt:821
msgid "**URL name:** ``password_reset``"
msgstr "**Nom d'URL :** ``password_reset``"

# bba63ecb87f7473b961dadef63551abf
#: ../../topics/auth/default.txt:825
msgid ""
"``template_name``: The full name of a template to use for displaying the "
"password reset form. Defaults to "
":file:`registration/password_reset_form.html` if not supplied."
msgstr "``template_name``: le nom complet d'un gabarit à utiliser pour l'affichage du formulaire de réinitialisation du mot de passe. Sa valeur par défaut est :file:`registration/password_reset_form.html` si le paramètre n'est pas renseigné."

# 131823bfcf914f1991924ab6736ac164
#: ../../topics/auth/default.txt:829
msgid ""
"``email_template_name``: The full name of a template to use for generating "
"the email with the reset password link. Defaults to "
":file:`registration/password_reset_email.html` if not supplied."
msgstr "``email_template_name``: le nom complet d'un gabarit à utiliser pour produire le courriel contenant le lien de réinitialisation du mot de passe. Sa valeur par défaut est :file:`registration/password_reset_email.html` si le paramètre n'est pas renseigné."

# d58a91d0ce704ada84c790cda650a139
#: ../../topics/auth/default.txt:833
msgid ""
"``subject_template_name``: The full name of a template to use for the "
"subject of the email with the reset password link. Defaults to "
":file:`registration/password_reset_subject.txt` if not supplied."
msgstr "``subject_template_name``: le nom complet d'un gabarit à utiliser pour le sujet du courriel contenant le lien de réinitialisation du mot de passe. Sa valeur par défaut est :file:`registration/password_reset_subject.html` si le paramètre n'est pas renseigné."

# 6af0b01aa7ab497aa64b92a900612cde
#: ../../topics/auth/default.txt:837
msgid ""
"``password_reset_form``: Form that will be used to get the email of the user"
" to reset the password for. Defaults to "
":class:`~django.contrib.auth.forms.PasswordResetForm`."
msgstr "``password_reset_form``: formulaire utilisé pour obtenir l'adresse électronique de l'utilisateur pour lequel le mot de passe doit être réinitialisé. La valeur par défaut est :class:`~django.contrib.auth.forms.PasswordResetForm`."

# 636bc997c29e4136816ba604876eeee5
#: ../../topics/auth/default.txt:841
msgid ""
"``token_generator``: Instance of the class to check the one time link. This "
"will default to ``default_token_generator``, it's an instance of "
"``django.contrib.auth.tokens.PasswordResetTokenGenerator``."
msgstr "``token_generator``: instance de la classe qui vérifie le lien à usage unique. La valeur par défaut est ``default_token_generator`` qui est une instance de ``django.contrib.auth.tokens.PasswordResetTokenGenerator``."

# 864df2d0f1c149848f32edb1d59cdc3d
#: ../../topics/auth/default.txt:845
msgid ""
"``post_reset_redirect``: The URL to redirect to after a successful password "
"reset request."
msgstr "``post_change_redirect``: l'URL vers laquelle rediriger après une demande de réinitialisation de mot de passe réussie."

# 2ead18786de34cb48f645bc17a8b4983
#: ../../topics/auth/default.txt:848
msgid ""
"``from_email``: A valid email address. By default Django uses the "
":setting:`DEFAULT_FROM_EMAIL`."
msgstr "``from_email``: une adresse électronique valide. Par défaut, Django utilise :setting:`DEFAULT_FROM_EMAIL`."

# cf18583dff5c46f181e1ab8883958b48
#: ../../topics/auth/default.txt:860
msgid ""
"``form``: The form (see ``password_reset_form`` above) for resetting the "
"user's password."
msgstr "``form``: le formulaire de réinitialisation du mot de passe de l'utilisateur (voir ``password_reset_form`` ci-dessus)."

# 2de9ca4c272245d9a9284dd63e9c52e8
#: ../../topics/auth/default.txt:863
msgid "**Email template context:**"
msgstr "**Contexte de gabarit du courriel :**"

# f087080cd66b45b696b5e0f0936fab66
#: ../../topics/auth/default.txt:865
msgid "``email``: An alias for ``user.email``"
msgstr "``email``: un alias de ``user.email``"

# 2c10a480e51b4a5a9a643a26bf69274a
#: ../../topics/auth/default.txt:867
msgid ""
"``user``: The current :class:`~django.contrib.auth.models.User`, according "
"to the ``email`` form field. Only active users are able to reset their "
"passwords (``User.is_active is True``)."
msgstr "``user``: l'utilisateur :class:`~django.contrib.auth.models.User` actuel, en accord avec le champ de formulaire ``email``. Seuls les utilisateurs actifs ont la possibilité de réinitialiser leur mot de passe (``User.is_active is True``)."

# 3d8818ce372e4099826b30313bf267ca
#: ../../topics/auth/default.txt:876
msgid ""
"``domain``: An alias for ``site.domain``. If you don't have the site "
"framework installed, this will be set to the value of "
"``request.get_host()``."
msgstr "``domain``: un alias de ``site.domain``. Si l'application ``site`` n'est pas installée, cette variable contiendra la valeur de ``request.get_host()``."

# 9ee7ec9d4d474c12bd85aba9a6f61450
#: ../../topics/auth/default.txt:880
msgid "``protocol``: http or https"
msgstr "``protocol``: http ou https"

# e6320def0c864b809a80a3322f280366
#: ../../topics/auth/default.txt:882
msgid "``uid``: The user's primary key encoded in base 64."
msgstr "``uid``: la clé primaire de l'utilisateur codée en base64."

# 461fcca4949744a0ae7903dcde05f3ea
#: ../../topics/auth/default.txt:884
msgid "``token``: Token to check that the reset link is valid."
msgstr "``token``: jeton servant à contrôler la validité du lien de réinitialisation."

# fbfc80e4d2d344a09786e021f3a06890
#: ../../topics/auth/default.txt:886
msgid ""
"Sample ``registration/password_reset_email.html`` (email body template):"
msgstr "Exemple de ``registration/password_reset_email.html`` (gabarit de corps de message) :"

# dcadcb2571ba48bba601a18741c6fffa
#: ../../topics/auth/default.txt:895
msgid ""
"Reversing ``password_reset_confirm`` takes a ``uidb64`` argument instead of "
"``uidb36``."
msgstr "La résolution inverse de ``password_reset_confirm`` accepte un paramètre ``uidb64`` au lieu de ``uidb36``."

# d72672c478174dccb173bf819c6f6b5e
#: ../../topics/auth/default.txt:898
msgid ""
"The same template context is used for subject template. Subject must be "
"single line plain text string."
msgstr "Le gabarit du sujet reçoit le même contexte de gabarit. Le sujet doit être une seule ligne de texte brut."

# 39f0f8dc285841cf8210738cc43e980f
#: ../../topics/auth/default.txt:904
msgid ""
"The page shown after a user has been emailed a link to reset their password."
" This view is called by default if the :func:`password_reset` view doesn't "
"have an explicit ``post_reset_redirect`` URL set."
msgstr "La page affichée après qu'un utilisateur a reçu le lien pour réinitialiser son mot de passe. Cette vue est appelée par défaut si la vue :func:`password_reset` ne possède pas une URL ``post_reset_redirect`` définie explicitement."

# 984735e496b84ddb8c9b9bf0a7cea821
#: ../../topics/auth/default.txt:908
msgid "**URL name:** ``password_reset_done``"
msgstr "**Nom d'URL :** ``password_reset_done``"

# d7733b6495c64a8898e4852e80e01e05
#: ../../topics/auth/default.txt:912
msgid ""
"``template_name``: The full name of a template to use. Defaults to "
":file:`registration/password_reset_done.html` if not supplied."
msgstr "``template_name``: le nom complet d'un gabarit à utiliser. Sa valeur par défaut est :file:`registration/password_reset_done.html` si le paramètre n'est pas renseigné."

# 41a1d65245f14a3e9c8f802edf2b86c3
#: ../../topics/auth/default.txt:925
msgid "Presents a form for entering a new password."
msgstr "Affiche un formulaire pour saisir un nouveau mot de passe."

# eedbd60567304b6f912fc8268b508c0c
#: ../../topics/auth/default.txt:927
msgid "**URL name:** ``password_reset_confirm``"
msgstr "**Nom d'URL :** ``password_reset_confirm``"

# 23110b525e6946eea5159342e8b31b42
#: ../../topics/auth/default.txt:931
msgid "``uidb64``: The user's id encoded in base 64. Defaults to ``None``."
msgstr "``uidb64``: l'identifiant de l'utilisateur codé en base64. ``None`` par défaut."

# 841ae66d908e40789910c6327492963f
#: ../../topics/auth/default.txt:935
msgid ""
"The ``uidb64`` parameter was previously base 36 encoded and named "
"``uidb36``."
msgstr "Le paramètre ``uidb64`` était précédemment codé en base36 et s'appelait ``uidb36``."

# ddd3ed774aa7488c8088ba4678e40a95
#: ../../topics/auth/default.txt:938
msgid ""
"``token``: Token to check that the password is valid. Defaults to ``None``."
msgstr "``token``: jeton servant à contrôler la validité du mot de passe. ``None`` par défaut."

# 23ee58bb48d44c2f9e5630fa0f70cd2c
#: ../../topics/auth/default.txt:941
msgid ""
"``template_name``: The full name of a template to display the confirm "
"password view. Default value is "
":file:`registration/password_reset_confirm.html`."
msgstr "``template_name``: le nom complet d'un gabarit à utiliser pour l'affichage de la vue de confirmation du mot de passe. Sa valeur par défaut est :file:`registration/password_reset_confirm.html`."

# 61698c1da6274d359a92de73e6875201
#: ../../topics/auth/default.txt:944
msgid ""
"``token_generator``: Instance of the class to check the password. This will "
"default to ``default_token_generator``, it's an instance of "
"``django.contrib.auth.tokens.PasswordResetTokenGenerator``."
msgstr "``token_generator``: instance de la classe qui vérifie le mot de passe. La valeur par défaut est ``default_token_generator`` qui est une instance de ``django.contrib.auth.tokens.PasswordResetTokenGenerator``."

# 62d64fe5e6ea4dccb3b9ca068c7c5b13
#: ../../topics/auth/default.txt:948
msgid ""
"``set_password_form``: Form that will be used to set the password. Defaults "
"to :class:`~django.contrib.auth.forms.SetPasswordForm`"
msgstr "``set_password_form``: formulaire utilisé pour définir le mot de passe. La valeur par défaut est :class:`~django.contrib.auth.forms.SetPasswordForm`."

# f28be8a55d0a4d569febfecfd9cb304b
#: ../../topics/auth/default.txt:951
msgid ""
"``post_reset_redirect``: URL to redirect after the password reset done. "
"Defaults to ``None``."
msgstr "``post_change_redirect``: l'URL vers laquelle rediriger après une réinitialisation de mot de passe. ``None`` par défaut."

# 9f472d7527654ab4bd00cd55a669a275
#: ../../topics/auth/default.txt:963
msgid ""
"``form``: The form (see ``set_password_form`` above) for setting the new "
"user's password."
msgstr "``form``: le formulaire de changement du mot de passe de l'utilisateur (voir ``set_password_form`` ci-dessus)."

# b93768f06ca74cc89f5182e47ca57d79
#: ../../topics/auth/default.txt:966
msgid ""
"``validlink``: Boolean, True if the link (combination of ``uidb64`` and "
"``token``) is valid or unused yet."
msgstr "``validlink``: valeur booléenne, ``True`` si le lien (combinaison de ``uidb64`` et de ``token``) est valable ou pas encore utilisé."

# 1541ddc6b45a41c1af7dcb53108e5544
#: ../../topics/auth/default.txt:971
msgid ""
"Presents a view which informs the user that the password has been "
"successfully changed."
msgstr "Affiche une vue informant l'utilisateur que son mot de passe a été changé avec succès."

# 7983b7b09d76456797484cd83b8fdfd1
#: ../../topics/auth/default.txt:974
msgid "**URL name:** ``password_reset_complete``"
msgstr "**Nom d'URL :** ``password_reset_complete``"

# 16328736f3c2400fb1697e3bdec5a54e
#: ../../topics/auth/default.txt:978
msgid ""
"``template_name``: The full name of a template to display the view. Defaults"
" to :file:`registration/password_reset_complete.html`."
msgstr "``template_name``: le nom complet d'un gabarit pour afficher la vue. Sa valeur par défaut est :file:`registration/password_reset_complete.html`."

# 80fc6e20167a439bb52502a18758d33d
#: ../../topics/auth/default.txt:989
msgid "Helper functions"
msgstr "Fonctions utilitaires"

# 00bd75d1fcba48c88d6d606f96ef03ac
#: ../../topics/auth/default.txt:995
msgid ""
"Redirects to the login page, and then back to another URL after a successful"
" login."
msgstr "Redirige vers la page de connexion, puis vers une autre URL si la connexion réussit."

# ba77b5a53f944a7a9e0aec16198bf3b7
#: ../../topics/auth/default.txt:998
msgid "**Required arguments:**"
msgstr "**Paramètres obligatoires :**"

# 0e7b6c8c18e348d9abe813b8e102a01b
#: ../../topics/auth/default.txt:1000
msgid "``next``: The URL to redirect to after a successful login."
msgstr "``next_page``: l'URL vers laquelle rediriger après une connexion réussie."

# 3a2128f0d67e4b72940e504706b273d7
#: ../../topics/auth/default.txt:1007
msgid ""
"``redirect_field_name``: The name of a ``GET`` field containing the URL to "
"redirect to after log out. Overrides ``next`` if the given ``GET`` parameter"
" is passed."
msgstr "``redirect_field_name``: le nom d'un champ ``GET`` contenant l'URL vers laquelle rediriger après la déconnexion. Cela surcharge ``next`` si le paramètre ``GET`` indiqué est renseigné."

# d7fcce75b8c44fe686cbbcfd4c5bdfaa
#: ../../topics/auth/default.txt:1015
msgid "Built-in forms"
msgstr "Formulaires intégrés"

# 23f7c514b7944d7e8d62e2a9ff071ff4
#: ../../topics/auth/default.txt:1019
msgid ""
"If you don't want to use the built-in views, but want the convenience of not"
" having to write forms for this functionality, the authentication system "
"provides several built-in forms located in :mod:`django.contrib.auth.forms`:"
msgstr "Si vous ne souhaitez pas utiliser les vues intégrées mais que vous voulez profiter de ne pas devoir réécrire les formulaires de cette fonctionnalité, le système d'authentification fournit plusieurs formulaires intégrés se trouvant dans :mod:`django.contrib.auth.forms`:"

# 96a4423e2f654b2bb758fffa52daaab2
#: ../../topics/auth/default.txt:1024
msgid ""
"The built-in authentication forms make certain assumptions about the user "
"model that they are working with. If you're using a :ref:`custom User model "
"<auth-custom-user>`, it may be necessary to define your own forms for the "
"authentication system. For more information, refer to the documentation "
"about :ref:`using the built-in authentication forms with custom user models "
"<custom-users-and-the-built-in-auth-forms>`."
msgstr "Les formulaires d'authentification intégrés comptent sur un certain nombre de caractéristiques du modèle utilisateur avec lequel ils interagissent. Si vous utilisez un :ref:`modèle d'utilisateur personnalisé <auth-custom-user>`, il peut être nécessaire de définir vos propres formulaires pour le système d'authentification. Pour plus d'informations, consultez la documentation sur l':ref:`utilisation des formulaires d'authentification intégrés avec les modèles d'utilisateur personnalisés <custom-users-and-the-built-in-auth-forms>`."

# a5dc6430359e4699943a64a18ac1a9c3
#: ../../topics/auth/default.txt:1033
msgid "A form used in the admin interface to change a user's password."
msgstr "Un formulaire utilisé dans l'interface d'administration pour changer le mot de passe d'un utilisateur."

# 6cdf5a13054d4050b4c9e2032d7d9388
#: ../../topics/auth/default.txt:1035
msgid "Takes the ``user`` as the first positional argument."
msgstr "Accepte ``user`` comme premier paramètre positionnel."

# 8ae51127ebac404b9e87ea66a1b88cea
#: ../../topics/auth/default.txt:1039
msgid "A form for logging a user in."
msgstr "Un formulaire pour connecter un utilisateur."

# 55cee9ec2fb54ecba156c15707b6d2d3
#: ../../topics/auth/default.txt:1041
msgid ""
"Takes ``request`` as its first positional argument, which is stored on the "
"form instance for use by sub-classes."
msgstr "Accepte ``request`` comme premier paramètre positionnel, qui est ensuite stocké dans l'instance de formulaire à disposition des sous-classes."

# b338a7cdb14746dea0daec872499e247
#: ../../topics/auth/default.txt:1046
msgid "A form for allowing a user to change their password."
msgstr "Un formulaire pour permettre à un utilisateur de changer son mot de passe."

# 462e2a4123f44b08b42b87218da69a04
#: ../../topics/auth/default.txt:1050
msgid ""
"A form for generating and emailing a one-time use link to reset a user's "
"password."
msgstr "Un formulaire pour générer et envoyer par courriel un lien à usage unique pour réinitialiser le mot de passe d'un utilisateur."

# c386b6299645477f8a503e328833ae11
#: ../../topics/auth/default.txt:1055
msgid ""
"A form that lets a user change his/her password without entering the old "
"password."
msgstr "Un formulaire permettant à un utilisateur de changer son mot de passe sans saisir l'ancien mot de passe."

# d41094676a924fef8790caf89ca4935a
#: ../../topics/auth/default.txt:1060
msgid ""
"A form used in the admin interface to change a user's information and "
"permissions."
msgstr "Un formulaire utilisé dans l'interface d'administration pour modifier les données d'un utilisateur et ses permissions."

# 68dacf1573364dbe906d2d5625302331
#: ../../topics/auth/default.txt:1065
msgid "A form for creating a new user."
msgstr "Un formulaire pour créer un nouvel utilisateur."

# 8b0229b6ecb34fe2a216cf884169fc3b
#: ../../topics/auth/default.txt:1071
msgid "Authentication data in templates"
msgstr "Données d'authentification dans les gabarits"

# c850cf04c17a4ac3a6f14ace322c6c66
#: ../../topics/auth/default.txt:1073
msgid ""
"The currently logged-in user and his/her permissions are made available in "
"the :doc:`template context </ref/templates/api>` when you use "
":class:`~django.template.RequestContext`."
msgstr "L'utilisateur actuellement connecté et ses permissions sont disponibles dans le :doc:`contexte de gabariz </ref/templates/api>` lorsque vous utilisez :class:`~django.template.RequestContext`."

# e6baf63044a7414f878cde1ed497a680
#: ../../topics/auth/default.txt:1077
msgid "Technicality"
msgstr "Détail technique"

# 4f930e9a76dd48919c66f89528145bcf
#: ../../topics/auth/default.txt:1079
msgid ""
"Technically, these variables are only made available in the template context"
" if you use :class:`~django.template.RequestContext` *and* your "
":setting:`TEMPLATE_CONTEXT_PROCESSORS` setting contains "
"``\"django.contrib.auth.context_processors.auth\"``, which is default. For "
"more, see the :ref:`RequestContext docs <subclassing-context-"
"requestcontext>`."
msgstr "Techniquement, ces variables ne sont disponibles dans le contexte de gabarit que si vous utilisez :class:`~django.template.RequestContext` *et* que votre réglage :setting:`TEMPLATE_CONTEXT_PROCESSORS` contient ``\"django.contrib.auth.context_processors.auth\"``, ce qui est le cas par défaut. Pour plus de détails, lisez la :ref:`documentation de RequestContext <subclassing-context-requestcontext>`."

# ab9a699c656045568d02e331a3701520
# 0d71b1fba08a4eb98c59155e38fa888b
#: ../../topics/auth/default.txt:1086 ../../topics/auth/index.txt:31
msgid "Users"
msgstr "Utilisateurs"

# d720d7197dda484da3945aac326362e7
#: ../../topics/auth/default.txt:1088
msgid ""
"When rendering a template :class:`~django.template.RequestContext`, the "
"currently logged-in user, either a  "
":class:`~django.contrib.auth.models.User` instance or an "
":class:`~django.contrib.auth.models.AnonymousUser` instance, is stored in "
"the template variable ``{{ user }}``:"
msgstr "Lors de la génération d'un :class:`~django.template.RequestContext` de gabarit, l'utilisateur actuellement connecté, une instance de  :class:`~django.contrib.auth.models.User` ou de :class:`~django.contrib.auth.models.AnonymousUser`, est stockée dans la variable de gabarit ``{{ user }}``:"

# 7fcb7a2e1b584045ba2535510e21b119
#: ../../topics/auth/default.txt:1101
msgid ""
"This template context variable is not available if a ``RequestContext`` is "
"not being used."
msgstr "Cette variable de contexte de gabarit n'est pas disponible si ``RequestContext`` n'est pas utilisé."

# 2ea797de3dfe411092a5da772b1d3bbd
#: ../../topics/auth/default.txt:1105
msgid "Permissions"
msgstr "Permissions"

# e035f72ca1ac4802807e8979eeb8364d
#: ../../topics/auth/default.txt:1107
msgid ""
"The currently logged-in user's permissions are stored in the template "
"variable ``{{ perms }}``. This is an instance of "
"``django.contrib.auth.context_processors.PermWrapper``, which is a template-"
"friendly proxy of permissions."
msgstr "Les permissions de l'utilisateur actuellement connecté sont stockés dans la variable de gabarit ``{{ perms }}``. C'est une instance de ``django.contrib.auth.context_processors.PermWrapper``, un objet mandataire de permissions adapté aux gabarits."

# fb00e2f9fa664a0ca392fe07c766f7e7
#: ../../topics/auth/default.txt:1112
msgid ""
"In the ``{{ perms }}`` object, single-attribute lookup is a proxy to "
":meth:`User.has_module_perms "
"<django.contrib.auth.models.User.has_module_perms>`. This example would "
"display ``True`` if the logged-in user had any permissions in the ``foo`` "
"app::"
msgstr "Dans l'objet ``{{ perms }}``, la consultation d'attributs simples est une méthode mandataire de :meth:`User.has_module_perms <django.contrib.auth.models.User.has_module_perms>`. Cet exemple affiche ``True`` si l'utilisateur connecté a au moins une permission dans l'application ``foo``::"

# 9510de21c5cb4391a8117ec3a39337cc
#: ../../topics/auth/default.txt:1119
msgid ""
"Two-level-attribute lookup is a proxy to :meth:`User.has_perm "
"<django.contrib.auth.models.User.has_perm>`. This example would display "
"``True`` if the logged-in user had the permission ``foo.can_vote``::"
msgstr "La consultation d'attributs à deux niveaux est une méthode mandataire de :meth:`User.has_perm <django.contrib.auth.models.User.has_perm>`. Cet exemple affiche ``True`` si l'utilisateur connecté a la permission ``foo.can_vote``::"

# dd51d64eba6344b0ae5debf03f85fa9c
#: ../../topics/auth/default.txt:1126
msgid "Thus, you can check permissions in template ``{% if %}`` statements:"
msgstr "Vous pouvez donc vérifier les permissions dans des instructions ``{% if %}`` de gabarits :"

# 181e7c707bfc4bc696da0842bc021785
#: ../../topics/auth/default.txt:1144
msgid "Permission lookup by \"if in\"."
msgstr "Consultation des permissions par « if in »."

# 5d8f96c74d4841c3b8989b4739fce68b
#: ../../topics/auth/default.txt:1146
msgid ""
"It is possible to also look permissions up by ``{% if in %}`` statements. "
"For example:"
msgstr "Il est aussi possible de consulter les permissions par des instructions ``{% if in %}``. Par exemple :"

# 136453bf1e8943fb95e744323fc05ff7
#: ../../topics/auth/default.txt:1160
msgid "Managing users in the admin"
msgstr "Gestion des utilisateurs dans le site d'administration"

# 8c1ab028acb14eb290d21b5dc77f84c9
#: ../../topics/auth/default.txt:1162
msgid ""
"When you have both ``django.contrib.admin`` and ``django.contrib.auth`` "
"installed, the admin provides a convenient way to view and manage users, "
"groups, and permissions. Users can be created and deleted like any Django "
"model. Groups can be created, and permissions can be assigned to users or "
"groups. A log of user edits to models made within the admin is also stored "
"and displayed."
msgstr "Quand ``django.contrib.admin`` et ``django.contrib.auth`` sont les deux installés, le site d'administration offre une interface pratique pour afficher et gérer les utilisateurs, les groupes et les permissions. Les utilisateurs peuvent être créés et supprimés comme tout autre modèle Django. Des groupes peuvent être créés et des permissions peuvent être attribuées aux utilisateurs et aux groupes. Les modifications de modèles effectuées dans l'administration par les utilisateurs sont également journalisées et affichées."

# 9b8803aec571478fa15f9edf8ac0f9c5
#: ../../topics/auth/default.txt:1170
msgid "Creating Users"
msgstr "Création d'utilisateurs"

# b4ffcb20b1204c6c9c1a414dd0b10ea9
#: ../../topics/auth/default.txt:1172
msgid ""
"You should see a link to \"Users\" in the \"Auth\" section of the main admin"
" index page. The \"Add user\" admin page is different than standard admin "
"pages in that it requires you to choose a username and password before "
"allowing you to edit the rest of the user's fields."
msgstr "Vous devriez voir un lien vers « Utilisateurs » dans la section « Auth » de la page d'accueil du site d'administration. La page d'administration « Ajouter un utilisateur » est différente des autres pages d'administration dans la mesure où elle exige que vous saisissiez d'abord un nom d'utilisateur et un mot de passe avant de pouvoir modifier les autres champs de l'utilisateur."

# 9d6ff2798c0d4acb9d8518b2f62ce036
#: ../../topics/auth/default.txt:1177
msgid ""
"Also note: if you want a user account to be able to create users using the "
"Django admin site, you'll need to give them permission to add users *and* "
"change users (i.e., the \"Add user\" and \"Change user\" permissions). If an"
" account has permission to add users but not to change them, that account "
"won't be able to add users. Why? Because if you have permission to add "
"users, you have the power to create superusers, which can then, in turn, "
"change other users. So Django requires add *and* change permissions as a "
"slight security measure."
msgstr "Notez également que si vous voulez qu'un utilisateur puisse créer d'autres utilisateurs dans le site d'administration de Django, vous devez lui attribuer la permission d'ajouter des utilisateurs *et* de modifier des utilisateurs (c'est-à-dire les permissions « Can add user » et « Can change user »). Si un compte utilisateur a la permission d'ajouter des utilisateurs mais pas de les modifier, ce compte ne pourra pas créer d'utilisateurs. Pourquoi ? Parce que si vous avez la permission d'ajouter des utilisateurs, vous avez le pouvoir de créer des superutilisateurs, qui peuvent à leur tour modifier d'autres utilisateurs. Django exige donc à la fois les permissions « ajout » et « modification » comme légère mesure de sécurité."

# e066e9f5c4ce4c52834a32cbad6d2b61
#: ../../topics/auth/default.txt:1187
msgid "Changing Passwords"
msgstr "Changement des mots de passe"

# 49c3729909524f059c553b87f9b3a11b
#: ../../topics/auth/default.txt:1189
msgid ""
"User passwords are not displayed in the admin (nor stored in the database), "
"but the :doc:`password storage details </topics/auth/passwords>` are "
"displayed. Included in the display of this information is a link to a "
"password change form that allows admins to change user passwords."
msgstr "Les mots de passe des utilisateurs ne sont pas affichés dans le site d'administration (ni stockés dans la base de données), mais les :doc:`détails de stockage des mots de passe </topics/auth/passwords>` sont visibles. Ces informations contiennent un lien vers le formulaire de changement de mot de passe permettant aux administrateurs de changer les mots de passe des utilisateurs."

# cbb3ad9b5b054566b89948e0ff91a50d
#: ../../topics/auth/index.txt:3
msgid "User authentication in Django"
msgstr "Authentification des utilisateurs dans Django"

# d059bed60d724869a9039d2bc4086bd2
#: ../../topics/auth/index.txt:15
msgid ""
"Django comes with a user authentication system. It handles user accounts, "
"groups, permissions and cookie-based user sessions. This section of the "
"documentation explains how the default implementation works out of the box, "
"as well as how to :doc:`extend and customize </topics/auth/customizing>` it "
"to suit your project's needs."
msgstr "Django contient un système d'authentification des utilisateurs. Il gère des comptes utilisateur, des groupes, des permissions et des sessions utilisateur basées sur les cookies. Cette section de la documentation expose le fonctionnement par défaut de l'authentification et présente également la manière d':doc:`étendre et de personnaliser </topics/auth/customizing>` ce système pour l'adapter aux besoins de votre projet."

# e0c1077cc01e4d3084f2c0a3e58e9e06
# 94a0be800dc7415b9cafbeb7459fa052
# ce5097663aa24bd6bb6d3a3465f80615
# d6a253e4c5bf4dab8e5499473a86fa62
# d4287a51b73843829e4ad0f24055cee6
# 008d877c7c3d49ec9321758e56917f20
# f9c24eb0119544eca7ff7b5d1e8c28b3
#: ../../topics/auth/index.txt:22 ../../topics/forms/index.txt:26
#: ../../topics/http/urls.txt:18 ../../topics/i18n/formatting.txt:8
#: ../../topics/i18n/index.txt:14 ../../topics/i18n/timezones.txt:10
#: ../../topics/i18n/translation.txt:8
msgid "Overview"
msgstr "Aperçu"

# fd84b22f7c4043fc80cdd8a823a83d07
#: ../../topics/auth/index.txt:24
msgid ""
"The Django authentication system handles both authentication and "
"authorization. Briefly, authentication verifies a user is who they claim to "
"be, and authorization determines what an authenticated user is allowed to "
"do. Here the term authentication is used to refer to both tasks."
msgstr "Le système d'authentification de Django gère aussi bien l'authentification que l'autorisation. En bref, l'authentification vérifie que l'utilisateur est bien celui qu'il prétend être et l'autorisation détermine ce qu'un utilisateur authentifié est autorisé à faire. Ici, nous utiliserons le terme authentification pour nous référer à ces deux tâches."

# f864beaf0c7f4c8b99e2145a9f6c6587
#: ../../topics/auth/index.txt:29
msgid "The auth system consists of:"
msgstr "Le système d'authentification consiste en :"

# 10d0544ece6e42229a43eda7a7d8215e
#: ../../topics/auth/index.txt:32
msgid ""
"Permissions: Binary (yes/no) flags designating whether a user may perform a "
"certain task."
msgstr "Permissions : drapeaux binaires (oui/non) indiquant si un utilisateur a le droit d'effectuer certaines tâches"

# f7cb0490332c48788fa77e3592aa9c77
#: ../../topics/auth/index.txt:34
msgid ""
"Groups: A generic way of applying labels and permissions to more than one "
"user."
msgstr "Groupes : une manière générique d'appliquer des étiquettes et des permissions à plus d'un utilisateur"

# 6dc8a8b6c941470f89631ff575b4f73a
#: ../../topics/auth/index.txt:36
msgid "A configurable password hashing system"
msgstr "Un système de hachage de mots de passe configurable"

# 6df4f54e15f041848f7a527a22e0ea5f
#: ../../topics/auth/index.txt:37
msgid "Forms and view tools for logging in users, or restricting content"
msgstr "Outils de formulaires et de vues pour connecter les utilisateurs ou limiter l'accès au contenu"

# ec80f339f137411cafba50e7e489f80b
#: ../../topics/auth/index.txt:38
msgid "A pluggable backend system"
msgstr "Un système de moteur d'authentification enfichable"

# 09297c2d07b645ccba5093ba2c05b36b
#: ../../topics/auth/index.txt:40
msgid ""
"The authentication system in Django aims to be very generic and doesn't "
"provide some features commonly found in web authentication systems. "
"Solutions for some of these common problems have been implemented in third-"
"party packages:"
msgstr "Le système d'authentification de Django est conçu de manière très générique et ne fournit pas certaines fonctionnalités couramment présentes dans les systèmes d'authentification sur le Web. Des solutions pour certains de ces problèmes courants ont été implémentées dans des paquets externes :"

# 24b355eca0a64959bc4f2b50326fd15c
#: ../../topics/auth/index.txt:44
msgid "Password strength checking"
msgstr "Contrôle de la force des mots de passe"

# 7d00e8e853754ba698545366db696877
#: ../../topics/auth/index.txt:45
msgid "Throttling of login attempts"
msgstr "Limitation des tentatives de connexion"

# e2da609358534c6a9c0c2dc84b8467d2
#: ../../topics/auth/index.txt:46
msgid "Authentication against third-parties (OAuth, for example)"
msgstr "Authentification à des services externes (OAuth, par exemple)"

# 1c05c33d841143139cd5d3a8b2f01252
#: ../../topics/auth/index.txt:49
msgid "Installation"
msgstr "Installation"

# f1df590caf2b4103804193f0ebe7aacb
#: ../../topics/auth/index.txt:51
msgid ""
"Authentication support is bundled as a Django contrib module in "
"``django.contrib.auth``. By default, the required configuration is already "
"included in the :file:`settings.py` generated by :djadmin:`django-admin.py "
"startproject <startproject>`, these consist of two items listed in your "
":setting:`INSTALLED_APPS` setting:"
msgstr "La prise en charge de l'authentification est intégrée dans Django sous forme de module contribué dans ``django.contrib.auth``. Par défaut, la configuration requise est déjà incluse dans le fichier :file:`settings.py` généré par la commande :djadmin:`django-admin.py startproject <startproject>`. Cette configuration consiste en deux éléments figurant dans le réglage :setting:`INSTALLED_APPS`:"

# df1991ffa6a440339a83e047e36ad29a
#: ../../topics/auth/index.txt:57
msgid ""
"``'django.contrib.auth'`` contains the core of the authentication framework,"
" and its default models."
msgstr "``'django.contrib.auth'`` contient le cœur du système d'authentification et ses modèles par défaut."

# b5c6c0a6aa09423aa2de4a4708108ba1
#: ../../topics/auth/index.txt:59
msgid ""
"``'django.contrib.contenttypes'`` is the Django :doc:`content type system "
"</ref/contrib/contenttypes>`, which allows permissions to be associated with"
" models you create."
msgstr "``'django.contrib.contenttypes'`` est le  :doc:`système de types de contenu </ref/contrib/contenttypes>` de Django qui permet d'associer des permissions aux modèles que vous créez."

# f5899b35331c48119ca9fc80ae450d7f
#: ../../topics/auth/index.txt:63
msgid "and two items in your :setting:`MIDDLEWARE_CLASSES` setting:"
msgstr "et deux lignes dans le réglage  :setting:`MIDDLEWARE_CLASSES`:"

# ae3e6cbf96804429be45f2b24d9c00fb
#: ../../topics/auth/index.txt:65
msgid ""
":class:`~django.contrib.sessions.middleware.SessionMiddleware` manages "
":doc:`sessions </topics/http/sessions>` across requests."
msgstr ":class:`~django.contrib.sessions.middleware.SessionMiddleware` gère les :doc:`sessions </topics/http/sessions>` tout au long des requêtes."

# 4ea138fe7ec2481fbd22ef51c1c61cc6
#: ../../topics/auth/index.txt:67
msgid ""
":class:`~django.contrib.auth.middleware.AuthenticationMiddleware` associates"
" users with requests using sessions."
msgstr ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware` associe les utilisateurs aux requêtes en utilisant les sessions."

# 78a7594ef6984a19b84fbd8c3553af8d
#: ../../topics/auth/index.txt:70
msgid ""
"With these settings in place, running the command ``manage.py syncdb`` "
"creates the necessary database tables for auth related models, creates "
"permissions for any models defined in your installed apps, and prompts you "
"to create a superuser account the first time you run it."
msgstr "Avec ces réglages configurés, le lancement de la commande ``manage.py syncdb`` crée les tables de base de données nécessaires pour les modèles liés à l'authentification, crée les permissions de tous les modèles définis dans les applications installées et vous demande de créer un compte superutilisateur la première fois que vous lancez cette commande."

# 6c7c78688b0c47b3ac8046234b7c84a1
# feedca49663e415da76feb2ff6ef3e67
#: ../../topics/auth/index.txt:76 ../../topics/i18n/timezones.txt:652
msgid "Usage"
msgstr "Utilisation"

# b689de65833543159d3a9b197560a16d
#: ../../topics/auth/index.txt:78
msgid ":doc:`Using Django's default implementation <default>`"
msgstr ":doc:`Utilisation de l'implémentation par défaut de Django <default>`"

# da16889aa04f46ffbb114934250461e9
#: ../../topics/auth/index.txt:80
msgid ":ref:`Working with User objects <user-objects>`"
msgstr ":ref:`Manipulation des objets utilisateur <user-objects>`"

# b424db326900469da2e8902c81e0ca00
#: ../../topics/auth/index.txt:81
msgid ":ref:`Permissions and authorization <topic-authorization>`"
msgstr ":ref:`Permissions et autorisations <topic-authorization>`"

# fdf32327aeea460fba2fa3de455439ec
#: ../../topics/auth/index.txt:82
msgid ":ref:`Authentication in web requests <auth-web-requests>`"
msgstr ":ref:`Authentification dans les requêtes Web <auth-web-requests>`"

# 6ac92e8350af45a5bd4cb4f8c182617f
#: ../../topics/auth/index.txt:83
msgid ":ref:`Managing users in the admin <auth-admin>`"
msgstr ":ref:`Gestion des utilisateurs dans le site d'administration <auth-admin>`"

# 0fcd2758404c4488880a119a6eccc74b
#: ../../topics/auth/index.txt:85
msgid ""
":doc:`API reference for the default implementation </ref/contrib/auth>`"
msgstr ":doc:`Référence de l'API de l'implémentation par défaut </ref/contrib/auth>`"

# 1e95058ad4d8452f96124592521fecec
#: ../../topics/auth/index.txt:87
msgid ":doc:`Customizing Users and authentication <customizing>`"
msgstr ":doc:`Personnalisation des utilisateurs et de l'authentification <customizing>`"

# 7809ce74182a4682b5171f8414beadcc
#: ../../topics/auth/index.txt:89
msgid ":doc:`Password management in Django <passwords>`"
msgstr ":doc:`Gestion des mots de passe dans Django <passwords>`"

# 077061dacc1f41fd9fc605ebbe02c9c9
#: ../../topics/auth/passwords.txt:3
msgid "Password management in Django"
msgstr "Gestion des mots de passe dans Django"

# f0ff308dc42b47dabe8ce24167744ad7
#: ../../topics/auth/passwords.txt:5
msgid ""
"Password management is something that should generally not be reinvented "
"unnecessarily, and Django endeavors to provide a secure and flexible set of "
"tools for managing user passwords. This document describes how Django stores"
" passwords, how the storage hashing can be configured, and some utilities to"
" work with hashed passwords."
msgstr "La gestion des mots de passe est quelque chose qui ne devrait généralement pas être réinventé sans raison, et Django s'efforce de fournir un ensemble d'outils sécurisés et souples pour gérer les mots de passe des utilisateurs. Ce document présente la façon dont Django stocke les mots de passe, la configuration possible du hachage avant stockage et certains utilitaires pour manipuler les empreintes de mots de passe. "

# dd885df188df4e2fb133797877295bdd
#: ../../topics/auth/passwords.txt:14
msgid "How Django stores passwords"
msgstr "Stockage des mots de passe par Django"

# 80ac9aa62ffa4d6b836a6ddd8701cd04
#: ../../topics/auth/passwords.txt:16
msgid ""
"Django provides a flexible password storage system and uses PBKDF2 by "
"default."
msgstr "Django fournit un système de stockage de mots de passe souple et emploie PBKDF2 par défaut."

# f8127fa9b1614e24a0f83601ff025598
#: ../../topics/auth/passwords.txt:18
msgid ""
"The :attr:`~django.contrib.auth.models.User.password` attribute of a "
":class:`~django.contrib.auth.models.User` object is a string in this "
"format::"
msgstr "L'attribut :attr:`~django.contrib.auth.models.User.password` d'un objet :class:`~django.contrib.auth.models.User` est une chaîne dans ce format ::"

# 393af010fbe34e3d9598f4dfdd7f2966
#: ../../topics/auth/passwords.txt:23
msgid ""
"Those are the components used for storing a User's password, separated by "
"the dollar-sign character and consist of: the hashing algorithm, the number "
"of algorithm iterations (work factor), the random salt, and the resulting "
"password hash.  The algorithm is one of a number of one-way hashing or "
"password storage algorithms Django can use; see below. Iterations describe "
"the number of times the algorithm is run over the hash. Salt is the random "
"seed used and the hash is the result of the one-way function."
msgstr "Il s'agit des composants utilisés pour stocker le mot de passe d'un utilisateur, séparés par le caractère dollar et formés de : l'algorithme de hachage, le nombre d'itérations de l'algorithme (facteur travail), le sel aléatoire et l'empreinte de mot de passe résultante. L'algorithme correspond à l'un des algorithmes de stockage de mot de passe ou de hachage à sens unique que Django peut utiliser ; voir ci-dessous. Les itérations indiquent le nombre de fois que l'algorithme traite l'empreinte numérique. Le sel est la graine aléatoire utilisée et l'empreinte est le résultat de la fonction à sens unique."

# 9ba3edc8d5284a97b7ab0a72c4fd629f
#: ../../topics/auth/passwords.txt:31
msgid ""
"By default, Django uses the PBKDF2_ algorithm with a SHA256 hash, a password"
" stretching mechanism recommended by NIST_. This should be sufficient for "
"most users: it's quite secure, requiring massive amounts of computing time "
"to break."
msgstr "Par défaut, Django utilise l'algorithme PBKDF2_ avec une fonction de hachage SHA256, un mécanisme d'étirement de mot de passe recommandé par le NIST_. Cela devrait suffire pour la plupart des utilisateurs : c'est un algorithme bien sécurisé et exigeant d'énormes quantités de puissance de calcul pour être cassé."

# aedc9f146b1b4e51b18b0e4361c28a6a
#: ../../topics/auth/passwords.txt:36
msgid ""
"However, depending on your requirements, you may choose a different "
"algorithm, or even use a custom algorithm to match your specific security "
"situation. Again, most users shouldn't need to do this -- if you're not "
"sure, you probably don't.  If you do, please read on:"
msgstr "Cependant, en fonction de vos exigences, vous pouvez choisir un algorithme différent ou même utiliser un algorithme qui vous est propre pour répondre à votre situation spécifique en matière de sécurité. Encore une fois, la plupart des utilisateurs n'auront pas à le faire et si vous n'êtes pas sûr, c'est que vous n'en avez probablement pas besoin. Si vous en avez besoin, continuez cette lecture…"

# be1922315ad044bb97132896fa17a53f
#: ../../topics/auth/passwords.txt:41
msgid ""
"Django chooses the algorithm to use by consulting the "
":setting:`PASSWORD_HASHERS` setting. This is a list of hashing algorithm "
"classes that this Django installation supports. The first entry in this list"
" (that is, ``settings.PASSWORD_HASHERS[0]``) will be used to store "
"passwords, and all the other entries are valid hashers that can be used to "
"check existing passwords.  This means that if you want to use a different "
"algorithm, you'll need to modify :setting:`PASSWORD_HASHERS` to list your "
"preferred algorithm first in the list."
msgstr "Django choisit l'algorithme à utiliser en consultant le réglage :setting:`PASSWORD_HASHERS`. Il s'agit d'une liste de classes d'algorithme de hachage que l'installation de Django peut prendre en charge. La première occurrence de cette liste (c'est-à-dire ``settings.PASSWORD_HASHERS[0]``) sera utilisée pour stocker les mots de passe et toutes les autres occurrences correspondent à des méthodes de hachage valides pouvant être utilisées pour vérifier des mots de passe existants. Cela signifie que si vous souhaitez utiliser un algorithme différent, il faudra modifier :setting:`PASSWORD_HASHERS` afin que votre algorithme préféré figure en premier dans la liste."

# 10fb94b296eb48538de62517e7617f8e
#: ../../topics/auth/passwords.txt:50
msgid "The default for :setting:`PASSWORD_HASHERS` is::"
msgstr "La valeur par défaut de :setting:`PASSWORD_HASHERS` est ::"

# 6d5aff16dc244e6fbeac65c4ccc9e09a
#: ../../topics/auth/passwords.txt:62
msgid ""
"This means that Django will use PBKDF2_ to store all passwords, but will "
"support checking passwords stored with PBKDF2SHA1, bcrypt_, SHA1_, etc. The "
"next few sections describe a couple of common ways advanced users may want "
"to modify this setting."
msgstr "Cela signifie que Django utilisera PBKDF2_ pour stocker tous les mots de passe, mais qu'il acceptera de vérifier des mots de passe stockés avec les algorithmes PBKDF2SHA1, bcrypt_, SHA1_, etc. Les sections qui suivent présentent quelques manières fréquentes que les utilisateurs avancés peuvent utiliser pour modifier ce réglage."

# 25b7bd11e724403981ca9e7fe96efaea
#: ../../topics/auth/passwords.txt:70
msgid "Using bcrypt with Django"
msgstr "Utilisation de bcrypt avec Django"

# 0ed2ed2aafc84ba5befa0c2e5b78022c
#: ../../topics/auth/passwords.txt:72
msgid ""
"Bcrypt_ is a popular password storage algorithm that's specifically designed"
" for long-term password storage. It's not the default used by Django since "
"it requires the use of third-party libraries, but since many people may want"
" to use it Django supports bcrypt with minimal effort."
msgstr "Bcrypt_ est un algorithme de stockage de mot de passe répandu qui est spécifiquement conçu comme stockage de mots de passe à long terme. Ce n'est pas l'algorithme par défaut de Django car il dépend de l'installation de bibliothèques tierces. Mais comme il y a beaucoup d'utilisateurs potentiels, Django prend en charge bcrypt avec un minimum d'effort."

# 28f7394e19a344259c7f0a612582dbfd
#: ../../topics/auth/passwords.txt:77
msgid "To use Bcrypt as your default storage algorithm, do the following:"
msgstr "Pour utiliser Bcrypt comme algorithme de stockage par défaut, faites ceci :"

# f4d43051322f4051b23f8259644faedf
#: ../../topics/auth/passwords.txt:79
msgid ""
"Install the `bcrypt library`_ (probably by running ``sudo pip install "
"bcrypt``, or downloading the library and installing it with ``python "
"setup.py install``)."
msgstr "Installez la bibliothèque `bcrypt`_ (par exemple avec ``sudo pip install bcrypt`` ou en téléchargeant la bibliothèque et en l'installant avec ``python setup.py install``)."

# cbfa4ad62a854af09c7be3dff255c32e
#: ../../topics/auth/passwords.txt:83
msgid ""
"Modify :setting:`PASSWORD_HASHERS` to list ``BCryptSHA256PasswordHasher`` "
"first. That is, in your settings file, you'd put::"
msgstr "Modifiez :setting:`PASSWORD_HASHERS` pour que ``BCryptSHA256PasswordHasher`` apparaisse en premier. Voici ce qui devrait apparaître dans votre fichier de réglages ::"

# 0f8f9e922376408fb66f8fa15242405c
#: ../../topics/auth/passwords.txt:96
msgid ""
"(You need to keep the other entries in this list, or else Django won't be "
"able to upgrade passwords; see below)."
msgstr "(Vous devez conserver les autres éléments de la liste, sinon Django ne pourra pas mettre à jour les mots de passe existants ; voir ci-dessous)."

# bd77b00ca4c2421a95fdd41ee4f3b620
#: ../../topics/auth/passwords.txt:99
msgid ""
"That's it -- now your Django install will use Bcrypt as the default storage "
"algorithm."
msgstr "Et voilà, votre installation Django utilise dorénavant Bcrypt comme algorithme de stockage par défaut."

# 68c989e6e79e4ce5a3d702f21569ac8f
#: ../../topics/auth/passwords.txt:102
msgid "Password truncation with BCryptPasswordHasher"
msgstr "Troncature de mot de passe avec "

# 670fe4359adf4c17a4a90175f4f265f1
#: ../../topics/auth/passwords.txt:104
msgid ""
"The designers of bcrypt truncate all passwords at 72 characters which means "
"that ``bcrypt(password_with_100_chars) == "
"bcrypt(password_with_100_chars[:72])``. The original "
"``BCryptPasswordHasher`` does not have any special handling and thus is also"
" subject to this hidden password length limit. "
"``BCryptSHA256PasswordHasher`` fixes this by first first hashing the "
"password using sha256. This prevents the password truncation and so should "
"be preferred over the ``BCryptPasswordHasher``. The practical ramification "
"of this truncation is pretty marginal as the average user does not have a "
"password greater than 72 characters in length and even being truncated at 72"
" the compute powered required to brute force bcrypt in any useful amount of "
"time is still astronomical. Nonetheless, we recommend you use "
"``BCryptSHA256PasswordHasher`` anyway on the principle of \"better safe than"
" sorry\"."
msgstr "Les concepteurs de bcrypt tronquent tous les mots de passe à 72 caractères, ce qui signifie que ``bcrypt(motdepasse_de_100_caracteres) == bcrypt(motdepasse_de_100_caracteres[:72])``. La classe ``BCryptPasswordHasher`` originale n'effectue pas d'opération particulière et est donc également sujet à cette limite cachée de longueur de mot de passe. ``BCryptSHA256PasswordHasher`` corrige cela en hachant préalablement le mot de passe avec sha256. Ceci empêche que le mot de passe soit tronqué et cette classe devrait donc être privilégiée. La conséquence pratique de cette troncature est très marginale dans la mesure où la longueur moyenne des mots de passe est bien en-dessous de 72 caractères et que même avec cette limite de 72 caractères, la puissance de calcul nécessaire pour casser une telle empreinte bcrypt par force brute dans un temps raisonnable est encore astronomique. Néanmoins, nous vous recommandons d'utiliser ``BCryptSHA256PasswordHasher`` de toute façon sur le principe de « deux précautions valent mieux qu'une »."

# 513d07f2777e45a18180b97f8ae8348b
#: ../../topics/auth/passwords.txt:118
msgid "Other bcrypt implementations"
msgstr "Autres implémentations de bcrypt"

# e1717ebbec6b4fd6904f2f5bcb978ab8
#: ../../topics/auth/passwords.txt:120
msgid ""
"There are several other implementations that allow bcrypt to be used with "
"Django. Django's bcrypt support is NOT directly compatible with these. To "
"upgrade, you will need to modify the hashes in your database to be in the "
"form ``bcrypt$(raw bcrypt output)``. For example: "
"``bcrypt$$2a$12$NT0I31Sa7ihGEWpka9ASYrEFkhuTNeBQ2xfZskIiiJeyFXhRgS.Sy``."
msgstr "Il existe plusieurs autres implémentations permettant d'utiliser bcrypt avec Django. La prise en charge de bcrypt par Django n'est PAS directement compatible avec ces variantes. Pour utiliser l'une de ces variantes, vous devrez modifier les empreintes dans votre base de données pour qu'elles correspondent à la forme ``bcrypt$(sortie bcrypt brute)``. Par exemple : ``bcrypt$$2a$12$NT0I31Sa7ihGEWpka9ASYrEFkhuTNeBQ2xfZskIiiJeyFXhRgS.Sy``."

# 1850bcc4c049465ea7401725a40fc7ba
#: ../../topics/auth/passwords.txt:130
msgid "Increasing the work factor"
msgstr "Augmentation du facteur travail"

# 553a4eaaa312485fa3dc9b394fa92bda
#: ../../topics/auth/passwords.txt:132
msgid ""
"The PBKDF2 and bcrypt algorithms use a number of iterations or rounds of "
"hashing. This deliberately slows down attackers, making attacks against "
"hashed passwords harder. However, as computing power increases, the number "
"of iterations needs to be increased. We've chosen a reasonable default (and "
"will increase it with each release of Django), but you may wish to tune it "
"up or down, depending on your security needs and available processing power."
" To do so, you'll subclass the appropriate algorithm and override the "
"``iterations`` parameters. For example, to increase the number of iterations"
" used by the default PBKDF2 algorithm:"
msgstr "Les algorithmes PBKDF2 et bcrypt utilisent un certain nombre d'itérations ou de passes de hachage. Cela ralentit volontairement les attaques, rendant plus difficiles les attaques contre les empreintes de mots de passe. Cependant, au fur et à mesure de l'augmentation des puissances de calcul, le nombre d'itérations nécessaires augmente également. Nous avons opté pour une valeur par défaut raisonnable (et nous l'augmenterons avec chaque nouvelle publication de Django), mais vous pouvez l'augmenter ou la réduire en fonction de vos besoins de sécurité et de vos capacités en puissance de calcul. Pour cela, vous pouvez créer une sous-classe de l'algorithme approprié et surcharger le paramètre ``iterations``. Par exemple, pour augmenter le nombre d'itérations utilisé par l'algorithme par défaut PBKDF2 :"

# 376cc8a519e94f169b62a16c0e30acab
#: ../../topics/auth/passwords.txt:142
msgid ""
"Create a subclass of ``django.contrib.auth.hashers.PBKDF2PasswordHasher``::"
msgstr "Créez une sous-classe de ``django.contrib.auth.hashers.PBKDF2PasswordHasher``::"

# b32b882490da43689f67b0c53ccfcd58
#: ../../topics/auth/passwords.txt:152
msgid ""
"Save this somewhere in your project. For example, you might put this in a "
"file like ``myproject/hashers.py``."
msgstr "Enregistrez-la quelque part dans votre projet. Par exemple, vous pourriez la placer dans un fichier nommé ``myproject/hashers.py``."

# a26cc170ec5344a59b0088317bc846f0
#: ../../topics/auth/passwords.txt:155
msgid ""
"Add your new hasher as the first entry in :setting:`PASSWORD_HASHERS`::"
msgstr "Ajoutez votre nouvelle classe de hachage en premier dans :setting:`PASSWORD_HASHERS`::"

# 147fd61344fd490d9d625a6af9a1cd46
#: ../../topics/auth/passwords.txt:169
msgid ""
"That's it -- now your Django install will use more iterations when it stores"
" passwords using PBKDF2."
msgstr "Et voilà, votre installation Django utilise dorénavant plus d'itérations lorsqu'elle stockera les mots de passe avec PBKDF2."

# d274aab9458546b3acb533028614f0f3
#: ../../topics/auth/passwords.txt:175
msgid "Password upgrading"
msgstr "Mise à niveau des mots de passe"

# 024e0b400a00473897e4b75f311c3005
#: ../../topics/auth/passwords.txt:177
msgid ""
"When users log in, if their passwords are stored with anything other than "
"the preferred algorithm, Django will automatically upgrade the algorithm to "
"the preferred one. This means that old installs of Django will get "
"automatically more secure as users log in, and it also means that you can "
"switch to new (and better) storage algorithms as they get invented."
msgstr "Lorsque les utilisateurs se connectent, si leur mot de passe est stocké avec un autre algorithme que celui qui est défini comme le principal, Django met automatiquement à jour l'algorithme pour utiliser ce dernier. Cela signifie que d'anciennes installations de Django deviennent automatiquement plus sécurisées au fur et à mesure que les utilisateurs se connectent, et cela signifie également que vous pouvez passer à de nouveaux (et meilleurs) algorithmes de stockage au moment où ils deviennent disponibles."

# fdd65032b44a4499859f92178a88ab04
#: ../../topics/auth/passwords.txt:183
msgid ""
"However, Django can only upgrade passwords that use algorithms mentioned in "
":setting:`PASSWORD_HASHERS`, so as you upgrade to new systems you should "
"make sure never to *remove* entries from this list. If you do, users using "
"un- mentioned algorithms won't be able to upgrade."
msgstr "Cependant, Django peut uniquement mettre à jour les mots de passe utilisant des algorithmes mentionnés dans :setting:`PASSWORD_HASHERS`, il est donc important de ne pas *enlever* les anciens algorithmes de cette liste quand vous passez à de nouveaux systèmes. Si vous le faites, les utilisateurs utilisant des algorithmes non mentionnés ne verront pas leur mot de passe mis à jour."

# e8527bef7615478bb59634b1d715a9b7
#: ../../topics/auth/passwords.txt:190
msgid "Passwords will be upgraded when changing the PBKDF2 iteration count."
msgstr "Les mots de passe seront mis à jour lors du changement du nombre d'itérations de PBKDF2."

# 2f776db2512f4425afec27e2dd49aeaa
#: ../../topics/auth/passwords.txt:200
msgid "Manually managing a user's password"
msgstr "Gestion manuelle des mots de passe"

# 6d28126f828449959e0ceff69691fe96
#: ../../topics/auth/passwords.txt:204
msgid ""
"The :mod:`django.contrib.auth.hashers` module provides a set of functions to"
" create and validate hashed password. You can use them independently from "
"the ``User`` model."
msgstr "Le module :mod:`django.contrib.auth.hashers` fournit un ensemble de fonctions pour créer et valider les empreintes de mots de passe. Vous pouvez les utiliser indépendamment du modèle ``User``."

# d9c50298d96a4092b4da58643d5bca64
#: ../../topics/auth/passwords.txt:210
msgid ""
"If you'd like to manually authenticate a user by comparing a plain-text "
"password to the hashed password in the database, use the convenience "
"function :func:`check_password`. It takes two arguments: the plain-text "
"password to check, and the full value of a user's ``password`` field in the "
"database to check against, and returns ``True`` if they match, ``False`` "
"otherwise."
msgstr "Si vous avez besoin d'authentifier manuellement un utilisateur en comparant un mot de passe en clair avec l'empreinte de ce mot de passe en base de données, utilisez la fonction utilitaire :func:`check_password`. Elle accepte deux paramètres : le mot de passe en clair à contrôler et la valeur complète du champ ``password`` d'un utilisateur en base de données comme valeur de comparaison ; la fonction renvoie ``True`` si les valeurs correspondent, sinon ``False``."

# 022ab55666b14d49988400d5f1c2982e
#: ../../topics/auth/passwords.txt:225
msgid ""
"Creates a hashed password in the format used by this application. It takes "
"one mandatory argument: the password in plain-text. Optionally, you can "
"provide a salt and a hashing algorithm to use, if you don't want to use the "
"defaults (first entry of ``PASSWORD_HASHERS`` setting). Currently supported "
"algorithms are: ``'pbkdf2_sha256'``, ``'pbkdf2_sha1'``, ``'bcrypt_sha256'`` "
"(see :ref:`bcrypt_usage`), ``'bcrypt'``, ``'sha1'``, ``'md5'``, "
"``'unsalted_md5'`` (only for backward compatibility) and ``'crypt'`` if you "
"have the ``crypt`` library installed. If the password argument is ``None``, "
"an unusable password is returned (a one that will be never accepted by "
":func:`check_password`)."
msgstr "Crée une empreinte de mot de passe au format utilisé par cette application. Elle demande un paramètre obligatoire : le mot de passe en clair. Il est aussi possible de fournir un sel et un algorithme de hachage à utiliser, si vous ne souhaitez pas utiliser les valeurs par défaut (première ligne du réglage ``PASSWORD_HASHERS``). Les algorithmes actuellement pris en charge sont : ``'pbkdf2_sha256'``, ``'pbkdf2_sha1'``, ``'bcrypt_sha256'`` (voir :ref:`bcrypt_usage`), ``'bcrypt'``, ``'sha1'``, ``'md5'``, ``'unsalted_md5'`` (seulement par rétrocompatibilité) et ``'crypt'`` si la bibliothèque ``crypt`` est installée. Si le paramètre du mot de passe vaut ``None``, un mot de passe inutilisable est renvoyé (un mot de passe qui fera que :func:`check_password` renvoie toujours ``False``) ."

# c4205f8026cc4cfc91255f783c037acc
#: ../../topics/auth/passwords.txt:238
msgid ""
"Checks if the given string is a hashed password that has a chance of being "
"verified against :func:`check_password`."
msgstr "Vérifie que la chaîne indiquée est une empreinte de mot de passe qui a une chance d'être validée par :func:`check_password`."

# 8f977a61d0374d82990d2dc4967480a7
#: ../../topics/cache.txt:3
msgid "Django's cache framework"
msgstr "L'infrastructure de cache dans Django"

# 808c8b4fb52b404090c0b836693095fa
#: ../../topics/cache.txt:5
msgid ""
"A fundamental trade-off in dynamic Web sites is, well, they're dynamic. Each"
" time a user requests a page, the Web server makes all sorts of calculations"
" -- from database queries to template rendering to business logic -- to "
"create the page that your site's visitor sees. This is a lot more expensive,"
" from a processing-overhead perspective, than your standard read-a-file-off-"
"the-filesystem server arrangement."
msgstr "Un site Web crée avec Django est dynamique. Chaque fois qu'un utilisateur demande l'affichage d'une page, le serveur Web effectue toutes sortes d'opérations -- des requêtes de bases de données au rendu des gabarits, en plus de la logique métier de l'application -- afin de créer les pages que vos visiteurs verront. Ces opérations sont bien plus chères en temps de calcul qu'un site Web statique, ou des pages seraient directement lues depuis le système de fichier."

# 37d160a3c6fd406f9792a33ae8d7141b
#: ../../topics/cache.txt:12
msgid ""
"For most Web applications, this overhead isn't a big deal. Most Web "
"applications aren't washingtonpost.com or slashdot.org; they're simply "
"small- to medium-sized sites with so-so traffic. But for medium- to high-"
"traffic sites, it's essential to cut as much overhead as possible."
msgstr "Pour la plupart des applications Web, cette charge de travail n'est pas un problème. En effet, la plupart des sites Web n'ont pas la popularité de slashdot.org ou amazon.com, mais sont simplement des sites petits ou moyen, avec du trafic bien plus humble. En revanche, pour les sites à trafic moyen ou lourd, il est essentiel de réduire la charge de travail du serveur au maximum."

# 2944dd0a49d44b81833d328bd60c6d6e
#: ../../topics/cache.txt:17
msgid "That's where caching comes in."
msgstr "C'est là que le cache intervient."

# 8168560c45984cb0ae9521abeccfa81e
#: ../../topics/cache.txt:19
msgid ""
"To cache something is to save the result of an expensive calculation so that"
" you don't have to perform the calculation next time. Here's some pseudocode"
" explaining how this would work for a dynamically generated Web page::"
msgstr "Mettre quelque chose \"en cache\" est le fait de sauvegarder le résultat d'une opération chère en temps de calcul, afin de ne pas avoir à ré-effectuer cette opération la fois suivante."

# 3e9b2b4ddf384a60b4dd8f3aad2144ee
#: ../../topics/cache.txt:31
msgid ""
"Django comes with a robust cache system that lets you save dynamic pages so "
"they don't have to be calculated for each request. For convenience, Django "
"offers different levels of cache granularity: You can cache the output of "
"specific views, you can cache only the pieces that are difficult to produce,"
" or you can cache your entire site."
msgstr "Django mets un système de cache robuste à disposition, qui permet de sauvegarder les pages dynamiques afin d'éviter leur calcul pour chaque requête. Pour plus de souplesse, Django propose différent niveaux de granularité de cache: il est possible de mettre en cache le résultat de vues spécifiques, seulement les parties difficiles à produire, ou l'intégralité de votre site."

# 01153cfde56a48609fdc8986b607c872
#: ../../topics/cache.txt:37
msgid ""
"Django also works well with \"upstream\" caches, such as `Squid <http://www"
".squid-cache.org>`_ and browser-based caches. These are the types of caches "
"that you don't directly control but to which you can provide hints (via HTTP"
" headers) about which parts of your site should be cached, and how."
msgstr "Django fonctionne aussi très bien avec des caches externes tels que `Squid <http://www.squid-cache.org>`_, ainsi que les caches des navigateurs.\nCes types de caches ne sont pas controlés directement par l'application. Il est en revanche possible de leur fournir des indices (via les entêtes HTTP) sur quelles parties de votre site mettre en cache, et comment."

# be5f18a158d04e7dbd5d9941a87a08e2
#: ../../topics/cache.txt:45
msgid "Setting up the cache"
msgstr "Mise en place du cache"

# 736ebb41fb014cf28bca48be151b1525
#: ../../topics/cache.txt:47
msgid ""
"The cache system requires a small amount of setup. Namely, you have to tell "
"it where your cached data should live -- whether in a database, on the "
"filesystem or directly in memory. This is an important decision that affects"
" your cache's performance; yes, some cache types are faster than others."
msgstr "Le système de cache nécessite un peu de mise en place. En particulier, il faut indiquer où les données mises en cache doivent être stockées -- dans une base de données, dans le système de fichiers ou directement en mémoire. C'est une décision importante qui influe sur les performances de votre cache: oui, certains systèmes sont plus rapides que d'autres."

# e5afcba8123146d0bcd9c32017915db1
#: ../../topics/cache.txt:52
msgid ""
"Your cache preference goes in the :setting:`CACHES` setting in your settings"
" file. Here's an explanation of all available values for :setting:`CACHES`."
msgstr "Le choix de votre lieu de stockage de données de cache s'effectue à l'aide de l'entrée :setting:`CACHES` de votre fichier de réglages. Voici les valeurs possibles de :setting:`CACHES`."

# 0f78ab2c63344e8b956268edcb92271d
#: ../../topics/cache.txt:59
msgid "Memcached"
msgstr "Memcached"

# 90a0fb2ecc084778b6afe4cf98e211f9
#: ../../topics/cache.txt:61
msgid ""
"By far the fastest, most efficient type of cache available to Django, "
"Memcached__ is an entirely memory-based cache framework originally developed"
" to handle high loads at LiveJournal.com and subsequently open-sourced by "
"Danga Interactive.  It is used by sites such as Facebook and Wikipedia to "
"reduce database access and dramatically increase site performance."
msgstr "De loin le plus rapide et le plus efficace des types de caches disponibles avec Django, Memcached__ est un système entièrement basé en mémoire, développé à l'origine pour soutenir la charge de travail élevée de livejournal.com, et dont la source a été par la suite ouverte par Danga Interactive. De gros sites tels que Facebook et Wikipedia l'utilisent pour réduire le nombre d'accès à leurs bases de données et accroître les performances de leurs sites en général."

# 42e3fe32064344838c1784a84b2fd293
#: ../../topics/cache.txt:69
msgid ""
"Memcached runs as a daemon and is allotted a specified amount of RAM. All it"
" does is provide a fast interface for adding, retrieving and deleting "
"arbitrary data in the cache.  All data is stored directly in memory, so "
"there's no overhead of database or filesystem usage."
msgstr ""

# c93db87d4bba4003a41da1b883158e88
#: ../../topics/cache.txt:74
msgid ""
"After installing Memcached itself, you'll need to install a memcached "
"binding. There are several python memcached bindings available; the two most"
" common are `python-memcached`_ and `pylibmc`_."
msgstr ""

# 30515e3858094873bf1122e36d1d75e8
#: ../../topics/cache.txt:81
msgid "To use Memcached with Django:"
msgstr ""

# 12f12889f2794c22a5a1c7084dcf38eb
#: ../../topics/cache.txt:83
msgid ""
"Set :setting:`BACKEND <CACHES-BACKEND>` to "
"``django.core.cache.backends.memcached.MemcachedCache`` or "
"``django.core.cache.backends.memcached.PyLibMCCache`` (depending on your "
"chosen memcached binding)"
msgstr ""

# 668c1ebcbc7947c7a05f9c3df79bd22c
#: ../../topics/cache.txt:88
msgid ""
"Set :setting:`LOCATION <CACHES-LOCATION>` to ``ip:port`` values, where "
"``ip`` is the IP address of the Memcached daemon and ``port`` is the port on"
" which Memcached is running, or to a ``unix:path`` value, where ``path`` is "
"the path to a Memcached Unix socket file."
msgstr ""

# 31d4eb12f741485a99876b6ae110013e
#: ../../topics/cache.txt:93
msgid ""
"In this example, Memcached is running on localhost (127.0.0.1) port 11211, "
"using the ``python-memcached`` binding::"
msgstr ""

# 1f885f99741e417e803721df94186c28
#: ../../topics/cache.txt:103
msgid ""
"In this example, Memcached is available through a local Unix socket file "
":file:`/tmp/memcached.sock` using the ``python-memcached`` binding::"
msgstr ""

# 0d3ad0e6f80744e1824dc9664e25d732
#: ../../topics/cache.txt:113
msgid ""
"One excellent feature of Memcached is its ability to share cache over "
"multiple servers. This means you can run Memcached daemons on multiple "
"machines, and the program will treat the group of machines as a *single* "
"cache, without the need to duplicate cache values on each machine. To take "
"advantage of this feature, include all server addresses in "
":setting:`LOCATION <CACHES-LOCATION>`, either separated by semicolons or as "
"a list."
msgstr ""

# 3a21a46012bd4da68dedfe167cba595a
#: ../../topics/cache.txt:120
msgid ""
"In this example, the cache is shared over Memcached instances running on IP "
"address 172.19.26.240 and 172.19.26.242, both on port 11211::"
msgstr ""

# dca9b80405c144529389932d2f39268b
#: ../../topics/cache.txt:133
msgid ""
"In the following example, the cache is shared over Memcached instances "
"running on the IP addresses 172.19.26.240 (port 11211), 172.19.26.242 (port "
"11212), and 172.19.26.244 (port 11213)::"
msgstr ""

# aed4d6127ed44ecb86dbe333ad25be03
#: ../../topics/cache.txt:148
msgid ""
"A final point about Memcached is that memory-based caching has one "
"disadvantage: Because the cached data is stored in memory, the data will be "
"lost if your server crashes. Clearly, memory isn't intended for permanent "
"data storage, so don't rely on memory-based caching as your only data "
"storage. Without a doubt, *none* of the Django caching backends should be "
"used for permanent storage -- they're all intended to be solutions for "
"caching, not storage -- but we point this out here because memory-based "
"caching is particularly temporary."
msgstr ""

# c4cb687bfb21403da03c03f504492098
#: ../../topics/cache.txt:160
msgid "Database caching"
msgstr ""

# 8904205da4854a6391977d21266ab6c5
#: ../../topics/cache.txt:162
msgid ""
"To use a database table as your cache backend, first create a cache table in"
" your database by running this command::"
msgstr ""

# c9583da008674ca9a3cc7faec8d98438
#: ../../topics/cache.txt:167
msgid ""
"...where ``[cache_table_name]`` is the name of the database table to create."
" (This name can be whatever you want, as long as it's a valid table name "
"that's not already being used in your database.) This command creates a "
"single table in your database that is in the proper format that Django's "
"database-cache system expects."
msgstr ""

# e5dffec4f9fe4b0aa23159a91eaa93f4
#: ../../topics/cache.txt:173
msgid ""
"Once you've created that database table, set your :setting:`BACKEND <CACHES-"
"BACKEND>` setting to ``\"django.core.cache.backends.db.DatabaseCache\"``, "
"and :setting:`LOCATION <CACHES-LOCATION>` to ``tablename`` -- the name of "
"the database table. In this example, the cache table's name is "
"``my_cache_table``::"
msgstr ""

# e66ad00c19c04cdd886d14c0c4049852
#: ../../topics/cache.txt:187
msgid ""
"The database caching backend uses the same database as specified in your "
"settings file. You can't use a different database backend for your cache "
"table."
msgstr ""

# 25baedd249a841098d3dd84197098cc3
#: ../../topics/cache.txt:190
msgid ""
"Database caching works best if you've got a fast, well-indexed database "
"server."
msgstr ""

# 8b31091c130849608fc4e9b243e22cf2
#: ../../topics/cache.txt:193
msgid "Database caching and multiple databases"
msgstr ""

# 6558a42be8294239812212ac96222055
#: ../../topics/cache.txt:195
msgid ""
"If you use database caching with multiple databases, you'll also need to set"
" up routing instructions for your database cache table. For the purposes of "
"routing, the database cache table appears as a model named ``CacheEntry``, "
"in an application named ``django_cache``. This model won't appear in the "
"models cache, but the model details can be used for routing purposes."
msgstr ""

# 885127630f10470c88a04f80a0090313
#: ../../topics/cache.txt:202
msgid ""
"For example, the following router would direct all cache read operations to "
"``cache_slave``, and all write operations to ``cache_master``. The cache "
"table will only be synchronized onto ``cache_master``::"
msgstr ""

# 735a56b12bb0488393c4027b3b0fe956
#: ../../topics/cache.txt:228
msgid ""
"If you don't specify routing directions for the database cache model, the "
"cache backend will use the ``default`` database."
msgstr ""

# 2fcd27fa5d9042c9ac8e644d8aa8cf9e
#: ../../topics/cache.txt:231
msgid ""
"Of course, if you don't use the database cache backend, you don't need to "
"worry about providing routing instructions for the database cache model."
msgstr ""

# 12f750a1176742b6be7d8069e9693343
#: ../../topics/cache.txt:236
msgid "Filesystem caching"
msgstr ""

# 83e8da662d2c4ea3bd5da7b6917e3c16
#: ../../topics/cache.txt:238
msgid ""
"To store cached items on a filesystem, use "
"``\"django.core.cache.backends.filebased.FileBasedCache\"`` for "
":setting:`BACKEND <CACHES-BACKEND>`. For example, to store cached data in "
"``/var/tmp/django_cache``, use this setting::"
msgstr ""

# 46f61b3bc10548b5a9afe7241c506830
#: ../../topics/cache.txt:251
msgid ""
"If you're on Windows, put the drive letter at the beginning of the path, "
"like this::"
msgstr ""

# 3f78c347680c47c2bc5547065ebc079e
#: ../../topics/cache.txt:261
msgid ""
"The directory path should be absolute -- that is, it should start at the "
"root of your filesystem. It doesn't matter whether you put a slash at the "
"end of the setting."
msgstr ""

# 8c2b571c8bb5478c8c4a57e7c986d44f
#: ../../topics/cache.txt:265
msgid ""
"Make sure the directory pointed-to by this setting exists and is readable "
"and writable by the system user under which your Web server runs. Continuing"
" the above example, if your server runs as the user ``apache``, make sure "
"the directory ``/var/tmp/django_cache`` exists and is readable and writable "
"by the user ``apache``."
msgstr ""

# 053ae6a0aeb24abdac68f768d8c1dda9
#: ../../topics/cache.txt:271
msgid ""
"Each cache value will be stored as a separate file whose contents are the "
"cache data saved in a serialized (\"pickled\") format, using Python's "
"``pickle`` module. Each file's name is the cache key, escaped for safe "
"filesystem use."
msgstr ""

# b65acd3f7ffd496395ca56cd8e75d750
#: ../../topics/cache.txt:276
msgid "Local-memory caching"
msgstr ""

# 88a73c323043482993cc4a6fbc2ca4d8
#: ../../topics/cache.txt:278
msgid ""
"This is the default cache if another is not specified in your settings file."
" If you want the speed advantages of in-memory caching but don't have the "
"capability of running Memcached, consider the local-memory cache backend. "
"This cache is multi-process and thread-safe. To use it, set "
":setting:`BACKEND <CACHES-BACKEND>` to "
"``\"django.core.cache.backends.locmem.LocMemCache\"``. For example::"
msgstr ""

# 6ec7e1d77da34caaa6f1798c3b6c0dd7
#: ../../topics/cache.txt:291
msgid ""
"The cache :setting:`LOCATION <CACHES-LOCATION>` is used to identify "
"individual memory stores. If you only have one locmem cache, you can omit "
"the :setting:`LOCATION <CACHES-LOCATION>`; however, if you have more than "
"one local memory cache, you will need to assign a name to at least one of "
"them in order to keep them separate."
msgstr ""

# 4a6d93412d2c4ba3bff285d1a7d8aed6
#: ../../topics/cache.txt:297
msgid ""
"Note that each process will have its own private cache instance, which means"
" no cross-process caching is possible. This obviously also means the local "
"memory cache isn't particularly memory-efficient, so it's probably not a "
"good choice for production environments. It's nice for development."
msgstr ""

# d3c1b119a95b406c9f7e7db2b0d1a0a7
#: ../../topics/cache.txt:303
msgid "Dummy caching (for development)"
msgstr ""

# e708b3bcbe054001aeb3fed0d2ede795
#: ../../topics/cache.txt:305
msgid ""
"Finally, Django comes with a \"dummy\" cache that doesn't actually cache -- "
"it just implements the cache interface without doing anything."
msgstr ""

# 8acb7427ffeb486a9150d5c1fd23d035
#: ../../topics/cache.txt:308
msgid ""
"This is useful if you have a production site that uses heavy-duty caching in"
" various places but a development/test environment where you don't want to "
"cache and don't want to have to change your code to special-case the latter."
" To activate dummy caching, set :setting:`BACKEND <CACHES-BACKEND>` like "
"so::"
msgstr ""

# f0d0c812b4aa4cf3b90a46b392fa5a04
#: ../../topics/cache.txt:320
msgid "Using a custom cache backend"
msgstr ""

# 266527cd74234da4858f59e997327603
#: ../../topics/cache.txt:322
msgid ""
"While Django includes support for a number of cache backends out-of-the-box,"
" sometimes you might want to use a customized cache backend. To use an "
"external cache backend with Django, use the Python import path as the "
":setting:`BACKEND <CACHES-BACKEND>` of the :setting:`CACHES` setting, like "
"so::"
msgstr ""

# 9828a0684dbc4ac2b71970e35f2f94eb
#: ../../topics/cache.txt:333
msgid ""
"If you're building your own backend, you can use the standard cache backends"
" as reference implementations. You'll find the code in the "
"``django/core/cache/backends/`` directory of the Django source."
msgstr ""

# 4ac4a587e46c466697bc9492cbd4e09d
#: ../../topics/cache.txt:337
msgid ""
"Note: Without a really compelling reason, such as a host that doesn't "
"support them, you should stick to the cache backends included with Django. "
"They've been well-tested and are easy to use."
msgstr ""

# 1da1c5b5b7324fffbcdb24df208a892b
#: ../../topics/cache.txt:342
msgid "Cache arguments"
msgstr ""

# 3941be11b96b47aa81548371103d97b0
#: ../../topics/cache.txt:344
msgid ""
"Each cache backend can be given additional arguments to control caching "
"behavior. These arguments are provided as additional keys in the "
":setting:`CACHES` setting. Valid arguments are as follows:"
msgstr ""

# 8954775fc98f4fcc8976ab7de36277f5
#: ../../topics/cache.txt:348
msgid ""
":setting:`TIMEOUT <CACHES-TIMEOUT>`: The default timeout, in seconds, to use"
" for the cache. This argument defaults to ``300`` seconds (5 minutes)."
msgstr ""

# 901f225ac7d84f7ca7c008d50648bed8
#: ../../topics/cache.txt:352
msgid ""
":setting:`OPTIONS <CACHES-OPTIONS>`: Any options that should be passed to "
"the cache backend. The list of valid options will vary with each backend, "
"and cache backends backed by a third-party library will pass their options "
"directly to the underlying cache library."
msgstr ""

# a6919b3d94914835a898ebc3938f38ba
#: ../../topics/cache.txt:357
msgid ""
"Cache backends that implement their own culling strategy (i.e., the "
"``locmem``, ``filesystem`` and ``database`` backends) will honor the "
"following options:"
msgstr ""

# ee8e7b30a58c409aa69a7b12a17ad72a
#: ../../topics/cache.txt:361
msgid ""
"``MAX_ENTRIES``: The maximum number of entries allowed in the cache before "
"old values are deleted. This argument defaults to ``300``."
msgstr ""

# de7bb99baa094fd4b79dd8dd364dd9d9
#: ../../topics/cache.txt:365
msgid ""
"``CULL_FREQUENCY``: The fraction of entries that are culled when "
"``MAX_ENTRIES`` is reached. The actual ratio is ``1 / CULL_FREQUENCY``, so "
"set ``CULL_FREQUENCY`` to ``2`` to cull half the entries when "
"``MAX_ENTRIES`` is reached. This argument should be an integer and defaults "
"to ``3``."
msgstr ""

# 11c647f627ff497d815c565a03aa6d19
#: ../../topics/cache.txt:371
msgid ""
"A value of ``0`` for ``CULL_FREQUENCY`` means that the entire cache will be "
"dumped when ``MAX_ENTRIES`` is reached. On some backends (``database`` in "
"particular) this makes culling *much* faster at the expense of more cache "
"misses."
msgstr ""

# c3ce40db25334cdda85f09351c0323b6
#: ../../topics/cache.txt:376
msgid ""
":setting:`KEY_PREFIX <CACHES-KEY_PREFIX>`: A string that will be "
"automatically included (prepended by default) to all cache keys used by the "
"Django server."
msgstr ""

# 6d94e8561ed844dda38422816c8a1a56
#: ../../topics/cache.txt:380
msgid ""
"See the :ref:`cache documentation <cache_key_prefixing>` for more "
"information."
msgstr "Consultez la :ref:`documentation du cache <cache_key_prefixing>` pour plus d'informations."

# 4b25951c3e5c4e429be1437586aaf0f0
#: ../../topics/cache.txt:383
msgid ""
":setting:`VERSION <CACHES-VERSION>`: The default version number for cache "
"keys generated by the Django server."
msgstr ""

# 8877c37382484adab892bf51142ee9d3
#: ../../topics/cache.txt:386
msgid ""
"See the :ref:`cache documentation <cache_versioning>` for more information."
msgstr "Consultez la :ref:`documentation du cache <cache_versioning>` pour plus d'informations."

# a2d44d8e689342409a863d87082a990b
#: ../../topics/cache.txt:389
msgid ""
":setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>` A string containing a dotted "
"path to a function that defines how to compose a prefix, version and key "
"into a final cache key."
msgstr ""

# 426d1a27cdac4d14a847979f08df4021
#: ../../topics/cache.txt:393
msgid ""
"See the :ref:`cache documentation <cache_key_transformation>` for more "
"information."
msgstr "Consultez la :ref:`documentation du cache <cache_key_transformation>` pour plus d'informations."

# 82864778aebf4b74888860d0cfe9f82a
#: ../../topics/cache.txt:396
msgid ""
"In this example, a filesystem backend is being configured with a timeout of "
"60 seconds, and a maximum capacity of 1000 items::"
msgstr ""

# c0c648a7ce7d4fddbbc942b6fbd07edf
#: ../../topics/cache.txt:410
msgid ""
"Invalid arguments are silently ignored, as are invalid values of known "
"arguments."
msgstr ""

# 7db9c19c88574bdbaa877f2518ecd838
#: ../../topics/cache.txt:414
msgid "The per-site cache"
msgstr ""

# a6ef16497e2740d1937b184914d126ae
#: ../../topics/cache.txt:416
msgid ""
"Once the cache is set up, the simplest way to use caching is to cache your "
"entire site. You'll need to add "
"``'django.middleware.cache.UpdateCacheMiddleware'`` and "
"``'django.middleware.cache.FetchFromCacheMiddleware'`` to your "
":setting:`MIDDLEWARE_CLASSES` setting, as in this example::"
msgstr ""

# 46a811d66feb4b2abd2df10ea12b44f8
#: ../../topics/cache.txt:430
msgid ""
"No, that's not a typo: the \"update\" middleware must be first in the list, "
"and the \"fetch\" middleware must be last. The details are a bit obscure, "
"but see `Order of MIDDLEWARE_CLASSES`_ below if you'd like the full story."
msgstr ""

# 65723fd718034bd2a7a3f075098d05b3
#: ../../topics/cache.txt:434
msgid ""
"Then, add the following required settings to your Django settings file:"
msgstr ""

# 1492bf3e84864f0e99a6250247fd4752
#: ../../topics/cache.txt:436
msgid ""
":setting:`CACHE_MIDDLEWARE_ALIAS` -- The cache alias to use for storage."
msgstr ""

# a7f728077a844d379a2a8f6932bce3d6
#: ../../topics/cache.txt:437
msgid ""
":setting:`CACHE_MIDDLEWARE_SECONDS` -- The number of seconds each page "
"should be cached."
msgstr ""

# 7f8b73e567a64450b87f02bbc87d14a1
#: ../../topics/cache.txt:439
msgid ""
":setting:`CACHE_MIDDLEWARE_KEY_PREFIX` -- If the cache is shared across "
"multiple sites using the same Django installation, set this to the name of "
"the site, or some other string that is unique to this Django instance, to "
"prevent key collisions. Use an empty string if you don't care."
msgstr ""

# cf56da8c61eb4f3b905bb016d44e0125
#: ../../topics/cache.txt:444
msgid ""
"The cache middleware caches GET and HEAD responses with status 200, where "
"the request and response headers allow. Responses to requests for the same "
"URL with different query parameters are considered to be unique pages and "
"are cached separately. The cache middleware expects that a HEAD request is "
"answered with the same response headers as the corresponding GET request; in"
" which case it can return a cached GET response for HEAD request."
msgstr ""

# ca55e5e7fd7c4084a1a5ec867ef3d7dc
#: ../../topics/cache.txt:451
msgid ""
"Additionally, the cache middleware automatically sets a few headers in each "
":class:`~django.http.HttpResponse`:"
msgstr ""

# e1afbbd5df2c41f383203d1e9924369c
#: ../../topics/cache.txt:454
msgid ""
"Sets the ``Last-Modified`` header to the current date/time when a fresh "
"(uncached) version of the page is requested."
msgstr ""

# c7debf21c36e4cd490adbada27738705
#: ../../topics/cache.txt:457
msgid ""
"Sets the ``Expires`` header to the current date/time plus the defined "
":setting:`CACHE_MIDDLEWARE_SECONDS`."
msgstr ""

# 18196a74c694450dbf728435bd396536
#: ../../topics/cache.txt:460
msgid ""
"Sets the ``Cache-Control`` header to give a max age for the page -- again, "
"from the :setting:`CACHE_MIDDLEWARE_SECONDS` setting."
msgstr ""

# 9b0af1e4ea3249be9d6016086561f770
#: ../../topics/cache.txt:463
msgid "See :doc:`/topics/http/middleware` for more on middleware."
msgstr ""

# c1d59f7f7dde4ccab9738c3f1cbcb717
#: ../../topics/cache.txt:465
msgid ""
"If a view sets its own cache expiry time (i.e. it has a ``max-age`` section "
"in its ``Cache-Control`` header) then the page will be cached until the "
"expiry time, rather than :setting:`CACHE_MIDDLEWARE_SECONDS`. Using the "
"decorators in ``django.views.decorators.cache`` you can easily set a view's "
"expiry time (using the ``cache_control`` decorator) or disable caching for a"
" view (using the ``never_cache`` decorator). See the `using other headers`__"
" section for more on these decorators."
msgstr ""

# 607084de99fa47f48cd8fc4e52e07834
#: ../../topics/cache.txt:475
msgid ""
"If :setting:`USE_I18N` is set to ``True`` then the generated cache key will "
"include the name of the active :term:`language<language code>` -- see also "
":ref:`how-django-discovers-language-preference`). This allows you to easily "
"cache multilingual sites without having to create the cache key yourself."
msgstr ""

# c413b2a22bac455989c6bbe3f86da27b
#: ../../topics/cache.txt:480
msgid ""
"Cache keys also include the active :term:`language <language code>` when "
":setting:`USE_L10N` is set to ``True`` and the :ref:`current time zone "
"<default-current-time-zone>` when :setting:`USE_TZ` is set to ``True``."
msgstr ""

# 4293458c40ce43b3af95ad3867e3d85f
#: ../../topics/cache.txt:487
msgid "The per-view cache"
msgstr ""

# 2506b03bd31c41b88f1da7a6c1303459
#: ../../topics/cache.txt:491
msgid ""
"A more granular way to use the caching framework is by caching the output of"
" individual views. ``django.views.decorators.cache`` defines a "
"``cache_page`` decorator that will automatically cache the view's response "
"for you. It's easy to use::"
msgstr ""

# e3acb1a59e624d94ac251f25cdac3f24
#: ../../topics/cache.txt:502
msgid ""
"``cache_page`` takes a single argument: the cache timeout, in seconds. In "
"the above example, the result of the ``my_view()`` view will be cached for "
"15 minutes. (Note that we've written it as ``60 * 15`` for the purpose of "
"readability. ``60 * 15`` will be evaluated to ``900`` -- that is, 15 minutes"
" multiplied by 60 seconds per minute.)"
msgstr ""

# 8ee21326e02f4b4d81364eb940bc087e
#: ../../topics/cache.txt:508
msgid ""
"The per-view cache, like the per-site cache, is keyed off of the URL. If "
"multiple URLs point at the same view, each URL will be cached separately. "
"Continuing the ``my_view`` example, if your URLconf looks like this::"
msgstr ""

# a74c087e431b4576a913f3abc7a89cb9
#: ../../topics/cache.txt:516
msgid ""
"then requests to ``/foo/1/`` and ``/foo/23/`` will be cached separately, as "
"you may expect. But once a particular URL (e.g., ``/foo/23/``) has been "
"requested, subsequent requests to that URL will use the cache."
msgstr ""

# 3edc347f739f4f4ca8e5723fa8e6233f
#: ../../topics/cache.txt:520
msgid ""
"``cache_page`` can also take an optional keyword argument, ``cache``, which "
"directs the decorator to use a specific cache (from your :setting:`CACHES` "
"setting) when caching view results. By default, the ``default`` cache will "
"be used, but you can specify any cache you want::"
msgstr ""

# 66a27100162641dba72a32506d5075e5
#: ../../topics/cache.txt:530
msgid ""
"You can also override the cache prefix on a per-view basis. ``cache_page`` "
"takes an optional keyword argument, ``key_prefix``, which works in the same "
"way as the :setting:`CACHE_MIDDLEWARE_KEY_PREFIX` setting for the "
"middleware.  It can be used like this::"
msgstr ""

# 10a49b931c8945e6b2bc6d4231dae795
#: ../../topics/cache.txt:539
msgid ""
"The two settings can also be combined. If you specify a ``cache`` *and* a "
"``key_prefix``, you will get all the settings of the requested cache alias, "
"but with the key_prefix overridden."
msgstr ""

# 1f5bd3e08ffd48c18852821e4868b75f
#: ../../topics/cache.txt:544
msgid "Specifying per-view cache in the URLconf"
msgstr ""

# 197683d3ada045d2ab2f303b6d3a1e7c
#: ../../topics/cache.txt:546
msgid ""
"The examples in the previous section have hard-coded the fact that the view "
"is cached, because ``cache_page`` alters the ``my_view`` function in place. "
"This approach couples your view to the cache system, which is not ideal for "
"several reasons. For instance, you might want to reuse the view functions on"
" another, cache-less site, or you might want to distribute the views to "
"people who might want to use them without being cached. The solution to "
"these problems is to specify the per-view cache in the URLconf rather than "
"next to the view functions themselves."
msgstr ""

# d22a614dc1724f95983c59440ae2ec49
#: ../../topics/cache.txt:555
msgid ""
"Doing so is easy: simply wrap the view function with ``cache_page`` when you"
" refer to it in the URLconf. Here's the old URLconf from earlier::"
msgstr ""

# 4e31650e60c640bc9132e34baf6af064
#: ../../topics/cache.txt:562
msgid "Here's the same thing, with ``my_view`` wrapped in ``cache_page``::"
msgstr ""

# 7761733999e04e238a5b3b2890bb5fab
#: ../../topics/cache.txt:573
msgid "Template fragment caching"
msgstr ""

# bcc6adba321c4c3eb39300a226fdf1b9
#: ../../topics/cache.txt:575
msgid ""
"If you're after even more control, you can also cache template fragments "
"using the ``cache`` template tag. To give your template access to this tag, "
"put ``{% load cache %}`` near the top of your template."
msgstr ""

# 10e30f372be24500857856d93e3782d3
#: ../../topics/cache.txt:579
msgid ""
"The ``{% cache %}`` template tag caches the contents of the block for a "
"given amount of time. It takes at least two arguments: the cache timeout, in"
" seconds, and the name to give the cache fragment. The name will be taken as"
" is, do not use a variable. For example:"
msgstr ""

# cfe8d0cc816847b3bed5391b3bbe62d9
#: ../../topics/cache.txt:591
msgid ""
"Sometimes you might want to cache multiple copies of a fragment depending on"
" some dynamic data that appears inside the fragment. For example, you might "
"want a separate cached copy of the sidebar used in the previous example for "
"every user of your site. Do this by passing additional arguments to the ``{%"
" cache %}`` template tag to uniquely identify the cache fragment:"
msgstr ""

# 110d477f65204bb6a2f6d475e1c7347f
#: ../../topics/cache.txt:604
msgid ""
"It's perfectly fine to specify more than one argument to identify the "
"fragment. Simply pass as many arguments to ``{% cache %}`` as you need."
msgstr ""

# a3d9d177658b4569974bef0a8c36a229
#: ../../topics/cache.txt:607
msgid ""
"If :setting:`USE_I18N` is set to ``True`` the per-site middleware cache will"
" :ref:`respect the active language<i18n-cache-key>`. For the ``cache`` "
"template tag you could use one of the :ref:`translation-specific variables"
"<template-translation-vars>` available in templates to achieve the same "
"result:"
msgstr ""

# a4a366024888464086cbc0c27b19bd4e
#: ../../topics/cache.txt:624
msgid ""
"The cache timeout can be a template variable, as long as the template "
"variable resolves to an integer value. For example, if the template variable"
" ``my_timeout`` is set to the value ``600``, then the following two examples"
" are equivalent:"
msgstr ""

# 96696ada3bff45b7ba523389d79064c0
#: ../../topics/cache.txt:634
msgid ""
"This feature is useful in avoiding repetition in templates. You can set the "
"timeout in a variable, in one place, and just reuse that value."
msgstr ""

# 082347e9d5504d449bed0e59474df6fa
#: ../../topics/cache.txt:639
msgid ""
"If you want to obtain the cache key used for a cached fragment, you can use "
"``make_template_fragment_key``. ``fragment_name`` is the same as second "
"argument to the ``cache`` template tag; ``vary_on`` is a list of all "
"additional arguments passed to the tag. This function can be useful for "
"invalidating or overwriting a cached item, for example:"
msgstr ""

# 3bb84ced65834d689af11589df875c58
#: ../../topics/cache.txt:655
msgid "The low-level cache API"
msgstr ""

# 1bc859edd80942c8a501c5ddea2e993a
#: ../../topics/cache.txt:659
msgid ""
"Sometimes, caching an entire rendered page doesn't gain you very much and "
"is, in fact, inconvenient overkill."
msgstr ""

# 101e44d944af40e09486ed9b757bf207
#: ../../topics/cache.txt:662
msgid ""
"Perhaps, for instance, your site includes a view whose results depend on "
"several expensive queries, the results of which change at different "
"intervals. In this case, it would not be ideal to use the full-page caching "
"that the per-site or per-view cache strategies offer, because you wouldn't "
"want to cache the entire result (since some of the data changes often), but "
"you'd still want to cache the results that rarely change."
msgstr ""

# 8a05eab5c4fa48c2a154c34f1ca6e485
#: ../../topics/cache.txt:669
msgid ""
"For cases like this, Django exposes a simple, low-level cache API. You can "
"use this API to store objects in the cache with any level of granularity you"
" like. You can cache any Python object that can be pickled safely: strings, "
"dictionaries, lists of model objects, and so forth. (Most common Python "
"objects can be pickled; refer to the Python documentation for more "
"information about pickling.)"
msgstr ""

# 092715865a8347b0851a0883a648007f
#: ../../topics/cache.txt:677
msgid "Accessing the cache"
msgstr ""

# 08825e16dca44079a081dad8a00a476c
#: ../../topics/cache.txt:681
msgid ""
"The cache module, ``django.core.cache``, has a ``cache`` object that's "
"automatically created from the ``'default'`` entry in the :setting:`CACHES` "
"setting::"
msgstr ""

# bf483e06bd93476ab987b68a6d7a5d74
#: ../../topics/cache.txt:687
msgid ""
"If you have multiple caches defined in :setting:`CACHES`, then you can use "
":func:`django.core.cache.get_cache` to retrieve a cache object for any key::"
msgstr ""

# abd3fbbfccf740b28895b68dbd8c6df0
#: ../../topics/cache.txt:693
msgid ""
"If the named key does not exist, ``InvalidCacheBackendError`` will be "
"raised."
msgstr ""

# 2f9c79ac2d244b82b9c2d2f68d04fb68
#: ../../topics/cache.txt:697
msgid "Basic usage"
msgstr ""

# 35ea7f10d24b42268e3507d9795f8482
#: ../../topics/cache.txt:699
msgid "The basic interface is ``set(key, value, timeout)`` and ``get(key)``::"
msgstr ""

# 31c33525a4e447ff83bbc83453c21e1e
#: ../../topics/cache.txt:705
msgid ""
"The ``timeout`` argument is optional and defaults to the ``timeout`` "
"argument of the appropriate backend in the :setting:`CACHES` setting "
"(explained above). It's the number of seconds the value should be stored in "
"the cache. Passing in ``None`` for ``timeout`` will cache the value forever."
msgstr ""

# 07c59c48b1d3497ebde923e3d37191ff
#: ../../topics/cache.txt:712
msgid ""
"Previously, passing ``None`` explicitly would use the default timeout value."
msgstr ""

# 4cb4f9277a3f46e3b1bab4f079d30e75
#: ../../topics/cache.txt:715
msgid ""
"If the object doesn't exist in the cache, ``cache.get()`` returns ``None``::"
msgstr ""

# f825bc274db8427fb3e0431c2c81f551
#: ../../topics/cache.txt:722
msgid ""
"We advise against storing the literal value ``None`` in the cache, because "
"you won't be able to distinguish between your stored ``None`` value and a "
"cache miss signified by a return value of ``None``."
msgstr ""

# 3f99c6f688c54a5f905a89a53839f126
#: ../../topics/cache.txt:726
msgid ""
"``cache.get()`` can take a ``default`` argument. This specifies which value "
"to return if the object doesn't exist in the cache::"
msgstr ""

# 9227672c34c4412a862f2c16eb5f1717
#: ../../topics/cache.txt:732
msgid ""
"To add a key only if it doesn't already exist, use the ``add()`` method. It "
"takes the same parameters as ``set()``, but it will not attempt to update "
"the cache if the key specified is already present::"
msgstr ""

# f1b924c7cb30450e824da2873dd106c4
#: ../../topics/cache.txt:741
msgid ""
"If you need to know whether ``add()`` stored a value in the cache, you can "
"check the return value. It will return ``True`` if the value was stored, "
"``False`` otherwise."
msgstr ""

# 1f55d2aa1167408f975f4df7f24cdff6
#: ../../topics/cache.txt:745
msgid ""
"There's also a ``get_many()`` interface that only hits the cache once. "
"``get_many()`` returns a dictionary with all the keys you asked for that "
"actually exist in the cache (and haven't expired)::"
msgstr ""

# 770225b7eb254d00804f08b4262f3abb
#: ../../topics/cache.txt:755
msgid ""
"To set multiple values more efficiently, use ``set_many()`` to pass a "
"dictionary of key-value pairs::"
msgstr ""

# 8152d1a805a04fac9479824ee5bd2543
#: ../../topics/cache.txt:762
msgid ""
"Like ``cache.set()``, ``set_many()`` takes an optional ``timeout`` "
"parameter."
msgstr ""

# 38ce463b4c674b9983ed4c43a58ec93b
#: ../../topics/cache.txt:764
msgid ""
"You can delete keys explicitly with ``delete()``. This is an easy way of "
"clearing the cache for a particular object::"
msgstr ""

# fc6fdcf0bd4e417897112586ec86c33f
#: ../../topics/cache.txt:769
msgid ""
"If you want to clear a bunch of keys at once, ``delete_many()`` can take a "
"list of keys to be cleared::"
msgstr ""

# fdf729a5eec644d3b006f2f5484ee2a9
#: ../../topics/cache.txt:774
msgid ""
"Finally, if you want to delete all the keys in the cache, use "
"``cache.clear()``.  Be careful with this; ``clear()`` will remove "
"*everything* from the cache, not just the keys set by your application. ::"
msgstr ""

# b5fe42e1062540a7bc2e4681fec111d4
#: ../../topics/cache.txt:780
msgid ""
"You can also increment or decrement a key that already exists using the "
"``incr()`` or ``decr()`` methods, respectively. By default, the existing "
"cache value will incremented or decremented by 1. Other increment/decrement "
"values can be specified by providing an argument to the increment/decrement "
"call. A ValueError will be raised if you attempt to increment or decrement a"
" nonexistent cache key.::"
msgstr ""

# 66e94c59f4d14e96aa8c54e2c9745524
#: ../../topics/cache.txt:799
msgid ""
"``incr()``/``decr()`` methods are not guaranteed to be atomic. On those "
"backends that support atomic increment/decrement (most notably, the "
"memcached backend), increment and decrement operations will be atomic. "
"However, if the backend doesn't natively provide an increment/decrement "
"operation, it will be implemented using a two-step retrieve/update."
msgstr ""

# 898c0f10e83e49e38d44cf152bb80e83
#: ../../topics/cache.txt:806
msgid ""
"You can close the connection to your cache with ``close()`` if implemented "
"by the cache backend."
msgstr ""

# ffa4ba9c670448c6aabfb37eb19c824d
#: ../../topics/cache.txt:813
msgid "For caches that don't implement ``close`` methods it is a no-op."
msgstr ""

# 8c8705af5db84cb9af31f4cabdff9201
#: ../../topics/cache.txt:818
msgid "Cache key prefixing"
msgstr ""

# a0a608dfac8343a49df3eac74beb6802
#: ../../topics/cache.txt:820
msgid ""
"If you are sharing a cache instance between servers, or between your "
"production and development environments, it's possible for data cached by "
"one server to be used by another server. If the format of cached data is "
"different between servers, this can lead to some very hard to diagnose "
"problems."
msgstr ""

# 7eda421e986f4ec48abbc2aa41da14fe
#: ../../topics/cache.txt:826
msgid ""
"To prevent this, Django provides the ability to prefix all cache keys used "
"by a server. When a particular cache key is saved or retrieved, Django will "
"automatically prefix the cache key with the value of the "
":setting:`KEY_PREFIX <CACHES-KEY_PREFIX>` cache setting."
msgstr ""

# edc6494fc3de4f21b896bd5fda635b1d
#: ../../topics/cache.txt:831
msgid ""
"By ensuring each Django instance has a different :setting:`KEY_PREFIX "
"<CACHES-KEY_PREFIX>`, you can ensure that there will be no collisions in "
"cache values."
msgstr ""

# 498a247e2d864526929b23767c77a37e
#: ../../topics/cache.txt:838
msgid "Cache versioning"
msgstr ""

# 8d3a96a79ac14c20bc0b993c71ad2e21
#: ../../topics/cache.txt:840
msgid ""
"When you change running code that uses cached values, you may need to purge "
"any existing cached values. The easiest way to do this is to flush the "
"entire cache, but this can lead to the loss of cache values that are still "
"valid and useful."
msgstr ""

# 446253c377de4e1fb796d305254bd47d
#: ../../topics/cache.txt:845
msgid ""
"Django provides a better way to target individual cache values. Django's "
"cache framework has a system-wide version identifier, specified using the "
":setting:`VERSION <CACHES-VERSION>` cache setting. The value of this setting"
" is automatically combined with the cache prefix and the user-provided cache"
" key to obtain the final cache key."
msgstr ""

# 13a10587ac08400683682c3516035eff
#: ../../topics/cache.txt:851
msgid ""
"By default, any key request will automatically include the site default "
"cache key version. However, the primitive cache functions all include a "
"``version`` argument, so you can specify a particular cache key version to "
"set or get. For example::"
msgstr ""

# 57b04b6a4cd0481cbfcd417e26d4b158
#: ../../topics/cache.txt:865
msgid ""
"The version of a specific key can be incremented and decremented using the "
"``incr_version()`` and ``decr_version()`` methods. This enables specific "
"keys to be bumped to a new version, leaving other keys unaffected. "
"Continuing our previous example::"
msgstr ""

# 9df3c87f96b64e06aafed947d3a404dd
#: ../../topics/cache.txt:885
msgid "Cache key transformation"
msgstr ""

# f38a59879f684666b0bf5e788f33a7f9
#: ../../topics/cache.txt:887
msgid ""
"As described in the previous two sections, the cache key provided by a user "
"is not used verbatim -- it is combined with the cache prefix and key version"
" to provide a final cache key. By default, the three parts are joined using "
"colons to produce a final string::"
msgstr ""

# fda0527678e240b1afcb65d25de0de76
#: ../../topics/cache.txt:895
msgid ""
"If you want to combine the parts in different ways, or apply other "
"processing to the final key (e.g., taking a hash digest of the key parts), "
"you can provide a custom key function."
msgstr ""

# 27886fc660b9457c8acf849804f66a3c
#: ../../topics/cache.txt:899
msgid ""
"The :setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>` cache setting specifies a "
"dotted-path to a function matching the prototype of ``make_key()`` above. If"
" provided, this custom key function will be used instead of the default key "
"combining function."
msgstr ""

# fa86cf0d6d9d4ad5a6ef3ac7e1fec586
#: ../../topics/cache.txt:905
msgid "Cache key warnings"
msgstr ""

# ad88ebeecec14479b1b14900cf38066c
#: ../../topics/cache.txt:907
msgid ""
"Memcached, the most commonly-used production cache backend, does not allow "
"cache keys longer than 250 characters or containing whitespace or control "
"characters, and using such keys will cause an exception. To encourage cache-"
"portable code and minimize unpleasant surprises, the other built-in cache "
"backends issue a warning "
"(``django.core.cache.backends.base.CacheKeyWarning``) if a key is used that "
"would cause an error on memcached."
msgstr ""

# bcb4a5b36cd34ec48fde483467d98a98
#: ../../topics/cache.txt:914
msgid ""
"If you are using a production backend that can accept a wider range of keys "
"(a custom backend, or one of the non-memcached built-in backends), and want "
"to use this wider range without warnings, you can silence "
"``CacheKeyWarning`` with this code in the ``management`` module of one of "
"your :setting:`INSTALLED_APPS`::"
msgstr ""

# 1817fd99924c444082453ba49d8b18ad
#: ../../topics/cache.txt:926
msgid ""
"If you want to instead provide custom key validation logic for one of the "
"built-in backends, you can subclass it, override just the ``validate_key`` "
"method, and follow the instructions for `using a custom cache backend`_. For"
" instance, to do this for the ``locmem`` backend, put this code in a "
"module::"
msgstr ""

# 2d31d6301eff4ababf9614fd24db7a99
#: ../../topics/cache.txt:938
msgid ""
"...and use the dotted Python path to this class in the :setting:`BACKEND "
"<CACHES-BACKEND>` portion of your :setting:`CACHES` setting."
msgstr ""

# f6dfed886fd9474a99fbaa0c98b3c6d4
#: ../../topics/cache.txt:942
msgid "Upstream caches"
msgstr ""

# b55d0785f6b74c70b3adfe56868f8dfc
#: ../../topics/cache.txt:944
msgid ""
"So far, this document has focused on caching your *own* data. But another "
"type of caching is relevant to Web development, too: caching performed by "
"\"upstream\" caches. These are systems that cache pages for users even "
"before the request reaches your Web site."
msgstr ""

# ee9d66bc004a42e6b497ef4ee11d857a
#: ../../topics/cache.txt:949
msgid "Here are a few examples of upstream caches:"
msgstr ""

# a7fec38383304b6bb6089977993de4be
#: ../../topics/cache.txt:951
msgid ""
"Your ISP may cache certain pages, so if you requested a page from "
"http://example.com/, your ISP would send you the page without having to "
"access example.com directly. The maintainers of example.com have no "
"knowledge of this caching; the ISP sits between example.com and your Web "
"browser, handling all of the caching transparently."
msgstr ""

# f6c8afc66db34a0bae7fe1c924bfeca1
#: ../../topics/cache.txt:957
msgid ""
"Your Django Web site may sit behind a *proxy cache*, such as Squid Web Proxy"
" Cache (http://www.squid-cache.org/), that caches pages for performance. In "
"this case, each request first would be handled by the proxy, and it would be"
" passed to your application only if needed."
msgstr ""

# a18e2c6cc1a6437092ca999b4475e928
#: ../../topics/cache.txt:962
msgid ""
"Your Web browser caches pages, too. If a Web page sends out the appropriate "
"headers, your browser will use the local cached copy for subsequent requests"
" to that page, without even contacting the Web page again to see whether it "
"has changed."
msgstr ""

# e652dc42fb3e4512b5e242cd3176904b
#: ../../topics/cache.txt:967
msgid ""
"Upstream caching is a nice efficiency boost, but there's a danger to it: "
"Many Web pages' contents differ based on authentication and a host of other "
"variables, and cache systems that blindly save pages based purely on URLs "
"could expose incorrect or sensitive data to subsequent visitors to those "
"pages."
msgstr ""

# 9a52b1ba2a1146b093dd6df8abc8f45a
#: ../../topics/cache.txt:972
msgid ""
"For example, say you operate a Web email system, and the contents of the "
"\"inbox\" page obviously depend on which user is logged in. If an ISP "
"blindly cached your site, then the first user who logged in through that ISP"
" would have his user-specific inbox page cached for subsequent visitors to "
"the site. That's not cool."
msgstr ""

# 9b730cfc0afe49c1a291d12865cb97df
#: ../../topics/cache.txt:978
msgid ""
"Fortunately, HTTP provides a solution to this problem. A number of HTTP "
"headers exist to instruct upstream caches to differ their cache contents "
"depending on designated variables, and to tell caching mechanisms not to "
"cache particular pages. We'll look at some of these headers in the sections "
"that follow."
msgstr ""

# 02597282bd0d405abc5506ebc85934a1
#: ../../topics/cache.txt:986
msgid "Using Vary headers"
msgstr ""

# 68fd28616abd4703b43313780169ebaa
#: ../../topics/cache.txt:988
msgid ""
"The ``Vary`` header defines which request headers a cache mechanism should "
"take into account when building its cache key. For example, if the contents "
"of a Web page depend on a user's language preference, the page is said to "
"\"vary on language.\""
msgstr ""

# 919ab54e177b40b1bab39acbaefaede1
#: ../../topics/cache.txt:993
msgid ""
"By default, Django's cache system creates its cache keys using the requested"
" path and query -- e.g., ``\"/stories/2005/?order_by=author\"``. This means "
"every request to that URL will use the same cached version, regardless of "
"user-agent differences such as cookies or language preferences. However, if "
"this page produces different content based on some difference in request "
"headers -- such as a cookie, or a language, or a user-agent -- you'll need "
"to use the ``Vary`` header to tell caching mechanisms that the page output "
"depends on those things."
msgstr ""

# 62b7d3b7447e470187f32d2b667ba263
#: ../../topics/cache.txt:1001
msgid ""
"To do this in Django, use the convenient "
":func:`django.views.decorators.vary.vary_on_headers` view decorator, like "
"so::"
msgstr ""

# e4b9f7a9d3564877806dd93345af1fe3
#: ../../topics/cache.txt:1010
msgid ""
"In this case, a caching mechanism (such as Django's own cache middleware) "
"will cache a separate version of the page for each unique user-agent."
msgstr ""

# be89a6e8aac7415192250906dadd9371
#: ../../topics/cache.txt:1013
msgid ""
"The advantage to using the ``vary_on_headers`` decorator rather than "
"manually setting the ``Vary`` header (using something like "
"``response['Vary'] = 'user-agent'``) is that the decorator *adds* to the "
"``Vary`` header (which may already exist), rather than setting it from "
"scratch and potentially overriding anything that was already in there."
msgstr ""

# 8f23b5127d5642568fceaf8f0166a33c
#: ../../topics/cache.txt:1019
msgid "You can pass multiple headers to ``vary_on_headers()``::"
msgstr ""

# 73e00d4c48294a8685409e2a3adfa3f1
#: ../../topics/cache.txt:1025
msgid ""
"This tells upstream caches to vary on *both*, which means each combination "
"of user-agent and cookie will get its own cache value. For example, a "
"request with the user-agent ``Mozilla`` and the cookie value ``foo=bar`` "
"will be considered different from a request with the user-agent ``Mozilla`` "
"and the cookie value ``foo=ham``."
msgstr ""

# c812eb27ccf2428c81932a46fc933315
#: ../../topics/cache.txt:1031
msgid ""
"Because varying on cookie is so common, there's a "
":func:`django.views.decorators.vary.vary_on_cookie` decorator. These two "
"views are equivalent::"
msgstr ""

# e0c07de9049f4c679b9df864bc1c7888
#: ../../topics/cache.txt:1043
msgid ""
"The headers you pass to ``vary_on_headers`` are not case sensitive; "
"``\"User-Agent\"`` is the same thing as ``\"user-agent\"``."
msgstr ""

# 9ea75dd9c568424b889b4716ecd8564f
#: ../../topics/cache.txt:1046
msgid ""
"You can also use a helper function, "
":func:`django.utils.cache.patch_vary_headers`, directly. This function sets,"
" or adds to, the ``Vary header``. For example::"
msgstr ""

# 68243633d0c642dca3d4c379fb06da33
#: ../../topics/cache.txt:1057
msgid ""
"``patch_vary_headers`` takes an :class:`~django.http.HttpResponse` instance "
"as its first argument and a list/tuple of case-insensitive header names as "
"its second argument."
msgstr ""

# 934fbee29a134121a7e86d46b87160d4
#: ../../topics/cache.txt:1061
msgid "For more on Vary headers, see the `official Vary spec`_."
msgstr ""

# f1ccb86e241b4cffaecc19c2db53f845
#: ../../topics/cache.txt:1066
msgid "Controlling cache: Using other headers"
msgstr ""

# 1e3fd19e688b4ab2928915e85e6899ce
#: ../../topics/cache.txt:1068
msgid ""
"Other problems with caching are the privacy of data and the question of "
"where data should be stored in a cascade of caches."
msgstr ""

# 215a4d086d614ba8b153f62fe03744a6
#: ../../topics/cache.txt:1071
msgid ""
"A user usually faces two kinds of caches: his or her own browser cache (a "
"private cache) and his or her provider's cache (a public cache). A public "
"cache is used by multiple users and controlled by someone else. This poses "
"problems with sensitive data--you don't want, say, your bank account number "
"stored in a public cache. So Web applications need a way to tell caches "
"which data is private and which is public."
msgstr ""

# 68b020b133e44184a5db7017dfc6450d
#: ../../topics/cache.txt:1078
msgid ""
"The solution is to indicate a page's cache should be \"private.\" To do this"
" in Django, use the ``cache_control`` view decorator. Example::"
msgstr ""

# a7c87b184488469a868ff35b2d8dab71
#: ../../topics/cache.txt:1087
msgid ""
"This decorator takes care of sending out the appropriate HTTP header behind "
"the scenes."
msgstr ""

# 2262a6e910824715924061a702326885
#: ../../topics/cache.txt:1090
msgid ""
"Note that the cache control settings \"private\" and \"public\" are mutually"
" exclusive. The decorator ensures that the \"public\" directive is removed "
"if \"private\" should be set (and vice versa). An example use of the two "
"directives would be a blog site that offers both private and public entries."
" Public entries may be cached on any shared cache. The following code uses "
":func:`django.utils.cache.patch_cache_control`, the manual way to modify the"
" cache control header (it is internally called by the ``cache_control`` "
"decorator)::"
msgstr ""

# 54a0f44d9f18481496a5469230d147a3
#: ../../topics/cache.txt:1113
msgid ""
"There are a few other ways to control cache parameters. For example, HTTP "
"allows applications to do the following:"
msgstr ""

# 1dc2b465c22549a3a69d4c76b29955b3
#: ../../topics/cache.txt:1116
msgid "Define the maximum time a page should be cached."
msgstr ""

# b093ed1eb5604158918008c0e7681015
#: ../../topics/cache.txt:1118
msgid ""
"Specify whether a cache should always check for newer versions, only "
"delivering the cached content when there are no changes. (Some caches might "
"deliver cached content even if the server page changed, simply because the "
"cache copy isn't yet expired.)"
msgstr ""

# 484bfbf818d84fb8a4c5b738ed274021
#: ../../topics/cache.txt:1123
msgid ""
"In Django, use the ``cache_control`` view decorator to specify these cache "
"parameters. In this example, ``cache_control`` tells caches to revalidate "
"the cache on every access and to store cached versions for, at most, 3,600 "
"seconds::"
msgstr ""

# edd1fa7245154ffbab56cb841caab694
#: ../../topics/cache.txt:1133
msgid ""
"Any valid ``Cache-Control`` HTTP directive is valid in ``cache_control()``. "
"Here's a full list:"
msgstr ""

# d6a29c10797f48ecb1f46c59db4e1dfa
#: ../../topics/cache.txt:1136
msgid "``public=True``"
msgstr ""

# 27890fe94ff2490bb032109fb98eda9e
#: ../../topics/cache.txt:1137
msgid "``private=True``"
msgstr ""

# b8cb9a622deb421fad00c983ee14f10d
#: ../../topics/cache.txt:1138
msgid "``no_cache=True``"
msgstr ""

# ea042d2edfe24e89a624d789eb4368c0
#: ../../topics/cache.txt:1139
msgid "``no_transform=True``"
msgstr ""

# daa710941f6e4d57871afdc80cfe01a1
#: ../../topics/cache.txt:1140
msgid "``must_revalidate=True``"
msgstr ""

# b5fea07e3ac04cb4a473e4c6888c89b6
#: ../../topics/cache.txt:1141
msgid "``proxy_revalidate=True``"
msgstr ""

# 71e49fe990a544d495ec078dc365a0aa
#: ../../topics/cache.txt:1142
msgid "``max_age=num_seconds``"
msgstr ""

# cce62497a0b24e17b94f950a9e44d3d4
#: ../../topics/cache.txt:1143
msgid "``s_maxage=num_seconds``"
msgstr ""

# d905ba81acf74a509441055f9a6730a7
#: ../../topics/cache.txt:1145
msgid ""
"For explanation of Cache-Control HTTP directives, see the `Cache-Control "
"spec`_."
msgstr ""

# 77389af4b7e04639ab46cf47062f3d33
#: ../../topics/cache.txt:1147
msgid ""
"(Note that the caching middleware already sets the cache header's max-age "
"with the value of the :setting:`CACHE_MIDDLEWARE_SECONDS` setting. If you "
"use a custom ``max_age`` in a ``cache_control`` decorator, the decorator "
"will take precedence, and the header values will be merged correctly.)"
msgstr ""

# c2b129fdc442489a893e6c80d61d3f9a
#: ../../topics/cache.txt:1152
msgid ""
"If you want to use headers to disable caching altogether, "
"``django.views.decorators.cache.never_cache`` is a view decorator that adds "
"headers to ensure the response won't be cached by browsers or other caches. "
"Example::"
msgstr ""

# 482a754299854221b684dcd32c6c2844
#: ../../topics/cache.txt:1166
msgid "Other optimizations"
msgstr ""

# f1ab5298ae6a4bdcb2db70d1155500c2
#: ../../topics/cache.txt:1168
msgid ""
"Django comes with a few other pieces of middleware that can help optimize "
"your site's performance:"
msgstr ""

# 179c5bfe25294193951df6e2c07d2cf5
#: ../../topics/cache.txt:1171
msgid ""
"``django.middleware.http.ConditionalGetMiddleware`` adds support for modern "
"browsers to conditionally GET responses based on the ``ETag`` and ``Last-"
"Modified`` headers."
msgstr ""

# 73e7b42f397246a6bb383e951be3e29e
#: ../../topics/cache.txt:1175
msgid ""
":class:`django.middleware.gzip.GZipMiddleware` compresses responses for all "
"modern browsers, saving bandwidth and transfer time. Be warned, however, "
"that compression techniques like ``GZipMiddleware`` are subject to attacks. "
"See the warning in :class:`~django.middleware.gzip.GZipMiddleware` for "
"details."
msgstr ""

# fbb06ff105674ad8bca44eeb7621d4ae
#: ../../topics/cache.txt:1182
msgid "Order of MIDDLEWARE_CLASSES"
msgstr ""

# 90c4521cf49241c99f20567201c7eebf
#: ../../topics/cache.txt:1184
msgid ""
"If you use caching middleware, it's important to put each half in the right "
"place within the :setting:`MIDDLEWARE_CLASSES` setting. That's because the "
"cache middleware needs to know which headers by which to vary the cache "
"storage. Middleware always adds something to the ``Vary`` response header "
"when it can."
msgstr ""

# f067c915a06046abb9aca05da15093d9
#: ../../topics/cache.txt:1189
msgid ""
"``UpdateCacheMiddleware`` runs during the response phase, where middleware "
"is run in reverse order, so an item at the top of the list runs *last* "
"during the response phase. Thus, you need to make sure that "
"``UpdateCacheMiddleware`` appears *before* any other middleware that might "
"add something to the ``Vary`` header. The following middleware modules do "
"so:"
msgstr ""

# 4628798e32e0494ea44191614c5254ff
#: ../../topics/cache.txt:1195
msgid "``SessionMiddleware`` adds ``Cookie``"
msgstr ""

# 2d991e4d0a5d44a4a746961eeea62eec
#: ../../topics/cache.txt:1196
msgid "``GZipMiddleware`` adds ``Accept-Encoding``"
msgstr ""

# ddddc32841ab4b8f9a286b032075d817
#: ../../topics/cache.txt:1197
msgid "``LocaleMiddleware`` adds ``Accept-Language``"
msgstr ""

# 79013b0774504cdfa01162c36730a14f
#: ../../topics/cache.txt:1199
msgid ""
"``FetchFromCacheMiddleware``, on the other hand, runs during the request "
"phase, where middleware is applied first-to-last, so an item at the top of "
"the list runs *first* during the request phase. The "
"``FetchFromCacheMiddleware`` also needs to run after other middleware "
"updates the ``Vary`` header, so ``FetchFromCacheMiddleware`` must be *after*"
" any item that does so."
msgstr ""

# 5b72a27f78dc4516a45d39e2bbf23cb6
#: ../../topics/class-based-views/generic-display.txt:5
msgid "Class-based generic views"
msgstr ""

# 8807f171f6ce4330986ee511102a39d1
#: ../../topics/class-based-views/generic-display.txt:7
msgid ""
"Writing Web applications can be monotonous, because we repeat certain "
"patterns again and again. Django tries to take away some of that monotony at"
" the model and template layers, but Web developers also experience this "
"boredom at the view level."
msgstr ""

# 264fd3318572481ba117766e72060118
#: ../../topics/class-based-views/generic-display.txt:12
msgid ""
"Django's *generic views* were developed to ease that pain. They take certain"
" common idioms and patterns found in view development and abstract them so "
"that you can quickly write common views of data without having to write too "
"much code."
msgstr ""

# b0961fc9998c4111bf1a4bb631f87ea9
#: ../../topics/class-based-views/generic-display.txt:17
msgid ""
"We can recognize certain common tasks, like displaying a list of objects, "
"and write code that displays a list of *any* object. Then the model in "
"question can be passed as an extra argument to the URLconf."
msgstr ""

# 98f56578357b48fd9b9c71f86d24147f
#: ../../topics/class-based-views/generic-display.txt:21
msgid "Django ships with generic views to do the following:"
msgstr ""

# 02e156e392b440ecb096aa6c3eec17c0
#: ../../topics/class-based-views/generic-display.txt:23
msgid ""
"Display list and detail pages for a single object. If we were creating an "
"application to manage conferences then a ``TalkListView`` and a "
"``RegisteredUserListView`` would be examples of list views. A single talk "
"page is an example of what we call a \"detail\" view."
msgstr ""

# 7cde2ef1d69c4096a5674fa0a51950a1
#: ../../topics/class-based-views/generic-display.txt:28
msgid ""
"Present date-based objects in year/month/day archive pages, associated "
"detail, and \"latest\" pages."
msgstr ""

# 564dd150e9344ff3a34142770d046dfc
#: ../../topics/class-based-views/generic-display.txt:31
msgid ""
"Allow users to create, update, and delete objects -- with or without "
"authorization."
msgstr ""

# e392327e85904992a1bdec5f2a96c507
#: ../../topics/class-based-views/generic-display.txt:34
msgid ""
"Taken together, these views provide easy interfaces to perform the most "
"common tasks developers encounter."
msgstr ""

# 96399393d22d48788f85ff79814f34d0
#: ../../topics/class-based-views/generic-display.txt:39
msgid "Extending generic views"
msgstr ""

# 7ccbabc6c56a46349948b4ba188806f0
#: ../../topics/class-based-views/generic-display.txt:41
msgid ""
"There's no question that using generic views can speed up development "
"substantially. In most projects, however, there comes a moment when the "
"generic views no longer suffice. Indeed, the most common question asked by "
"new Django developers is how to make generic views handle a wider array of "
"situations."
msgstr ""

# f330bf0815374f1f8bb50f5037a6dcfe
#: ../../topics/class-based-views/generic-display.txt:47
msgid ""
"This is one of the reasons generic views were redesigned for the 1.3 release"
" - previously, they were just view functions with a bewildering array of "
"options; now, rather than passing in a large amount of configuration in the "
"URLconf, the recommended way to extend generic views is to subclass them, "
"and override their attributes or methods."
msgstr ""

# 8af0ccc9450b40e2b6b1ff872dc53f08
#: ../../topics/class-based-views/generic-display.txt:53
msgid ""
"That said, generic views will have a limit. If you find you're struggling to"
" implement your view as a subclass of a generic view, then you may find it "
"more effective to write just the code you need, using your own class-based "
"or functional views."
msgstr ""

# 203366c60fc94fcb830d182c58f1793f
#: ../../topics/class-based-views/generic-display.txt:58
msgid ""
"More examples of generic views are available in some third party "
"applications, or you could write your own as needed."
msgstr ""

# a40637f672164ca6a1f833baa5c0c0cc
#: ../../topics/class-based-views/generic-display.txt:63
msgid "Generic views of objects"
msgstr ""

# 7292ad2040ac4bb794c873c2b48c149f
#: ../../topics/class-based-views/generic-display.txt:65
msgid ""
":class:`~django.views.generic.base.TemplateView` certainly is useful, but "
"Django's generic views really shine when it comes to presenting views of "
"your database content. Because it's such a common task, Django comes with a "
"handful of built-in generic views that make generating list and detail views"
" of objects incredibly easy."
msgstr ""

# 7a08c156bf1e44f993f94fbc81941e47
#: ../../topics/class-based-views/generic-display.txt:71
msgid ""
"Let's start by looking at some examples of showing a list of objects or an "
"individual object."
msgstr ""

# 9f29ee7ba27644d78c997777365532fd
#: ../../topics/class-based-views/generic-display.txt:76
msgid "We'll be using these models::"
msgstr ""

# 26cbfb8ebe3a4bdc9f37d3161e668049
#: ../../topics/class-based-views/generic-display.txt:112
msgid "Now we need to define a view::"
msgstr ""

# b4891c51321b4b25b416f50790780448
#: ../../topics/class-based-views/generic-display.txt:121
msgid "Finally hook that view into your urls::"
msgstr ""

# 413a3f9a953748bc8a35e0ce81de7b20
#: ../../topics/class-based-views/generic-display.txt:131
msgid ""
"That's all the Python code we need to write. We still need to write a "
"template, however. We could explicitly tell the view which template to use "
"by adding a ``template_name`` attribute to the view, but in the absence of "
"an explicit template Django will infer one from the object's name. In this "
"case, the inferred template will be ``\"books/publisher_list.html\"`` -- the"
" \"books\" part comes from the name of the app that defines the model, while"
" the \"publisher\" bit is just the lowercased version of the model's name."
msgstr ""

# f15e534def49463889f87ba05fa041f5
#: ../../topics/class-based-views/generic-display.txt:141
msgid ""
"Thus, when (for example) the "
":class:`django.template.loaders.app_directories.Loader` template loader is "
"enabled in :setting:`TEMPLATE_LOADERS`, a template location could be: "
"/path/to/project/books/templates/books/publisher_list.html"
msgstr ""

# c130a9b005834d1686d29d3719d22175
#: ../../topics/class-based-views/generic-display.txt:146
msgid ""
"This template will be rendered against a context containing a variable "
"called ``object_list`` that contains all the publisher objects. A very "
"simple template might look like the following:"
msgstr ""

# 6e0acb1bac7e44c194924d8d13075e3e
#: ../../topics/class-based-views/generic-display.txt:163
msgid ""
"That's really all there is to it. All the cool features of generic views "
"come from changing the attributes set on the generic view. The :doc:`generic"
" views reference</ref/class-based-views/index>` documents all the generic "
"views and their options in detail; the rest of this document will consider "
"some of the common ways you might customize and extend generic views."
msgstr ""

# 890dc34b16a643a28d3ae3f3e468bdb1
#: ../../topics/class-based-views/generic-display.txt:171
msgid "Making \"friendly\" template contexts"
msgstr ""

# 7db326a62aef4522b9f83b3def691cca
#: ../../topics/class-based-views/generic-display.txt:173
msgid ""
"You might have noticed that our sample publisher list template stores all "
"the publishers in a variable named ``object_list``. While this works just "
"fine, it isn't all that \"friendly\" to template authors: they have to "
"\"just know\" that they're dealing with publishers here."
msgstr ""

# d5bae7fdb0444855b6477c9825c2de55
#: ../../topics/class-based-views/generic-display.txt:178
msgid ""
"Well, if you're dealing with a model object, this is already done for you. "
"When you are dealing with an object or queryset, Django is able to populate "
"the context using the lower cased version of the model class' name. This is "
"provided in addition to the default ``object_list`` entry, but contains "
"exactly the same data, i.e. ``publisher_list``."
msgstr ""

# 16f39e451f14431cbd3b2f229081d541
#: ../../topics/class-based-views/generic-display.txt:184
msgid ""
"If this still isn't a good match, you can manually set the name of the "
"context variable. The ``context_object_name`` attribute on a generic view "
"specifies the context variable to use::"
msgstr ""

# 275ab82cf4624074aaa9a6c57c48897b
#: ../../topics/class-based-views/generic-display.txt:196
msgid ""
"Providing a useful ``context_object_name`` is always a good idea. Your "
"coworkers who design templates will thank you."
msgstr ""

# f08f923b875f4bb6b80d5140744098a4
#: ../../topics/class-based-views/generic-display.txt:203
msgid "Adding extra context"
msgstr ""

# b6f900077aee460f972aa020290aacfe
#: ../../topics/class-based-views/generic-display.txt:205
msgid ""
"Often you simply need to present some extra information beyond that provided"
" by the generic view. For example, think of showing a list of all the books "
"on each publisher detail page. The "
":class:`~django.views.generic.detail.DetailView` generic view provides the "
"publisher to the context, but how do we get additional information in that "
"template?"
msgstr ""

# a57405ff815141ec8ebd007f7d7f6cb0
#: ../../topics/class-based-views/generic-display.txt:212
msgid ""
"The answer is to subclass :class:`~django.views.generic.detail.DetailView` "
"and provide your own implementation of the ``get_context_data`` method. The "
"default implementation simply adds the object being displayed to the "
"template, but you can override it to send more::"
msgstr ""

# e5b13d7bb98e444d8bf0647543b68857
#: ../../topics/class-based-views/generic-display.txt:233
msgid ""
"Generally, ``get_context_data`` will merge the context data of all parent "
"classes with those of the current class. To preserve this behavior in your "
"own classes where you want to alter the context, you should be sure to call "
"``get_context_data`` on the super class. When no two classes try to define "
"the same key, this will give the expected results. However if any class "
"attempts to override a key after parent classes have set it (after the call "
"to super), any children of that class will also need to explicitly set it "
"after super if they want to be sure to override all parents. If you're "
"having trouble, review the method resolution order of your view."
msgstr ""

# ab91331bc12b4b10b5a8cd3988c19df7
#: ../../topics/class-based-views/generic-display.txt:246
msgid "Viewing subsets of objects"
msgstr ""

# b7b8dea4a0674e7db47f9cf05eed8512
#: ../../topics/class-based-views/generic-display.txt:248
msgid ""
"Now let's take a closer look at the ``model`` argument we've been using all "
"along. The ``model`` argument, which specifies the database model that the "
"view will operate upon, is available on all the generic views that operate "
"on a single object or a collection of objects. However, the ``model`` "
"argument is not the only way to specify the objects that the view will "
"operate upon -- you can also specify the list of objects using the "
"``queryset`` argument::"
msgstr ""

# b561a078e6374152ab282f636e9a8de0
#: ../../topics/class-based-views/generic-display.txt:264
msgid ""
"Specifying ``model = Publisher`` is really just shorthand for saying "
"``queryset = Publisher.objects.all()``. However, by using ``queryset`` to "
"define a filtered list of objects you can be more specific about the objects"
" that will be visible in the view (see :doc:`/topics/db/queries` for more "
"information about :class:`~django.db.models.query.QuerySet` objects, and see"
" the :doc:`class-based views reference </ref/class-based-views/index>` for "
"the complete details)."
msgstr ""

# 1a7f90b7f3904fe1a65721bb6cb02ef8
#: ../../topics/class-based-views/generic-display.txt:272
msgid ""
"To pick a simple example, we might want to order a list of books by "
"publication date, with the most recent first::"
msgstr ""

# 8f07eff3f84b4ddcbf19f23fb95f8e94
#: ../../topics/class-based-views/generic-display.txt:282
msgid ""
"That's a pretty simple example, but it illustrates the idea nicely. Of "
"course, you'll usually want to do more than just reorder objects. If you "
"want to present a list of books by a particular publisher, you can use the "
"same technique::"
msgstr ""

# 5f1259cbd4744377a980303974ff4256
#: ../../topics/class-based-views/generic-display.txt:296
msgid ""
"Notice that along with a filtered ``queryset``, we're also using a custom "
"template name. If we didn't, the generic view would use the same template as"
" the \"vanilla\" object list, which might not be what we want."
msgstr ""

# 110ad3bb1fe2443a9b0da53d63287c3a
#: ../../topics/class-based-views/generic-display.txt:300
msgid ""
"Also notice that this isn't a very elegant way of doing publisher-specific "
"books. If we want to add another publisher page, we'd need another handful "
"of lines in the URLconf, and more than a few publishers would get "
"unreasonable. We'll deal with this problem in the next section."
msgstr ""

# 43bc3e74f7bb486aba97b55ab1802ac6
#: ../../topics/class-based-views/generic-display.txt:307
msgid ""
"If you get a 404 when requesting ``/books/acme/``, check to ensure you "
"actually have a Publisher with the name 'ACME Publishing'.  Generic views "
"have an ``allow_empty`` parameter for this case.  See the :doc:`class-based-"
"views reference</ref/class-based-views/index>` for more details."
msgstr ""

# 7cfe1b2ee70e483dad10352e600d6a01
#: ../../topics/class-based-views/generic-display.txt:315
msgid "Dynamic filtering"
msgstr ""

# 62cd9b0c4e114a648d98c4c0d0dcadf0
#: ../../topics/class-based-views/generic-display.txt:317
msgid ""
"Another common need is to filter down the objects given in a list page by "
"some key in the URL. Earlier we hard-coded the publisher's name in the "
"URLconf, but what if we wanted to write a view that displayed all the books "
"by some arbitrary publisher?"
msgstr ""

# 0e1c7a294b434648bb20cec7da66e839
#: ../../topics/class-based-views/generic-display.txt:322
msgid ""
"Handily, the ``ListView`` has a "
":meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset` method "
"we can override. Previously, it has just been returning the value of the "
"``queryset`` attribute, but now we can add more logic."
msgstr ""

# 01000b12be544d3b95d6e34b5c13767b
#: ../../topics/class-based-views/generic-display.txt:327
msgid ""
"The key part to making this work is that when class-based views are called, "
"various useful things are stored on ``self``; as well as the request "
"(``self.request``) this includes the positional (``self.args``) and name-"
"based (``self.kwargs``) arguments captured according to the URLconf."
msgstr ""

# 3af89c1cad5f4e99abd9be76fe85bce3
#: ../../topics/class-based-views/generic-display.txt:332
msgid "Here, we have a URLconf with a single captured group::"
msgstr ""

# 92bd54bcd53f49f39b531d4258acbf22
#: ../../topics/class-based-views/generic-display.txt:342
msgid "Next, we'll write the ``PublisherBookList`` view itself::"
msgstr ""

# 327788cb7c8a46809e5719e2e5ca2ba6
#: ../../topics/class-based-views/generic-display.txt:357
msgid ""
"As you can see, it's quite easy to add more logic to the queryset selection;"
" if we wanted, we could use ``self.request.user`` to filter using the "
"current user, or other more complex logic."
msgstr ""

# c79b3f74fb474f7e8e79e38b3d26bc16
#: ../../topics/class-based-views/generic-display.txt:361
msgid ""
"We can also add the publisher into the context at the same time, so we can "
"use it in the template::"
msgstr ""

# 7db4eceac40f4425bc3bb8af13180191
#: ../../topics/class-based-views/generic-display.txt:376
msgid "Performing extra work"
msgstr ""

# d92cc7d0b6d446d6a25017d0f114b634
#: ../../topics/class-based-views/generic-display.txt:378
msgid ""
"The last common pattern we'll look at involves doing some extra work before "
"or after calling the generic view."
msgstr ""

# b1d25e342f8b491bb943d50fa71ebe79
#: ../../topics/class-based-views/generic-display.txt:381
msgid ""
"Imagine we had a ``last_accessed`` field on our ``Author`` model that we "
"were using to keep track of the last time anybody looked at that author::"
msgstr ""

# d3845f55318d49e688cd2e944bf2d161
#: ../../topics/class-based-views/generic-display.txt:394
msgid ""
"The generic ``DetailView`` class, of course, wouldn't know anything about "
"this field, but once again we could easily write a custom view to keep that "
"field updated."
msgstr ""

# 25c6f05482074ad8a79fac0b7ce7f523
#: ../../topics/class-based-views/generic-display.txt:398
msgid ""
"First, we'd need to add an author detail bit in the URLconf to point to a "
"custom view::"
msgstr ""

# 7f96b213622d48c8a0151aad8ea93b09
#: ../../topics/class-based-views/generic-display.txt:409
msgid ""
"Then we'd write our new view -- ``get_object`` is the method that retrieves "
"the object -- so we simply override it and wrap the call::"
msgstr ""

# 14c149a75dfd4cc4986cafc0c7dfd9d7
#: ../../topics/class-based-views/generic-display.txt:431
msgid ""
"The URLconf here uses the named group ``pk`` - this name is the default name"
" that ``DetailView`` uses to find the value of the primary key used to "
"filter the queryset."
msgstr ""

# 5b19b38eb079479a999b1ca4a77b6fc6
#: ../../topics/class-based-views/generic-display.txt:435
msgid ""
"If you want to call the group something else, you can set ``pk_url_kwarg`` "
"on the view. More details can be found in the reference for "
":class:`~django.views.generic.detail.DetailView`"
msgstr ""

# 5ad35f6fff8f4feaa9c6d21e1d167ece
#: ../../topics/class-based-views/generic-editing.txt:2
msgid "Form handling with class-based views"
msgstr ""

# 3be7b160936c4ed2b3dc66afc4a75264
#: ../../topics/class-based-views/generic-editing.txt:4
msgid "Form processing generally has 3 paths:"
msgstr ""

# e863743cafc14c0589246a75a039f192
#: ../../topics/class-based-views/generic-editing.txt:6
msgid "Initial GET (blank or prepopulated form)"
msgstr ""

# 712549e8fd0649b5a67356ac7299f82f
#: ../../topics/class-based-views/generic-editing.txt:7
msgid "POST with invalid data (typically redisplay form with errors)"
msgstr ""

# a02dc98853564edfb1ea096c276c282d
#: ../../topics/class-based-views/generic-editing.txt:8
msgid "POST with valid data (process the data and typically redirect)"
msgstr ""

# 6463866fe2af42018e1a3b16b223fcba
#: ../../topics/class-based-views/generic-editing.txt:10
msgid ""
"Implementing this yourself often results in a lot of repeated boilerplate "
"code (see :ref:`Using a form in a view<using-a-form-in-a-view>`). To help "
"avoid this, Django provides a collection of generic class-based views for "
"form processing."
msgstr ""

# 46d20f6640b94d3d83c93cf4a8234808
#: ../../topics/class-based-views/generic-editing.txt:16
msgid "Basic Forms"
msgstr ""

# f2e59ec478ad41148d40e89c91a63925
#: ../../topics/class-based-views/generic-editing.txt:18
msgid "Given a simple contact form::"
msgstr ""

# 8c15b7c1f6974fb5aa57c726d5cb2d4f
#: ../../topics/class-based-views/generic-editing.txt:31
msgid "The view can be constructed using a ``FormView``::"
msgstr ""

# f63cb24b512f443d9efcf85a5125b58f
# 64097ee986e843de99ba10352c81ab9c
# b0d8e8441ec74c6ebb648fef463d5aad
#: ../../topics/class-based-views/generic-editing.txt:48
#: ../../topics/http/urls.txt:78 ../../topics/i18n/translation.txt:1616
msgid "Notes:"
msgstr "Notes :"

# 9dd0e668e8af415d83fdd957935e33de
#: ../../topics/class-based-views/generic-editing.txt:50
msgid ""
"FormView inherits :class:`~django.views.generic.base.TemplateResponseMixin` "
"so :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"can be used here."
msgstr ""

# a796a1f9024e42ef855cf4097ea74f6c
#: ../../topics/class-based-views/generic-editing.txt:54
msgid ""
"The default implementation for "
":meth:`~django.views.generic.edit.FormMixin.form_valid` simply redirects to "
"the :attr:`~django.views.generic.edit.FormMixin.success_url`."
msgstr ""

# 601c21ec28354afcba6d413a6c705d35
#: ../../topics/class-based-views/generic-editing.txt:59
msgid "Model Forms"
msgstr ""

# 486e429e61354746ac17507bbacd11f9
#: ../../topics/class-based-views/generic-editing.txt:61
msgid ""
"Generic views really shine when working with models.  These generic views "
"will automatically create a :class:`~django.forms.ModelForm`, so long as "
"they can work out which model class to use:"
msgstr ""

# a6faaf6374e54edf83e90d255bc4ee1a
#: ../../topics/class-based-views/generic-editing.txt:65
msgid ""
"If the :attr:`~django.views.generic.edit.ModelFormMixin.model` attribute is "
"given, that model class will be used."
msgstr ""

# 70c96fdc34a04fa997152224e926d9c4
#: ../../topics/class-based-views/generic-editing.txt:67
msgid ""
"If :meth:`~django.views.generic.detail.SingleObjectMixin.get_object()` "
"returns an object, the class of that object will be used."
msgstr ""

# c232d1a675074c9d8ff2cad95a1b5945
#: ../../topics/class-based-views/generic-editing.txt:69
msgid ""
"If a :attr:`~django.views.generic.detail.SingleObjectMixin.queryset` is "
"given, the model for that queryset will be used."
msgstr ""

# 8745a418005a45119a2acbc56fc84fd8
#: ../../topics/class-based-views/generic-editing.txt:72
msgid ""
"Model form views provide a "
":meth:`~django.views.generic.edit.ModelFormMixin.form_valid()` "
"implementation that saves the model automatically.  You can override this if"
" you have any special requirements; see below for examples."
msgstr ""

# 2efab40d07b0451fbb4432fa357c2dc5
#: ../../topics/class-based-views/generic-editing.txt:77
msgid ""
"You don't even need to provide a ``success_url`` for "
":class:`~django.views.generic.edit.CreateView` or "
":class:`~django.views.generic.edit.UpdateView` - they will use "
":meth:`~django.db.models.Model.get_absolute_url()` on the model object if "
"available."
msgstr ""

# 19f3bd4db3894c4f949ab1e3619d9bd2
#: ../../topics/class-based-views/generic-editing.txt:82
msgid ""
"If you want to use a custom :class:`~django.forms.ModelForm` (for instance "
"to add extra validation) simply set "
":attr:`~django.views.generic.edit.FormMixin.form_class` on your view."
msgstr ""

# 70005edefa644fdfbb06e2c5d3bacafd
#: ../../topics/class-based-views/generic-editing.txt:87
msgid ""
"When specifying a custom form class, you must still specify the model, even "
"though the :attr:`~django.views.generic.edit.FormMixin.form_class` may be a "
":class:`~django.forms.ModelForm`."
msgstr ""

# 4c6607620953475ea6180e094014af40
#: ../../topics/class-based-views/generic-editing.txt:91
msgid ""
"First we need to add :meth:`~django.db.models.Model.get_absolute_url()` to "
"our ``Author`` class:"
msgstr ""

# a95ca56101244aff96b47a2ec7fbe5c8
#: ../../topics/class-based-views/generic-editing.txt:106
msgid ""
"Then we can use :class:`CreateView` and friends to do the actual work. "
"Notice how we're just configuring the generic class-based views here; we "
"don't have to write any logic ourselves::"
msgstr ""

# 2c7c011868de4e9e8f90700e91c509ea
#: ../../topics/class-based-views/generic-editing.txt:128
msgid ""
"We have to use :func:`~django.core.urlresolvers.reverse_lazy` here, not just"
" ``reverse`` as the urls are not loaded when the file is imported."
msgstr ""

# ef33646d000940258dad8d1683a82d1e
#: ../../topics/class-based-views/generic-editing.txt:133
msgid ""
"In Django 1.6, the ``fields`` attribute was added, which works the same way "
"as the ``fields`` attribute on the inner ``Meta`` class on "
":class:`~django.forms.ModelForm`."
msgstr ""

# f976d52399a34ba0a9f851a079dbd774
#: ../../topics/class-based-views/generic-editing.txt:137
msgid ""
"Omitting the fields attribute will work as previously, but is deprecated and"
" this attribute will be required from 1.8 (unless you define the form class "
"in another way)."
msgstr ""

# d6592ce556354a16820d22bdadd4d99e
#: ../../topics/class-based-views/generic-editing.txt:142
msgid "Finally, we hook these new views into the URLconf::"
msgstr ""

# 1c051cbbeb274cc3a3f3ae2dbfbd5846
#: ../../topics/class-based-views/generic-editing.txt:157
msgid ""
"These views inherit "
":class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin` "
"which uses "
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix`"
" to construct the "
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` based"
" on the model."
msgstr ""

# fdae5a79eba5488796480d006e73e906
#: ../../topics/class-based-views/generic-editing.txt:165
msgid "In this example:"
msgstr ""

# 88fc6eb4ae934919953621fca1bbadae
#: ../../topics/class-based-views/generic-editing.txt:167
msgid ""
":class:`CreateView` and :class:`UpdateView` use ``myapp/author_form.html``"
msgstr ""

# eef418c459a24b2f9358ede20f245e3f
#: ../../topics/class-based-views/generic-editing.txt:168
msgid ":class:`DeleteView` uses ``myapp/author_confirm_delete.html``"
msgstr ""

# 9dc0d5c24cb14004baf3f11919b4eae5
#: ../../topics/class-based-views/generic-editing.txt:170
msgid ""
"If you wish to have separate templates for :class:`CreateView` and "
":class:`UpdateView`, you can set either "
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` or "
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix`"
" on your view class."
msgstr ""

# f7c2eafb746d4a47af2cb98fa44fc410
#: ../../topics/class-based-views/generic-editing.txt:177
msgid "Models and request.user"
msgstr ""

# 1cf8c85daef149d2beee6bb3c0a3b2a7
#: ../../topics/class-based-views/generic-editing.txt:179
msgid ""
"To track the user that created an object using a :class:`CreateView`, you "
"can use a custom :class:`~django.forms.ModelForm` to do this. First, add the"
" foreign key relation to the model::"
msgstr ""

# 3adb27c788684c22bd5e389c6713229d
#: ../../topics/class-based-views/generic-editing.txt:193
msgid ""
"In the view, ensure that you don't include ``created_by`` in the list of "
"fields to edit, and override "
":meth:`~django.views.generic.edit.ModelFormMixin.form_valid()` to add the "
"user::"
msgstr ""

# 40a65d4558184e53a274dc74bb43673a
#: ../../topics/class-based-views/generic-editing.txt:209
msgid ""
"Note that you'll need to :ref:`decorate this view<decorating-class-based-"
"views>` using :func:`~django.contrib.auth.decorators.login_required`, or "
"alternatively handle unauthorized users in the "
":meth:`~django.views.generic.edit.ModelFormMixin.form_valid()`."
msgstr ""

# 4e34983f347c444fa777591314b21bbe
#: ../../topics/class-based-views/generic-editing.txt:216
msgid "AJAX example"
msgstr ""

# d1d11600e4c9490f87845c96d35ba357
#: ../../topics/class-based-views/generic-editing.txt:218
msgid ""
"Here is a simple example showing how you might go about implementing a form "
"that works for AJAX requests as well as 'normal' form POSTs::"
msgstr ""

# 0f8dd51d58214cdbb6ed72447343553d
#: ../../topics/class-based-views/index.txt:3
msgid "Class-based views"
msgstr "Vues fondées sur les classes "

# f344d35e05b540e1906856cd306aaeff
#: ../../topics/class-based-views/index.txt:5
msgid ""
"A view is a callable which takes a request and returns a response. This can "
"be more than just a function, and Django provides an example of some classes"
" which can be used as views. These allow you to structure your views and "
"reuse code by harnessing inheritance and mixins. There are also some generic"
" views for simple tasks which we'll get to later, but you may want to design"
" your own structure of reusable views which suits your use case. For full "
"details, see the :doc:`class-based views reference documentation</ref/class-"
"based-views/index>`."
msgstr "Une vue est un exécutable acceptant une requête et renvoyant une réponse. Ce n'est pas forcément une simple fonction et Django fournit des exemples de classes qui peuvent être utilisées comme des vues. Celles-ci vous permettent de structurer vos vues et de réutiliser du code en exploitant l'héritage et les « mixins ». Il existe également des vues génériques pour des tâches simples (nous y reviendrons plus tard), mais vous pouvez tout à fait concevoir votre propre structure de vues réutilisables en fonction de votre cas d'utilisation. Pour des détails plus complets, consultez la :doc:`documentation de référence des vues fondées sur les classes</ref/class-based-views/index>`."

# a9e26499fdda4967a9cc8c9c0706742f
#: ../../topics/class-based-views/index.txt:23
msgid "Basic examples"
msgstr "Exemples de base"

# ef13b7f7cd224f5ab61fc972c6beafdd
#: ../../topics/class-based-views/index.txt:25
msgid ""
"Django provides base view classes which will suit a wide range of "
"applications. All views inherit from the "
":class:`~django.views.generic.base.View` class, which handles linking the "
"view in to the URLs, HTTP method dispatching and other simple features. "
":class:`~django.views.generic.base.RedirectView` is for a simple HTTP "
"redirect, and :class:`~django.views.generic.base.TemplateView` extends the "
"base class to make it also render a template."
msgstr "Django fournit des classes de vues basiques qui conviennent à une large palette d'applications. Toutes ces vues héritent de la classe :class:`~django.views.generic.base.View`, qui gère la liaison de la vue aux URL, la distribution en fonction de la méthode HTTP et d'autres fonctionnalités de base. :class:`~django.views.generic.base.RedirectView` est utile pour de simples redirections HTTP alors que :class:`~django.views.generic.base.TemplateView` étend la classe de base afin d'être capable d'afficher un gabarit."

# 173eeb8a856844ec887c3807ecca6d1f
#: ../../topics/class-based-views/index.txt:34
msgid "Simple usage in your URLconf"
msgstr "Utilisation simple dans une configuration d'URL"

# 388bd3928e0e4bb58e32f56a39931950
#: ../../topics/class-based-views/index.txt:36
msgid ""
"The simplest way to use generic views is to create them directly in your "
"URLconf. If you're only changing a few simple attributes on a class-based "
"view, you can simply pass them into the "
":meth:`~django.views.generic.base.View.as_view` method call itself::"
msgstr "La manière la plus simple d'utiliser des vues génériques est de les créer directement dans votre configuration d'URL. Si vous ne devez changer qu'un nombre restreint d'attributs simples d'une vue fondée sur une classe, il suffit de les transmettre directement dans l'appel de méthode :meth:`~django.views.generic.base.View.as_view`::"

# bf53df749f754766a739336de14a9655
#: ../../topics/class-based-views/index.txt:48
msgid ""
"Any arguments passed to :meth:`~django.views.generic.base.View.as_view` will"
" override attributes set on the class. In this example, we set "
"``template_name`` on the ``TemplateView``. A similar overriding pattern can "
"be used for the ``url`` attribute on "
":class:`~django.views.generic.base.RedirectView`."
msgstr "Tout paramètre transmis à :meth:`~django.views.generic.base.View.as_view` surcharge l'attribut de même nom de la classe. Dans cet exemple, nous définissons ``template_name`` de la vue ``TemplateView``. Le même système de surcharge peut être utilisé pour l'attribut ``url`` de :class:`~django.views.generic.base.RedirectView`."

# 5d1dbf096c1348f7a0285576a6fd7da2
#: ../../topics/class-based-views/index.txt:55
msgid "Subclassing generic views"
msgstr "Héritage des vues génériques"

# 021a7cb4e52047caab217934219789a3
#: ../../topics/class-based-views/index.txt:57
msgid ""
"The second, more powerful way to use generic views is to inherit from an "
"existing view and override attributes (such as the ``template_name``) or "
"methods (such as ``get_context_data``) in your subclass to provide new "
"values or methods. Consider, for example, a view that just displays one "
"template, ``about.html``. Django has a generic view to do this - "
":class:`~django.views.generic.base.TemplateView` - so we can just subclass "
"it, and override the template name::"
msgstr "L'autre façon, plus puissante, d'utiliser les vues génériques est d'hériter d'une vue existante et de surcharger ses attributs (comme ``template_name``) ou ses méthodes (comme ``get_context_data``) dans votre sous-classe pour fournir d'autres valeurs ou méthodes. Considérez par exemple une vue qui ne fait qu'afficher un gabarit, ``about.html``. Django possède une vue générique pour faire cela, :class:`~django.views.generic.base.TemplateView`, il nous suffit donc d'en hériter et de surcharger la variable du nom du gabarit ::"

# e34ea698b1bf465a8923246bfd3c7fa8
#: ../../topics/class-based-views/index.txt:71
msgid ""
"Then we just need to add this new view into our URLconf. "
":class:`~django.views.generic.base.TemplateView` is a class, not a function,"
" so we point the URL to the :meth:`~django.views.generic.base.View.as_view` "
"class method instead, which provides a function-like entry to class-based "
"views::"
msgstr "Puis, il suffit d'ajouter cette nouvelle vue dans notre configuration d'URL. Comme :class:`~django.views.generic.base.TemplateView` est une classe, pas une fonction, il est nécessaire de faire correspondre l'URL avec la méthode de classe :meth:`~django.views.generic.base.View.as_view` qui constitue un point d'entrée de type fonction pour les vues fondées sur les classes ::"

# 7fe3c8a20d2e46c7b751e7c6d6680f3a
#: ../../topics/class-based-views/index.txt:86
msgid ""
"For more information on how to use the built in generic views, consult the "
"next topic on :doc:`generic class based views</topics/class-based-views"
"/generic-display>`."
msgstr "Pour plus d'informations sur la façon d'utiliser les vues génériques intégrées dans Django, consultez le prochain thème sur les :doc:`vues génériques fondées sur les classes</topics/class-based-views/generic-display>`."

# 942461ed40374c3b8806b397a9120db3
#: ../../topics/class-based-views/index.txt:92
msgid "Supporting other HTTP methods"
msgstr "Prise en charge de méthodes HTTP alternatives"

# 868642cdc3a043abaa6797222ed90889
#: ../../topics/class-based-views/index.txt:94
msgid ""
"Suppose somebody wants to access our book library over HTTP using the views "
"as an API. The API client would connect every now and then and download book"
" data for the books published since last visit. But if no new books appeared"
" since then, it is a waste of CPU time and bandwidth to fetch the books from"
" the database, render a full response and send it to the client. It might be"
" preferable to ask the API when the most recent book was published."
msgstr "Supposons que quelqu'un veuille accéder à notre bibliothèque de livres par HTTP en utilisant les vues comme API. Le client de cette API se connecte de temps à autre et télécharge les données des livres publiés depuis sa dernière visite. Mais si aucune publication n'a eu lieu dans l'intervalle, ce serait une perte de temps processeur et de bande passante que de récupérer les livres de la base de données, de produire une réponse complète et de l'envoyer au client. Il pourrait être préférable d'interroger l'API au sujet de la date de publication la plus récente."

# a106554d4bac4fd2a8176e6cc0e3af8f
#: ../../topics/class-based-views/index.txt:101
msgid "We map the URL to book list view in the URLconf::"
msgstr "Nous faisons correspondre l'URL à la vue de la liste des livres dans la configuration d'URL ::"

# bb9636c2ab294961b7ecaa85123903fe
#: ../../topics/class-based-views/index.txt:110
msgid "And the view::"
msgstr "Et la vue ::"

# 0fa9c172c490489692e232f775dcd68c
#: ../../topics/class-based-views/index.txt:126
msgid ""
"If the view is accessed from a ``GET`` request, a plain-and-simple object "
"list is returned in the response (using ``book_list.html`` template). But if"
" the client issues a ``HEAD`` request, the response has an empty body and "
"the ``Last-Modified`` header indicates when the most recent book was "
"published. Based on this information, the client may or may not download the"
" full object list."
msgstr "Si on accède à la vue par une requête ``GET``, une simple liste d'objets est renvoyée dans la réponse (en utilisant le gabarit ``book_list.html``). Mais si le client lance une requête ``HEAD``, le corps de la réponse sera vide et l'en-tête ``Last-Modified`` indiquera la date de publication de livre la plus récente. Sur la base de cette information, le client peut décider de charger ou non la liste complète des objets."

# c11968485a434e369f4cfb7ed1f89b48
#: ../../topics/class-based-views/intro.txt:3
msgid "Introduction to Class-based views"
msgstr "Introduction aux vues fondées sur les classes"

# e84b13dd1e3a44c68394804af3b5201d
#: ../../topics/class-based-views/intro.txt:5
msgid ""
"Class-based views provide an alternative way to implement views as Python "
"objects instead of functions. They do not replace function-based views, but "
"have certain differences and advantages when compared to function-based "
"views:"
msgstr "Les vues fondées sur les classes sont une autre manière d'implémenter les vues par des objets Python au lieu de fonctions. Elles ne remplacent pas les vues fondées sur les fonction, mais présentent certaines différences et avantages comparées aux vues fondées sur les fonctions :"

# 6e266d9d9c4a454385fcea2fb5a2eb5c
#: ../../topics/class-based-views/intro.txt:9
msgid ""
"Organization of code related to specific HTTP methods (``GET``, ``POST``, "
"etc) can be addressed by separate methods instead of conditional branching."
msgstr "L'organisation du code en lien avec les méthodes HTTP spécifiques (``GET``, ``POST``, etc.) peut se faire par des méthodes séparées au lieu d'utiliser un branchement conditionnel."

# 7280ba8b55044f55938d9e097c84d458
#: ../../topics/class-based-views/intro.txt:12
msgid ""
"Object oriented techniques such as mixins (multiple inheritance) can be used"
" to factor code into reusable components."
msgstr "Des techniques orientées objet comme les « mixins » (héritage multiple) peuvent être utilisées pour factoriser le code en composants réutilisables."

# 35ddc357483146c0af5739f297a4374c
#: ../../topics/class-based-views/intro.txt:16
msgid ""
"The relationship and history of generic views, class-based views, and class-"
"based generic views"
msgstr "Liaisons et historique des vues génériques, des vues fondées sur les classes et de celles fondées sur les fonctions"

# 1e858a3685264dbf961db0d781a93968
#: ../../topics/class-based-views/intro.txt:18
msgid ""
"In the beginning there was only the view function contract, Django passed "
"your function an :class:`~django.http.HttpRequest` and expected back an "
":class:`~django.http.HttpResponse`. This was the extent of what Django "
"provided."
msgstr "Au départ, il n'y avait que le contrat de la vue fonction à laquelle Django transmet un requête :class:`~django.http.HttpRequest` et de laquelle il s'attend à recevoir une réponse :class:`~django.http.HttpResponse`. C'était ce que Django lui-même pratiquait."

# 934c868b9c65409195450bc272011f96
#: ../../topics/class-based-views/intro.txt:22
msgid ""
"Early on it was recognized that there were common idioms and patterns found "
"in view development. Function-based generic views were introduced to "
"abstract these patterns and ease view development for the common cases."
msgstr "Assez rapidement, on a reconnu des idiomes et des modèles courants dans le développement des vues. Les vues génériques fondées sur les fonctions ont été introduites pour abstraire ces pratiques et faciliter le développement de vues pour ces cas courants."

# 1a902cf1f71e4533bffc20e62020fba4
#: ../../topics/class-based-views/intro.txt:26
msgid ""
"The problem with function-based generic views is that while they covered the"
" simple cases well, there was no way to extend or customize them beyond some"
" simple configuration options, limiting their usefulness in many real-world "
"applications."
msgstr "Le problème avec les vues génériques fondées sur les fonctions, c'est qu'elles recouvrent bien les cas simples, mais qu'il n'est pas possible de les étendre ou de les personnaliser au-delà de simples options de configurations, limitant ainsi leur utilité dans bien des applications du monde réel."

# 04da5478fa7a4a65ad570cfbee6429e5
#: ../../topics/class-based-views/intro.txt:31
msgid ""
"Class-based generic views were created with the same objective as function-"
"based generic views, to make view development easier. However, the way the "
"solution is implemented, through the use of mixins, provides a toolkit that "
"results in class-based generic views being more extensible and flexible than"
" their function-based counterparts."
msgstr "Les vues génériques fondées sur les classes ont été crées avec les mêmes objectifs que celles fondées sur les fonctions, pour faciliter le développement de vues. Cependant, la manière d'implémenter cette solution par l'utilisation de mixins fournit un ensemble d'outils aboutissant à des vues génériques fondées sur les classes bien plus souples et extensibles que leur contrepartie fondées sur les fonctions."

# 3f482b3b07104620a048c078ae863f05
#: ../../topics/class-based-views/intro.txt:37
msgid ""
"If you have tried function based generic views in the past and found them "
"lacking, you should not think of class-based generic views as simply a "
"class-based equivalent, but rather as a fresh approach to solving the "
"original problems that generic views were meant to solve."
msgstr "Si vous avez essayé d'utiliser les vues génériques fondées sur les fonctions par le passé et que vous les avez trouvées trop limitées, vous ne devriez pas simplement considérer les vues génériques fondées sur les classes comme des équivalents, mais plutôt comme une nouvelle approche pour résoudre les problèmes d'origine que les vues génériques étaient censées résoudre."

# 52aee928a60e4dd1b4e375a68825107c
#: ../../topics/class-based-views/intro.txt:42
msgid ""
"The toolkit of base classes and mixins that Django uses to build class-based"
" generic views are built for maximum flexibility, and as such have many "
"hooks in the form of default method implementations and attributes that you "
"are unlikely to be concerned with in the simplest use cases. For example, "
"instead of limiting you to a class based attribute for ``form_class``, the "
"implementation uses a ``get_form`` method, which calls a ``get_form_class`` "
"method, which in its default implementation just returns the ``form_class`` "
"attribute of the class. This gives you several options for specifying what "
"form to use, from a simple attribute, to a fully dynamic, callable hook. "
"These options seem to add hollow complexity for simple situations, but "
"without them, more advanced designs would be limited."
msgstr "L'ensemble des classes de base et des mixins que Django utilise pour construire les vues génériques fondées sur les classes sont conçues pour une souplesse maximale, et présentent ainsi de nombreux points d'accrochage sous les forme d'implémentation de méthodes par défaut et d'attributs qui ne vous concerneront probablement pas dans les cas d'utilisation les plus simples. Par exemple, au lieu de se limiter à un attribut de classe pour ``form_class``, l'implémentation utilise une méthode ``get_form`` appelant à son tour la méthode ``get_form_class`` qui dans son implémentation par défaut ne fait que renvoyer l'attribut ``form_class`` de la classe. Cela vous donne plusieurs options pour indiquer le formulaire à utiliser, que ce soit par un simple attribut ou par l'appel dynamique à une méthode que l'on peut surcharger. Ces options paraissent ajouter une complexité un peu absurde dans des situations simples, mais sans elles, les scénarios plus compliqués seraient limités."

# 05728f323a3442fd81040839262cc665
#: ../../topics/class-based-views/intro.txt:55
msgid "Using class-based views"
msgstr "Utilisation des vues fondées sur les classes"

# 6b6a39d2a3824091bbec3eb718e2c096
#: ../../topics/class-based-views/intro.txt:57
msgid ""
"At its core, a class-based view allows you to respond to different HTTP "
"request methods with different class instance methods, instead of with "
"conditionally branching code inside a single view function."
msgstr "À la base, une vue fondée sur les classes permet de répondre à différentes méthodes de requête HTTP par différentes méthodes d'une classe plutôt que de faire appel à des branchements conditionnels dans une unique vue de type fonction."

# b374cd4555e24dc19784f2c2a5e4cae2
#: ../../topics/class-based-views/intro.txt:61
msgid ""
"So where the code to handle HTTP ``GET`` in a view function would look "
"something like::"
msgstr "Alors que le code pour gérer la méthode HTTP ``GET`` dans une fonction de vue ressemble à quelque chose comme cela ::"

# 682726a098484f2cabdc3a3cba2f8bae
#: ../../topics/class-based-views/intro.txt:71
msgid "In a class-based view, this would become::"
msgstr "Dans une vue fondée sur les classes, cela devient ::"

# c76a2da3d0a94ae49da59e51146373b7
#: ../../topics/class-based-views/intro.txt:81
msgid ""
"Because Django's URL resolver expects to send the request and associated "
"arguments to a callable function, not a class, class-based views have an "
":meth:`~django.views.generic.base.View.as_view` class method which serves as"
" the callable entry point to your class. The ``as_view`` entry point creates"
" an instance of your class and calls its "
":meth:`~django.views.generic.base.View.dispatch` method. ``dispatch`` looks "
"at the request to determine whether it is a ``GET``, ``POST``, etc, and "
"relays the request to a matching method if one is defined, or raises "
":class:`~django.http.HttpResponseNotAllowed` if not::"
msgstr "Comme le résolveur d'URL de Django est conçu pour envoyer la requête et ses paramètres associés à une fonction exécutable et non pas à une classe, les vues fondées sur les classes possèdent une méthode de classe :meth:`~django.views.generic.base.View.as_view` servant de point d'entrée exécutable vers la classe. Le point d'entrée ``as_view`` crée une instance de la classe et appelle sa méthode :meth:`~django.views.generic.base.View.dispatch`. ``dispatch`` examine la requête pour déterminer s'il s'agit d'un ``GET``, d'un ``POST``, etc. et relaie la requête à une méthode correspondante si elle existe, ou génère l'erreur :class:`~django.http.HttpResponseNotAllowed` dans le cas contraire ::"

# d642f23ec3564d04bff46a6f847a5289
#: ../../topics/class-based-views/intro.txt:100
msgid ""
"It is worth noting that what your method returns is identical to what you "
"return from a function-based view, namely some form of "
":class:`~django.http.HttpResponse`. This means that :doc:`http shortcuts "
"</topics/http/shortcuts>` or "
":class:`~django.template.response.TemplateResponse` objects are valid to use"
" inside a class-based view."
msgstr "Il vaut la peine de relever que ce qui est renvoyé par la méthode est identique à ce qui est renvoyé par une vue de type fonction, en l'occurrence une instance de :class:`~django.http.HttpResponse`. Cela signifie que les :doc:`raccourcis http </topics/http/shortcuts>` ou les objets :class:`~django.template.response.TemplateResponse` peuvent tout à fait être utilisés dans une vue fondée sur les classes."

# 99bac474a2a94736959be921c0e204c2
#: ../../topics/class-based-views/intro.txt:107
msgid ""
"While a minimal class-based view does not require any class attributes to "
"perform its job, class attributes are useful in many class-based designs, "
"and there are two ways to configure or set class attributes."
msgstr "Même si une vue fondée sur les classes minimale ne nécessite aucun attribut de classe pour faire son travail, les attributs de classe sont utiles dans beaucoup d'architectures basées sur les classes et il existe deux façons de configurer ou de définir des attributs de classe."

# cb1b216e8b2a422b8ded6da5c72e9136
#: ../../topics/class-based-views/intro.txt:111
msgid ""
"The first is the standard Python way of subclassing and overriding "
"attributes and methods in the subclass. So that if your parent class had an "
"attribute ``greeting`` like this::"
msgstr "La première est la manière standard de Python d'hériter ou de surcharger des attributs et des méthodes dans les sous-classes. Ainsi si la classe parente avait un attribut ``greeting`` comme ceci ::"

# f90b2a11454e43eeaf107d78ae895932
#: ../../topics/class-based-views/intro.txt:124
msgid "You can override that in a subclass::"
msgstr "Vous pouvez surcharger cela dans une sous-classe ::"

# 2ce350f672634a6e8176394ccac5bf59
#: ../../topics/class-based-views/intro.txt:129
msgid ""
"Another option is to configure class attributes as keyword arguments to the "
":meth:`~django.views.generic.base.View.as_view` call in the URLconf::"
msgstr "Une autre option est de configurer des attributs de classe comme paramètres nommés dans l'appel à :meth:`~django.views.generic.base.View.as_view` dans la configuration d'URL ::"

# fcb456e3d45c4bcd9905756a4c56bd10
#: ../../topics/class-based-views/intro.txt:138
msgid ""
"While your class is instantiated for each request dispatched to it, class "
"attributes set through the :meth:`~django.views.generic.base.View.as_view` "
"entry point are configured only once at the time your URLs are imported."
msgstr "Alors qu'une instance de classe est créée pour chaque requête qu'elle doit traiter, les attributs de classe définis par le point d'entrée :meth:`~django.views.generic.base.View.as_view` ne sont configurés qu'une seule fois au moment de l'importation de la configuration d'URL."

# 3a3718a01b824a10bbfec8acfe153ed7
#: ../../topics/class-based-views/intro.txt:144
msgid "Using mixins"
msgstr "Utilisation de mixins"

# 571c590575ca45b5a711a30cabbc4b53
#: ../../topics/class-based-views/intro.txt:146
msgid ""
"Mixins are a form of multiple inheritance where behaviors and attributes of "
"multiple parent classes can be combined."
msgstr "Les mixins sont une forme d'héritage multiple où les comportements et les attributs de plusieurs classes parentes peuvent être combinés."

# 78936fd2a3f84b00ae59ac2da04b3eec
#: ../../topics/class-based-views/intro.txt:149
msgid ""
"For example, in the generic class-based views there is a mixin called "
":class:`~django.views.generic.base.TemplateResponseMixin` whose primary "
"purpose is to define the method "
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`."
" When combined with the behavior of the "
":class:`~django.views.generic.base.View` base class, the result is a "
":class:`~django.views.generic.base.TemplateView` class that will dispatch "
"requests to the appropriate matching methods (a behavior defined in the "
"``View`` base class), and that has a "
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response` "
"method that uses a "
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"attribute to return a :class:`~django.template.response.TemplateResponse` "
"object (a behavior defined in the ``TemplateResponseMixin``)."
msgstr "Par exemple, dans les vues génériques fondées sur les classes, il existe un mixin nommé :class:`~django.views.generic.base.TemplateResponseMixin` dont le rôle principal est de définir la méthode :meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`. Lorsqu'il est combiné avec le comportement de la classe de base :class:`~django.views.generic.base.View`, le résultat est une classe :class:`~django.views.generic.base.TemplateView` qui distribue les requêtes vers les méthodes correspondantes (un comportement défini dans la classe de base ``View``), et qui possède une méthode :meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response` utilisant un attribut :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` pour renvoyer un objet :class:`~django.template.response.TemplateResponse` (comportement défini dans ``TemplateResponseMixin``)."

# 8cfb9ac352e54f51a79205ec6274d425
#: ../../topics/class-based-views/intro.txt:163
msgid ""
"Mixins are an excellent way of reusing code across multiple classes, but "
"they come with some cost. The more your code is scattered among mixins, the "
"harder it will be to read a child class and know what exactly it is doing, "
"and the harder it will be to know which methods from which mixins to "
"override if you are subclassing something that has a deep inheritance tree."
msgstr "Les mixins sont une très bonne façon de réutiliser du code entre plusieurs classes, mais il y a aussi un revers de médaille. Plus votre code est réparti entre des mixins, plus il sera difficile de lire une classe enfant et de comprendre exactement ce qu'elle fait, et plus il sera difficile de savoir quelle méthode de quel mixin surcharger si vous héritez d'une structure avec une profonde arborescence d'héritage."

# 132da21a4be249948fe547365be61786
#: ../../topics/class-based-views/intro.txt:169
msgid ""
"Note also that you can only inherit from one generic view - that is, only "
"one parent class may inherit from :class:`~django.views.generic.base.View` "
"and the rest (if any) should be mixins. Trying to inherit from more than one"
" class that inherits from ``View`` - for example, trying to use a form at "
"the top of a list and combining "
":class:`~django.views.generic.edit.ProcessFormView` and "
":class:`~django.views.generic.list.ListView` - won't work as expected."
msgstr "Notez également que vous ne pouvez hériter que d'une vue générique, c'est-à-dire qu'une seule classe parente peut hériter de :class:`~django.views.generic.base.View` et toutes les autres classes (le cas échéant) doivent être des mixins. Si vous essayez d'hériter de plus d'une classe héritant de ``View``, par exemple pour utiliser un formulaire au sommet d'une liste et combiner  :class:`~django.views.generic.edit.ProcessFormView` avec :class:`~django.views.generic.list.ListView`, cela ne marchera pas comme espéré."

# 606cff891d7d4fb7b6caeda034ef0f5f
#: ../../topics/class-based-views/intro.txt:177
msgid "Handling forms with class-based views"
msgstr "Gestion de formulaires avec les vues fondées sur les classes"

# 068b65a5cbec48d998d8b580eff16145
#: ../../topics/class-based-views/intro.txt:179
msgid ""
"A basic function-based view that handles forms may look something like "
"this::"
msgstr "Une vue de type fonction qui gère des formulaires peut ressembler à ceci ::"

# 69d2002942d94f83b733d6574a895c12
#: ../../topics/class-based-views/intro.txt:197
msgid "A similar class-based view might look like::"
msgstr "Une vue équivalente fondée sur les classes pourrait ressembler à ceci ::"

# e707524bd4f74b7fb2ae7d9bd9566954
#: ../../topics/class-based-views/intro.txt:222
msgid ""
"This is a very simple case, but you can see that you would then have the "
"option of customizing this view by overriding any of the class attributes, "
"e.g. ``form_class``, via URLconf configuration, or subclassing and "
"overriding one or more of the methods (or both!)."
msgstr "Il s'agit d'un cas très simple, mais vous pouvez voir que vous aurez ensuite l'option de personnaliser cette vue en surchargeant l'un des ses attributs de classe, par ex. ``form_class``, à travers la configuration d'URL ou par l'héritage et la surcharge de l'une ou plusieurs de ses méthodes (les deux pouvant être combinés)."

# 1a708880c0d845ff802b003c3df3d114
#: ../../topics/class-based-views/intro.txt:228
msgid "Decorating class-based views"
msgstr "Décoration des vues fondées sur les classes"

# c1560e83cf6049d28a0554810b8714fd
#: ../../topics/class-based-views/intro.txt:230
msgid ""
"The extension of class-based views isn't limited to using mixins. You can "
"use also use decorators. Since class-based views aren't functions, "
"decorating them works differently depending on if you're using ``as_view`` "
"or creating a subclass."
msgstr "L'extension des vues fondées sur les classes n'est pas limitée aux mixins. Il est aussi possible d'utiliser des décorateurs. Comme les vues fondées sur les classes ne sont pas des fonctions, leur décoration fonctionne différemment selon que vous utilisez ``as_view`` ou que vous créez une sous-classe."

# 477958fe82eb4730abd23d76fd9d9140
#: ../../topics/class-based-views/intro.txt:236
msgid "Decorating in URLconf"
msgstr "Décoration dans la configuration d'URL"

# 43eb9a11ccd0409e860bc21f4179edc0
#: ../../topics/class-based-views/intro.txt:238
msgid ""
"The simplest way of decorating class-based views is to decorate the result "
"of the :meth:`~django.views.generic.base.View.as_view` method. The easiest "
"place to do this is in the URLconf where you deploy your view::"
msgstr "La façon la plus simple de décorer les vues fondées sur les classes est de décorer le résultat de la méthode :meth:`~django.views.generic.base.View.as_view`. L'endroit le plus commode pour le faire est la configuration d'URL dans laquelle la vue est déployée :"

# c64f53fbb849402487d6603857d1ee97
#: ../../topics/class-based-views/intro.txt:252
msgid ""
"This approach applies the decorator on a per-instance basis. If you want "
"every instance of a view to be decorated, you need to take a different "
"approach."
msgstr "Cette approche applique le décorateur au niveau de l'instance. Si vous souhaitez que chaque instance d'une vue soit systématiquement décorée, vous devez suivre une autre approche."

# 655c3d9ed9fc4d2d9a33b771207de59a
#: ../../topics/class-based-views/intro.txt:259
msgid "Decorating the class"
msgstr "Décoration de la classe"

# afe58ffac3884bf8989ff385fe33f934
#: ../../topics/class-based-views/intro.txt:261
msgid ""
"To decorate every instance of a class-based view, you need to decorate the "
"class definition itself. To do this you apply the decorator to the "
":meth:`~django.views.generic.base.View.dispatch` method of the class."
msgstr "Pour décorer toutes les instances d'une vue fondée sur les classes, vous devez décorer la définition de classe elle-même. À cet effet, appliquez le décorateur à la méthode :meth:`~django.views.generic.base.View.dispatch` de la classe."

# 95ad1fdbf8174ef5b37ce19d7a4e27b4
#: ../../topics/class-based-views/intro.txt:265
msgid ""
"A method on a class isn't quite the same as a standalone function, so you "
"can't just apply a function decorator to the method -- you need to transform"
" it into a method decorator first. The ``method_decorator`` decorator "
"transforms a function decorator into a method decorator so that it can be "
"used on an instance method. For example::"
msgstr "Une méthode de classe n'est pas totalement identique à une fonction autonome, il n'est donc pas possible de simplement appliquer un décorateur de fonction à la méthode, il faut préalablement le transformer en un décorateur de méthode. Le décorateur ``method_decorator`` transforme un décorateur de fonction en un décorateur de méthode afin qu'il puisse être utilisé sur une méthode d'instance. Par exemple ::"

# 3ce03d1762e544b98c71ee211cdcfd8b
#: ../../topics/class-based-views/intro.txt:282
msgid ""
"In this example, every instance of ``ProtectedView`` will have login "
"protection."
msgstr "Dans cet exemple, chaque instance de ``ProtectedView`` possédera la protection de ``login``."

# 7ec77fb01c1f47169520c6afb2e6b47a
#: ../../topics/class-based-views/intro.txt:287
msgid ""
"``method_decorator`` passes ``*args`` and ``**kwargs`` as parameters to the "
"decorated method on the class. If your method does not accept a compatible "
"set of parameters it will raise a ``TypeError`` exception."
msgstr "``method_decorator`` transmet ``*args`` et ``**kwargs`` comme paramètres à la méthode décorée de la classe. Si votre méthode n'accepte pas un jeu de paramètres compatible, cela générera une exception ``TypeError``."

# 8ffed458114547fba9691bfc11369801
#: ../../topics/class-based-views/mixins.txt:3
msgid "Using mixins with class-based views"
msgstr ""

# f3930934008c423d9de3393bd76fc0b1
#: ../../topics/class-based-views/mixins.txt:7
msgid ""
"This is an advanced topic. A working knowledge of :doc:`Django's class-based"
" views<index>` is advised before exploring these techniques."
msgstr ""

# 496b6a4438ca4293918bb130ed700821
#: ../../topics/class-based-views/mixins.txt:11
msgid ""
"Django's built-in class-based views provide a lot of functionality, but some"
" of it you may want to use separately. For instance, you may want to write a"
" view that renders a template to make the HTTP response, but you can't use "
":class:`~django.views.generic.base.TemplateView`; perhaps you need to render"
" a template only on ``POST``, with ``GET`` doing something else entirely. "
"While you could use :class:`~django.template.response.TemplateResponse` "
"directly, this will likely result in duplicate code."
msgstr ""

# cfebdd8f141e493b982ffced90e5e657
#: ../../topics/class-based-views/mixins.txt:21
msgid ""
"For this reason, Django also provides a number of mixins that provide more "
"discrete functionality. Template rendering, for instance, is encapsulated in"
" the :class:`~django.views.generic.base.TemplateResponseMixin`. The Django "
"reference documentation contains :doc:`full documentation of all the "
"mixins</ref/class-based-views/mixins>`."
msgstr ""

# 3f9e08e7ecc54ba6aadc05ab75b77da1
#: ../../topics/class-based-views/mixins.txt:29
msgid "Context and template responses"
msgstr ""

# 5a30180d980b4dc6ae9e8fa14f435c66
#: ../../topics/class-based-views/mixins.txt:31
msgid ""
"Two central mixins are provided that help in providing a consistent "
"interface to working with templates in class-based views."
msgstr ""

# 53980c1a8a3f4a47833efbcd7a81f548
#: ../../topics/class-based-views/mixins.txt:56
msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ":class:`~django.views.generic.base.TemplateResponseMixin`"

# 103839537d7c4d90a73c618787e761ca
#: ../../topics/class-based-views/mixins.txt:35
msgid ""
"Every built in view which returns a "
":class:`~django.template.response.TemplateResponse` will call the "
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"
" method that ``TemplateResponseMixin`` provides. Most of the time this will "
"be called for you (for instance, it is called by the ``get()`` method "
"implemented by both :class:`~django.views.generic.base.TemplateView` and "
":class:`~django.views.generic.detail.DetailView`); similarly, it's unlikely "
"that you'll need to override it, although if you want your response to "
"return something not rendered via a Django template then you'll want to do "
"it. For an example of this, see the :ref:`JSONResponseMixin example "
"<jsonresponsemixin-example>`."
msgstr ""

# 1403e160aed34ae99e357e1eff04442a
#: ../../topics/class-based-views/mixins.txt:47
msgid ""
"``render_to_response()`` itself calls "
":meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names`,"
" which by default will just look up "
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` on "
"the class-based view; two other mixins "
"(:class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin` and"
" :class:`~django.views.generic.list.MultipleObjectTemplateResponseMixin`) "
"override this to provide more flexible defaults when dealing with actual "
"objects."
msgstr ""

# 7f08e95332b24fec918b8543ee893122
#: ../../topics/class-based-views/mixins.txt:67
msgid ":class:`~django.views.generic.base.ContextMixin`"
msgstr ""

# 20e493f76a6748099fdfa51d769fd425
#: ../../topics/class-based-views/mixins.txt:61
msgid ""
"Every built in view which needs context data, such as for rendering a "
"template (including ``TemplateResponseMixin`` above), should call "
":meth:`~django.views.generic.base.ContextMixin.get_context_data()` passing "
"any data they want to ensure is in there as keyword arguments. "
"``get_context_data()`` returns a dictionary; in ``ContextMixin`` it simply "
"returns its keyword arguments, but it is common to override this to add more"
" members to the dictionary."
msgstr ""

# 12c342611aa74e2b928889c64dd6050b
#: ../../topics/class-based-views/mixins.txt:70
msgid "Building up Django's generic class-based views"
msgstr ""

# 55c2f3581dae44b095a50b3684c109ab
#: ../../topics/class-based-views/mixins.txt:72
msgid ""
"Let's look at how two of Django's generic class-based views are built out of"
" mixins providing discrete functionality. We'll consider "
":class:`~django.views.generic.detail.DetailView`, which renders a \"detail\""
" view of an object, and :class:`~django.views.generic.list.ListView`, which "
"will render a list of objects, typically from a queryset, and optionally "
"paginate them. This will introduce us to four mixins which between them "
"provide useful functionality when working with either a single Django "
"object, or multiple objects."
msgstr ""

# 54690f57ed3543808676f4f2c5aec293
#: ../../topics/class-based-views/mixins.txt:82
msgid ""
"There are also mixins involved in the generic edit views "
"(:class:`~django.views.generic.edit.FormView`, and the model-specific views "
":class:`~django.views.generic.edit.CreateView`, "
":class:`~django.views.generic.edit.UpdateView` and "
":class:`~django.views.generic.edit.DeleteView`), and in the date-based "
"generic views. These are covered in the :doc:`mixin reference "
"documentation</ref/class-based-views/mixins>`."
msgstr ""

# 06d59ab377c74f8988a3736f51b38123
#: ../../topics/class-based-views/mixins.txt:92
msgid "DetailView: working with a single Django object"
msgstr ""

# 559ec332b93e443180e2be6b1ee987ba
#: ../../topics/class-based-views/mixins.txt:94
msgid ""
"To show the detail of an object, we basically need to do two things: we need"
" to look up the object and then we need to make a "
":class:`~django.template.response.TemplateResponse` with a suitable "
"template, and that object as context."
msgstr ""

# 30d31302f54d4785a41694790f4d0bcf
#: ../../topics/class-based-views/mixins.txt:99
msgid ""
"To get the object, :class:`~django.views.generic.detail.DetailView` relies "
"on :class:`~django.views.generic.detail.SingleObjectMixin`, which provides a"
" :meth:`~django.views.generic.detail.SingleObjectMixin.get_object` method "
"that figures out the object based on the URL of the request (it looks for "
"``pk`` and ``slug`` keyword arguments as declared in the URLConf, and looks "
"the object up either from the "
":attr:`~django.views.generic.detail.SingleObjectMixin.model` attribute on "
"the view, or the "
":attr:`~django.views.generic.detail.SingleObjectMixin.queryset` attribute if"
" that's provided). ``SingleObjectMixin`` also overrides "
":meth:`~django.views.generic.base.ContextMixin.get_context_data()`, which is"
" used across all Django's built in class-based views to supply context data "
"for template renders."
msgstr ""

# fb66512c867e440fb683038e23cc99e5
#: ../../topics/class-based-views/mixins.txt:114
msgid ""
"To then make a :class:`~django.template.response.TemplateResponse`, "
":class:`DetailView` uses "
":class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin`, "
"which extends :class:`~django.views.generic.base.TemplateResponseMixin`, "
"overriding "
":meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names()`"
" as discussed above. It actually provides a fairly sophisticated set of "
"options, but the main one that most people are going to use is "
"``<app_label>/<object_name>_detail.html``. The ``_detail`` part can be "
"changed by setting "
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix`"
" on a subclass to something else. (For instance, the :doc:`generic edit "
"views<generic-editing>` use ``_form`` for create and update views, and "
"``_confirm_delete`` for delete views.)"
msgstr ""

# 4f65b8db9e4442c485d9bd5d6dd5b686
#: ../../topics/class-based-views/mixins.txt:130
msgid "ListView: working with many Django objects"
msgstr ""

# 6c44b7eeaac94a6299c4e72a9f9be071
#: ../../topics/class-based-views/mixins.txt:132
msgid ""
"Lists of objects follow roughly the same pattern: we need a (possibly "
"paginated) list of objects, typically a "
":class:`~django.db.models.query.QuerySet`, and then we need to make a "
":class:`~django.template.response.TemplateResponse` with a suitable template"
" using that list of objects."
msgstr ""

# e5cb3d6d7bde443882fd6d66f9c5fd06
#: ../../topics/class-based-views/mixins.txt:138
msgid ""
"To get the objects, :class:`~django.views.generic.list.ListView` uses "
":class:`~django.views.generic.list.MultipleObjectMixin`, which provides both"
" :meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset` and "
":meth:`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`. "
"Unlike with :class:`~django.views.generic.detail.SingleObjectMixin`, there's"
" no need to key off parts of the URL to figure out the queryset to work "
"with, so the default just uses the "
":attr:`~django.views.generic.list.MultipleObjectMixin.queryset` or "
":attr:`~django.views.generic.list.MultipleObjectMixin.model` attribute on "
"the view class. A common reason to override "
":meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset` here "
"would be to dynamically vary the objects, such as depending on the current "
"user or to exclude posts in the future for a blog."
msgstr ""

# 839294395b45459faca251ec6985ab42
#: ../../topics/class-based-views/mixins.txt:154
msgid ""
":class:`~django.views.generic.list.MultipleObjectMixin` also overrides "
":meth:`~django.views.generic.base.ContextMixin.get_context_data()` to "
"include appropriate context variables for pagination (providing dummies if "
"pagination is disabled). It relies on ``object_list`` being passed in as a "
"keyword argument, which :class:`ListView` arranges for it."
msgstr ""

# f73e641d50494c428332ac2ae89a22c9
#: ../../topics/class-based-views/mixins.txt:161
msgid ""
"To make a :class:`~django.template.response.TemplateResponse`, "
":class:`ListView` then uses "
":class:`~django.views.generic.list.MultipleObjectTemplateResponseMixin`; as "
"with :class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin`"
" above, this overrides ``get_template_names()`` to provide :meth:`a range of"
" options <django.views.generic.list.MultipleObjectTemplateResponseMixin>`, "
"with the most commonly-used being ``<app_label>/<object_name>_list.html``, "
"with the ``_list`` part again being taken from the "
":attr:`~django.views.generic.list.MultipleObjectTemplateResponseMixin.template_name_suffix`"
" attribute. (The date based generic views use suffixes such as ``_archive``,"
" ``_archive_year`` and so on to use different templates for the various "
"specialised date-based list views.)"
msgstr ""

# e54100c719d24f8a8b6c28fa443a1331
#: ../../topics/class-based-views/mixins.txt:176
msgid "Using Django's class-based view mixins"
msgstr ""

# 13b79e7c70c64e4cb044d66e75a07ed5
#: ../../topics/class-based-views/mixins.txt:178
msgid ""
"Now we've seen how Django's generic class-based views use the provided "
"mixins, let's look at other ways we can combine them. Of course we're still "
"going to be combining them with either built-in class-based views, or other "
"generic class-based views, but there are a range of rarer problems you can "
"solve than are provided for by Django out of the box."
msgstr ""

# 152199cc016643c59a9941187505c1b1
#: ../../topics/class-based-views/mixins.txt:187
msgid ""
"Not all mixins can be used together, and not all generic class based views "
"can be used with all other mixins. Here we present a few examples that do "
"work; if you want to bring together other functionality then you'll have to "
"consider interactions between attributes and methods that overlap between "
"the different classes you're using, and how `method resolution order`_ will "
"affect which versions of the methods will be called in what order."
msgstr ""

# 4bb5571551d2445b81fb1e2445e4f60b
#: ../../topics/class-based-views/mixins.txt:195
msgid ""
"The reference documentation for Django's :doc:`class-based views</ref/class-"
"based-views/index>` and :doc:`class-based view mixins</ref/class-based-"
"views/mixins>` will help you in understanding which attributes and methods "
"are likely to cause conflict between different classes and mixins."
msgstr ""

# da0cb2f6fa524963bd8375e7f312394a
#: ../../topics/class-based-views/mixins.txt:201
msgid ""
"If in doubt, it's often better to back off and base your work on "
":class:`View` or :class:`TemplateView`, perhaps with "
":class:`~django.views.generic.detail.SingleObjectMixin` and "
":class:`~django.views.generic.list.MultipleObjectMixin`. Although you will "
"probably end up writing more code, it is more likely to be clearly "
"understandable to someone else coming to it later, and with fewer "
"interactions to worry about you will save yourself some thinking. (Of "
"course, you can always dip into Django's implementation of the generic class"
" based views for inspiration on how to tackle problems.)"
msgstr ""

# cdbd2d4985514077b37ea49152c5454f
#: ../../topics/class-based-views/mixins.txt:215
msgid "Using SingleObjectMixin with View"
msgstr ""

# 7adf825641014e7b9d3dfc417cc0c6f2
#: ../../topics/class-based-views/mixins.txt:217
msgid ""
"If we want to write a simple class-based view that responds only to "
"``POST``, we'll subclass :class:`~django.views.generic.base.View` and write "
"a ``post()`` method in the subclass. However if we want our processing to "
"work on a particular object, identified from the URL, we'll want the "
"functionality provided by "
":class:`~django.views.generic.detail.SingleObjectMixin`."
msgstr ""

# 28e3f94137e84aa6b6ea6f238f877382
#: ../../topics/class-based-views/mixins.txt:224
msgid ""
"We'll demonstrate this with the publisher modelling we used in the "
":doc:`generic class-based views introduction<generic-display>`."
msgstr ""

# 1f41149c363c4928a793605f51206efa
#: ../../topics/class-based-views/mixins.txt:250
msgid ""
"In practice you'd probably want to record the interest in a key-value store "
"rather than in a relational database, so we've left that bit out. The only "
"bit of the view that needs to worry about using "
":class:`~django.views.generic.detail.SingleObjectMixin` is where we want to "
"look up the author we're interested in, which it just does with a simple "
"call to ``self.get_object()``. Everything else is taken care of for us by "
"the mixin."
msgstr ""

# a0862655867c4ed9868003916a5ac608
#: ../../topics/class-based-views/mixins.txt:258
msgid "We can hook this into our URLs easily enough::"
msgstr ""

# 03f75e95035a48a0ad47a8b3cf6a3697
#: ../../topics/class-based-views/mixins.txt:269
msgid ""
"Note the ``pk`` named group, which "
":meth:`~django.views.generic.detail.SingleObjectMixin.get_object` uses to "
"look up the ``Author`` instance. You could also use a slug, or any of the "
"other features of :class:`~django.views.generic.detail.SingleObjectMixin`."
msgstr ""

# 8803ec66d8b442eba5305e10901f98ba
#: ../../topics/class-based-views/mixins.txt:276
msgid "Using SingleObjectMixin with ListView"
msgstr ""

# 0cc5759364f7430ab6385867e1a8a467
#: ../../topics/class-based-views/mixins.txt:278
msgid ""
":class:`~django.views.generic.list.ListView` provides built-in pagination, "
"but you might want to paginate a list of objects that are all linked (by a "
"foreign key) to another object. In our publishing example, you might want to"
" paginate through all the books by a particular publisher."
msgstr ""

# a97baabdb1e644b887f2c9902ca4d3e4
#: ../../topics/class-based-views/mixins.txt:284
msgid ""
"One way to do this is to combine :class:`ListView` with "
":class:`~django.views.generic.detail.SingleObjectMixin`, so that the "
"queryset for the paginated list of books can hang off the publisher found as"
" the single object. In order to do this, we need to have two different "
"querysets:"
msgstr ""

# 775aa0d4bf3647708994fad23da3eced
#: ../../topics/class-based-views/mixins.txt:292
msgid ""
"``Book`` queryset for use by :class:`~django.views.generic.list.ListView`"
msgstr ""

# 94b421b2b4e34dc39e173147f62e6f88
#: ../../topics/class-based-views/mixins.txt:290
msgid ""
"Since we have access to the ``Publisher`` whose books we want to list, we "
"simply override ``get_queryset()`` and use the ``Publisher``’s :ref:`reverse"
" foreign key manager<backwards-related-objects>`."
msgstr ""

# b40caaa03bf640ce907455cd642a2806
#: ../../topics/class-based-views/mixins.txt:300
msgid ""
"``Publisher`` queryset for use in "
":meth:`~django.views.generic.detail.SingleObjectMixin.get_object()`"
msgstr ""

# c7dcd82710b143e085ab9e445ef72682
#: ../../topics/class-based-views/mixins.txt:295
msgid ""
"We'll rely on the default implementation of ``get_object()`` to fetch the "
"correct ``Publisher`` object. However, we need to explicitly pass a "
"``queryset`` argument because otherwise the default implementation of "
"``get_object()`` would call ``get_queryset()`` which we have overridden to "
"return ``Book`` objects instead of ``Publisher`` ones."
msgstr ""

# 7ce1ca44409447bb9e20c673fbbf1d8f
#: ../../topics/class-based-views/mixins.txt:304
msgid ""
"We have to think carefully about ``get_context_data()``. Since both "
":class:`~django.views.generic.detail.SingleObjectMixin` and "
":class:`ListView` will put things in the context data under the value of "
"``context_object_name`` if it's set, we'll instead explictly ensure the "
"``Publisher`` is in the context data. :class:`ListView` will add in the "
"suitable ``page_obj`` and ``paginator`` for us providing we remember to call"
" ``super()``."
msgstr ""

# 81681b979d89406db48426ae54946dc6
#: ../../topics/class-based-views/mixins.txt:313
msgid "Now we can write a new ``PublisherDetail``::"
msgstr ""

# 4970d819cb3c489e8c179fa4a272686d
#: ../../topics/class-based-views/mixins.txt:335
msgid ""
"Notice how we set ``self.object`` within ``get()`` so we can use it again "
"later in ``get_context_data()`` and ``get_queryset()``. If you don't set "
"``template_name``, the template will default to the normal :class:`ListView`"
" choice, which in this case would be ``\"books/book_list.html\"`` because "
"it's a list of books; :class:`ListView` knows nothing about "
":class:`~django.views.generic.detail.SingleObjectMixin`, so it doesn't have "
"any clue this view is anything to do with a ``Publisher``."
msgstr ""

# 64f5ac13aa514842b706373ded305b90
#: ../../topics/class-based-views/mixins.txt:344
msgid ""
"The ``paginate_by`` is deliberately small in the example so you don't have "
"to create lots of books to see the pagination working! Here's the template "
"you'd want to use:"
msgstr ""

# 60503d32fed341e0a35011ea2ab49bfb
#: ../../topics/class-based-views/mixins.txt:379
msgid "Avoid anything more complex"
msgstr ""

# 8b29bf73f4874389a0c76a8e62187e84
#: ../../topics/class-based-views/mixins.txt:381
msgid ""
"Generally you can use "
":class:`~django.views.generic.base.TemplateResponseMixin` and "
":class:`~django.views.generic.detail.SingleObjectMixin` when you need their "
"functionality. As shown above, with a bit of care you can even combine "
"``SingleObjectMixin`` with :class:`~django.views.generic.list.ListView`. "
"However things get increasingly complex as you try to do so, and a good rule"
" of thumb is:"
msgstr ""

# e9c0f32728ee4b07b0117ea9ec530905
#: ../../topics/class-based-views/mixins.txt:391
msgid ""
"Each of your views should use only mixins or views from one of the groups of"
" generic class-based views: :doc:`detail, list<generic-display>`, "
":doc:`editing<generic-editing>` and date. For example it's fine to combine "
":class:`TemplateView` (built in view) with "
":class:`~django.views.generic.list.MultipleObjectMixin` (generic list), but "
"you're likely to have problems combining ``SingleObjectMixin`` (generic "
"detail) with ``MultipleObjectMixin`` (generic list)."
msgstr ""

# d760ea542b7749aabd479895b01c47b7
#: ../../topics/class-based-views/mixins.txt:400
msgid ""
"To show what happens when you try to get more sophisticated, we show an "
"example that sacrifices readability and maintainability when there is a "
"simpler solution. First, let's look at a naive attempt to combine "
":class:`~django.views.generic.detail.DetailView` with "
":class:`~django.views.generic.edit.FormMixin` to enable use to ``POST`` a "
"Django :class:`~django.forms.Form` to the same URL as we're displaying an "
"object using :class:`DetailView`."
msgstr ""

# 93c4ef85a640479ea762e5ca4923d4a2
#: ../../topics/class-based-views/mixins.txt:409
msgid "Using FormMixin with DetailView"
msgstr ""

# f93408c334094cf18ec4435de7fa23d7
#: ../../topics/class-based-views/mixins.txt:411
msgid ""
"Think back to our earlier example of using :class:`View` and "
":class:`~django.views.generic.detail.SingleObjectMixin` together. We were "
"recording a user's interest in a particular author; say now that we want to "
"let them leave a message saying why they like them. Again, let's assume "
"we're not going to store this in a relational database but instead in "
"something more esoteric that we won't worry about here."
msgstr ""

# 212cbf9dcd764959a6aa8382f54221cf
#: ../../topics/class-based-views/mixins.txt:418
msgid ""
"At this point it's natural to reach for a :class:`~django.forms.Form` to "
"encapsulate the information sent from the user's browser to Django. Say also"
" that we're heavily invested in `REST`_, so we want to use the same URL for "
"displaying the author as for capturing the message from the user. Let's "
"rewrite our ``AuthorDetailView`` to do that."
msgstr ""

# 5db3ab1f9e2e4153a05128e43afbc93a
#: ../../topics/class-based-views/mixins.txt:426
msgid ""
"We'll keep the ``GET`` handling from :class:`DetailView`, although we'll "
"have to add a :class:`~django.forms.Form` into the context data so we can "
"render it in the template. We'll also want to pull in form processing from "
":class:`~django.views.generic.edit.FormMixin`, and write a bit of code so "
"that on ``POST`` the form gets called appropriately."
msgstr ""

# 6778ed6d032f45d0a6cc62b3795cf7ec
#: ../../topics/class-based-views/mixins.txt:434
msgid ""
"We use :class:`~django.views.generic.edit.FormMixin` and implement "
"``post()`` ourselves rather than try to mix :class:`DetailView` with "
":class:`FormView` (which provides a suitable ``post()`` already) because "
"both of the views implement ``get()``, and things would get much more "
"confusing."
msgstr ""

# fb51e283c139472d973024fe4c91e151
#: ../../topics/class-based-views/mixins.txt:440
msgid "Our new ``AuthorDetail`` looks like this::"
msgstr ""

# 1f01356d79a04545a4fe6b4f37cab909
#: ../../topics/class-based-views/mixins.txt:486
msgid ""
"``get_success_url()`` is just providing somewhere to redirect to, which gets"
" used in the default implementation of ``form_valid()``. We have to provide "
"our own ``post()`` as noted earlier, and override ``get_context_data()`` to "
"make the :class:`~django.forms.Form` available in the context data."
msgstr ""

# af6ca894aa7c4c8cb64cf09e2e49410d
#: ../../topics/class-based-views/mixins.txt:493
msgid "A better solution"
msgstr ""

# f1eaeef27d3149f3a5ef965b7691a2f5
#: ../../topics/class-based-views/mixins.txt:495
msgid ""
"It should be obvious that the number of subtle interactions between "
":class:`~django.views.generic.edit.FormMixin` and :class:`DetailView` is "
"already testing our ability to manage things. It's unlikely you'd want to "
"write this kind of class yourself."
msgstr ""

# 9422bbe8c41f48afbd007586b5e3c678
#: ../../topics/class-based-views/mixins.txt:500
msgid ""
"In this case, it would be fairly easy to just write the ``post()`` method "
"yourself, keeping :class:`DetailView` as the only generic functionality, "
"although writing :class:`~django.forms.Form` handling code involves a lot of"
" duplication."
msgstr ""

# 2c2d7dbe6b1d44a8964503fbc31b3d0a
#: ../../topics/class-based-views/mixins.txt:505
msgid ""
"Alternatively, it would still be easier than the above approach to have a "
"separate view for processing the form, which could use "
":class:`~django.views.generic.edit.FormView` distinct from "
":class:`DetailView` without concerns."
msgstr ""

# 0700a4bceb2048e7bb2fbf3be15c650a
#: ../../topics/class-based-views/mixins.txt:511
msgid "An alternative better solution"
msgstr ""

# 3d8a038be6b648b7abdfcafae405c240
#: ../../topics/class-based-views/mixins.txt:513
msgid ""
"What we're really trying to do here is to use two different class based "
"views from the same URL. So why not do just that? We have a very clear "
"division here: ``GET`` requests should get the :class:`DetailView` (with the"
" :class:`~django.forms.Form` added to the context data), and ``POST`` "
"requests should get the :class:`FormView`. Let's set up those views first."
msgstr ""

# 516823271b324640a2fae1848d921b45
#: ../../topics/class-based-views/mixins.txt:520
msgid ""
"The ``AuthorDisplay`` view is almost the same as :ref:`when we first "
"introduced AuthorDetail<generic-views-extra-work>`; we have to write our own"
" ``get_context_data()`` to make the ``AuthorInterestForm`` available to the "
"template. We'll skip the ``get_object()`` override from before for clarity."
msgstr ""

# f6a7eb8b66d14ebf80438a393c81bcb6
#: ../../topics/class-based-views/mixins.txt:543
msgid ""
"Then the ``AuthorInterest`` is a simple :class:`FormView`, but we have to "
"bring in :class:`~django.views.generic.detail.SingleObjectMixin` so we can "
"find the author we're talking about, and we have to remember to set "
"``template_name`` to ensure that form errors will render the same template "
"as ``AuthorDisplay`` is using on ``GET``."
msgstr ""

# 95c822ea13af490c8d714841be6fd2c5
#: ../../topics/class-based-views/mixins.txt:570
msgid ""
"Finally we bring this together in a new ``AuthorDetail`` view. We already "
"know that calling :meth:`~django.views.generic.base.View.as_view()` on a "
"class-based view gives us something that behaves exactly like a function "
"based view, so we can do that at the point we choose between the two "
"subviews."
msgstr ""

# 5c80d801083c4ff5ae4f3cb177feea92
#: ../../topics/class-based-views/mixins.txt:575
msgid ""
"You can of course pass through keyword arguments to "
":meth:`~django.views.generic.base.View.as_view()` in the same way you would "
"in your URLconf, such as if you wanted the ``AuthorInterest`` behavior to "
"also appear at another URL but using a different template."
msgstr ""

# ca0880cac38f4ac1a5c9339b72b6ded8
#: ../../topics/class-based-views/mixins.txt:594
msgid ""
"This approach can also be used with any other generic class-based views or "
"your own class-based views inheriting directly from :class:`View` or "
":class:`TemplateView`, as it keeps the different views as separate as "
"possible."
msgstr ""

# d61af1090c3e4778aaa9e472370efe10
#: ../../topics/class-based-views/mixins.txt:602
msgid "More than just HTML"
msgstr ""

# e6d748b5582b4480a0dacf84c3946c61
#: ../../topics/class-based-views/mixins.txt:604
msgid ""
"Where class based views shine is when you want to do the same thing many "
"times. Suppose you're writing an API, and every view should return JSON "
"instead of rendered HTML."
msgstr ""

# 81d37a337589407bbb3db1702b487ab4
#: ../../topics/class-based-views/mixins.txt:608
msgid ""
"We can create a mixin class to use in all of our views, handling the "
"conversion to JSON once."
msgstr ""

# 4ac27881dba1406caec7cad885146f89
#: ../../topics/class-based-views/mixins.txt:611
msgid "For example, a simple JSON mixin might look something like this::"
msgstr ""

# b50f700a4107465293be65d41977a70e
#: ../../topics/class-based-views/mixins.txt:640
msgid ""
"Check out the :doc:`/topics/serialization` documentation for more "
"information on how to correctly transform Django models and querysets into "
"JSON."
msgstr ""

# 1c5e0994b6a945d9a311c335ee935bc5
#: ../../topics/class-based-views/mixins.txt:644
msgid ""
"This mixin provides a ``render_to_json_response()`` method with the same "
"signature as "
":func:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`."
" To use it, we simply need to mix it into a ``TemplateView`` for example, "
"and override ``render_to_response()`` to call ``render_to_json_response()`` "
"instead::"
msgstr ""

# ac201099990c4c1cbac20a80144e909b
#: ../../topics/class-based-views/mixins.txt:655
msgid ""
"Equally we could use our mixin with one of the generic views. We can make "
"our own version of :class:`~django.views.generic.detail.DetailView` by "
"mixing ``JSONResponseMixin`` with the "
"``django.views.generic.detail.BaseDetailView`` -- (the "
":class:`~django.views.generic.detail.DetailView` before template rendering "
"behavior has been mixed in)::"
msgstr ""

# 57c079372b16459aa7fc26f121a8dd04
#: ../../topics/class-based-views/mixins.txt:668
msgid ""
"This view can then be deployed in the same way as any other "
":class:`~django.views.generic.detail.DetailView`, with exactly the same "
"behavior -- except for the format of the response."
msgstr ""

# 1faf0e6639bc492d91190139f1ef1cd4
#: ../../topics/class-based-views/mixins.txt:672
msgid ""
"If you want to be really adventurous, you could even mix a "
":class:`~django.views.generic.detail.DetailView` subclass that is able to "
"return *both* HTML and JSON content, depending on some property of the HTTP "
"request, such as a query argument or a HTTP header. Just mix in both the "
"``JSONResponseMixin`` and a "
":class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin`, and"
" override the implementation of "
":func:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"
" to defer to the appropriate rendering method depending on the type of "
"response that the user requested::"
msgstr ""

# baf56e866f994fdaa716580a08bbbc19
#: ../../topics/class-based-views/mixins.txt:693
msgid ""
"Because of the way that Python resolves method overloading, the call to "
"``super(HybridDetailView, self).render_to_response(context)`` ends up "
"calling the "
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"
" implementation of "
":class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""

# 28cfa5964a984840987a4446b1d628bf
#: ../../topics/conditional-view-processing.txt:3
msgid "Conditional View Processing"
msgstr ""

# c56d293772f14adab7ea1df7caaab6ae
#: ../../topics/conditional-view-processing.txt:5
msgid ""
"HTTP clients can send a number of headers to tell the server about copies of"
" a resource that they have already seen. This is commonly used when "
"retrieving a Web page (using an HTTP ``GET`` request) to avoid sending all "
"the data for something the client has already retrieved. However, the same "
"headers can be used for all HTTP methods (``POST``, ``PUT``, ``DELETE``, "
"etc)."
msgstr ""

# c333a55bf64a46d3af3bbad580518d35
#: ../../topics/conditional-view-processing.txt:11
msgid ""
"For each page (response) that Django sends back from a view, it might "
"provide two HTTP headers: the ``ETag`` header and the ``Last-Modified`` "
"header. These headers are optional on HTTP responses. They can be set by "
"your view function, or you can rely on the "
":class:`~django.middleware.common.CommonMiddleware` middleware to set the "
"``ETag`` header."
msgstr ""

# a553b7050f5b42ceb753bcc2371f8bf6
#: ../../topics/conditional-view-processing.txt:17
msgid ""
"When the client next requests the same resource, it might send along a "
"header such as `If-modified-since`_, containing the date of the last "
"modification time it was sent, or `If-none-match`_, containing the ``ETag`` "
"it was sent. If the current version of the page matches the ``ETag`` sent by"
" the client, or if the resource has not been modified, a 304 status code can"
" be sent back, instead of a full response, telling the client that nothing "
"has changed."
msgstr ""

# 1cd60384695a4760afe67480a208b96e
#: ../../topics/conditional-view-processing.txt:27
msgid ""
"When you need more fine-grained control you may use per-view conditional "
"processing functions."
msgstr ""

# 3772e3f6a0cb427eaecd0ebd02e927e1
#: ../../topics/conditional-view-processing.txt:33
msgid "The ``condition`` decorator"
msgstr ""

# e897fd581d1a4ef19f981a63f967ec02
#: ../../topics/conditional-view-processing.txt:35
msgid ""
"Sometimes (in fact, quite often) you can create functions to rapidly compute"
" the ETag_ value or the last-modified time for a resource, **without** "
"needing to do all the computations needed to construct the full view. Django"
" can then use these functions to provide an \"early bailout\" option for the"
" view processing. Telling the client that the content has not been modified "
"since the last request, perhaps."
msgstr ""

# a022725b405c42728daeea5cb261154f
#: ../../topics/conditional-view-processing.txt:44
msgid ""
"These two functions are passed as parameters the "
"``django.views.decorators.http.condition`` decorator. This decorator uses "
"the two functions (you only need to supply one, if you can't compute both "
"quantities easily and quickly) to work out if the headers in the HTTP "
"request match those on the resource. If they don't match, a new copy of the "
"resource must be computed and your normal view is called."
msgstr ""

# 14891a7e79524a2f983833f2161e313e
#: ../../topics/conditional-view-processing.txt:51
msgid "The ``condition`` decorator's signature looks like this::"
msgstr ""

# 62b8b720f6224cde8c7ac481b555fa40
#: ../../topics/conditional-view-processing.txt:55
msgid ""
"The two functions, to compute the ETag and the last modified time, will be "
"passed the incoming ``request`` object and the same parameters, in the same "
"order, as the view function they are helping to wrap. The function passed "
"``last_modified_func`` should return a standard datetime value specifying "
"the last time the resource was modified, or ``None`` if the resource doesn't"
" exist. The function passed to the ``etag`` decorator should return a string"
" representing the `Etag`_ for the resource, or ``None`` if it doesn't exist."
msgstr ""

# 2dc6181c377b4d0dad8931fb2551224e
#: ../../topics/conditional-view-processing.txt:63
msgid ""
"Using this feature usefully is probably best explained with an example. "
"Suppose you have this pair of models, representing a simple blog system::"
msgstr ""

# 8460f8b5bde941baa23d0c7444d07e25
#: ../../topics/conditional-view-processing.txt:77
msgid ""
"If the front page, displaying the latest blog entries, only changes when you"
" add a new blog entry, you can compute the last modified time very quickly. "
"You need the latest ``published`` date for every entry associated with that "
"blog. One way to do this would be::"
msgstr ""

# bcbc59d48c59420cb9f409e6f1edfc07
#: ../../topics/conditional-view-processing.txt:85
msgid ""
"You can then use this function to provide early detection of an unchanged "
"page for your front page view::"
msgstr ""

# aa025bbd910b4a1793d87aae8ea6dd48
#: ../../topics/conditional-view-processing.txt:95
msgid "Shortcuts for only computing one value"
msgstr ""

# 6cd979fec2db4b0ea227c26131b7c17f
#: ../../topics/conditional-view-processing.txt:97
msgid ""
"As a general rule, if you can provide functions to compute *both* the ETag "
"and the last modified time, you should do so. You don't know which headers "
"any given HTTP client will send you, so be prepared to handle both. However,"
" sometimes only one value is easy to compute and Django provides decorators "
"that handle only ETag or only last-modified computations."
msgstr ""

# 29464968f6c249118f843cd0b504d060
#: ../../topics/conditional-view-processing.txt:103
msgid ""
"The ``django.views.decorators.http.etag`` and "
"``django.views.decorators.http.last_modified`` decorators are passed the "
"same type of functions as the ``condition`` decorator. Their signatures "
"are::"
msgstr ""

# 3e3565354aef40f0b489ab6c6afbb658
#: ../../topics/conditional-view-processing.txt:110
msgid ""
"We could write the earlier example, which only uses a last-modified "
"function, using one of these decorators::"
msgstr ""

# b07b86d85cc84ae89bffb50da3a512ee
#: ../../topics/conditional-view-processing.txt:117
msgid "...or::"
msgstr ""

# aa5147a77a8a4e418948500fa2f03277
#: ../../topics/conditional-view-processing.txt:124
msgid "Use ``condition`` when testing both conditions"
msgstr ""

# 717015d546744e138c2c12e543cec0ce
#: ../../topics/conditional-view-processing.txt:126
msgid ""
"It might look nicer to some people to try and chain the ``etag`` and "
"``last_modified`` decorators if you want to test both preconditions. "
"However, this would lead to incorrect behavior."
msgstr ""

# acc46b9a13d14706a9e30816427c6e67
#: ../../topics/conditional-view-processing.txt:140
msgid ""
"The first decorator doesn't know anything about the second and might answer "
"that the response is not modified even if the second decorators would "
"determine otherwise. The ``condition`` decorator uses both callback "
"functions simultaneously to work out the right action to take."
msgstr ""

# bd00204ee0f344b4b92ffd51fe6c1709
#: ../../topics/conditional-view-processing.txt:146
msgid "Using the decorators with other HTTP methods"
msgstr ""

# 7b689c876f3b4923a312cc68e10364f4
#: ../../topics/conditional-view-processing.txt:148
msgid ""
"The ``condition`` decorator is useful for more than only ``GET`` and "
"``HEAD`` requests (``HEAD`` requests are the same as ``GET`` in this "
"situation). It can also be used to provide checking for ``POST``, ``PUT`` "
"and ``DELETE`` requests. In these situations, the idea isn't to return a "
"\"not modified\" response, but to tell the client that the resource they are"
" trying to change has been altered in the meantime."
msgstr ""

# daf42a3ac5ea4766bc71ea8d242b67dc
#: ../../topics/conditional-view-processing.txt:155
msgid ""
"For example, consider the following exchange between the client and server:"
msgstr ""

# dc9c14979968457f9c0e00b2c015a7a8
#: ../../topics/conditional-view-processing.txt:157
msgid "Client requests ``/foo/``."
msgstr ""

# 90051f7933f44659af17b1077ca08bd1
#: ../../topics/conditional-view-processing.txt:158
msgid "Server responds with some content with an ETag of ``\"abcd1234\"``."
msgstr ""

# 821c7e20e63f4fcba8b0d7ca13e4af16
#: ../../topics/conditional-view-processing.txt:159
msgid ""
"Client sends an HTTP ``PUT`` request to ``/foo/`` to update the resource. It"
" also sends an ``If-Match: \"abcd1234\"`` header to specify the version it "
"is trying to update."
msgstr ""

# 90acfaa42532458588ab149cf8460fca
#: ../../topics/conditional-view-processing.txt:162
msgid ""
"Server checks to see if the resource has changed, by computing the ETag the "
"same way it does for a ``GET`` request (using the same function). If the "
"resource *has* changed, it will return a 412 status code code, meaning "
"\"precondition failed\"."
msgstr ""

# a987175e65414ce58a1c03ed4afa9452
#: ../../topics/conditional-view-processing.txt:166
msgid ""
"Client sends a ``GET`` request to ``/foo/``, after receiving a 412 response,"
" to retrieve an updated version of the content before updating it."
msgstr ""

# 589095a3dc9142978be2b12e622321cc
#: ../../topics/conditional-view-processing.txt:170
msgid ""
"The important thing this example shows is that the same functions can be "
"used to compute the ETag and last modification values in all situations. In "
"fact, you **should** use the same functions, so that the same values are "
"returned every time."
msgstr ""

# 4a82914f70f04ee48555d192b28fc68d
#: ../../topics/conditional-view-processing.txt:176
msgid "Comparison with middleware conditional processing"
msgstr ""

# d121d0accb4d4846aa78e4d9520a9090
#: ../../topics/conditional-view-processing.txt:178
msgid ""
"You may notice that Django already provides simple and straightforward "
"conditional ``GET`` handling via the "
":class:`django.middleware.http.ConditionalGetMiddleware` and "
":class:`~django.middleware.common.CommonMiddleware`. Whilst certainly being "
"easy to use and suitable for many situations, those pieces of middleware "
"functionality have limitations for advanced usage:"
msgstr ""

# 14382131c0134ad29e05cd40dcd681d4
#: ../../topics/conditional-view-processing.txt:185
msgid "They are applied globally to all views in your project"
msgstr ""

# 768b83b34e1d4d1cabbd478aba3e7a03
#: ../../topics/conditional-view-processing.txt:186
msgid ""
"They don't save you from generating the response itself, which may be "
"expensive"
msgstr ""

# 85d79f549e1e4fb5a0f8c0d469d6fa5b
#: ../../topics/conditional-view-processing.txt:188
msgid "They are only appropriate for HTTP ``GET`` requests."
msgstr ""

# 5aa6b48724d54fa48080881b673e7be2
#: ../../topics/conditional-view-processing.txt:190
msgid ""
"You should choose the most appropriate tool for your particular problem "
"here. If you have a way to compute ETags and modification times quickly and "
"if some view takes a while to generate the content, you should consider "
"using the ``condition`` decorator described in this document. If everything "
"already runs fairly quickly, stick to using the middleware and the amount of"
" network traffic sent back to the clients will still be reduced if the view "
"hasn't changed."
msgstr ""

# 25fd274136464039b4a43ce2366eb0e0
#: ../../topics/db/aggregation.txt:3
msgid "Aggregation"
msgstr ""

# 74b9a7a223bf4ddf8e4cb36da831caec
#: ../../topics/db/aggregation.txt:7
msgid ""
"The topic guide on :doc:`Django's database-abstraction API "
"</topics/db/queries>` described the way that you can use Django queries that"
" create, retrieve, update and delete individual objects. However, sometimes "
"you will need to retrieve values that are derived by summarizing or "
"*aggregating* a collection of objects. This topic guide describes the ways "
"that aggregate values can be generated and returned using Django queries."
msgstr ""

# d2c31454eff34a579674205150a462b7
#: ../../topics/db/aggregation.txt:14
msgid ""
"Throughout this guide, we'll refer to the following models. These models are"
" used to track the inventory for a series of online bookstores:"
msgstr ""

# 8878ca2b06dc44b7b21f2266c5b79c40
#: ../../topics/db/aggregation.txt:46
msgid "Cheat sheet"
msgstr ""

# a72de2316ea6420a8db694d1aa5ad608
#: ../../topics/db/aggregation.txt:48
msgid ""
"In a hurry? Here's how to do common aggregate queries, assuming the models "
"above:"
msgstr ""

# 717f2b426e87456db01221c886cf4357
#: ../../topics/db/aggregation.txt:87
msgid "Generating aggregates over a QuerySet"
msgstr ""

# 19e867f9be4b464e9459951471973d8d
#: ../../topics/db/aggregation.txt:89
msgid ""
"Django provides two ways to generate aggregates. The first way is to "
"generate summary values over an entire ``QuerySet``. For example, say you "
"wanted to calculate the average price of all books available for sale. "
"Django's query syntax provides a means for describing the set of all books::"
msgstr ""

# 8edfecc3139449238bb9ffb427aaaf61
#: ../../topics/db/aggregation.txt:96
msgid ""
"What we need is a way to calculate summary values over the objects that "
"belong to this ``QuerySet``. This is done by appending an ``aggregate()`` "
"clause onto the ``QuerySet``::"
msgstr ""

# 875949a8bd364354a4b8a50061ca8a7f
#: ../../topics/db/aggregation.txt:104
msgid ""
"The ``all()`` is redundant in this example, so this could be simplified to::"
msgstr ""

# 30274c3d00b045bb9216c8e2a373ee8c
#: ../../topics/db/aggregation.txt:109
msgid ""
"The argument to the ``aggregate()`` clause describes the aggregate value "
"that we want to compute - in this case, the average of the ``price`` field "
"on the ``Book`` model. A list of the aggregate functions that are available "
"can be found in the :ref:`QuerySet reference <aggregation-functions>`."
msgstr ""

# c9a1eb105a704fb8a7735d3c9eaad652
#: ../../topics/db/aggregation.txt:114
msgid ""
"``aggregate()`` is a terminal clause for a ``QuerySet`` that, when invoked, "
"returns a dictionary of name-value pairs. The name is an identifier for the "
"aggregate value; the value is the computed aggregate. The name is "
"automatically generated from the name of the field and the aggregate "
"function. If you want to manually specify a name for the aggregate value, "
"you can do so by providing that name when you specify the aggregate clause::"
msgstr ""

# c294ef10fa784436bd3b2e8a37aee34c
#: ../../topics/db/aggregation.txt:124
msgid ""
"If you want to generate more than one aggregate, you just add another "
"argument to the ``aggregate()`` clause. So, if we also wanted to know the "
"maximum and minimum price of all books, we would issue the query::"
msgstr ""

# 319dbaf467aa46a0a368d469861224cc
#: ../../topics/db/aggregation.txt:133
msgid "Generating aggregates for each item in a QuerySet"
msgstr ""

# 0d8e62ad8d7d499db9735ab97b78c1d1
#: ../../topics/db/aggregation.txt:135
msgid ""
"The second way to generate summary values is to generate an independent "
"summary for each object in a ``QuerySet``. For example, if you are "
"retrieving a list of books, you may want to know how many authors "
"contributed to each book. Each Book has a many-to-many relationship with the"
" Author; we want to summarize this relationship for each book in the "
"``QuerySet``."
msgstr ""

# 20bd09481eff481ba7ba57614e77dd0e
#: ../../topics/db/aggregation.txt:141
msgid ""
"Per-object summaries can be generated using the ``annotate()`` clause. When "
"an ``annotate()`` clause is specified, each object in the ``QuerySet`` will "
"be annotated with the specified values."
msgstr ""

# 0184e1900e644896889b8e3c01d30501
#: ../../topics/db/aggregation.txt:145
msgid ""
"The syntax for these annotations is identical to that used for the "
"``aggregate()`` clause. Each argument to ``annotate()`` describes an "
"aggregate that is to be calculated. For example, to annotate books with the "
"number of authors:"
msgstr ""

# 9d35ca613f9d4394b24cf2c7065ae1ef
#: ../../topics/db/aggregation.txt:166
msgid ""
"As with ``aggregate()``, the name for the annotation is automatically "
"derived from the name of the aggregate function and the name of the field "
"being aggregated. You can override this default name by providing an alias "
"when you specify the annotation::"
msgstr ""

# 299a3a2c08254f378ce6aefe10f5e444
#: ../../topics/db/aggregation.txt:177
msgid ""
"Unlike ``aggregate()``, ``annotate()`` is *not* a terminal clause. The "
"output of the ``annotate()`` clause is a ``QuerySet``; this ``QuerySet`` can"
" be modified using any other ``QuerySet`` operation, including ``filter()``,"
" ``order_by()``, or even additional calls to ``annotate()``."
msgstr ""

# 7bfbee35a05d444f8eebb972a65f634d
#: ../../topics/db/aggregation.txt:183
msgid "Joins and aggregates"
msgstr ""

# 0530f917d3f4466585a06b897772590c
#: ../../topics/db/aggregation.txt:185
msgid ""
"So far, we have dealt with aggregates over fields that belong to the model "
"being queried. However, sometimes the value you want to aggregate will "
"belong to a model that is related to the model you are querying."
msgstr ""

# 936c5f3622a44083ac6e9e6d35b10193
#: ../../topics/db/aggregation.txt:189
msgid ""
"When specifying the field to be aggregated in an aggregate function, Django "
"will allow you to use the same :ref:`double underscore notation <field-"
"lookups-intro>` that is used when referring to related fields in filters. "
"Django will then handle any table joins that are required to retrieve and "
"aggregate the related value."
msgstr ""

# f45a6b5fdfe74b88aeb69e2c6fbb44d1
#: ../../topics/db/aggregation.txt:195
msgid ""
"For example, to find the price range of books offered in each store, you "
"could use the annotation::"
msgstr ""

# 9d7817cbd23544b784bb272aea918fec
#: ../../topics/db/aggregation.txt:201
msgid ""
"This tells Django to retrieve the ``Store`` model, join (through the many-"
"to-many relationship) with the ``Book`` model, and aggregate on the price "
"field of the book model to produce a minimum and maximum value."
msgstr ""

# 7fa1b4a40a114ab3a1a68f1ca0e14925
#: ../../topics/db/aggregation.txt:205
msgid ""
"The same rules apply to the ``aggregate()`` clause. If you wanted to know "
"the lowest and highest price of any book that is available for sale in a "
"store, you could use the aggregate::"
msgstr ""

# f021d2d4d9804dd498e470538b4096d1
#: ../../topics/db/aggregation.txt:211
msgid ""
"Join chains can be as deep as you require. For example, to extract the age "
"of the youngest author of any book available for sale, you could issue the "
"query::"
msgstr ""

# 33f9360fe47d43ab92f90845cf3c58b8
#: ../../topics/db/aggregation.txt:218
msgid "Following relationships backwards"
msgstr ""

# 0f4c530cbde04dffa0358977d20574c3
#: ../../topics/db/aggregation.txt:220
msgid ""
"In a way similar to :ref:`lookups-that-span-relationships`, aggregations and"
" annotations on fields of models or models that are related to the one you "
"are querying can include traversing \"reverse\" relationships. The lowercase"
" name of related models and double-underscores are used here too."
msgstr ""

# 0d9cf1d60a704c60b26aec7ef4cf54da
#: ../../topics/db/aggregation.txt:225
msgid ""
"For example, we can ask for all publishers, annotated with their respective "
"total book stock counters (note how we use ``'book'`` to specify the "
"``Publisher`` -> ``Book`` reverse foreign key hop)::"
msgstr ""

# e8ff60af50764fba8cd29a803069c1d6
#: ../../topics/db/aggregation.txt:232
msgid ""
"(Every ``Publisher`` in the resulting ``QuerySet`` will have an extra "
"attribute called ``book__count``.)"
msgstr ""

# f033bbebf93e40f2ab3ceec849d1e2ff
#: ../../topics/db/aggregation.txt:235
msgid ""
"We can also ask for the oldest book of any of those managed by every "
"publisher::"
msgstr ""

# 477394c504e74e11aa7b47d2dcd1e6e6
#: ../../topics/db/aggregation.txt:239
msgid ""
"(The resulting dictionary will have a key called ``'oldest_pubdate'``. If no"
" such alias were specified, it would be the rather long "
"``'book__pubdate__min'``.)"
msgstr ""

# 13c602c324c04883b9b8a824e2117866
#: ../../topics/db/aggregation.txt:242
msgid ""
"This doesn't apply just to foreign keys. It also works with many-to-many "
"relations. For example, we can ask for every author, annotated with the "
"total number of pages considering all the books he/she has (co-)authored "
"(note how we use ``'book'`` to specify the ``Author`` -> ``Book`` reverse "
"many-to-many hop)::"
msgstr ""

# cbd5de1a7dae4e57a737978d2102f699
#: ../../topics/db/aggregation.txt:249
msgid ""
"(Every ``Author`` in the resulting ``QuerySet`` will have an extra attribute"
" called ``total_pages``. If no such alias were specified, it would be the "
"rather long ``book__pages__sum``.)"
msgstr ""

# 9425fab97a51421fb9f6329177c016c1
#: ../../topics/db/aggregation.txt:253
msgid ""
"Or ask for the average rating of all the books written by author(s) we have "
"on file::"
msgstr ""

# d4e6f570c0e7449dae8f2c3dd19f47b6
#: ../../topics/db/aggregation.txt:258
msgid ""
"(The resulting dictionary will have a key called ``'average__rating'``. If "
"no such alias were specified, it would be the rather long "
"``'book__rating__avg'``.)"
msgstr ""

# fde4fe6dbabe428e934e180541a06d20
#: ../../topics/db/aggregation.txt:262
msgid "Aggregations and other QuerySet clauses"
msgstr ""

# 40ab20ead1714158a193c69d4fc0d968
#: ../../topics/db/aggregation.txt:265
msgid "``filter()`` and ``exclude()``"
msgstr ""

# 806d602bd04c497b8e4f249373ef1b4a
#: ../../topics/db/aggregation.txt:267
msgid ""
"Aggregates can also participate in filters. Any ``filter()`` (or "
"``exclude()``) applied to normal model fields will have the effect of "
"constraining the objects that are considered for aggregation."
msgstr ""

# 59859c5a4daf41b0b39da653c24970b0
#: ../../topics/db/aggregation.txt:271
msgid ""
"When used with an ``annotate()`` clause, a filter has the effect of "
"constraining the objects for which an annotation is calculated. For example,"
" you can generate an annotated list of all books that have a title starting "
"with \"Django\" using the query::"
msgstr ""

# 46dd85b3bf9146a092d858d0d72e09f1
#: ../../topics/db/aggregation.txt:279
msgid ""
"When used with an ``aggregate()`` clause, a filter has the effect of "
"constraining the objects over which the aggregate is calculated. For "
"example, you can generate the average price of all books with a title that "
"starts with \"Django\" using the query::"
msgstr ""

# 801b60eb09034c8b831fd359d7619a39
#: ../../topics/db/aggregation.txt:287
msgid "Filtering on annotations"
msgstr ""

# 47991b554aa54dccbd2b6bcd670acec9
#: ../../topics/db/aggregation.txt:289
msgid ""
"Annotated values can also be filtered. The alias for the annotation can be "
"used in ``filter()`` and ``exclude()`` clauses in the same way as any other "
"model field."
msgstr ""

# a4e41dece4c5483f948d6c68a98e010b
#: ../../topics/db/aggregation.txt:293
msgid ""
"For example, to generate a list of books that have more than one author, you"
" can issue the query::"
msgstr ""

# e9278d10f7864d25b335acb6527288a6
#: ../../topics/db/aggregation.txt:298
msgid ""
"This query generates an annotated result set, and then generates a filter "
"based upon that annotation."
msgstr ""

# 9ff7df5227a647f1a9f56850ccb430d2
#: ../../topics/db/aggregation.txt:302
msgid "Order of ``annotate()`` and ``filter()`` clauses"
msgstr ""

# fc4f17904a1a475ba2b940249c9c0e4f
#: ../../topics/db/aggregation.txt:304
msgid ""
"When developing a complex query that involves both ``annotate()`` and "
"``filter()`` clauses, particular attention should be paid to the order in "
"which the clauses are applied to the ``QuerySet``."
msgstr ""

# 80af7a1fbbb04554a08be648fe18a554
#: ../../topics/db/aggregation.txt:308
msgid ""
"When an ``annotate()`` clause is applied to a query, the annotation is "
"computed over the state of the query up to the point where the annotation is"
" requested. The practical implication of this is that ``filter()`` and "
"``annotate()`` are not commutative operations -- that is, there is a "
"difference between the query::"
msgstr ""

# 00a747be32344846aa78d451642cd720
#: ../../topics/db/aggregation.txt:316
msgid "and the query::"
msgstr ""

# 43de1412fa1445b3b0e8fb81acab2fdc
#: ../../topics/db/aggregation.txt:320
msgid ""
"Both queries will return a list of publishers that have at least one good "
"book (i.e., a book with a rating exceeding 3.0). However, the annotation in "
"the first query will provide the total number of all books published by the "
"publisher; the second query will only include good books in the annotated "
"count. In the first query, the annotation precedes the filter, so the filter"
" has no effect on the annotation. In the second query, the filter precedes "
"the annotation, and as a result, the filter constrains the objects "
"considered when calculating the annotation."
msgstr ""

# 166326dee78c4744834bae0b5677c2af
#: ../../topics/db/aggregation.txt:330
msgid "``order_by()``"
msgstr ""

# 00a78197b1e94447954c92a27c7944a8
#: ../../topics/db/aggregation.txt:332
msgid ""
"Annotations can be used as a basis for ordering. When you define an "
"``order_by()`` clause, the aggregates you provide can reference any alias "
"defined as part of an ``annotate()`` clause in the query."
msgstr ""

# 03f19785c56a45cf9d1bdbdfff328aa4
#: ../../topics/db/aggregation.txt:336
msgid ""
"For example, to order a ``QuerySet`` of books by the number of authors that "
"have contributed to the book, you could use the following query::"
msgstr ""

# d24202596a9640d6ab23da205366965b
#: ../../topics/db/aggregation.txt:342
msgid "``values()``"
msgstr ""

# afbb7301a9b14c6cb7cf31c4b0963c74
#: ../../topics/db/aggregation.txt:344
msgid ""
"Ordinarily, annotations are generated on a per-object basis - an annotated "
"``QuerySet`` will return one result for each object in the original "
"``QuerySet``. However, when a ``values()`` clause is used to constrain the "
"columns that are returned in the result set, the method for evaluating "
"annotations is slightly different. Instead of returning an annotated result "
"for each result in the original ``QuerySet``, the original results are "
"grouped according to the unique combinations of the fields specified in the "
"``values()`` clause. An annotation is then provided for each unique group; "
"the annotation is computed over all members of the group."
msgstr ""

# b2cca59440f94112aa743dbc275f07fd
#: ../../topics/db/aggregation.txt:354
msgid ""
"For example, consider an author query that attempts to find out the average "
"rating of books written by each author:"
msgstr ""

# 8284c64a60a54f4eb5bef332194ab74e
#: ../../topics/db/aggregation.txt:359
msgid ""
"This will return one result for each author in the database, annotated with "
"their average book rating."
msgstr ""

# a62338a47e5f44cc9015508d28636fc2
#: ../../topics/db/aggregation.txt:362
msgid ""
"However, the result will be slightly different if you use a ``values()`` "
"clause::"
msgstr ""

# 616e63ae484e4f21ab02a569b881d9fc
#: ../../topics/db/aggregation.txt:366
msgid ""
"In this example, the authors will be grouped by name, so you will only get "
"an annotated result for each *unique* author name. This means if you have "
"two authors with the same name, their results will be merged into a single "
"result in the output of the query; the average will be computed as the "
"average over the books written by both authors."
msgstr ""

# a32dd619f5874d5e9d68af779d9a89ac
#: ../../topics/db/aggregation.txt:373
msgid "Order of ``annotate()`` and ``values()`` clauses"
msgstr ""

# 5854c8d3cdb74e61867bb8658514ca74
#: ../../topics/db/aggregation.txt:375
msgid ""
"As with the ``filter()`` clause, the order in which ``annotate()`` and "
"``values()`` clauses are applied to a query is significant. If the "
"``values()`` clause precedes the ``annotate()``, the annotation will be "
"computed using the grouping described by the ``values()`` clause."
msgstr ""

# 53322a9dc6a94b7bb9900bcdc4d250ce
#: ../../topics/db/aggregation.txt:380
msgid ""
"However, if the ``annotate()`` clause precedes the ``values()`` clause, the "
"annotations will be generated over the entire query set. In this case, the "
"``values()`` clause only constrains the fields that are generated on output."
msgstr ""

# 68556f7928914afc89ff5bca27af564b
#: ../../topics/db/aggregation.txt:385
msgid ""
"For example, if we reverse the order of the ``values()`` and ``annotate()`` "
"clause from our previous example::"
msgstr ""

# ae7a30bfc30e4fb3ba6b7cd9a06eb48f
#: ../../topics/db/aggregation.txt:390
msgid ""
"This will now yield one unique result for each author; however, only the "
"author's name and the ``average_rating`` annotation will be returned in the "
"output data."
msgstr ""

# 628125c8e1d74faead942b11b63f4a2f
#: ../../topics/db/aggregation.txt:394
msgid ""
"You should also note that ``average_rating`` has been explicitly included in"
" the list of values to be returned. This is required because of the ordering"
" of the ``values()`` and ``annotate()`` clause."
msgstr ""

# cc1433ff2c684e20a88612e2ba970d86
#: ../../topics/db/aggregation.txt:398
msgid ""
"If the ``values()`` clause precedes the ``annotate()`` clause, any "
"annotations will be automatically added to the result set. However, if the "
"``values()`` clause is applied after the ``annotate()`` clause, you need to "
"explicitly include the aggregate column."
msgstr ""

# d7a67c048272469db7af3fef750a3117
#: ../../topics/db/aggregation.txt:404
msgid "Interaction with default ordering or ``order_by()``"
msgstr ""

# fea95db054e049cfbe5c8adf79320ee3
#: ../../topics/db/aggregation.txt:406
msgid ""
"Fields that are mentioned in the ``order_by()`` part of a queryset (or which"
" are used in the default ordering on a model) are used when selecting the "
"output data, even if they are not otherwise specified in the ``values()`` "
"call. These extra fields are used to group \"like\" results together and "
"they can make otherwise identical result rows appear to be separate. This "
"shows up, particularly, when counting things."
msgstr ""

# 36d215ec7d5440d794c25c3507dffc25
#: ../../topics/db/aggregation.txt:413
msgid "By way of example, suppose you have a model like this::"
msgstr ""

# 1990e8ce912241f989ad16fffe8ea161
#: ../../topics/db/aggregation.txt:424
msgid ""
"The important part here is the default ordering on the ``name`` field. If "
"you want to count how many times each distinct ``data`` value appears, you "
"might try this::"
msgstr ""

# 78f0032ec3b44dc2971f63ee0de8d4f8
#: ../../topics/db/aggregation.txt:431
msgid ""
"...which will group the ``Item`` objects by their common ``data`` values and"
" then count the number of ``id`` values in each group. Except that it won't "
"quite work. The default ordering by ``name`` will also play a part in the "
"grouping, so this query will group by distinct ``(data, name)`` pairs, which"
" isn't what you want. Instead, you should construct this queryset::"
msgstr ""

# 96fe7774bf0e4f8fb1d8e551ee3ebb60
#: ../../topics/db/aggregation.txt:439
msgid ""
"...clearing any ordering in the query. You could also order by, say, "
"``data`` without any harmful effects, since that is already playing a role "
"in the query."
msgstr ""

# dee63fba61df4dc19c0b342c8e25b1d2
#: ../../topics/db/aggregation.txt:443
msgid ""
"This behavior is the same as that noted in the queryset documentation for "
":meth:`~django.db.models.query.QuerySet.distinct` and the general rule is "
"the same: normally you won't want extra columns playing a part in the "
"result, so clear out the ordering, or at least make sure it's restricted "
"only to those fields you also select in a ``values()`` call."
msgstr ""

# e2bddc80378443ac8bd9c6eb8722debf
#: ../../topics/db/aggregation.txt:450
msgid ""
"You might reasonably ask why Django doesn't remove the extraneous columns "
"for you. The main reason is consistency with ``distinct()`` and other "
"places: Django **never** removes ordering constraints that you have "
"specified (and we can't change those other methods' behavior, as that would "
"violate our :doc:`/misc/api-stability` policy)."
msgstr ""

# 6d0cd4dd9e4348938c5f29d691654888
#: ../../topics/db/aggregation.txt:457
msgid "Aggregating annotations"
msgstr ""

# ceea87448e6349df90062c3c87aae974
#: ../../topics/db/aggregation.txt:459
msgid ""
"You can also generate an aggregate on the result of an annotation. When you "
"define an ``aggregate()`` clause, the aggregates you provide can reference "
"any alias defined as part of an ``annotate()`` clause in the query."
msgstr ""

# 3754b76c24b541b2a7517ac10d66f780
#: ../../topics/db/aggregation.txt:463
msgid ""
"For example, if you wanted to calculate the average number of authors per "
"book you first annotate the set of books with the author count, then "
"aggregate that author count, referencing the annotation field::"
msgstr ""

# 9c258610c2da40a4b8359054ce8200ce
#: ../../topics/db/examples/index.txt:3
msgid "Examples of model relationship API usage"
msgstr "Exemples d'utilisation de l'API de relations entre modèles"

# 8122aed92dc64b1ab491ba4febd7a632
# 6f71df732bca4c51912f9efb10755791
# 56cc98f6396745c581061b5fe96ed6cc
#: ../../topics/db/examples/many_to_many.txt:3 ../../topics/db/models.txt:334
#: ../../topics/db/queries.txt:1202
msgid "Many-to-many relationships"
msgstr "Relations plusieurs-à-plusieurs"

# c41754d93d7449d3bd1b4a78a0b158cd
#: ../../topics/db/examples/many_to_many.txt:7
msgid "To define a many-to-many relationship, use :ref:`ref-manytomany`."
msgstr "Pour définir une relation plusieurs-à-plusieurs, utilisez :ref:`ref-manytomany`."

# 3b4455e6256a41778008fb118ce5ea03
#: ../../topics/db/examples/many_to_many.txt:9
msgid ""
"In this example, an ``Article`` can be published in multiple ``Publication``"
" objects, and a ``Publication`` has multiple ``Article`` objects:"
msgstr "Dans cet exemple, un ``Article`` peut être publié dans plusieurs objets ``Publication`` et une ``Publication`` possède plusieurs objets ``Article``:"

# 59a59ecd5c9a4d599ee1a928acd5c0fe
# bf99e90b87974e99919448a92e2c3001
# 486a1793f32749d3b164a6bc5fa5532a
#: ../../topics/db/examples/many_to_many.txt:37
#: ../../topics/db/examples/many_to_one.txt:34
#: ../../topics/db/examples/one_to_one.txt:40
msgid ""
"What follows are examples of operations that can be performed using the "
"Python API facilities."
msgstr "Dans ce qui suit, vous trouverez des exemples d'opérations pouvant être effectuées en utilisant les possibilités de l'API Python."

# 179a009ecc324beda95c02b9f7466e29
#: ../../topics/db/examples/many_to_many.txt:40
msgid "Create a couple of ``Publications``::"
msgstr "Créez quelques ``Publications``::"

# c2dec5d2b85a4b028cd4510f02647000
#: ../../topics/db/examples/many_to_many.txt:49
msgid "Create an ``Article``::"
msgstr "Créez un ``Article``::"

# 1a7610cd500e4185996ffe1e0ac8f989
#: ../../topics/db/examples/many_to_many.txt:53
msgid "You can't associate it with a ``Publication`` until it's been saved::"
msgstr "Vous ne pouvez pas le lier à une ``Publication`` avant qu'il ait été enregistré ::"

# 66384b650a494de287d43c27c22930b9
#: ../../topics/db/examples/many_to_many.txt:60
msgid "Save it! ::"
msgstr "Enregistrez-le ! ::"

# 2a8cb6c21d6f4bd29730f32f85a1abe2
#: ../../topics/db/examples/many_to_many.txt:65
msgid "Associate the ``Article`` with a ``Publication``::"
msgstr "Associez l'``Article`` à une ``Publication``::"

# e3e89f94ebcc413cadf2d056caa9bd86
#: ../../topics/db/examples/many_to_many.txt:69
msgid ""
"Create another ``Article``, and set it to appear in both ``Publications``::"
msgstr "Créez un autre ``Article`` et faites-le paraître dans les deux ``Publications``::"

# 06c11055fe4d4849991cd7f6046bf427
#: ../../topics/db/examples/many_to_many.txt:76
msgid "Adding a second time is OK::"
msgstr "Ajouter une seconde fois ne pose pas problème ::"

# b45e74f8a43c47468d3062f5c16a41cd
#: ../../topics/db/examples/many_to_many.txt:80
msgid ""
"Adding an object of the wrong type raises :exc:`~exceptions.TypeError`::"
msgstr "L'ajout d'un objet du mauvais type lève une exception :exc:`~exceptions.TypeError`::"

# b3f37e6b42bb4d7783e6883979fcd17d
#: ../../topics/db/examples/many_to_many.txt:87
msgid ""
"Create and add a ``Publication`` to an ``Article`` in one step using "
":meth:`~django.db.models.fields.related.RelatedManager.create`::"
msgstr "Créez et ajoutez une ``Publication`` à un ``Article`` en une seule étape en utilisant :meth:`~django.db.models.fields.related.RelatedManager.create`::"

# 049e42354f1047e29a4e9bbd690eb780
#: ../../topics/db/examples/many_to_many.txt:92
msgid ""
"``Article`` objects have access to their related ``Publication`` objects::"
msgstr "Les objets Article ont accès à leurs objets ``Publication`` liés ::"

# 0ff6a5a2725c42bea73d480d914a3d9b
#: ../../topics/db/examples/many_to_many.txt:99
msgid ""
"``Publication`` objects have access to their related ``Article`` objects::"
msgstr "Les objets ``Publication`` ont accès à leurs objets ``Article`` liés ::"

# a825cfadc82c46b088d3fc5667bc7950
#: ../../topics/db/examples/many_to_many.txt:108
msgid ""
"Many-to-many relationships can be queried using :ref:`lookups across "
"relationships <lookups-that-span-relationships>`::"
msgstr "Il est possible d'interroger les relations plusieurs-à-plusieurs en utilisant des :ref:`recherches traversant les relations <lookups-that-span-relationships>`::"

# c6256cd0639342c0b280702a2b671fc1
#: ../../topics/db/examples/many_to_many.txt:126
msgid ""
"The :meth:`~django.db.models.query.QuerySet.count` function respects "
":meth:`~django.db.models.query.QuerySet.distinct` as well::"
msgstr "La fonction :meth:`~django.db.models.query.QuerySet.count` respecte aussi :meth:`~django.db.models.query.QuerySet.distinct`::"

# 1b3182fb17174517bf253959de0351a8
#: ../../topics/db/examples/many_to_many.txt:140
msgid ""
"Reverse m2m queries are supported (i.e., starting at the table that doesn't "
"have a :class:`~django.db.models.ManyToManyField`)::"
msgstr "Les requêtes plusieurs-à-plusieurs inverses sont possibles (c'est-à-dire des requêtes commençant par la table qui ne possède pas le champ :class:`~django.db.models.ManyToManyField`) ::"

# 7bcded4429e44e45a7b52397775c38d8
#: ../../topics/db/examples/many_to_many.txt:165
msgid ""
"Excluding a related item works as you would expect, too (although the SQL "
"involved is a little complex)::"
msgstr "L'exclusion d'un élément lié fonctionne aussi tel qu'on pourrait le prévoir (même si le code SQL sous-jacent est un peu complexe) ::"

# 4ca74a30a1c1401a953a4c5d1b21c6cc
#: ../../topics/db/examples/many_to_many.txt:171
msgid ""
"If we delete a ``Publication``, its ``Articles`` won't be able to access "
"it::"
msgstr "Si nous supprimons une ``Publication``, ses ``Articles`` ne pourront plus y accéder ::"

# 99e9ccc6ba6a4c7288e5f973475f8c20
#: ../../topics/db/examples/many_to_many.txt:180
msgid ""
"If we delete an ``Article``, its ``Publications`` won't be able to access "
"it::"
msgstr "Si nous supprimons un ``Article``, ses ``Publications`` ne pourront plus y accéder ::"

# 2530958db2544b9ead81625030a3613e
#: ../../topics/db/examples/many_to_many.txt:188
msgid "Adding via the 'other' end of an m2m::"
msgstr "Ajout à partir de l'« autre côté » de la relation plusieurs-à-plusieurs ::"

# 12532ea7ce7442908e8cd29f2d87dfb3
#: ../../topics/db/examples/many_to_many.txt:198
msgid "Adding via the other end using keywords::"
msgstr "Ajout à partir de l'autre côté en utilisant des mots-clés ::"

# 8d859ee6ba6c43258c690656812463a8
#: ../../topics/db/examples/many_to_many.txt:207
msgid "Removing ``Publication`` from an ``Article``::"
msgstr "Suppression d'une ``Publication`` à partir d'un ``Article``::"

# ed78419a50ed425d89c164b1d32a1439
#: ../../topics/db/examples/many_to_many.txt:215
msgid "And from the other end::"
msgstr "Et depuis l'autre côté ::"

# c13e055b535046ab973dfa79a4f18e63
#: ../../topics/db/examples/many_to_many.txt:223
msgid ""
"Relation sets can be assigned. Assignment clears any existing set members::"
msgstr "Les jeux de relations peuvent recevoir des valeurs. L'attribution de valeurs efface tout membre préexistant du jeu ::"

# abfa3de15a3b462788c4cdee97f58192
#: ../../topics/db/examples/many_to_many.txt:231
msgid "Relation sets can be cleared::"
msgstr "Les jeux de relations peuvent être effacés ::"

# dff5bbba47894024adc8451668c786ec
#: ../../topics/db/examples/many_to_many.txt:237
msgid "And you can clear from the other end::"
msgstr "Et l'effacement peut se faire depuis l'autre côté ::"

# 317eab0b7fbd42958f064d8c5641dc4e
#: ../../topics/db/examples/many_to_many.txt:250
msgid "Recreate the ``Article`` and ``Publication`` we have deleted::"
msgstr "Recréez l'``Article`` et la ``Publication`` que nous avons supprimés ::"

# f48adae5ae3b4b22b9030750ad372f79
#: ../../topics/db/examples/many_to_many.txt:258
msgid ""
"Bulk delete some ``Publications`` - references to deleted publications "
"should go::"
msgstr "Supprimez en vrac certaines ``Publications``; les références aux publications supprimées ne sont plus présentes ::"

# ca54498dc5694919879ae7f6787b493e
#: ../../topics/db/examples/many_to_many.txt:269
msgid "Bulk delete some articles - references to deleted objects should go::"
msgstr "Supprimez en vrac certains articles ; les références aux objets supprimés ne sont plus présentes ::"

# c4245c64ad0b4300b7ef8cfa9ccb95c2
#: ../../topics/db/examples/many_to_many.txt:276
msgid ""
"After the :meth:`~django.db.models.query.QuerySet.delete`, the "
":class:`~django.db.models.query.QuerySet` cache needs to be cleared, and the"
" referenced objects should be gone::"
msgstr "Après la suppression avec :meth:`~django.db.models.query.QuerySet.delete`, le cache de :class:`~django.db.models.query.QuerySet` doit être effacé et les objets référencés ne sont plus présents ::"

# 38bca50e3618411e8a00bbb8c035642b
#: ../../topics/db/examples/many_to_many.txt:285
msgid ""
"An alternate to calling "
":meth:`~django.db.models.fields.related.RelatedManager.clear` is to assign "
"the empty set::"
msgstr "Une variante de l'appel à :meth:`~django.db.models.fields.related.RelatedManager.clear` est d'attribuer un ensemble vide ::"

# 488cc2b62ab14609bfb90c210194ff34
# b47392c6959e490f8c5031fab1e66e44
#: ../../topics/db/examples/many_to_one.txt:3 ../../topics/db/models.txt:282
msgid "Many-to-one relationships"
msgstr "Relations plusieurs-à-un"

# cc2f9e5c252d4037aa2365547226f365
#: ../../topics/db/examples/many_to_one.txt:7
msgid ""
"To define a many-to-one relationship, use "
":class:`~django.db.models.ForeignKey`."
msgstr "Pour définir une relation plusieurs-à-un, utilisez :class:`~django.db.models.ForeignKey`."

# 3ece0a1fb8334f54b4f55490ddd615f0
#: ../../topics/db/examples/many_to_one.txt:37
msgid "Create a few Reporters::"
msgstr "Créez quelques objets Reporter ::"

# 23c4b8ecd29747df9f5c25bf745f8a1e
#: ../../topics/db/examples/many_to_one.txt:45
msgid "Create an Article::"
msgstr "Créez un objet Article ::"

# 8347ed77c8b743c08cb7671dc9b88556
#: ../../topics/db/examples/many_to_one.txt:57
msgid "Article objects have access to their related Reporter objects::"
msgstr "Les objets Article ont accès à leurs objets Reporter liés ::"

# a37b556d04e8434cae5334c49102ba03
#: ../../topics/db/examples/many_to_one.txt:61
msgid ""
"On Python 2, these are strings of type ``str`` instead of unicode strings "
"because that's what was used in the creation of this reporter (and we "
"haven't refreshed the data from the database, which always returns unicode "
"strings)::"
msgstr ""

# 264d4b411ad74d3888e0da8c6efebc63
#: ../../topics/db/examples/many_to_one.txt:68
msgid "Create an Article via the Reporter object::"
msgstr "Créez un objet Article au travers de l'objet Reporter ::"

# a1f9afd6b61a462e8a104491555a563c
#: ../../topics/db/examples/many_to_one.txt:78
msgid "Create a new article, and add it to the article set::"
msgstr "Créez un nouvel article et ajoutez-le au jeu d'articles du reporter ::"

# e0b50174bf6d4ab68bf138bd2fdc1d0b
#: ../../topics/db/examples/many_to_one.txt:89
msgid ""
"Add the same article to a different article set - check that it moves::"
msgstr "Ajoutez le même article à un autre jeu d'articles et vérifiez qu'il a bien été déplacé ::"

# bb5e74a50163461e952d878bad1615a4
#: ../../topics/db/examples/many_to_one.txt:97
msgid "Adding an object of the wrong type raises TypeError::"
msgstr "L'ajout d'un objet du mauvais type lève une exception TypeError ::"

# cbfdf6a630734bea876693c8d373a557
#: ../../topics/db/examples/many_to_one.txt:115
msgid "Note that in the last example the article has moved from John to Paul."
msgstr "Notez que dans l'exemple précédent, l'article a été déplacé de John à Paul."

# 99524675685d4b2996825aee9f0dae86
#: ../../topics/db/examples/many_to_one.txt:117
msgid ""
"Related managers support field lookups as well. The API automatically "
"follows relationships as far as you need. Use double underscores to separate"
" relationships. This works as many levels deep as you want. There's no "
"limit. For example::"
msgstr "Les gestionnaires de relations acceptent aussi les recherches par champ. L'API suit automatiquement les relations à la profondeur nécessaire. Utilisez les doubles soulignements pour séparer les relations. Cela fonctionne à autant de niveaux que nécessaire, sans limite. Par exemple ::"

# f0b02d3ea4974e1bb350689e4fa51c7d
#: ../../topics/db/examples/many_to_one.txt:129
msgid "Exact match is implied here::"
msgstr "Une correspondance exacte est sous-entendue ici ::"

# d9886977702745199541c92729482a22
#: ../../topics/db/examples/many_to_one.txt:134
msgid ""
"Query twice over the related field. This translates to an AND condition in "
"the WHERE clause::"
msgstr "Double requête sur le champ lié. Cela se traduit par une condition AND dans la clause WHERE ::"

# 0f319e5e6a9343fe9efdf99d295cfb97
#: ../../topics/db/examples/many_to_one.txt:140
msgid ""
"For the related lookup you can supply a primary key value or pass the "
"related object explicitly::"
msgstr "Pour la recherche sur la liaison, il est possible d'indiquer une clé primaire ou de transmettre explicitement l'objet lié ::"

# 0ba9172994d64859a917982018124c5e
#: ../../topics/db/examples/many_to_one.txt:155
msgid "You can also use a queryset instead of a literal list of instances::"
msgstr "Vous pouvez aussi utiliser un résultat de requête (queryset) au lieu d'une liste explicite d'instances ::"

# b384a6943f654ab8b34515413ad66869
#: ../../topics/db/examples/many_to_one.txt:160
msgid "Querying in the opposite direction::"
msgstr "Requêtes dans la direction inverse ::"

# cc537218a9cf42108b2e6c3f14b03ecd
#: ../../topics/db/examples/many_to_one.txt:174
msgid ""
"Counting in the opposite direction works in conjunction with distinct()::"
msgstr "Le comptage dans la direction inverse fonctionne en combinant avec distinct() ::"

# 993b0c7b90274abe8841b765bca8bee0
#: ../../topics/db/examples/many_to_one.txt:181
msgid "Queries can go round in circles::"
msgstr "Les requêtes en boucle sont possibles ::"

# be107e8921394d5c85b62833955583de
#: ../../topics/db/examples/many_to_one.txt:190
msgid ""
"If you delete a reporter, his articles will be deleted (assuming that the "
"ForeignKey was defined with :attr:`django.db.models.ForeignKey.on_delete` "
"set to ``CASCADE``, which is the default)::"
msgstr "Si vous supprimez un reporter, ses articles seront supprimés (en supposant que la clé étrangère a été créée avec l'attribut :attr:`django.db.models.ForeignKey.on_delete` défini à ``CASCADE``, ce qui est la valeur par défaut) ::"

# 78d28c285d8c4de3bc465d84f1ababf4
#: ../../topics/db/examples/many_to_one.txt:204
msgid "You can delete using a JOIN in the query::"
msgstr "Vous pouvez effectuer une suppression en utilisant une jointure (JOIN) dans la requête ::"

# 8a2653d62c874f62bc7ac798893c281c
# 279a9e3d09904c5db1c051cffc5d0475
# 59c750d8c4fb4c789ee9fd60f9d1103e
#: ../../topics/db/examples/one_to_one.txt:3 ../../topics/db/models.txt:548
#: ../../topics/db/queries.txt:1230
msgid "One-to-one relationships"
msgstr "Relations un-à-un"

# 5e6100043c5847c593260e9b7defe80b
#: ../../topics/db/examples/one_to_one.txt:7
msgid "To define a one-to-one relationship, use :ref:`ref-onetoone`."
msgstr "Pour définir une relation un-à-un, utilisez :ref:`ref-onetoone`."

# 813e06fef6594ea8ab94feb2169e1ca8
#: ../../topics/db/examples/one_to_one.txt:9
msgid "In this example, a ``Place`` optionally can be a ``Restaurant``:"
msgstr "Dans cet exemple, un objet ``Place`` peut être un ``Restaurant`` dans certains cas :"

# 4ed0a195c90c426ab78002b64ac691d6
#: ../../topics/db/examples/one_to_one.txt:43
msgid "Create a couple of Places::"
msgstr "Créez quelques objets ``Places``::"

# 527b7089afeb43d1b7b70cf0aa22cfa9
#: ../../topics/db/examples/one_to_one.txt:50
msgid ""
"Create a Restaurant. Pass the ID of the \"parent\" object as this object's "
"ID::"
msgstr "Créez un ``Restaurant``. Passez l'identifiant de l'objet « parent » comme clé primaire de cet objet ::"

# 9b346059a7e142e88ce5a7dddeb0d640
#: ../../topics/db/examples/one_to_one.txt:55
msgid "A Restaurant can access its place::"
msgstr "Un ``Restaurant`` a accès à son objet ``Place``::"

# c9fa0b192acb4f5ab6b625c78ce72e79
#: ../../topics/db/examples/one_to_one.txt:60
msgid "A Place can access its restaurant, if available::"
msgstr "Un objet ``Place`` peut accéder à son objet ``Restaurant``, s'il existe ::"

# 77363d851bd746b383a8561b7fc447f8
#: ../../topics/db/examples/one_to_one.txt:65
msgid "p2 doesn't have an associated restaurant::"
msgstr "p2 ne possède pas d'objet ``Restaurant`` associé ::"

# 666d1c960c8e4e2ea6cdf15af67012c9
#: ../../topics/db/examples/one_to_one.txt:72
msgid ""
"Set the place using assignment notation. Because place is the primary key on"
" Restaurant, the save will create a new restaurant::"
msgstr "Définissez l'objet ``Place`` en utilisant la notation d'assignation. Comme ``place`` est la clé primaire de ``Restaurant``, l'enregistrement crée un nouvel objet ``Restaurant``::"

# d7ebd2aee16144acaef19f327bb56d62
#: ../../topics/db/examples/one_to_one.txt:82
msgid "Set the place back again, using assignment in the reverse direction::"
msgstr "Redéfinissez ``place`` en utilisant l'assignation dans la direction inverse ::"

# 54dc3554d2ab41db8a23cf5b9019441f
#: ../../topics/db/examples/one_to_one.txt:88
msgid ""
"Restaurant.objects.all() just returns the Restaurants, not the Places.  Note"
" that there are two restaurants - Ace Hardware the Restaurant was created in"
" the call to r.place = p2::"
msgstr "``Restaurant.objects.all()`` renvoie uniquement les objets ``Restaurant``, pas les objets ``Places``. Notez qu'il y a maintenant deux restaurants, « Ace Hardware » ayant été créé lors de l'instruction ``r.place = p2``::"

# fbf46a98e83a46ffb0b02d4683ad64e7
#: ../../topics/db/examples/one_to_one.txt:95
msgid ""
"Place.objects.all() returns all Places, regardless of whether they have "
"Restaurants::"
msgstr "``Place.objects.all()`` renvoie tous les objets ``Place``, qu'ils aient un objet ``Restaurant`` ou non ::"

# 4b7b99c49d0342a6a15636b1fafb816d
#: ../../topics/db/examples/one_to_one.txt:101
msgid ""
"You can query the models using :ref:`lookups across relationships <lookups-"
"that-span-relationships>`::"
msgstr "Vous pouvez interroger les modèles en utilisant les  :ref:`recherches traversant les relations <lookups-that-span-relationships>`::"

# 017eb731d2c8481982b0b501f028b93e
#: ../../topics/db/examples/one_to_one.txt:112
msgid "This of course works in reverse::"
msgstr "Ceci fonctionne évidemment aussi dans le sens inverse ::"

# a8a5b9a7f83d45c48b63e9248514daab
#: ../../topics/db/examples/one_to_one.txt:123
msgid "Add a Waiter to the Restaurant::"
msgstr "Ajoutez un objet ``Waiter`` à un ``Restaurant``::"

# ebf239cd26bb49ffbef0b237151e2482
#: ../../topics/db/examples/one_to_one.txt:130
msgid "Query the waiters::"
msgstr "Interrogez les objets ``Waiter``::"

# f27f943f027f4709b2775644591fbfcf
#: ../../topics/db/index.txt:2
msgid "Models and databases"
msgstr "Modèles et bases de données"

# ff48e863ef3347ef84f50b5295c832bf
#: ../../topics/db/index.txt:6
msgid ""
"A model is the single, definitive source of data about your data. It "
"contains the essential fields and behaviors of the data you're storing. "
"Generally, each model maps to a single database table."
msgstr "Un modèle est la source de données unique et définitive à propos de vos données. Il contient les champs et le comportement essentiels des données que vous stockez. Généralement, chaque modèle correspond à une seule table de base de données."

# 9c05ce2e6f954d708bf580f48157678b
#: ../../topics/db/managers.txt:3
msgid "Managers"
msgstr ""

# 1f33a19c689f471c89b7213b8126d282
#: ../../topics/db/managers.txt:9
msgid ""
"A ``Manager`` is the interface through which database query operations are "
"provided to Django models. At least one ``Manager`` exists for every model "
"in a Django application."
msgstr ""

# f9af001d478e4f47a03abe2889cb80af
#: ../../topics/db/managers.txt:13
msgid ""
"The way ``Manager`` classes work is documented in :doc:`/topics/db/queries`;"
" this document specifically touches on model options that customize "
"``Manager`` behavior."
msgstr ""

# fadfa7dad5214351b846e491a697d466
#: ../../topics/db/managers.txt:20
msgid "Manager names"
msgstr ""

# b6c8a033eed64626900ea01a35e9f982
#: ../../topics/db/managers.txt:22
msgid ""
"By default, Django adds a ``Manager`` with the name ``objects`` to every "
"Django model class. However, if you want to use ``objects`` as a field name,"
" or if you want to use a name other than ``objects`` for the ``Manager``, "
"you can rename it on a per-model basis. To rename the ``Manager`` for a "
"given class, define a class attribute of type ``models.Manager()`` on that "
"model. For example::"
msgstr ""

# 7acf15bb3c624fea9d8588a89721aec6
#: ../../topics/db/managers.txt:34
msgid ""
"Using this example model, ``Person.objects`` will generate an "
"``AttributeError`` exception, but ``Person.people.all()`` will provide a "
"list of all ``Person`` objects."
msgstr ""

# d55b43f178c34d7ca2846eb5a87a8733
#: ../../topics/db/managers.txt:41
msgid "Custom Managers"
msgstr ""

# 63dbe33c76324a0abf7adff2d69bf010
#: ../../topics/db/managers.txt:43
msgid ""
"You can use a custom ``Manager`` in a particular model by extending the base"
" ``Manager`` class and instantiating your custom ``Manager`` in your model."
msgstr ""

# 3b6bb251520749fcbc21338d0a4d4d9a
#: ../../topics/db/managers.txt:46
msgid ""
"There are two reasons you might want to customize a ``Manager``: to add "
"extra ``Manager`` methods, and/or to modify the initial ``QuerySet`` the "
"``Manager`` returns."
msgstr ""

# a2da3f6759c443b6972fe2b822f38d0a
#: ../../topics/db/managers.txt:51
msgid "Adding extra Manager methods"
msgstr ""

# 9dbc7c624a59468eb59b011e54f0d84e
#: ../../topics/db/managers.txt:53
msgid ""
"Adding extra ``Manager`` methods is the preferred way to add \"table-level\""
" functionality to your models. (For \"row-level\" functionality -- i.e., "
"functions that act on a single instance of a model object -- use :ref:`Model"
" methods <model-methods>`, not custom ``Manager`` methods.)"
msgstr ""

# 6046f4089d3a4056a9713dcf61608933
#: ../../topics/db/managers.txt:58
msgid ""
"A custom ``Manager`` method can return anything you want. It doesn't have to"
" return a ``QuerySet``."
msgstr ""

# a07b25a5ac334c338db3bf0d0aa43b36
#: ../../topics/db/managers.txt:61
msgid ""
"For example, this custom ``Manager`` offers a method ``with_counts()``, "
"which returns a list of all ``OpinionPoll`` objects, each with an extra "
"``num_responses`` attribute that is the result of an aggregate query::"
msgstr ""

# 14762781b19d408082a7faf3bf248874
#: ../../topics/db/managers.txt:94
msgid ""
"With this example, you'd use ``OpinionPoll.objects.with_counts()`` to return"
" that list of ``OpinionPoll`` objects with ``num_responses`` attributes."
msgstr ""

# d73e11dc999b4f3eafa6d8925daa458a
#: ../../topics/db/managers.txt:97
msgid ""
"Another thing to note about this example is that ``Manager`` methods can "
"access ``self.model`` to get the model class to which they're attached."
msgstr ""

# 4c76b2bc626444bc94a28fc3e4123e7a
#: ../../topics/db/managers.txt:101
msgid "Modifying initial Manager QuerySets"
msgstr ""

# aad0486eec2f497a879315ba9223fd3b
#: ../../topics/db/managers.txt:103
msgid ""
"A ``Manager``’s base ``QuerySet`` returns all objects in the system. For "
"example, using this model::"
msgstr ""

# 7bfe267e2bf3495a9f50e332de783a23
#: ../../topics/db/managers.txt:112
msgid ""
"...the statement ``Book.objects.all()`` will return all books in the "
"database."
msgstr ""

# 3c3822f506ba4c718cc5e5293eb40a39
#: ../../topics/db/managers.txt:114
msgid ""
"You can override a ``Manager``’s base ``QuerySet`` by overriding the "
"``Manager.get_queryset()`` method. ``get_queryset()`` should return a "
"``QuerySet`` with the properties you require."
msgstr ""

# 32564a1ee0974648b3c8876145c73987
#: ../../topics/db/managers.txt:118
msgid ""
"For example, the following model has *two* ``Manager``\\s -- one that "
"returns all objects, and one that returns only the books by Roald Dahl::"
msgstr ""

# 7c3562e1a4ae4092bf87ab33f11fd056
#: ../../topics/db/managers.txt:134
msgid ""
"With this sample model, ``Book.objects.all()`` will return all books in the "
"database, but ``Book.dahl_objects.all()`` will only return the ones written "
"by Roald Dahl."
msgstr ""

# d81ffc6d1cb24385888a0b194161ef1d
#: ../../topics/db/managers.txt:138
msgid ""
"Of course, because ``get_queryset()`` returns a ``QuerySet`` object, you can"
" use ``filter()``, ``exclude()`` and all the other ``QuerySet`` methods on "
"it. So these statements are all legal::"
msgstr ""

# 6cf433b410144927ad6d567c8817ad08
#: ../../topics/db/managers.txt:146
msgid ""
"This example also pointed out another interesting technique: using multiple "
"managers on the same model. You can attach as many ``Manager()`` instances "
"to a model as you'd like. This is an easy way to define common \"filters\" "
"for your models."
msgstr ""

# 08a4db23b6384a09a5c73ce45b8b62ff
#: ../../topics/db/managers.txt:169
msgid ""
"This example allows you to request ``Person.men.all()``, "
"``Person.women.all()``, and ``Person.people.all()``, yielding predictable "
"results."
msgstr ""

# dde9d6f67d6349989fba6fb7e037ff0c
#: ../../topics/db/managers.txt:172
msgid ""
"If you use custom ``Manager`` objects, take note that the first ``Manager`` "
"Django encounters (in the order in which they're defined in the model) has a"
" special status. Django interprets the first ``Manager`` defined in a class "
"as the \"default\" ``Manager``, and several parts of Django (including "
":djadmin:`dumpdata`) will use that ``Manager`` exclusively for that model. "
"As a result, it's a good idea to be careful in your choice of default "
"manager in order to avoid a situation where overriding ``get_queryset()`` "
"results in an inability to retrieve objects you'd like to work with."
msgstr ""

# 1ca62858b4da4ce8b6a95b9044b53fda
#: ../../topics/db/managers.txt:184
msgid "The ``get_queryset`` method was previously named ``get_query_set``."
msgstr ""

# 2b39f0170f094269922989e7241192cd
#: ../../topics/db/managers.txt:189
msgid "Using managers for related object access"
msgstr ""

# d3c5917d77d746559e71a90bfdb1c2d0
#: ../../topics/db/managers.txt:191
msgid ""
"By default, Django uses an instance of a \"plain\" manager class when "
"accessing related objects (i.e. ``choice.poll``), not the default manager on"
" the related object. This is because Django needs to be able to retrieve the"
" related object, even if it would otherwise be filtered out (and hence be "
"inaccessible) by the default manager."
msgstr ""

# 721c096a07254f2bb35a3a6a98864823
#: ../../topics/db/managers.txt:197
msgid ""
"If the normal plain manager class (:class:`django.db.models.Manager`) is not"
" appropriate for your circumstances, you can force Django to use the same "
"class as the default manager for your model by setting the "
"``use_for_related_fields`` attribute on the manager class. This is "
"documented fully below_."
msgstr ""

# 625c9d90fae340d6bd889f4909bdc1c7
#: ../../topics/db/managers.txt:207
msgid "Custom managers and model inheritance"
msgstr ""

# 07150aa233954e5f8c81630e174ce834
#: ../../topics/db/managers.txt:209
msgid ""
"Class inheritance and model managers aren't quite a perfect match for each "
"other. Managers are often specific to the classes they are defined on and "
"inheriting them in subclasses isn't necessarily a good idea. Also, because "
"the first manager declared is the *default manager*, it is important to "
"allow that to be controlled. So here's how Django handles custom managers "
"and :ref:`model inheritance <model-inheritance>`:"
msgstr ""

# 7aa9e9535bac4c0692c3a3fa0d434025
#: ../../topics/db/managers.txt:216
msgid ""
"Managers defined on non-abstract base classes are *not* inherited by child "
"classes. If you want to reuse a manager from a non-abstract base, redeclare "
"it explicitly on the child class. These sorts of managers are likely to be "
"fairly specific to the class they are defined on, so inheriting them can "
"often lead to unexpected results (particularly as far as the default manager"
" goes). Therefore, they aren't passed onto child classes."
msgstr ""

# 0fde281ab1ea47fa8821d3f85fac7570
#: ../../topics/db/managers.txt:224
msgid ""
"Managers from abstract base classes are always inherited by the child class,"
" using Python's normal name resolution order (names on the child class "
"override all others; then come names on the first parent class, and so on). "
"Abstract base classes are designed to capture information and behavior that "
"is common to their child classes. Defining common managers is an appropriate"
" part of this common information."
msgstr ""

# a61b0322a0cf462db024f1a875cebd1e
#: ../../topics/db/managers.txt:231
msgid ""
"The default manager on a class is either the first manager declared on the "
"class, if that exists, or the default manager of the first abstract base "
"class in the parent hierarchy, if that exists. If no default manager is "
"explicitly declared, Django's normal default manager is used."
msgstr ""

# bd366ae993f541a0918512839b9b97f0
#: ../../topics/db/managers.txt:237
msgid ""
"These rules provide the necessary flexibility if you want to install a "
"collection of custom managers on a group of models, via an abstract base "
"class, but still customize the default manager. For example, suppose you "
"have this base class::"
msgstr ""

# f1ac96af4f9046f08c1796b39b329931
#: ../../topics/db/managers.txt:249
msgid ""
"If you use this directly in a subclass, ``objects`` will be the default "
"manager if you declare no managers in the base class::"
msgstr ""

# b0e76a92d7a94644b2d86672029b4ea6
#: ../../topics/db/managers.txt:257
msgid ""
"If you want to inherit from ``AbstractBase``, but provide a different "
"default manager, you can provide the default manager on the child class::"
msgstr ""

# a312c83327e949508931cf1277cb3a83
#: ../../topics/db/managers.txt:265
msgid ""
"Here, ``default_manager`` is the default. The ``objects`` manager is still "
"available, since it's inherited. It just isn't used as the default."
msgstr ""

# 7d6681f740b144e0a59814d7cac7015d
#: ../../topics/db/managers.txt:268
msgid ""
"Finally for this example, suppose you want to add extra managers to the "
"child class, but still use the default from ``AbstractBase``. You can't add "
"the new manager directly in the child class, as that would override the "
"default and you would have to also explicitly include all the managers from "
"the abstract base class. The solution is to put the extra managers in "
"another base class and introduce it into the inheritance hierarchy *after* "
"the defaults::"
msgstr ""

# e3de63aaf388464ca71b8d18cf6193a2
#: ../../topics/db/managers.txt:287
msgid ""
"Note that while you can *define* a custom manager on the abstract model, you"
" can't *invoke* any methods using the abstract model. That is::"
msgstr ""

# 5aed30dece4e4fcab05300adbb1e8759
#: ../../topics/db/managers.txt:292
msgid "is legal, but::"
msgstr ""

# a32132e89f4a44e293a2cb7c5f10a683
#: ../../topics/db/managers.txt:296
msgid ""
"will raise an exception. This is because managers are intended to "
"encapsulate logic for managing collections of objects. Since you can't have "
"a collection of abstract objects, it doesn't make sense to be managing them."
" If you have functionality that applies to the abstract model, you should "
"put that functionality in a ``staticmethod`` or ``classmethod`` on the "
"abstract model."
msgstr ""

# 073bd6647c4a44d98438cc47ab1dc320
#: ../../topics/db/managers.txt:303
msgid "Implementation concerns"
msgstr ""

# db558de2ef0c4c9c8d74013b2d2c29d9
#: ../../topics/db/managers.txt:305
msgid ""
"Whatever features you add to your custom ``Manager``, it must be possible to"
" make a shallow copy of a ``Manager`` instance; i.e., the following code "
"must work::"
msgstr ""

# 82b52b6baf8b4a1ea8a1a417b6e3ad49
#: ../../topics/db/managers.txt:313
msgid ""
"Django makes shallow copies of manager objects during certain queries; if "
"your Manager cannot be copied, those queries will fail."
msgstr ""

# 2b9b74070bd540d59466253c7221f6a4
#: ../../topics/db/managers.txt:316
msgid ""
"This won't be an issue for most custom managers. If you are just adding "
"simple methods to your ``Manager``, it is unlikely that you will "
"inadvertently make instances of your ``Manager`` uncopyable. However, if "
"you're overriding ``__getattr__`` or some other private method of your "
"``Manager`` object that controls object state, you should ensure that you "
"don't affect the ability of your ``Manager`` to be copied."
msgstr ""

# 18e9ab6546984b52b77bf8fc624f608f
#: ../../topics/db/managers.txt:327
msgid "Controlling automatic Manager types"
msgstr ""

# b5da3b6efa9a4cc1ae617f81cc5ebb4d
#: ../../topics/db/managers.txt:329
msgid ""
"This document has already mentioned a couple of places where Django creates "
"a manager class for you: `default managers`_ and the \"plain\" manager used "
"to `access related objects`_. There are other places in the implementation "
"of Django where temporary plain managers are needed. Those automatically "
"created managers will normally be instances of the "
":class:`django.db.models.Manager` class."
msgstr ""

# 736a6ce3c1e94b5cbb1eb0d2c77ecad4
#: ../../topics/db/managers.txt:339
msgid ""
"Throughout this section, we will use the term \"automatic manager\" to mean "
"a manager that Django creates for you -- either as a default manager on a "
"model with no managers, or to use temporarily when accessing related "
"objects."
msgstr ""

# 0b39cb5f296a4911b1ba95a8405578a5
#: ../../topics/db/managers.txt:343
msgid ""
"Sometimes this default class won't be the right choice. One example is in "
"the :mod:`django.contrib.gis` application that ships with Django itself. All"
" ``gis`` models must use a special manager class "
"(:class:`~django.contrib.gis.db.models.GeoManager`) because they need a "
"special queryset (:class:`~django.contrib.gis.db.models.GeoQuerySet`) to be "
"used for interacting with the database.  It turns out that models which "
"require a special manager like this need to use the same manager class "
"wherever an automatic manager is created."
msgstr ""

# 08ced31c26e64235bc3d3197017ef841
#: ../../topics/db/managers.txt:351
msgid ""
"Django provides a way for custom manager developers to say that their "
"manager class should be used for automatic managers whenever it is the "
"default manager on a model. This is done by setting the "
"``use_for_related_fields`` attribute on the manager class::"
msgstr ""

# b8644e310bb44b63b68e7797b12b1034
#: ../../topics/db/managers.txt:360
msgid ""
"If this attribute is set on the *default* manager for a model (only the "
"default manager is considered in these situations), Django will use that "
"class whenever it needs to automatically create a manager for the class.  "
"Otherwise, it will use :class:`django.db.models.Manager`."
msgstr ""

# 587f6f0b2bba448893de4e687d9aa0ab
#: ../../topics/db/managers.txt:365
msgid "Historical Note"
msgstr ""

# 35ad1e7ff77441859d0151e12f56e973
#: ../../topics/db/managers.txt:367
msgid ""
"Given the purpose for which it's used, the name of this attribute "
"(``use_for_related_fields``) might seem a little odd. Originally, the "
"attribute only controlled the type of manager used for related field access,"
" which is where the name came from. As it became clear the concept was more "
"broadly useful, the name hasn't been changed. This is primarily so that "
"existing code will :doc:`continue to work </misc/api-stability>` in future "
"Django versions."
msgstr ""

# f877fa1f81ae4e4c975697f0f7935c6a
#: ../../topics/db/managers.txt:376
msgid "Writing correct Managers for use in automatic Manager instances"
msgstr ""

# 6568e3fba14a4ebfb5816367b81189cb
#: ../../topics/db/managers.txt:378
msgid ""
"As already suggested by the :mod:`django.contrib.gis` example, above, the "
"``use_for_related_fields`` feature is primarily for managers that need to "
"return a custom ``QuerySet`` subclass. In providing this functionality in "
"your manager, there are a couple of things to remember."
msgstr ""

# c193a02f4f0644b29f808496e944bf3b
#: ../../topics/db/managers.txt:384
msgid "Do not filter away any results in this type of manager subclass"
msgstr ""

# 89c9ea4ed94743f78e7882abfc8c1935
#: ../../topics/db/managers.txt:386
msgid ""
"One reason an automatic manager is used is to access objects that are "
"related to from some other model. In those situations, Django has to be able"
" to see all the objects for the model it is fetching, so that *anything* "
"which is referred to can be retrieved."
msgstr ""

# 96cc7ec37bad4095bab7ddc77f54f8ad
#: ../../topics/db/managers.txt:391
msgid ""
"If you override the ``get_queryset()`` method and filter out any rows, "
"Django will return incorrect results. Don't do that. A manager that filters "
"results in ``get_queryset()`` is not appropriate for use as an automatic "
"manager."
msgstr ""

# 77b05b57fb154008abfdd77bd192c11e
#: ../../topics/db/managers.txt:396
msgid "Set ``use_for_related_fields`` when you define the class"
msgstr ""

# abfd3394523e4a369287708e2398150b
#: ../../topics/db/managers.txt:398
msgid ""
"The ``use_for_related_fields`` attribute must be set on the manager *class*,"
" not on an *instance* of the class. The earlier example shows the correct "
"way to set it, whereas the following will not work::"
msgstr ""

# 2a98da3b76834ff5846a2d43f41b604a
#: ../../topics/db/managers.txt:418
msgid ""
"You also shouldn't change the attribute on the class object after it has "
"been used in a model, since the attribute's value is processed when the "
"model class is created and not subsequently reread. Set the attribute on the"
" manager class when it is first defined, as in the initial example of this "
"section and everything will work smoothly."
msgstr ""

# 2f9c114f19c14328943c7452cc0de81d
#: ../../topics/db/models.txt:3
msgid "Models"
msgstr "Modèles"

# 99032aa3922849fea23c4aba7a35d3a0
#: ../../topics/db/models.txt:7
msgid ""
"A model is the single, definitive source of information about your data. It "
"contains the essential fields and behaviors of the data you're storing. "
"Generally, each model maps to a single database table."
msgstr ""

# 243e4a8b4122452ab4eb0f5f7900755b
#: ../../topics/db/models.txt:11
msgid "The basics:"
msgstr "Les bases :"

# 4393d5882a8644f6ab6c7a308e171ad3
#: ../../topics/db/models.txt:13
msgid ""
"Each model is a Python class that subclasses "
":class:`django.db.models.Model`."
msgstr "Chaque modèle est une classe Python qui hérite de :class:`django.db.models.Model`."

# 6d1c1f49bbaf4fb4b19159832532d661
#: ../../topics/db/models.txt:16
msgid "Each attribute of the model represents a database field."
msgstr "Chaque attribut du modèle représente un champ de base de données."

# 71bbafbc88084e1fb6663cf7939e676f
#: ../../topics/db/models.txt:18
msgid ""
"With all of this, Django gives you an automatically-generated database-"
"access API; see :doc:`/topics/db/queries`."
msgstr "Avec tout ça, Django vous offre une API d'accès à la base de données générée automatiquement ; voir :doc:`/topics/db/queries`."

# 1ce09dd244954306877b240017ec5959
# 34c6c1038a154744b925e86a9982755b
#: ../../topics/db/models.txt:23 ../../topics/email.txt:17
msgid "Quick example"
msgstr "Exemple rapide"

# 676cebcd9ca040498530a3ae03f0d2b3
#: ../../topics/db/models.txt:25
msgid ""
"This example model defines a ``Person``, which has a ``first_name`` and "
"``last_name``::"
msgstr "Cet exemple de modèle définit une personne (``Person``) avec un prénom (``first_name``) et un nom (``last_name``) ::"

# eb5ff3942ef1409180884eb2f05e7a80
#: ../../topics/db/models.txt:34
msgid ""
"``first_name`` and ``last_name`` are fields_ of the model. Each field is "
"specified as a class attribute, and each attribute maps to a database "
"column."
msgstr "``first_name`` et ``last_name`` sont des champs_ du modèle. Chaque champ est défini comme un attribut de classe, et chaque attribut correspond à une colonne de base de données."

# 4a6941345afe45d99eabf9f4b9a572fe
#: ../../topics/db/models.txt:37
msgid "The above ``Person`` model would create a database table like this:"
msgstr "Le modèle ``Person`` ci-dessus va créer une table de base de données comme celle-ci :"

# ed12bc16ebff497c8304d1d8ee56c60f
#: ../../topics/db/models.txt:47
msgid "Some technical notes:"
msgstr "Quelques notes techniques :"

# 57af49f3aeec4f5a882e00fbcb4e8e5c
#: ../../topics/db/models.txt:49
msgid ""
"The name of the table, ``myapp_person``, is automatically derived from some "
"model metadata but can be overridden. See :ref:`table-names` for more "
"details."
msgstr ""

# 77a33bd5f0e9423b983b8243904f3aeb
#: ../../topics/db/models.txt:53
msgid ""
"An ``id`` field is added automatically, but this behavior can be overridden."
" See :ref:`automatic-primary-key-fields`."
msgstr "Un champ ``id`` est ajouté automatiquement, mais ce comportement peut être adapté. Voir :ref:`automatic-primary-key-fields`."

# 4f26d85962d54b58874192967d284aa4
#: ../../topics/db/models.txt:56
msgid ""
"The ``CREATE TABLE`` SQL in this example is formatted using PostgreSQL "
"syntax, but it's worth noting Django uses SQL tailored to the database "
"backend specified in your :doc:`settings file </topics/settings>`."
msgstr "Le code SQL ``CREATE TABLE`` de cet exemple est mis en forme avec la syntaxe PostgreSQL, mais il est utile de relever que Django utilise du code SQL adapté au moteur de base de données indiqué dans votre :doc:`fichier de réglages </topics/settings>`."

# 397ed59c8aea45acb0dbb1cb33ed9831
#: ../../topics/db/models.txt:61
msgid "Using models"
msgstr "Utilisation des modèles"

# 6e49b256a9aa4a568fb30594d6f58eb3
#: ../../topics/db/models.txt:63
msgid ""
"Once you have defined your models, you need to tell Django you're going to "
"*use* those models. Do this by editing your settings file and changing the "
":setting:`INSTALLED_APPS` setting to add the name of the module that "
"contains your ``models.py``."
msgstr "Après avoir défini les modèles, il faut indiquer à Django que vous souhaitez *utiliser* ces modèles. Vous pouvez le faire en éditant votre fichier de réglages et en modifiant le réglage :setting:`INSTALLED_APPS` pour y ajouter le nom du module qui contient ``models.py``."

# 454111f039f341e2a498138822c288dc
#: ../../topics/db/models.txt:68
msgid ""
"For example, if the models for your application live in the module "
"``myapp.models`` (the package structure that is created for an application "
"by the :djadmin:`manage.py startapp <startapp>` script), "
":setting:`INSTALLED_APPS` should read, in part::"
msgstr "Par exemple, si le modèle de votre application se trouve dans le module ``myapp.models`` (la structure de paquet créée pour une application par le script  :djadmin:`manage.py startapp <startapp>`),  :setting:`INSTALLED_APPS` devrait contenir ::"

# 0f1878f6e1fa45549ca29c3ed4d8993b
#: ../../topics/db/models.txt:79
msgid ""
"When you add new apps to :setting:`INSTALLED_APPS`, be sure to run "
":djadmin:`manage.py syncdb <syncdb>`."
msgstr "Lorsque vous ajoutez de nouvelles applications à :setting:`INSTALLED_APPS`, n'oubliez pas ensuite de lancer :djadmin:`manage.py syncdb <syncdb>`."

# 55a35d0e9a3540e0831d2a58a211cad3
#: ../../topics/db/models.txt:83
msgid "Fields"
msgstr "Champs"

# 078001aa279b4b8a8ea83cc87a6c010e
#: ../../topics/db/models.txt:85
msgid ""
"The most important part of a model -- and the only required part of a model "
"-- is the list of database fields it defines. Fields are specified by class "
"attributes. Be careful not to choose field names that conflict with the "
":doc:`models API </ref/models/instances>` like ``clean``, ``save``, or "
"``delete``."
msgstr "La partie la plus importante d'un modèle (et la seule qui soit obligatoire) est la liste des champs de base de données qu'il définit. Les champs sont définis par des attributs de classe. Faites attention à ne pas choisir des noms de champs qui entrent en conflit avec l':doc:`API des modèles </ref/models/instances>` comme ``clean``, ``save`` ou ``delete``."

# 182afdc599424e95905fcdc175f0b5e0
# c78e5ef0a7d24d6eb01032c0eb1e3d15
# ec9afa923c7c46f0aaeb25c7dbd6801c
# 9f3ea753a43a4feea10d0088c989deed
# 60f66adc8d1e4b0cafc038290f1cd02e
#: ../../topics/db/models.txt:91 ../../topics/db/queries.txt:255
#: ../../topics/db/queries.txt:1088 ../../topics/db/queries.txt:1138
#: ../../topics/settings.txt:187
msgid "Example::"
msgstr "Exemple ::"

# 1fd6959391f2476ab14431902f2f6542
# 2f1ce9a812f044179255561af11a140e
#: ../../topics/db/models.txt:107 ../../topics/forms/modelforms.txt:42
msgid "Field types"
msgstr "Types de champs"

# 3c6788998eb746f7a36b93cb02a6e7f5
#: ../../topics/db/models.txt:109
msgid ""
"Each field in your model should be an instance of the appropriate "
":class:`~django.db.models.Field` class. Django uses the field class types to"
" determine a few things:"
msgstr "Chaque champ de votre modèle doit être une instance de la classe :class:`~django.db.models.Field` appropriée. Django utilise les types des classes de champs pour déterminer un certain nombre de choses :"

# 069a397633c945eb8cd52c61d0bc159c
#: ../../topics/db/models.txt:113
msgid "The database column type (e.g. ``INTEGER``, ``VARCHAR``)."
msgstr "Le type de colonne de la base de données (ex : ``INTEGER``, ``VARCHAR``)."

# 32804504ab674905a963a7b6209d0a62
#: ../../topics/db/models.txt:115
msgid ""
"The default HTML :doc:`widget </ref/forms/widgets>` to use when rendering a "
"form field (e.g. ``<input type=\"text\">``, ``<select>``)."
msgstr ""

# 0cab8c6a687d4d2a8a29e335958153c3
#: ../../topics/db/models.txt:118
msgid ""
"The minimal validation requirements, used in Django's admin and in "
"automatically-generated forms."
msgstr "Les exigences minimales de validation, utilisées dans l'administration de Django et dans les formulaires générés automatiquement."

# dbcd468326534555b7845f8395bb9235
#: ../../topics/db/models.txt:121
msgid ""
"Django ships with dozens of built-in field types; you can find the complete "
"list in the :ref:`model field reference <model-field-types>`. You can easily"
" write your own fields if Django's built-in ones don't do the trick; see "
":doc:`/howto/custom-model-fields`."
msgstr "Django est fourni avec des dizaines de types de champs intégrés ; vous trouverez la liste complète dans la :ref:`référence des champs de modèle <model-field-types>`. Vous pouvez facilement écrire vos propres champs si ceux proposés par Django ne font pas l'affaire ; voir :doc:`/howto/custom-model-fields`."

# ed2738098bed442196c9732083b89adc
#: ../../topics/db/models.txt:127
msgid "Field options"
msgstr "Options des champs"

# 63a8c2d5767d43c7b2958cfe7eec4aca
#: ../../topics/db/models.txt:129
msgid ""
"Each field takes a certain set of field-specific arguments (documented in "
"the :ref:`model field reference <model-field-types>`). For example, "
":class:`~django.db.models.CharField` (and its subclasses) require a "
":attr:`~django.db.models.CharField.max_length` argument which specifies the "
"size of the ``VARCHAR`` database field used to store the data."
msgstr "Chaque champ accepte un certain nombre de paramètres spécifiques (documentés dans la :ref:`référence des champs de modèle <model-field-types>`). Par exemple, :class:`~django.db.models.CharField` (et ses sous-classes) exige un paramètre :attr:`~django.db.models.CharField.max_length` indiquant la taille du champ de base de données ``VARCHAR`` qui stockera les données."

# 5b58e6b002814e4a8309e9af6efec433
#: ../../topics/db/models.txt:135
msgid ""
"There's also a set of common arguments available to all field types. All are"
" optional. They're fully explained in the :ref:`reference <common-model-"
"field-options>`, but here's a quick summary of the most often-used ones:"
msgstr "Il existe aussi un ensemble de paramètres communs à tous les types de champs. Ils sont tous facultatifs. Ils sont décrits en détails dans la :ref:`référence <common-model-field-options>`, mais voici un résumé rapide de ceux qui sont le plus souvent utilisés :"

# 8a0fac0d2ee24102a6a69daebfc9982b
#: ../../topics/db/models.txt:142
msgid ":attr:`~Field.null`"
msgstr ":attr:`~Field.null`"

# 07d3271daa1e481aa28c82fa337263c7
#: ../../topics/db/models.txt:141
msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr "Si la valeur est ``True``, Django stocke les valeurs vides avec  ``NULL`` dans la base de données. La valeur par défaut est ``False``."

# c58f1d701fab43bc83d94bd3dae9514c
#: ../../topics/db/models.txt:152
msgid ":attr:`~Field.blank`"
msgstr ":attr:`~Field.blank`"

# e4da0ada6ccc49ed900b1ded4dffee4b
#: ../../topics/db/models.txt:145
msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr "Si la valeur est ``True``, le champ peut être vide. La valeur par défaut est ``False``."

# b9d17b67051c4b4eb631dc702d0e3a77
#: ../../topics/db/models.txt:147
msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is"
" purely database-related, whereas :attr:`~Field.blank` is validation-"
"related. If a field has :attr:`blank=True <Field.blank>`, form validation "
"will allow entry of an empty value. If a field has :attr:`blank=False "
"<Field.blank>`, the field will be required."
msgstr "Notez que ce n'est pas la même chose que :attr:`~Field.null`. :attr:`~Field.null` est purement lié à la base de données alors que :attr:`~Field.blank` est lié à la validation. Si un champ possède :attr:`blank=True <Field.blank>`, la validation de formulaire permet la saisie d'une valeur vide. Si un champ possède :attr:`blank=False <Field.blank>`, le champ est obligatoire."

# f935accc95ca41c4a804b5b947f11ca5
#: ../../topics/db/models.txt:194
msgid ":attr:`~Field.choices`"
msgstr ":attr:`~Field.choices`"

# 2467fac216d644caad61b4d94b325cfd
#: ../../topics/db/models.txt:155
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field. If this is given, the default form widget will be a select box "
"instead of the standard text field and will limit choices to the choices "
"given."
msgstr "Un itérable (une liste ou un tuple) de 2 valeurs à utiliser comme liste de choix pour ce champ. Quand ce paramètre est présent, le composant de formulaire par défaut est une liste déroulante au lieu du champ de texte standard et seules les valeurs proposées dans la liste seront acceptées."

# 6e368c358d2e46f2a72eec96b131f177
#: ../../topics/db/models.txt:160
msgid "A choices list looks like this::"
msgstr "Une liste de choix ressemble à ceci ::"

# 31aa870640b4445aae9ca1cdf0043471
#: ../../topics/db/models.txt:170
msgid ""
"The first element in each tuple is the value that will be stored in the "
"database, the second element will be displayed by the default form widget or"
" in a ModelChoiceField. Given an instance of a model object, the display "
"value for a choices field can be accessed using the ``get_FOO_display`` "
"method. For example::"
msgstr "Le premier élément de chaque tuple est la valeur qui sera stockée dans la base de données, le second élément est celui qui est affiché dans le composant de formulaire par défaut ou dans un ``ModelChoiceField``. Étant donné une instance d'un objet modèle, la valeur d'affichage d'un champ comportant des choix peut être accédée en utilisant la méthode ``get_FOO_display``. Par exemple ::"

# 0c6d6e59397a46e2886c639add4f6ca5
#: ../../topics/db/models.txt:199
msgid ":attr:`~Field.default`"
msgstr ":attr:`~Field.default`"

# 33578a7221444f48aa8b224df71b64c4
#: ../../topics/db/models.txt:197
msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr "La valeur par défaut du champ. Cela peut être une valeur ou un objet exécutable. Dans ce dernier cas, l'objet est appelé lors de chaque création d'un nouvel objet."

# bf0ffe71ff4445edad6b8c580f457b21
#: ../../topics/db/models.txt:203
msgid ":attr:`~Field.help_text`"
msgstr ":attr:`~Field.help_text`"

# e681c14713f442f2bafbab973c243e5b
#: ../../topics/db/models.txt:202
msgid ""
"Extra \"help\" text to be displayed with the form widget. It's useful for "
"documentation even if your field isn't used on a form."
msgstr "Texte d'aide supplémentaire à afficher avec le composant de formulaire. Utile pour la documentation même si le champ n'est pas utilisé dans un formulaire."

# dce108b049eb46cbb5c18723f677ce2a
#: ../../topics/db/models.txt:213
msgid ":attr:`~Field.primary_key`"
msgstr ":attr:`~Field.primary_key`"

# bd7d0a95d24e475490063fec7b6c7536
#: ../../topics/db/models.txt:206
msgid "If ``True``, this field is the primary key for the model."
msgstr "Si la valeur est ``True``, ce champ représentera la clé primaire du modèle."

# 32637d3b509347f59d37d7062e36f896
#: ../../topics/db/models.txt:208
msgid ""
"If you don't specify :attr:`primary_key=True <Field.primary_key>` for any "
"fields in your model, Django will automatically add an :class:`IntegerField`"
" to hold the primary key, so you don't need to set :attr:`primary_key=True "
"<Field.primary_key>` on any of your fields unless you want to override the "
"default primary-key behavior. For more, see :ref:`automatic-primary-key-"
"fields`."
msgstr "Si vous n'indiquez aucun paramètre :attr:`primary_key=True <Field.primary_key>` dans les champs d'un modèle, Django ajoute automatiquement un champ :class:`IntegerField` pour constituer une clé primaire ; il n'est donc pas nécessaire de définir le paramètre :attr:`primary_key=True <Field.primary_key>` pour un champ sauf si vous souhaitez modifier le comportement par défaut de clé primaire automatique. Pour en savoir plus, consultez :ref:`automatic-primary-key-fields`."

# 5ebc88ed916349f7b991b4b638395340
#: ../../topics/db/models.txt:216
msgid ":attr:`~Field.unique`"
msgstr ":attr:`~Field.unique`"

# be8bdad8a8f94f79a12f0a3c6e764e7e
#: ../../topics/db/models.txt:216
msgid "If ``True``, this field must be unique throughout the table."
msgstr "Si la valeur est ``True``, ce champ doit être unique dans toute la table."

# 38e1b4d1a7a04cd89f6d0c3f26e18ace
#: ../../topics/db/models.txt:218
msgid ""
"Again, these are just short descriptions of the most common field options. "
"Full details can be found in the :ref:`common model field option reference "
"<common-model-field-options>`."
msgstr "Répétons encore une fois que ce n'était que de courtes descriptions des options de champs les plus courantes. Des détails complets peuvent être obtenus dans la :ref:`référence des options communes des champs de modèle <common-model-field-options>`."

# 677fd44eb00c4ffab01e31093a7f7e24
#: ../../topics/db/models.txt:225
msgid "Automatic primary key fields"
msgstr "Champs clé primaire automatiques"

# 3f5afe6e29e742ceabb45b66d91c451f
#: ../../topics/db/models.txt:227
msgid "By default, Django gives each model the following field::"
msgstr "Par défaut, Django ajoute à chaque modèle le champ suivant ::"

# 6b40f63f29844c2380c0aeef96841c71
#: ../../topics/db/models.txt:231
msgid "This is an auto-incrementing primary key."
msgstr "C'est une clé primaire avec incrémentation automatique."

# fcf5a5fbef6c42318e76630eaf760375
#: ../../topics/db/models.txt:233
msgid ""
"If you'd like to specify a custom primary key, just specify "
":attr:`primary_key=True <Field.primary_key>` on one of your fields. If "
"Django sees you've explicitly set :attr:`Field.primary_key`, it won't add "
"the automatic ``id`` column."
msgstr "Si vous souhaitez spécifier une clé primaire personnalisée, il suffit d'ajouter :attr:`primary_key=True <Field.primary_key>` à l'un de vos champs. Si Django voit que vous avez explicitement défini  :attr:`Field.primary_key`, il n'ajoutera pas de colonne ``id`` automatique."

# 3a015ce2e48c4cf4bf7efc11b5f03440
#: ../../topics/db/models.txt:238
msgid ""
"Each model requires exactly one field to have :attr:`primary_key=True "
"<Field.primary_key>` (either explicitly declared or automatically added)."
msgstr ""

# e2133333807c417796832c503dda6520
#: ../../topics/db/models.txt:244
msgid "Verbose field names"
msgstr "Noms de champs verbeux"

# 0940e23dd0b14108a28b0d9cf6154484
#: ../../topics/db/models.txt:246
msgid ""
"Each field type, except for :class:`~django.db.models.ForeignKey`, "
":class:`~django.db.models.ManyToManyField` and "
":class:`~django.db.models.OneToOneField`, takes an optional first positional"
" argument -- a verbose name. If the verbose name isn't given, Django will "
"automatically create it using the field's attribute name, converting "
"underscores to spaces."
msgstr "Chaque type de champ, à l'exception de :class:`~django.db.models.ForeignKey`, :class:`~django.db.models.ManyToManyField` et :class:`~django.db.models.OneToOneField`, accepte un premier paramètre positionnel facultatif, un nom verbeux. Si le nom verbeux n'est pas défini, Django le crée automatiquement en se basant sur le nom d'attribut du champ, remplaçant les soulignements par des espaces."

# 409fcfd328444ef7856cd3493e52e73f
#: ../../topics/db/models.txt:253
msgid "In this example, the verbose name is ``\"person's first name\"``::"
msgstr "Dans cet exemple, le nom verbeux est ``\"person's first name\"``::"

# 7448c31477c24f34bcf4abc07844fa33
#: ../../topics/db/models.txt:257
msgid "In this example, the verbose name is ``\"first name\"``::"
msgstr "Dans cet exemple, le nom verbeux est ``\"first name\"``::"

# 18c1f39b25d042c8933b3610ab17198c
#: ../../topics/db/models.txt:261
msgid ""
":class:`~django.db.models.ForeignKey`, "
":class:`~django.db.models.ManyToManyField` and "
":class:`~django.db.models.OneToOneField` require the first argument to be a "
"model class, so use the :attr:`~Field.verbose_name` keyword argument::"
msgstr ":class:`~django.db.models.ForeignKey`, :class:`~django.db.models.ManyToManyField` et :class:`~django.db.models.OneToOneField` exigent que le premier paramètre soit une classe de modèle, il est donc nécessaire d'utiliser le paramètre nommé :attr:`~Field.verbose_name`::"

# 63a237aa192b4b6a83cd570c3b822620
#: ../../topics/db/models.txt:270
msgid ""
"The convention is not to capitalize the first letter of the "
":attr:`~Field.verbose_name`. Django will automatically capitalize the first "
"letter where it needs to."
msgstr "La convention est de ne pas mettre en majuscule la première lettre de :attr:`~Field.verbose_name`. Django le fera automatiquement là où il pense que c'est nécessaire."

# b8f6b0a1b7c84ad284ddf0c13c850cdf
#: ../../topics/db/models.txt:275
msgid "Relationships"
msgstr "Relations"

# bf885fa483f34992b373e5b354541635
#: ../../topics/db/models.txt:277
msgid ""
"Clearly, the power of relational databases lies in relating tables to each "
"other. Django offers ways to define the three most common types of database "
"relationships: many-to-one, many-to-many and one-to-one."
msgstr "Clairement, la puissance des base de données relationnelles se trouve dans les liaisons entre entre tables. Django propose des méthodes pour définir les trois types de relations les plus courantes : plusieurs-à-un, plusieurs-à-plusieurs et un-à-un."

# e2b5136cc3fb4e1eb1de935548740a88
#: ../../topics/db/models.txt:284
msgid ""
"To define a many-to-one relationship, use "
":class:`django.db.models.ForeignKey`. You use it just like any other "
":class:`~django.db.models.Field` type: by including it as a class attribute "
"of your model."
msgstr "Pour définir une relation plusieurs-à-un, utilisez :class:`django.db.models.ForeignKey`. Son utilisation est pareille à celle des autres types de champs :class:`~django.db.models.Field` : il s'agit d'un attribut de classe d'un modèle."

# f7290da4765448faab85ca29b79e9a72
#: ../../topics/db/models.txt:288
msgid ""
":class:`~django.db.models.ForeignKey` requires a positional argument: the "
"class to which the model is related."
msgstr ":class:`~django.db.models.ForeignKey` exige un paramètre positionnel : la classe à laquelle le modèle est lié."

# 999c963c64f94b2182a8adf4d61bb752
#: ../../topics/db/models.txt:291
msgid ""
"For example, if a ``Car`` model has a ``Manufacturer`` -- that is, a "
"``Manufacturer`` makes multiple cars but each ``Car`` only has one "
"``Manufacturer`` -- use the following definitions::"
msgstr "Par exemple, si un modèle ``Car`` (voiture) possède un ``Manufacturer`` (fabriquant), c'est-à-dire qu'un ``Manufacturer`` produit plusieurs voitures mais chaque ``Car`` n'a qu'un seul ``Manufacturer``, voici le code correspondant ::"

# 61e9a243a2d649bfad92af0ddbd43c51
#: ../../topics/db/models.txt:305
msgid ""
"You can also create :ref:`recursive relationships <recursive-relationships>`"
" (an object with a many-to-one relationship to itself) and "
":ref:`relationships to models not yet defined <lazy-relationships>`; see "
":ref:`the model field reference <ref-foreignkey>` for details."
msgstr "Il est aussi possible de créer des :ref:`relations récursives <recursive-relationships>` (un objet avec une relation plusieurs-à-un avec lui-même) et des :ref:`relations vers des modèles non encore définis <lazy-relationships>` ; consultez la :ref:`référence des champs de modèle <ref-foreignkey>` pour plus de détails."

# 961cb9f120274a45ad1bcfa6a29dfa68
#: ../../topics/db/models.txt:310
msgid ""
"It's suggested, but not required, that the name of a "
":class:`~django.db.models.ForeignKey` field (``manufacturer`` in the example"
" above) be the name of the model, lowercase. You can, of course, call the "
"field whatever you want. For example::"
msgstr "Il est recommandé mais non obligatoire que le nom d'un champ :class:`~django.db.models.ForeignKey` (``manufacturer`` dans l'exemple ci-dessus) soit égal au nom du modèle en minuscules. Vous pouvez évidemment nommer le champ de la manière qui vous convient. Par exemple ::"

# 8c8a319a05854503a49e08c7209020da
#: ../../topics/db/models.txt:321
msgid ""
":class:`~django.db.models.ForeignKey` fields accept a number of extra "
"arguments which are explained in :ref:`the model field reference <foreign-"
"key-arguments>`. These options help define how the relationship should work;"
" all are optional."
msgstr "Les champs :class:`~django.db.models.ForeignKey` acceptent quelques paramètres supplémentaires qui sont présentés dans la :ref:`référence des champs de modèle <foreign-key-arguments>`. Ces options aident à spécifier le fonctionnement de la relation ; toutes sont facultatives."

# ac57e2d11d82418b8baa8e27d86d26bc
#: ../../topics/db/models.txt:326
msgid ""
"For details on accessing backwards-related objects, see the :ref:`Following "
"relationships backward example <backwards-related-objects>`."
msgstr "Pour plus de détails sur l'accès aux objets par référence liée inverse, consultez l':ref:`exemple de l'accès aux relations inverses <backwards-related-objects>`."

# 84b5f43628084ffc97cb572a4e78e37c
#: ../../topics/db/models.txt:329
msgid ""
"For sample code, see the :doc:`Many-to-one relationship model example "
"</topics/db/examples/many_to_one>`."
msgstr "Pour des exemples de code, consultez les :doc:`exemples de relations plusieurs-à-un entre modèles </topics/db/examples/many_to_one>`."

# 21d2595e174c4d3fbc993f6f829e28a2
#: ../../topics/db/models.txt:336
msgid ""
"To define a many-to-many relationship, use "
":class:`~django.db.models.ManyToManyField`. You use it just like any other "
":class:`~django.db.models.Field` type: by including it as a class attribute "
"of your model."
msgstr "Pour définir une relation plusieurs-à-plusieurs, utilisez :class:`django.db.models.ManyToManyField`. Son utilisation est pareille à celle des autres types de champs :class:`~django.db.models.Field` : il s'agit d'un attribut de classe d'un modèle."

# 657fea2f99c14931bdf437c517af7978
#: ../../topics/db/models.txt:341
msgid ""
":class:`~django.db.models.ManyToManyField` requires a positional argument: "
"the class to which the model is related."
msgstr ":class:`~django.db.models.ManyToManyField` exige un paramètre positionnel : la classe à laquelle le modèle est lié."

# e9d4cc5405c345138add92fc3f1e3a2a
#: ../../topics/db/models.txt:344
msgid ""
"For example, if a ``Pizza`` has multiple ``Topping`` objects -- that is, a "
"``Topping`` can be on multiple pizzas and each ``Pizza`` has multiple "
"toppings -- here's how you'd represent that::"
msgstr "Par exemple, si une ``Pizza`` possède plusieurs objets ``Topping`` (garniture), c'est-à-dire qu'un ``Topping`` peut se trouver sur plusieurs pizzas et chaque ``Pizza`` possède plusieurs garnitures, voici comment ce cas de figure serait représenté ::"

# 6e448198fbb54aceb16544b0f44051e7
#: ../../topics/db/models.txt:358
msgid ""
"As with :class:`~django.db.models.ForeignKey`, you can also create "
":ref:`recursive relationships <recursive-relationships>` (an object with a "
"many-to-many relationship to itself) and :ref:`relationships to models not "
"yet defined <lazy-relationships>`; see :ref:`the model field reference <ref-"
"manytomany>` for details."
msgstr "Comme pour :class:`~django.db.models.ForeignKey`, il est aussi possible de créer des :ref:`relations récursives <recursive-relationships>` (un objet avec une relation plusieurs-à-plusieurs avec lui-même) et des :ref:`relations vers des modèles non encore définis <lazy-relationships>` ; consultez la :ref:`référence des champs de modèle <ref-manytomany>` pour plus de détails."

# 7a90a181d83c42b0a8b54a1d27453b83
#: ../../topics/db/models.txt:364
msgid ""
"It's suggested, but not required, that the name of a "
":class:`~django.db.models.ManyToManyField` (``toppings`` in the example "
"above) be a plural describing the set of related model objects."
msgstr "Il est recommandé mais non obligatoire que le nom d'un champ :class:`~django.db.models.ManyToManyField` (``toppings`` dans l'exemple ci-dessus) soit un pluriel décrivant l'ensemble des objets modèles liés."

# 62bb406c068840eb90b100c002f8d0b2
#: ../../topics/db/models.txt:368
msgid ""
"It doesn't matter which model has the "
":class:`~django.db.models.ManyToManyField`, but you should only put it in "
"one of the models -- not both."
msgstr "Que le champ :class:`~django.db.models.ManyToManyField` soit placé sur un modèle ou l'autre ne change pas grand chose, mais il est essentiel de ne le mettre que dans un des modèles, pas dans les deux."

# 75162314a28e495d81f8219a71b1e84e
#: ../../topics/db/models.txt:372
msgid ""
"Generally, :class:`~django.db.models.ManyToManyField` instances should go in"
" the object that's going to be edited on a form. In the above example, "
"``toppings`` is in ``Pizza`` (rather than ``Topping`` having a ``pizzas`` "
":class:`~django.db.models.ManyToManyField` ) because it's more natural to "
"think about a pizza having toppings than a topping being on multiple pizzas."
" The way it's set up above, the ``Pizza`` form would let users select the "
"toppings."
msgstr "Généralement, les instances :class:`~django.db.models.ManyToManyField` devraient être placées dans l'objet qui va être modifié par un formulaire. Dans l'exemple ci-dessus, les `toppings`` sont dans ``Pizza`` (plutôt que ce soit ``Topping`` qui possède un champ :class:`~django.db.models.ManyToManyField` de ``pizzas`` ) parce qu'il est plus logique d'imaginer une pizza ayant plusieurs garnitures que d'une garniture se trouvant dans plusieurs pizzas. De la manière dont les choses ont été définies ci-dessus, le formulaire ``Pizza`` permettra de choisir des garnitures."

# dff1e5be30014048b20e4fc9cdd49cb3
#: ../../topics/db/models.txt:381
msgid ""
"See the :doc:`Many-to-many relationship model example "
"</topics/db/examples/many_to_many>` for a full example."
msgstr "Consultez les :doc:`exemples de relations plusieurs-à-plusieurs entre modèles </topics/db/examples/many_to_many>` pour voir un exemple complet."

# bb0775c8573e42349db31a253da8fd79
#: ../../topics/db/models.txt:384
msgid ""
":class:`~django.db.models.ManyToManyField` fields also accept a number of "
"extra arguments which are explained in :ref:`the model field reference "
"<manytomany-arguments>`. These options help define how the relationship "
"should work; all are optional."
msgstr "Les champs :class:`~django.db.models.ManyToManyField` acceptent aussi quelques paramètres supplémentaires qui sont présentés dans la :ref:`référence des champs de modèle <manytomany-arguments>`. Ces options aident à spécifier le fonctionnement de la relation ; toutes sont facultatives."

# f149eed1b3494057a05f37d99f212d8e
#: ../../topics/db/models.txt:392
msgid "Extra fields on many-to-many relationships"
msgstr "Champs supplémentaires dans les relations plusieurs-à-plusieurs"

# dab4627cfbf54a658d9a06240f5138a4
#: ../../topics/db/models.txt:394
msgid ""
"When you're only dealing with simple many-to-many relationships such as "
"mixing and matching pizzas and toppings, a standard "
":class:`~django.db.models.ManyToManyField` is all you need. However, "
"sometimes you may need to associate data with the relationship between two "
"models."
msgstr "Lorsque vous devez gérer des relations plusieurs-à-plusieurs simples comme le mélange et la combinaison de pizzas et de garnitures, un :class:`~django.db.models.ManyToManyField` standard suffit. Cependant, il est parfois nécessaire d'associer des données à la relation entre deux modèles."

# 6a45d4f4c20f4346b4580d5700326e9d
#: ../../topics/db/models.txt:399
msgid ""
"For example, consider the case of an application tracking the musical groups"
" which musicians belong to. There is a many-to-many relationship between a "
"person and the groups of which they are a member, so you could use a "
":class:`~django.db.models.ManyToManyField` to represent this relationship. "
"However, there is a lot of detail about the membership that you might want "
"to collect, such as the date at which the person joined the group."
msgstr "Par exemple, considérez le cas d'une application faisant le lien entre des musiciens et les groupes musicaux auxquels ils appartiennent. Une relation plusieurs-à-plusieurs existe entre une personne et les groupes dont elle est membre, il est donc possible d'utiliser un champ :class:`~django.db.models.ManyToManyField` pour représenter cette relation. Cependant, il y a de nombreux détails au sujet de l'appartenance au groupe qu'il peut être intéressant de conserver, comme par exemple la date à laquelle la personne à rejoint le groupe."

# 21531bc5ea5a410e98f7d67ddbaf1d3a
#: ../../topics/db/models.txt:406
msgid ""
"For these situations, Django allows you to specify the model that will be "
"used to govern the many-to-many relationship. You can then put extra fields "
"on the intermediate model. The intermediate model is associated with the "
":class:`~django.db.models.ManyToManyField` using the :attr:`through "
"<ManyToManyField.through>` argument to point to the model that will act as "
"an intermediary. For our musician example, the code would look something "
"like this::"
msgstr "Pour ces situations, Django permet d'indiquer le modèle qui sera utilisé pour spécifier la relation plusieurs-à-plusieurs. Il est alors possible de définir des champs supplémentaires dans le modèle intermédiaire. Ce dernier est associé au champ :class:`~django.db.models.ManyToManyField` en utilisant le paramètre :attr:`through <ManyToManyField.through>` qui va pointer vers le modèle agissant comme intermédiaire. Dans notre exemple de musique, le code pourrait ressembler à ceci ::"

# 950168f769dc4bbfaa774535b4b9e85b
#: ../../topics/db/models.txt:437
msgid ""
"When you set up the intermediary model, you explicitly specify foreign keys "
"to the models that are involved in the ManyToMany relation. This explicit "
"declaration defines how the two models are related."
msgstr "Lorsque vous définissez le modèle intermédiaire, vous indiquez explicitement les clés étrangères vers les modèles impliqués dans la relation plusieurs-à-plusieurs. Cette déclaration explicite définit comment sont reliés les deux modèles."

# e26b6283d1334c0d80fbaa5db98132b1
#: ../../topics/db/models.txt:441
msgid "There are a few restrictions on the intermediate model:"
msgstr "Il y a quelques restrictions concernant le modèle intermédiaire :"

# 68d4066a5f2041cfaab091bb77071c47
#: ../../topics/db/models.txt:443
msgid ""
"Your intermediate model must contain one - and *only* one - foreign key to "
"the target model (this would be ``Person`` in our example). If you have more"
" than one foreign key, a validation error will be raised."
msgstr "Le modèle intermédiaire doit contenir une et une seule clé étrangère vers le modèle cible (ce qui serait ``Person`` dans notre exemple). S'il y a plus d'une clé étrangère, une erreur de validation sera émise."

# 3553567702d04e33b13491e542ceb070
#: ../../topics/db/models.txt:447
msgid ""
"Your intermediate model must contain one - and *only* one - foreign key to "
"the source model (this would be ``Group`` in our example). If you have more "
"than one foreign key, a validation error will be raised."
msgstr "Le modèle intermédiaire doit contenir une et une seule clé étrangère vers le modèle source (qui serait ``Group`` dans notre exemple). S'il y a plus d'une clé étrangère, une erreur de validation sera émise."

# 8a886faac6c94e0baad28b4a82580bb6
#: ../../topics/db/models.txt:451
msgid ""
"The only exception to this is a model which has a many-to-many relationship "
"to itself, through an intermediary model. In this case, two foreign keys to "
"the same model are permitted, but they will be treated as the two "
"(different) sides of the many-to-many relation."
msgstr "La seule exception admise est  un modèle ayant une relation plusieurs-à-plusieurs avec lui-même au travers dûn modèle intermédiaire. Dans ce cas, deux clés étrangères vers le même modèle sont autorisées, mais elles seront considérées comme les deux (différentes) parties de la relation plusieurs-à-plusieurs."

# cfe0a4be7edc4f0ba1a02d6a4b6a35bc
#: ../../topics/db/models.txt:457
msgid ""
"When defining a many-to-many relationship from a model to itself, using an "
"intermediary model, you *must* use :attr:`symmetrical=False "
"<ManyToManyField.symmetrical>` (see :ref:`the model field reference "
"<manytomany-arguments>`)."
msgstr "Lors de la définition d'une relation plusieurs-à-plusieurs d'un modèle vers lui-même au travers d'un modèle intermédiaire, vous *devez* employer le paramètre :attr:`symmetrical=False <ManyToManyField.symmetrical>` (voir la :ref:`référence des champs de modèle <manytomany-arguments>`)."

# 8d40c00543044f67a97a8b95cf343e9f
#: ../../topics/db/models.txt:462
msgid ""
"Now that you have set up your :class:`~django.db.models.ManyToManyField` to "
"use your intermediary model (``Membership``, in this case), you're ready to "
"start creating some many-to-many relationships. You do this by creating "
"instances of the intermediate model::"
msgstr "Après avoir configuré le champ :class:`~django.db.models.ManyToManyField` afin qu'il utilise le modèle intermédiaire (``Membership``, dans ce cas), tout est prêt pour commencer à créer des relations plusieurs-à-plusieurs. Cela s'effectue en créant des instances du modèle intermédiaire ::"

# b1d925a0890b4437b559ce07f04e851b
#: ../../topics/db/models.txt:484
msgid ""
"Unlike normal many-to-many fields, you *can't* use ``add``, ``create``, or "
"assignment (i.e., ``beatles.members = [...]``) to create relationships::"
msgstr "Au contraire des champs plusieurs-à-plusieurs normaux, il n'est *pas* possible d'utiliser ``add``, ``create`` ou l'attribution (par ex. ``beatles.members = [...]``) pour créer des relations ::"

# 276bc5134b9a4bde80ab04e91510fc4e
#: ../../topics/db/models.txt:494
msgid ""
"Why? You can't just create a relationship between a ``Person`` and a "
"``Group`` - you need to specify all the detail for the relationship required"
" by the ``Membership`` model. The simple ``add``, ``create`` and assignment "
"calls don't provide a way to specify this extra detail. As a result, they "
"are disabled for many-to-many relationships that use an intermediate model. "
"The only way to create this type of relationship is to create instances of "
"the intermediate model."
msgstr "Pourquoi ? Il n'est pas possible de simplement créer une relation entre une ``Person`` et un ``Group``, car il est nécessaire d'indiquer tous les détails de la relation imposés par le modèle ``Membership``. Les appels simples ``add``, ``create`` ainsi que l'attribution ne permettent pas d'indiquer les détails supplémentaires. En conséquence, ils sont désactivés pour les relations plusieurs-à-plusieurs qui utilisent un modèle intermédiaire. La seule manière de créer ce type de relation est de créer des instances du modèle intermédiaire."

# 2a69b3669bea4e13b50d4ff8d9a6e278
#: ../../topics/db/models.txt:502
msgid ""
"The :meth:`~django.db.models.fields.related.RelatedManager.remove` method is"
" disabled for similar reasons. However, the "
":meth:`~django.db.models.fields.related.RelatedManager.clear` method can be "
"used to remove all many-to-many relationships for an instance::"
msgstr "La méthode :meth:`~django.db.models.fields.related.RelatedManager.remove` est désactivée pour les mêmes raisons. Toutefois, la méthode :meth:`~django.db.models.fields.related.RelatedManager.clear` peut être utilisée pour enlever toutes les relations plusieurs-à-plusieurs d'une instance ::"

# b9099433c56c4bd48d52889dbb32266f
#: ../../topics/db/models.txt:510
msgid ""
"Once you have established the many-to-many relationships by creating "
"instances of your intermediate model, you can issue queries. Just as with "
"normal many-to-many relationships, you can query using the attributes of the"
" many-to-many-related model::"
msgstr "Après avoir établi des relations plusieurs-à-plusieurs en créant des instances du modèle intermédiaire, il est possible d'effectuer des requêtes. Comme pour une relation plusieurs-à-plusieurs normale, les requêtes peuvent utiliser les attributs du modèle lié à la relation plusieurs-à-plusieurs ::"

# 903710f833244c41aac4493d4b3ae8f4
#: ../../topics/db/models.txt:519
msgid ""
"As you are using an intermediate model, you can also query on its "
"attributes::"
msgstr "Comme vous utilisez un modèle intermédiaire, la requête peut aussi exploiter ses attributs ::"

# a79b7e1ac31240ff9b8fc6437d7513f5
#: ../../topics/db/models.txt:527
msgid ""
"If you need to access a membership's information you may do so by directly "
"querying the ``Membership`` model::"
msgstr "Si vous avez besoin d'accéder aux informations d'appartenance au groupe, c'est possible de le faire en interrogeant directement le modèle ``Membership``::"

# 369a13ab0cd14c1ea37bac871fa6ea5b
#: ../../topics/db/models.txt:536
msgid ""
"Another way to access the same information is by querying the :ref:`many-to-"
"many reverse relationship<m2m-reverse-relationships>` from a ``Person`` "
"object::"
msgstr "Une autre façon d'accéder à la même information est d'interroger la :ref:`relation plusieurs-à-plusieurs inverse<m2m-reverse-relationships>` à partir d'un objet ``Person``::"

# 5ac03c7d432a4b7d9c238d449545305e
#: ../../topics/db/models.txt:550
msgid ""
"To define a one-to-one relationship, use "
":class:`~django.db.models.OneToOneField`. You use it just like any other "
"``Field`` type: by including it as a class attribute of your model."
msgstr "Pour définir une relation un-à-un, utilisez :class:`~django.db.models.OneToOneField`. Son utilisation est pareille à celle des autres types de champs ``Field``: il s'agit d'un attribut de classe d'un modèle."

# 7167bc57726b458aaad94e77050381e7
#: ../../topics/db/models.txt:554
msgid ""
"This is most useful on the primary key of an object when that object "
"\"extends\" another object in some way."
msgstr "Son utilisation principale concerne la clé primaire d'un objet lorsque cet objet « complète » un autre objet d'une certaine manière."

# c538471a8f724d94aa20c818219a9a64
#: ../../topics/db/models.txt:557
msgid ""
":class:`~django.db.models.OneToOneField` requires a positional argument: the"
" class to which the model is related."
msgstr ":class:`~django.db.models.OneToOneField` exige un paramètre positionnel : la classe à laquelle le modèle est lié."

# b20701e4a20d4e3fb24c8fddd3ed7a0d
#: ../../topics/db/models.txt:560
msgid ""
"For example, if you were building a database of \"places\", you would build "
"pretty standard stuff such as address, phone number, etc. in the database. "
"Then, if you wanted to build a database of restaurants on top of the places,"
" instead of repeating yourself and replicating those fields in the "
"``Restaurant`` model, you could make ``Restaurant`` have a "
":class:`~django.db.models.OneToOneField` to ``Place`` (because a restaurant "
"\"is a\" place; in fact, to handle this you'd typically use "
":ref:`inheritance <model-inheritance>`, which involves an implicit one-to-"
"one relation)."
msgstr "Par exemple, si vous construisiez une base de données d'« emplacements » (``Place`` dans l'exemple), il s'agirait de mettre en place des éléments assez standards comme l'adresse, le numéro de téléphone, etc. dans la base de données. Ensuite, si vous souhaitez construire une base de données de restaurants au-dessus de la base des emplacements, au lieu de vous répéter et de répliquer tous ces champs dans le modèle ``Restaurant``, il serait possible de concevoir ``Restaurant`` avec un champ :class:`~django.db.models.OneToOneField` vers ``Place`` (parce qu'un restaurant « est un » emplacement ; en fait, pour gérer cela, vous feriez probablement appel à de l':ref:`héritage <model-inheritance>`, ce qui implique une relation un-à-un implicite)."

# bb7842cb82854790a5cc5cd178fd9b90
#: ../../topics/db/models.txt:570
msgid ""
"As with :class:`~django.db.models.ForeignKey`, a :ref:`recursive "
"relationship <recursive-relationships>` can be defined and :ref:`references "
"to as-yet undefined models <lazy-relationships>` can be made; see :ref:`the "
"model field reference <ref-onetoone>` for details."
msgstr "Comme pour :class:`~django.db.models.ForeignKey`, il est aussi possible de créer des :ref:`relations récursives <recursive-relationships>` et des :ref:`relations vers des modèles non encore définis <lazy-relationships>` ; consultez la :ref:`référence des champs de modèle <ref-onetoone>` pour plus de détails."

# a49decc2cd65471a89e0db05ed090600
#: ../../topics/db/models.txt:578
msgid ""
"See the :doc:`One-to-one relationship model example "
"</topics/db/examples/one_to_one>` for a full example."
msgstr "Consultez les :doc:`exemples de relations un-à-un entre modèles </topics/db/examples/one_to_one>` pour voir un exemple complet."

# 90df71f431e741d8920a075fd21eae30
#: ../../topics/db/models.txt:581
msgid ""
":class:`~django.db.models.OneToOneField` fields also accept one specific, "
"optional ``parent_link`` argument described in the :ref:`model field "
"reference <ref-onetoone>`."
msgstr "Les champs :class:`~django.db.models.OneToOneField` acceptent aussi un paramètre ``parent_link`` facultatif décrit dans la :ref:`référence des champs de modèle <ref-onetoone>`."

# 57595c75fc3d4618b0edb4b384d47b5b
#: ../../topics/db/models.txt:585
msgid ""
":class:`~django.db.models.OneToOneField` classes used to automatically "
"become the primary key on a model. This is no longer true (although you can "
"manually pass in the :attr:`~django.db.models.Field.primary_key` argument if"
" you like). Thus, it's now possible to have multiple fields of type "
":class:`~django.db.models.OneToOneField` on a single model."
msgstr "Précédemment, les classes :class:`~django.db.models.OneToOneField` devenaient automatiquement la clé primaire d'un modèle. Cela n'est plus le cas (même si il est toujours possible de passer manuellement le paramètre :attr:`~django.db.models.Field.primary_key` si vous le voulez). Il est donc possible d'avoir plusieurs champs :class:`~django.db.models.OneToOneField` dans un seul modèle."

# a99007245aef4f05b0948063325ca6f7
#: ../../topics/db/models.txt:592
msgid "Models across files"
msgstr "Modèles dans plusieurs fichiers"

# 01609abd91774f55a3b46a2b916ee6f3
#: ../../topics/db/models.txt:594
msgid ""
"It's perfectly OK to relate a model to one from another app. To do this, "
"import the related model at the top of the file where your model is defined."
" Then, just refer to the other model class wherever needed. For example::"
msgstr "Il est parfaitement admis de lier un modèle à celui d'une autre application. Pour cela, importez le modèle à lier au sommet du fichier où votre modèle est défini. Puis, il suffit de faire référence à cette autre classe de modèle là où c'est nécessaire. Par exemple ::"

# e192c08dd7d14cc38ab8fe62eb931520
#: ../../topics/db/models.txt:606
msgid "Field name restrictions"
msgstr "Restrictions sur les noms de champs"

# fbd4b1b272db4469b949c8f9bed6001a
#: ../../topics/db/models.txt:608
msgid "Django places only two restrictions on model field names:"
msgstr "Django ne soumet les noms de champs de modèles qu'à deux restrictions :"

# 064c70845f9343218272cb160343e6c8
#: ../../topics/db/models.txt:610
msgid ""
"A field name cannot be a Python reserved word, because that would result in "
"a Python syntax error. For example::"
msgstr "Un nom de champ ne peut pas être un mot réservé de Python, car il en résulterait une erreur de syntaxe Python. Par exemple ::"

# 219798eb0ab54b42a1c65cebf474721b
#: ../../topics/db/models.txt:616
msgid ""
"A field name cannot contain more than one underscore in a row, due to the "
"way Django's query lookup syntax works. For example::"
msgstr "Un nom de champ ne peut pas contenir deux soulignements suivis, en raison du fonctionnement de la syntaxe Django pour les requêtes. Par exemple ::"

# 2e8da8997c254e1394e2da9fd7f72847
#: ../../topics/db/models.txt:622
msgid ""
"These limitations can be worked around, though, because your field name "
"doesn't necessarily have to match your database column name. See the "
":attr:`~Field.db_column` option."
msgstr "Ces limites peuvent être contournées, car le nom de champ n'est pas nécessairement égal au nom de la colonne de base de données. Voir l'option :attr:`~Field.db_column`."

# 4132392315b844a88888099974ec3977
#: ../../topics/db/models.txt:626
msgid ""
"SQL reserved words, such as ``join``, ``where`` or ``select``, *are* allowed"
" as model field names, because Django escapes all database table names and "
"column names in every underlying SQL query. It uses the quoting syntax of "
"your particular database engine."
msgstr "Les mots réservés SQL, comme ``join``, ``where`` ou ``select`` *sont* autorisés comme noms de champs de modèle, car Django échappe tous les noms de tables ou de colonnes de base de données dans toutes les requêtes SQL sous-jacentes. Il utilise la syntaxe de guillemets propre au moteur de base de données utilisé."

# f9e8f1ccf05443f9b469bba619ebe2c1
#: ../../topics/db/models.txt:632
msgid "Custom field types"
msgstr "Types de champs personnalisés"

# 539fd12395294ef386fcfd4a3981c669
#: ../../topics/db/models.txt:634
msgid ""
"If one of the existing model fields cannot be used to fit your purposes, or "
"if you wish to take advantage of some less common database column types, you"
" can create your own field class. Full coverage of creating your own fields "
"is provided in :doc:`/howto/custom-model-fields`."
msgstr "Si aucun des champs de modèle existants ne convient à vos besoins, ou si vous souhaitez tirer profit d'un type de colonne de base de données plus spécialisé, vous pouvez créer votre propre classe de champ. Une documentation complète sur la création de champs personnalisés se trouve dans :doc:`/howto/custom-model-fields`."

# 9006673adf2343ba98c02fd5bec1ec98
#: ../../topics/db/models.txt:642
msgid "Meta options"
msgstr "Options de Meta"

# 46323a1a9dd94d539e1b195c5b1fb2ef
#: ../../topics/db/models.txt:644
msgid "Give your model metadata by using an inner ``class Meta``, like so::"
msgstr "Vous pouvez attribuer des métadonnées à votre modèle en utilisant une classe `` Meta`` imbriquée, comme ceci ::"

# 27984f503248480383b0e9f4553c429f
#: ../../topics/db/models.txt:655
msgid ""
"Model metadata is \"anything that's not a field\", such as ordering options "
"(:attr:`~Options.ordering`), database table name "
"(:attr:`~Options.db_table`), or human-readable singular and plural names "
"(:attr:`~Options.verbose_name` and :attr:`~Options.verbose_name_plural`). "
"None are required, and adding ``class Meta`` to a model is completely "
"optional."
msgstr "Les métadonnées de modèles sont « tout ce qui n'est pas un champ », comme les options de tri (:attr:`~Options.ordering`), le nom de la table de base de données (:attr:`~Options.db_table`) ou des noms verbeux singulier et pluriel (:attr:`~Options.verbose_name` et :attr:`~Options.verbose_name_plural`). Aucune n'est obligatoire et la présence de ``class Meta`` dans un modèle est entièrement facultative."

# a2799458ab2f4da1a69076832874a6b8
#: ../../topics/db/models.txt:661
msgid ""
"A complete list of all possible ``Meta`` options can be found in the "
":doc:`model option reference </ref/models/options>`."
msgstr "Une liste complète de toutes les options ``Meta`` possibles se trouve dans la :doc:`référence des options de modèle </ref/models/options>`."

# 653f8f0b03024a53b9977b4aea640d2d
#: ../../topics/db/models.txt:667
msgid "Model methods"
msgstr "Méthodes des modèles"

# 5ac924936a61435eb7e2d8b44fd13b33
#: ../../topics/db/models.txt:669
msgid ""
"Define custom methods on a model to add custom \"row-level\" functionality "
"to your objects. Whereas :class:`~django.db.models.Manager` methods are "
"intended to do \"table-wide\" things, model methods should act on a "
"particular model instance."
msgstr "Pour ajouter des fonctionnalités de « niveau ligne » à vos objets, définissez des méthodes personnalisées dans le modèle. Alors que les méthodes de :class:`~django.db.models.Manager` sont prévues pour agir au niveau des tables, les méthodes de modèles agissent plutôt sur une instance particulière d'un modèle."

# 252e9465a5f145a88a8f744c880bb09c
#: ../../topics/db/models.txt:673
msgid ""
"This is a valuable technique for keeping business logic in one place -- the "
"model."
msgstr "C'est une technique importante pour conserver la logique métier à un seul endroit, le modèle."

# f48ff593b1104a469c29a948f153058c
#: ../../topics/db/models.txt:676
msgid "For example, this model has a few custom methods::"
msgstr "Par exemple, ce modèle possède quelques méthodes personnalisées ::"

# ce0b7f0922e848eabfd4610a338a4047
#: ../../topics/db/models.txt:707
msgid "The last method in this example is a :term:`property`."
msgstr "La dernière méthode de cet exemple est une :term:`propriété`."

# ddd36e3b96714347bc75a0489da9835b
#: ../../topics/db/models.txt:709
msgid ""
"The :doc:`model instance reference </ref/models/instances>` has a complete "
"list of :ref:`methods automatically given to each model <model-instance-"
"methods>`. You can override most of these -- see `overriding predefined "
"model methods`_, below -- but there are a couple that you'll almost always "
"want to define:"
msgstr "La :doc:`référence des instances de modèles </ref/models/instances>` présente une liste complète des :ref:`méthodes automatiquement héritées par chaque modèle <model-instance-methods>`. Vous pouvez surcharger la plupart d'entre elles, voir `surcharge des méthodes de modèles prédéfinies`_ ci-dessous, mais certaines seront presque toujours définies dans vos modèles :"

# 174db3a78d234207b4389ddb73935464
#: ../../topics/db/models.txt:715
msgid ":meth:`~Model.__str__` (Python 3)"
msgstr ""

# abf3eff408d6488a984aad55b32db76b
#: ../../topics/db/models.txt:715
msgid "Python 3 equivalent of ``__unicode__()``."
msgstr ""

# 3ef0a119e8c84528bcabb7b476684171
#: ../../topics/db/models.txt:725
msgid ":meth:`~Model.__unicode__` (Python 2)"
msgstr ""

# d3ea41c2726f419588068d80c8450443
#: ../../topics/db/models.txt:718
msgid ""
"A Python \"magic method\" that returns a unicode \"representation\" of any "
"object. This is what Python and Django will use whenever a model instance "
"needs to be coerced and displayed as a plain string. Most notably, this "
"happens when you display an object in an interactive console or in the "
"admin."
msgstr "Une « méthode magique » de Python qui renvoie une « représentation » unicode d'un objet. C'est ce que Python et Django utilisent chaque fois qu'une instance de modèle doit être transformée en une simple chaîne en vue d'être affichée. C'est par exemple le cas lorsqu'un objet doit être affiché dans une console interactive ou dans l'interface d'administration."

# 10b7e0d0e9c1471fb047c84dfc8d56f2
#: ../../topics/db/models.txt:724
msgid ""
"You'll always want to define this method; the default isn't very helpful at "
"all."
msgstr "Cette méthode devrait toujours être définie ; la valeur par défaut n'est vraiment pas très utile."

# 280f09830322460f85faf32e0cbddd16
#: ../../topics/db/models.txt:733
msgid ":meth:`~Model.get_absolute_url`"
msgstr ":meth:`~Model.get_absolute_url`"

# 484c1b1f92f8472d8ac8b8be6652e7e0
#: ../../topics/db/models.txt:728
msgid ""
"This tells Django how to calculate the URL for an object. Django uses this "
"in its admin interface, and any time it needs to figure out a URL for an "
"object."
msgstr "Cette méthode indique à Django comment produire l'URL d'un objet. Django l'utilise dans son interface d'administration ainsi qu'à chaque fois qu'il a besoin de connaître l'URL d'un objet."

# 27c26fe81f4b4ab8aff86dee33366113
#: ../../topics/db/models.txt:732
msgid ""
"Any object that has a URL that uniquely identifies it should define this "
"method."
msgstr "Chaque objet possédant un URL permettant de l'identifier de manière unique devrait définir cette méthode."

# 3637be7320ee438d893a511ce10fe630
#: ../../topics/db/models.txt:738
msgid "Overriding predefined model methods"
msgstr "Surcharge des méthodes de modèles prédéfinies"

# 776321e27c904f0689ccbadd9cc37afc
#: ../../topics/db/models.txt:740
msgid ""
"There's another set of :ref:`model methods <model-instance-methods>` that "
"encapsulate a bunch of database behavior that you'll want to customize. In "
"particular you'll often want to change the way :meth:`~Model.save` and "
":meth:`~Model.delete` work."
msgstr "Un autre groupe de :ref:`méthodes de modèles <model-instance-methods>` recouvrent un ensemble de comportements liés à la base de données et sont susceptibles d'être personnalisées. En particulier, il est assez fréquent de vouloir modifier le fonctionnement de :meth:`~Model.save` et de :meth:`~Model.delete`."

# 56ed9a45d88d47da88f46608f80aeab7
#: ../../topics/db/models.txt:745
msgid ""
"You're free to override these methods (and any other model method) to alter "
"behavior."
msgstr "Vous êtes libre de surcharger ces méthodes (et toute autre méthode de modèle) pour modifier leur comportement."

# bbaa074f191e4aa98e92afe78bc8c16b
#: ../../topics/db/models.txt:748
msgid ""
"A classic use-case for overriding the built-in methods is if you want "
"something to happen whenever you save an object. For example (see "
":meth:`~Model.save` for documentation of the parameters it accepts)::"
msgstr "Un cas d'utilisation classique de surcharge des méthodes intégrées est lorsque vous souhaitez effectuer une action lors de l'enregistrement d'un objet. Par exemple (voir :meth:`~Model.save` pour de la documentation sur les paramètres acceptés) ::"

# 9c862677b0be4d01a4c10ffd2e313bdc
#: ../../topics/db/models.txt:763
msgid "You can also prevent saving::"
msgstr "Vous pouvez aussi empêcher l'enregistrement ::"

# 571c0ae2b7c54797922fc1917462e28e
#: ../../topics/db/models.txt:777
msgid ""
"It's important to remember to call the superclass method -- that's that "
"``super(Blog, self).save(*args, **kwargs)`` business -- to ensure that the "
"object still gets saved into the database. If you forget to call the "
"superclass method, the default behavior won't happen and the database won't "
"get touched."
msgstr "Il est important de ne pas oublier d'appeler la méthode de la classe parente (c'est l'affaire de ``super(Blog, self).save(*args, **kwargs)``) pour s'assurer que l'objet soit bien enregistré dans la base de données. Si vous omettez d'appeler la méthode parente, le comportement par défaut n'est pas appliqué et la base de données ne sera pas affectée."

# 2797c9c6eb1d4ec2ac0e13f91d3d6d26
#: ../../topics/db/models.txt:783
msgid ""
"It's also important that you pass through the arguments that can be passed "
"to the model method -- that's what the ``*args, **kwargs`` bit does. Django "
"will, from time to time, extend the capabilities of built-in model methods, "
"adding new arguments. If you use ``*args, **kwargs`` in your method "
"definitions, you are guaranteed that your code will automatically support "
"those arguments when they are added."
msgstr "Il est aussi important de transmettre les paramètres qui peuvent être acceptés par la méthode du modèle, c'est le rôle de ``*args, **kwargs``. De temps à autre, Django étend les possibilités des méthodes de modèles intégrées en ajoutant de nouveaux paramètres. Si vous utilisez ``*args, **kwargs`` dans vos définitions de méthodes, vous êtes certain que votre code gérera automatiquement ces paramètres quand ils seront ajoutés."

# f7620312c49d434691b84a3ee58d7f0b
#: ../../topics/db/models.txt:790
msgid "Overridden model methods are not called on bulk operations"
msgstr ""

# 824af439f2994d4ab2cefc8197b8c98b
#: ../../topics/db/models.txt:792
msgid ""
"Note that the :meth:`~Model.delete()` method for an object is not "
"necessarily called when :ref:`deleting objects in bulk using a QuerySet"
"<topics-db-queries-delete>`. To ensure customized delete logic gets "
"executed, you can use :data:`~django.db.models.signals.pre_delete` and/or "
":data:`~django.db.models.signals.post_delete` signals."
msgstr "Notez que la méthode :meth:`~Model.delete()` d'un objet n'est pas nécessairement appelée lorsque les :ref:`objets sont supprimés en vrac en utilisant un QuerySet<topics-db-queries-delete>`. Pour être certain que la logique de suppression personnalisée soit exécutée, vous pouvez utiliser les signaux :data:`~django.db.models.signals.pre_delete` ou :data:`~django.db.models.signals.post_delete`."

# dd6738d3f8444943ab3b82c130e73be6
#: ../../topics/db/models.txt:798
msgid ""
"Unfortunately, there isn't a workaround when "
":meth:`creating<django.db.models.query.QuerySet.bulk_create>` or "
":meth:`updating<django.db.models.query.QuerySet.update>` objects in bulk, "
"since none of :meth:`~Model.save()`, "
":data:`~django.db.models.signals.pre_save`, and "
":data:`~django.db.models.signals.post_save` are called."
msgstr "Malheureusement, il n'y a pas de solution possible lors de la :meth:`création<django.db.models.query.QuerySet.bulk_create>` ou de la :meth:`mise à jour<django.db.models.query.QuerySet.update>` d'objets en vrac, puisque ni :meth:`~Model.save()`, ni :data:`~django.db.models.signals.pre_save`, ni :data:`~django.db.models.signals.post_save` ne sont appelés."

# b8a9a644afd74b329af35a4625f2a28a
#: ../../topics/db/models.txt:806
msgid "Executing custom SQL"
msgstr "Exécution de SQL personnalisé"

# 846f6ea8b0554165a6b8e08adf153c24
#: ../../topics/db/models.txt:808
msgid ""
"Another common pattern is writing custom SQL statements in model methods and"
" module-level methods. For more details on using raw SQL, see the "
"documentation on :doc:`using raw SQL</topics/db/sql>`."
msgstr "Un autre usage assez fréquent est d'écrire des commandes SQL personnalisées dans les méthodes de modèles et les méthodes au niveau module. Pour plus de détails sur l'utilisation de SQL brut, consultez la documentation sur l':doc:`utilisation de SQL brut</topics/db/sql>`."

# bff1bfb0e4174a54b201760f5e353969
#: ../../topics/db/models.txt:815
msgid "Model inheritance"
msgstr "Héritage de modèle"

# a733482af6b143f5b69615b13e04fc85
#: ../../topics/db/models.txt:817
msgid ""
"Model inheritance in Django works almost identically to the way normal class"
" inheritance works in Python. The only decision you have to make is whether "
"you want the parent models to be models in their own right (with their own "
"database tables), or if the parents are just holders of common information "
"that will only be visible through the child models."
msgstr "Dans Django, l'héritage de modèle fonctionne de manière presque identique à l'héritage des classes tel qu'il se pratique en Python. La seule décision qui vous revient est de savoir si vous voulez que les modèles parents soient des modèles à part entière (avec leur propre table de base de données) ou si les parents ne sont que des conteneurs d'informations partagées qui ne seront visibles qu'au travers de leurs modèles enfants."

# 9823751063f143339d5a6ce418e3f933
#: ../../topics/db/models.txt:824
msgid "There are three styles of inheritance that are possible in Django."
msgstr "Il existe trois types d'héritage possibles avec Django."

# 85164efae9ac4d5b98c20ee6fa7a9952
#: ../../topics/db/models.txt:826
msgid ""
"Often, you will just want to use the parent class to hold information that "
"you don't want to have to type out for each child model. This class isn't "
"going to ever be used in isolation, so :ref:`abstract-base-classes` are what"
" you're after."
msgstr "Souvent, vous voulez simplement que la classe parente contienne des informations que vous ne souhaitez pas ressaisir dans chaque modèle enfant. Cette classe ne sera jamais utilisée pour elle-même, il s'agit donc de :ref:`abstract-base-classes`."

# b5f843ff21d84e1793d1e888b4e586b6
#: ../../topics/db/models.txt:830
msgid ""
"If you're subclassing an existing model (perhaps something from another "
"application entirely) and want each model to have its own database table, "
":ref:`multi-table-inheritance` is the way to go."
msgstr "Si vous héritez d'un modèle existant (provenant peut-être d'une toute autre application) et que vous souhaitez que chaque modèle dispose de sa propre table de base de données, il s'agit de :ref:`multi-table-inheritance`."

# 98717644defc446c9e12195f7394d0bd
#: ../../topics/db/models.txt:833
msgid ""
"Finally, if you only want to modify the Python-level behavior of a model, "
"without changing the models fields in any way, you can use :ref:`proxy-"
"models`."
msgstr "Finalement, si vous souhaitez uniquement modifier le comportement d'un modèle dans son code Python sans toucher aux champs de modèle, il s'agit de :ref:`proxy-models`."

# f9398babea6343bba7313539fa313f33
#: ../../topics/db/models.txt:840
msgid "Abstract base classes"
msgstr "Classes de base abstraites"

# db3b072f57f54c20a5c9afb44bc6fa7e
#: ../../topics/db/models.txt:842
msgid ""
"Abstract base classes are useful when you want to put some common "
"information into a number of other models. You write your base class and put"
" ``abstract=True`` in the :ref:`Meta <meta-options>` class. This model will "
"then not be used to create any database table. Instead, when it is used as a"
" base class for other models, its fields will be added to those of the child"
" class. It is an error to have fields in the abstract base class with the "
"same name as those in the child (and Django will raise an exception)."
msgstr "Les classes de base abstraites sont utiles lorsque vous souhaitez regrouper certaines informations communes à un ensemble de modèles. Vous rédigez la classe de base et indiquez ``abstract=True`` dans sa classe :ref:`Meta <meta-options>`. Aucune table de base de données ne sera créée pour ce modèle. Par contre, lorsqu'elle sera utilisée comme classe de base pour d'autres modèles, ses champs seront ajoutés à ceux de la classe enfant. Il est considéré comme une erreur que d'avoir des champs de la classe de base abstraite ayant le même nom que ceux de la classe enfant (et Django lèvera une exception)."

# 70548398aafb4b5e8ed13dedeaa32924
# 8a55912f9582461a84f700d74b761c84
#: ../../topics/db/models.txt:851 ../../topics/i18n/translation.txt:640
msgid "An example::"
msgstr "Un exemple ::"

# 7c07d08c7a8343aeb0eba3d46e362ca0
#: ../../topics/db/models.txt:865
msgid ""
"The ``Student`` model will have three fields: ``name``, ``age`` and "
"``home_group``. The ``CommonInfo`` model cannot be used as a normal Django "
"model, since it is an abstract base class. It does not generate a database "
"table or have a manager, and cannot be instantiated or saved directly."
msgstr "Le modèle ``Student`` aura trois champs : ``name``, ``age`` et ``home_group``. Le modèle ``CommonInfo`` ne peut pas être utilisé comme un modèle Django normal, car c'est une classe de base abstraite. Ce modèle ne génère pas de table de base de données et ne possède pas de gestionnaire ; il ne peut pas être instancié ni enregistré directement."

# 7d41fd14577e460292c52bf28d7f8e71
#: ../../topics/db/models.txt:870
msgid ""
"For many uses, this type of model inheritance will be exactly what you want."
" It provides a way to factor out common information at the Python level, "
"whilst still only creating one database table per child model at the "
"database level."
msgstr "Dans beaucoup de situations, c'est ce type d'héritage de modèle qui convient. Il offre la possibilité de regrouper les informations communes au niveau Python, tout en ne créant qu'une table de base de données par modèle enfant."

# 38e43212fc114d1d9ec6bad103921712
#: ../../topics/db/models.txt:875
msgid "``Meta`` inheritance"
msgstr "Héritage de ``Meta``"

# 7bec654a62e2487db1f514e1f6a1ebfc
#: ../../topics/db/models.txt:877
msgid ""
"When an abstract base class is created, Django makes any :ref:`Meta <meta-"
"options>` inner class you declared in the base class available as an "
"attribute. If a child class does not declare its own :ref:`Meta <meta-"
"options>` class, it will inherit the parent's :ref:`Meta <meta-options>`. If"
" the child wants to extend the parent's :ref:`Meta <meta-options>` class, it"
" can subclass it. For example::"
msgstr "Lorsqu'une classe de base abstraite est créée, Django rend disponible toute classe imbriquée :ref:`Meta <meta-options>` comme attribut. Si une classe enfant ne déclare pas sa propre classe :ref:`Meta <meta-options>`, elle hérite de la classe :ref:`Meta <meta-options>` de son parent. Si la classe enfant souhaite étendre la classe :ref:`Meta <meta-options>` du parent, elle peut en hériter. Par exemple ::"

# 80d0d9ebf5fe40d29511606dd2577bad
#: ../../topics/db/models.txt:896
msgid ""
"Django does make one adjustment to the :ref:`Meta <meta-options>` class of "
"an abstract base class: before installing the :ref:`Meta <meta-options>` "
"attribute, it sets ``abstract=False``. This means that children of abstract "
"base classes don't automatically become abstract classes themselves. Of "
"course, you can make an abstract base class that inherits from another "
"abstract base class. You just need to remember to explicitly set "
"``abstract=True`` each time."
msgstr "Django effectue un ajustement à la classe :ref:`Meta <meta-options>` d'une classe de base abstraite : avant d'installer l'attribut :ref:`Meta <meta-options>`, il définit ``abstract=False``. Cela signifie que les enfants des classes de base abstraites ne deviennent pas automatiquement des classes abstraites elles-mêmes. Il est bien sûr possible de créer une classe de base abstraite qui hérite d'une autre classe abstraite. Il faut simplement se rappeler de définir explicitement ``abstract=True`` à chaque fois."

# 30b4f1b748cb45a8a039e8a327c445ce
#: ../../topics/db/models.txt:903
msgid ""
"Some attributes won't make sense to include in the :ref:`Meta <meta-"
"options>` class of an abstract base class. For example, including "
"``db_table`` would mean that all the child classes (the ones that don't "
"specify their own :ref:`Meta <meta-options>`) would use the same database "
"table, which is almost certainly not what you want."
msgstr "Certains attributs n'ont pas de bonne raison d'être intégrés dans la classe :ref:`Meta <meta-options>` d'une classe de base abstraite. Par exemple, la présence de ``db_table`` signifierait que toutes les classes enfants (celles qui ne contiennent pas leur propre classe :ref:`Meta <meta-options>`) utiliseraient la même table de base de données, ce qui ne serait certainement pas le comportement souhaité."

# d12f354040074508a619223c6ae6f519
#: ../../topics/db/models.txt:911
msgid "Be careful with ``related_name``"
msgstr "Soyez prudent avec ``related_name``"

# 819f00f15b284690ad057a0aba916fc2
#: ../../topics/db/models.txt:913
msgid ""
"If you are using the :attr:`~django.db.models.ForeignKey.related_name` "
"attribute on a ``ForeignKey`` or ``ManyToManyField``, you must always "
"specify a *unique* reverse name for the field. This would normally cause a "
"problem in abstract base classes, since the fields on this class are "
"included into each of the child classes, with exactly the same values for "
"the attributes (including :attr:`~django.db.models.ForeignKey.related_name`)"
" each time."
msgstr "Si vous utilisez l'attribut :attr:`~django.db.models.ForeignKey.related_name` d'un champ ``ForeignKey`` ou ``ManyToManyField``, vous devez toujours indiquer un nom inverse *unique* pour le champ. Cela produirait normalement un problème dans les classes de base abstraites, puisque les champs de cette classe sont inclus dans toutes les classes enfants avec exactement les mêmes valeurs d'attributs (y compris :attr:`~django.db.models.ForeignKey.related_name`) à chaque fois."

# e3cbb87ad69b4d459090174b7f464a3b
#: ../../topics/db/models.txt:919
msgid ""
"To work around this problem, when you are using "
":attr:`~django.db.models.ForeignKey.related_name` in an abstract base class "
"(only), part of the name should contain ``'%(app_label)s'`` and "
"``'%(class)s'``."
msgstr "Pour contourner ce problème, lorsque vous utilisez :attr:`~django.db.models.ForeignKey.related_name` dans une classe de base abstraite (et dans ce cas seulement), une partie du nom doit contenir ``'%(app_label)s'`` et ``'%(class)s'``."

# 01643111298440348b7a48e667110c1f
#: ../../topics/db/models.txt:923
msgid ""
"``'%(class)s'`` is replaced by the lower-cased name of the child class that "
"the field is used in."
msgstr "``'%(class)s'`` est remplacé par le nom en minuscules de la classe enfant dans laquelle est utilisé le champ."

# 32bc335e4c204a63b2e6916800148b12
#: ../../topics/db/models.txt:925
msgid ""
"``'%(app_label)s'`` is replaced by the lower-cased name of the app the child"
" class is contained within. Each installed application name must be unique "
"and the model class names within each app must also be unique, therefore the"
" resulting name will end up being different."
msgstr "``'%(app_label)s'`` est remplacé par le nom en minuscules de l'application dans laquelle la classe enfant est contenue. Chaque nom d'application installée doit être unique et les noms de classes de modèles dans chaque application doivent également être uniques, il est donc garanti que le nom résultant sera chaque fois différent."

# 962ae564acd94b7cbb01448a737c3af7
#: ../../topics/db/models.txt:930
msgid "For example, given an app ``common/models.py``::"
msgstr "Par exemple, étant donné une application ``common/models.py``::"

# 6179566754774a9b9f70d4f5831063d4
#: ../../topics/db/models.txt:946
msgid "Along with another app ``rare/models.py``::"
msgstr "Accompagnée d'une autre application ``rare/models.py``::"

# 375e55d9e0614da1a961c0fa022ba6c6
#: ../../topics/db/models.txt:953
msgid ""
"The reverse name of the ``common.ChildA.m2m`` field will be "
"``common_childa_related``, whilst the reverse name of the "
"``common.ChildB.m2m`` field will be ``common_childb_related``, and finally "
"the reverse name of the ``rare.ChildB.m2m`` field will be "
"``rare_childb_related``. It is up to you how you use the ``'%(class)s'`` and"
" ``'%(app_label)s`` portion to construct your related name, but if you "
"forget to use it, Django will raise errors when you validate your models (or"
" run :djadmin:`syncdb`)."
msgstr "Le nom inverse du champ ``common.ChildA.m2m`` sera ``common_childa_related``, alors que le nom inverse du champ ``common.ChildB.m2m`` sera ``common_childb_related``, et finalement, le nom inverse du champ ``rare.ChildB.m2m`` sera ``rare_childb_related``. Vous êtes libre de choisir comment utiliser les portions ``'%(class)s'`` et ``'%(app_label)s`` pour construire le nom lié, mais si vous oubliez de les inclure, Django signalera des erreurs lors de la validation des modèles (ou en lançant :djadmin:`syncdb`)."

# 1f62811e945d4390afbff475279b7b75
#: ../../topics/db/models.txt:961
msgid ""
"If you don't specify a :attr:`~django.db.models.ForeignKey.related_name` "
"attribute for a field in an abstract base class, the default reverse name "
"will be the name of the child class followed by ``'_set'``, just as it "
"normally would be if you'd declared the field directly on the child class. "
"For example, in the above code, if the "
":attr:`~django.db.models.ForeignKey.related_name` attribute was omitted, the"
" reverse name for the ``m2m`` field would be ``childa_set`` in the "
"``ChildA`` case and ``childb_set`` for the ``ChildB`` field."
msgstr "Si vous n'indiquez pas d'attribut :attr:`~django.db.models.ForeignKey.related_name` pour un champ d'une classe de base abstraite, le nom inverse par défaut sera le nom de la classe enfant suivi par ``'_set'``, comme cela se serait produit si vous aviez directement déclaré le champ dans la classe enfant. Par exemple, dans le code ci-dessus, si l'attribut :attr:`~django.db.models.ForeignKey.related_name` avait été omis, le nom inverse du champ ``m2m`` aurait été ``childa_set`` dans le cas ``ChildA`` et ``childb_set`` pour le champ ``ChildB``."

# 66effdb6ec3b4c91bf1d2c59d18c1dfd
#: ../../topics/db/models.txt:973
msgid "Multi-table inheritance"
msgstr "Héritage multi-table"

# 4664446f53e549bba245e237aa46d3c8
#: ../../topics/db/models.txt:975
msgid ""
"The second type of model inheritance supported by Django is when each model "
"in the hierarchy is a model all by itself. Each model corresponds to its own"
" database table and can be queried and created individually. The inheritance"
" relationship introduces links between the child model and each of its "
"parents (via an automatically-created "
":class:`~django.db.models.OneToOneField`). For example::"
msgstr "Le deuxième type d'héritage de modèle pris en charge par Django est lorsque chaque modèle d'une hiérarchie est lui-même un modèle à part entière. À chaque modèle correspond une table de base de données qui peut être interrogée et créée individuellement. Cette relation d'héritage introduit des liens entre le modèle enfant et chacun de ses parents (via un champ :class:`~django.db.models.OneToOneField` automatique). Par exemple ::"

# f1d3d4f4ae0349128ac7e3c9ee38160d
#: ../../topics/db/models.txt:992
msgid ""
"All of the fields of ``Place`` will also be available in ``Restaurant``, "
"although the data will reside in a different database table. So these are "
"both possible::"
msgstr "Tous les champs de ``Place`` seront aussi disponible dans ``Restaurant``, même si les données se trouveront dans des tables de base de données différentes. Ainsi, ces deux formes sont possibles ::"

# b8d679dd2d484b37937f068c9ed99eef
#: ../../topics/db/models.txt:999
msgid ""
"If you have a ``Place`` that is also a ``Restaurant``, you can get from the "
"``Place`` object to the ``Restaurant`` object by using the lower-case "
"version of the model name::"
msgstr "Si vous avez une ``Place`` qui est aussi un ``Restaurant``, vous pouvez accéder à l'objet ``Restaurant`` depuis l'objet ``Place`` en utilisant le nom du modèle en minuscules ::"

# 636d08de54cd4bb58814a650c4dc8a7d
#: ../../topics/db/models.txt:1008
msgid ""
"However, if ``p`` in the above example was *not* a ``Restaurant`` (it had "
"been created directly as a ``Place`` object or was the parent of some other "
"class), referring to ``p.restaurant`` would raise a Restaurant.DoesNotExist "
"exception."
msgstr "Cependant, si dans l'exemple ci-dessus ``p`` n'était *pas* un ``Restaurant`` (soit parce qu'il a été créé directement comme un objet ``Place`` ou qu'il est le parent d'une autre classe), l'accès à ``p.restaurant`` aurait généré une exception ``Restaurant.DoesNotExist``."

# f13eb3bad46244bdb5ca63b1dd09a0a3
#: ../../topics/db/models.txt:1013
msgid "``Meta`` and multi-table inheritance"
msgstr "``Meta`` et l'héritage multi-table"

# 1c65328a649b4b2e9db6820dcdc54796
#: ../../topics/db/models.txt:1015
msgid ""
"In the multi-table inheritance situation, it doesn't make sense for a child "
"class to inherit from its parent's :ref:`Meta <meta-options>` class. All the"
" :ref:`Meta <meta-options>` options have already been applied to the parent "
"class and applying them again would normally only lead to contradictory "
"behavior (this is in contrast with the abstract base class case, where the "
"base class doesn't exist in its own right)."
msgstr "Dans le cas de l'héritage multi-table, l'héritage de la classe :ref:`Meta <meta-options>` du parent n'a aucun intérêt pour la classe enfant. Toutes les options :ref:`Meta <meta-options>` ont déjà été appliquées à la classe parente et une nouvelle application n'amènerait qu'à des comportements contradictoires (a contrario du cas de la classe de base abstraite où la classe de base n'existe pas pour elle-même)."

# b0dfd04067464f29b3d0a8e4d9abf364
#: ../../topics/db/models.txt:1022
msgid ""
"So a child model does not have access to its parent's :ref:`Meta <meta-"
"options>` class. However, there are a few limited cases where the child "
"inherits behavior from the parent: if the child does not specify an "
":attr:`~django.db.models.Options.ordering` attribute or a "
":attr:`~django.db.models.Options.get_latest_by` attribute, it will inherit "
"these from its parent."
msgstr "Ainsi, un modèle enfant n'a pas accès à la classe :ref:`Meta <meta-options>` de son parent. Cependant, il existe quelques cas limités où l'enfant hérite du comportement de son parent : si l'enfant n'indique pas d'attribut :attr:`~django.db.models.Options.ordering` ou :attr:`~django.db.models.Options.get_latest_by`, il hérite des attributs correspondants de son parent."

# ded37edcb07a472eb9756344dd4fc645
#: ../../topics/db/models.txt:1029
msgid ""
"If the parent has an ordering and you don't want the child to have any "
"natural ordering, you can explicitly disable it::"
msgstr "Si le parent possède un ordre de tri mais que vous ne souhaitez pas que l'enfant ait un ordre de tri quelconque, vous pouvez le désactiver explicitement ::"

# d003e13af12a4597a4a91c06fd9d021a
#: ../../topics/db/models.txt:1039
msgid "Inheritance and reverse relations"
msgstr "Héritage et relations inverses"

# f27b716e8eed4daca6ac63795e386713
#: ../../topics/db/models.txt:1041
msgid ""
"Because multi-table inheritance uses an implicit "
":class:`~django.db.models.OneToOneField` to link the child and the parent, "
"it's possible to move from the parent down to the child, as in the above "
"example. However, this uses up the name that is the default "
":attr:`~django.db.models.ForeignKey.related_name` value for "
":class:`~django.db.models.ForeignKey` and "
":class:`~django.db.models.ManyToManyField` relations.  If you are putting "
"those types of relations on a subclass of another model, you **must** "
"specify the :attr:`~django.db.models.ForeignKey.related_name` attribute on "
"each such field. If you forget, Django will raise an error when you run "
":djadmin:`validate` or :djadmin:`syncdb`."
msgstr "Comme l'héritage multi-table utilise un champ :class:`~django.db.models.OneToOneField` implicite pour lier l'enfant à son parent, il est possible d'accéder à l'enfant depuis le parent comme dans l'exemple ci-dessus. Cependant, il est fait usage du nom correspondant à la valeur par défaut de :attr:`~django.db.models.ForeignKey.related_name` pour les relations :class:`~django.db.models.ForeignKey` and :class:`~django.db.models.ManyToManyField`. Si vous ajoutez ces types de relations dans la sous-classe d'un autre modèle, vous **devez** renseigner l'attribut :attr:`~django.db.models.ForeignKey.related_name` pour chacun de ces champs. Si vous l'oubliez, Django génère une erreur lorsque vous lancez :djadmin:`validate` ou :djadmin:`syncdb`."

# ef1b7229962f46edadbee449f1e48035
#: ../../topics/db/models.txt:1054
msgid ""
"For example, using the above ``Place`` class again, let's create another "
"subclass with a :class:`~django.db.models.ManyToManyField`::"
msgstr "Par exemple, en se basant toujours sur la classe ``Place`` ci-dessus, créons une autre sous-classe avec un champ :class:`~django.db.models.ManyToManyField`::"

# 344d8068b395456e932ae0c845f6b6ab
#: ../../topics/db/models.txt:1063
msgid "Specifying the parent link field"
msgstr "Indication du champ de lien vers le parent"

# 4fbb0ba116e84a0bb166728ccafcc03c
#: ../../topics/db/models.txt:1065
msgid ""
"As mentioned, Django will automatically create a "
":class:`~django.db.models.OneToOneField` linking your child class back any "
"non-abstract parent models. If you want to control the name of the attribute"
" linking back to the parent, you can create your own "
":class:`~django.db.models.OneToOneField` and set :attr:`parent_link=True "
"<django.db.models.OneToOneField.parent_link>` to indicate that your field is"
" the link back to the parent class."
msgstr "Comme déjà mentionné, Django crée automatiquement une relation :class:`~django.db.models.OneToOneField` de la classe enfant vers tout modèle parent non abstrait. Si vous souhaitez contrôler le nom du champ de liaison vers le parent, vous pouvez ajouter votre propre champ :class:`~django.db.models.OneToOneField` et définir  :attr:`parent_link=True <django.db.models.OneToOneField.parent_link>` pour indiquer que ce champ est le champ de liaison vers la classe parente."

# bf7314ed413d4108a0b07e6decb4a8fb
#: ../../topics/db/models.txt:1076
msgid "Proxy models"
msgstr "Modèles mandataires"

# de261182d85f4cab9354a1262ef9a24f
#: ../../topics/db/models.txt:1078
msgid ""
"When using :ref:`multi-table inheritance <multi-table-inheritance>`, a new "
"database table is created for each subclass of a model. This is usually the "
"desired behavior, since the subclass needs a place to store any additional "
"data fields that are not present on the base class. Sometimes, however, you "
"only want to change the Python behavior of a model -- perhaps to change the "
"default manager, or add a new method."
msgstr "Lorsqu'on utilise l':ref:`héritage multi-table <multi-table-inheritance>`, une nouvelle table de base de données est créée pour chaque sous-classe d'un modèle. C'est normalement le comportement souhaité, dans la mesure où la sous-classe doit pouvoir stocker les champs de données supplémentaires qui ne figurent pas dans la classe de base. Cependant, dans certains cas, seul le comportement Python d'un modèle a besoin d'être modifié, peut-être pour changer le gestionnaire par défaut ou pour ajouter une nouvelle méthode."

# c224211a20644fc599072c0d9645df10
#: ../../topics/db/models.txt:1085
msgid ""
"This is what proxy model inheritance is for: creating a *proxy* for the "
"original model. You can create, delete and update instances of the proxy "
"model and all the data will be saved as if you were using the original (non-"
"proxied) model. The difference is that you can change things like the "
"default model ordering or the default manager in the proxy, without having "
"to alter the original."
msgstr "C'est l'objectif de l'héritage de modèle mandataire : créer un mandataire (« proxy ») du modèle d'origine. Vous pouvez créer, supprimer et mettre à jour des instances du modèle mandataire et toutes les données seront enregistrées comme si vous utilisiez le modèle d'origine (non mandataire). La différence est que vous pouvez modifier certaines choses dans le modèle mandataire comme le tri par défaut des modèles ou le gestionnaire par défaut, sans devoir toucher au modèle original."

# de265156c74a4eb3881046e1a6eeb9ab
#: ../../topics/db/models.txt:1092
msgid ""
"Proxy models are declared like normal models. You tell Django that it's a "
"proxy model by setting the :attr:`~django.db.models.Options.proxy` attribute"
" of the ``Meta`` class to ``True``."
msgstr "Les modèles mandataires sont déclarés comme des modèles normaux. Vous indiquez à Django qu'il s'agit de modèles mandataires en définissant l'attribut :attr:`~django.db.models.Options.proxy` de la classe ``Meta`` à ``True``."

# 491614ca295a414a8fa9b6c74030e81c
#: ../../topics/db/models.txt:1096
msgid ""
"For example, suppose you want to add a method to the ``Person`` model. You "
"can do it like this::"
msgstr ""

# 66e7ab4eef414d52a2749729537643d1
#: ../../topics/db/models.txt:1112
msgid ""
"The ``MyPerson`` class operates on the same database table as its parent "
"``Person`` class. In particular, any new instances of ``Person`` will also "
"be accessible through ``MyPerson``, and vice-versa::"
msgstr "La classe ``MyPerson`` opère sur la même table de base de données que sa classe parente ``Person``. En particulier, toute nouvelle instance de ``Person`` sera aussi accessible au travers de ``MyPerson`` et inversement ::"

# c5ff37eb01434f28854192168a2febfc
#: ../../topics/db/models.txt:1120
msgid ""
"You could also use a proxy model to define a different default ordering on a"
" model. You might not always want to order the ``Person`` model, but "
"regularly order by the ``last_name`` attribute when you use the proxy. This "
"is easy::"
msgstr "Il est aussi possible d'utiliser un modèle mandataire pour définir un autre tri par défaut sur un modèle. Par exemple, vous ne voulez pas toujours trier le modèle ``Person``, mais systématiquement trier par ``last_name`` chaque fois que vous utiliser le mandataire. C'est simple ::"

# 5546212861044d6985b260a4c661f6c2
#: ../../topics/db/models.txt:1129
msgid ""
"Now normal ``Person`` queries will be unordered and ``OrderedPerson`` "
"queries will be ordered by ``last_name``."
msgstr "Dorénavant les requêtes sur ``Person`` ne seront pas triées mais les requêtes sur ``OrderedPerson`` seront triées par leur champ ``last_name``."

# 9c09b4ecee014e0d89abd54f6381ea28
#: ../../topics/db/models.txt:1133
msgid "QuerySets still return the model that was requested"
msgstr "Les requêtes retournent toujours le modèle interrogé"

# 6d1382fb0fd640f9a01e0ca2406eaece
#: ../../topics/db/models.txt:1135
msgid ""
"There is no way to have Django return, say, a ``MyPerson`` object whenever "
"you query for ``Person`` objects. A queryset for ``Person`` objects will "
"return those types of objects. The whole point of proxy objects is that code"
" relying on the original ``Person`` will use those and your own code can use"
" the extensions you included (that no other code is relying on anyway). It "
"is not a way to replace the ``Person`` (or any other) model everywhere with "
"something of your own creation."
msgstr "Il n'y a aucun moyen de demander à Django de renvoyer par exemple un objet ``MyPerson`` chaque fois que vous faites une requête sur des objets ``Person``. Une requête sur des objets``Person`` renvoie toujours des objets de ce même type. L'idée principale des objets mandataires est que le code se basant sur l'objet ``Person`` original utilise ces objets-là et que votre propre code peut utiliser les extensions que vous avez rajoutées (et qu'aucun autre code n'utilise de toute manière). Ce n'est pas une façon de remplacer partout le modèle ``Person`` (ou un autre) par un autre modèle de votre conception. "

# 056c83af40134af4b3eb139b3c1dd335
#: ../../topics/db/models.txt:1144
msgid "Base class restrictions"
msgstr "Restrictions des classes de base"

# c908d2d55bb24e208cf0df90ebe57161
#: ../../topics/db/models.txt:1146
msgid ""
"A proxy model must inherit from exactly one non-abstract model class. You "
"can't inherit from multiple non-abstract models as the proxy model doesn't "
"provide any connection between the rows in the different database tables. A "
"proxy model can inherit from any number of abstract model classes, providing"
" they do *not* define any model fields."
msgstr "Un modèle mandataire ne peut hériter que d'une seule classe de modèle non abstraite. Il n'est pas possible d'hériter de plusieurs modèles non abstraits car le modèle mandataire ne fournit aucune connexion entre les lignes de différentes tables de base de données. Un modèle mandataire peut hériter d'autant de classes de modèle abstraites que nécessaire pourvu qu'elles ne définissent *pas* de champ de modèle."

# c497aafcb26a4f729b826979f7bbfa9a
#: ../../topics/db/models.txt:1152
msgid ""
"Proxy models inherit any ``Meta`` options that they don't define from their "
"non-abstract model parent (the model they are proxying for)."
msgstr "Les modèles mandataires héritent de toutes les options ``Meta`` de leur modèle parent non abstrait (le modèle dont elles sont le mandataire), pour autant qu'ils ne définissent pas eux-mêmes ces options."

# 5f67d7e851b0446c9cbca3ae92786f57
#: ../../topics/db/models.txt:1156
msgid "Proxy model managers"
msgstr "Gestionnaires des modèles mandataires"

# 66866e7cc6de414680e848266e796c27
#: ../../topics/db/models.txt:1158
msgid ""
"If you don't specify any model managers on a proxy model, it inherits the "
"managers from its model parents. If you define a manager on the proxy model,"
" it will become the default, although any managers defined on the parent "
"classes will still be available."
msgstr "Si vous n'indiquer aucun gestionnaire de modèle pour un modèle mandataire, il hérite des gestionnaires de ses modèles parents. Si vous définissez un gestionnaire sur le modèle mandataire, il devient le gestionnaire par défaut, bien que d'éventuels gestionnaires définis dans les classes parentes seront aussi disponibles."

# bbd2479a9bac415d82b1ba41b0e63ca0
#: ../../topics/db/models.txt:1163
msgid ""
"Continuing our example from above, you could change the default manager used"
" when you query the ``Person`` model like this::"
msgstr "En poursuivant l'exemple ci-dessus, vous pourriez modifier le gestionnaire par défaut utilisé lors des requêtes sur le modèle ``Person`` comme ceci ::"

# 53d5dcb136fc417fa42989d9c21b34cb
#: ../../topics/db/models.txt:1178
msgid ""
"If you wanted to add a new manager to the Proxy, without replacing the "
"existing default, you can use the techniques described in the :ref:`custom "
"manager <custom-managers-and-inheritance>` documentation: create a base "
"class containing the new managers and inherit that after the primary base "
"class::"
msgstr "Si vous souhaitez ajouter un nouveau gestionnaire au modèle mandataire sans remplacer celui qui est défini par défaut, vous pouvez employer les techniques décrites dans la documentation des :ref:`gestionnaires personnalisés <custom-managers-and-inheritance>` : créez une classe de base contenant les nouveaux gestionnaires et héritez de celle-ci après la classe de base principale ::"

# ec1fad682db74ffea9275543421ca0c8
#: ../../topics/db/models.txt:1194
msgid ""
"You probably won't need to do this very often, but, when you do, it's "
"possible."
msgstr "Il est assez rare d'avoir besoin de le faire, mais si besoin est, c'est possible."

# 579294b1470e4b57847b26b65dc4fc2a
#: ../../topics/db/models.txt:1200
msgid "Differences between proxy inheritance and  unmanaged models"
msgstr "Différences entre l'héritage mandataire et les modèles non pilotés"

# 6387ad8e6b1241e5b425187ebe827144
#: ../../topics/db/models.txt:1202
msgid ""
"Proxy model inheritance might look fairly similar to creating an unmanaged "
"model, using the :attr:`~django.db.models.Options.managed` attribute on a "
"model's ``Meta`` class. The two alternatives are not quite the same and it's"
" worth considering which one you should use."
msgstr "L'héritage des modèles mandataires est en apparence très semblable à la création de modèles non pilotés, selon l'attribut :attr:`~django.db.models.Options.managed` de la classe ``Meta`` d'un modèle. Les deux alternatives ne sont pas totalement équivalentes et il vaut la peine d'évaluer laquelle correspond le mieux à votre besoin."

# f8d06b3347e748668d20a19d25f4cfc2
#: ../../topics/db/models.txt:1207
msgid ""
"One difference is that you can (and, in fact, must unless you want an empty "
"model) specify model fields on models with ``Meta.managed=False``. You "
"could, with careful setting of :attr:`Meta.db_table "
"<django.db.models.Options.db_table>` create an unmanaged model that shadowed"
" an existing model and add Python methods to it. However, that would be very"
" repetitive and fragile as you need to keep both copies synchronized if you "
"make any changes."
msgstr "Une des différences est que vous pouvez (et vous devez même, au risque d'obtenir un modèle vide) définir les champs des modèle ayant ``Meta.managed=False``. Il est possible, en définissant soigneusement :attr:`Meta.db_table <django.db.models.Options.db_table>`, de créer un modèle non piloté masquant un modèle existant et d'y ajouter des méthodes Python. Cependant, cette solution est très répétitive et fragile dans la mesure où il faut manuellement synchroniser les deux en cas de modifications."

# c546e6f27fc545bf83779efd4320ed84
#: ../../topics/db/models.txt:1215
msgid ""
"The other difference that is more important for proxy models, is how model "
"managers are handled. Proxy models are intended to behave exactly like the "
"model they are proxying for. So they inherit the parent model's managers, "
"including the default manager. In the normal multi-table model inheritance "
"case, children do not inherit managers from their parents as the custom "
"managers aren't always appropriate when extra fields are involved. The "
":ref:`manager documentation <custom-managers-and-inheritance>` has more "
"details about this latter case."
msgstr "L'autre différence qui est plus importante pour les modèles mandataires est la façon dont les gestionnaires de modèles sont traités. Il est entendu que les modèles mandataires se comportent exactement de la même façon que leur modèle de base. Ils héritent des gestionnaires de modèles de leur parent, y compris du gestionnaire par défaut. Dans le cas habituel de l'héritage de modèle multi-table, les enfants n'héritent pas des gestionnaires de leur parent puisque les gestionnaires personnalisés ne sont pas toujours adéquats lorsque des champs supplémentaires entrent en jeu. La :ref:`documentation des gestionnaires <custom-managers-and-inheritance>` présente plus de détails au sujet de cette dernière situation."

# 3faae01f459b44df9cd1bcab5ff7b898
#: ../../topics/db/models.txt:1224
msgid ""
"When these two features were implemented, attempts were made to squash them "
"into a single option. It turned out that interactions with inheritance, in "
"general, and managers, in particular, made the API very complicated and "
"potentially difficult to understand and use. It turned out that two options "
"were needed in any case, so the current separation arose."
msgstr "Lorsque ces deux fonctionnalités ont été établies, il y a eu des tentatives d'en faire une seule solution. Il en est ressorti que les interactions avec l'héritage en général et avec les gestionnaires plus particulièrement rendaient l'API très compliquée et potentiellement difficile à comprendre et à utiliser. En conclusion, comme deux options étaient nécessaires dans tous les cas, c'est le scénario de la distinction actuelle qui a prévalu."

# 7cbd4260c70d453a98b91625facbe7a9
#: ../../topics/db/models.txt:1230
msgid "So, the general rules are:"
msgstr "Ainsi, les règles générales sont :"

# a139abcecdf24fd2a13c5136548f678a
#: ../../topics/db/models.txt:1232
msgid ""
"If you are mirroring an existing model or database table and don't want all "
"the original database table columns, use ``Meta.managed=False``. That option"
" is normally useful for modeling database views and tables not under the "
"control of Django."
msgstr "Si vous reflétez un modèle ou une table de base de données existant et que vous ne souhaitez pas reproduire toutes les colonnes d'origine de la table, utilisez ``Meta.managed=False``. Cette option est habituellement utile pour la modélisation de tables ou vues de base de données qui ne sont pas sous le contrôle de Django."

# c8ff45ecda2e4628ba55cd28dd4993b7
#: ../../topics/db/models.txt:1236
msgid ""
"If you are wanting to change the Python-only behavior of a model, but keep "
"all the same fields as in the original, use ``Meta.proxy=True``. This sets "
"things up so that the proxy model is an exact copy of the storage structure "
"of the original model when data is saved."
msgstr "Si votre objectif est de ne modifier que le comportement Python d'un modèle tout en conservant les même champs que l'original, utilisez ``Meta.proxy=True``. Cette configuration assure que le modèle mandataire est une copie exacte de la structure de stockage du modèle de base lorsque des données sont enregistrées."

# b1fa6b374de84987a506444702daa060
#: ../../topics/db/models.txt:1242
msgid "Multiple inheritance"
msgstr "Héritage multiple"

# ac01b7ffa6d94dceb07bde7a248dc2bb
#: ../../topics/db/models.txt:1244
msgid ""
"Just as with Python's subclassing, it's possible for a Django model to "
"inherit from multiple parent models. Keep in mind that normal Python name "
"resolution rules apply. The first base class that a particular name (e.g. "
":ref:`Meta <meta-options>`) appears in will be the one that is used; for "
"example, this means that if multiple parents contain a :ref:`Meta <meta-"
"options>` class, only the first one is going to be used, and all others will"
" be ignored."
msgstr "Tout comme l'héritage en Python, les modèles Django peuvent hériter de plusieurs modèles parents. N'oubliez pas que les règles Python habituelles de résolution de nom s'appliquent. La première classe de base dans laquelle apparaît un nom particulier (par ex. :ref:`Meta <meta-options>`) prévaut sur les autres apparitions ; par exemple, cela signifie que si plusieurs parents contiennent une classe :ref:`Meta <meta-options>`, seule la première occurrence sera utilisée, et toutes les autres seront ignorées."

# 6c0d532e3c7d46e48fb78f0106817266
#: ../../topics/db/models.txt:1251
msgid ""
"Generally, you won't need to inherit from multiple parents. The main use-"
"case where this is useful is for \"mix-in\" classes: adding a particular "
"extra field or method to every class that inherits the mix-in. Try to keep "
"your inheritance hierarchies as simple and straightforward as possible so "
"that you won't have to struggle to work out where a particular piece of "
"information is coming from."
msgstr "Généralement, il ne devrait pas être nécessaire d'hériter de plusieurs parents. La principale raison de le faire est dans le cas de classes « mix-in » : l'ajout d'un champ supplémentaire particulier ou d'une méthode dans chaque classe héritant de la class « mix-in ». Essayez de garder votre hiérarchie d'héritage aussi simple et compréhensible que possible afin de ne pas devoir batailler au moment de retrouver la provenance d'une information ou d'un comportement spécifique."

# cf24ad6afebd49fd86ea888e6729c520
#: ../../topics/db/models.txt:1259
msgid "Field name \"hiding\" is not permitted"
msgstr "Le masquage de nom de champ n'est pas autorisé"

# b225cc5ed5a74df39287043890f16b45
#: ../../topics/db/models.txt:1261
msgid ""
"In normal Python class inheritance, it is permissible for a child class to "
"override any attribute from the parent class. In Django, this is not "
"permitted for attributes that are :class:`~django.db.models.Field` instances"
" (at least, not at the moment). If a base class has a field called "
"``author``, you cannot create another model field called ``author`` in any "
"class that inherits from that base class."
msgstr "Dans l'héritage habituel de classes Python, il est permis de surcharger n'importe quel attribut de la classe parent par la classe enfant. Avec Django, cela n'est pas autorisé pour les attributs qui sont des instances de :class:`~django.db.models.Field` (en tout cas pas pour le moment). Si une classe de base possède un champ ``auteur``, il n'est pas possible de créer un autre champ de modèle ``auteur`` dans les classes qui héritent de cette classe de base."

# da393d35b9a64bac93ec02a959edffe1
#: ../../topics/db/models.txt:1268
msgid ""
"Overriding fields in a parent model leads to difficulties in areas such as "
"initializing new instances (specifying which field is being initialized in "
"``Model.__init__``) and serialization. These are features which normal "
"Python class inheritance doesn't have to deal with in quite the same way, so"
" the difference between Django model inheritance and Python class "
"inheritance isn't arbitrary."
msgstr "La surcharge de champs de modèles parents pose des problèmes dans les domaines de l'initialisation de nouvelles instances (pour indiquer quel champ est initialisé dans ``Model.__init__``) et de la sérialisation. Ce sont des situations qui n'affectent pas de la même manière l'héritage habituel de classes Python, cette différence entre l'héritage des classes Python et l'héritage des modèles Django n'est donc pas arbitraire."

# 112451b7ab934b08bdd772b59be1227a
#: ../../topics/db/models.txt:1275
msgid ""
"This restriction only applies to attributes which are "
":class:`~django.db.models.Field` instances. Normal Python attributes can be "
"overridden if you wish. It also only applies to the name of the attribute as"
" Python sees it: if you are manually specifying the database column name, "
"you can have the same column name appearing in both a child and an ancestor "
"model for multi-table inheritance (they are columns in two different "
"database tables)."
msgstr "Cette restriction ne s'applique qu'aux attributs qui sont des instances de :class:`~django.db.models.Field`. Les attributs Python normaux peuvent être surchargés sans problème. Cela ne s'applique aussi qu'au nom de l'attribut tel que Python le voit : si vous indiquez manuellement le nom de la colonne de base de données, il est possible d'avoir le même nom de colonne apparaissant à la fois dans un enfant et son modèle parent dans de l'héritage multi-table (ce sont finalement des colonnes appartenant à deux tables de base de données différentes)."

# d616c70f14224f4ab8ad4f17c110f8e3
#: ../../topics/db/models.txt:1283
msgid ""
"Django will raise a :exc:`~django.core.exceptions.FieldError` if you "
"override any model field in any ancestor model."
msgstr "Django signale une erreur :exc:`~django.core.exceptions.FieldError` si vous surchargez un champ de modèle d'une classe parente."

# 1cb1c16baa1b4deba47d756c22fc3ec2
#: ../../topics/db/multi-db.txt:3
msgid "Multiple databases"
msgstr ""

# f3cacc635a494bb5997540017f890737
#: ../../topics/db/multi-db.txt:5
msgid ""
"This topic guide describes Django's support for interacting with multiple "
"databases. Most of the rest of Django's documentation assumes you are "
"interacting with a single database. If you want to interact with multiple "
"databases, you'll need to take some additional steps."
msgstr ""

# 5b29a0346075418dac0bd1be72016edf
#: ../../topics/db/multi-db.txt:11
msgid "Defining your databases"
msgstr ""

# c12165471eb14266a46d6c4e844dd99f
#: ../../topics/db/multi-db.txt:13
msgid ""
"The first step to using more than one database with Django is to tell Django"
" about the database servers you'll be using. This is done using the "
":setting:`DATABASES` setting. This setting maps database aliases, which are "
"a way to refer to a specific database throughout Django, to a dictionary of "
"settings for that specific connection. The settings in the inner "
"dictionaries are described fully in the :setting:`DATABASES` documentation."
msgstr ""

# cba67759cbbb44c38cc83e4f0688de58
#: ../../topics/db/multi-db.txt:21
msgid ""
"Databases can have any alias you choose. However, the alias ``default`` has "
"special significance. Django uses the database with the alias of ``default``"
" when no other database has been selected."
msgstr ""

# 3d3002caa8e640fe892bc76c41f00ec7
#: ../../topics/db/multi-db.txt:25
msgid ""
"The following is an example ``settings.py`` snippet defining two databases "
"-- a default PostgreSQL database and a MySQL database called ``users``:"
msgstr ""

# c13d93703c944d36abca797468c3f6ff
#: ../../topics/db/multi-db.txt:46
msgid ""
"If the concept of a ``default`` database doesn't make sense in the context "
"of your project, you need to be careful to always specify the database that "
"you want to use. Django requires that a ``default`` database entry be "
"defined, but the parameters dictionary can be left blank if it will not be "
"used. The following is an example ``settings.py`` snippet defining two non-"
"default databases, with the ``default`` entry intentionally left empty::"
msgstr ""

# e40d477082764999836b5fe7a40475b2
#: ../../topics/db/multi-db.txt:69
msgid ""
"If you attempt to access a database that you haven't defined in your "
":setting:`DATABASES` setting, Django will raise a "
"``django.db.utils.ConnectionDoesNotExist`` exception."
msgstr ""

# af19da9cf738451aa60a5d4136320eeb
#: ../../topics/db/multi-db.txt:74
msgid "Synchronizing your databases"
msgstr ""

# 7610890eacf44fc8a14d725fb7bda276
#: ../../topics/db/multi-db.txt:76
msgid ""
"The :djadmin:`syncdb` management command operates on one database at a time."
" By default, it operates on the ``default`` database, but by providing a "
":djadminopt:`--database` argument, you can tell syncdb to synchronize a "
"different database. So, to synchronize all models onto all databases in our "
"example, you would need to call::"
msgstr ""

# 6307a3bebaf94c17a7bb9049ab788526
#: ../../topics/db/multi-db.txt:85
msgid ""
"If you don't want every application to be synchronized onto a particular "
"database, you can define a :ref:`database router<topics-db-multi-db-"
"routing>` that implements a policy constraining the availability of "
"particular models."
msgstr ""

# eba0ce0771764fc3bd1eecca8aae2ede
#: ../../topics/db/multi-db.txt:90
msgid ""
"Alternatively, if you want fine-grained control of synchronization, you can "
"pipe all or part of the output of :djadmin:`sqlall` for a particular "
"application directly into your database prompt, like this::"
msgstr ""

# 6aeb6a79bd2243fdb76dfdaab47f2d7a
#: ../../topics/db/multi-db.txt:97
msgid "Using other management commands"
msgstr ""

# 3af1bc2414aa4ee5ad3351f6ae0edb88
#: ../../topics/db/multi-db.txt:99
msgid ""
"The other ``django-admin.py`` commands that interact with the database "
"operate in the same way as :djadmin:`syncdb` -- they only ever operate on "
"one database at a time, using :djadminopt:`--database` to control the "
"database used."
msgstr ""

# e03ff27155d344bcb67753dd16b798f2
#: ../../topics/db/multi-db.txt:107
msgid "Automatic database routing"
msgstr ""

# 2cd9d16f13dc493097d4d18f42cff84b
#: ../../topics/db/multi-db.txt:109
msgid ""
"The easiest way to use multiple databases is to set up a database routing "
"scheme. The default routing scheme ensures that objects remain 'sticky' to "
"their original database (i.e., an object retrieved from the ``foo`` database"
" will be saved on the same database). The default routing scheme ensures "
"that if a database isn't specified, all queries fall back to the ``default``"
" database."
msgstr ""

# 1a3aac453e65494ea4d7c7398d1d5760
#: ../../topics/db/multi-db.txt:116
msgid ""
"You don't have to do anything to activate the default routing scheme -- it "
"is provided 'out of the box' on every Django project. However, if you want "
"to implement more interesting database allocation behaviors, you can define "
"and install your own database routers."
msgstr ""

# 5b46b08b5141420cba3c0776f9034c6b
#: ../../topics/db/multi-db.txt:122
msgid "Database routers"
msgstr ""

# 873873b9f3c04f648c260c99a48460c9
#: ../../topics/db/multi-db.txt:124
msgid "A database Router is a class that provides up to four methods:"
msgstr ""

# 6b872bb9474f44f2a7204734a3a8a715
#: ../../topics/db/multi-db.txt:128
msgid ""
"Suggest the database that should be used for read operations for objects of "
"type ``model``."
msgstr ""

# c29d29c851ca4fc8857de8d7cee738bf
# 92cf8a50ee3f4d0b9b40abc7794196fa
#: ../../topics/db/multi-db.txt:131 ../../topics/db/multi-db.txt:143
msgid ""
"If a database operation is able to provide any additional information that "
"might assist in selecting a database, it will be provided in the ``hints`` "
"dictionary. Details on valid hints are provided :ref:`below <topics-db-"
"multi-db-hints>`."
msgstr ""

# a769ddf8c34b45c5b45e5ccafbb57b8f
# f66f996d226d49c5a18d42f8d1f85c79
#: ../../topics/db/multi-db.txt:136 ../../topics/db/multi-db.txt:148
msgid "Returns None if there is no suggestion."
msgstr ""

# deea10d3d03b41eda854396d49a4e641
#: ../../topics/db/multi-db.txt:140
msgid ""
"Suggest the database that should be used for writes of objects of type "
"Model."
msgstr ""

# a1cd74b077e04065844f35eec7d6b9cc
#: ../../topics/db/multi-db.txt:152
msgid ""
"Return True if a relation between obj1 and obj2 should be allowed, False if "
"the relation should be prevented, or None if the router has no opinion. This"
" is purely a validation operation, used by foreign key and many to many "
"operations to determine if a relation should be allowed between two objects."
msgstr ""

# c856e001f39049228f1d95f7274e6c56
#: ../../topics/db/multi-db.txt:160
msgid ""
"Determine if the ``model`` should be synchronized onto the database with "
"alias ``db``. Return True if the model should be synchronized, False if it "
"should not be synchronized, or None if the router has no opinion. This "
"method can be used to determine the availability of a model on a given "
"database."
msgstr ""

# dda06abd431f4bfeb47785ad86301de6
#: ../../topics/db/multi-db.txt:166
msgid ""
"A router doesn't have to provide *all* these methods -- it may omit one or "
"more of them. If one of the methods is omitted, Django will skip that router"
" when performing the relevant check."
msgstr ""

# fdb8f48f85b04668b4ebeb082687acc5
#: ../../topics/db/multi-db.txt:173
msgid "Hints"
msgstr ""

# 5804cd4bb53e450dbc522d0a5100645a
#: ../../topics/db/multi-db.txt:175
msgid ""
"The hints received by the database router can be used to decide which "
"database should receive a given request."
msgstr ""

# 51fed7f681b241de80fe27d54e38b293
#: ../../topics/db/multi-db.txt:178
msgid ""
"At present, the only hint that will be provided is ``instance``, an object "
"instance that is related to the read or write operation that is underway. "
"This might be the instance that is being saved, or it might be an instance "
"that is being added in a many-to-many relation. In some cases, no instance "
"hint will be provided at all. The router checks for the existence of an "
"instance hint, and determine if that hint should be used to alter routing "
"behavior."
msgstr ""

# 6ecf3006f4214855a50deed308a74500
#: ../../topics/db/multi-db.txt:187
msgid "Using routers"
msgstr ""

# 78916b10f894458c97693f4e5c2303bc
#: ../../topics/db/multi-db.txt:189
msgid ""
"Database routers are installed using the :setting:`DATABASE_ROUTERS` "
"setting. This setting defines a list of class names, each specifying a "
"router that should be used by the master router (``django.db.router``)."
msgstr "Les routeurs de base de données sont installés par le réglage :setting:`DATABASE_ROUTERS`. Ce réglage définit une liste de noms de classes, chacune définissant un routeur devant être utilisé par le routeur maître (``django.db.router``)."

# c7b8b7d68b0a48d7bf5a38208bffe196
#: ../../topics/db/multi-db.txt:194
msgid ""
"The master router is used by Django's database operations to allocate "
"database usage. Whenever a query needs to know which database to use, it "
"calls the master router, providing a model and a hint (if available). Django"
" then tries each router in turn until a database suggestion can be found. If"
" no suggestion can be found, it tries the current ``_state.db`` of the hint "
"instance. If a hint instance wasn't provided, or the instance doesn't "
"currently have database state, the master router will allocate the "
"``default`` database."
msgstr "Le routeur maître est utilisé par les opérations de base de données de Django pour désigner les bases de données à utiliser. Chaque fois qu'une requête a besoin de savoir quelle base de données utiliser, elle appelle le routeur maître, en indiquant un modèle ainsi qu'un indice (si disponible). Django essaie ensuite chaque routeur tour à tour jusqu'à ce qu'une suggestion de base de données soit trouvée. Si aucune suggestion n'est trouvée, il essaie d'utiliser la propriété ``_state.db`` de l'instance de l'indice. Si aucun indice n'a été indiqué ou si l'instance n'a actuellement pas d'état de base de données, le routeur maître désigne la base de données ``default``."

# 0c593bcb50404baea7e236537e8015f9
# 29189ba92fee40fa83129b742e0bed4c
# a40e0c6ae2a84e2abfff02229e63bc76
#: ../../topics/db/multi-db.txt:204 ../../topics/db/tablespaces.txt:45
#: ../../topics/logging.txt:243
msgid "An example"
msgstr "Un exemple"

# e1400f09e0194c4ba258e5dfbde6a545
#: ../../topics/db/multi-db.txt:206
msgid "Example purposes only!"
msgstr ""

# a9a0fa49662f4879aa3ecb4c7fd70a45
#: ../../topics/db/multi-db.txt:208
msgid ""
"This example is intended as a demonstration of how the router infrastructure"
" can be used to alter database usage. It intentionally ignores some complex "
"issues in order to demonstrate how routers are used."
msgstr ""

# 782cfc81708d4ca7bb0b0d7988a8570c
#: ../../topics/db/multi-db.txt:213
msgid ""
"This example won't work if any of the models in ``myapp`` contain "
"relationships to models outside of the ``other`` database. :ref:`Cross-"
"database relationships <no_cross_database_relations>` introduce referential "
"integrity problems that Django can't currently handle."
msgstr ""

# c9360bd57e304591974a52b6b75e5fad
#: ../../topics/db/multi-db.txt:219
msgid ""
"The master/slave configuration described is also flawed -- it doesn't "
"provide any solution for handling replication lag (i.e., query "
"inconsistencies introduced because of the time taken for a write to "
"propagate to the slaves). It also doesn't consider the interaction of "
"transactions with the database utilization strategy."
msgstr ""

# 7854459ac19249c5b4aa6b0dccc5b967
#: ../../topics/db/multi-db.txt:225
msgid ""
"So - what does this mean in practice? Let's consider another sample "
"configuration. This one will have several databases: one for the ``auth`` "
"application, and all other apps using a master/slave setup with two read "
"slaves. Here are the settings specifying these databases::"
msgstr ""

# 875b75865ce046d882019f0d28d6715f
#: ../../topics/db/multi-db.txt:258
msgid ""
"Now we'll need to handle routing. First we want a router that knows to send "
"queries for the ``auth`` app to ``auth_db``::"
msgstr ""

# 5dd203439db54f0ab3ea0bedc92a545e
#: ../../topics/db/multi-db.txt:302
msgid ""
"And we also want a router that sends all other apps to the master/slave "
"configuration, and randomly chooses a slave to read from::"
msgstr ""

# 6563b157c0d748cc88f3277cb31e1e8e
#: ../../topics/db/multi-db.txt:337
msgid ""
"Finally, in the settings file, we add the following (substituting "
"``path.to.`` with the actual python path to the module(s) where the routers "
"are defined)::"
msgstr ""

# c3f6782a254e48e1a88be0cc131fdd8e
#: ../../topics/db/multi-db.txt:343
msgid ""
"The order in which routers are processed is significant. Routers will be "
"queried in the order the are listed in the :setting:`DATABASE_ROUTERS` "
"setting . In this example, the ``AuthRouter`` is processed before the "
"``MasterSlaveRouter``, and as a result, decisions concerning the models in "
"``auth`` are processed before any other decision is made. If the "
":setting:`DATABASE_ROUTERS` setting listed the two routers in the other "
"order, ``MasterSlaveRouter.allow_syncdb()`` would be processed first. The "
"catch-all nature of the MasterSlaveRouter implementation would mean that all"
" models would be available on all databases."
msgstr ""

# b67a48ee558849fe896070426b617609
#: ../../topics/db/multi-db.txt:354
msgid "With this setup installed, lets run some Django code::"
msgstr ""

# aa68f281db9f4f2c9ee8cc48c7849ef7
#: ../../topics/db/multi-db.txt:381
msgid "Manually selecting a database"
msgstr ""

# 077d64e5c3a0497ea33f40d3f67896e3
#: ../../topics/db/multi-db.txt:383
msgid ""
"Django also provides an API that allows you to maintain complete control "
"over database usage in your code. A manually specified database allocation "
"will take priority over a database allocated by a router."
msgstr ""

# cdf6e6062259424e8135f6a24658b753
#: ../../topics/db/multi-db.txt:388
msgid "Manually selecting a database for a ``QuerySet``"
msgstr ""

# 17008f904e1e42bc8dd9a41301545d06
#: ../../topics/db/multi-db.txt:390
msgid ""
"You can select the database for a ``QuerySet`` at any point in the "
"``QuerySet`` \"chain.\" Just call ``using()`` on the ``QuerySet`` to get "
"another ``QuerySet`` that uses the specified database."
msgstr ""

# 797fa3f0c0c64970835f82e940dde772
#: ../../topics/db/multi-db.txt:394
msgid ""
"``using()`` takes a single argument: the alias of the database on which you "
"want to run the query. For example::"
msgstr ""

# 138e0f48f03644a6b2004cd28c0bc546
#: ../../topics/db/multi-db.txt:407
msgid "Selecting a database for ``save()``"
msgstr ""

# 0915b0a94fa8457a9d28d7b0b2d71dbd
#: ../../topics/db/multi-db.txt:409
msgid ""
"Use the ``using`` keyword to ``Model.save()`` to specify to which database "
"the data should be saved."
msgstr ""

# b56a67a8f1ac4153bbdc40cbfa46a5a0
#: ../../topics/db/multi-db.txt:412
msgid ""
"For example, to save an object to the ``legacy_users`` database, you'd use "
"this::"
msgstr ""

# 699d70e32fe44c05a07414cfebd94ebc
#: ../../topics/db/multi-db.txt:417
msgid ""
"If you don't specify ``using``, the ``save()`` method will save into the "
"default database allocated by the routers."
msgstr ""

# 8b4b290dc1174cb6a8b1dc1c0194c3f6
#: ../../topics/db/multi-db.txt:421
msgid "Moving an object from one database to another"
msgstr ""

# c2d06001396e4c84a84ec31f45adbbe6
#: ../../topics/db/multi-db.txt:423
msgid ""
"If you've saved an instance to one database, it might be tempting to use "
"``save(using=...)`` as a way to migrate the instance to a new database. "
"However, if you don't take appropriate steps, this could have some "
"unexpected consequences."
msgstr ""

# a104a933252b4f76b4a707c24bbb507a
#: ../../topics/db/multi-db.txt:428
msgid "Consider the following example::"
msgstr ""

# 73bb513d89374fe18452864fdfd26952
#: ../../topics/db/multi-db.txt:434
msgid ""
"In statement 1, a new ``Person`` object is saved to the ``first`` database. "
"At this time, ``p`` doesn't have a primary key, so Django issues an SQL "
"``INSERT`` statement. This creates a primary key, and Django assigns that "
"primary key to ``p``."
msgstr ""

# 330de95e4c5b4d07b37c7c571ff6694e
#: ../../topics/db/multi-db.txt:439
msgid ""
"When the save occurs in statement 2, ``p`` already has a primary key value, "
"and Django will attempt to use that primary key on the new database. If the "
"primary key value isn't in use in the ``second`` database, then you won't "
"have any problems -- the object will be copied to the new database."
msgstr ""

# a18ec5bf4d1f4a749d0d33ed1d7447f1
#: ../../topics/db/multi-db.txt:445
msgid ""
"However, if the primary key of ``p`` is already in use on the ``second`` "
"database, the existing object in the ``second`` database will be overridden "
"when ``p`` is saved."
msgstr ""

# 4aa744764c6a46b689e9092f2a563713
#: ../../topics/db/multi-db.txt:449
msgid ""
"You can avoid this in two ways. First, you can clear the primary key of the "
"instance. If an object has no primary key, Django will treat it as a new "
"object, avoiding any loss of data on the ``second`` database::"
msgstr ""

# b068d02b0fb34c05a70c0b7d40dcb5ed
#: ../../topics/db/multi-db.txt:459
msgid ""
"The second option is to use the ``force_insert`` option to ``save()`` to "
"ensure that Django does an SQL ``INSERT``::"
msgstr ""

# 83588f411e7141a2a62cd1171f7b3522
#: ../../topics/db/multi-db.txt:466
msgid ""
"This will ensure that the person named ``Fred`` will have the same primary "
"key on both databases. If that primary key is already in use when you try to"
" save onto the ``second`` database, an error will be raised."
msgstr ""

# 2528020fbbb7431e94609f687dfdc2b0
#: ../../topics/db/multi-db.txt:472
msgid "Selecting a database to delete from"
msgstr ""

# 91304cde47e8481bb9429f18a524d939
#: ../../topics/db/multi-db.txt:474
msgid ""
"By default, a call to delete an existing object will be executed on the same"
" database that was used to retrieve the object in the first place::"
msgstr ""

# fde20a7c6f31484191708bac89a4b5c7
#: ../../topics/db/multi-db.txt:481
msgid ""
"To specify the database from which a model will be deleted, pass a ``using``"
" keyword argument to the ``Model.delete()`` method. This argument works just"
" like the ``using`` keyword argument to ``save()``."
msgstr ""

# 86349911ad704ce3a8c85f421391078a
#: ../../topics/db/multi-db.txt:485
msgid ""
"For example, if you're migrating a user from the ``legacy_users`` database "
"to the ``new_users`` database, you might use these commands::"
msgstr ""

# c2e3ca53005f438096b1cd5526d17518
#: ../../topics/db/multi-db.txt:492
msgid "Using managers with multiple databases"
msgstr ""

# db400e4d8bcb4c089e884f164849d569
#: ../../topics/db/multi-db.txt:494
msgid ""
"Use the ``db_manager()`` method on managers to give managers access to a "
"non-default database."
msgstr ""

# d98a0f0980a44a08ab3210b4bee97078
#: ../../topics/db/multi-db.txt:497
msgid ""
"For example, say you have a custom manager method that touches the database "
"-- ``User.objects.create_user()``. Because ``create_user()`` is a manager "
"method, not a ``QuerySet`` method, you can't do "
"``User.objects.using('new_users').create_user()``. (The ``create_user()`` "
"method is only available on ``User.objects``, the manager, not on "
"``QuerySet`` objects derived from the manager.) The solution is to use "
"``db_manager()``, like this::"
msgstr ""

# c79293426a4745708ab804964fad5a7a
#: ../../topics/db/multi-db.txt:507
msgid ""
"``db_manager()`` returns a copy of the manager bound to the database you "
"specify."
msgstr ""

# 37a910b0b70c4b55b3291630ef1c7f58
#: ../../topics/db/multi-db.txt:510
msgid "Using ``get_queryset()`` with multiple databases"
msgstr ""

# 5b0fa52e7d1e44599143488cd6736526
#: ../../topics/db/multi-db.txt:512
msgid ""
"If you're overriding ``get_queryset()`` on your manager, be sure to either "
"call the method on the parent (using ``super()``) or do the appropriate "
"handling of the ``_db`` attribute on the manager (a string containing the "
"name of the database to use)."
msgstr ""

# b3d1dd6db07a42aa9f09029f2a7ab0ba
#: ../../topics/db/multi-db.txt:517
msgid ""
"For example, if you want to return a custom ``QuerySet`` class from the "
"``get_queryset`` method, you could do this::"
msgstr ""

# 26f6580a64724666ba92535dbd30fc5a
#: ../../topics/db/multi-db.txt:528
msgid "Exposing multiple databases in Django's admin interface"
msgstr ""

# 594aaf0c305d4a90b27221f9fd984fa8
#: ../../topics/db/multi-db.txt:530
msgid ""
"Django's admin doesn't have any explicit support for multiple databases. If "
"you want to provide an admin interface for a model on a database other than "
"that specified by your router chain, you'll need to write custom "
":class:`~django.contrib.admin.ModelAdmin` classes that will direct the admin"
" to use a specific database for content."
msgstr ""

# 49c101ccc552403f8a64df6e2657e5fd
#: ../../topics/db/multi-db.txt:536
msgid ""
"``ModelAdmin`` objects have five methods that require customization for "
"multiple-database support::"
msgstr ""

# f91a04d3fd204f28821e8024c5b4868a
#: ../../topics/db/multi-db.txt:565
msgid ""
"The implementation provided here implements a multi-database strategy where "
"all objects of a given type are stored on a specific database (e.g., all "
"``User`` objects are in the ``other`` database). If your usage of multiple "
"databases is more complex, your ``ModelAdmin`` will need to reflect that "
"strategy."
msgstr ""

# a3d6eb3bc23c476ca7926ce43feab3d9
#: ../../topics/db/multi-db.txt:571
msgid ""
"Inlines can be handled in a similar fashion. They require three customized "
"methods::"
msgstr ""

# bf71855339e544a58e3726661e2487b1
#: ../../topics/db/multi-db.txt:590
msgid ""
"Once you've written your model admin definitions, they can be registered "
"with any ``Admin`` instance::"
msgstr ""

# b061ea5c87104c53a7a012224b3684ba
#: ../../topics/db/multi-db.txt:608
msgid ""
"This example sets up two admin sites. On the first site, the ``Author`` and "
"``Publisher`` objects are exposed; ``Publisher`` objects have an tabular "
"inline showing books published by that publisher. The second site exposes "
"just publishers, without the inlines."
msgstr ""

# 5ceebe0372b0437f9e03c4f7e955ab2f
#: ../../topics/db/multi-db.txt:615
msgid "Using raw cursors with multiple databases"
msgstr ""

# 8839781a75854d3fab9bcadb63f5ab49
#: ../../topics/db/multi-db.txt:617
msgid ""
"If you are using more than one database you can use "
"``django.db.connections`` to obtain the connection (and cursor) for a "
"specific database. ``django.db.connections`` is a dictionary-like object "
"that allows you to retrieve a specific connection using its alias::"
msgstr ""

# 8386782d86424168bb7c58d55ce50770
#: ../../topics/db/multi-db.txt:627
msgid "Limitations of multiple databases"
msgstr ""

# 9c98480252e548ebafc1c9411138b4b7
#: ../../topics/db/multi-db.txt:632
msgid "Cross-database relations"
msgstr ""

# 36983c25aed64fa1ad38c15142e085ff
#: ../../topics/db/multi-db.txt:634
msgid ""
"Django doesn't currently provide any support for foreign key or many-to-many"
" relationships spanning multiple databases. If you have used a router to "
"partition models to different databases, any foreign key and many-to-many "
"relationships defined by those models must be internal to a single database."
msgstr ""

# c84fbf26310f4e6d9164774faa9baeaa
#: ../../topics/db/multi-db.txt:640
msgid ""
"This is because of referential integrity. In order to maintain a "
"relationship between two objects, Django needs to know that the primary key "
"of the related object is valid. If the primary key is stored on a separate "
"database, it's not possible to easily evaluate the validity of a primary "
"key."
msgstr ""

# 42abcb99237740abbf073b68f81a9ab7
#: ../../topics/db/multi-db.txt:646
msgid ""
"If you're using Postgres, Oracle, or MySQL with InnoDB, this is enforced at "
"the database integrity level -- database level key constraints prevent the "
"creation of relations that can't be validated."
msgstr ""

# 8c72653c25c2485cab31e4889be10236
#: ../../topics/db/multi-db.txt:650
msgid ""
"However, if you're using SQLite or MySQL with MyISAM tables, there is no "
"enforced referential integrity; as a result, you may be able to 'fake' cross"
" database foreign keys. However, this configuration is not officially "
"supported by Django."
msgstr ""

# b6ed0f245bf94158b2269a4ec0b917b9
#: ../../topics/db/multi-db.txt:658
msgid "Behavior of contrib apps"
msgstr ""

# fc55ee222e8a4f2bbcb52cc53b17df6e
#: ../../topics/db/multi-db.txt:660
msgid ""
"Several contrib apps include models, and some apps depend on others. Since "
"cross-database relationships are impossible, this creates some restrictions "
"on how you can split these models across databases:"
msgstr ""

# edcde910ccdc4acc903a5c2c1575f1ca
#: ../../topics/db/multi-db.txt:664
msgid ""
"each one of ``contenttypes.ContentType``, ``sessions.Session`` and "
"``sites.Site`` can be stored in any database, given a suitable router."
msgstr ""

# 1068c4fc88cb404ebb98a2b02958883b
#: ../../topics/db/multi-db.txt:666
msgid ""
"``auth`` models — ``User``, ``Group`` and ``Permission`` — are linked "
"together and linked to ``ContentType``, so they must be stored in the same "
"database as ``ContentType``."
msgstr ""

# 348ffdca97d24b00ac651f36690260a3
#: ../../topics/db/multi-db.txt:669
msgid ""
"``admin`` and ``comments`` depend on ``auth``, so their models must be in "
"the same database as ``auth``."
msgstr ""

# db8e2005c3694b39a8f691a643afec36
#: ../../topics/db/multi-db.txt:671
msgid ""
"``flatpages`` and ``redirects`` depend on ``sites``, so their models must be"
" in the same database as ``sites``."
msgstr ""

# 5cbdaac43cac4f9a8d1d8c665aadd494
#: ../../topics/db/multi-db.txt:674
msgid ""
"In addition, some objects are automatically created just after "
":djadmin:`syncdb` creates a table to hold them in a database:"
msgstr ""

# 3291b759042849ae837bd164b7ae8385
#: ../../topics/db/multi-db.txt:677
msgid "a default ``Site``,"
msgstr ""

# d58b40c2a59e4fb5afecf41a9f9339fc
#: ../../topics/db/multi-db.txt:678
msgid ""
"a ``ContentType`` for each model (including those not stored in that "
"database),"
msgstr ""

# cc1873b097d040928d26b3223cb996f1
#: ../../topics/db/multi-db.txt:680
msgid ""
"three ``Permission`` for each model (including those not stored in that "
"database)."
msgstr ""

# 9a0167fda2a94c6b878de241829c5f82
#: ../../topics/db/multi-db.txt:685
msgid ""
"Previously, ``ContentType`` and ``Permission`` instances were created only "
"in the default database."
msgstr ""

# ff24c8aef9a1425bbb203a2cac767d9b
#: ../../topics/db/multi-db.txt:688
msgid ""
"For common setups with multiple databases, it isn't useful to have these "
"objects in more than one database. Common setups include master / slave and "
"connecting to external databases. Therefore, it's recommended:"
msgstr ""

# b1ed12e11f1e4d52a9560c54aaa44276
#: ../../topics/db/multi-db.txt:692
msgid "either to run :djadmin:`syncdb` only for the default database;"
msgstr ""

# 85a0c072b13141eead8760ae03bcb4f4
#: ../../topics/db/multi-db.txt:693
msgid ""
"or to write :ref:`database router<topics-db-multi-db-routing>` that allows "
"synchronizing these three models only to one database."
msgstr ""

# 9068cc528a3c457fa8f057c76d775ad2
#: ../../topics/db/multi-db.txt:698
msgid ""
"If you're synchronizing content types to more that one database, be aware "
"that their primary keys may not match across databases. This may result in "
"data corruption or data loss."
msgstr ""

# 0e9d12a8650741799f5a6f77dedf6049
#: ../../topics/db/optimization.txt:3
msgid "Database access optimization"
msgstr "Optimisation de l'accès à la base de données"

# 9619b7f0488741ebad68abf0a14a3e90
#: ../../topics/db/optimization.txt:5
msgid ""
"Django's database layer provides various ways to help developers get the "
"most out of their databases. This document gathers together links to the "
"relevant documentation, and adds various tips, organized under a number of "
"headings that outline the steps to take when attempting to optimize your "
"database usage."
msgstr "La couche de base de données de Django fournit plusieurs manières d'aider les développeurs à tirer le meilleur de leurs bases de données. Ce document rassemble des liens vers la documentation adéquate et ajoute quelques astuces, réparties dans plusieurs chapitres respectant la chronologie des étapes à suivre lorsqu'on souhaite optimiser l'utilisation de la base de données."

# 0db44d8c6d6f441fa578a586a1d39332
#: ../../topics/db/optimization.txt:11
msgid "Profile first"
msgstr "Priorité au profilage"

# c47452bf051647ad87c81f0d0a20f034
#: ../../topics/db/optimization.txt:13
msgid ""
"As general programming practice, this goes without saying. Find out "
":ref:`what queries you are doing and what they are costing you <faq-see-raw-"
"sql-queries>`. You may also want to use an external project like django-"
"debug-toolbar_, or a tool that monitors your database directly."
msgstr "Comme principe de programmation générale, cela va sans dire. Recherchez :ref:`quelles sont les requêtes effectuées et ce qu'elles coûtent <faq-see-raw-sql-queries>`. Il est aussi possible d'utiliser un projet externe comme django-debug-toolbar_ ou un outil qui surveille directement votre base de données."

# d83ffd56e00b44ea94af55ec8984afdf
#: ../../topics/db/optimization.txt:18
msgid ""
"Remember that you may be optimizing for speed or memory or both, depending "
"on your requirements. Sometimes optimizing for one will be detrimental to "
"the other, but sometimes they will help each other. Also, work that is done "
"by the database process might not have the same cost (to you) as the same "
"amount of work done in your Python process. It is up to you to decide what "
"your priorities are, where the balance must lie, and profile all of these as"
" required since this will depend on your application and server."
msgstr "Rappelez-vous que l'on peut optimiser pour la rapidité, pour la mémoire ou pour les deux, en fonction des besoins. Parfois, l'optimisation d'un côté va péjorer la situation de l'autre, mais dans d'autres cas, les deux vont en profiter ensemble. De plus, le travail effectué par le processus de la base de données n'a pas toujours le même coût (pour vous) que le même travail effectué dans le processus Python. C'est à vous de décider des priorités, de pondérer avantages et inconvénients et de profiler tout cela selon les besoins car tout dépend de votre application et du serveur."

# 0173f005d91d406cab92b55a31acbdc4
#: ../../topics/db/optimization.txt:26
msgid ""
"With everything that follows, remember to profile after every change to "
"ensure that the change is a benefit, and a big enough benefit given the "
"decrease in readability of your code. **All** of the suggestions below come "
"with the caveat that in your circumstances the general principle might not "
"apply, or might even be reversed."
msgstr "Avec tout ce qui suit, n'oubliez pas de profiler après chaque modification pour vous assurer que celle-ci est bénéfique et que le bénéfice est suffisant pour compenser la perte de lisibilité du code. Pour **toutes** les suggestions ci-dessous, il faut tenir compte du risque que le principe général ne s'applique pas dans votre cas de figure, ou que l'effet soit même inversé."

# fad0f544cd8b467cbe6ea0a2094048f8
#: ../../topics/db/optimization.txt:35
msgid "Use standard DB optimization techniques"
msgstr "Techniques standards d'optimisation de base de données"

# 7782d639e09c48d8885b4e1f7911730a
#: ../../topics/db/optimization.txt:37
msgid "...including:"
msgstr "Ceci comprend :"

# e8c2c1b0b8504950bcd6f62cf10bb3ac
#: ../../topics/db/optimization.txt:39
msgid ""
"Indexes. This is a number one priority, *after* you have determined from "
"profiling what indexes should be added. Use "
":attr:`django.db.models.Field.db_index` or :attr:`Meta.index_together "
"<django.db.models.Options.index_together>` to add these from Django."
msgstr ""

# a8f5730d940c4b81aebf3530989d889f
#: ../../topics/db/optimization.txt:45
msgid "Appropriate use of field types."
msgstr "Utilisation appropriée des types de champs."

# 61d05c920dff40188d8fe3bd89d0dd8a
#: ../../topics/db/optimization.txt:47
msgid ""
"We will assume you have done the obvious things above. The rest of this "
"document focuses on how to use Django in such a way that you are not doing "
"unnecessary work. This document also does not address other optimization "
"techniques that apply to all expensive operations, such as :doc:`general "
"purpose caching </topics/cache>`."
msgstr "Nous supposerons que vous avez effectué les opérations évidentes ci-dessus. La suite de ce document se concentre sur la façon d'utiliser Django de telle manière à ne pas effectuer de travail inutile. Ce document n'aborde cependant pas d'autres techniques d'optimisation qui s'appliquent à des opérations lourdes, comme la :doc:`mise en cache à portée générale </topics/cache>`."

# e25b7c3fc8284b15aa77f6617360040a
#: ../../topics/db/optimization.txt:54
msgid "Understand QuerySets"
msgstr "Compréhension des objets QuerySet"

# eb378f6b3a564910bc97b506e775dbbf
#: ../../topics/db/optimization.txt:56
msgid ""
"Understanding :doc:`QuerySets </ref/models/querysets>` is vital to getting "
"good performance with simple code. In particular:"
msgstr "La compréhension des :doc:`QuerySet </ref/models/querysets>` est capitale pour obtenir de bonnes performances avec du code simple. En particulier :"

# 26c492a779b4441e92da7c7ce38f23e9
#: ../../topics/db/optimization.txt:60
msgid "Understand QuerySet evaluation"
msgstr "Compréhension de l'évaluation du QuerySet"

# 9dc99c12ce874c64b253d0dd336ea630
#: ../../topics/db/optimization.txt:62
msgid "To avoid performance problems, it is important to understand:"
msgstr "Pour éviter des problèmes de performance, il est important de comprendre :"

# 7b36c9397d954095b95f1665b756a6b1
#: ../../topics/db/optimization.txt:64
msgid "that :ref:`QuerySets are lazy <querysets-are-lazy>`."
msgstr "que les :ref:`QuerySet sont différés <querysets-are-lazy>`."

# a30da5c072ed4ff7be7de12866c5180a
#: ../../topics/db/optimization.txt:66
msgid "when :ref:`they are evaluated <when-querysets-are-evaluated>`."
msgstr "quand :ref:`ils sont évalués <when-querysets-are-evaluated>`."

# c8a648cd6c524296b3f1c14ab4e4e799
#: ../../topics/db/optimization.txt:68
msgid "how :ref:`the data is held in memory <caching-and-querysets>`."
msgstr "comment :ref:`les données sont conservée en mémoire <caching-and-querysets>`."

# af64982482ed43fbbffcf295032f7c5a
#: ../../topics/db/optimization.txt:71
msgid "Understand cached attributes"
msgstr "Compréhension des attributs mis en cache"

# e2345259522e4cdfb82a3fbe85fd67a6
#: ../../topics/db/optimization.txt:73
msgid ""
"As well as caching of the whole ``QuerySet``, there is caching of the result"
" of attributes on ORM objects. In general, attributes that are not callable "
"will be cached. For example, assuming the :ref:`example Weblog models "
"<queryset-model-example>`::"
msgstr "Tout comme la mise en cache d'un ``QuerySet`` global, il y a mise en cache du résultat des attributs dans les objets de l'ORM. En général, les attributs qui ne sont pas exécutables seront mis en cache. Par exemple, à partir des :ref:`modèles d'exemple du Weblog <queryset-model-example>`::"

# 979efb0bf1314793b9484c1285eb1919
#: ../../topics/db/optimization.txt:82
msgid "But in general, callable attributes cause DB lookups every time::"
msgstr "Mais généralement, les attributs exécutables provoquent des accès à la base de données à chaque appel ::"

# 5eab6ac948f343ecafdcb9ac7a7d0c81
#: ../../topics/db/optimization.txt:88
msgid ""
"Be careful when reading template code - the template system does not allow "
"use of parentheses, but will call callables automatically, hiding the above "
"distinction."
msgstr "Soyez prudent dans la lecture du code des gabarits, le système des gabarits ne permet pas d'utiliser des parenthèses, mais les objets exécutables sont appelés automatiquement, masquant la distinction ci-dessus."

# 96684e5dad1b44abb19e70ea237e498f
#: ../../topics/db/optimization.txt:92
msgid ""
"Be careful with your own custom properties - it is up to you to implement "
"caching."
msgstr "Soyez prudent avec vos propres propriétés personnalisées, il vous revient d'implémenter leur mise en cache."

# 85d13222118c4b7ea622b08265e3fe50
#: ../../topics/db/optimization.txt:96
msgid "Use the ``with`` template tag"
msgstr "Utilisation de la balise de gabarit ``with``"

# 6723b093a9f74f3fa78a82e88cac1c0c
#: ../../topics/db/optimization.txt:98
msgid ""
"To make use of the caching behavior of ``QuerySet``, you may need to use the"
" :ttag:`with` template tag."
msgstr "Pour faire usage du comportement de cache de ``QuerySet``, il peut être nécessaire d'utiliser la balise de gabarit :ttag:`with`."

# 6e319d0e7ac54cb68d8c6e7461c6bc7c
#: ../../topics/db/optimization.txt:102
msgid "Use ``iterator()``"
msgstr "Utilisation de ``iterator()``"

# a6147e4ef6d744fc91df926ee14a300d
#: ../../topics/db/optimization.txt:104
msgid ""
"When you have a lot of objects, the caching behavior of the ``QuerySet`` can"
" cause a large amount of memory to be used. In this case, "
":meth:`~django.db.models.query.QuerySet.iterator()` may help."
msgstr "Lorsque vous manipulez un grand nombre d'objets, le comportement de cache de ``QuerySet`` peut provoquer une grosse utilisation de la mémoire. Dans ce cas, :meth:`~django.db.models.query.QuerySet.iterator()` peut aider."

# 8e95126b45d54ac2a649f3fb0b95d50e
#: ../../topics/db/optimization.txt:109
msgid "Do database work in the database rather than in Python"
msgstr "Travail de base de données en base de données plutôt qu'en Python"

# 3e5cf2b184954bf0b1f76690e3b6781d
#: ../../topics/db/optimization.txt:111
msgid "For instance:"
msgstr "Par exemple :"

# 5aa20fd8720e40bfbf6deedb7864d0e7
#: ../../topics/db/optimization.txt:113
msgid ""
"At the most basic level, use :ref:`filter and exclude <queryset-api>` to do "
"filtering in the database."
msgstr "Au niveau le plus élémentaire, utilisez :ref:`filter et exclude <queryset-api>` pour filtrer au niveau de la base de données."

# f85893cea9b2453ea1d0f63cd37aaa64
#: ../../topics/db/optimization.txt:116
msgid ""
"Use :ref:`F() object query expressions <query-expressions>` to do filtering "
"against other fields within the same model."
msgstr "Utilisez les :ref:`expressions de requête avec objet F() <query-expressions>` pour filtrer en rapport avec d'autres champs à l'intérieur du même modèle."

# c16a511fa8b84cd3811adfbcff823883
#: ../../topics/db/optimization.txt:119
msgid ""
"Use :doc:`annotate to do aggregation in the database "
"</topics/db/aggregation>`."
msgstr "Utilisez les :doc:`annotations pour effectuer le travail d'agrégation dans la base de données </topics/db/aggregation>`."

# b23823c7811942d7af8e039bf4a306de
#: ../../topics/db/optimization.txt:121
msgid "If these aren't enough to generate the SQL you need:"
msgstr "Si ces outils ne suffisent pas à générer le code SQL nécessaire :"

# 72e527eac2c646ce87409ca3d586ed69
#: ../../topics/db/optimization.txt:124
msgid "Use ``QuerySet.extra()``"
msgstr "Utilisation de ``QuerySet.extra()``"

# 703cb81bfbcc4914a638cfc93d479f65
#: ../../topics/db/optimization.txt:126
msgid ""
"A less portable but more powerful method is "
":meth:`~django.db.models.query.QuerySet.extra()`, which allows some SQL to "
"be explicitly added to the query. If that still isn't powerful enough:"
msgstr "Une méthode moins portable mais plus puissante est d'utiliser :meth:`~django.db.models.query.QuerySet.extra()` qui permet d'ajouter explicitement du code SQL dans une requête. Si cela ne suffit toujours pas :"

# 986fb20ec3124d69b9e489a53c50eb2a
#: ../../topics/db/optimization.txt:131
msgid "Use raw SQL"
msgstr "Utilisation de SQL brut"

# 5890ad8e52e846f6943dc3432011df31
#: ../../topics/db/optimization.txt:133
msgid ""
"Write your own :doc:`custom SQL to retrieve data or populate models "
"</topics/db/sql>`. Use ``django.db.connection.queries`` to find out what "
"Django is writing for you and start from there."
msgstr "Écrivez votre :doc:`propre code SQL pour sélectionner des données ou remplir les modèles </topics/db/sql>`. Utilisez ``django.db.connection.queries`` pour examiner ce que Django écrit pour vous et considérez cela comme un point de départ."

# 01b949e8205f453ebaa952fc2dd3ef23
#: ../../topics/db/optimization.txt:138
msgid "Retrieve individual objects using a unique, indexed column"
msgstr "Sélection d'objets individuels en utilisant une colonne unique et indexée"

# eed4acf0e6c946caa7886dac382437ae
#: ../../topics/db/optimization.txt:140
msgid ""
"There are two reasons to use a column with "
":attr:`~django.db.models.Field.unique` or "
":attr:`~django.db.models.Field.db_index` when using "
":meth:`~django.db.models.query.QuerySet.get` to retrieve individual objects."
" First, the query will be quicker because of the underlying database index. "
"Also, the query could run much slower if multiple objects match the lookup; "
"having a unique constraint on the column guarantees this will never happen."
msgstr "Il y a deux raisons d'utiliser une colonne avec :attr:`~django.db.models.Field.unique` ou :attr:`~django.db.models.Field.db_index` lorsqu'on utilise :meth:`~django.db.models.query.QuerySet.get` pour récupérer des objets individuels. Premièrement, la requête sera plus rapide en raison de l'index de base de données. De plus, la requête pourrait s'effectuer beaucoup plus lentement si plusieurs objets correspondent à la recherche ; avec une contrainte d'unicité sur la colonne, vous avez la garantie que cela ne se produira jamais."

# 5a76d41e77574360bf5b750bfdf9d9ef
#: ../../topics/db/optimization.txt:148
msgid "So using the :ref:`example Weblog models <queryset-model-example>`::"
msgstr "Ainsi, en se basant sur les :ref:`modèles d'exemple de Weblog <queryset-model-example>`::"

# 518f315715f34fc0bee49e7acb9795cf
#: ../../topics/db/optimization.txt:152
msgid "will be quicker than:"
msgstr "sera plus rapide que :"

# 4e7adc7c8f3448169a4aaae1dec245b5
#: ../../topics/db/optimization.txt:156
msgid ""
"because ``id`` is indexed by the database and is guaranteed to be unique."
msgstr "parce qu'``id`` est indexé dans la base de données et que son unicité est garantie."

# fdd5574255464f0a8b9c504fbbca796f
#: ../../topics/db/optimization.txt:158
msgid "Doing the following is potentially quite slow:"
msgstr "La ligne suivante est potentiellement très lente :"

# 7cffd8a389c6459ab2c107c082f630d5
#: ../../topics/db/optimization.txt:162
msgid ""
"First of all, ``headline`` is not indexed, which will make the underlying "
"database fetch slower."
msgstr "Tout d'abord, ``headline`` n'est pas indexé, ce qui fait que la base de données sous-jacente prendra plus de temps pour trouver la ligne."

# 27a37ef7a6524c3d8b7723ec276135bc
#: ../../topics/db/optimization.txt:165
msgid ""
"Second, the lookup doesn't guarantee that only one object will be returned. "
"If the query matches more than one object, it will retrieve and transfer all"
" of them from the database. This penalty could be substantial if hundreds or"
" thousands of records are returned. The penalty will be compounded if the "
"database lives on a separate server, where network overhead and latency also"
" play a factor."
msgstr "Deuxièmement, cette recherche ne garantit pas qu'un seul objet sera renvoyé. Si la requête correspond à plus d'un objet, elle va tous les sélectionner et les transférer depuis la base de données. Cette pénalité peut être conséquente si des centaines ou des milliers d'enregistrements sont renvoyés. Ce d'autant plus si la base de données est située sur un autre serveur, là où la latence et le surcoût de la liaison réseau jouent aussi un rôle."

# aafbba2a102b495c964f7b80e1883dca
#: ../../topics/db/optimization.txt:173
msgid "Retrieve everything at once if you know you will need it"
msgstr "Tout récupérer d'un coup quand on en connaît le besoin"

# 2e65e2ba233f438bba760be2d026840a
#: ../../topics/db/optimization.txt:175
msgid ""
"Hitting the database multiple times for different parts of a single 'set' of"
" data that you will need all parts of is, in general, less efficient than "
"retrieving it all in one query. This is particularly important if you have a"
" query that is executed in a loop, and could therefore end up doing many "
"database queries, when only one was needed. So:"
msgstr "Il est en général moins efficace de solliciter la base de données plusieurs fois pour différentes parties d'un ensemble de données que de tout récupérer par une seule requête quand on sait à l'avance que l'on aura besoin du tout. C'est particulièrement important lorsqu'une requête est exécutée dans une boucle et risque au final d'effectuer plusieurs requêtes en base de données alors qu'une seule n'est vraiment nécessaire. Ainsi :"

# cba81c7e4baa4b79baf0ae87e41c11b0
#: ../../topics/db/optimization.txt:182
msgid "Use ``QuerySet.select_related()`` and ``prefetch_related()``"
msgstr "Utilisation de ``QuerySet.select_related()`` et ``prefetch_related()``"

# 39e9b7370688401cae578ea1c3182b30
#: ../../topics/db/optimization.txt:184
msgid ""
"Understand :meth:`~django.db.models.query.QuerySet.select_related` and "
":meth:`~django.db.models.query.QuerySet.prefetch_related` thoroughly, and "
"use them:"
msgstr "Il faut bien comprendre :meth:`~django.db.models.query.QuerySet.select_related` et :meth:`~django.db.models.query.QuerySet.prefetch_related` et les utiliser :"

# 4c77d2dc419d4bb083e5f6c52c936f22
#: ../../topics/db/optimization.txt:188
msgid "in view code,"
msgstr "dans le code des vues ;"

# 4935dde5e2b34612b7f0577c08a8cd50
#: ../../topics/db/optimization.txt:190
msgid ""
"and in :doc:`managers and default managers </topics/db/managers>` where "
"appropriate. Be aware when your manager is and is not used; sometimes this "
"is tricky so don't make assumptions."
msgstr "et dans les :doc:`gestionnaires (par défaut ou non) </topics/db/managers>` lorsque cela fait sens. Ayez conscience des endroits où les gestionnaires sont (ou ne sont pas) utilisés ; ce n'est pas toujours évident de le savoir, ne faites donc pas de simples suppositions."

# 49baeadcf90a4b87818cc8597a95deff
#: ../../topics/db/optimization.txt:195
msgid "Don't retrieve things you don't need"
msgstr "Ne pas récupérer des éléments inutilement"

# e16e7b35ca6d412bb72c3a25a987b2a8
#: ../../topics/db/optimization.txt:198
msgid "Use ``QuerySet.values()`` and ``values_list()``"
msgstr "Utilisation de ``QuerySet.values()`` et ``values_list()``"

# 3e19f36349644fbd9c4ff27f04220697
#: ../../topics/db/optimization.txt:200
msgid ""
"When you just want a ``dict`` or ``list`` of values, and don't need ORM "
"model objects, make appropriate usage of "
":meth:`~django.db.models.query.QuerySet.values()`. These can be useful for "
"replacing model objects in template code - as long as the dicts you supply "
"have the same attributes as those used in the template, you are fine."
msgstr "Lorsque vous ne voulez qu'obtenir un dictionnaire ou une liste de valeurs sans avoir besoin d'objets modèles de l'ORM, faites bon usage de :meth:`~django.db.models.query.QuerySet.values()`. Cette méthode peut être utile pour remplacer des objets modèles dans le code des gabarits ; tant que les dictionnaires résultants possèdent les mêmes attributs que ceux qui sont utilisés dans le gabarit, tout va bien."

# 9ad0cdae58554f8592621fb60446eee3
#: ../../topics/db/optimization.txt:208
msgid "Use ``QuerySet.defer()`` and ``only()``"
msgstr "Utilisation de ``QuerySet.defer()`` et ``only()``"

# cb5f16a32b5441f4bb892b40b6f0b3bf
#: ../../topics/db/optimization.txt:210
msgid ""
"Use :meth:`~django.db.models.query.QuerySet.defer()` and "
":meth:`~django.db.models.query.QuerySet.only()` if there are database "
"columns you know that you won't need (or won't need in most cases) to avoid "
"loading them. Note that if you *do* use them, the ORM will have to go and "
"get them in a separate query, making this a pessimization if you use it "
"inappropriately."
msgstr "Utilisez :meth:`~django.db.models.query.QuerySet.defer()` et :meth:`~django.db.models.query.QuerySet.only()` quand vous savez à l'avance que vous n'aurez pas besoin de certaines colonnes de base de données (ou non utiles dans la plupart des cas) afin d'éviter de les charger. Notez que si vous les utilisez quand même, l'ORM devra les charger à l'aide d'une nouvelle requête, ce qui peut potentiellement aggraver la situation quand cette technique n'est pas utilisée à bon escient."

# d189f7a0ee1743fb99f911228d2edee1
#: ../../topics/db/optimization.txt:216
msgid ""
"Also, be aware that there is some (small extra) overhead incurred inside "
"Django when constructing a model with deferred fields. Don't be too "
"aggressive in deferring fields without profiling as the database has to read"
" most of the non-text, non-VARCHAR data from the disk for a single row in "
"the results, even if it ends up only using a few columns. The ``defer()`` "
"and ``only()`` methods are most useful when you can avoid loading a lot of "
"text data or for fields that might take a lot of processing to convert back "
"to Python. As always, profile first, then optimize."
msgstr "Sachez également qu'il y a un léger surcoût lorsque Django doit construire un modèle avec des champs différés. N'utilisez pas trop agressivement les champs différés sans profilage car la base de données doit lire sur le disque la plupart des données non textuelles et non ``VARCHAR`` d'un enregistrement des résultats, même lorsqu'elle finit par n'exploiter que quelques colonnes. Les méthodes ``defer()`` et ``only()`` sont particulièrement adéquates lorsqu'on peut éviter de charger de grandes quantités de données textuelles ou quand la valeur de certains champs est coûteuse en terme de conversion en Python. Comme toujours, profilez d'abord, optimisez ensuite."

# a3b25385cff5404da77d66076e1f25b3
#: ../../topics/db/optimization.txt:226
msgid "Use QuerySet.count()"
msgstr "Utilisation de QuerySet.count()"

# 3bb909c95b234c718d099650cdaf31e0
#: ../../topics/db/optimization.txt:228
msgid "...if you only want the count, rather than doing ``len(queryset)``."
msgstr "…si vous n'avez besoin que du nombre de lignes, et évitez ``len(queryset)``."

# 7f9b6be0ad8a44d8a8c6e393044bb3c2
#: ../../topics/db/optimization.txt:231
msgid "Use QuerySet.exists()"
msgstr "Utilisation de QuerySet.exists()"

# ca06f1d9dc1f40c6884e71c7427a0338
#: ../../topics/db/optimization.txt:233
msgid ""
"...if you only want to find out if at least one result exists, rather than "
"``if queryset``."
msgstr "…si vous voulez uniquement savoir qu'il y a au moins un résultat, et évitez ``if queryset``."

# dbd16bfdb7934c01abd8fab59f254768
#: ../../topics/db/optimization.txt:236
msgid "But:"
msgstr "Mais :"

# 67ec51f44d2b47b6980e511d0a2b8ab7
#: ../../topics/db/optimization.txt:239
msgid "Don't overuse ``count()`` and ``exists()``"
msgstr "Ne pas abuser de  `count()`` et ``exists()``"

# 9ab5e467a96a49599caa6ce636e0b3b5
#: ../../topics/db/optimization.txt:241
msgid ""
"If you are going to need other data from the QuerySet, just evaluate it."
msgstr "Si vous allez avoir besoin de données réelles du QuerySet, autant l'évaluer."

# 5f832127720645cf97ecd03450d23380
#: ../../topics/db/optimization.txt:243
msgid ""
"For example, assuming an Email model that has a ``body`` attribute and a "
"many-to-many relation to User, the following template code is optimal:"
msgstr "Par exemple, si on dispose d'un modèle Email ayant un attribut ``body`` et une relation plusieurs-à-plusieurs vers ``User``, le code de gabarit suivant est optimal :"

# dbc5151406f9471d93e1b8303c0731a6
#: ../../topics/db/optimization.txt:262
msgid "It is optimal because:"
msgstr "Il est optimal car :"

# 0a1d9961b0f04df39080cc6b0519e8ab
#: ../../topics/db/optimization.txt:264
msgid ""
"Since QuerySets are lazy, this does no database queries if 'display_inbox' "
"is False."
msgstr "Comme les objets QuerySet sont différés, aucune requête de base de données n'est exécutée si 'display_inbox' vaut False."

# a1cb0159fcea4efdabfe101a602b5f78
#: ../../topics/db/optimization.txt:267
msgid ""
"Use of :ttag:`with` means that we store ``user.emails.all`` in a variable "
"for later use, allowing its cache to be re-used."
msgstr "L'emploi de :ttag:`with` signifie que nous stockons ``user.emails.all`` dans une variable pour usage ultérieur, permettant ainsi de réutiliser son cache."

# d71e1e1da50440c6829ecc28e6b76bb5
#: ../../topics/db/optimization.txt:270
msgid ""
"The line ``{% if emails %}`` causes ``QuerySet.__bool__()`` to be called, "
"which causes the ``user.emails.all()`` query to be run on the database, and "
"at the least the first line to be turned into an ORM object. If there aren't"
" any results, it will return False, otherwise True."
msgstr "La ligne ``{% if emails %}`` provoque l'appel à ``QuerySet.__bool__()``, ce qui provoque aussi l'exécution de la requête ``user.emails.all()`` dans la base de données et la construction du premier résultat au moins comme objet ORM. S'il n'y a pas de résultats, elle renvoie False, sinon True."

# f2d43350ca6b4529a86e0cce23b0a1cf
#: ../../topics/db/optimization.txt:275
msgid ""
"The use of ``{{ emails|length }}`` calls ``QuerySet.__len__()``, filling out"
" the rest of the cache without doing another query."
msgstr "L'emploi de ``{{ emails|length }}`` appelle ``QuerySet.__len__()``, ce qui remplit le reste du cache sans effectuer de nouvelle requête."

# b3896c7b7209458cad25a76aa768de11
#: ../../topics/db/optimization.txt:278
msgid "The :ttag:`for` loop iterates over the already filled cache."
msgstr "La boucle :ttag:`for` utilise les données déjà en cache."

# 09c0ebf0f4a44e03af241e8043db8cfc
#: ../../topics/db/optimization.txt:280
msgid ""
"In total, this code does either one or zero database queries. The only "
"deliberate optimization performed is the use of the :ttag:`with` tag. Using "
"``QuerySet.exists()`` or ``QuerySet.count()`` at any point would cause "
"additional queries."
msgstr "Au total, le code effectue une ou zéro requête de base de données. La seule optimisation explicite effectuée est l'emploi de la balise :ttag:`with`. Si on avait utilisé ``QuerySet.exists()`` ou ``QuerySet.count()`` à n'importe quel endroit, cela aurait généré des requêtes supplémentaires."

# 4a96083664d546f8bc73415c2ffad975
#: ../../topics/db/optimization.txt:286
msgid "Use ``QuerySet.update()`` and ``delete()``"
msgstr "Utilisation de ``QuerySet.update()`` et ``delete()``"

# 2c943bac292b457ba8f484630f413473
#: ../../topics/db/optimization.txt:288
msgid ""
"Rather than retrieve a load of objects, set some values, and save them "
"individual, use a bulk SQL UPDATE statement, via :ref:`QuerySet.update() "
"<topics-db-queries-update>`. Similarly, do :ref:`bulk deletes <topics-db-"
"queries-delete>` where possible."
msgstr "Plutôt que de récupérer un ensemble d'objets, de définir certaines valeurs et de les enregistrer individuellement, utilisez une instruction SQL UPDATE groupée au moyen de :ref:`QuerySet.update() <topics-db-queries-update>`. De la même façon, effectuez des :ref:`suppressions groupées <topics-db-queries-delete>` chaque fois que c'est possible."

# 99b0fd511088404c999b769e02f85f3a
#: ../../topics/db/optimization.txt:293
msgid ""
"Note, however, that these bulk update methods cannot call the ``save()`` or "
"``delete()`` methods of individual instances, which means that any custom "
"behavior you have added for these methods will not be executed, including "
"anything driven from the normal database object :doc:`signals "
"</ref/signals>`."
msgstr "Notez cependant que des méthodes de mise à jour groupées ne peuvent pas appeler les méthodes ``save()`` et ``delete()`` des instances individuelles, ce qui signifie que tout comportement spécialisé que vous auriez ajouté avec ces méthodes ne sera pas exécuté, y compris tout ce qui découle de l'utilisation des :doc:`signaux </ref/signals>` attachés aux objets de base de données."

# 58e7095fcfd34b929000118b6d43c107
#: ../../topics/db/optimization.txt:299
msgid "Use foreign key values directly"
msgstr "Utilisation directe de valeurs de clé étrangère"

# 215f4e6f2e084b52aa82b4153f3bb284
#: ../../topics/db/optimization.txt:301
msgid ""
"If you only need a foreign key value, use the foreign key value that is "
"already on the object you've got, rather than getting the whole related "
"object and taking its primary key. i.e. do::"
msgstr "Si vous n'avez besoin que de la valeur d'une clé étrangère, utilisez la valeur qui est déjà stockée dans l'objet que vous manipulez, plutôt que de récupérer tout l'objet lié pour simplement disposer de sa clé primaire. Par exemple, faites ::"

# 6de5cf6d0883432bb7ca5cd0fbd710cc
#: ../../topics/db/optimization.txt:307
msgid "instead of::"
msgstr "au lieu de ::"

# 162dbb0638bc4fde96e1234895361e5c
#: ../../topics/db/optimization.txt:312
msgid "Don't order results if you don't care"
msgstr ""

# 2ecea50121ef412e91fbc50a047c586e
#: ../../topics/db/optimization.txt:314
msgid ""
"Ordering is not free; each field to order by is an operation the database "
"must perform. If a model has a default ordering (:attr:`Meta.ordering "
"<django.db.models.Options.ordering>`) and you don't need it, remove it on a "
"``QuerySet`` by calling :meth:`~django.db.models.query.QuerySet.order_by()` "
"with no parameters."
msgstr ""

# c76959871c264d7db2b9d436d05f3c28
#: ../../topics/db/optimization.txt:320
msgid ""
"Adding an index to your database may help to improve ordering performance."
msgstr ""

# d7f0008c182146beaa60a3d71f26046d
#: ../../topics/db/optimization.txt:323
msgid "Insert in bulk"
msgstr "Insertion groupée"

# 6509ba77a7ff499c80fd686c5951c573
#: ../../topics/db/optimization.txt:325
msgid ""
"When creating objects, where possible, use the "
":meth:`~django.db.models.query.QuerySet.bulk_create()` method to reduce the "
"number of SQL queries. For example::"
msgstr "Lors de la création d'objets, utilisez si possible la méthode :meth:`~django.db.models.query.QuerySet.bulk_create()` pour réduire le nombre de requêtes SQL. Par exemple ::"

# d4778bab80ef4f0ba21171921b3f2038
# 20779129e51d4bb78519b4b935599848
#: ../../topics/db/optimization.txt:334 ../../topics/db/optimization.txt:348
msgid "...is preferable to::"
msgstr "…est préférable à ::"

# 796517702c174e6a8400638d701227b1
#: ../../topics/db/optimization.txt:339
msgid ""
"Note that there are a number of :meth:`caveats to this method "
"<django.db.models.query.QuerySet.bulk_create>`, so make sure it's "
"appropriate for your use case."
msgstr "Notez qu'il existe un certain nombre de :meth:`restrictions à cette méthode <django.db.models.query.QuerySet.bulk_create>`, il s'agit donc de s'assurer qu'elle correspond à votre cas d'utilisation."

# 36d9934ff1aa47adbead90b2615c6102
#: ../../topics/db/optimization.txt:343
msgid ""
"This also applies to :class:`ManyToManyFields "
"<django.db.models.ManyToManyField>`, so doing::"
msgstr "Cela s'applique aussi aux champs :class:`ManyToManyFields <django.db.models.ManyToManyField>`, ce qui fait que ::"

# 883d5dc6b6c24e098de4549c7cb45605
#: ../../topics/db/optimization.txt:353
msgid "...where ``Bands`` and ``Artists`` have a many-to-many relationship."
msgstr "…où ``Bands`` et ``Artists`` sont liés par une relation plusieurs-à-plusieurs."

# 4353af440a3b45d9a5f4a6a35f99f79d
#: ../../topics/db/queries.txt:3
msgid "Making queries"
msgstr "Création de requêtes"

# 7fd14aaa69e44d50852961d8c2594bb4
#: ../../topics/db/queries.txt:7
msgid ""
"Once you've created your :doc:`data models </topics/db/models>`, Django "
"automatically gives you a database-abstraction API that lets you create, "
"retrieve, update and delete objects. This document explains how to use this "
"API. Refer to the :doc:`data model reference </ref/models/index>` for full "
"details of all the various model lookup options."
msgstr "Une fois les :doc:`modèles de données </topics/db/models>` créés, Django offre automatiquement une API d'abstraction de base de données qui permet de créer, obtenir, mettre à jour et supprimer des objets. Ce document explique comment utiliser cette API. Consultez la :doc:`référence des modèles de données </ref/models/index>` pour des détails complets sur toutes les options d'interrogation des modèles."

# 79e4b4537b1f4a4289565354f40d840e
#: ../../topics/db/queries.txt:13
msgid ""
"Throughout this guide (and in the reference), we'll refer to the following "
"models, which comprise a Weblog application:"
msgstr "À travers ce guide (et dans la référence), nous nous référons aux modèles suivants, qui forment une application de blog :"

# b6b881a263ff49debf8c56dedc6e4022
#: ../../topics/db/queries.txt:54
msgid "Creating objects"
msgstr "Création d'objets"

# 5ecb3f5717f745599c282e3475920f7f
#: ../../topics/db/queries.txt:56
msgid ""
"To represent database-table data in Python objects, Django uses an intuitive"
" system: A model class represents a database table, and an instance of that "
"class represents a particular record in the database table."
msgstr "Pour représenter des données d'une table de base de données en objets Python, Django utilise un système intuitif : une classe de modèle représente une table de base de données, et une instance de cette classe représente un enregistrement particulier dans la table de base de données."

# 338e8d04c630466da05bdb836c20b17b
#: ../../topics/db/queries.txt:60
msgid ""
"To create an object, instantiate it using keyword arguments to the model "
"class, then call :meth:`~django.db.models.Model.save` to save it to the "
"database."
msgstr "Pour créer un objet, créez une instance de la classe de modèle en utilisant des paramètres nommés, puis appelez :meth:`~django.db.models.Model.save` pour l'enregistrer dans la base de données."

# da3253c80b01496e9d30b6228f4bdaca
#: ../../topics/db/queries.txt:63
msgid ""
"You import the model class from wherever it lives on the Python path, as you"
" may expect. (We point this out here because previous Django versions "
"required funky model importing.)"
msgstr "Vous importez la classe de modèle à partir de son emplacement dans le chemin Python, de façon habituelle\n(nous le soulignons ici car des versions précédentes de Django nécessitaient une méthode particulière d'importation de modèle)."

# 625b7a5c812b4fe682bad99309b0893e
#: ../../topics/db/queries.txt:67
msgid ""
"Assuming models live in a file ``mysite/blog/models.py``, here's an "
"example::"
msgstr "En supposant que les modèles se trouvent dans un fichier ``mysite/blog/models.py``, voici un exemple ::"

# 9f9bc0cb979b42b8b263d30b3c163b02
#: ../../topics/db/queries.txt:73
msgid ""
"This performs an ``INSERT`` SQL statement behind the scenes. Django doesn't "
"hit the database until you explicitly call "
":meth:`~django.db.models.Model.save`."
msgstr "Ceci exécute une commande SQL ``INSERT`` en arrière-plan. Django ne sollicite pas la base de données tant que vous n'appelez pas explicitement :meth:`~django.db.models.Model.save`."

# 7e4d47e14595450f915fceeb2418efb0
#: ../../topics/db/queries.txt:76
msgid "The :meth:`~django.db.models.Model.save` method has no return value."
msgstr "La méthode :meth:`~django.db.models.Model.save` ne renvoie aucune valeur."

# 17df160baf2f4afeba5f1ac22087ec22
#: ../../topics/db/queries.txt:80
msgid ""
":meth:`~django.db.models.Model.save` takes a number of advanced options not "
"described here. See the documentation for "
":meth:`~django.db.models.Model.save` for complete details."
msgstr ":meth:`~django.db.models.Model.save` accepte un certain nombre d'options avancées décrites ailleurs. Consultez la documentation de :meth:`~django.db.models.Model.save` pour les détails complets."

# d7bca5407da6498f94def8dabc5e7a3d
#: ../../topics/db/queries.txt:84
msgid ""
"To create and save an object in a single step, use the "
":meth:`~django.db.models.query.QuerySet.create()` method."
msgstr "Pour créer et enregistrer un objet en une seule étape, utilisez la méthode :meth:`~django.db.models.query.QuerySet.create()`."

# 5caa9ce3e14e405185843e55dc52a7c6
#: ../../topics/db/queries.txt:88
msgid "Saving changes to objects"
msgstr "Enregistrement des modifications d'objets"

# 856820124fba442caeaaaa612af86234
#: ../../topics/db/queries.txt:90
msgid ""
"To save changes to an object that's already in the database, use "
":meth:`~django.db.models.Model.save`."
msgstr "Pour enregistrer les modifications d'un objet existant dans la base de données, utilisez :meth:`~django.db.models.Model.save`."

# 35126d922564435387fbb819d20c2815
#: ../../topics/db/queries.txt:93
msgid ""
"Given a ``Blog`` instance ``b5`` that has already been saved to the "
"database, this example changes its name and updates its record in the "
"database::"
msgstr "Considérant une instance ``b5`` d'un ``Blog`` ayant déjà été enregistrée dans la base de données, cet exemple modifie son nom et met à jour son enregistrement dans la base de données ::"

# 1e572eace0934b5b9b664d150402b69e
#: ../../topics/db/queries.txt:99
msgid ""
"This performs an ``UPDATE`` SQL statement behind the scenes. Django doesn't "
"hit the database until you explicitly call "
":meth:`~django.db.models.Model.save`."
msgstr "Ceci génère une commande SQL ``UPDATE`` en arrière-plan. Django ne sollicite pas la base de données tant que vous n'appelez pas explicitement :meth:`~django.db.models.Model.save`."

# ed656a00087a4d07a60a120aa8ece9e0
#: ../../topics/db/queries.txt:103
msgid "Saving ``ForeignKey`` and ``ManyToManyField`` fields"
msgstr "Enregistrement des champs ``ForeignKey`` et ``ManyToManyField``"

# 9178afd12b754737ac61bb5af0be0a32
#: ../../topics/db/queries.txt:105
msgid ""
"Updating a :class:`~django.db.models.ForeignKey` field works exactly the "
"same way as saving a normal field -- simply assign an object of the right "
"type to the field in question. This example updates the ``blog`` attribute "
"of an ``Entry`` instance ``entry``, assuming appropriate instances of "
"``Entry`` and ``Blog`` are already saved to the database (so we can retrieve"
" them below)::"
msgstr "La mise à jour d'un champ :class:`~django.db.models.ForeignKey` fonctionne exactement de la même façon que l'enregistrement d'un champ normal, il suffit d'attribuer un objet du bon type au champ en question. Cet exemple met à jour l'attribut ``blog`` d'une instance ``Entry`` nommée ``entry``, en supposant que les instances appropriées de ``Entry`` et de ``Blog`` sont déjà enregistrées dans la base de données (afin de pouvoir être récupérées ci-dessous) ::"

# f84cffe43b98442299fbdbfa770a4741
#: ../../topics/db/queries.txt:117
msgid ""
"Updating a :class:`~django.db.models.ManyToManyField` works a little "
"differently -- use the "
":meth:`~django.db.models.fields.related.RelatedManager.add` method on the "
"field to add a record to the relation. This example adds the ``Author`` "
"instance ``joe`` to the ``entry`` object::"
msgstr "La mise à jour d'un champ :class:`~django.db.models.ManyToManyField` fonctionne un peu différemment ; utilisez la méthode :meth:`~django.db.models.fields.related.RelatedManager.add` du champ pour ajouter un enregistrement à la relation. Cet exemple ajoute l'instance ``Author`` ``joe`` à l'objet ``entry``::"

# 20bfdcc40c6c402ebab192a35e27bb7d
#: ../../topics/db/queries.txt:127
msgid ""
"To add multiple records to a :class:`~django.db.models.ManyToManyField` in "
"one go, include multiple arguments in the call to "
":meth:`~django.db.models.fields.related.RelatedManager.add`, like this::"
msgstr "Pour ajouter plusieurs enregistrements à un champ :class:`~django.db.models.ManyToManyField` d'un seul coup, indiquez plusieurs paramètres dans l'appel à :meth:`~django.db.models.fields.related.RelatedManager.add`, comme ceci ::"

# 2bb402ae1c2d410896e8cdfbd3288810
#: ../../topics/db/queries.txt:137
msgid ""
"Django will complain if you try to assign or add an object of the wrong "
"type."
msgstr "Django se plaint si vous essayez d'assigner ou d'ajouter un objet de type inapproprié."

# 3fc0a87c5e194d36bd3c3a2875e0dcdf
#: ../../topics/db/queries.txt:140
msgid "Retrieving objects"
msgstr "Sélection d'objets"

# 7b82d66640464653937f6339cd910eb1
#: ../../topics/db/queries.txt:142
msgid ""
"To retrieve objects from your database, construct a "
":class:`~django.db.models.query.QuerySet` via a "
":class:`~django.db.models.Manager` on your model class."
msgstr "Pour extraire des objets de la base de données, construisez un :class:`~django.db.models.query.QuerySet` via un :class:`~django.db.models.Manager` de la classe de votre modèle."

# 382be60efb974c58bbc685c3d8280890
#: ../../topics/db/queries.txt:146
msgid ""
"A :class:`~django.db.models.query.QuerySet` represents a collection of "
"objects from your database. It can have zero, one or many *filters*. Filters"
" narrow down the query results based on the given parameters. In SQL terms, "
"a :class:`~django.db.models.query.QuerySet` equates to a ``SELECT`` "
"statement, and a filter is a limiting clause such as ``WHERE`` or ``LIMIT``."
msgstr ""

# 55c4f97ae0404ae2a3158958ced6c7e0
#: ../../topics/db/queries.txt:152
msgid ""
"You get a :class:`~django.db.models.query.QuerySet` by using your model's "
":class:`~django.db.models.Manager`. Each model has at least one "
":class:`~django.db.models.Manager`, and it's called ``objects`` by default. "
"Access it directly via the model class, like so::"
msgstr "On obtient un :class:`~django.db.models.query.QuerySet` en utilisant le :class:`~django.db.models.Manager` du modèle. Chaque modèle a au moins un :class:`~django.db.models.Manager` ; il s'appelle ``objects`` par défaut. On y accède \ndirectement via la classe du modèle, comme ceci ::"

# 12d1566ada864512bc455f419a2244f8
#: ../../topics/db/queries.txt:167
msgid ""
"``Managers`` are accessible only via model classes, rather than from model "
"instances, to enforce a separation between \"table-level\" operations and "
"\"record-level\" operations."
msgstr "Les ``Managers`` ne sont accessibles que par les classes de modèle et non par les instances de modèle, afin d'accentuer la séparation entre les opérations sur les « tables » et les opérations sur les « enregistrements »."

# 16d345a5d7294d699aff280a8af88f5d
#: ../../topics/db/queries.txt:171
msgid ""
"The :class:`~django.db.models.Manager` is the main source of ``QuerySets`` "
"for a model. For example, ``Blog.objects.all()`` returns a "
":class:`~django.db.models.query.QuerySet` that contains all ``Blog`` objects"
" in the database."
msgstr "Le :class:`~django.db.models.Manager` est la source principale des ``QuerySets`` d'un modèle. Par exemple, ``Blog.objects.all()`` renvoie un :class:`~django.db.models.query.QuerySet` contenant tous les objets ``Blog`` de la base de données."

# 5b0504c8c9d84c2ab2c87279426e99b1
#: ../../topics/db/queries.txt:177
msgid "Retrieving all objects"
msgstr "Sélection de tous les objets"

# e01309ef84fc484fb5d8540239bb7c9d
#: ../../topics/db/queries.txt:179
msgid ""
"The simplest way to retrieve objects from a table is to get all of them. To "
"do this, use the :meth:`~django.db.models.query.QuerySet.all` method on a "
":class:`~django.db.models.Manager`::"
msgstr "La façon la plus simple d'obtenir des objets d'une table est de tous les sélectionner. Pour ce faire, utilisez la méthode :meth:`~django.db.models.query.QuerySet.all` d'un :class:`~django.db.models.Manager`::"

# 21ae7d1b12e44f16a8277d3391cff17a
#: ../../topics/db/queries.txt:185
msgid ""
"The :meth:`~django.db.models.query.QuerySet.all` method returns a "
":class:`~django.db.models.query.QuerySet` of all the objects in the "
"database."
msgstr "La méthode :meth:`~django.db.models.query.QuerySet.all` renvoie un :class:`~django.db.models.query.QuerySet` de tous les objets dans la base de données."

# 5ccfcee6964a4ed2bd4610a6e0f8f4ce
#: ../../topics/db/queries.txt:189
msgid "Retrieving specific objects with filters"
msgstr "Sélection d'objets spécifiques avec les filtres"

# 45b70912999d4405a22ea1a708a3dbf8
#: ../../topics/db/queries.txt:191
msgid ""
"The :class:`~django.db.models.query.QuerySet` returned by "
":meth:`~django.db.models.query.QuerySet.all` describes all objects in the "
"database table. Usually, though, you'll need to select only a subset of the "
"complete set of objects."
msgstr "Le :class:`~django.db.models.query.QuerySet` renvoyé par :meth:`~django.db.models.query.QuerySet.all` contient tous les objets de la table de la base de données. Mais le plus souvent, seul un sous-ensemble de tous les objets devra être sélectionné."

# cb21888fd299484f8408dfc3cfc9c439
#: ../../topics/db/queries.txt:196
msgid ""
"To create such a subset, you refine the initial "
":class:`~django.db.models.query.QuerySet`, adding filter conditions. The two"
" most common ways to refine a :class:`~django.db.models.query.QuerySet` are:"
msgstr "Pour créer un tel sous-ensemble, vous affinez le :class:`~django.db.models.query.QuerySet` initial en \ny ajoutant des filtres de conditions. Les deux façons les plus utilisées pour affiner un :class:`~django.db.models.query.QuerySet` sont :"

# 0c57f36054694023b73384505ae5bd61
#: ../../topics/db/queries.txt:202
msgid "``filter(**kwargs)``"
msgstr "``filter(**kwargs)``"

# 064a278acb56418e9a22672078276b1c
#: ../../topics/db/queries.txt:201
msgid ""
"Returns a new :class:`~django.db.models.query.QuerySet` containing objects "
"that match the given lookup parameters."
msgstr "Renvoie un nouveau :class:`~django.db.models.query.QuerySet` contenant les objets qui répondent aux paramètres de recherche donnés."

# c73fcb0b366341ffb0c020f125fe3f79
#: ../../topics/db/queries.txt:206
msgid "``exclude(**kwargs)``"
msgstr "``exclude(**kwargs)``"

# 74cc2aacfd2b400fbed61def26c14269
#: ../../topics/db/queries.txt:205
msgid ""
"Returns a new :class:`~django.db.models.query.QuerySet` containing objects "
"that do *not* match the given lookup parameters."
msgstr "Renvoie un nouveau :class:`~django.db.models.query.QuerySet` contenant les objets qui ne répondent *pas* aux paramètres de recherche donnés."

# 1e29641b3cb14893a7e3d4ee90b4d150
#: ../../topics/db/queries.txt:208
msgid ""
"The lookup parameters (``**kwargs`` in the above function definitions) "
"should be in the format described in `Field lookups`_ below."
msgstr "Les paramètres de recherche (``**kwargs`` dans les définitions de fonction ci-dessus) doivent être dans le format décrit dans `Recherches dans les champs`_ ci-dessous."

# dbfc135174e245739f23cfe89dc5910c
#: ../../topics/db/queries.txt:211
msgid ""
"For example, to get a :class:`~django.db.models.query.QuerySet` of blog "
"entries from the year 2006, use "
":meth:`~django.db.models.query.QuerySet.filter` like so::"
msgstr "Par exemple, pour obtenir un :class:`~django.db.models.query.QuerySet` des articles de blog de l'année 2006, utilisez :meth:`~django.db.models.query.QuerySet.filter` comme ceci ::"

# fbf5c12083a146cb9952ddb225e980a0
#: ../../topics/db/queries.txt:217
msgid "With the default manager class, it is the same as::"
msgstr "Avec la classe de gestionnaire par défaut, c'est équivalent à ::"

# 56e34818e8c24d2586cff211cb435f9e
#: ../../topics/db/queries.txt:224
msgid "Chaining filters"
msgstr "Enchaînement des filtres"

# 5451c2f3f96144ef95d4b3b2d10b618f
#: ../../topics/db/queries.txt:226
msgid ""
"The result of refining a :class:`~django.db.models.query.QuerySet` is itself"
" a :class:`~django.db.models.query.QuerySet`, so it's possible to chain "
"refinements together. For example::"
msgstr "Le résultat de l'affinage d'un :class:`~django.db.models.query.QuerySet` est lui-même un :class:`~django.db.models.query.QuerySet`, il est donc possible d'enchaîner les filtrages successifs. Par exemple ::"

# bd1810c5eed04935b8f842b1bf055789
#: ../../topics/db/queries.txt:238
msgid ""
"This takes the initial :class:`~django.db.models.query.QuerySet` of all "
"entries in the database, adds a filter, then an exclusion, then another "
"filter. The final result is a :class:`~django.db.models.query.QuerySet` "
"containing all entries with a headline that starts with \"What\", that were "
"published between January 30, 2005, and the current day."
msgstr "À partir du :class:`~django.db.models.query.QuerySet` initial de toutes les lignes dans la base de données, le code ci-dessus ajoute un filtre, puis une exclusion, puis un autre filtre. Le résultat final est un :class:`~django.db.models.query.QuerySet` contenant tous les enregistrements ayant un titre (``headline``) commençant par « What », ayant été publiés entre le 30 janvier 2005 et aujourd'hui."

# 732865eb89184c5688c9b5944f94bd3b
#: ../../topics/db/queries.txt:247
msgid "Filtered QuerySets are unique"
msgstr "Les QuerySets filtrés sont uniques"

# 0ef0472e4d814853b2b1a21a47f438a9
#: ../../topics/db/queries.txt:249
msgid ""
"Each time you refine a :class:`~django.db.models.query.QuerySet`, you get a "
"brand-new :class:`~django.db.models.query.QuerySet` that is in no way bound "
"to the previous :class:`~django.db.models.query.QuerySet`. Each refinement "
"creates a separate and distinct :class:`~django.db.models.query.QuerySet` "
"that can be stored, used and reused."
msgstr "À chaque fois que vous affinez un :class:`~django.db.models.query.QuerySet`, vous obtenez un :class:`~django.db.models.query.QuerySet` tout neuf qui n'est lié d'aucune manière au :class:`~django.db.models.query.QuerySet` précédent. Chaque affinage crée un :class:`~django.db.models.query.QuerySet` séparé et distinct qui peut être stocké, utilisé et réutilisé."

# a23a48347d594e018dc243468d34dd44
#: ../../topics/db/queries.txt:261
msgid ""
"These three ``QuerySets`` are separate. The first is a base "
":class:`~django.db.models.query.QuerySet` containing all entries that "
"contain a headline starting with \"What\". The second is a subset of the "
"first, with an additional criteria that excludes records whose ``pub_date`` "
"is today or in the future. The third is a subset of the first, with an "
"additional criteria that selects only the records whose ``pub_date`` is "
"today or in the future. The initial "
":class:`~django.db.models.query.QuerySet` (``q1``) is unaffected by the "
"refinement process."
msgstr ""

# 7e571475ac31454b84135a58d3ee86d6
#: ../../topics/db/queries.txt:273
msgid "QuerySets are lazy"
msgstr "Les QuerySets sont différés"

# 8a4cdab725524460b1de011e425ae160
#: ../../topics/db/queries.txt:275
msgid ""
"``QuerySets`` are lazy -- the act of creating a "
":class:`~django.db.models.query.QuerySet` doesn't involve any database "
"activity. You can stack filters together all day long, and Django won't "
"actually run the query until the :class:`~django.db.models.query.QuerySet` "
"is *evaluated*. Take a look at this example::"
msgstr "Les ``QuerySets`` sont différés (« lazy ») ; la création d'un :class:`~django.db.models.query.QuerySet` ne génère aucune activité au niveau de la base de données. Vous pouvez empiler les filtres toute la journée, Django ne lance aucune requête tant \nque le :class:`~django.db.models.query.QuerySet` n'est pas *évalué*. Regardez cet exemple ::"

# 0e16c818990941d3a9f864b174350482
#: ../../topics/db/queries.txt:286
msgid ""
"Though this looks like three database hits, in fact it hits the database "
"only once, at the last line (``print(q)``). In general, the results of a "
":class:`~django.db.models.query.QuerySet` aren't fetched from the database "
"until you \"ask\" for them. When you do, the "
":class:`~django.db.models.query.QuerySet` is *evaluated* by accessing the "
"database. For more details on exactly when evaluation takes place, see :ref"
":`when-querysets-are-evaluated`."
msgstr "Malgré le fait que ceci ressemble à trois interrogations de la base de données, en réalité une seule interrogation est faite, à la dernière ligne (``print(q)``). En général, les résultats d'un :class:`~django.db.models.query.QuerySet` ne sont récupérés de la base de données que lorsque vous les « demandez ». Lorsque cela arrive, le :class:`~django.db.models.query.QuerySet` est *évalué* en accédant à la base de données. Pour plus de détails sur le moment exact où l'évaluation a lieu, consultez :ref:`when-querysets-are-evaluated`."

# a0a5fe59954e4bf0a1f2f6181db78769
#: ../../topics/db/queries.txt:298
msgid "Retrieving a single object with get"
msgstr "Sélection d'un objet unique avec get"

# 9cd1b175778a4a40b36f9186d6496deb
#: ../../topics/db/queries.txt:300
msgid ""
":meth:`~django.db.models.query.QuerySet.filter` will always give you a "
":class:`~django.db.models.query.QuerySet`, even if only a single object "
"matches the query - in this case, it will be a "
":class:`~django.db.models.query.QuerySet` containing a single element."
msgstr ":meth:`~django.db.models.query.QuerySet.filter` renvoie toujours un :class:`~django.db.models.query.QuerySet`, même si la requête ne renvoie qu'un seul objet ; dans ce cas, le :class:`~django.db.models.query.QuerySet` ne contiendra simplement qu'un seul élément."

# 17076c3976c7402f98e00d71644d35be
#: ../../topics/db/queries.txt:305
msgid ""
"If you know there is only one object that matches your query, you can use "
"the :meth:`~django.db.models.query.QuerySet.get` method on a "
":class:`~django.db.models.Manager` which returns the object directly::"
msgstr "Si vous savez qu'un seul objet correspondra à votre requête, vous pouvez utiliser la méthode :meth:`~django.db.models.query.QuerySet.get` d'un :class:`~django.db.models.Manager` qui renvoie directement l'objet ::"

# cd3c2eb0485948dea6f51942be6156bd
#: ../../topics/db/queries.txt:311
msgid ""
"You can use any query expression with "
":meth:`~django.db.models.query.QuerySet.get`, just like with "
":meth:`~django.db.models.query.QuerySet.filter` - again, see `Field "
"lookups`_ below."
msgstr "N'importe quelle expression de recherche peut être utilisée avec :meth:`~django.db.models.query.QuerySet.get`, comme pour :meth:`~django.db.models.query.QuerySet.filter`. Voir  `Recherches dans les champs`_ ci-dessous."

# 0a6db0e23f96421fa93f36fcd735e4c5
#: ../../topics/db/queries.txt:316
msgid ""
"Note that there is a difference between using "
":meth:`~django.db.models.query.QuerySet.get`, and using "
":meth:`~django.db.models.query.QuerySet.filter` with a slice of ``[0]``. If "
"there are no results that match the query, "
":meth:`~django.db.models.query.QuerySet.get` will raise a ``DoesNotExist`` "
"exception. This exception is an attribute of the model class that the query "
"is being performed on - so in the code above, if there is no ``Entry`` "
"object with a primary key of 1, Django will raise ``Entry.DoesNotExist``."
msgstr "Notez qu'il y a une différence entre l'utilisation de :meth:`~django.db.models.query.QuerySet.get` et celle de :meth:`~django.db.models.query.QuerySet.filter` avec le segment ``[0]``. Si aucun résultat ne correspond à la requête, :meth:`~django.db.models.query.QuerySet.get` génère une exception ``DoesNotExist``. Cette exception est un attribut de la classe de modèle sur laquelle la requête est appliquée ; ainsi, dans le code ci-dessus, s'il n'existe pas d'objet ``Entry`` avec une clé primaire de 1, Django génère "

# d60c54e1d82b4489bca5e8536c3aec9b
#: ../../topics/db/queries.txt:325
msgid ""
"Similarly, Django will complain if more than one item matches the "
":meth:`~django.db.models.query.QuerySet.get` query. In this case, it will "
"raise :exc:`~django.core.exceptions.MultipleObjectsReturned`, which again is"
" an attribute of the model class itself."
msgstr "De même, Django réagit si plus d'un élément correspond à la requête :meth:`~django.db.models.query.QuerySet.get`. Dans ce cas, il lève l'exception :exc:`~django.core.exceptions.MultipleObjectsReturned` qui est également un attribut de la classe de modèle elle-même."

# 4c01d83c1227432ca77d2e0026630925
#: ../../topics/db/queries.txt:332
msgid "Other QuerySet methods"
msgstr "Autres méthodes de QuerySet"

# c57af8eaf6e64aa8973630f2a9b73f69
#: ../../topics/db/queries.txt:334
msgid ""
"Most of the time you'll use :meth:`~django.db.models.query.QuerySet.all`, "
":meth:`~django.db.models.query.QuerySet.get`, "
":meth:`~django.db.models.query.QuerySet.filter` and "
":meth:`~django.db.models.query.QuerySet.exclude` when you need to look up "
"objects from the database. However, that's far from all there is; see the "
":ref:`QuerySet API Reference <queryset-api>` for a complete list of all the "
"various :class:`~django.db.models.query.QuerySet` methods."
msgstr "La plupart du temps, vous utiliserez :meth:`~django.db.models.query.QuerySet.all`, :meth:`~django.db.models.query.QuerySet.get`, :meth:`~django.db.models.query.QuerySet.filter` et :meth:`~django.db.models.query.QuerySet.exclude` lorsque vous aurez besoin de sélectionner des objets dans la base de données. Cependant, c'est loin d'être tout ; consultez la :ref:`référence de l'API QuerySet <queryset-api>` pour une liste complète des diverses méthodes de :class:`~django.db.models.query.QuerySet`."

# 6fbfc2d345074effb662c750565d9594
#: ../../topics/db/queries.txt:345
msgid "Limiting QuerySets"
msgstr "Limitation des QuerySets"

# 90320266a2af4e7e80e62ba0c4aba574
#: ../../topics/db/queries.txt:347
msgid ""
"Use a subset of Python's array-slicing syntax to limit your "
":class:`~django.db.models.query.QuerySet` to a certain number of results. "
"This is the equivalent of SQL's ``LIMIT`` and ``OFFSET`` clauses."
msgstr "Utilisez un sous-ensemble de la syntaxe Python de segmentation des listes pour restreindre un :class:`~django.db.models.query.QuerySet` à un certain nombre de résultats. C'est l'équivalent des clauses SQL ``LIMIT`` et ``OFFSET``."

# 566ff04a51b447b2bbd8cd63d576bd86
#: ../../topics/db/queries.txt:351
msgid "For example, this returns the first 5 objects (``LIMIT 5``)::"
msgstr "Par exemple, ceci renvoie les 5 premiers objets (``LIMIT 5``) ::"

# e9b736b5a03d425ab27dbc4a0160514e
#: ../../topics/db/queries.txt:355
msgid "This returns the sixth through tenth objects (``OFFSET 5 LIMIT 5``)::"
msgstr "Ceci renvoie du sixième au dixième objet  (``OFFSET 5 LIMIT 5``) ::"

# ca0dcc13cd854641b983cab8698f5d79
#: ../../topics/db/queries.txt:359
msgid "Negative indexing (i.e. ``Entry.objects.all()[-1]``) is not supported."
msgstr "Les index négatifs (ex. : ``Entry.objects.all()[-1]``) ne sont pas pris en charge."

# 4ee0d5fe16a34d648ea38222f5d5edb4
#: ../../topics/db/queries.txt:361
msgid ""
"Generally, slicing a :class:`~django.db.models.query.QuerySet` returns a new"
" :class:`~django.db.models.query.QuerySet` -- it doesn't evaluate the query."
" An exception is if you use the \"step\" parameter of Python slice syntax. "
"For example, this would actually execute the query in order to return a list"
" of every *second* object of the first 10::"
msgstr "De manière générale, la segmentation d'un :class:`~django.db.models.query.QuerySet` renvoie un nouveau :class:`~django.db.models.query.QuerySet` ; la requête n'est pas évaluée, sauf si vous utilisez le paramètre ``step`` de la syntaxe de segmentation de Python. Par exemple, ceci exécuterait effectivement la requête pour renvoyer une liste d'un objet sur 2 parmi les 10 premiers ::"

# 137421b0ee34469885e256c293509c65
#: ../../topics/db/queries.txt:369
msgid ""
"To retrieve a *single* object rather than a list (e.g. ``SELECT foo FROM bar"
" LIMIT 1``), use a simple index instead of a slice. For example, this "
"returns the first ``Entry`` in the database, after ordering entries "
"alphabetically by headline::"
msgstr "Pour obtenir un *seul* objet plutôt qu'une liste (ex. : ``SELECT foo FROM bar LIMIT 1``), utilisez un simple index au lieu d'un segment. Par exemple, ceci renvoie le premier objet ``Entry`` de la base de données, après avoir trié les objets alphabétiquement par titre (``headline``) ::"

# ad8a6dc630d448898aed29a1157cfdf4
#: ../../topics/db/queries.txt:376
msgid "This is roughly equivalent to::"
msgstr "C'est grossièrement équivalent à ::"

# 057f9b16d959492d97e68cba45b148da
#: ../../topics/db/queries.txt:380
msgid ""
"Note, however, that the first of these will raise ``IndexError`` while the "
"second will raise ``DoesNotExist`` if no objects match the given criteria. "
"See :meth:`~django.db.models.query.QuerySet.get` for more details."
msgstr "Notez toutefois que si aucun objet ne correspond à la requête, une exception ``IndexError`` est générée dans le premier cas, tandis que dans le second cas, c'est l'exception ``DoesNotExist`` qui sera générée. Voir :meth:`~django.db.models.query.QuerySet.get` pour plus de détails."

# 7be634236f27426dabcd7460e667303a
#: ../../topics/db/queries.txt:387
msgid "Field lookups"
msgstr "Recherches dans les champs"

# bb2f845ce5ca44e88a3550177f85094f
#: ../../topics/db/queries.txt:389
msgid ""
"Field lookups are how you specify the meat of an SQL ``WHERE`` clause. "
"They're specified as keyword arguments to the "
":class:`~django.db.models.query.QuerySet` methods "
":meth:`~django.db.models.query.QuerySet.filter`, "
":meth:`~django.db.models.query.QuerySet.exclude` and "
":meth:`~django.db.models.query.QuerySet.get`."
msgstr "La recherche dans les champs est ce qui constitue le cœur des clauses SQL ``WHERE``. La syntaxe s'exprime par des paramètres nommés dans les méthodes :meth:`~django.db.models.query.QuerySet.filter`, :meth:`~django.db.models.query.QuerySet.exclude` et :meth:`~django.db.models.query.QuerySet.get` de :class:`~django.db.models.query.QuerySet`."

# 79293c5cfd78418685a0b8e107fc4c66
#: ../../topics/db/queries.txt:395
msgid ""
"Basic lookups keyword arguments take the form ``field__lookuptype=value``. "
"(That's a double-underscore). For example::"
msgstr "Les paramètres nommés de base de ces requêtes prennent la forme ``champ__typerequete=valeur`` (il s'agit d'un double soulignement). Par exemple ::"

# 604adb5922e94a54acd492bb750bc4c9
#: ../../topics/db/queries.txt:400
msgid "translates (roughly) into the following SQL::"
msgstr "peut être grossièrement traduit en code SQL comme ::"

# c00c92bd21974a8db5bffeae3df5f50c
#: ../../topics/db/queries.txt:404
msgid "How this is possible"
msgstr ""

# 2418ca353e5743df8f7cd8116fdf71f7
#: ../../topics/db/queries.txt:406
msgid ""
"Python has the ability to define functions that accept arbitrary name-value "
"arguments whose names and values are evaluated at runtime. For more "
"information, see `Keyword Arguments`_ in the official Python tutorial."
msgstr "Python permet de définir des fonctions acceptant des paramètres nom-valeur arbitraires dont les noms et les valeurs sont évalués au moment de l'exécution. Pour plus d'informations, consultez `Keyword Arguments`_ dans le tutoriel Python officiel."

# 47e1f46be70447c689373a455373fd70
#: ../../topics/db/queries.txt:412
msgid ""
"The field specified in a lookup has to be the name of a model field. There's"
" one exception though, in case of a :class:`~django.db.models.ForeignKey` "
"you can specify the field name suffixed with ``_id``. In this case, the "
"value parameter is expected to contain the raw value of the foreign model's "
"primary key. For example:"
msgstr ""

# 696057cbe1b14bda8552ddcfb4869644
#: ../../topics/db/queries.txt:420
msgid ""
"If you pass an invalid keyword argument, a lookup function will raise "
"``TypeError``."
msgstr "Si vous fournissez un paramètre nommé non valide, une fonction de recherche signalera une exception ``TypeError``."

# 69ef2794758a438eb4394c8a29489be6
#: ../../topics/db/queries.txt:423
msgid ""
"The database API supports about two dozen lookup types; a complete reference"
" can be found in the :ref:`field lookup reference <field-lookups>`. To give "
"you a taste of what's available, here's some of the more common lookups "
"you'll probably use:"
msgstr "L'API de base de données gère une vingtaine de types de recherche ; une référence complète se trouve dans la :ref:`référence des recherches de champs <field-lookups>`. Pour vous donner une idée de ce qui est possible, voici quelques recherches parmi les plus fréquemment utilisées :"

# e10b36922b624f5daefb541151417add
#: ../../topics/db/queries.txt:448
msgid ":lookup:`exact`"
msgstr ":lookup:`exact`"

# cb0364bbbf9945b9ac6fc8daf1ea6528
#: ../../topics/db/queries.txt:429
msgid "An \"exact\" match. For example::"
msgstr "Une correspondance « exacte ». Par exemple ::"

# 1986c462d11d4fc5a3209c8d5849c61d
#: ../../topics/db/queries.txt:433
msgid "Would generate SQL along these lines:"
msgstr "Produit le code SQL ressemblant à :"

# 42b2e81b94cb4c56b6e0769504765008
#: ../../topics/db/queries.txt:439
msgid ""
"If you don't provide a lookup type -- that is, if your keyword argument "
"doesn't contain a double underscore -- the lookup type is assumed to be "
"``exact``."
msgstr "Si vous n'indiquez pas de type de recherche, c'est-à-dire si votre paramètre nommé ne contient pas de double soulignement, Django considère que le type de recherche est ``exact``."

# 4bc4fbec3c6c4753a7937a082aed4348
#: ../../topics/db/queries.txt:443
msgid "For example, the following two statements are equivalent::"
msgstr "Par exemple, les deux lignes suivantes sont équivalentes ::"

# 07a6f007ec8443fe87a8ee32957356a5
#: ../../topics/db/queries.txt:448
msgid ""
"This is for convenience, because ``exact`` lookups are the common case."
msgstr "Il s'agit d'un raccourci commode, puisque les recherches ``exact`` sont les cas les plus courants."

# e3f90f312dcd48bbbf3d09ecc7023ab1
#: ../../topics/db/queries.txt:456
msgid ":lookup:`iexact`"
msgstr ":lookup:`iexact`"

# ccd1b64f8c0e4721a5f3caa8dc06ce70
#: ../../topics/db/queries.txt:451
msgid "A case-insensitive match. So, the query::"
msgstr "Une recherche insensible à la casse. Ainsi, la requête ::"

# 717f7dad7f274c1bb0c91485da7c0c39
#: ../../topics/db/queries.txt:455
msgid ""
"Would match a ``Blog`` titled \"Beatles Blog\", \"beatles blog\", or even "
"\"BeAtlES blOG\"."
msgstr "Aurait pour occurrence un ``Blog`` intitulé « Beatles Blog », « beatles blog » ou même « BeAtlES blOG »."

# 0d5218e2e92c4696a9efc5e5a63b3105
#: ../../topics/db/queries.txt:472
msgid ":lookup:`contains`"
msgstr ":lookup:`contains`"

# 10b89739c240426392a2ab30687cbc90
#: ../../topics/db/queries.txt:459
msgid "Case-sensitive containment test. For example::"
msgstr "Test d'inclusion sensible à la casse. Par exemple ::"

# 2e7cb6c6440b4488a5169e27be61ed2a
#: ../../topics/db/queries.txt:463
msgid "Roughly translates to this SQL:"
msgstr "Pourrait être traduit grosso modo par ce code SQL :"

# 98ab047dc7834c2cabc708ceaf904968
#: ../../topics/db/queries.txt:469
msgid ""
"Note this will match the headline ``'Today Lennon honored'`` but not "
"``'today lennon honored'``."
msgstr "Notez que le titre (``headline``) ``'Today Lennon honored'`` correspondrait à cette recherche, mais pas ``'today lennon honored'``."

# 19101a4909c94522baa3edb0b425cacd
#: ../../topics/db/queries.txt:472
msgid "There's also a case-insensitive version, :lookup:`icontains`."
msgstr "Il existe aussi une version insensible à la casse, :lookup:`icontains`."

# 76014ee3e9ab45f99a293dfccb6ac4e2
#: ../../topics/db/queries.txt:477
msgid ":lookup:`startswith`, :lookup:`endswith`"
msgstr ":lookup:`startswith`, :lookup:`endswith`"

# 222e1352fb7e44f389bb6478b4a81409
#: ../../topics/db/queries.txt:475
msgid ""
"Starts-with and ends-with search, respectively. There are also case-"
"insensitive versions called :lookup:`istartswith` and :lookup:`iendswith`."
msgstr "Recherche « commençant par » et « finissant par », respectivement. Il en existe aussi des versions insensibles à la casse : :lookup:`istartswith` et :lookup:`iendswith`."

# 030fbd2d66414d95935fa5a5d149304e
#: ../../topics/db/queries.txt:479
msgid ""
"Again, this only scratches the surface. A complete reference can be found in"
" the :ref:`field lookup reference <field-lookups>`."
msgstr "Encore une fois, ce n'est qu'un survol. Une référence complète est disponible dans la :ref:`référence des recherches de champ <field-lookups>`."

# a4ffec97f90d431cbf4362aae1972c1e
#: ../../topics/db/queries.txt:485
msgid "Lookups that span relationships"
msgstr "Recherches traversant les relations"

# 2fa008c55ab44023a7e430a763069b0b
#: ../../topics/db/queries.txt:487
msgid ""
"Django offers a powerful and intuitive way to \"follow\" relationships in "
"lookups, taking care of the SQL ``JOIN``\\s for you automatically, behind "
"the scenes. To span a relationship, just use the field name of related "
"fields across models, separated by double underscores, until you get to the "
"field you want."
msgstr "Django offre une approche puissante et intuitive pour « suivre » les relations dans les recherches, se chargeant automatiquement des ``JOIN`` SQL en arrière-plan. Pour atteindre une relation, utilisez simplement les noms de champ qui servent de relation vers d'autres modèles, séparés par des doubles soulignements, jusqu'à atteindre le champ souhaité."

# f3760f0ff4674ab3b8dc94c8f6ad364f
#: ../../topics/db/queries.txt:493
msgid ""
"This example retrieves all ``Entry`` objects with a ``Blog`` whose ``name`` "
"is ``'Beatles Blog'``::"
msgstr "Cet exemple sélectionne tous les objets ``Entry`` d'un ``Blog`` ayant pour ``name`` la valeur ``'Beatles Blog'``::"

# 53b2046a1d67424ea2a3eb1b1f89e000
#: ../../topics/db/queries.txt:498
msgid "This spanning can be as deep as you'd like."
msgstr "Ce mécanisme de traversée de relations peut être aussi profond que vous le souhaitez."

# ebcc274ab1ec49ffad7452b0c0159848
#: ../../topics/db/queries.txt:500
msgid ""
"It works backwards, too. To refer to a \"reverse\" relationship, just use "
"the lowercase name of the model."
msgstr "Ceci fonctionne également dans le sens inverse. Pour faire référence à une relation « inverse », utilisez simplement le nom du modèle en minuscules."

# 805ca14c670d45829fbe87dd2f43b4e3
#: ../../topics/db/queries.txt:503
msgid ""
"This example retrieves all ``Blog`` objects which have at least one "
"``Entry`` whose ``headline`` contains ``'Lennon'``::"
msgstr "Cet exemple sélectionne tous les objets ``Blog`` ayant au moins une ``Entry`` ayant un ``headline`` contenant ``'Lennon'``::"

# e7352476979246ee96407087eae798f4
#: ../../topics/db/queries.txt:508
msgid ""
"If you are filtering across multiple relationships and one of the "
"intermediate models doesn't have a value that meets the filter condition, "
"Django will treat it as if there is an empty (all values are ``NULL``), but "
"valid, object there. All this means is that no error will be raised. For "
"example, in this filter::"
msgstr "Si vous filtrez à travers plusieurs relations et qu'un des modèles intermédiaires n'a pas de valeur répondant à la condition du filtre, Django le traite comme s'il y avait là un objet vide (toutes les valeurs sont ``NULL``), mais valide. C'est-à-dire qu'aucune erreur ne sera signalée. Par exemple, dans ce filtre ::"

# d5d0ae798a694e0b8095a7252f8884b8
#: ../../topics/db/queries.txt:515
msgid ""
"(if there was a related ``Author`` model), if there was no ``author`` "
"associated with an entry, it would be treated as if there was also no "
"``name`` attached, rather than raising an error because of the missing "
"``author``. Usually this is exactly what you want to have happen. The only "
"case where it might be confusing is if you are using :lookup:`isnull`. "
"Thus::"
msgstr "(partant du principe qu'il existe un modèle ``Author`` lié), s'il n'y a pas de ``author`` associé à une ``entry``, ce sera traité comme s'il n'y avait pas non plus de ``name``, plutôt que de signaler une erreur à cause de l'``author`` manquant. Normalement, c'est bien le comportement souhaité. Le seul cas où ça pourrait porter à confusion, c'est quand vous utilisez :lookup:`isnull`. Ainsi ::"

# 721e75983c61461487a75adf87217353
#: ../../topics/db/queries.txt:523
msgid ""
"will return ``Blog`` objects that have an empty ``name`` on the ``author`` "
"and also those which have an empty ``author`` on the ``entry``. If you don't"
" want those latter objects, you could write::"
msgstr "renvoie les objets ``Blog`` ayant un ``author`` avec le ``name`` vide ainsi que tous ceux ayant un ``author`` vide dans l'``entry``. Si vous ne voulez pas de cette deuxième catégorie d'objets, vous pourriez écrire ::"

# 37563225185e4d27996e0880f8ea7639
#: ../../topics/db/queries.txt:531
msgid "Spanning multi-valued relationships"
msgstr "Traversée des relations multivaluées"

# 3f9df1c8f31041c6affa30bbd4b64b31
#: ../../topics/db/queries.txt:533
msgid ""
"When you are filtering an object based on a "
":class:`~django.db.models.ManyToManyField` or a reverse "
":class:`~django.db.models.ForeignKey`, there are two different sorts of "
"filter you may be interested in. Consider the ``Blog``/``Entry`` "
"relationship (``Blog`` to ``Entry`` is a one-to-many relation). We might be "
"interested in finding blogs that have an entry which has both *\"Lennon\"* "
"in the headline and was published in 2008. Or we might want to find blogs "
"that have an entry with *\"Lennon\"* in the headline as well as an entry "
"that was published in 2008. Since there are multiple entries associated with"
" a single ``Blog``, both of these queries are possible and make sense in "
"some situations."
msgstr "Quand vous filtrez un objet basé sur un champ :class:`~django.db.models.ManyToManyField` ou un champ :class:`~django.db.models.ForeignKey` inversé, deux types de filtres peuvent être intéressants. Considérez la relation ``Blog``/``Entry`` (``Blog`` vers ``Entry`` est une relation un-à-plusieurs). Nous pourrions être intéressés à trouver des blogues qui ont une entrée contenant *\"Lennon\"* dans le titre et ayant été publiée en 2008. Ou nous pourrions vouloir trouver des blogues qui contiennent une entrée avec *\"Lennon\"* dans le titre et une entrée qui a été publiée en 2008. Comme il y a plusieurs entrées associées à un seul ``Blog``, ces deux requêtes sont possibles et ont du sens dans certaines situations."

# 016c3cb9b0054a1f8fd2f38d2dfdbac7
#: ../../topics/db/queries.txt:544
msgid ""
"The same type of situation arises with a "
":class:`~django.db.models.ManyToManyField`. For example, if an ``Entry`` has"
" a :class:`~django.db.models.ManyToManyField` called ``tags``, we might want"
" to find entries linked to tags called *\"music\"* and *\"bands\"* or we "
"might want an entry that contains a tag with a name of *\"music\"* and a "
"status of *\"public\"*."
msgstr "Le même genre de situation survient avec un champ :class:`~django.db.models.ManyToManyField`. Par exemple, si un ``Entry`` a un :class:`~django.db.models.ManyToManyField` nommé ``tags``, nous pourrions vouloir trouver des entrées liées aux ``tags`` nommés *\"music\"* et *\"bands\"*, ou nous pourrions vouloir une entrée qui contient un ``tag``\navec le nom *\"music\"* et un statut *\"public\"*."

# 5de8ba8beb4e40308f6a5d9111f8ccc9
#: ../../topics/db/queries.txt:550
msgid ""
"To handle both of these situations, Django has a consistent way of "
"processing :meth:`~django.db.models.query.QuerySet.filter` and "
":meth:`~django.db.models.query.QuerySet.exclude` calls. Everything inside a "
"single :meth:`~django.db.models.query.QuerySet.filter` call is applied "
"simultaneously to filter out items matching all those requirements. "
"Successive :meth:`~django.db.models.query.QuerySet.filter` calls further "
"restrict the set of objects, but for multi-valued relations, they apply to "
"any object linked to the primary model, not necessarily those objects that "
"were selected by an earlier :meth:`~django.db.models.query.QuerySet.filter` "
"call."
msgstr "Pour gérer ces deux situations, Django a une façon cohérente de traiter les appels  :meth:`~django.db.models.query.QuerySet.filter` et :meth:`~django.db.models.query.QuerySet.exclude`. Tous les paramètres d'un appel à :meth:`~django.db.models.query.QuerySet.filter` sont appliqués simultanément pour filtrer les éléments qui\ncorrespondent à tous ces critères. Les appels à  :meth:`~django.db.models.query.QuerySet.filter` subséquents restreignent ensuite davantage les éléments renvoyés, mais pour les relations multivaluées ces appels s'appliquent à tous les objets liés au modèle principal, pas nécessairement aux objets qui ont été sélectionnés par un appel précédent à :meth:`~django.db.models.query.QuerySet.filter`."

# e169f08723764c2b93e3608f5be5b9e1
#: ../../topics/db/queries.txt:560
msgid ""
"That may sound a bit confusing, so hopefully an example will clarify. To "
"select all blogs that contain entries with both *\"Lennon\"* in the headline"
" and that were published in 2008 (the same entry satisfying both "
"conditions), we would write::"
msgstr "Ceci peut paraître un peu déroutant ; nous espérons qu'un exemple viendra clarifier les choses. Pour sélectionner tous les blogues qui contiennent des entrées qui ont à la fois *\"Lennon\"* dans le titre et qui ont été publiées en 2008 (avec la même entrée qui satisfait les deux conditions), nous pourrions écrire ::"

# 3970daa5f5d94fbf96ebbb482daa42eb
#: ../../topics/db/queries.txt:568
msgid ""
"To select all blogs that contain an entry with *\"Lennon\"* in the headline "
"**as well as** an entry that was published in 2008, we would write::"
msgstr "Pour sélectionner tous les blogues qui contiennent une entrée avec *\"Lennon\"* dans le titre **et en plus** une entrée qui a été publiée en 2008, nous pourrions écrire ::"

# 404676887905470ebbfad49dcc30b129
#: ../../topics/db/queries.txt:574
msgid ""
"Suppose there is only one blog that had both entries containing *\"Lennon\"*"
" and entries from 2008, but that none of the entries from 2008 contained "
"*\"Lennon\"*. The first query would not return any blogs, but the second "
"query would return that one blog."
msgstr "En supposant qu'un seul blogue contienne à la fois des articles contenant *\"Lennon\"* et des articles de 2008, mais qu'aucun des articles de 2008 ne contient *\"Lennon\"*, la première requête ne renverrait aucun blogue alors que la seconde requête renverrait ce blogue."

# b30f52276f504420b83f742b8ae9c973
#: ../../topics/db/queries.txt:579
msgid ""
"In the second example, the first filter restricts the queryset to all those "
"blogs linked to entries with *\"Lennon\"* in the headline. The second filter"
" restricts the set of blogs *further* to those that are also linked to "
"entries that were published in 2008. The entries selected by the second "
"filter may or may not be the same as the entries in the first filter. We are"
" filtering the ``Blog`` items with each filter statement, not the ``Entry`` "
"items."
msgstr "Dans ce deuxième exemple, le premier filtre restreint le queryset à tous les blogues avec un lien vers des articles contentant *\"Lennon\"* dans le titre. Le second filtre restreint *davantage* les blogues résultant à ceux qui ont aussi un lien vers les articles publiés en 2008. Les articles sélectionnés par le second filtre\npeuvent être ou non les mêmes que ceux sélectionnés par le premier filtre. Nous filtrons les éléments ``Blog`` avec chaque appel de filtre, pas les éléments ``Entry``."

# a2cf47a97ffb4517b6dccb32202bdf08
#: ../../topics/db/queries.txt:586
msgid ""
"All of this behavior also applies to "
":meth:`~django.db.models.query.QuerySet.exclude`: all the conditions in a "
"single :meth:`~django.db.models.query.QuerySet.exclude` statement apply to a"
" single instance (if those conditions are talking about the same multi-"
"valued relation). Conditions in subsequent "
":meth:`~django.db.models.query.QuerySet.filter` or "
":meth:`~django.db.models.query.QuerySet.exclude` calls that refer to the "
"same relation may end up filtering on different linked objects."
msgstr "Tous ces comportements s'appliquent aussi à :meth:`~django.db.models.query.QuerySet.exclude` : toutes les conditions dans un même appel à :meth:`~django.db.models.query.QuerySet.exclude` s'appliquent à une seule instance (si ces conditions portent sur la même relation multi-valuée). Les conditions dans les appels successifs à :meth:`~django.db.models.query.QuerySet.filter` ou :meth:`~django.db.models.query.QuerySet.exclude` qui\nportent sur la même relation peuvent potentiellement filtrer sur différents objets liés. "

# 4da9b1c8880e4072944f05ff1635a379
#: ../../topics/db/queries.txt:598
msgid "Filters can reference fields on the model"
msgstr "Les filtres peuvent référencer les champs d'un modèle"

# 5613be4c50654abaa1184a69c410bf1e
#: ../../topics/db/queries.txt:602
msgid ""
"In the examples given so far, we have constructed filters that compare the "
"value of a model field with a constant. But what if you want to compare the "
"value of a model field with another field on the same model?"
msgstr "Dans les exemples donnés jusqu'ici, nous avons construit des filtres comparant la valeur d'un champ de modèle avec une constante. Mais qu'en est-il si vous souhaitez comparer la valeur d'un champ de modèle avec un autre champ du même modèle ?"

# 6ad66d3f60ed4d559846e6599df0f4b8
#: ../../topics/db/queries.txt:606
msgid ""
"Django provides the :ref:`F() expressions <query-expressions>` to allow such"
" comparisons. Instances of ``F()`` act as a reference to a model field "
"within a query. These references can then be used in query filters to "
"compare the values of two different fields on the same model instance."
msgstr "Django propose les :ref:`expressions F() <query-expressions>` pour autoriser de telles comparaisons. Les instances de ``F()`` agissent comme des références vers un champ de modèle à l'intérieur d'une requête. Ces références peuvent ensuite être utilisées dans des filtres de requêtes pour comparer les valeurs de deux champs différents d'une même instance de modèle."

# 6911023fcd904a1e905690dad3cca5c9
#: ../../topics/db/queries.txt:611
msgid ""
"For example, to find a list of all blog entries that have had more comments "
"than pingbacks, we construct an ``F()`` object to reference the pingback "
"count, and use that ``F()`` object in the query::"
msgstr "Par exemple, pour obtenir la liste de tous les articles de blogue ayant reçus plus de commentaires que de « pings », nous construisons un objet ``F()`` pour référencer le nombre de pings afin d'utiliser cet objet ``F()`` dans la requête ::"

# 8351b9ff109549e6a7e3ad6d322fd31e
#: ../../topics/db/queries.txt:618
msgid ""
"Django supports the use of addition, subtraction, multiplication, division "
"and modulo arithmetic with ``F()`` objects, both with constants and with "
"other ``F()`` objects. To find all the blog entries with more than *twice* "
"as many comments as pingbacks, we modify the query::"
msgstr "Django prend en charge l'utilisation des opérateurs arithmétiques addition, soustraction, multiplication, division et modulo avec les objets ``F()``, aussi bien avec des constantes qu'avec d'autres objets ``F()``. Pour obtenir tous les articles de blogue avec *plus de deux fois* de commentaires que de pings, nous modifions ainsi la requête ::"

# 5080d876ab3945148b8a02263b2e5206
#: ../../topics/db/queries.txt:625
msgid ""
"To find all the entries where the rating of the entry is less than the sum "
"of the pingback count and comment count, we would issue the query::"
msgstr "Pour trouver tous les articles où la notation de l'article est plus petite que la somme des pings et des commentaires, nous pourrions effectuer cette requête ::"

# dda447eda61e42cd84762d53ec980cba
#: ../../topics/db/queries.txt:631
msgid ""
"You can also use the double underscore notation to span relationships in an "
"``F()`` object. An ``F()`` object with a double underscore will introduce "
"any joins needed to access the related object. For example, to retrieve all "
"the entries where the author's name is the same as the blog name, we could "
"issue the query::"
msgstr "Vous pouvez aussi employer la notation en double soulignement pour traverser les relations dans un objet ``F()``. Un objet ``F()`` contenant un double soulignement produira toute jointure nécessaire pour accéder aux objets liés. Par exemple, pour obtenir tous les articles dont le nom de l'auteur est égal au nom du blogue, nous pourrions effectuer la requête ::"

# ff381534a9c94dc187ccafb0a78eb028
#: ../../topics/db/queries.txt:639
msgid ""
"For date and date/time fields, you can add or subtract a "
":class:`~datetime.timedelta` object. The following would return all entries "
"that were modified more than 3 days after they were published::"
msgstr "Pour les champs date et date/heure, il est possible d'ajouter ou de soustraire un objet :class:`~datetime.timedelta`. L'exemple suivant renvoie tous les articles modifiés plus de 3 jours après avoir été publiés ::"

# 82b179c216b6430e92ab0d75d66ecb0e
#: ../../topics/db/queries.txt:648
msgid "``.bitand()`` and ``.bitor()``"
msgstr ""

# 3d540b0415bc43e5975c213f6fd880c3
#: ../../topics/db/queries.txt:650
msgid ""
"The ``F()`` objects now support bitwise operations by ``.bitand()`` and "
"``.bitor()``, for example::"
msgstr "Les objets ``F()`` prennent maintenant aussi en charge les opérations bit à bit via ``.bitand()`` et ``.bitor()``, par exemple ::"

# a54d3b0b044c4b77859d2da09990bb80
#: ../../topics/db/queries.txt:657
msgid ""
"The previously undocumented operators ``&`` and ``|`` no longer produce "
"bitwise operations, use ``.bitand()`` and ``.bitor()`` instead."
msgstr ""

# 3296ed4cde044647842bb2da7ae5b792
#: ../../topics/db/queries.txt:661
msgid "The pk lookup shortcut"
msgstr "Le raccourci de recherche pk"

# 999fbb664de249b783f6240c94269476
#: ../../topics/db/queries.txt:663
msgid ""
"For convenience, Django provides a ``pk`` lookup shortcut, which stands for "
"\"primary key\"."
msgstr "Pour des raisons pratiques, Django fournit un raccourci de recherche ``pk``, signifiant « primary key » (clé primaire)."

# cae1a3031789406ca7679cc7dfdc4811
#: ../../topics/db/queries.txt:666
msgid ""
"In the example ``Blog`` model, the primary key is the ``id`` field, so these"
" three statements are equivalent::"
msgstr "Dans le modèle d'exemple ``Blog``, la clé primaire est le champ ``id``. Ainsi, ces trois lignes sont équivalentes ::"

# a6914ea35cac44eba90c059a3a6cfc8e
#: ../../topics/db/queries.txt:673
msgid ""
"The use of ``pk`` isn't limited to ``__exact`` queries -- any query term can"
" be combined with ``pk`` to perform a query on the primary key of a model::"
msgstr "L'emploi de ``pk`` n'est pas limité aux requêtes ``__exact``; toute expression de requête peut être combinée avec ``pk`` pour effectuer une requête sur la clé primaire d'un modèle ::"

# 02269851a5c2418e99f543167b9d51c8
#: ../../topics/db/queries.txt:682
msgid ""
"``pk`` lookups also work across joins. For example, these three statements "
"are equivalent::"
msgstr "Les recherches sur ``pk`` fonctionnent également en traversant les relations. Par exemple, ces trois lignes sont équivalentes ::"

# dc75d66d462d4dd79f3374f87a729bf5
#: ../../topics/db/queries.txt:690
msgid "Escaping percent signs and underscores in LIKE statements"
msgstr "Échappement des signes pour cent et des soulignements dans les instructions LIKE"

# fedf92561ad84a5486997a339ea1fe19
#: ../../topics/db/queries.txt:692
msgid ""
"The field lookups that equate to ``LIKE`` SQL statements (``iexact``, "
"``contains``, ``icontains``, ``startswith``, ``istartswith``, ``endswith`` "
"and ``iendswith``) will automatically escape the two special characters used"
" in ``LIKE`` statements -- the percent sign and the underscore. (In a "
"``LIKE`` statement, the percent sign signifies a multiple-character wildcard"
" and the underscore signifies a single-character wildcard.)"
msgstr "Les recherches de champs produisant des instructions SQL ``LIKE`` (``iexact``, ``contains``, ``icontains``, ``startswith``, ``istartswith``, ``endswith`` et ``iendswith``) échappent automatiquement les deux caractères à signification spéciale des instructions ``LIKE``: le signe pour cent et le soulignement (dans une instruction ``LIKE``, le signe pour cent est utilisé comme caractère de remplacement multiple alors qu'un soulignement est utilisé comme caractère de remplacement unique)."

# 1507a24608d94c5ca3ff941bffc6ff9d
#: ../../topics/db/queries.txt:699
msgid ""
"This means things should work intuitively, so the abstraction doesn't leak. "
"For example, to retrieve all the entries that contain a percent sign, just "
"use the percent sign as any other character::"
msgstr "Cela signifie que les choses devraient fonctionner intuitivement, sans faille d'abstraction. Par exemple, pour obtenir la liste de tous les articles contenant un signe pour cent, il suffit d'indiquer le signe pour cent comme pour n'importe quel autre caractère ::"

# d5b31fd1da8f433b986ab3b0e132ae1b
#: ../../topics/db/queries.txt:705
msgid ""
"Django takes care of the quoting for you; the resulting SQL will look "
"something like this:"
msgstr "Django se charge de l'échappement à votre place ; le code SQL résultant ressemblera à quelque chose comme :"

# 81c9f6f013784431b4062c98199993ca
#: ../../topics/db/queries.txt:712
msgid ""
"Same goes for underscores. Both percentage signs and underscores are handled"
" for you transparently."
msgstr "Même chose pour les soulignements. Aussi bien les signes pour cent que les soulignements sont gérés pour vous de manière transparente."

# 2e22841e23ca448fa469c41329e2ba8f
#: ../../topics/db/queries.txt:718
msgid "Caching and QuerySets"
msgstr "Mise en cache et objets QuerySet"

# a1a6fef64df248dda6fdd4b56153c352
#: ../../topics/db/queries.txt:720
msgid ""
"Each :class:`~django.db.models.query.QuerySet` contains a cache to minimize "
"database access. Understanding how it works will allow you to write the most"
" efficient code."
msgstr "Chaque :class:`~django.db.models.query.QuerySet` contient un cache pour minimiser l'accès à la base de données. La compréhension de son fonctionnement vous permet d'écrire le code le plus efficace possible."

# e1d63d7e418d454fa61eef5e394cbe44
#: ../../topics/db/queries.txt:724
msgid ""
"In a newly created :class:`~django.db.models.query.QuerySet`, the cache is "
"empty. The first time a :class:`~django.db.models.query.QuerySet` is "
"evaluated -- and, hence, a database query happens -- Django saves the query "
"results in the :class:`~django.db.models.query.QuerySet`’s cache and returns"
" the results that have been explicitly requested (e.g., the next element, if"
" the :class:`~django.db.models.query.QuerySet` is being iterated over). "
"Subsequent evaluations of the :class:`~django.db.models.query.QuerySet` "
"reuse the cached results."
msgstr ""

# 814754a27ea947a3839a95eb59546ab1
#: ../../topics/db/queries.txt:733
msgid ""
"Keep this caching behavior in mind, because it may bite you if you don't use"
" your :class:`~django.db.models.query.QuerySet`\\s correctly. For example, "
"the following will create two :class:`~django.db.models.query.QuerySet`\\s, "
"evaluate them, and throw them away::"
msgstr "Gardez à l'esprit ce comportement de mise en cache, car vous pourriez vous faire avoir si vous n'utilisez pas correctement l'objet :class:`~django.db.models.query.QuerySet`. Par exemple, le code suivant crée deux objets :class:`~django.db.models.query.QuerySet`, les évalue et les abandonne ::"

# f967f4949e3c4437b02d28382fd124ad
#: ../../topics/db/queries.txt:741
msgid ""
"That means the same database query will be executed twice, effectively "
"doubling your database load. Also, there's a possibility the two lists may "
"not include the same database records, because an ``Entry`` may have been "
"added or deleted in the split second between the two requests."
msgstr "Dans ce cas, la même requête de base de données est exécutée deux fois, ce qui double en pratique la charge sur la base de données. Il est également imaginable que les deux listes ne contiennent pas exactement les mêmes enregistrements de base de données, car un objet ``Entry`` pourrait avoir été ajouté ou supprimé dans la fraction de seconde entre les deux requêtes."

# 276d133622104b9f87ca98bc9cd0ceca
#: ../../topics/db/queries.txt:746
msgid ""
"To avoid this problem, simply save the "
":class:`~django.db.models.query.QuerySet` and reuse it::"
msgstr "Pour éviter ce problème, il suffit de stocker l'objet :class:`~django.db.models.query.QuerySet` et de le réutiliser ::"

# 09510be4413548c2934e111e07d32baa
#: ../../topics/db/queries.txt:754
msgid "When querysets are not cached"
msgstr "Quand les résultats de requêtes ne sont pas mis en cache"

# 8d16c27f83924093ab60f946c114bf00
#: ../../topics/db/queries.txt:756
msgid ""
"Querysets do not always cache their results.  When evaluating only *part* of"
" the queryset, the cache is checked, but if it is not populated then the "
"items returned by the subsequent query are not cached. Specifically, this "
"means that :ref:`limiting the queryset <limiting-querysets>` using an array "
"slice or an index will not populate the cache."
msgstr "Les objets ``QuerySet`` ne mettent pas toujours leurs résultats en cache. Lorsque seule une *partie* d'un queryset est évaluée, le cache est consulté mais s'il n'est pas rempli, les éléments renvoyés par la requête suivante ne sont pas mis en cache. Spécifiquement, cela signifie que la :ref:`restriction d'un jeu de requêtes <limiting-querysets>` en employant une segmentation ou un index de liste ne remplira par le cache."

# c472d9c52d7e440cb3ac14a944e4e344
#: ../../topics/db/queries.txt:762
msgid ""
"For example, repeatedly getting a certain index in a queryset object will "
"query the database each time::"
msgstr "Par exemple, l'interrogation répétée d'un objet ``QuerySet`` à l'aide d'un index effectue une requête dans la base de données à chaque fois ::"

# ae3a0c8b74654abf9c984454075b6e61
#: ../../topics/db/queries.txt:769
msgid ""
"However, if the entire queryset has already been evaluated, the cache will "
"be checked instead::"
msgstr "Cependant, si le jeu de requête complet a déjà été évalué, le cache sera tout de même mis à contribution ::"

# 31746c853e034f0eafc48a9bef22090f
#: ../../topics/db/queries.txt:777
msgid ""
"Here are some examples of other actions that will result in the entire "
"queryset being evaluated and therefore populate the cache::"
msgstr "Voici quelques exemples d'autres actions qui déclenchent l'évaluation de tout l'objet ``QuerySet`` et qui par conséquent remplissent le cache ::"

# 33d672e8ab1645c480a5bda5a1e70a53
#: ../../topics/db/queries.txt:787
msgid ""
"Simply printing the queryset will not populate the cache. This is because "
"the call to ``__repr__()`` only returns a slice of the entire queryset."
msgstr "L'affichage simple d'un ``QuerySet`` ne remplit pas le cache. Ceci parce que l'appel à ``__repr__()`` ne renvoie qu'un segment du jeu de requête complet."

# 1a54ff3bd4714ccd99b17f231cf709f8
#: ../../topics/db/queries.txt:793
msgid "Complex lookups with Q objects"
msgstr "Requêtes complexes avec des objets Q"

# 90aff09296bb4a5a9d6bb39da93c736c
#: ../../topics/db/queries.txt:797
msgid ""
"Keyword argument queries -- in "
":meth:`~django.db.models.query.QuerySet.filter`, etc. -- are \"AND\"ed "
"together. If you need to execute more complex queries (for example, queries "
"with ``OR`` statements), you can use ``Q`` objects."
msgstr "Les requêtes à paramètres nommés (dans :meth:`~django.db.models.query.QuerySet.filter`, etc.) sont combinées par ``AND`` (ET). Si vous avez besoin d'exécuter des requêtes plus complexes (par exemple des requêtes contenant des instruction avec ``OR`` (OU)), vous pouvez utiliser des objets ``Q``."

# 74de432458e74f969559817539bb5c96
#: ../../topics/db/queries.txt:803
msgid ""
"A :class:`~django.db.models.Q` object (``django.db.models.Q``) is an object "
"used to encapsulate a collection of keyword arguments. These keyword "
"arguments are specified as in \"Field lookups\" above."
msgstr "Un objet :class:`~django.db.models.Q` (``django.db.models.Q``) est un objet utilisé pour englober plusieurs paramètre nommés. Ces paramètre nommés sont indiqués comme pour les « Recherches dans les champs » ci-dessus."

# 6ad601999aa44241b3f7454f7e54d16f
#: ../../topics/db/queries.txt:807
msgid "For example, this ``Q`` object encapsulates a single ``LIKE`` query::"
msgstr "Par exemple, cet objet ``Q`` représente une seule requête ``LIKE``::"

# d890f084b07c45058d63d4cca9962ad0
#: ../../topics/db/queries.txt:812
msgid ""
"``Q`` objects can be combined using the ``&`` and ``|`` operators. When an "
"operator is used on two ``Q`` objects, it yields a new ``Q`` object."
msgstr "Les objets ``Q`` peuvent être combinés à l'aide des opérateurs ``&`` et ``|``. Lorsqu'un opérateur est utilisé avec deux objets ``Q``, cela produit un nouvel objet ``Q``."

# e9a69b39cbea49fd9e91d149f61df5a7
#: ../../topics/db/queries.txt:815
msgid ""
"For example, this statement yields a single ``Q`` object that represents the"
" \"OR\" of two ``\"question__startswith\"`` queries::"
msgstr "Par exemple, cette ligne produit un seul objet ``Q`` représentant la combinaison par « OR » de deux requêtes ``\"question__startswith\"``::"

# b96f3aaae15d4c0395ce5f199ff05340
#: ../../topics/db/queries.txt:820
msgid "This is equivalent to the following SQL ``WHERE`` clause::"
msgstr "C'est équivalent à la clause SQL ``WHERE`` ci-dessous ::"

# 002c52f02f464f9aa93ed78497d8c758
#: ../../topics/db/queries.txt:824
msgid ""
"You can compose statements of arbitrary complexity by combining ``Q`` "
"objects with the ``&`` and ``|`` operators and use parenthetical grouping. "
"Also, ``Q`` objects can be negated using the ``~`` operator, allowing for "
"combined lookups that combine both a normal query and a negated (``NOT``) "
"query::"
msgstr "Vous pouvez composer des instructions de complexité arbitraire en combinant des objets ``Q`` avec les opérateurs ``&`` et ``|`` et en les groupant par des parenthèses. De même, les objets ``Q`` peuvent être inversés par l'opérateur de négation ``~``, permettant à des requêtes combinées d'utiliser à la fois des requêtes normales et des requêtes inversées (``NOT``) ::"

# d0a1229acfb64fe395a7d9fc05201981
#: ../../topics/db/queries.txt:831
msgid ""
"Each lookup function that takes keyword-arguments (e.g. "
":meth:`~django.db.models.query.QuerySet.filter`, "
":meth:`~django.db.models.query.QuerySet.exclude`, "
":meth:`~django.db.models.query.QuerySet.get`) can also be passed one or more"
" ``Q`` objects as positional (not-named) arguments. If you provide multiple "
"``Q`` object arguments to a lookup function, the arguments will be \"AND\"ed"
" together. For example::"
msgstr "Chaque fonction de recherche acceptant des paramètres nommés (par ex. :meth:`~django.db.models.query.QuerySet.filter`, :meth:`~django.db.models.query.QuerySet.exclude`, :meth:`~django.db.models.query.QuerySet.get`) peut aussi recevoir un ou plusieurs objets ``Q`` comme paramètre positionnel (non nommé). Si vous indiquez plusieurs objets ``Q`` comme paramètres d'une fonction de recherche, les paramètres seront combinés avec « AND ». Par exemple ::"

# e0ee6dcd86c84328b5787f9555a021d4
#: ../../topics/db/queries.txt:844
msgid "... roughly translates into the SQL::"
msgstr "... se traduit grossièrement en SQL par ::"

# 5f7e883d2a284c1b916026dae441edce
#: ../../topics/db/queries.txt:849
msgid ""
"Lookup functions can mix the use of ``Q`` objects and keyword arguments. All"
" arguments provided to a lookup function (be they keyword arguments or ``Q``"
" objects) are \"AND\"ed together. However, if a ``Q`` object is provided, it"
" must precede the definition of any keyword arguments. For example::"
msgstr "Les fonctions de recherche peuvent mélanger l'utilisation d'objets ``Q`` et de paramètres nommés. Tous les paramètres fournis à une fonction de recherche (que ce soit des paramètres nommés ou des objets ``Q``) sont combinés par l'opérateur « AND ». Cependant, si un objet ``Q`` est fourni, il doit précéder toute définition de paramètre nommé. Par exemple ::"

# 87681bdd35c24b45ac1f32d2a1515e88
#: ../../topics/db/queries.txt:858
msgid "... would be a valid query, equivalent to the previous example; but::"
msgstr "... correspond à une requête valable, équivalente à l'exemple précédent ; mais ::"

# 8c3cdb021fcf4eaab9772b9f14fd8f59
#: ../../topics/db/queries.txt:865
msgid "... would not be valid."
msgstr "... n'est pas correct."

# e983a5c4c24f420aa5a879d6489dadc3
#: ../../topics/db/queries.txt:869
msgid ""
"The `OR lookups examples`_ in the Django unit tests show some possible uses "
"of ``Q``."
msgstr "Les `exemples de requêtes OR`_ dans les tests unitaires de Django montrent quelques utilisations possibles de ``Q``."

# 52a2922bf3d940bda192b4d3891311e6
#: ../../topics/db/queries.txt:875
msgid "Comparing objects"
msgstr "Comparaison d'objets"

# a56b9ffb149b4fdfa5b558d0265525ef
#: ../../topics/db/queries.txt:877
msgid ""
"To compare two model instances, just use the standard Python comparison "
"operator, the double equals sign: ``==``. Behind the scenes, that compares "
"the primary key values of two models."
msgstr "Pour comparer deux instances de modèle, il suffit d'utiliser l'opérateur de comparaison standard de Python, le double signe égal : ``==``. En arrière-plan, ce sont les valeurs clés primaires des deux modèles qui sont comparées."

# 272b33f068f647e9a0e95ae7514c4235
#: ../../topics/db/queries.txt:881
msgid ""
"Using the ``Entry`` example above, the following two statements are "
"equivalent::"
msgstr "En utilisant l'exemple ``Entry`` ci-dessus, les deux instructions suivantes sont équivalentes ::"

# 57ccef389680432f8d03af930f17ed52
#: ../../topics/db/queries.txt:886
msgid ""
"If a model's primary key isn't called ``id``, no problem. Comparisons will "
"always use the primary key, whatever it's called. For example, if a model's "
"primary key field is called ``name``, these two statements are equivalent::"
msgstr "Si la clé primaire d'un modèle ne s'appelle pas ``id``, aucun problème. Les comparaisons utilisent toujours la clé prmiaire, quel que soit son nom. Par exemple, si un champ clé primaire d'un modèle s'appelle ``name``, ces deux lignes sont équivalentes ::"

# 3c8cc9bf6f154e949b0b7a7e57aa5b20
#: ../../topics/db/queries.txt:896
msgid "Deleting objects"
msgstr "Suppression d'objets"

# d58e14fdeb9643b5b76444c841a474d9
#: ../../topics/db/queries.txt:898
msgid ""
"The delete method, conveniently, is named "
":meth:`~django.db.models.Model.delete`. This method immediately deletes the "
"object and has no return value. Example::"
msgstr "La méthode de suppression se nomme :meth:`~django.db.models.Model.delete`. Cette méthode supprime immédiatement l'objet et ne renvoie pas de valeur. Exemple ::"

# 6f9d85d711be4feaaa457766796ee420
#: ../../topics/db/queries.txt:904
msgid ""
"You can also delete objects in bulk. Every "
":class:`~django.db.models.query.QuerySet` has a "
":meth:`~django.db.models.query.QuerySet.delete` method, which deletes all "
"members of that :class:`~django.db.models.query.QuerySet`."
msgstr "Il est aussi possible de supprimer des objets groupés. Chaque :class:`~django.db.models.query.QuerySet` comporte une méthode :meth:`~django.db.models.query.QuerySet.delete` qui supprime tous les objets contenus dans l'objet :class:`~django.db.models.query.QuerySet`."

# a877b8fbbe034bf09d98c70f5a2d3a8d
#: ../../topics/db/queries.txt:909
msgid ""
"For example, this deletes all ``Entry`` objects with a ``pub_date`` year of "
"2005::"
msgstr "Par exemple, cette commande supprime tous les objets ``Entry`` dont l'année de ``pub_date`` est 2005 ::"

# 338d70ee9423440594dfe46b119d5659
#: ../../topics/db/queries.txt:914
msgid ""
"Keep in mind that this will, whenever possible, be executed purely in SQL, "
"and so the ``delete()`` methods of individual object instances will not "
"necessarily be called during the process. If you've provided a custom "
"``delete()`` method on a model class and want to ensure that it is called, "
"you will need to \"manually\" delete instances of that model (e.g., by "
"iterating over a :class:`~django.db.models.query.QuerySet` and calling "
"``delete()`` on each object individually) rather than using the bulk "
":meth:`~django.db.models.query.QuerySet.delete` method of a "
":class:`~django.db.models.query.QuerySet`."
msgstr "Sachez toutefois que cette opération sera autant que possible exécutée purement au niveau SQL, ce qui signifie que les méthodes ``delete()`` des instances individuelles ne seront pas forcément appelées durant le processus. Si vous avez écrit une méthode ``delete()`` personnalisée dans une classe de modèle et que vous voulez être certain qu'elle soit appelée, vous devrez supprimer « manuellement » les instances de ce modèle (par ex. en itérant sur une objet :class:`~django.db.models.query.QuerySet` et en appelant explicitement ``delete()`` sur chaque instance) plutôt que d'employer la méthode de suppression groupée :meth:`~django.db.models.query.QuerySet.delete` de l'objet :class:`~django.db.models.query.QuerySet`."

# 23d6bb9a4756486288dafae379f452c4
#: ../../topics/db/queries.txt:924
msgid ""
"When Django deletes an object, by default it emulates the behavior of the "
"SQL constraint ``ON DELETE CASCADE`` -- in other words, any objects which "
"had foreign keys pointing at the object to be deleted will be deleted along "
"with it. For example::"
msgstr "Lorsque Django supprime un objet, il émule par défaut le comportement de la contrainte SQL ``ON DELETE CASCADE``. En d'autres termes, tout objet possédant des clés étrangères vers l'objet en cours de suppression seront également supprimés. Par exemple ::"

# 0e01ebee10cd43ae9b96ef35a2b63ac4
#: ../../topics/db/queries.txt:933
msgid ""
"This cascade behavior is customizable via the "
":attr:`~django.db.models.ForeignKey.on_delete` argument to the "
":class:`~django.db.models.ForeignKey`."
msgstr "Ce comportement en cascade peut être personnalisé au moyen du paramètre :attr:`~django.db.models.ForeignKey.on_delete` de la classe :class:`~django.db.models.ForeignKey`."

# 0ccb8549cadd4211bb9e67562291536a
#: ../../topics/db/queries.txt:937
msgid ""
"Note that :meth:`~django.db.models.query.QuerySet.delete` is the only "
":class:`~django.db.models.query.QuerySet` method that is not exposed on a "
":class:`~django.db.models.Manager` itself. This is a safety mechanism to "
"prevent you from accidentally requesting ``Entry.objects.delete()``, and "
"deleting *all* the entries. If you *do* want to delete all the objects, then"
" you have to explicitly request a complete query set::"
msgstr "Notez que :meth:`~django.db.models.query.QuerySet.delete` est la seule méthode de :class:`~django.db.models.query.QuerySet` qui n'est pas exposée sur un objet :class:`~django.db.models.Manager`. Il s'agit d'un mécanisme de sécurité pour vous empêcher d'exécuter accidentellement ``Entry.objects.delete()`` ce qui supprimerait *toutes* les lignes. Si vous souhaitez *vraiment* supprimer tous les objets, vous devez alors indiquer explicitement une requête contenant tous les objets ::"

# 93ea9df2fbee4508a10f10e05af7b918
#: ../../topics/db/queries.txt:949
msgid "Copying model instances"
msgstr "Copie des instances de modèles"

# 46decc70e59b41beab38f3664e94e12f
#: ../../topics/db/queries.txt:951
msgid ""
"Although there is no built-in method for copying model instances, it is "
"possible to easily create new instance with all fields' values copied. In "
"the simplest case, you can just set ``pk`` to ``None``. Using our blog "
"example::"
msgstr "Même s'il n'existe pas de méthode intégrée pour la copie d'instances de modèles, il est possible de créer facilement de nouvelles instances en copiant toutes les valeurs des champs d'une autre instance. Dans le cas le plus simple, il suffit de définir ``pk`` à ``None``. En utilisant notre exemple de blogue ::"

# 9437fb132d8944a1bb95d03e98c1e3f7
#: ../../topics/db/queries.txt:961
msgid ""
"Things get more complicated if you use inheritance. Consider a subclass of "
"``Blog``::"
msgstr "Les choses se compliquent lorsqu'il y a de l'héritage. Considérons une sous-classe de ``Blog``::"

# 3d780ce8773a49279271b13a5ad01b84
#: ../../topics/db/queries.txt:970
msgid ""
"Due to how inheritance works, you have to set both ``pk`` and ``id`` to "
"None::"
msgstr "En raison du fonctionnement de l'héritage, vous devez définir à ``None`` à la fois ``pk`` et ``id``::"

# 6262f2995d5c4cfbb31a5b4b7eb44144
#: ../../topics/db/queries.txt:976
msgid ""
"This process does not copy related objects. If you want to copy relations, "
"you have to write a little bit more code. In our example, ``Entry`` has a "
"many to many field to ``Author``::"
msgstr "Ce procédé ne copie pas les objets liés. Si vous souhaitez copier les relations, il faudra écrire un peu plus de code. Dans notre exemple, ``Entry`` possède un champ plusieurs-à-plusieurs vers ``Author``::"

# db67361487bd47548a25bef6f37b227f
#: ../../topics/db/queries.txt:989
msgid "Updating multiple objects at once"
msgstr "Mise à jour simultanée de plusieurs objets"

# 16e47c0ef7994d85b218e46aac12e09d
#: ../../topics/db/queries.txt:991
msgid ""
"Sometimes you want to set a field to a particular value for all the objects "
"in a :class:`~django.db.models.query.QuerySet`. You can do this with the "
":meth:`~django.db.models.query.QuerySet.update` method. For example::"
msgstr "Il peut arriver que vous souhaitiez définir la valeur d'un certain champ pour tous les objets d'un :class:`~django.db.models.query.QuerySet`. C'est faisable à l'aide de la méthode :meth:`~django.db.models.query.QuerySet.update`. Par exemple ::"

# d52d24b7f2e548bfb68661db6d600ef5
#: ../../topics/db/queries.txt:998
msgid ""
"You can only set non-relation fields and "
":class:`~django.db.models.ForeignKey` fields using this method. To update a "
"non-relation field, provide the new value as a constant. To update "
":class:`~django.db.models.ForeignKey` fields, set the new value to be the "
"new model instance you want to point to. For example::"
msgstr "Seuls les champs qui ne sont pas des relations et les champs :class:`~django.db.models.ForeignKey` peuvent être mis à jour avec cette méthode. Pour mettre à jour un champ qui ne représente pas une relation, indiquez la nouvelle valeur sous forme de constante. Pour mettre à jour un champ :class:`~django.db.models.ForeignKey`, indiquez la nouvelle valeur sous forme d'une instance de modèle vers laquelle le champ devra pointer. Par exemple ::"

# e902888c5553452c966ce88c01421ba1
#: ../../topics/db/queries.txt:1008
msgid ""
"The ``update()`` method is applied instantly and returns the number of rows "
"matched by the query (which may not be equal to the number of rows updated "
"if some rows already have the new value). The only restriction on the "
":class:`~django.db.models.query.QuerySet` that is updated is that it can "
"only access one database table, the model's main table. You can filter based"
" on related fields, but you can only update columns in the model's main "
"table. Example::"
msgstr "La méthode ``update()`` est appliquée immédiatement et renvoie le nombre de lignes correspondant à la requête (ce qui ne correspond pas toujours au nombre de lignes mises à jour si certaines lignes ont déjà la bonne valeur). La seule restriction sur l'objet :class:`~django.db.models.query.QuerySet` mis à jour est qu'il ne peut accéder qu'à une seule table de base de données, la table principale du modèle. Vous pouvez filtrer selon des champs liés, mais vous ne pouvez mettre à jour des colonnes que dans la table principale du modèle. Exemple ::"

# bd47228203354710a2b375b8bd135a35
#: ../../topics/db/queries.txt:1021
msgid ""
"Be aware that the ``update()`` method is converted directly to an SQL "
"statement. It is a bulk operation for direct updates. It doesn't run any "
":meth:`~django.db.models.Model.save` methods on your models, or emit the "
"``pre_save`` or ``post_save`` signals (which are a consequence of calling "
":meth:`~django.db.models.Model.save`), or honor the "
":attr:`~django.db.models.DateField.auto_now` field option. If you want to "
"save every item in a :class:`~django.db.models.query.QuerySet` and make sure"
" that the :meth:`~django.db.models.Model.save` method is called on each "
"instance, you don't need any special function to handle that. Just loop over"
" them and call :meth:`~django.db.models.Model.save`::"
msgstr "Soyez conscient que la méthode ``update()`` est directement convertie en instruction SQL. Il s'agit d'une opération groupée pour des mises à jour directes. Elle ne fait appel à aucune méthode :meth:`~django.db.models.Model.save` des modèles, n'émet aucun signal ``pre_save`` ou ``post_save`` (qui sont des conséquences de l'appel à :meth:`~django.db.models.Model.save`) et ne respecte pas l'option de champ :attr:`~django.db.models.DateField.auto_now`. Si vous souhaitez enregistrer chaque élément d'un objet :class:`~django.db.models.query.QuerySet` tout en garantissant que la méthode :meth:`~django.db.models.Model.save` de chaque instance est appelée, vous n'avez pas besoin d'une fonction particulière pour cela. Il suffit d'effectuer une boucle et d'appeler :meth:`~django.db.models.Model.save` pour chaque objet ::"

# 7a064eef116a4553b3ad33f5501d359b
#: ../../topics/db/queries.txt:1035
msgid ""
"Calls to update can also use :ref:`F() objects <query-expressions>` to "
"update one field based on the value of another field in the model. This is "
"especially useful for incrementing counters based upon their current value. "
"For example, to increment the pingback count for every entry in the blog::"
msgstr "Les appels à ``update`` peuvent aussi utiliser les :ref:`objets F() <query-expressions>` pour mettre à jour un champ en fonction de la valeur d'un autre champ du modèle. C'est particulièrement utile pour incrémenter des compteurs en fonction de leur valeur actuelle. Par exemple, pour incrémenter le nombre de pings de chaque article d'un blogue ::"

# 92e424995a244e359dc8235988e5a2bb
#: ../../topics/db/queries.txt:1042
msgid ""
"However, unlike ``F()`` objects in filter and exclude clauses, you can't "
"introduce joins when you use ``F()`` objects in an update -- you can only "
"reference fields local to the model being updated. If you attempt to "
"introduce a join with an ``F()`` object, a ``FieldError`` will be raised::"
msgstr "Cependant, au contraire des objets ``F()`` dans les clauses ``filter()`` et ``exclude()``, il n'est pas autorisé d'introduire des jointures lors de l'utilisation de ``F()`` dans des mises à jour ; seuls des champs du modèle en cours de mise à jour peuvent être référencés. Si vous essayez d'introduire une jointure avec un objet ``F()``, une erreur ``FieldError`` sera générée ::"

# 59e1b981706a421995080451b15e4caa
#: ../../topics/db/queries.txt:1053
msgid "Related objects"
msgstr "Objets liés"

# ad9a0692320143a4a62e16b8c443d464
#: ../../topics/db/queries.txt:1055
msgid ""
"When you define a relationship in a model (i.e., a "
":class:`~django.db.models.ForeignKey`, "
":class:`~django.db.models.OneToOneField`, or "
":class:`~django.db.models.ManyToManyField`), instances of that model will "
"have a convenient API to access the related object(s)."
msgstr "Lorsque vous définissez une relation dans un modèle (par ex. un champ :class:`~django.db.models.ForeignKey`, :class:`~django.db.models.OneToOneField` ou :class:`~django.db.models.ManyToManyField`), les instances de ce modèle disposeront d'une API agréable pour accéder aux objets liés."

# ac2a45def36c4ae6a5cd28aea2ee3fc8
#: ../../topics/db/queries.txt:1061
msgid ""
"Using the models at the top of this page, for example, an ``Entry`` object "
"``e`` can get its associated ``Blog`` object by accessing the ``blog`` "
"attribute: ``e.blog``."
msgstr "En utilisant les modèles définis au sommet de cette page, par exemple, un objet ``Entry`` ``e`` peut atteindre son objet ``Blog`` lié en accédant à l'attribut ``blog``: ``e.blog``."

# 22318c15cc964d7faab1c6d6a0a96eed
#: ../../topics/db/queries.txt:1065
msgid ""
"(Behind the scenes, this functionality is implemented by Python "
"descriptors_. This shouldn't really matter to you, but we point it out here "
"for the curious.)"
msgstr "(En arrière-plan, cette fonctionnalité est implémentée par des descripteurs_ Python. Cela n'a pas de conséquence particulière, mais nous le mentionnons pour les curieux)."

# 1690820bd4644ebd8fece85f70ddea44
#: ../../topics/db/queries.txt:1068
msgid ""
"Django also creates API accessors for the \"other\" side of the relationship"
" -- the link from the related model to the model that defines the "
"relationship. For example, a ``Blog`` object ``b`` has access to a list of "
"all related ``Entry`` objects via the ``entry_set`` attribute: "
"``b.entry_set.all()``."
msgstr "Django crée également une API d'accession par l'autre côté de la relation, le lien depuis le modèle lié au modèle qui définit la relation. Par exemple, un objet ``Blog`` ``b`` peut accéder à une liste de tous les objets ``Entry`` liés par l'attribut ``entry_set``: ``b.entry_set.all()``."

# 2101b4ae9535451fa10a9bfb7b78ca1a
#: ../../topics/db/queries.txt:1073
msgid ""
"All examples in this section use the sample ``Blog``, ``Author`` and "
"``Entry`` models defined at the top of this page."
msgstr "Tous les exemples de cette section utilisent les modèles d'exemple ``Blog``, ``Author`` et ``Entry`` définis au sommet de cette page."

# 1cfd4d240235493c83d117a5812e94b3
#: ../../topics/db/queries.txt:1079
msgid "One-to-many relationships"
msgstr "Relations un-à-plusieurs"

# 2be0a29db4594aecade8ffa164397fe5
#: ../../topics/db/queries.txt:1082
msgid "Forward"
msgstr "Sens « descendant »"

# 1e36550a7a284a1f8ce74099b52b1ee2
#: ../../topics/db/queries.txt:1084
msgid ""
"If a model has a :class:`~django.db.models.ForeignKey`, instances of that "
"model will have access to the related (foreign) object via a simple "
"attribute of the model."
msgstr "Si un modèle possède un champ :class:`~django.db.models.ForeignKey`, les instances de ce modèle ont accès à l'objet lié par un simple attribut du modèle."

# 91ae22c545394898be5c6d4ec8838b76
#: ../../topics/db/queries.txt:1093
msgid ""
"You can get and set via a foreign-key attribute. As you may expect, changes "
"to the foreign key aren't saved to the database until you call "
":meth:`~django.db.models.Model.save`. Example::"
msgstr "Un attribut d'objet lié (clé étrangère) est accessible en lecture et en écriture. Comme l'on peut s'y attendre, les modifications de la clé étrangère ne sont pas enregistrées en base de données tant que :meth:`~django.db.models.Model.save` n'a pas été appelée. Exemple ::"

# 6945fb1dff684063b8f87df4b4cf549a
#: ../../topics/db/queries.txt:1101
msgid ""
"If a :class:`~django.db.models.ForeignKey` field has ``null=True`` set "
"(i.e., it allows ``NULL`` values), you can assign ``None`` to remove the "
"relation. Example::"
msgstr ""

# f61076a0b53f499bb6bf3fbd4f7d20ae
#: ../../topics/db/queries.txt:1109
msgid ""
"Forward access to one-to-many relationships is cached the first time the "
"related object is accessed. Subsequent accesses to the foreign key on the "
"same object instance are cached. Example::"
msgstr "L'accès « descendant » aux relations un-à-plusieurs est mis en cache lors du premier accès à l'objet lié. Les accès suivants à la clé étrangère depuis la même instance d'objet se font à partir du cache. Exemple ::"

# 585297ca329c485a9b2e5e432a2fd0c3
#: ../../topics/db/queries.txt:1117
msgid ""
"Note that the :meth:`~django.db.models.query.QuerySet.select_related` "
":class:`~django.db.models.query.QuerySet` method recursively prepopulates "
"the cache of all one-to-many relationships ahead of time. Example::"
msgstr "Notez que la méthode :meth:`~django.db.models.query.QuerySet.select_related` de :class:`~django.db.models.query.QuerySet` peuple de manière récursive et anticipée le cache de toutes les relations un-à-plusieurs. Exemple ::"

# 95fdb960d24145488dff41785ff4322b
#: ../../topics/db/queries.txt:1128
msgid "Following relationships \"backward\""
msgstr "Accès aux relations inverses"

# da45049acece4916a6be0f7169c6792a
#: ../../topics/db/queries.txt:1130
msgid ""
"If a model has a :class:`~django.db.models.ForeignKey`, instances of the "
"foreign-key model will have access to a :class:`~django.db.models.Manager` "
"that returns all instances of the first model. By default, this "
":class:`~django.db.models.Manager` is named ``FOO_set``, where ``FOO`` is "
"the source model name, lowercased. This :class:`~django.db.models.Manager` "
"returns ``QuerySets``, which can be filtered and manipulated as described in"
" the \"Retrieving objects\" section above."
msgstr "Si un modèle possède un champ :class:`~django.db.models.ForeignKey`, les instances du modèle de clé étrangère auront accès à un :class:`~django.db.models.Manager` renvoyant toutes les instances du premier modèle. Par défaut, ce :class:`~django.db.models.Manager` se nomme ``XXX_set``, où ``XXX`` est le nom du modèle source en minuscules. Ce :class:`~django.db.models.Manager` renvoie des objets ``QuerySet``, qui peuvent être filtrés et manipulés comme le décrit la section « Sélection d'objets » ci-dessus."

# 4599c73e496c4306a7a5b536e38c7ff3
#: ../../topics/db/queries.txt:1147
msgid ""
"You can override the ``FOO_set`` name by setting the "
":attr:`~django.db.models.ForeignKey.related_name` parameter in the "
":class:`~django.db.models.ForeignKey` definition. For example, if the "
"``Entry`` model was altered to ``blog = ForeignKey(Blog, "
"related_name='entries')``, the above example code would look like this::"
msgstr ""

# c71ad22f8e9640369b39e55e3623f0ad
#: ../../topics/db/queries.txt:1160
msgid ""
"In addition to the :class:`~django.db.models.query.QuerySet` methods defined"
" in \"Retrieving objects\" above, the :class:`~django.db.models.ForeignKey` "
":class:`~django.db.models.Manager` has additional methods used to handle the"
" set of related objects. A synopsis of each is below, and complete details "
"can be found in the :doc:`related objects reference "
"</ref/models/relations>`."
msgstr "En plus des méthodes :class:`~django.db.models.query.QuerySet` présentées ci-dessus dans « Sélection d'objets », l'objet :class:`~django.db.models.Manager` d'une :class:`~django.db.models.ForeignKey` possède des méthodes supplémentaires pour gérer l'ensemble des objets liés. Vous trouverez ci-dessous un résumé de ces méthodes et des détails plus complets peuvent être lus dans la :doc:`référence des objets liés </ref/models/relations>`."

# ccbd04b6df3b4cbca46e2014379ce430
#: ../../topics/db/queries.txt:1167
msgid "``add(obj1, obj2, ...)``"
msgstr "``add(obj1, obj2, ...)``"

# f89cb5b7b92e487a8fa0f07a5d77f767
#: ../../topics/db/queries.txt:1167
msgid "Adds the specified model objects to the related object set."
msgstr "Ajoute les objets modèles indiqués à l'ensemble des objets liés."

# a1b0308aa1914c87af99bbdf422a98d5
#: ../../topics/db/queries.txt:1171
msgid "``create(**kwargs)``"
msgstr "``create(**kwargs)``"

# 05d0d288d4db4cb99d188c8a35f6c8b3
#: ../../topics/db/queries.txt:1170
msgid ""
"Creates a new object, saves it and puts it in the related object set. "
"Returns the newly created object."
msgstr "Crée un nouvel objet, l'enregistre et le place dans l'ensemble des objets liés. Renvoie l'objet nouvellement créé."

# c97f4b5f5ac24215b4baf15cca7d7835
#: ../../topics/db/queries.txt:1174
msgid "``remove(obj1, obj2, ...)``"
msgstr "``remove(obj1, obj2, ...)``"

# feb470f67d5742d69d951cee45199761
#: ../../topics/db/queries.txt:1174
msgid "Removes the specified model objects from the related object set."
msgstr "Enlève les objets modèles indiqués de l'ensemble des objets liés."

# ea5fcefaafbd4762b0580127af7c5c86
#: ../../topics/db/queries.txt:1177
msgid "``clear()``"
msgstr "``clear()``"

# 6d5d8d8fac2a4db6a38766957a2cd139
#: ../../topics/db/queries.txt:1177
msgid "Removes all objects from the related object set."
msgstr "Enlève tous les objets de l'ensemble des objets liés."

# 8ad1f842307e419f922e5f21b23bd087
#: ../../topics/db/queries.txt:1179
msgid ""
"To assign the members of a related set in one fell swoop, just assign to it "
"from any iterable object. The iterable can contain object instances, or just"
" a list of primary key values. For example::"
msgstr "Pour définir les membres d'un ensemble d'objets liés d'un seul coup, il suffit d'attribuer des valeurs provenant d'un objet itérable. Celui-ci peut contenir des instances d'objets ou une simple liste de valeurs de clés primaires. Par exemple ::"

# 6ac9de8047204bb38efa3df25af0dd53
#: ../../topics/db/queries.txt:1186
msgid ""
"In this example, ``e1`` and ``e2`` can be full Entry instances, or integer "
"primary key values."
msgstr "Dans cet exemple, ``e1`` et ``e2`` peuvent être des instances normales de ``Entry`` ou des valeurs entières de clés primaires."

# ff333148340142a99fd30d566b563376
#: ../../topics/db/queries.txt:1189
msgid ""
"If the ``clear()`` method is available, any pre-existing objects will be "
"removed from the ``entry_set`` before all objects in the iterable (in this "
"case, a list) are added to the set. If the ``clear()`` method is *not* "
"available, all objects in the iterable will be added without removing any "
"existing elements."
msgstr "Si la méthode ``clear()`` est disponible, tout objet pré-existant sera enlevé de ``entry_set`` avant que tous les objets de la séquence itérable (dans ce cas, une liste) soient ajoutés à l'ensemble. Si la méthode ``clear()`` *n'est pas* disponible, tous les objets de la séquence itérable sont ajoutés sans que les éléments existants ne soient enlevés."

# dea072a46fbb42418fd5b5fc8c4aab39
#: ../../topics/db/queries.txt:1195
msgid ""
"Each \"reverse\" operation described in this section has an immediate effect"
" on the database. Every addition, creation and deletion is immediately and "
"automatically saved to the database."
msgstr "Toute opération « inverse » décrite dans cette section prend immédiatement effet au niveau de la base de données. Tout ajout, création ou suppression est immédiatement et automatiquement enregistré dans la base de données."

# 86d4bfd6a9fd4cf6a3224ef903f0c997
#: ../../topics/db/queries.txt:1204
msgid ""
"Both ends of a many-to-many relationship get automatic API access to the "
"other end. The API works just as a \"backward\" one-to-many relationship, "
"above."
msgstr "Les deux côtés d'une relation plusieurs-à-plusieurs obtiennent automatiquement l'API d'accès à l'autre côté. L'API fonctionne de manière identique à la relation « inverse » d'une relation un-à-plusieurs décrite ci-dessus."

# 10f9c4ccb58b45aeb323da9cc32bcb13
#: ../../topics/db/queries.txt:1207
msgid ""
"The only difference is in the attribute naming: The model that defines the "
":class:`~django.db.models.ManyToManyField` uses the attribute name of that "
"field itself, whereas the \"reverse\" model uses the lowercased model name "
"of the original model, plus ``'_set'`` (just like reverse one-to-many "
"relationships)."
msgstr "La seule différence tient dans le nommage de l'attribut : le modèle qui définit le champ :class:`~django.db.models.ManyToManyField` utilise le nom d'attribut du champ lui-même, alors que le modèle « inverse » utilise le nom de modèle en minuscules du modèle original en y ajoutant ``'_set'`` (tout comme pour les relations un-à-plusieurs inverses)."

# 92a13e1dcea14112ba8f064f646a0d84
#: ../../topics/db/queries.txt:1212
msgid "An example makes this easier to understand::"
msgstr "Un exemple va rendre tout ceci plus compréhensible ::"

# 92c485a9db7343779fcb083dfcd09a00
#: ../../topics/db/queries.txt:1222
msgid ""
"Like :class:`~django.db.models.ForeignKey`, "
":class:`~django.db.models.ManyToManyField` can specify "
":attr:`~django.db.models.ManyToManyField.related_name`. In the above "
"example, if the :class:`~django.db.models.ManyToManyField` in ``Entry`` had "
"specified ``related_name='entries'``, then each ``Author`` instance would "
"have an ``entries`` attribute instead of ``entry_set``."
msgstr ""

# dd74d022c29c4eb3966b35204a291b4a
#: ../../topics/db/queries.txt:1232
msgid ""
"One-to-one relationships are very similar to many-to-one relationships. If "
"you define a :class:`~django.db.models.OneToOneField` on your model, "
"instances of that model will have access to the related object via a simple "
"attribute of the model."
msgstr "Les relations un-à-un sont très semblables aux relations plusieurs-à-un. Si vous définissez un champ :class:`~django.db.models.OneToOneField` dans votre modèle, les instances de ce modèle auront accès à l'objet lié via un simple attribut du modèle."

# 035b22653a284cdd92abaa2907d90181
#: ../../topics/db/queries.txt:1246
msgid ""
"The difference comes in \"reverse\" queries. The related model in a one-to-"
"one relationship also has access to a :class:`~django.db.models.Manager` "
"object, but that :class:`~django.db.models.Manager` represents a single "
"object, rather than a collection of objects::"
msgstr "La différence survient dans les requêtes « inverses ». Le modèle lié dans une relation un-à-un a aussi accès à un objet :class:`~django.db.models.Manager`, mais celui-ci représente un objet unique et non pas une collection d'objets ::"

# 2907f5fe0c244cde968c13bdb6c15d34
#: ../../topics/db/queries.txt:1254
msgid ""
"If no object has been assigned to this relationship, Django will raise a "
"``DoesNotExist`` exception."
msgstr "Si aucun objet n'a été attribué à cette relation, Django génère une exception ``DoesNotExist``."

# 52ddee3de08f4d4280732c56f75f5aa8
#: ../../topics/db/queries.txt:1257
msgid ""
"Instances can be assigned to the reverse relationship in the same way as you"
" would assign the forward relationship::"
msgstr "Il est possible d'attribuer des instances à la relation inverse sur le même principe que pour les relations descendantes ::"

# d712d8e7e1df4cf1809d647b2242d477
#: ../../topics/db/queries.txt:1263
msgid "How are the backward relationships possible?"
msgstr "Comment la relation inverse est-elle possible ?"

# aad2f4f36abc430a98dac1c1f22c52ce
#: ../../topics/db/queries.txt:1265
msgid ""
"Other object-relational mappers require you to define relationships on both "
"sides. The Django developers believe this is a violation of the DRY (Don't "
"Repeat Yourself) principle, so Django only requires you to define the "
"relationship on one end."
msgstr "D'autres interfaces d'abstraction objet-relationnel exigent de définir les relations des deux côtés. Les développeurs Django pensent qu'il s'agit d'une violation du principe DRY (Don't Repeat Yourself, ne pas se répéter), c'est pourquoi Django ne demande de définir la relation que d'un seul côté."

# ed8f4e69f62641909e4c093a33b2e28d
#: ../../topics/db/queries.txt:1270
msgid ""
"But how is this possible, given that a model class doesn't know which other "
"model classes are related to it until those other model classes are loaded?"
msgstr "Mais comment est-ce possible, dans la mesure où une classe de modèle ne sait pas quelles autres classes de modèles lui sont liées avant que ces autres classes soient elles-mêmes chargées ?"

# 4db9180369604605915deac083244fc5
#: ../../topics/db/queries.txt:1273
msgid ""
"The answer lies in the :setting:`INSTALLED_APPS` setting. The first time any"
" model is loaded, Django iterates over every model in "
":setting:`INSTALLED_APPS` and creates the backward relationships in memory "
"as needed. Essentially, one of the functions of :setting:`INSTALLED_APPS` is"
" to tell Django the entire model domain."
msgstr "La réponse se trouve dans le réglage :setting:`INSTALLED_APPS`. Au premier chargement d'un modèle, Django parcourt tous les autres modèles de :setting:`INSTALLED_APPS` et crée les relations inverses en mémoire selon les besoins. Fondamentalement, l'un des rôles de :setting:`INSTALLED_APPS` est d'informer Django sur le système complet des modèles."

# 71caea46002f4a639cae861884b97b99
#: ../../topics/db/queries.txt:1280
msgid "Queries over related objects"
msgstr "Les requêtes sur les objets liés"

# 9098975af90e4752bc89fe01b1bdfb63
#: ../../topics/db/queries.txt:1282
msgid ""
"Queries involving related objects follow the same rules as queries involving"
" normal value fields. When specifying the value for a query to match, you "
"may use either an object instance itself, or the primary key value for the "
"object."
msgstr "Les requêtes impliquant des objets liés suivent les mêmes règles que les requêtes contenant des valeurs de champs normales. Pour indiquer la valeur à laquelle doit correspondre une requête, vous pouvez utiliser soit une instance de l'objet lui-même, soit la valeur de clé primaire de l'objet."

# 5c794e33e96f46f597d8a7edcfd5ef5a
#: ../../topics/db/queries.txt:1286
msgid ""
"For example, if you have a Blog object ``b`` with ``id=5``, the following "
"three queries would be identical::"
msgstr "Par exemple, si vous avez un objet ``Blog`` ``b`` avec ``id=5``, les trois requêtes suivantes sont identiques ::"

# 8c9b80712b964f1b97656ac9d95055a0
#: ../../topics/db/queries.txt:1294
msgid "Falling back to raw SQL"
msgstr "Recours au code SQL brut"

# 3db41e6779274b4cbae64ce976040903
#: ../../topics/db/queries.txt:1296
msgid ""
"If you find yourself needing to write an SQL query that is too complex for "
"Django's database-mapper to handle, you can fall back on writing SQL by "
"hand. Django has a couple of options for writing raw SQL queries; see "
":doc:`/topics/db/sql`."
msgstr "Si vous rencontrez le besoin de devoir écrire une requête SQL trop complexe pour l'abstraction de base de données de Django, il peut être nécessaire d'écrire le code SQL à la main. Django offre quelques options pour l'écriture de requêtes SQL brutes ; voir :doc:`/topics/db/sql`."

# 0ccc91abe7104fa098f6e1ef1c347263
#: ../../topics/db/queries.txt:1301
msgid ""
"Finally, it's important to note that the Django database layer is merely an "
"interface to your database. You can access your database via other tools, "
"programming languages or database frameworks; there's nothing Django-"
"specific about your database."
msgstr "Finalement, il est important de noter que la couche de base de données de Django n'est qu'une interface vers votre base de données. Vous pouvez accéder à votre base de données par d'autres outils, langages de programmation ou environnements de base de données ; il n'y a rien de spécifique à Django en ce qui concerne la base de données."

# 7d7b9edfe35f418d84f1c1e1e5c7b523
#: ../../topics/db/sql.txt:3
msgid "Performing raw SQL queries"
msgstr "Lancement de requêtes SQL brutes"

# cb52f2e91b9c42118fadc3e257ae008b
#: ../../topics/db/sql.txt:7
msgid ""
"When the :doc:`model query APIs </topics/db/queries>` don't go far enough, "
"you can fall back to writing raw SQL. Django gives you two ways of "
"performing raw SQL queries: you can use :meth:`Manager.raw()` to `perform "
"raw queries and return model instances`__, or you can avoid the model layer "
"entirely and `execute custom SQL directly`__."
msgstr "Lorsque l':doc:`API d'interrogation des modèles </topics/db/queries>` atteint ses limites, il est possible de recourir à l'écriture de code SQL brut. Django propose deux manières d'exécuter des requêtes SQL brutes : vous pouvez utiliser :meth:`Manager.raw()` pour `exécuter des requêtes brutes et renvoyer des instances de modèles`__ ou vous pouvez outrepasser complètement la couche des modèles et `exécuter directement du code SQL personnalisé`__."

# 1d9230788f944097b48779d2f4fa7e51
#: ../../topics/db/sql.txt:19
msgid "Performing raw queries"
msgstr "Lancement de requêtes brutes"

# 7545e33b50b9436aa41fe49cc5d429b9
#: ../../topics/db/sql.txt:21
msgid ""
"The ``raw()`` manager method can be used to perform raw SQL queries that "
"return model instances:"
msgstr "La méthode de gestionnaire ``raw()`` peut être utilisée pour exécuter des requêtes SQL brutes qui renvoient des instances de modèles :"

# 9b65cfceaf0040a9830431b752a8ff75
#: ../../topics/db/sql.txt:26
msgid ""
"This method method takes a raw SQL query, executes it, and returns a "
"``django.db.models.query.RawQuerySet`` instance. This ``RawQuerySet`` "
"instance can be iterated over just like an normal QuerySet to provide object"
" instances."
msgstr "Cette méthode accepte une requête SQL brute, l'exécute et renvoie une instance ``django.db.models.query.RawQuerySet``. Il est possible alors d'effectuer une boucle sur cette instance ``RawQuerySet`` tout comme pour un objet QuerySet normal afin d'accéder aux instances d'objets."

# 3eb424fadebd4b058d49e7c098223159
#: ../../topics/db/sql.txt:30
msgid ""
"This is best illustrated with an example. Suppose you've got the following "
"model::"
msgstr "Un exemple vaut mieux que mille mots. Supposons que vous ayez créé le modèle suivant ::"

# f5da355da26c4b54ba55d5d894761c35
#: ../../topics/db/sql.txt:37
msgid "You could then execute custom SQL like so::"
msgstr "Vous pouvez alors exécuter du code SQL personnalisé comme ceci ::"

# b718f903124a4dcca9609b9ead6cfef8
#: ../../topics/db/sql.txt:44
msgid ""
"Of course, this example isn't very exciting -- it's exactly the same as "
"running ``Person.objects.all()``. However, ``raw()`` has a bunch of other "
"options that make it very powerful."
msgstr "Naturellement, cet exemple n'est pas des plus passionnants, car il correspond exactement à l'expression ``Person.objects.all()``. Toutefois, ``raw()`` comporte quelques autres options qui en font un outil très puissant."

# 707781c4c1aa469c84500e9a7794b34a
#: ../../topics/db/sql.txt:48
msgid "Model table names"
msgstr ""

# 806533b1a64b43778bc97ba856ed511d
#: ../../topics/db/sql.txt:50
msgid "Where'd the name of the ``Person`` table come from in that example?"
msgstr "D'où peut bien provenir le nom de la table ``Person`` dans cet exemple ?"

# a7ef6d86abe848bf82d7470fc0245409
#: ../../topics/db/sql.txt:52
msgid ""
"By default, Django figures out a database table name by joining the model's "
"\"app label\" -- the name you used in ``manage.py startapp`` -- to the "
"model's class name, with an underscore between them. In the example we've "
"assumed that the ``Person`` model lives in an app named ``myapp``, so its "
"table would be ``myapp_person``."
msgstr "Par défaut, Django compose un nom de table de base de données en combinant l'« étiquette d'application » du modèle (le nom utilisé dans ``manage.py startapp``) avec le nom de classe du modèle, séparés par un soulignement. Dans l'exemple, nous sommes partis du principe que le modèle ``Person`` se trouvait dans une application nommée ``myapp``, et donc que le nom de la table était ``myapp_person``."

# 0351e68de6eb48b69b34e355e65fecee
#: ../../topics/db/sql.txt:58
msgid ""
"For more details check out the documentation for the "
":attr:`~Options.db_table` option, which also lets you manually set the "
"database table name."
msgstr "Pour plus de détails, consultez la documentation de l'option :attr:`~Options.db_table` qui vous permet également de définir manuellement le nom de table de la base de données."

# 7a92277b43914be08c0ac2f1d8ec66e5
#: ../../topics/db/sql.txt:64
msgid ""
"No checking is done on the SQL statement that is passed in to ``.raw()``. "
"Django expects that the statement will return a set of rows from the "
"database, but does nothing to enforce that. If the query does not return "
"rows, a (possibly cryptic) error will result."
msgstr "Aucune vérification n'est effectuée pour les instructions SQL transmises à ``.raw()``. Django s'attend à ce que la requête renvoie un ensemble de lignes de la base de données, mais ne fait rien pour le vérifier a priori. Si la requête ne retourne pas de ligne, une erreur (potentiellement cryptique) sera générée."

# 20f58e5e1d9d48649a08592f78ea535a
#: ../../topics/db/sql.txt:70
msgid "Mapping query fields to model fields"
msgstr "Correspondance entre champs de requête et champs de modèle"

# 6d928896c243496abc0ab02a97082ac9
#: ../../topics/db/sql.txt:72
msgid ""
"``raw()`` automatically maps fields in the query to fields on the model."
msgstr "``raw()`` fait automatiquement correspondre les champs de la requête avec les champs du modèle."

# 4e57ed5307a943eab5856ba53187e9d9
#: ../../topics/db/sql.txt:74
msgid ""
"The order of fields in your query doesn't matter. In other words, both of "
"the following queries work identically::"
msgstr "L'ordre des champs dans la requête n'est pas important. En d'autres termes, les deux requêtes suivantes donneront le même résultat ::"

# dc6adaef262340e9a1a8f032f580ebfd
#: ../../topics/db/sql.txt:82
msgid ""
"Matching is done by name. This means that you can use SQL's ``AS`` clauses "
"to map fields in the query to model fields. So if you had some other table "
"that had ``Person`` data in it, you could easily map it into ``Person`` "
"instances::"
msgstr "La correspondance se fait sur le nom. Cela signifie que vous pouvez utiliser les clauses SQL ``AS`` pour faire correspondre les champs de la requête aux champs du modèle. Ainsi, si vous disposez d'une autre table contenant les données de ``Person``, vous pouvez facilement faire correspondre ces données avec des instances de ``Person``::"

# 296c817af16045758f7a391be0ad685f
#: ../../topics/db/sql.txt:92
msgid ""
"As long as the names match, the model instances will be created correctly."
msgstr "Tant que les noms correspondent, les instances de modèle seront créées correctement."

# 147a01a901bd4c24ba3834b4fe03b16f
#: ../../topics/db/sql.txt:94
msgid ""
"Alternatively, you can map fields in the query to model fields using the "
"``translations`` argument to ``raw()``. This is a dictionary mapping names "
"of fields in the query to names of fields on the model. For example, the "
"above query could also be written::"
msgstr "Il est aussi possible de faire correspondre les champs de requête aux champs de modèle en utilisant le paramètre ``translations`` de ``raw()``. Il s'agit d'un dictionnaire faisant correspondre les noms des champs de la requête aux noms des champs du modèle. Par exemple, la requête ci-dessus aurait aussi pu être écrite de cette manière ::"

# 003091b9b93848bab03d967a6e14c013
#: ../../topics/db/sql.txt:103
msgid "Index lookups"
msgstr "Filtrage par index"

# 7df2efa9579449fd809619fcf62390ca
#: ../../topics/db/sql.txt:105
msgid ""
"``raw()`` supports indexing, so if you need only the first result you can "
"write::"
msgstr "``raw()`` autorise l'utilisation d'index ; dans le cas où vous souhaitez obtenir uniquement le premier résultat, vous pouvez écrire ::"

# 1675ade05bd24ff0b43150994e480447
#: ../../topics/db/sql.txt:110
msgid ""
"However, the indexing and slicing are not performed at the database level. "
"If you have a big amount of ``Person`` objects in your database, it is more "
"efficient to limit the query at the SQL level::"
msgstr "Cependant, l'indexation et la segmentation ne sont pas effectuées au niveau de la base de données. Si la base de données contient une grande quantité d'objets ``Person``, il est plus efficace de limiter la requête au niveau SQL ::"

# b6cc86e34f0a413896a70184d377506e
#: ../../topics/db/sql.txt:117
msgid "Deferring model fields"
msgstr "Report des champs de modèle"

# af51bc8d78ea463aa20dbfa9942c9aa7
#: ../../topics/db/sql.txt:119
msgid "Fields may also be left out::"
msgstr "Il est aussi possible d'ignorer certains champs ::"

# 88bba0d45ab940619b178475d80e7d9c
#: ../../topics/db/sql.txt:123
msgid ""
"The ``Person`` objects returned by this query will be deferred model "
"instances (see :meth:`~django.db.models.query.QuerySet.defer()`). This means"
" that the fields that are omitted from the query will be loaded on demand. "
"For example::"
msgstr "Les objets ``Person`` renvoyés par cette requête constitueront des instances de modèle différées (voir :meth:`~django.db.models.query.QuerySet.defer()`). Cela signifie que les champs omis dans la requête seront chargés à la demande. Par exemple ::"

# 8cde2b1208f04396817b6160fcbafd39
#: ../../topics/db/sql.txt:134
msgid ""
"From outward appearances, this looks like the query has retrieved both the "
"first name and last name. However, this example actually issued 3 queries. "
"Only the first names were retrieved by the raw() query -- the last names "
"were both retrieved on demand when they were printed."
msgstr "En apparence, il semble que la requête ait récupéré à la fois le prénom et le nom. Cependant, cet exemple effectue en réalité 3 requêtes. Seuls les prénoms (first_name) ont été obtenus par la requête ``raw()``, les noms (last_name) ont été obtenus chacun à la demande au moment où ils ont été affichés."

# efacec2ad2fa4815b882817c58f492fc
#: ../../topics/db/sql.txt:139
msgid ""
"There is only one field that you can't leave out - the primary key field. "
"Django uses the primary key to identify model instances, so it must always "
"be included in a raw query. An ``InvalidQuery`` exception will be raised if "
"you forget to include the primary key."
msgstr "Un seul champ ne peut pas être omis, c'est le champ clé primaire. Django utilise la clé primaire pour identifier les instances de modèle, elle doit donc être obligatoirement incluse dans la requête brute. Une exception ``InvalidQuery`` est générée si vous oubliez d'inclure la clé primaire."

# cc35dbe91e3d47efaab0f6cdf8b2470e
#: ../../topics/db/sql.txt:145
msgid "Adding annotations"
msgstr "Ajout d'annotations"

# da0ac9b173a24482ac7c6ab3aa94e970
#: ../../topics/db/sql.txt:147
msgid ""
"You can also execute queries containing fields that aren't defined on the "
"model. For example, we could use `PostgreSQL's age() function`__ to get a "
"list of people with their ages calculated by the database::"
msgstr "Vous pouvez aussi exécuter des requêtes contenant des champs qui ne sont pas définis dans le modèle. Par exemple, il serait possible d'utiliser la `fonction age() de PostgreSQL`__ pour obtenir une liste de personnes avec leur âge calculé par la base de données ::"

# e9cd88021fb747d8a4824396ab7191d7
#: ../../topics/db/sql.txt:161
msgid "Passing parameters into ``raw()``"
msgstr "Transmission de paramètres dans ``raw()``"

# 3770f9342b204acbb87b3750c6121a86
#: ../../topics/db/sql.txt:163
msgid ""
"If you need to perform parameterized queries, you can use the ``params`` "
"argument to ``raw()``::"
msgstr "S'il est nécessaire d'effectuer des requêtes paramétrées, il est possible d'utiliser le paramètre ``params`` de ``raw()``::"

# fc29ee2827164b2187b6ac3def3792f6
#: ../../topics/db/sql.txt:169
msgid ""
"``params`` is a list or dictionary of parameters. You'll use ``%s`` "
"placeholders in the query string for a list, or ``%(key)s`` placeholders for"
" a dictionary (where ``key`` is replaced by a dictionary key, of course), "
"regardless of your database engine.  Such placeholders will be replaced with"
" parameters from the ``params`` argument."
msgstr ""

# 08ab835758ea4f7ba7ee7b437e203174
#: ../../topics/db/sql.txt:176
msgid "Dictionary params not supported with SQLite"
msgstr ""

# da06eab2a53c4c019f918e02561e82e6
#: ../../topics/db/sql.txt:178
msgid ""
"Dictionary params are not supported with the SQLite backend; with this "
"backend, you must pass parameters as a list."
msgstr ""

# 07928aaf9cef4fa5a341daa344df33c8
#: ../../topics/db/sql.txt:183
msgid "**Do not use string formatting on raw queries!**"
msgstr "**N'utilisez pas de formatage de chaîne dans les requêtes brutes !**"

# 96d0dd1151984c8c83fbe6ac68063298
#: ../../topics/db/sql.txt:185
msgid "It's tempting to write the above query as::"
msgstr "Il est tentant d'écrire la requête ci-dessus comme ceci ::"

# 94754a56bfc049feb1b8682cc105d8c2
#: ../../topics/db/sql.txt:190
msgid "**Don't.**"
msgstr "**Ne le faites pas.**"

# 85e3e608baf443bc8b90625029dcc9ec
#: ../../topics/db/sql.txt:192
msgid ""
"Using the ``params`` argument completely protects you from `SQL injection "
"attacks`__, a common exploit where attackers inject arbitrary SQL into your "
"database. If you use string interpolation, sooner or later you'll fall "
"victim to SQL injection. As long as you remember to always use the "
"``params`` argument you'll be protected."
msgstr ""

# 8b6914ce5de04ed8b40f3b42ace9b0ab
#: ../../topics/db/sql.txt:202
msgid ""
"In Django 1.5 and earlier, you could pass parameters as dictionaries when "
"using PostgreSQL or MySQL, although this wasn't documented. Now you can also"
" do this whem using Oracle, and it is officially supported."
msgstr ""

# 28aa4a1db605401e9e4fb2537447b0e2
#: ../../topics/db/sql.txt:210
msgid "Executing custom SQL directly"
msgstr "Exécution directe de code SQL"

# 47d689d19b034cd097540f207f2d9564
#: ../../topics/db/sql.txt:212
msgid ""
"Sometimes even :meth:`Manager.raw` isn't quite enough: you might need to "
"perform queries that don't map cleanly to models, or directly execute "
"``UPDATE``, ``INSERT``, or ``DELETE`` queries."
msgstr "Dans certains cas, même :meth:`Manager.raw` ne suffit pas : il se peut que des requêtes doivent être effectuées sans correspondre proprement à des modèles ou que vous vouliez exécuter directement des requêtes ``UPDATE``, ``INSERT`` ou ``DELETE``."

# 2c2c27e6d2db4c679ee86fdb23c72781
#: ../../topics/db/sql.txt:216
msgid ""
"In these cases, you can always access the database directly, routing around "
"the model layer entirely."
msgstr "Dans ces situations, vous pouvez toujours accéder directement à la base de données, outrepassant complètement la couche des modèles."

# 940a5c421e12429d8a1f6abb1a587de1
#: ../../topics/db/sql.txt:219
msgid ""
"The object ``django.db.connection`` represents the default database "
"connection. To use the database connection, call ``connection.cursor()`` to "
"get a cursor object. Then, call ``cursor.execute(sql, [params])`` to execute"
" the SQL and ``cursor.fetchone()`` or ``cursor.fetchall()`` to return the "
"resulting rows."
msgstr ""

# 7cd021fbb9eb494b8a1aa399463644bb
#: ../../topics/db/sql.txt:241
msgid ""
"In Django 1.5 and earlier, after performing a data changing operation, you "
"had to call ``transaction.commit_unless_managed()`` to ensure your changes "
"were committed to the database. Since Django now defaults to database-level "
"autocommit, this isn't necessary any longer."
msgstr ""

# bca78f48af304011b7ce5a1b67d14939
#: ../../topics/db/sql.txt:246
msgid ""
"Note that if you want to include literal percent signs in the query, you "
"have to double them in the case you are passing parameters::"
msgstr ""

# 5d72a3d2a58f41f6aa6ea780cabfb244
#: ../../topics/db/sql.txt:252
msgid ""
"If you are using :doc:`more than one database </topics/db/multi-db>`, you "
"can use ``django.db.connections`` to obtain the connection (and cursor) for "
"a specific database. ``django.db.connections`` is a dictionary-like object "
"that allows you to retrieve a specific connection using its alias::"
msgstr "Si vous utilisez :doc:`plus d'une base de données </topics/db/multi-db>`, vous pouvez utiliser ``django.db.connections`` pour obtenir la connexion (et le curseur) pour une base de données spécifique. ``django.db.connections`` est un objet de type dictionnaire permettant de récupérer une connexion spécifique en employant son alias ::"

# 5a96fcd416ef474fac699279cdb09d7d
#: ../../topics/db/sql.txt:262
msgid ""
"By default, the Python DB API will return results without their field names,"
" which means you end up with a ``list`` of values, rather than a ``dict``. "
"At a small performance cost, you can return results as a ``dict`` by using "
"something like this::"
msgstr "Par défaut, l'API de base de données de Python renvoie les résultats sans les noms de champs, ce qui signifie que vous vous retrouvez avec une liste de valeurs plutôt qu'un dictionnaire. Pour un faible coût en performances, vous pouvez obtenir les résultats sous forme de dictionnaire en écrivant quelque chose comme ::"

# 32af91c8967748049f5a0765663b832d
#: ../../topics/db/sql.txt:275
msgid "Here is an example of the difference between the two::"
msgstr "Voici un exemple de la différence entre les deux ::"

# 0284926a6fee477bb826c7bf9bee7c91
#: ../../topics/db/sql.txt:286
msgid "Connections and cursors"
msgstr "Connexions et curseurs"

# 13ab550d07e24a45903932eb2bad2281
#: ../../topics/db/sql.txt:288
msgid ""
"``connection`` and ``cursor`` mostly implement the standard Python DB-API "
"described in :pep:`249` — except when it comes to :doc:`transaction handling"
" </topics/db/transactions>`."
msgstr ""

# 7e3f9fd970d34002af42c1704e4eb4bc
#: ../../topics/db/sql.txt:292
msgid ""
"If you're not familiar with the Python DB-API, note that the SQL statement "
"in ``cursor.execute()`` uses placeholders, ``\"%s\"``, rather than adding "
"parameters directly within the SQL. If you use this technique, the "
"underlying database library will automatically escape your parameters as "
"necessary."
msgstr ""

# 7bb43212225d4d34996bc0217e302cf0
#: ../../topics/db/sql.txt:297
msgid ""
"Also note that Django expects the ``\"%s\"`` placeholder, *not* the "
"``\"?\"`` placeholder, which is used by the SQLite Python bindings. This is "
"for the sake of consistency and sanity."
msgstr ""

# 09e6289b4a4e413eaddf3bb34647564c
#: ../../topics/db/tablespaces.txt:3
msgid "Tablespaces"
msgstr "Espaces de tables"

# 675a94ef1c4849b39b3db6140c31bfa4
#: ../../topics/db/tablespaces.txt:5
msgid ""
"A common paradigm for optimizing performance in database systems is the use "
"of `tablespaces`_ to organize disk layout."
msgstr "Un paradigme courant dans l'optimisation des performances des systèmes de base de données est l'utilisation des `espaces de tables`_ pour organiser l'agencement sur disque."

# be9f5ecd09b54a729f432c3debd9f9f6
#: ../../topics/db/tablespaces.txt:11
msgid ""
"Django does not create the tablespaces for you. Please refer to your "
"database engine's documentation for details on creating and managing "
"tablespaces."
msgstr "Django ne crée pas d'espace de tables pour vous. Consultez la documentation de votre moteur de base de données pour plus de détails sur la création et la gestion d'espaces de tables."

# be0fad69258c44dfa849553fd7a13ee5
#: ../../topics/db/tablespaces.txt:17
msgid "Declaring tablespaces for tables"
msgstr "Déclaration d'espaces de tables pour les tables"

# ef93b4407f2b431fbdc469c9a380b03e
#: ../../topics/db/tablespaces.txt:19
msgid ""
"A tablespace can be specified for the table generated by a model by "
"supplying the :attr:`~django.db.models.Options.db_tablespace` option inside "
"the model's ``class Meta``. This option also affects tables automatically "
"created for :class:`~django.db.models.ManyToManyField`\\ s in the model."
msgstr "Un espace de tables peut être indiqué pour une table générée par un modèle en renseignant l'option :attr:`~django.db.models.Options.db_tablespace` dans la ``class Meta`` du modèle. Cette option affecte aussi les tables créées automatiquement pour les champs :class:`~django.db.models.ManyToManyField` du modèle."

# 726e0a0d1a784013b7cdfbbc9b3220cb
#: ../../topics/db/tablespaces.txt:24
msgid ""
"You can use the :setting:`DEFAULT_TABLESPACE` setting to specify a default "
"value for :attr:`~django.db.models.Options.db_tablespace`. This is useful "
"for setting a tablespace for the built-in Django apps and other applications"
" whose code you cannot control."
msgstr "Vous pouvez utiliser le réglage :setting:`DEFAULT_TABLESPACE` pour indiquer une valeur par défaut pour :attr:`~django.db.models.Options.db_tablespace`. C'est utile pour définir un espace de tables pour les applications Django de base et pour d'autres applications dont vous ne maîtrisez pas le code."

# e14c938ae5de4f9e8ae83bbd709863cf
#: ../../topics/db/tablespaces.txt:30
msgid "Declaring tablespaces for indexes"
msgstr "Déclaration des espaces de tables pour les index"

# 21da1cde64db41e2aaba580b63b5e109
#: ../../topics/db/tablespaces.txt:32
msgid ""
"You can pass the :attr:`~django.db.models.Field.db_tablespace` option to a "
"``Field`` constructor to specify an alternate tablespace for the ``Field``’s"
" column index. If no index would be created for the column, the option is "
"ignored."
msgstr ""

# be711f21394e449498a3b149c364c68c
#: ../../topics/db/tablespaces.txt:37
msgid ""
"You can use the :setting:`DEFAULT_INDEX_TABLESPACE` setting to specify a "
"default value for :attr:`~django.db.models.Field.db_tablespace`."
msgstr "Vous pouvez utiliser le réglage :setting:`DEFAULT_INDEX_TABLESPACE` pour indiquer une valeur par défaut pour :attr:`~django.db.models.Field.db_tablespace`."

# 92835a80ba8e494b8ca3072ac45f38fb
#: ../../topics/db/tablespaces.txt:40
msgid ""
"If :attr:`~django.db.models.Field.db_tablespace` isn't specified and you "
"didn't set :setting:`DEFAULT_INDEX_TABLESPACE`, the index is created in the "
"same tablespace as the tables."
msgstr "Si :attr:`~django.db.models.Field.db_tablespace` n'est pas renseigné et que :setting:`DEFAULT_INDEX_TABLESPACE` n'a pas été défini, l'index est créé dans le même espace de table que les tables."

# 29c8bb0c4fea4493b9a9a7eac153b012
#: ../../topics/db/tablespaces.txt:57
msgid ""
"In this example, the tables generated by the ``TablespaceExample`` model "
"(i.e. the model table and the many-to-many table) would be stored in the "
"``tables`` tablespace. The index for the name field and the indexes on the "
"many-to-many table would be stored in the ``indexes`` tablespace. The "
"``data`` field would also generate an index, but no tablespace for it is "
"specified, so it would be stored in the model tablespace ``tables`` by "
"default."
msgstr "Dans cet exemple, les tables générées par le modèle ``TablespaceExample`` (c'est-à-dire la table du modèle et la table plusieurs-à-plusieurs) seront stockées dans l'espace de tables ``tables``. L'index du champ ``name`` et les index de la table plusieurs-à-plusieurs seront stockés dans l'espace de tables ``indexes``. Le champ ``data`` génère aussi un index, mais aucun espace de tables n'est indiqué, il sera donc stocké par défaut dans l'espace de tables ``tables``."

# 164a89eb2a724e2e81feef8875eeb254
#: ../../topics/db/tablespaces.txt:65
msgid "Database support"
msgstr "Prise en charge des bases de données"

# b50c273dbb884f209ba4665950cb7b0d
#: ../../topics/db/tablespaces.txt:67
msgid "PostgreSQL and Oracle support tablespaces. SQLite and MySQL don't."
msgstr "PostgreSQL et Oracle prennent en charge les espaces de tables, au contraire de SQLite et MySQL."

# a542f1efd4c145049deef6aae3e2ac30
#: ../../topics/db/tablespaces.txt:69
msgid ""
"When you use a backend that lacks support for tablespaces, Django ignores "
"all tablespace-related options."
msgstr "Lorsque vous utilisez un moteur qui ne prend pas en charge les espaces de tables, Django ignore toutes les options liées aux espaces de tables."

# 62f30df140414cd694262657347d4323
#: ../../topics/db/transactions.txt:3
msgid "Database transactions"
msgstr ""

# aa21cc2354a749968f4a99f93cb505a2
#: ../../topics/db/transactions.txt:7
msgid ""
"Django gives you a few ways to control how database transactions are "
"managed."
msgstr ""

# 8194d2207d4a416dbd4e2ce6b090a88e
#: ../../topics/db/transactions.txt:10
msgid "Managing database transactions"
msgstr ""

# bf538082c19b43e8814f16d574ce9192
#: ../../topics/db/transactions.txt:13
msgid "Django's default transaction behavior"
msgstr ""

# db334c49f6bd48569da467db59e85ac3
#: ../../topics/db/transactions.txt:15
msgid ""
"Django's default behavior is to run in autocommit mode. Each query is "
"immediately committed to the database. :ref:`See below for details "
"<autocommit-details>`."
msgstr ""

# d5725eff6c954d34892bc0622c393dce
#: ../../topics/db/transactions.txt:19
msgid ""
"Django uses transactions or savepoints automatically to guarantee the "
"integrity of ORM operations that require multiple queries, especially "
":ref:`delete() <topics-db-queries-delete>` and :ref:`update() <topics-db-"
"queries-update>` queries."
msgstr ""

# 99b4ed2c81bd4f3bba15fee6b854c516
#: ../../topics/db/transactions.txt:26
msgid ""
"Previous version of Django featured :ref:`a more complicated default "
"behavior <transactions-upgrading-from-1.5>`."
msgstr ""

# 96a3f64fabe1447f83ef9f786fa98c7f
#: ../../topics/db/transactions.txt:32
msgid "Tying transactions to HTTP requests"
msgstr ""

# 3f980ca57d374e589f18203f5aa8587b
#: ../../topics/db/transactions.txt:34
msgid ""
"A common way to handle transactions on the web is to wrap each request in a "
"transaction. Set :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` to "
"``True`` in the configuration of each database for which you want to enable "
"this behavior."
msgstr ""

# d250bf91fd024a75945752b95578d5d9
#: ../../topics/db/transactions.txt:39
msgid ""
"It works like this. Before calling a view function, Django starts a "
"transaction. If the response is produced without problems, Django commits "
"the transaction. If the view produces an exception, Django rolls back the "
"transaction."
msgstr ""

# e6700d75d44442009bc030018b615fa3
#: ../../topics/db/transactions.txt:44
msgid ""
"You may perfom partial commits and rollbacks in your view code, typically "
"with the :func:`atomic` context manager. However, at the end of the view, "
"either all the changes will be committed, or none of them."
msgstr ""

# 14d830d3130348f0b9f608a643c0eef6
#: ../../topics/db/transactions.txt:50
msgid ""
"While the simplicity of this transaction model is appealing, it also makes "
"it inefficient when traffic increases. Opening a transaction for every view "
"has some overhead. The impact on performance depends on the query patterns "
"of your application and on how well your database handles locking."
msgstr ""

# 35a6f02c43514f2ea962a302fa9beba8
#: ../../topics/db/transactions.txt:55
msgid "Per-request transactions and streaming responses"
msgstr ""

# 7febf17938cb4525bf9fd70ff02ea86c
#: ../../topics/db/transactions.txt:57
msgid ""
"When a view returns a :class:`~django.http.StreamingHttpResponse`, reading "
"the contents of the response will often execute code to generate the "
"content. Since the view has already returned, such code runs outside of the "
"transaction."
msgstr ""

# 940483379e4c4e71965242cafa232090
#: ../../topics/db/transactions.txt:62
msgid ""
"Generally speaking, it isn't advisable to write to the database while "
"generating a streaming response, since there's no sensible way to handle "
"errors after starting to send the response."
msgstr ""

# 7f33d0f757ab4839b062b212f2f95cd1
#: ../../topics/db/transactions.txt:66
msgid ""
"In practice, this feature simply wraps every view function in the "
":func:`atomic` decorator described below."
msgstr ""

# 4d288c4ad286440f90f75c072fa2a243
#: ../../topics/db/transactions.txt:69
msgid ""
"Note that only the execution of your view is enclosed in the transactions. "
"Middleware runs outside of the transaction, and so does the rendering of "
"template responses."
msgstr ""

# ed802bba7cdf48b4be00c862899c3170
#: ../../topics/db/transactions.txt:73
msgid ""
"When :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` is enabled, it's "
"still possible to prevent views from running in a transaction."
msgstr ""

# 67f706a13141405b9a6c7022f6e3c2c1
#: ../../topics/db/transactions.txt:78
msgid ""
"This decorator will negate the effect of :setting:`ATOMIC_REQUESTS "
"<DATABASE-ATOMIC_REQUESTS>` for a given view::"
msgstr ""

# fb5800ca248445fa8c82353b2c669135
#: ../../topics/db/transactions.txt:91
msgid "It only works if it's applied to the view itself."
msgstr ""

# 2acc608b500a45cbb045a3f01e8dd0a4
#: ../../topics/db/transactions.txt:95
msgid ""
"Django used to provide this feature via ``TransactionMiddleware``, which is "
"now deprecated."
msgstr ""

# 55e22dba98714588aabc023f9ad0381b
#: ../../topics/db/transactions.txt:99
msgid "Controlling transactions explicitly"
msgstr ""

# b2df562188d54938a9ee0ac419fccc8a
#: ../../topics/db/transactions.txt:103
msgid "Django provides a single API to control database transactions."
msgstr ""

# 97beb368a0e74085bf8b0260fcfbaaf4
#: ../../topics/db/transactions.txt:107
msgid ""
"Atomicity is the defining property of database transactions. ``atomic`` "
"allows us to create a block of code within which the atomicity on the "
"database is guaranteed. If the block of code is successfully completed, the "
"changes are committed to the database. If there is an exception, the changes"
" are rolled back."
msgstr ""

# 80b3fcaf992b498c97bb837d62b343ca
#: ../../topics/db/transactions.txt:113
msgid ""
"``atomic`` blocks can be nested. In this case, when an inner block completes"
" successfully, its effects can still be rolled back if an exception is "
"raised in the outer block at a later point."
msgstr ""

# f88c5cc623ef4508b6b6bb02f4efc876
#: ../../topics/db/transactions.txt:117
msgid "``atomic`` is usable both as a `decorator`_::"
msgstr ""

# e3772d02b0ce43c6a85c233a14da0650
#: ../../topics/db/transactions.txt:126
msgid "and as a `context manager`_::"
msgstr ""

# c5d78ebeaa2848f8b999f916213840fb
#: ../../topics/db/transactions.txt:141
msgid ""
"Wrapping ``atomic`` in a try/except block allows for natural handling of "
"integrity errors::"
msgstr ""

# 3f934bed6d484d7aa85d130ba667f95a
#: ../../topics/db/transactions.txt:158
msgid ""
"In this example, even if ``generate_relationships()`` causes a database "
"error by breaking an integrity constraint, you can execute queries in "
"``add_children()``, and the changes from ``create_parent()`` are still "
"there. Note that any operations attempted in ``generate_relationships()`` "
"will already have been rolled back safely when ``handle_exception()`` is "
"called, so the exception handler can also operate on the database if "
"necessary."
msgstr ""

# e5a33cdffd964ab5be9c9a002a22daab
#: ../../topics/db/transactions.txt:166
msgid "Avoid catching exceptions inside ``atomic``!"
msgstr ""

# bc476243a7664c498c48fd014c37320b
#: ../../topics/db/transactions.txt:168
msgid ""
"When exiting an ``atomic`` block, Django looks at whether it's exited "
"normally or with an exception to determine whether to commit or roll back. "
"If you catch and handle exceptions inside an ``atomic`` block, you may hide "
"from Django the fact that a problem has happened. This can result in "
"unexpected behavior."
msgstr ""

# b72a046f30784d418ce63b5c118d59fd
#: ../../topics/db/transactions.txt:174
msgid ""
"This is mostly a concern for :exc:`~django.db.DatabaseError` and its "
"subclasses such as :exc:`~django.db.IntegrityError`. After such an error, "
"the transaction is broken and Django will perform a rollback at the end of "
"the ``atomic`` block. If you attempt to run database queries before the "
"rollback happens, Django will raise a "
":class:`~django.db.transaction.TransactionManagementError`. You may also "
"encounter this behavior when an ORM-related signal handler raises an "
"exception."
msgstr ""

# c393a1d74c4e47418f8a5e04845e24c9
#: ../../topics/db/transactions.txt:183
msgid ""
"The correct way to catch database errors is around an ``atomic`` block as "
"shown above. If necessary, add an extra ``atomic`` block for this purpose. "
"This pattern has another advantage: it delimits explicitly which operations "
"will be rolled back if an exception occurs."
msgstr ""

# 3f219a8ae6c94e6da072cc8e50ca8ac3
#: ../../topics/db/transactions.txt:188
msgid ""
"If you catch exceptions raised by raw SQL queries, Django's behavior is "
"unspecified and database-dependent."
msgstr ""

# a27d26dd9d6c4773b4d8ccd0f73e5616
#: ../../topics/db/transactions.txt:191
msgid ""
"In order to guarantee atomicity, ``atomic`` disables some APIs. Attempting "
"to commit, roll back, or change the autocommit state of the database "
"connection within an ``atomic`` block will raise an exception."
msgstr ""

# 2db1f1c77624487e96d2c64a5bfb9611
#: ../../topics/db/transactions.txt:195
msgid ""
"``atomic`` takes a ``using`` argument which should be the name of a "
"database. If this argument isn't provided, Django uses the ``\"default\"`` "
"database."
msgstr ""

# a6f776709692440fbe214dc098b72505
#: ../../topics/db/transactions.txt:199
msgid "Under the hood, Django's transaction management code:"
msgstr ""

# e63858f08b8a43d782b4949156aae6da
#: ../../topics/db/transactions.txt:201
msgid "opens a transaction when entering the outermost ``atomic`` block;"
msgstr ""

# 4cb98078fa3a4d9c9868368e260ab50c
#: ../../topics/db/transactions.txt:202
msgid "creates a savepoint when entering an inner ``atomic`` block;"
msgstr ""

# cbc75014a21f43ff9e76192349cfe223
#: ../../topics/db/transactions.txt:203
msgid "releases or rolls back to the savepoint when exiting an inner block;"
msgstr ""

# 4b9a4463dc8e470c8d30eccc8066e0b8
#: ../../topics/db/transactions.txt:204
msgid ""
"commits or rolls back the transaction when exiting the outermost block."
msgstr ""

# 5d0f0441764248cea68b7156e4cf1bc4
#: ../../topics/db/transactions.txt:206
msgid ""
"You can disable the creation of savepoints for inner blocks by setting the "
"``savepoint`` argument to ``False``. If an exception occurs, Django will "
"perform the rollback when exiting the first parent block with a savepoint if"
" there is one, and the outermost block otherwise. Atomicity is still "
"guaranteed by the outer transaction. This option should only be used if the "
"overhead of savepoints is noticeable. It has the drawback of breaking the "
"error handling described above."
msgstr ""

# ee34172d51c845a4a5a3a1177621d2f0
#: ../../topics/db/transactions.txt:214
msgid ""
"You may use ``atomic`` when autocommit is turned off. It will only use "
"savepoints, even for the outermost block, and it will raise an exception if "
"the outermost block is declared with ``savepoint=False``."
msgstr ""

# e84bc9a881f34accba6c5c6587530886
#: ../../topics/db/transactions.txt:218
msgid "Performance considerations"
msgstr "Considérations sur la performance"

# 71ab4058a658466ebb42b433ac943ac2
#: ../../topics/db/transactions.txt:220
msgid ""
"Open transactions have a performance cost for your database server. To "
"minimize this overhead, keep your transactions as short as possible. This is"
" especially important of you're using :func:`atomic` in long-running "
"processes, outside of Django's request / response cycle."
msgstr "Les transactions ouvertes constituent une pénalité de performance pour votre serveur de base de données. Pour minimiser cet impact, gardez vos transactions aussi brèves que possible. C'est particulièrement important si vous utilisez :func:`atomic` dans des processus de longue durée, en dehors du cycle requête/réponse de Django."

# 41639ad10a9546ac910e84740b8bd36f
# ce9c7dfaa7a64812a4420d10b9907fb6
#: ../../topics/db/transactions.txt:226 ../../topics/db/transactions.txt:288
msgid "Autocommit"
msgstr "Autocommit"

# 530d30c905634a01ac4d8f5359215afc
#: ../../topics/db/transactions.txt:231
msgid "Why Django uses autocommit"
msgstr "Pourquoi Django utilise-t-il l'autocommit"

# e22496bed09840f8959f3e5d4ae36619
#: ../../topics/db/transactions.txt:233
msgid ""
"In the SQL standards, each SQL query starts a transaction, unless one is "
"already in progress. Such transactions must then be committed or rolled "
"back."
msgstr "Dans le standard SQL, chaque requête SQL démarre une transaction, sauf s'il y en a déjà une en cours. De telles transactions doivent ensuite être soit validées (commit), soit annulées (rollback)."

# f303f19da55b4123b32640ae6960f358
#: ../../topics/db/transactions.txt:236
msgid ""
"This isn't always convenient for application developers. To alleviate this "
"problem, most databases provide an autocommit mode. When autocommit is "
"turned on, each SQL query is wrapped in its own transaction. In other words,"
" the transaction is not only automatically started, but also automatically "
"committed."
msgstr "Ce n'est pas toujours très pratique pour les développeurs d'applications. Pour contourner ce problème, la plupart des bases de données mettent à disposition un mode « autocommit ». Lorsque ce mode est actif, chaque requête SQL fait partie de sa propre transaction. En d'autres termes, non seulement la transaction est démarrée automatiquement, mais elle est aussi validée automatiquement."

# 8107f38a8a49421ba7513ed7f804c71f
#: ../../topics/db/transactions.txt:242
msgid ""
":pep:`249`, the Python Database API Specification v2.0, requires autocommit "
"to be initially turned off. Django overrides this default and turns "
"autocommit on."
msgstr ":pep:`249`, la spécification d'API de base de données Python v2.0, exige que le mode autocommit soit initialement désactivé. Django surcharge ce comportement par défaut et active le mode autocommit."

# f7cf1d0efeaa4f01a2251812a71acea4
#: ../../topics/db/transactions.txt:246
msgid ""
"To avoid this, you can :ref:`deactivate the transaction management "
"<deactivate-transaction-management>`, but it isn't recommended."
msgstr "Pour empêcher cela, vous pouvez :ref:`désactiver la gestion des transactions <deactivate-transaction-management>`, mais ce n'est pas recommandé."

# 4dedd6943e734369914ad184cda475e2
#: ../../topics/db/transactions.txt:251
msgid ""
"Before Django 1.6, autocommit was turned off, and it was emulated by forcing"
" a commit after write operations in the ORM."
msgstr "Avant Django 1.6, le mode autocommit était désactivé et il était émulé en forçant un commit au niveau de l'ORM après les opérations d'écriture."

# 17633b72b5c54e308ede9563e38225d2
#: ../../topics/db/transactions.txt:257
msgid "Deactivating transaction management"
msgstr "Désactivation de la gestion des transaction"

# c5e2d06d70774ca4a1e8bff9c1d0e773
#: ../../topics/db/transactions.txt:259
msgid ""
"You can totally disable Django's transaction management for a given database"
" by setting :setting:`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` to ``False`` in its "
"configuration. If you do this, Django won't enable autocommit, and won't "
"perform any commits. You'll get the regular behavior of the underlying "
"database library."
msgstr "Vous pouvez désactiver totalement la gestion des transactions de Django pour une base de données précise en définissant :setting:`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` à ``False`` dans sa configuration. Si vous faites cela, Django n'activera pas le mode autocommit et n'effectue aucune opération de commit. Vous obtenez alors le comportement habituel de la bibliothèque de base de données sous-jacente."

# 156cbfe00cc94d1298ad3557b2a5a3fe
#: ../../topics/db/transactions.txt:265
msgid ""
"This requires you to commit explicitly every transaction, even those started"
" by Django or by third-party libraries. Thus, this is best used in "
"situations where you want to run your own transaction-controlling middleware"
" or do something really strange."
msgstr "Cela demande que vous effectuiez un commit explicite de chaque transaction, même de celles initiées par Django ou par des bibliothèques tierces. Ainsi, cela convient mieux à des situations où vous souhaitez mettre en place votre propre intergiciel de gestion des transactions ou que vous faites des choses plutôt étranges."

# 98d18d2660f1459b890f3b8f660c9388
#: ../../topics/db/transactions.txt:272
msgid "This used to be controlled by the ``TRANSACTIONS_MANAGED`` setting."
msgstr "Ce comportement était contrôlé par le réglage ``TRANSACTIONS_MANAGED``."

# c7fa74cf541949f2bf1918744b853e8c
#: ../../topics/db/transactions.txt:275
msgid "Low-level APIs"
msgstr ""

# 68fdf22b44214cb8925d85c433098fb7
#: ../../topics/db/transactions.txt:279
msgid ""
"Always prefer :func:`atomic` if possible at all. It accounts for the "
"idiosyncrasies of each database and prevents invalid operations."
msgstr ""

# 1770dffdb91d40ef9204b76cb0350a86
#: ../../topics/db/transactions.txt:282
msgid ""
"The low level APIs are only useful if you're implementing your own "
"transaction management."
msgstr ""

# 0856bdd7bf8f438a9d5bba17b07c1c86
#: ../../topics/db/transactions.txt:292
msgid ""
"Django provides a straightforward API in the :mod:`django.db.transaction` "
"module to manage the autocommit state of each database connection."
msgstr ""

# 120a83f9270f45cfaab19f347b82af85
# 69bcf04baae14816a698009ca26f37a9
#: ../../topics/db/transactions.txt:299 ../../topics/db/transactions.txt:334
msgid ""
"These functions take a ``using`` argument which should be the name of a "
"database. If it isn't provided, Django uses the ``\"default\"`` database."
msgstr ""

# 2aa7cbbb6e034ccc83aa449795e379f3
#: ../../topics/db/transactions.txt:302
msgid ""
"Autocommit is initially turned on. If you turn it off, it's your "
"responsibility to restore it."
msgstr ""

# 30d002cd2d7d45a49544426f001c743c
#: ../../topics/db/transactions.txt:305
msgid ""
"Once you turn autocommit off, you get the default behavior of your database "
"adapter, and Django won't help you. Although that behavior is specified in "
":pep:`249`, implementations of adapters aren't always consistent with one "
"another. Review the documentation of the adapter you're using carefully."
msgstr ""

# d0cfbfa4a28c4b16baf7fab1ed697bb6
#: ../../topics/db/transactions.txt:310
msgid ""
"You must ensure that no transaction is active, usually by issuing a "
":func:`commit` or a :func:`rollback`, before turning autocommit back on."
msgstr ""

# 695fd1158316444c919109d0cf849bff
#: ../../topics/db/transactions.txt:313
msgid ""
"Django will refuse to turn autocommit off when an :func:`atomic` block is "
"active, because that would break atomicity."
msgstr ""

# 7847f0d6bd7f4ef1a03c15803189c369
#: ../../topics/db/transactions.txt:317
msgid "Transactions"
msgstr ""

# 57a6154e8e9c4e78b54c013583438cd5
#: ../../topics/db/transactions.txt:319
msgid ""
"A transaction is an atomic set of database queries. Even if your program "
"crashes, the database guarantees that either all the changes will be "
"applied, or none of them."
msgstr ""

# feedf3673e5d428c9efa6fcc16c5eb17
#: ../../topics/db/transactions.txt:323
msgid ""
"Django doesn't provide an API to start a transaction. The expected way to "
"start a transaction is to disable autocommit with :func:`set_autocommit`."
msgstr ""

# 204bb277b4a641a8ad704d89bb3b3af3
#: ../../topics/db/transactions.txt:326
msgid ""
"Once you're in a transaction, you can choose either to apply the changes "
"you've performed until this point with :func:`commit`, or to cancel them "
"with :func:`rollback`. These functions are defined in "
":mod:`django.db.transaction`."
msgstr ""

# d76a03a0a2f54c0bb104688e6ebb1afc
#: ../../topics/db/transactions.txt:337
msgid ""
"Django will refuse to commit or to rollback when an :func:`atomic` block is "
"active, because that would break atomicity."
msgstr ""

# 8fdf9e9d1a374b7188932192cfa46ebd
#: ../../topics/db/transactions.txt:343
msgid "Savepoints"
msgstr ""

# 8b6a701ecd404a89a406611e9f0ef747
#: ../../topics/db/transactions.txt:345
msgid ""
"A savepoint is a marker within a transaction that enables you to roll back "
"part of a transaction, rather than the full transaction. Savepoints are "
"available with the SQLite (≥ 3.6.8), PostgreSQL, Oracle and MySQL (when "
"using the InnoDB storage engine) backends. Other backends provide the "
"savepoint functions, but they're empty operations -- they don't actually do "
"anything."
msgstr ""

# 6d1043fcb9db4a6fa9aab09946aac4b6
#: ../../topics/db/transactions.txt:351
msgid ""
"Savepoints aren't especially useful if you are using autocommit, the default"
" behavior of Django. However, once you open a transaction with "
":func:`atomic`, you build up a series of database operations awaiting a "
"commit or rollback. If you issue a rollback, the entire transaction is "
"rolled back. Savepoints provide the ability to perform a fine-grained "
"rollback, rather than the full rollback that would be performed by "
"``transaction.rollback()``."
msgstr ""

# 310ca3a3367d4ed092ad9fba82673069
#: ../../topics/db/transactions.txt:360
msgid ""
"When the :func:`atomic` decorator is nested, it creates a savepoint to allow"
" partial commit or rollback. You're strongly encouraged to use "
":func:`atomic` rather than the functions described below, but they're still "
"part of the public API, and there's no plan to deprecate them."
msgstr ""

# c9b4ae2bb0294e17a99029f3bf0e3b11
#: ../../topics/db/transactions.txt:365
msgid ""
"Each of these functions takes a ``using`` argument which should be the name "
"of a database for which the behavior applies.  If no ``using`` argument is "
"provided then the ``\"default\"`` database is used."
msgstr ""

# 5767c18276954892be50552845988617
#: ../../topics/db/transactions.txt:369
msgid ""
"Savepoints are controlled by three functions in "
":mod:`django.db.transaction`:"
msgstr ""

# 906d7aecdd8b44bb9b1a117129ec3ef2
#: ../../topics/db/transactions.txt:373
msgid ""
"Creates a new savepoint. This marks a point in the transaction that is known"
" to be in a \"good\" state. Returns the savepoint ID (``sid``)."
msgstr ""

# 1c1c9c6978784fa19b0c9fd349a32759
#: ../../topics/db/transactions.txt:378
msgid ""
"Releases savepoint ``sid``. The changes performed since the savepoint was "
"created become part of the transaction."
msgstr ""

# 292a2d08545148da8fec51847aa8f235
#: ../../topics/db/transactions.txt:383
msgid "Rolls back the transaction to savepoint ``sid``."
msgstr ""

# a036c3923e364cfc8ef846846dc65e83
#: ../../topics/db/transactions.txt:385
msgid ""
"These functions do nothing if savepoints aren't supported or if the database"
" is in autocommit mode."
msgstr ""

# 9a7a68679197450995fa5c340aa37ecc
#: ../../topics/db/transactions.txt:388
msgid "In addition, there's a utility function:"
msgstr ""

# 6a66ea8b4d3640e1be74f9ec92e3e4fb
#: ../../topics/db/transactions.txt:392
msgid "Resets the counter used to generate unique savepoint IDs."
msgstr ""

# a2cda46d79804de181234bf853494a9d
#: ../../topics/db/transactions.txt:394
msgid "The following example demonstrates the use of savepoints::"
msgstr ""

# 9dd632c78d2f418381a9995d3fb36acc
#: ../../topics/db/transactions.txt:419
msgid ""
"Savepoints may be used to recover from a database error by performing a "
"partial rollback. If you're doing this inside an :func:`atomic` block, the "
"entire block will still be rolled back, because it doesn't know you've "
"handled the situation at a lower level! To prevent this, you can control the"
" rollback behavior with the following functions."
msgstr ""

# 34111222e7c44768b8b48c33073b3756
#: ../../topics/db/transactions.txt:429
msgid ""
"Setting the rollback flag to ``True`` forces a rollback when exiting the "
"innermost atomic block. This may be useful to trigger a rollback without "
"raising an exception."
msgstr ""

# 12368c434b2f40289cd1fa82b914d540
#: ../../topics/db/transactions.txt:433
msgid ""
"Setting it to ``False`` prevents such a rollback. Before doing that, make "
"sure you've rolled back the transaction to a known-good savepoint within the"
" current atomic block! Otherwise you're breaking atomicity and data "
"corruption may occur."
msgstr ""

# 7bdc2bb343b346a39d73b7f7549016b3
#: ../../topics/db/transactions.txt:439
msgid "Database-specific notes"
msgstr ""

# 59aca12d7c8a4f90be4915055e730de7
#: ../../topics/db/transactions.txt:444
msgid "Savepoints in SQLite"
msgstr ""

# 83aec88315d14203951c754c6de0ea5f
#: ../../topics/db/transactions.txt:446
msgid ""
"While SQLite ≥ 3.6.8 supports savepoints, a flaw in the design of the "
":mod:`sqlite3` module makes them hardly usable."
msgstr ""

# a926f314898e4785be5622fa74c47565
#: ../../topics/db/transactions.txt:449
msgid ""
"When autocommit is enabled, savepoints don't make sense. When it's disabled,"
" :mod:`sqlite3` commits implicitly before savepoint statements. (In fact, it"
" commits before any statement other than ``SELECT``, ``INSERT``, ``UPDATE``,"
" ``DELETE`` and ``REPLACE``.) This bug has two consequences:"
msgstr ""

# 858542ea1bab4b30960ac3905d58a505
#: ../../topics/db/transactions.txt:454
msgid ""
"The low level APIs for savepoints are only usable inside a transaction ie. "
"inside an :func:`atomic` block."
msgstr ""

# 1001c1b162c84345a4355053b14839cb
#: ../../topics/db/transactions.txt:456
msgid "It's impossible to use :func:`atomic` when autocommit is turned off."
msgstr ""

# 70d96228cbdb4fb4ac5b6e721a5aa19c
#: ../../topics/db/transactions.txt:459
msgid "Transactions in MySQL"
msgstr ""

# 8b2b29d6b8074fd5a8b09eb0fe161d89
#: ../../topics/db/transactions.txt:461
msgid ""
"If you're using MySQL, your tables may or may not support transactions; it "
"depends on your MySQL version and the table types you're using. (By \"table "
"types,\" we mean something like \"InnoDB\" or \"MyISAM\".) MySQL transaction"
" peculiarities are outside the scope of this article, but the MySQL site has"
" `information on MySQL transactions`_."
msgstr ""

# ac1f31d516154ad59bd68642c4ca410f
#: ../../topics/db/transactions.txt:467
msgid ""
"If your MySQL setup does *not* support transactions, then Django will always"
" function in autocommit mode: statements will be executed and committed as "
"soon as they're called. If your MySQL setup *does* support transactions, "
"Django will handle transactions as explained in this document."
msgstr ""

# 01798fabe22c473c81b5ebf1327beeba
#: ../../topics/db/transactions.txt:475
msgid "Handling exceptions within PostgreSQL transactions"
msgstr ""

# 8e5a887335ba4b1992be79889878fea6
#: ../../topics/db/transactions.txt:479
msgid ""
"This section is relevant only if you're implementing your own transaction "
"management. This problem cannot occur in Django's default mode and "
":func:`atomic` handles it automatically."
msgstr ""

# 10ed1f3c89154766b73b17ac6b4f9046
#: ../../topics/db/transactions.txt:483
msgid ""
"Inside a transaction, when a call to a PostgreSQL cursor raises an exception"
" (typically ``IntegrityError``), all subsequent SQL in the same transaction "
"will fail with the error \"current transaction is aborted, queries ignored "
"until end of transaction block\". Whilst simple use of ``save()`` is "
"unlikely to raise an exception in PostgreSQL, there are more advanced usage "
"patterns which might, such as saving objects with unique fields, saving "
"using the force_insert/force_update flag, or invoking custom SQL."
msgstr ""

# af03a4c366d44d979079f09efebb8bd1
#: ../../topics/db/transactions.txt:491
msgid "There are several ways to recover from this sort of error."
msgstr ""

# eded51c6a1524d5da3553a9a4ca3c6ba
#: ../../topics/db/transactions.txt:494
msgid "Transaction rollback"
msgstr ""

# b74ac35f06cf41428e859d1270a380d6
#: ../../topics/db/transactions.txt:496
msgid "The first option is to roll back the entire transaction. For example::"
msgstr ""

# de760b2561e440b8955cca82fdc03442
#: ../../topics/db/transactions.txt:505
msgid ""
"Calling ``transaction.rollback()`` rolls back the entire transaction. Any "
"uncommitted database operations will be lost. In this example, the changes "
"made by ``a.save()`` would be lost, even though that operation raised no "
"error itself."
msgstr ""

# b8b81857c9fa4945a42b506912ac3531
#: ../../topics/db/transactions.txt:511
msgid "Savepoint rollback"
msgstr ""

# fbf0c7bf8633462f8d5b7efcf8d980de
#: ../../topics/db/transactions.txt:513
msgid ""
"You can use :ref:`savepoints <topics-db-transactions-savepoints>` to control"
" the extent of a rollback. Before performing a database operation that could"
" fail, you can set or update the savepoint; that way, if the operation "
"fails, you can roll back the single offending operation, rather than the "
"entire transaction. For example::"
msgstr ""

# 8cfedb1ce3444bad91bf04796bf61a07
#: ../../topics/db/transactions.txt:528
msgid ""
"In this example, ``a.save()`` will not be undone in the case where "
"``b.save()`` raises an exception."
msgstr ""

# db9c010ec7bb4441a515691a2ddf50d1
#: ../../topics/db/transactions.txt:534
msgid "Changes from Django 1.5 and earlier"
msgstr ""

# 3155ca8460544c57a0bad32f79aef8eb
#: ../../topics/db/transactions.txt:536
msgid ""
"The features described below were deprecated in Django 1.6 and will be "
"removed in Django 1.8. They're documented in order to ease the migration to "
"the new transaction management APIs."
msgstr ""

# c0943fc6b3e44072bdcd5d6d33036938
#: ../../topics/db/transactions.txt:541
msgid "Legacy APIs"
msgstr ""

# 068287946ec248fcb406726217114a00
#: ../../topics/db/transactions.txt:543
msgid ""
"The following functions, defined in ``django.db.transaction``, provided a "
"way to control transactions on a per-function or per-code-block basis. They "
"could be used as decorators or as context managers, and they accepted a "
"``using`` argument, exactly like :func:`atomic`."
msgstr ""

# 7aafaa03a77d482dbffd0d0005dfc776
#: ../../topics/db/transactions.txt:550
msgid "Enable Django's default autocommit behavior."
msgstr ""

# c61cf2941fed41cc84a751b9429d9bc2
#: ../../topics/db/transactions.txt:552
msgid ""
"Transactions will be committed as soon as you call ``model.save()``, "
"``model.delete()``, or any other function that writes to the database."
msgstr ""

# 8cc97d2066e54b7dbda322b0fbecf392
#: ../../topics/db/transactions.txt:557
msgid "Use a single transaction for all the work done in a function."
msgstr ""

# f6829ed16fe640aab27063c7b4624511
#: ../../topics/db/transactions.txt:559
msgid ""
"If the function returns successfully, then Django will commit all work done "
"within the function at that point. If the function raises an exception, "
"though, Django will roll back the transaction."
msgstr ""

# de62094d266c4a1e98ea278f85f8821d
#: ../../topics/db/transactions.txt:565
msgid "Tells Django you'll be managing the transaction on your own."
msgstr ""

# 213a62d813fa45268f429e1824b818d6
#: ../../topics/db/transactions.txt:567
msgid ""
"Whether you are writing or simply reading from the database, you must "
"``commit()`` or ``rollback()`` explicitly or Django will raise a "
":exc:`TransactionManagementError` exception. This is required when reading "
"from the database because ``SELECT`` statements may call functions which "
"modify tables, and thus it is impossible to know if any data has been "
"modified."
msgstr ""

# 3b4bf83959be40be85186181d60e3ec2
#: ../../topics/db/transactions.txt:577
msgid "Transaction states"
msgstr ""

# c97aff2451bc4cb88d7dd59d24ae38d7
#: ../../topics/db/transactions.txt:579
msgid ""
"The three functions described above relied on a concept called \"transaction"
" states\". This mechanism was deprecated in Django 1.6, but it's still "
"available until Django 1.8."
msgstr ""

# 71608f8bff514ab7af1ce4d1e7bec8ce
#: ../../topics/db/transactions.txt:583
msgid "At any time, each database connection is in one of these two states:"
msgstr ""

# 8ec0afcc88cc407d9197a75fd93d7ded
#: ../../topics/db/transactions.txt:585
msgid "**auto mode**: autocommit is enabled;"
msgstr ""

# a4eb35c925ba4e5086a266d460844617
#: ../../topics/db/transactions.txt:586
msgid "**managed mode**: autocommit is disabled."
msgstr ""

# fb6283f443c243709ec4b9f708217f48
#: ../../topics/db/transactions.txt:588
msgid ""
"Django starts in auto mode. ``TransactionMiddleware``, "
":func:`commit_on_success` and :func:`commit_manually` activate managed mode;"
" :func:`autocommit` activates auto mode."
msgstr ""

# ffb4fc31c09541ba8fd4d766acedebc5
#: ../../topics/db/transactions.txt:592
msgid ""
"Internally, Django keeps a stack of states. Activations and deactivations "
"must be balanced."
msgstr ""

# 8d769ea07bba4b76b5acacb5b3691ece
#: ../../topics/db/transactions.txt:595
msgid ""
"For example, :func:`commit_on_success` switches to managed mode when "
"entering the block of code it controls; when exiting the block, it commits "
"or rollbacks, and switches back to auto mode."
msgstr ""

# 3c55c23ec00747749718080cf008a177
#: ../../topics/db/transactions.txt:599
msgid ""
"So :func:`commit_on_success` really has two effects: it changes the "
"transaction state and it defines an transaction block. Nesting will give the"
" expected results in terms of transaction state, but not in terms of "
"transaction semantics. Most often, the inner block will commit, breaking the"
" atomicity of the outer block."
msgstr ""

# ffa2e60c0a254be5a82847bb31e562cf
#: ../../topics/db/transactions.txt:605
msgid ""
":func:`autocommit` and :func:`commit_manually` have similar limitations."
msgstr ""

# a420f4920bb14b83a90eeb375b61fe97
#: ../../topics/db/transactions.txt:608
msgid "API changes"
msgstr ""

# f9584faf30644a4880df0b128685bdfa
#: ../../topics/db/transactions.txt:611
msgid "Transaction middleware"
msgstr ""

# d5ceaba24733475eaeab3fedcfd2da69
#: ../../topics/db/transactions.txt:613
msgid ""
"In Django 1.6, ``TransactionMiddleware`` is deprecated and replaced by "
":setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>`. While the general "
"behavior is the same, there are two differences."
msgstr ""

# efee21429065470ba9c9c0ebae565f90
#: ../../topics/db/transactions.txt:617
msgid ""
"With the previous API, it was possible to switch to autocommit or to commit "
"explicitly anywhere inside a view. Since :setting:`ATOMIC_REQUESTS "
"<DATABASE-ATOMIC_REQUESTS>` relies on :func:`atomic` which enforces "
"atomicity, this isn't allowed any longer. However, at the toplevel, it's "
"still possible to avoid wrapping an entire view in a transaction. To achieve"
" this, decorate the view with :func:`non_atomic_requests` instead of "
":func:`autocommit`."
msgstr ""

# a4c8ed547865439094c78b60dea0f42c
#: ../../topics/db/transactions.txt:624
msgid ""
"The transaction middleware applied not only to view functions, but also to "
"middleware modules that came after it. For instance, if you used the session"
" middleware after the transaction middleware, session creation was part of "
"the transaction. :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` only "
"applies to the view itself."
msgstr ""

# 177904e09bdd420b822ad5ccbae0da1a
#: ../../topics/db/transactions.txt:631
msgid "Managing transactions"
msgstr ""

# d82125a626ca47bbb18e18ed6e9beb30
#: ../../topics/db/transactions.txt:633
msgid ""
"Starting with Django 1.6, :func:`atomic` is the only supported API for "
"defining a transaction. Unlike the deprecated APIs, it's nestable and always"
" guarantees atomicity."
msgstr ""

# 320a54a1b9bc4bd9970f84199bbff620
#: ../../topics/db/transactions.txt:637
msgid ""
"In most cases, it will be a drop-in replacement for "
":func:`commit_on_success`."
msgstr ""

# 79c8066aef9c463dafa4394015b61d03
#: ../../topics/db/transactions.txt:639
msgid ""
"During the deprecation period, it's possible to use :func:`atomic` within "
":func:`autocommit`, :func:`commit_on_success` or :func:`commit_manually`. "
"However, the reverse is forbidden, because nesting the old decorators / "
"context managers breaks atomicity."
msgstr ""

# 91b23df25d2e42849a6b747861560dce
#: ../../topics/db/transactions.txt:645
msgid "Managing autocommit"
msgstr ""

# 6af40013d456427b87ccd2b9905c89d0
#: ../../topics/db/transactions.txt:647
msgid ""
"Django 1.6 introduces an explicit :ref:`API for mananging autocommit "
"<managing-autocommit>`."
msgstr ""

# 65c8e26ef0be4b34bfd6a3470862aa69
#: ../../topics/db/transactions.txt:650
msgid "To disable autocommit temporarily, instead of::"
msgstr ""

# c7696bad00284dd18483ac0854504bb4
# 50f85ac05ab34ef68f8347f4affc0c0d
#: ../../topics/db/transactions.txt:655 ../../topics/db/transactions.txt:668
msgid "you should now use::"
msgstr ""

# c55e0b208212453aba65c5f5634194c0
#: ../../topics/db/transactions.txt:663
msgid "To enable autocommit temporarily, instead of::"
msgstr ""

# a5c0bb659a6c4f2ea8d1b7eb0e46d629
#: ../../topics/db/transactions.txt:676
msgid ""
"Unless you're implementing a transaction management framework, you shouldn't"
" ever need to do this."
msgstr ""

# 92cf2914d8a0466db9819f7465723204
#: ../../topics/db/transactions.txt:680
msgid "Disabling transaction management"
msgstr ""

# 79cb37f3d2aa44519bff380236c093b6
#: ../../topics/db/transactions.txt:682
msgid ""
"Instead of setting ``TRANSACTIONS_MANAGED = True``, set the ``AUTOCOMMIT`` "
"key to ``False`` in the configuration of each database, as explained in :ref"
":`deactivate-transaction-management`."
msgstr ""

# cc4fdf7b5922450087af31d144615b05
#: ../../topics/db/transactions.txt:687
msgid "Backwards incompatibilities"
msgstr ""

# 47adfe302871406e9c20d38b2ed8de48
#: ../../topics/db/transactions.txt:689
msgid ""
"Since version 1.6, Django uses database-level autocommit in auto mode. "
"Previously, it implemented application-level autocommit by triggering a "
"commit after each ORM write."
msgstr ""

# 860a352ca1ef4e83baeccfd4815dc866
#: ../../topics/db/transactions.txt:693
msgid ""
"As a consequence, each database query (for instance, an ORM read) started a "
"transaction that lasted until the next ORM write. Such \"automatic "
"transactions\" no longer exist in Django 1.6."
msgstr ""

# 91daec876cd3458c99c3161afd0480d0
#: ../../topics/db/transactions.txt:697
msgid "There are four known scenarios where this is backwards-incompatible."
msgstr ""

# c15325f5054b47e9aa31871950a0ecd3
#: ../../topics/db/transactions.txt:699
msgid ""
"Note that managed mode isn't affected at all. This section assumes auto "
"mode. See the :ref:`description of modes <transaction-states>` above."
msgstr ""

# 88db4fef26d745dc92c73bac9e631a2b
#: ../../topics/db/transactions.txt:703
msgid "Sequences of custom SQL queries"
msgstr ""

# 1d5ca196014a4d85a974d97170738c6a
#: ../../topics/db/transactions.txt:705
msgid ""
"If you're executing several :ref:`custom SQL queries <executing-custom-sql>`"
" in a row, each one now runs in its own transaction, instead of sharing the "
"same \"automatic transaction\". If you need to enforce atomicity, you must "
"wrap the sequence of queries in :func:`atomic`."
msgstr ""

# 79cf806a2776426c87036665470c27a2
#: ../../topics/db/transactions.txt:710
msgid ""
"To check for this problem, look for calls to ``cursor.execute()``. They're "
"usually followed by a call to ``transaction.commit_unless_managed()``, which"
" isn't useful any more and should be removed."
msgstr ""

# 66106e233f2644dcb22191fc045bd5f1
#: ../../topics/db/transactions.txt:715
msgid "Select for update"
msgstr ""

# 30611f8d63614e87a81a7e1d047ac569
#: ../../topics/db/transactions.txt:717
msgid ""
"If you were relying on \"automatic transactions\" to provide locking between"
" :meth:`~django.db.models.query.QuerySet.select_for_update` and a subsequent"
" write operation — an extremely fragile design, but nonetheless possible — "
"you must wrap the relevant code in :func:`atomic`."
msgstr ""

# c5b57ca11e484364be7037c88455465e
#: ../../topics/db/transactions.txt:723
msgid "Using a high isolation level"
msgstr ""

# b5affe164e5240f0bcf8a0dfc69807ae
#: ../../topics/db/transactions.txt:725
msgid ""
"If you were using the \"repeatable read\" isolation level or higher, and if "
"you relied on \"automatic transactions\" to guarantee consistency between "
"successive reads, the new behavior might be backwards-incompatible. To "
"enforce consistency, you must wrap such sequences in :func:`atomic`."
msgstr ""

# 39e8725a74c540658def5807c60ae37a
#: ../../topics/db/transactions.txt:730
msgid ""
"MySQL defaults to \"repeatable read\" and SQLite to \"serializable\"; they "
"may be affected by this problem."
msgstr ""

# d6adba3e83d84f9eaf25c0add367d9d3
#: ../../topics/db/transactions.txt:733
msgid ""
"At the \"read committed\" isolation level or lower, \"automatic "
"transactions\" have no effect on the semantics of any sequence of ORM "
"operations."
msgstr ""

# bc0f848dce554a149ce866983e1c4d88
#: ../../topics/db/transactions.txt:736
msgid ""
"PostgreSQL and Oracle default to \"read committed\" and aren't affected, "
"unless you changed the isolation level."
msgstr ""

# 45c4ced1884b48cfbb74bce88e9480bd
#: ../../topics/db/transactions.txt:740
msgid "Using unsupported database features"
msgstr ""

# a3b36dd8ddef43d4be2a20858a283ee5
#: ../../topics/db/transactions.txt:742
msgid ""
"With triggers, views, or functions, it's possible to make ORM reads result "
"in database modifications. Django 1.5 and earlier doesn't deal with this "
"case and it's theoretically possible to observe a different behavior after "
"upgrading to Django 1.6 or later. In doubt, use :func:`atomic` to enforce "
"integrity."
msgstr ""

# 92b9d2cca72445298bda3cf2e42c9e90
#: ../../topics/email.txt:3
msgid "Sending email"
msgstr "Envoi de messages électroniques"

# 37304ef4809848a8b4a59970688b27f8
#: ../../topics/email.txt:8
msgid ""
"Although Python makes sending email relatively easy via the :mod:`smtplib` "
"module, Django provides a couple of light wrappers over it. These wrappers "
"are provided to make sending email extra quick, to make it easy to test "
"email sending during development, and to provide support for platforms that "
"can't use SMTP."
msgstr "Même si avec le module :mod:`smtplib` de Python, il est relativement simple d'envoyer des courriels, Django propose quelques adaptateur légers supplémentaires. Ces adaptateurs sont fournis pour rendre encore plus direct l'envoi de courriels, pour faciliter le test d'envoi de courriels durant le développement et pour fournir la prise en charge sur les plates-formes qui ne peuvent pas utiliser SMTP."

# 69bbc3665f734e219ec0c21f3218f855
#: ../../topics/email.txt:14
msgid "The code lives in the ``django.core.mail`` module."
msgstr "Le code se trouve dans le module ``django.core.mail``."

# 447985e40e05409c96ae72508ce2639f
#: ../../topics/email.txt:19
msgid "In two lines::"
msgstr "En deux lignes ::"

# 0ab46fff63a442cbba2046ab6fcd69c7
#: ../../topics/email.txt:26
msgid ""
"Mail is sent using the SMTP host and port specified in the "
":setting:`EMAIL_HOST` and :setting:`EMAIL_PORT` settings. The "
":setting:`EMAIL_HOST_USER` and :setting:`EMAIL_HOST_PASSWORD` settings, if "
"set, are used to authenticate to the SMTP server, and the "
":setting:`EMAIL_USE_TLS` setting controls whether a secure connection is "
"used."
msgstr "Les messages sont envoyés en utilisant l'hôte et le port indiqués dans les réglages :setting:`EMAIL_HOST` et :setting:`EMAIL_PORT`. Les réglages :setting:`EMAIL_HOST_USER` et :setting:`EMAIL_HOST_PASSWORD`, si définis, sont utilisés pour s'authentifier auprès du serveur SMTP, et le réglage :setting:`EMAIL_USE_TLS` indique si l'utilisation d'une connexion sécurisée est nécessaire."

# ee889c89a27e46a1bbc7183bddcf3728
#: ../../topics/email.txt:34
msgid ""
"The character set of email sent with ``django.core.mail`` will be set to the"
" value of your :setting:`DEFAULT_CHARSET` setting."
msgstr "Le jeu de caractères des messages envoyés par ``django.core.mail`` est défini par la valeur du réglage :setting:`DEFAULT_CHARSET`."

# e00def9292494483adbfb698b57909da
#: ../../topics/email.txt:38
msgid "send_mail()"
msgstr "send_mail()"

# 0ceef21cd11d4a4c98088db604e990f6
#: ../../topics/email.txt:42
msgid ""
"The simplest way to send email is using ``django.core.mail.send_mail()``."
msgstr "La façon la plus simple d'envoyer des courriels est d'utiliser ``django.core.mail.send_mail()``."

# 6cdcd5e6648c41fd89e36475f85ebc05
#: ../../topics/email.txt:45
msgid ""
"The ``subject``, ``message``, ``from_email`` and ``recipient_list`` "
"parameters are required."
msgstr "Les paramètres ``subject``, ``message``, ``from_email`` et ``recipient_list`` sont obligatoires."

# c426ca60375547c5a20e6b8984acd99b
#: ../../topics/email.txt:48
msgid "``subject``: A string."
msgstr "``subject``: une chaîne de caractères."

# ea59ffe8a95a42bb90e2addf260bbc5c
#: ../../topics/email.txt:49
msgid "``message``: A string."
msgstr "``message``: une chaîne de caractères."

# 2884652ee76c4299a2bed66464fd4de9
#: ../../topics/email.txt:50
msgid "``from_email``: A string."
msgstr "``from_email``: une chaîne de caractères."

# 0c98ee1a17e84e5fa9b17b4a23c0d210
#: ../../topics/email.txt:51
msgid ""
"``recipient_list``: A list of strings, each an email address. Each member of"
" ``recipient_list`` will see the other recipients in the \"To:\" field of "
"the email message."
msgstr "``recipient_list``: une liste de chaînes de caractères, chacune étant une adresse électronique. Chaque personne dans ``recipient_list`` verra les autres destinataires dans le champ « To: » du courriel."

# 8a9ba6d4a0eb41dd98a80142b80435c6
#: ../../topics/email.txt:54
msgid ""
"``fail_silently``: A boolean. If it's ``False``, ``send_mail`` will raise an"
" :exc:`smtplib.SMTPException`. See the :mod:`smtplib` docs for a list of "
"possible exceptions, all of which are subclasses of "
":exc:`~smtplib.SMTPException`."
msgstr "``fail_silently``: une valeur booléenne. Avec la valeur ``False``, ``send_mail`` lève une exception :exc:`smtplib.SMTPException` en cas d'erreur. Consultez la liste des exceptions possibles dans la documentation de :mod:`smtplib` ; elles sont toutes des sous-classes de :exc:`~smtplib.SMTPException`."

# 18eeede091024fd09c3377b9b3c085f4
#: ../../topics/email.txt:58
msgid ""
"``auth_user``: The optional username to use to authenticate to the SMTP "
"server. If this isn't provided, Django will use the value of the "
":setting:`EMAIL_HOST_USER` setting."
msgstr "``auth_user``: le nom d'utilisateur facultatif utilisé pour s'authentifier auprès du serveur SMTP. Si ce paramètre est absent, c'est la valeur du réglage :setting:`EMAIL_HOST_USER` qui sera utilisée."

# 1d77073645e7476d987a2f718d75926b
#: ../../topics/email.txt:61
msgid ""
"``auth_password``: The optional password to use to authenticate to the SMTP "
"server. If this isn't provided, Django will use the value of the "
":setting:`EMAIL_HOST_PASSWORD` setting."
msgstr "``auth_password``: le mot de passe facultatif utilisé pour s'authentifier auprès du serveur SMTP. Si ce paramètre est absent, c'est la valeur du réglage :setting:`EMAIL_HOST_PASSWORD` qui sera utilisée."

# 2392e8a358114b6e82d0f84a3a2bd02f
#: ../../topics/email.txt:64
msgid ""
"``connection``: The optional email backend to use to send the mail. If "
"unspecified, an instance of the default backend will be used. See the "
"documentation on :ref:`Email backends <topic-email-backends>` for more "
"details."
msgstr "``connection``: le moteur de messagerie facultatif utilisé pour envoyer le message. Si ce paramètre est absent, c'est une instance du moteur par défaut qui sera utilisée. Consultez la documentation sur les :ref:`moteurs de messagerie <topic-email-backends>` pour plus de détails."

# db3519798a8b47d58e98ec4ff5871a95
#: ../../topics/email.txt:70
msgid "send_mass_mail()"
msgstr "send_mass_mail()"

# d520cabc88f74b3b8e25b8d53207d0af
#: ../../topics/email.txt:74
msgid ""
"``django.core.mail.send_mass_mail()`` is intended to handle mass emailing."
msgstr "``django.core.mail.send_mass_mail()`` est prévu pour envoyer des courriels en masse."

# a35081225ce74b79a6aaebcd046429a5
#: ../../topics/email.txt:76
msgid "``datatuple`` is a tuple in which each element is in this format::"
msgstr "``datatuple`` est un tuple dans lequel chaque élément suit le format suivant ::"

# 656c4190993d47028b111565f2d8badd
#: ../../topics/email.txt:80
msgid ""
"``fail_silently``, ``auth_user`` and ``auth_password`` have the same "
"functions as in :meth:`~django.core.mail.send_mail()`."
msgstr "``fail_silently``, ``auth_user`` et ``auth_password`` jouent le même rôle que dans :meth:`~django.core.mail.send_mail()`."

# d067b2ed4cbf4bdfbe9901be236fd2f7
#: ../../topics/email.txt:83
msgid ""
"Each separate element of ``datatuple`` results in a separate email message. "
"As in :meth:`~django.core.mail.send_mail()`, recipients in the same "
"``recipient_list`` will all see the other addresses in the email messages' "
"\"To:\" field."
msgstr "Chaque élément de ``datatuple`` produit un courriel séparé. Comme dans :meth:`~django.core.mail.send_mail()`, les destinataires de la même ``recipient_list`` verront les autres adresses dans le champ « To: » des courriels."

# f2994b33c076463e98dbb7a670afc2dd
#: ../../topics/email.txt:88
msgid ""
"For example, the following code would send two different messages to two "
"different sets of recipients; however, only one connection to the mail "
"server would be opened::"
msgstr "Par exemple, le code suivant envoie deux messages différents à deux ensembles différents de destinataires ; cependant, une seule connexion est ouverte vers le serveur de messagerie ::"

# d5ec9d2101154088a7d5f0db3c9e78f7
#: ../../topics/email.txt:97
msgid "send_mass_mail() vs. send_mail()"
msgstr "send_mass_mail() vs. send_mail()"

# 06381a9190c4469e97b279e7a26fb5ec
#: ../../topics/email.txt:99
msgid ""
"The main difference between :meth:`~django.core.mail.send_mass_mail()` and "
":meth:`~django.core.mail.send_mail()` is that "
":meth:`~django.core.mail.send_mail()` opens a connection to the mail server "
"each time it's executed, while :meth:`~django.core.mail.send_mass_mail()` "
"uses a single connection for all of its messages. This makes "
":meth:`~django.core.mail.send_mass_mail()` slightly more efficient."
msgstr "La différence principale entre :meth:`~django.core.mail.send_mass_mail()` et :meth:`~django.core.mail.send_mail()` est que :meth:`~django.core.mail.send_mail()` ouvre une connexion vers le serveur de messagerie lors de chaque exécution, alors que :meth:`~django.core.mail.send_mass_mail()` utilise une seule connexion pour tous ses messages. :meth:`~django.core.mail.send_mass_mail()` est donc un peu plus efficace."

# 43d272b4803343f7833072eb9ce3e9a2
#: ../../topics/email.txt:107
msgid "mail_admins()"
msgstr "mail_admins()"

# 1fc7a18abc79459fb6a9651721d43bfd
#: ../../topics/email.txt:111
msgid ""
"``django.core.mail.mail_admins()`` is a shortcut for sending an email to the"
" site admins, as defined in the :setting:`ADMINS` setting."
msgstr "``django.core.mail.mail_admins()`` est un raccourci pour envoyer un courriel aux administrateurs du site, tels qu'ils apparaissent dans le réglage :setting:`ADMINS`."

# 4f837fb4e40444d9807a5cf753230db4
#: ../../topics/email.txt:114
msgid ""
"``mail_admins()`` prefixes the subject with the value of the "
":setting:`EMAIL_SUBJECT_PREFIX` setting, which is ``\"[Django] \"`` by "
"default."
msgstr "``mail_admins()`` préfixe le sujet avec la valeur du réglage :setting:`EMAIL_SUBJECT_PREFIX` (« [Django] » par défaut)."

# aada9e4ff9684e92b432fa88e09c5b10
#: ../../topics/email.txt:117
msgid ""
"The \"From:\" header of the email will be the value of the "
":setting:`SERVER_EMAIL` setting."
msgstr "L'en-tête « From: » du courriel correspond à la valeur du réglage :setting:`SERVER_EMAIL`."

# c19a4320199a4f9783de1384de6e0cb1
#: ../../topics/email.txt:120
msgid "This method exists for convenience and readability."
msgstr "Cette méthode existe par commodité et pour une meilleure lisibilité."

# 0d5fad8f71dc4c3e9b955fff0ec82ada
#: ../../topics/email.txt:122
msgid ""
"If ``html_message`` is provided, the resulting email will be a "
":mimetype:`multipart/alternative` email with ``message`` as the "
":mimetype:`text/plain` content type and ``html_message`` as the "
":mimetype:`text/html` content type."
msgstr "Si ``html_message`` est indiqué, le courriel produit sera un courriel :mimetype:`multipart/alternative`, avec ``message`` comme type de contenu :mimetype:`text/plain` et ``html_message`` comme type de contenu :mimetype:`text/html` ."

# 994bc966de17400494b8e1a633f083d5
#: ../../topics/email.txt:128
msgid "mail_managers()"
msgstr "mail_managers()"

# f770826872644a56a078078d9b853918
#: ../../topics/email.txt:132
msgid ""
"``django.core.mail.mail_managers()`` is just like ``mail_admins()``, except "
"it sends an email to the site managers, as defined in the "
":setting:`MANAGERS` setting."
msgstr "``django.core.mail.mail_managers()`` est équivalent à ``mail_admins()``, excepté le fait qu'il envoie un courriel aux gestionnaires du site tels que définis dans le réglage :setting:`MANAGERS`."

# a6cd89ecc100486a95e58a7ea477d65f
# 4faa2837705b40a4a68fa88383c0cb36
# 4f320018074d4ea3a2052be7c1cee5c1
# bac43085e4c4402285f46361a8ee4321
#: ../../topics/email.txt:137 ../../topics/http/sessions.txt:421
#: ../../topics/http/shortcuts.txt:185 ../../topics/http/urls.txt:609
msgid "Examples"
msgstr "Exemples"

# 14ed6651e02b42969e86a5c7b515ab24
#: ../../topics/email.txt:139
msgid ""
"This sends a single email to john@example.com and jane@example.com, with "
"them both appearing in the \"To:\"::"
msgstr "Ceci envoie un courriel unique à john@example.com et jane@example.com, les deux apparaissant dans le champ « To: » ::"

# 2f7e0e25a0414e49babc1d9db59253cf
#: ../../topics/email.txt:145
msgid ""
"This sends a message to john@example.com and jane@example.com, with them "
"both receiving a separate email::"
msgstr "Ceci envoie un courriel à john@example.com et jane@example.com, les deux recevant un courriel séparé ::"

# a2aa49dc557c4ab78a288ffdd2785f35
#: ../../topics/email.txt:155
msgid "Preventing header injection"
msgstr "Prévention de l'injection d'en-têtes"

# efe8a2ce9d424f89adf662010a384bef
#: ../../topics/email.txt:157
msgid ""
"`Header injection`_ is a security exploit in which an attacker inserts extra"
" email headers to control the \"To:\" and \"From:\" in email messages that "
"your scripts generate."
msgstr "L'`injection d'en-têtes`_ est une faille de sécurité dans laquelle un attaquant insère des en-têtes de courriel supplémentaires pour contrôler les champs « To: » et « From: » des courriels que vos scripts produisent."

# e650e30885654f63af56209941da8444
#: ../../topics/email.txt:161
msgid ""
"The Django email functions outlined above all protect against header "
"injection by forbidding newlines in header values. If any ``subject``, "
"``from_email`` or ``recipient_list`` contains a newline (in either Unix, "
"Windows or Mac style), the email function (e.g. "
":meth:`~django.core.mail.send_mail()`) will raise "
"``django.core.mail.BadHeaderError`` (a subclass of ``ValueError``) and, "
"hence, will not send the email. It's your responsibility to validate all "
"data before passing it to the email functions."
msgstr "Les fonctions de messagerie de Django décrites ci-dessus protègent toutes contre l'injection d'en-têtes en interdisant les sauts de ligne dans les valeurs d'en-têtes. Si l'un des paramètres  ``subject``, ``from_email`` ou ``recipient_list`` contient un saut de ligne (que ce soit du style Unix, Windows ou Mac), la fonction de messagerie (par ex. :meth:`~django.core.mail.send_mail()`) lève une exception ``django.core.mail.BadHeaderError`` (une sous-classe de ``ValueError``) et de ce fait, n'envoie pas le courriel. Il est de votre responsabilité de valider toutes les données avant de les transmettre aux fonctions de messagerie."

# 32aa54459be141f5a55c47323424eae0
#: ../../topics/email.txt:169
msgid ""
"If a ``message`` contains headers at the start of the string, the headers "
"will simply be printed as the first bit of the email message."
msgstr "Si un ``message`` contient des en-têtes en début de chaîne, les en-têtes seront simplement affichés en première partie du contenu du courriel."

# 3f174ffbad9e4cd3b55a7751f3da3c78
#: ../../topics/email.txt:172
msgid ""
"Here's an example view that takes a ``subject``, ``message`` and "
"``from_email`` from the request's POST data, sends that to admin@example.com"
" and redirects to \"/contact/thanks/\" when it's done::"
msgstr "Voici un exemple de vue qui récupère les valeurs ``subject``, ``message`` et ``from_email`` à partir de données POST de la requête, envoie cela à admin@example.com et redirige vers « /contact/thanks/ » quand c'est fait ::"

# d55f6f7f4c8145b8933b0e295638a2fb
#: ../../topics/email.txt:198
msgid "The EmailMessage class"
msgstr "La classe "

# 330a56248e5047e4980a08e1d0362894
#: ../../topics/email.txt:200
msgid ""
"Django's :meth:`~django.core.mail.send_mail()` and "
":meth:`~django.core.mail.send_mass_mail()` functions are actually thin "
"wrappers that make use of the :class:`~django.core.mail.EmailMessage` class."
msgstr "Les fonctions  :meth:`~django.core.mail.send_mail()` et :meth:`~django.core.mail.send_mass_mail()` de Django sont en réalité de légers adaptateurs qui utilisent la classe :class:`~django.core.mail.EmailMessage`."

# 61f1c20137f649189277944b0c0ce72e
#: ../../topics/email.txt:204
msgid ""
"Not all features of the :class:`~django.core.mail.EmailMessage` class are "
"available through the :meth:`~django.core.mail.send_mail()` and related "
"wrapper functions. If you wish to use advanced features, such as BCC'ed "
"recipients, file attachments, or multi-part email, you'll need to create "
":class:`~django.core.mail.EmailMessage` instances directly."
msgstr "Seule une partie des fonctionnalités de la classe :class:`~django.core.mail.EmailMessage` sont exposées par :meth:`~django.core.mail.send_mail()` et les autres fonctions adaptatrices liées. Si vous voulez utiliser des fonctionnalités avancées, telles que les destinataires en copie cachée, les fichiers joints ou les courriels multi-parties, vous devrez créer directement des instances de :class:`~django.core.mail.EmailMessage`."

# 67d30fdcad5c4b8bad71c9aff5d4113e
#: ../../topics/email.txt:211
msgid ""
"This is a design feature. :meth:`~django.core.mail.send_mail()` and related "
"functions were originally the only interface Django provided. However, the "
"list of parameters they accepted was slowly growing over time. It made sense"
" to move to a more object-oriented design for email messages and retain the "
"original functions only for backwards compatibility."
msgstr "Cette conception est volontaire. :meth:`~django.core.mail.send_mail()` et les fonctions liées étaient au départ la seule interface proposée par Django. Cependant, la liste des paramètres acceptés ne cessait de s'accroître avec le temps. Il était donc logique de passer à un concept plus orienté objet pour les courriels et ne conserver les fonctions originales que par rétrocompatibilité."

# 0f610cf72707450783fcc5e3c2824084
#: ../../topics/email.txt:218
msgid ""
":class:`~django.core.mail.EmailMessage` is responsible for creating the "
"email message itself. The :ref:`email backend <topic-email-backends>` is "
"then responsible for sending the email."
msgstr ":class:`~django.core.mail.EmailMessage` est responsable de créer le courriel lui-même. Le :ref:`moteur de messagerie <topic-email-backends>` est ensuite responsable d'envoyer le courriel."

# 78a59a7edec14a9495aff54366a0c70d
#: ../../topics/email.txt:222
msgid ""
"For convenience, :class:`~django.core.mail.EmailMessage` provides a simple "
"``send()`` method for sending a single email. If you need to send multiple "
"messages, the email backend API :ref:`provides an alternative <topics-"
"sending-multiple-emails>`."
msgstr "Par commodité, :class:`~django.core.mail.EmailMessage` propose une simple méthode ``send()`` pour envoyer un courriel unique. Si vous devez envoyer plusieurs messages, l'API du moteur de messagerie :ref:`offre une alternative <topics-sending-multiple-emails>`."

# 6b10ad16c7c34b8cb37395814a93ddb5
#: ../../topics/email.txt:228
msgid "EmailMessage Objects"
msgstr "Les objets "

# dacda348bf774e50865fddbf5830c3c2
#: ../../topics/email.txt:232
msgid ""
"The :class:`~django.core.mail.EmailMessage` class is initialized with the "
"following parameters (in the given order, if positional arguments are used)."
" All parameters are optional and can be set at any time prior to calling the"
" ``send()`` method."
msgstr "La classe :class:`~django.core.mail.EmailMessage` est initialisée avec les paramètres suivants (dans l'ordre donné, si des paramètres positionnels sont utilisés). Tous les paramètres sont facultatifs et peuvent être définis à tout moment précédant l'appel à la méthode ``send()``."

# e195a1bf67334814aa86a66329490ab8
#: ../../topics/email.txt:237
msgid "``subject``: The subject line of the email."
msgstr "``subject``: la ligne sujet du courriel."

# 21184a0ad570403b8c73bb3bf6c9a7ad
#: ../../topics/email.txt:239
msgid "``body``: The body text. This should be a plain text message."
msgstr "``body``: le texte du corps. Cela doit être un message texte brut."

# 8bca6abc07fe4583ae73cb75c699f89b
#: ../../topics/email.txt:241
msgid ""
"``from_email``: The sender's address. Both ``fred@example.com`` and ``Fred "
"<fred@example.com>`` forms are legal. If omitted, the "
":setting:`DEFAULT_FROM_EMAIL` setting is used."
msgstr "``from_email``: l'adresse de l'expéditeur. Les deux formes ``fred@example.com`` et ``Fred <fred@example.com>`` sont acceptées. Si le paramètre est absent, c'est le réglage :setting:`DEFAULT_FROM_EMAIL` qui est utilisé."

# 2de120b959ca48cfb763f74f122d5961
#: ../../topics/email.txt:245
msgid "``to``: A list or tuple of recipient addresses."
msgstr "``to``: une liste ou un tuple d'adresses de destination."

# a2a15c2bd09f492bb57ae899560a280b
#: ../../topics/email.txt:247
msgid ""
"``bcc``: A list or tuple of addresses used in the \"Bcc\" header when "
"sending the email."
msgstr "``bcc``: une liste ou un tuple d'adresses à placer dans l'en-tête « Bcc » au moment d'envoyer le courriel."

# 162a0d38641f48419cd0b17ebf209518
#: ../../topics/email.txt:250
msgid ""
"``connection``: An email backend instance. Use this parameter if you want to"
" use the same connection for multiple messages. If omitted, a new connection"
" is created when ``send()`` is called."
msgstr "``connection``: une instance de moteur de messagerie. Utilisez ce paramètre si vous voulez utiliser la même connexion pour plusieurs messages. Si ce paramètre est absent, une nouvelle connexion est initiée lorsque ``send()`` est appelée."

# af0aab7d76044a5183d23bea8f2fe2d0
#: ../../topics/email.txt:254
msgid ""
"``attachments``: A list of attachments to put on the message. These can be "
"either ``email.MIMEBase.MIMEBase`` instances, or ``(filename, content, "
"mimetype)`` triples."
msgstr "``attachments``: une liste de pièces jointes à placer dans le message. Elles peuvent être soit des instances de ``email.MIMEBase.MIMEBase``, soit des triplets ``(nom de fichier, contenu, type mime)``."

# d35631a3977640e6ab838b14824adc37
#: ../../topics/email.txt:258
msgid ""
"``headers``: A dictionary of extra headers to put on the message. The keys "
"are the header name, values are the header values. It's up to the caller to "
"ensure header names and values are in the correct format for an email "
"message. The corresponding attribute is ``extra_headers``."
msgstr "``headers``: un dictionnaire d'en-têtes à ajouter au message. Les clés sont les noms d'en-têtes, les valeurs sont les valeurs d'en-têtes. C'est à l'appelant de s'assurer que les noms et les valeurs d'en-têtes soient dans un format correct pour les courriels. L'attribut correspondant est ``extra_headers``."

# 364ac574c3ab4abba7757e8e1713da42
#: ../../topics/email.txt:263
msgid ""
"``cc``: A list or tuple of recipient addresses used in the \"Cc\" header "
"when sending the email."
msgstr "``cc``: une liste ou un tuple d'adresses de destination utilisées dans l'en-tête « Cc » lors de l'envoi du courriel."

# 1e939fb7f64042d3b4e9bb55616d6f3c
#: ../../topics/email.txt:272
msgid "The class has the following methods:"
msgstr "La classe possède les méthodes suivantes :"

# 991e1cf1a37f477c8d598be162300e11
#: ../../topics/email.txt:274
msgid ""
"``send(fail_silently=False)`` sends the message. If a connection was "
"specified when the email was constructed, that connection will be used. "
"Otherwise, an instance of the default backend will be instantiated and used."
" If the keyword argument ``fail_silently`` is ``True``, exceptions raised "
"while sending the message will be quashed."
msgstr "``send(fail_silently=False)`` envoie le message. Si une connexion a été indiquée au moment où le courriel a été construit, c'est cette connexion qui sera utilisée. Sinon, c'est une instance du moteur par défaut qui sera utilisée. Si le paramètre nommé ``fail_silently`` vaut ``True``, les exceptions levées lors de l'envoi du message seront ignorées."

# b4bf81eb8b934e6db92dad897ae3f228
#: ../../topics/email.txt:280
msgid ""
"``message()`` constructs a ``django.core.mail.SafeMIMEText`` object (a "
"subclass of Python's ``email.MIMEText.MIMEText`` class) or a "
"``django.core.mail.SafeMIMEMultipart`` object holding the message to be "
"sent. If you ever need to extend the :class:`~django.core.mail.EmailMessage`"
" class, you'll probably want to override this method to put the content you "
"want into the MIME object."
msgstr "``message()`` construit un objet ``django.core.mail.SafeMIMEText`` (une sous-classe de la classe Python ``email.MIMEText.MIMEText``) ou un objet ``django.core.mail.SafeMIMEMultipart`` contenant le message à envoyer. S'il vous arrivait de devoir étendre la classe :class:`~django.core.mail.EmailMessage`, il sera probablement nécessaire de surcharger cette méthode pour pouvoir placer le contenu souhaité dans l'objet MIME."

# 4d2b222afa1e4f2f8703d50612b9771c
#: ../../topics/email.txt:287
msgid ""
"``recipients()`` returns a list of all the recipients of the message, "
"whether they're recorded in the ``to``, ``cc`` or ``bcc`` attributes. This "
"is another method you might need to override when subclassing, because the "
"SMTP server needs to be told the full list of recipients when the message is"
" sent. If you add another way to specify recipients in your class, they need"
" to be returned from this method as well."
msgstr "``recipients()`` renvoie une liste de tous les destinataires du message, quel que soit le champ où ils se trouvent (``to``, ``cc`` ou ``bcc``). C'est aussi une méthode qu'il peut être utile de surcharger lors de l'écriture d'une sous-classe, car le serveur SMTP doit recevoir la liste complète des destinataires au moment de l'envoi du message. Si vous ajoutez une autre façon d'indiquer les destinataires dans votre classe, ceux-ci doivent aussi être renvoyés par cette méthode."

# 2599e68f57db4af9a0d1c372c3137370
#: ../../topics/email.txt:294
msgid ""
"``attach()`` creates a new file attachment and adds it to the message. There"
" are two ways to call ``attach()``:"
msgstr "``attach()`` crée une nouvelle pièce jointe et l'ajoute au message. Il y a deux façons d'appeler ``attach()``:"

# 2d4c016ba40b48f7815e8197dea5971b
#: ../../topics/email.txt:297
msgid ""
"You can pass it a single argument that is an ``email.MIMEBase.MIMEBase`` "
"instance. This will be inserted directly into the resulting message."
msgstr "Vous pouvez lui passer un seul paramètre qui est une instance de ``email.MIMEBase.MIMEBase``. Elle sera directement insérée dans le message résultant."

# b495ffead9024f73b390b7f4db365e3a
#: ../../topics/email.txt:301
msgid ""
"Alternatively, you can pass ``attach()`` three arguments: ``filename``, "
"``content`` and ``mimetype``. ``filename`` is the name of the file "
"attachment as it will appear in the email, ``content`` is the data that will"
" be contained inside the attachment and ``mimetype`` is the optional MIME "
"type for the attachment. If you omit ``mimetype``, the MIME content type "
"will be guessed from the filename of the attachment."
msgstr "Il est aussi possible de passer trois paramètres à ``attach()``: ``filename``, ``content`` et ``mimetype``. ``filename`` est le nom de la pièce jointe tel qu'il apparaîtra dans le courriel, ``content`` contient les données qui formeront la pièce jointe et ``mimetype`` est le type MIME facultatif de la pièce jointe. Si vous omettez ``mimetype``, le type de contenu MIME sera déduit du nom de fichier de la pièce jointe."

# 069a5f79398e45a28a7458ac4c10ff18
#: ../../topics/email.txt:313
msgid ""
"``attach_file()`` creates a new attachment using a file from your "
"filesystem. Call it with the path of the file to attach and, optionally, the"
" MIME type to use for the attachment. If the MIME type is omitted, it will "
"be guessed from the filename. The simplest use would be::"
msgstr "``attach_file()`` crée une nouvelle pièce jointe à partir d'un fichier du système de fichiers. Appelez-la avec le chemin du fichier à joindre et, facultativement, le type MIME à utiliser pour ce fichier. Si vous omettez le type MIME, il sera déduit du nom de fichier. L'utilisation la plus simple est ::"

# 6d1b417cdf144560810793ef07fecd55
#: ../../topics/email.txt:323
msgid "Sending alternative content types"
msgstr "Envoi d'autres types de contenus"

# 67179a90533a4fe2923499212a2f2005
#: ../../topics/email.txt:325
msgid ""
"It can be useful to include multiple versions of the content in an email; "
"the classic example is to send both text and HTML versions of a message. "
"With Django's email library, you can do this using the "
"``EmailMultiAlternatives`` class. This subclass of "
":class:`~django.core.mail.EmailMessage` has an ``attach_alternative()`` "
"method for including extra versions of the message body in the email. All "
"the other methods (including the class initialization) are inherited "
"directly from :class:`~django.core.mail.EmailMessage`."
msgstr "Il peut être utile d'inclure plusieurs versions d'un contenu dans un courriel ; l'exemple classique est d'envoyer à la fois des versions texte brut et HTML d'un message. Avec la bibliothèque de messagerie de Django, vous pouvez le faire en utilisant la classe ``EmailMultiAlternatives``. Cette sous-classe de :class:`~django.core.mail.EmailMessage` possède une méthode ``attach_alternative()`` pour inclure des versions supplémentaires du corps d'un message dans le courriel. Toutes les autres méthodes (y compris l'initialisation de la classe) sont directement héritées de :class:`~django.core.mail.EmailMessage`."

# 8411c899b62a4e838056df3aba0a27a0
#: ../../topics/email.txt:333
msgid "To send a text and HTML combination, you could write::"
msgstr "Pour envoyer une combinaison de texte et de HTML, vous pourriez écrire ::"

# 6cfe201a0d354be5b620aa6e254cad54
#: ../../topics/email.txt:344
msgid ""
"By default, the MIME type of the ``body`` parameter in an "
":class:`~django.core.mail.EmailMessage` is ``\"text/plain\"``. It is good "
"practice to leave this alone, because it guarantees that any recipient will "
"be able to read the email, regardless of their mail client. However, if you "
"are confident that your recipients can handle an alternative content type, "
"you can use the ``content_subtype`` attribute on the "
":class:`~django.core.mail.EmailMessage` class to change the main content "
"type. The major type will always be ``\"text\"``, but you can change the "
"subtype. For example::"
msgstr "Par défaut, le type MIME du paramètre ``body`` d'un :class:`~django.core.mail.EmailMessage` est ``\"text/plain\"``. Il est recommandé de le laisser tel quel, car il garantit que tout destinataire sera capable de lire le courriel, quel que soit son client de messagerie. Cependant, si vous savez que vos destinataires savent gérer un autre type de contenu, vous pouvez utiliser l'attribut ``content_subtype`` de la classe :class:`~django.core.mail.EmailMessage` pour modifier le type de contenu principal. Le type primaire sera toujours ``\"text\"``, mais vous pouvez modifier le sous-type. Par exemple ::"

# 9ef0cfad6570457ab9e0592b91fc78fd
#: ../../topics/email.txt:361
msgid "Email backends"
msgstr "Moteurs de messagerie"

# 6659f4ac6ba14c16acd9fb5c6770c589
#: ../../topics/email.txt:363
msgid "The actual sending of an email is handled by the email backend."
msgstr "L'envoi réel d'un courriel est géré par le moteur de messagerie."

# c7c896adb64a4715b9db7a9142748d93
#: ../../topics/email.txt:365
msgid "The email backend class has the following methods:"
msgstr "La classe du moteur de messagerie possède les méthodes suivantes :"

# 326b774ea7094e6fa1afff5b953c87fe
#: ../../topics/email.txt:367
msgid "``open()`` instantiates an long-lived email-sending connection."
msgstr "``open()`` instancie une connexion persistante d'envoi de messages."

# 7377b6d1a5b04a6a82f70680e338b650
#: ../../topics/email.txt:369
msgid "``close()`` closes the current email-sending connection."
msgstr "``close()`` ferme la connexion actuelle vers le système d'envoi de messages."

# 78d5446dd0224dd2a1e70e2ca0dd3a2d
#: ../../topics/email.txt:371
msgid ""
"``send_messages(email_messages)`` sends a list of "
":class:`~django.core.mail.EmailMessage` objects. If the connection is not "
"open, this call will implicitly open the connection, and close the "
"connection afterwards. If the connection is already open, it will be left "
"open after mail has been sent."
msgstr "``send_messages(email_messages)`` envoie une liste d'objets :class:`~django.core.mail.EmailMessage`. Si la connexion n'est pas ouverte, cet appel ouvrira implicitement la connexion, puis la fermera à la fin de l'opération. Si la connexion est déjà ouverte, elle sera conservée ouverte après l'envoi des messages."

# bce12d2a427d48bc98121fe87ba0ab0a
#: ../../topics/email.txt:378
msgid "Obtaining an instance of an email backend"
msgstr "Obtention d'une instance d'un moteur de messagerie"

# e7784c4052ac465496c4927c1f2bc66d
#: ../../topics/email.txt:380
msgid ""
"The :meth:`get_connection` function in ``django.core.mail`` returns an "
"instance of the email backend that you can use."
msgstr "La fonction :meth:`get_connection` de ``django.core.mail`` renvoie une instance utilisable du moteur de messagerie."

# 91b44a3626644c19b31e0ec9a52236d5
#: ../../topics/email.txt:387
msgid ""
"By default, a call to ``get_connection()`` will return an instance of the "
"email backend specified in :setting:`EMAIL_BACKEND`. If you specify the "
"``backend`` argument, an instance of that backend will be instantiated."
msgstr "Par défaut, une appel à ``get_connection()`` renvoie une instance du moteur de messagerie indiqué dans :setting:`EMAIL_BACKEND`. Si vous indiquez le paramètre ``backend``, une instance de ce moteur sera créée."

# 22424a0f86fd4606b977bc55e3633df9
#: ../../topics/email.txt:391
msgid ""
"The ``fail_silently`` argument controls how the backend should handle "
"errors. If ``fail_silently`` is True, exceptions during the email sending "
"process will be silently ignored."
msgstr "Le paramètre ``fail_silently`` contrôle la gestion d'erreurs dans le moteur. Si ``fail_silently`` vaut True, les exceptions survenant durant le processus d'envoi de messages seront ignorées en silence."

# e92b92af186d45f99afca59cf1dbc204
#: ../../topics/email.txt:395
msgid ""
"All other arguments are passed directly to the constructor of the email "
"backend."
msgstr "Tous les autres paramètres sont directement transmis au constructeur du moteur de messagerie."

# 317d8cc9e5db48bb90a2c8a782b6ac3e
#: ../../topics/email.txt:398
msgid ""
"Django ships with several email sending backends. With the exception of the "
"SMTP backend (which is the default), these backends are only useful during "
"testing and development. If you have special email sending requirements, you"
" can :ref:`write your own email backend <topic-custom-email-backend>`."
msgstr "Django est livré avec plusieurs moteurs de messagerie. À l'exception du moteur SMTP (moteur par défaut), ces moteurs ne sont utiles que pour les tests et le développement. Si vous avez des contraintes particulières dans l'envoi de messages, vous pouvez :ref:`écrire votre propre moteur de messagerie <topic-custom-email-backend>`."

# 5eb80e592a744328aef8012f6cc1bfa7
#: ../../topics/email.txt:406
msgid "SMTP backend"
msgstr "Le moteur SMTP"

# da2a4167db84448685dd7cb99695810e
#: ../../topics/email.txt:408
msgid ""
"This is the default backend. Email will be sent through a SMTP server. The "
"server address and authentication credentials are set in the "
":setting:`EMAIL_HOST`, :setting:`EMAIL_PORT`, :setting:`EMAIL_HOST_USER`, "
":setting:`EMAIL_HOST_PASSWORD` and :setting:`EMAIL_USE_TLS` settings in your"
" settings file."
msgstr "C'est le moteur par défaut. Les courriels seront envoyés par un serveur SMTP. L'adresse et les informations d'authentification du serveur sont définis par les réglages :setting:`EMAIL_HOST`, :setting:`EMAIL_PORT`, :setting:`EMAIL_HOST_USER`, :setting:`EMAIL_HOST_PASSWORD` et :setting:`EMAIL_USE_TLS` de votre fichier de réglages."

# c99a9b0760b144c8951612201ae255e0
#: ../../topics/email.txt:414
msgid ""
"The SMTP backend is the default configuration inherited by Django. If you "
"want to specify it explicitly, put the following in your settings::"
msgstr "Le moteur SMTP est la configuration par défaut héritée par Django. Si vous voulez la définir explicitement, mettez ce qui suit dans vos réglages ::"

# 3b256af948e44e838074e9b5e3b2ed06
#: ../../topics/email.txt:422
msgid "Console backend"
msgstr "Le moteur console"

# 5b341d3e77f9453397b90d31428bd9f9
#: ../../topics/email.txt:424
msgid ""
"Instead of sending out real emails the console backend just writes the "
"emails that would be sent to the standard output. By default, the console "
"backend writes to ``stdout``. You can use a different stream-like object by "
"providing the ``stream`` keyword argument when constructing the connection."
msgstr "Au lieu d'envoyer vraiment des courriels, le moteur console ne fait qu'afficher sur la sortie standard les courriels qui auraient dû être envoyés. Par défaut, le moteur console écrit dans ``stdout``. Vous pouvez utiliser un autre objet de type flux en indiquant le paramètre ``stream`` au moment de construire la connexion."

# 4a505115e03b4a4a86aecb62f040047d
# 8c74b488bf194ca28e1a64b76ebf5523
# 0a768750d3f84643bc47fe1089c7c78a
#: ../../topics/email.txt:429 ../../topics/email.txt:447
#: ../../topics/email.txt:466
msgid "To specify this backend, put the following in your settings::"
msgstr "Pour utiliser ce moteur, mettez ce qui suit dans vos réglages ::"

# 917202204fbb4a71acf9dcba53d64789
# daab1921e4a040048dd10ab827e88bb4
# 145dd2f737d04f63b16967654a79636c
#: ../../topics/email.txt:433 ../../topics/email.txt:452
#: ../../topics/email.txt:483
msgid ""
"This backend is not intended for use in production -- it is provided as a "
"convenience that can be used during development."
msgstr "Ce moteur n'est pas conçu pour être utilisé en production, il n'est fourni que par commodité et destiné à être utilisé durant le développement."

# c9432d7cc3bd4232b504ad98a7c369c3
#: ../../topics/email.txt:439
msgid "File backend"
msgstr "Le moteur fichier"

# 656139d6e3904cf79e1483004e479b52
#: ../../topics/email.txt:441
msgid ""
"The file backend writes emails to a file. A new file is created for each new"
" session that is opened on this backend. The directory to which the files "
"are written is either taken from the :setting:`EMAIL_FILE_PATH` setting or "
"from the ``file_path`` keyword when creating a connection with "
":meth:`~django.core.mail.get_connection`."
msgstr "Le moteur fichier écrit les courriels dans un fichier. Un nouveau fichier est créé pour chaque nouvelle session ouverte avec ce moteur. Le répertoire dans lequel les fichiers sont écrits correspond soit au réglage :setting:`EMAIL_FILE_PATH`, soit au mot-clé ``file_path`` transmis lors de la création de la connexion avec :meth:`~django.core.mail.get_connection`."

# bbb0c68c05c342c991ea8ffa3ac49363
#: ../../topics/email.txt:458
msgid "In-memory backend"
msgstr "Le moteur mémoire"

# 2f87a6250bf1458f9199a1b0ffbed0fe
#: ../../topics/email.txt:460
msgid ""
"The ``'locmem'`` backend stores messages in a special attribute of the "
"``django.core.mail`` module. The ``outbox`` attribute is created when the "
"first message is sent. It's a list with an "
":class:`~django.core.mail.EmailMessage` instance for each message that would"
" be sent."
msgstr "Le moteur ``'locmem'`` stocke les messages dans un attribut spécial du module ``django.core.mail``. L'attribut ``outbox`` est créé au moment de l'envoi du premier message. C'est une liste contenant une instance de :class:`~django.core.mail.EmailMessage` pour chaque message qui aurait été envoyé."

# 960adc72c77442ed8de6324c25b5a8b7
#: ../../topics/email.txt:470
msgid ""
"This backend is not intended for use in production -- it is provided as a "
"convenience that can be used during development and testing."
msgstr "Ce moteur n'est pas conçu pour être utilisé en production, il n'est fourni que par commodité et destiné à être utilisé durant le développement et les tests."

# f47d7d83964f4933bc2bc2d6431942ce
#: ../../topics/email.txt:476
msgid "Dummy backend"
msgstr "Le moteur bidon"

# b9ea95ff327d4151bc4578793289bf6a
#: ../../topics/email.txt:478
msgid ""
"As the name suggests the dummy backend does nothing with your messages. To "
"specify this backend, put the following in your settings::"
msgstr "Comme son nom l'indique, le moteur bidon (« dummy ») ne fait rien des messages reçus. Pour définir ce moteur, mettez ce qui suit dans vos réglages ::"

# 144199db8a5c4662a1a062dd62d3258a
#: ../../topics/email.txt:489
msgid "Defining a custom email backend"
msgstr "Définition d'un moteur de messagerie personnalisé"

# 89ae12d7ecf944449a4772b6a9010da0
#: ../../topics/email.txt:491
msgid ""
"If you need to change how emails are sent you can write your own email "
"backend. The :setting:`EMAIL_BACKEND` setting in your settings file is then "
"the Python import path for your backend class."
msgstr "Si vous devez modifier la façon dont les courriels sont envoyés, vous pouvez écrire votre propre moteur de messagerie. Le réglage :setting:`EMAIL_BACKEND` de votre fichier de réglages contiendra alors le chemin d'importation Python vers votre classe de moteur."

# fb7dcdc6fa1b4c718fe0923ecda117fe
#: ../../topics/email.txt:495
msgid ""
"Custom email backends should subclass ``BaseEmailBackend`` that is located "
"in the ``django.core.mail.backends.base`` module. A custom email backend "
"must implement the ``send_messages(email_messages)`` method. This method "
"receives a list of :class:`~django.core.mail.EmailMessage` instances and "
"returns the number of successfully delivered messages. If your backend has "
"any concept of a persistent session or connection, you should also implement"
" the ``open()`` and ``close()`` methods. Refer to ``smtp.EmailBackend`` for "
"a reference implementation."
msgstr "Les moteurs de messagerie personnalisés doivent hériter de ``BaseEmailBackend`` qui se trouve dans le module ``django.core.mail.backends.base``. Un moteur de messagerie personnalisé doit implémenter la méthode ``send_messages(email_messages)``. Celle-ci reçoit une liste d'instances :class:`~django.core.mail.EmailMessage` et renvoie le nombre de message délivrés avec succès. Si votre moteur contient la notion de session ou connexion persistente, vous devriez aussi implémenter les méthodes ``open()`` et ``close()``. Référez-vous à ``smtp.EmailBackend`` pour une implémentation de référence."

# cd76ce05e47b47348437f6021cbf9bcb
#: ../../topics/email.txt:507
msgid "Sending multiple emails"
msgstr "Envoi de plusieurs courriels"

# 6e33e91a80f74399b17b8f5b09575078
#: ../../topics/email.txt:509
msgid ""
"Establishing and closing an SMTP connection (or any other network "
"connection, for that matter) is an expensive process. If you have a lot of "
"emails to send, it makes sense to reuse an SMTP connection, rather than "
"creating and destroying a connection every time you want to send an email."
msgstr "L'établissement et la fermeture d'une connexion SMTP (ou de toute autre connexion réseau, en fait) est un processus coûteux. Si vous avez beaucoup de courriels à envoyer, il est logique de recycler une connexion SMTP plutôt que de créer puis détruire une connexion lors de chaque envoi de message."

# 6ae0f8bd7c664cdda92a7c73d4ddeb61
#: ../../topics/email.txt:514
msgid "There are two ways you tell an email backend to reuse a connection."
msgstr "Il existe deux manières d'indiquer à un moteur de messagerie qu'il doit réutiliser une connexion."

# 08d1d0c6271448b382fc2a9ee7c7c038
#: ../../topics/email.txt:516
msgid ""
"Firstly, you can use the ``send_messages()`` method. ``send_messages()`` "
"takes a list of :class:`~django.core.mail.EmailMessage` instances (or "
"subclasses), and sends them all using a single connection."
msgstr "Premièrement, vous pouvez utiliser la méthode ``send_messages()``. Celle-ci accepte une liste d'instances :class:`~django.core.mail.EmailMessage` (ou de ses sous-classes) et les envoie tous en utilisant une même connexion."

# 365f49d90c8f4e83b93571f1de3f273e
#: ../../topics/email.txt:520
msgid ""
"For example, if you have a function called ``get_notification_email()`` that"
" returns a list of :class:`~django.core.mail.EmailMessage` objects "
"representing some periodic email you wish to send out, you could send these "
"emails using a single call to send_messages::"
msgstr "Par exemple, si vous aviez une fonction appelée ``get_notification_email()`` qui renvoie une liste d'objets :class:`~django.core.mail.EmailMessage` représentant des courriels que vous souhaitez envoyer périodiquement, vous pourriez envoyer ces courriels en utilisant un seul appel à ``send_messages``::"

# 290152bfc6354a63882c08f19fd24f25
#: ../../topics/email.txt:530
msgid ""
"In this example, the call to ``send_messages()`` opens a connection on the "
"backend, sends the list of messages, and then closes the connection again."
msgstr "Dans cet exemple, l'appel à ``send_messages()`` ouvre une connexion au moteur, envoie la liste des messages et ferme à nouveau la connexion."

# a2c92757bd1348d29efaf5b6b5727736
#: ../../topics/email.txt:533
msgid ""
"The second approach is to use the ``open()`` and ``close()`` methods on the "
"email backend to manually control the connection. ``send_messages()`` will "
"not manually open or close the connection if it is already open, so if you "
"manually open the connection, you can control when it is closed. For "
"example::"
msgstr "La seconde approche est d'utiliser les méthodes ``open()`` et ``close()`` du moteur de messagerie pour contrôler manuellement la connexion. ``send_messages()`` n'ouvre ou ne ferme pas manuellement de connexion si il y en a déjà une ouverte, ce qui fait qu'en ouvrant manuellement la connexion, vous contrôlez aussi quand elle sera fermée. Par exemple ::"

# 8b3fc968da944bc18e5bea22b8396cdd
#: ../../topics/email.txt:563
msgid "Testing email sending"
msgstr "Tests de l'envoi de courriels"

# e5f4758f2bb64433a19b3760f5c75f8f
#: ../../topics/email.txt:565
msgid ""
"There are times when you do not want Django to send emails at all. For "
"example, while developing a Web site, you probably don't want to send out "
"thousands of emails -- but you may want to validate that emails will be sent"
" to the right people under the right conditions, and that those emails will "
"contain the correct content."
msgstr "À certains moments, vous ne voulez absolument pas que que Django envoie des courriels. Par exemple, pendant le développement d'un site Web, vous ne voulez certainement pas envoyer des milliers de courriels, mais vous voulez peut-être valider que ces courriels seraient envoyés aux bonnes personnes et aux bonnes conditions, et que leur contenu est correct."

# 1f5a711d269c4878909421d4a42e73e8
#: ../../topics/email.txt:571
msgid ""
"The easiest way to test your project's use of email is to use the "
"``console`` email backend. This backend redirects all email to stdout, "
"allowing you to inspect the content of mail."
msgstr "La manière la plus simple de tester l'emploi des courriels par votre projet est d'utiliser le moteur de messagerie ``console``. Ce moteur redirige tous les courriels vers la sortie standard ``stdout``, ce qui vous permet d'inspecter leur contenu."

# dc43f1f21b0d41babebadb7dfd3086ce
#: ../../topics/email.txt:575
msgid ""
"The ``file`` email backend can also be useful during development -- this "
"backend dumps the contents of every SMTP connection to a file that can be "
"inspected at your leisure."
msgstr "Le moteur de messagerie fichier peut aussi être utile durant le développement ; ce moteur redirige le contenu de chaque connexion SMTP dans un fichier qui peut ensuite être examiné à souhait."

# ff4006b74c5b4cf5ac0b3c1752b5e35e
#: ../../topics/email.txt:579
msgid ""
"Another approach is to use a \"dumb\" SMTP server that receives the emails "
"locally and displays them to the terminal, but does not actually send "
"anything. Python has a built-in way to accomplish this with a single "
"command::"
msgstr "Une autre approche est d'utiliser un serveur SMTP « stupide » qui reçoit localement les courriels et les affiche dans le terminal, mais n'envoie rien plus loin. Python possède une manière intégrée de faire cela par une commande unique ::"

# c1d934e5a3f84739bdaf8fd256b868a1
#: ../../topics/email.txt:585
msgid ""
"This command will start a simple SMTP server listening on port 1025 of "
"localhost. This server simply prints to standard output all email headers "
"and the email body. You then only need to set the :setting:`EMAIL_HOST` and "
":setting:`EMAIL_PORT` accordingly, and you are set."
msgstr "Cette commande lance un serveur SMTP simple écoutant sur le port 1025 de localhost. Ce serveur ne fait qu'afficher dans la sortie standard tous les en-têtes des courriels ainsi que leur corps. Il ne vous reste plus qu'à définir les réglages :setting:`EMAIL_HOST` et :setting:`EMAIL_PORT` et la solution est prête."

# b244d2fc9abf49a391ff774388c3fdc3
#: ../../topics/email.txt:590
msgid ""
"For a more detailed discussion of testing and processing of emails locally, "
"see the Python documentation for the :mod:`smtpd` module."
msgstr "Pour une discussion plus détaillée du test et du traitement local de courriels, consultez la documentation de Python pour le module :mod:`smtpd`."

# a120daa364684a05aea53817b89f50c7
#: ../../topics/files.txt:3
msgid "Managing files"
msgstr "Gestion des fichiers"

# b15a8f2342e24ee1bdaaebc07862be6e
#: ../../topics/files.txt:5
msgid ""
"This document describes Django's file access APIs for files such as those "
"uploaded by a user. The lower level APIs are general enough that you could "
"use them for other purposes. If you want to handle \"static files\" (JS, "
"CSS, etc), see :doc:`/howto/static-files/index`."
msgstr "Ce document décrit l'API Django d'accès aux fichiers adaptée par exemple aux fichiers envoyés par les utilisateurs. Les API de plus bas niveau sont assez générales pour pouvoir être utilisées dans d'autres buts. Si vous souhaitez gérer les « fichiers statiques » (JS, CSS, etc.), consultez :doc:`/howto/static-files/index`."

# 3484be0fd33e4fe88b51f8d9fefd4afc
#: ../../topics/files.txt:10
msgid ""
"By default, Django stores files locally, using the :setting:`MEDIA_ROOT` and"
" :setting:`MEDIA_URL` settings. The examples below assume that you're using "
"these defaults."
msgstr "Par défaut, Django stocke les fichiers localement, en fonction des réglages :setting:`MEDIA_ROOT` et :setting:`MEDIA_URL`. Les exemples ci-dessous partent du principe que vous utilisez ces valeurs par défaut."

# 4aeca3f1524e4006bb500fbfa9a7cd96
#: ../../topics/files.txt:14
msgid ""
"However, Django provides ways to write custom `file storage systems`_ that "
"allow you to completely customize where and how Django stores files. The "
"second half of this document describes how these storage systems work."
msgstr "Cependant, Django permet d'écrire des `systèmes de stockage de fichiers`_ spécialisés permettant de personnaliser complètement l'endroit et la façon dont Django stocke les fichiers. La deuxième partie de ce document décrit le fonctionnement des ces systèmes de stockage."

# 1669b7279c6c48b1adc51b5af20f584d
#: ../../topics/files.txt:21
msgid "Using files in models"
msgstr "Utilisation des fichiers dans les modèles"

# 46a9037b2d0547e7ab154aa3ec85f9df
#: ../../topics/files.txt:23
msgid ""
"When you use a :class:`~django.db.models.FileField` or "
":class:`~django.db.models.ImageField`, Django provides a set of APIs you can"
" use to deal with that file."
msgstr "Quand vous utilisez un :class:`~django.db.models.FileField` ou un :class:`~django.db.models.ImageField`, Django fournit un ensemble d'API pour pouvoir manipuler le fichier correspondant."

# f418d3b863394b3381aa0d84edee3946
#: ../../topics/files.txt:27
msgid ""
"Consider the following model, using an :class:`~django.db.models.ImageField`"
" to store a photo::"
msgstr "Considérez le modèle suivant qui utilise un :class:`~django.db.models.ImageField` pour stocker une photo ::"

# efe3415d120f498894b54b7f5e6334b9
#: ../../topics/files.txt:37
msgid ""
"Any ``Car`` instance will have a ``photo`` attribute that you can use to get"
" at the details of the attached photo::"
msgstr "Toute instance de ``Car`` possède un attribut ``photo`` qu'il est possible d'utiliser pour obtenir les détails de la photo jointe ::"

# 7430b4a1c11c4382b81e2f6b05abb91e
#: ../../topics/files.txt:50
msgid ""
"This object -- ``car.photo`` in the example -- is a ``File`` object, which "
"means it has all the methods and attributes described below."
msgstr "Cet objet (``car.photo`` dans l'exemple) est un objet ``File``, ce qui signifie qu'il possède toutes les méthodes et les attributs documentés ci-dessous."

# ac6dce82520244adbef25c3bb817adc8
#: ../../topics/files.txt:54
msgid ""
"The file is saved as part of saving the model in the database, so the actual"
" file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr "Le fichier est enregistré durant la phase d'enregistrement du modèle dans la base de données, il n'est donc pas possible de se baser sur le nom de fichier réel sur le disque tant que le modèle lui-même n'a pas été enregistré."

# de7c46770802449a9a7b11d5ae5ce648
#: ../../topics/files.txt:60
msgid "The ``File`` object"
msgstr "L'objet "

# b697994f85f744438752b80ff8062650
#: ../../topics/files.txt:62
msgid ""
"Internally, Django uses a :class:`django.core.files.File` instance any time "
"it needs to represent a file. This object is a thin wrapper around Python's "
"`built-in file object`_ with some Django-specific additions."
msgstr "En interne, Django utilise une instance de :class:`django.core.files.File` chaque fois qu'il a besoin de représenter un fichier. Cet objet est un adaptateur léger autour de l'`objet file`_ de Python doté de quelques ajouts spécifiques à Django."

# c92a7b5ee7a44ca3a7b29c299fc0d397
#: ../../topics/files.txt:68
msgid ""
"Most of the time you'll simply use a ``File`` that Django's given you (i.e. "
"a file attached to a model as above, or perhaps an uploaded file)."
msgstr "La plupart du temps, vous utiliserez simplement l'objet ``File`` que Django vous transmet (par exemple un fichier joint à un modèle comme ci-dessus ou peut-être un fichier téléversé)."

# d96b5e8560114e7da67f8fecbba0649b
#: ../../topics/files.txt:71
msgid ""
"If you need to construct a ``File`` yourself, the easiest way is to create "
"one using a Python built-in ``file`` object::"
msgstr "Si vous avez besoin de construire vous-même un objet ``File``, la façon la plus simple est de le créer en utilisant un objet ``file`` de Python ::"

# 8f22a489d05b4acc9cd80f02c6c72a64
#: ../../topics/files.txt:80
msgid ""
"Now you can use any of the documented attributes and methods of the "
":class:`~django.core.files.File` class."
msgstr "Il est maintenant possible d'utiliser les attributs et les méthodes documentés de la classe :class:`~django.core.files.File`."

# e6a77eab6f554599985d75936c8db3ae
#: ../../topics/files.txt:83
msgid ""
"Be aware that files created in this way are not automatically closed. The "
"following approach may be used to close files automatically::"
msgstr "Il faut savoir que les fichiers créés de cette façon ne sont pas fermés automatiquement. L'approche suivante peut être employée pour fermer automatiquement les fichiers ::"

# 0320c4d6ad854978ace22ab4c874adb7
#: ../../topics/files.txt:98
msgid ""
"Closing files is especially important when accessing file fields in a loop "
"over a large number of objects. If files are not manually closed after "
"accessing them, the risk of running out of file descriptors may arise. This "
"may lead to the following error::"
msgstr "La fermeture des fichiers est particulièrement importante lors de l'accès en boucle à des champs fichier pour un grand nombre d'objets. Si les fichiers ne sont pas fermés manuellement après les avoir lus, il y a un risque d'épuisement des descripteurs de fichiers. Cela peut amener à l'erreur suivante :"

# 9e624a92b2904e9db09d39a4974386b0
#: ../../topics/files.txt:107
msgid "File storage"
msgstr "Stockage des fichiers"

# 0379d6e2fb4046a19f71b3fd2a317797
#: ../../topics/files.txt:109
msgid ""
"Behind the scenes, Django delegates decisions about how and where to store "
"files to a file storage system. This is the object that actually understands"
" things like file systems, opening and reading files, etc."
msgstr "En arrière-plan, Django délègue les décisions au sujet des emplacements des fichiers et de la manière de les stocker à un système de stockage de fichiers. C'est cet objet qui s'occupe réellement des systèmes de fichiers, de l'ouverture et de la lecture des fichiers, etc."

# f1f2c56bd92a4c28b75b6ccb4ddebac2
#: ../../topics/files.txt:113
msgid ""
"Django's default file storage is given by the "
":setting:`DEFAULT_FILE_STORAGE` setting; if you don't explicitly provide a "
"storage system, this is the one that will be used."
msgstr "Le stockage de fichiers par défaut de Django est défini par le réglage :setting:`DEFAULT_FILE_STORAGE` ; si vous ne fournissez pas explicitement de système de stockage, c'est celui-là qui sera utilisé."

# e71f41296d6c404bbb688a5da1a52c33
#: ../../topics/files.txt:117
msgid ""
"See below for details of the built-in default file storage system, and see "
":doc:`/howto/custom-file-storage` for information on writing your own file "
"storage system."
msgstr "Lisez ci-dessous pour obtenir des détails sur le système de stockage de fichiers intégré par défaut et lisez :doc:`/howto/custom-file-storage` pour plus d'informations sur l'écriture de son propre système de stockage de fichiers."

# ac6531b01911478eb0dd53b894204030
#: ../../topics/files.txt:122
msgid "Storage objects"
msgstr "Objets de stockage"

# 6eccf2c1e1c247f29ae9b1d37efe0b8c
#: ../../topics/files.txt:124
msgid ""
"Though most of the time you'll want to use a ``File`` object (which "
"delegates to the proper storage for that file), you can use file storage "
"systems directly. You can create an instance of some custom file storage "
"class, or -- often more useful -- you can use the global default storage "
"system::"
msgstr "Bien que la plupart du temps il soit plus opportun de manipuler un objet  ``File`` (qui délègue au stockage adapté pour ce fichier), il est possible d'utiliser directement un stockage de fichiers. Vous pouvez créer une instance d'une classe de stockage de fichiers personnalisé ou, plus souvent utile, vous pouvez utiliser le système de stockage global par défaut ::"

# dd46142cfa3043fcb0aca1316f4a5ad9
#: ../../topics/files.txt:145
msgid "See :doc:`/ref/files/storage` for the file storage API."
msgstr "Voir :doc:`/ref/files/storage` concernant l'API de stockage de fichiers."

# cbb3c09912af42729d12d50c9c766753
#: ../../topics/files.txt:150
msgid "The built-in filesystem storage class"
msgstr "La classe de Django pour le stockage sur système de fichiers"

# dcafc8d6431c4597ac27232610a390c8
#: ../../topics/files.txt:152
msgid ""
"Django ships with a built-in ``FileSystemStorage`` class (defined in "
"``django.core.files.storage``) which implements basic local filesystem file "
"storage. Its initializer takes two arguments:"
msgstr "Django fournit une classe intégrée ``FileSystemStorage`` (définie dans ``django.core.files.storage``) qui implémente les éléments de base du stockage de fichiers sur un système de fichiers. Sa méthode d'initialisation accepte deux paramètres :"

# 1e2262b5d78a417d84cfe5c0bba3e7f6
#: ../../topics/files.txt:157
msgid "Argument"
msgstr "Paramètre"

# cd2ae270d9934be3b275d4295949c993
#: ../../topics/files.txt:157
msgid "Description"
msgstr "Description"

# d03d2698a8f44226bade5129b096139b
#: ../../topics/files.txt:159
msgid "``location``"
msgstr "``location``"

# 00d51e22218e4d429078b6bc2ee9f233
#: ../../topics/files.txt:159
msgid ""
"Optional. Absolute path to the directory that will hold the files. If "
"omitted, it will be set to the value of your :setting:`MEDIA_ROOT` setting."
msgstr "Facultatif. Chemin absolu vers le répertoire qui contiendra les fichiers. S'il est absent, il prend la valeur du réglage :setting:`MEDIA_ROOT`."

# 6b763962555140ef8ce57d7ab4ff2b5a
#: ../../topics/files.txt:162
msgid "``base_url``"
msgstr "``base_url``"

# 3c045bcd2c184015af7c1d84979013ba
#: ../../topics/files.txt:162
msgid ""
"Optional. URL that serves the files stored at this location. If omitted, it "
"will default to the value of your :setting:`MEDIA_URL` setting."
msgstr "Facultatif. URL de base pour servir les fichiers stockés à cet emplacement. S'il est absent, il prend la valeur du réglage :setting:`MEDIA_URL`."

# 63bd6843b4e4497eb81d05757b640783
#: ../../topics/files.txt:167
msgid ""
"For example, the following code will store uploaded files under "
"``/media/photos`` regardless of what your :setting:`MEDIA_ROOT` setting is::"
msgstr "Par exemple, le code suivant stocke les fichiers téléversés dans ``/media/photos`` quelle que soit la valeur du réglage :setting:`MEDIA_ROOT`::"

# 56e6937d0a284cc99d34677b5e332f17
#: ../../topics/files.txt:179
msgid ""
":doc:`Custom storage systems </howto/custom-file-storage>` work the same "
"way: you can pass them in as the ``storage`` argument to a "
":class:`~django.db.models.FileField`."
msgstr "Les :doc:`systèmes de stockage personnalisés </howto/custom-file-storage>` fonctionnent de la même manière : vous pouvez les transmettre comme paramètre ``storage`` d'un champ :class:`~django.db.models.FileField`."

# 64e1f33f1ce14400b7a433204800b1e9
#: ../../topics/forms/formsets.txt:4
msgid "Formsets"
msgstr "Formulaires groupés"

# f44327e32d8e41e9ad3d5c3695b4fe18
#: ../../topics/forms/formsets.txt:8
msgid ""
"A formset is a layer of abstraction to work with multiple forms on the same "
"page. It can be best compared to a data grid. Let's say you have the "
"following form::"
msgstr "Les formulaires groupés sont une couche d'abstraction pour travailler avec plusieurs formulaires sur une même page. On peut comparer cela à un tableau de données. Admettons que l'on dispose du formulaire suivant ::"

# acb09a193ba8498f97cae8edc45d6de0
#: ../../topics/forms/formsets.txt:17
msgid ""
"You might want to allow the user to create several articles at once. To "
"create a formset out of an ``ArticleForm`` you would do::"
msgstr "Il peut être souhaitable de permettre à l'utilisateur de créer plusieurs articles à la fois. Pour créer des formulaires groupés à partir d'un formulaire ``ArticleForm``, voici comment procéder ::"

# 6e1eb390ccae4faabab7183dddfab051
#: ../../topics/forms/formsets.txt:23
msgid ""
"You now have created a formset named ``ArticleFormSet``. The formset gives "
"you the ability to iterate over the forms in the formset and display them as"
" you would with a regular form::"
msgstr "Vous avez maintenant créé un objet de formulaires groupés nommé ``ArticleFormSet``. Cet objet vous donne la possibilité d'effectuer une itération sur les formulaires du groupe et de les afficher tout comme vous le feriez pour un formulaire habituel ::"

# 816fcfca18f94d52b47facc478da3637
#: ../../topics/forms/formsets.txt:33
msgid ""
"As you can see it only displayed one empty form. The number of empty forms "
"that is displayed is controlled by the ``extra`` parameter. By default, "
":func:`~django.forms.formsets.formset_factory` defines one extra form; the "
"following example will display two blank forms::"
msgstr "Comme vous le voyez, un seul formulaire vierge a été affiché. Le nombre de formulaires vierges affichés dépend du paramètre ``extra``. Par défaut, :func:`~django.forms.formsets.formset_factory` définit un seul formulaire supplémentaire ; l'exemple suivant affichera deux formulaires vierges ::"

# 9dd6f43118d3498686c03d4fd195fca4
#: ../../topics/forms/formsets.txt:40
msgid ""
"Iterating over the ``formset`` will render the forms in the order they were "
"created. You can change this order by providing an alternate implementation "
"for the ``__iter__()`` method."
msgstr "En itérant sur l'objet ``formset``, les formulaires sont affichés dans l'ordre où ils ont été créés. Vous pouvez modifier cet ordre en écrivant une implémentation différente de la méthode ``__iter__()``."

# 795cce8c365d496481d80f3ac5f917da
#: ../../topics/forms/formsets.txt:44
msgid ""
"Formsets can also be indexed into, which returns the corresponding form. If "
"you override ``__iter__``, you will need to also override ``__getitem__`` to"
" have matching behavior."
msgstr "Il est aussi possible d'accéder aux formulaires groupés par un numéro d'index, ce qui renvoie le formulaire correspondant. Si vous surchargez ``__iter__``, il est aussi nécessaire de surcharger ``__getitem__`` afin de garantir un comportement cohérent."

# 221d43a89dbc4322968d16f158523a4b
#: ../../topics/forms/formsets.txt:51
msgid "Using initial data with a formset"
msgstr "Données initiales pour les formulaires groupés"

# 3135147627a74e81847d4c7c326f60a5
#: ../../topics/forms/formsets.txt:53
msgid ""
"Initial data is what drives the main usability of a formset. As shown above "
"you can define the number of extra forms. What this means is that you are "
"telling the formset how many additional forms to show in addition to the "
"number of forms it generates from the initial data. Lets take a look at an "
"example::"
msgstr "Les données initiales sont le moteur essentiel de l'intérêt des formulaires groupés. Comme on peut le voir ci-dessus, vous pouvez définir le nombre de formulaires supplémentaires. Cela signifie que vous pouvez indiquer aux formulaires groupés combien de formulaires supplémentaires doivent être affichés en plus des formulaires générés à partir des données initiales. Examinons un exemple plus en détails ::"

# a035d06bb25e4f158b7d0574406af652
#: ../../topics/forms/formsets.txt:77
msgid ""
"There are now a total of three forms showing above. One for the initial data"
" that was passed in and two extra forms. Also note that we are passing in a "
"list of dictionaries as the initial data."
msgstr "Nous avons maintenant trois formulaires qui s'affichent. Un pour les données initiales que nous lui avons transmises et deux formulaires supplémentaires. Notez également que nous transmettons une liste de dictionnaires comme données initiales."

# 42a9981ef8d44bcea05a49594ad7cbfd
#: ../../topics/forms/formsets.txt:83
msgid ""
":ref:`Creating formsets from models with model formsets <model-formsets>`."
msgstr ":ref:`Création de formulaires groupés à partir de modèles avec les formulaires groupés de modèle <model-formsets>`."

# c8d6153695ad414f82a6e5ba972017c3
#: ../../topics/forms/formsets.txt:88
msgid "Limiting the maximum number of forms"
msgstr "Restriction du nombre maximum de formulaires"

# e23c6c699c7240c6a5b1266a99af9473
#: ../../topics/forms/formsets.txt:90
msgid ""
"The ``max_num`` parameter to :func:`~django.forms.formsets.formset_factory` "
"gives you the ability to limit the maximum number of empty forms the formset"
" will display::"
msgstr "Le paramètre ``max_num`` de :func:`~django.forms.formsets.formset_factory` donne la possibilité de restreindre le nombre maximum de formulaires vides que les formulaires groupés vont afficher ::"

# 91fbcd5020eb464ba2f4ee66d9e83a25
#: ../../topics/forms/formsets.txt:103
msgid ""
"If the value of ``max_num`` is greater than the number of existing objects, "
"up to ``extra`` additional blank forms will be added to the formset, so long"
" as the total number of forms does not exceed ``max_num``."
msgstr "Si la valeur de ``max_num`` est plus grande que le nombre d'objets existants, un maximum de  ``extra`` formulaires vierges supplémentaires seront ajoutés aux formulaires groupés, aussi longtemps que le nombre total de formulaires n'excède pas ``max_num``."

# 7e2d31917eab40acbd15319e6af54046
# 5acafbf70a574ea9a1242c54234e9637
#: ../../topics/forms/formsets.txt:107 ../../topics/forms/modelforms.txt:871
msgid ""
"A ``max_num`` value of ``None`` (the default) puts a high limit on the "
"number of forms displayed (1000). In practice this is equivalent to no "
"limit."
msgstr "Une valeur ``max_num`` ``None`` (par défaut) place une limite élevée du nombre de formulaires affichés (1000). En pratique, cela équivaut à aucune limite."

# 8a924a5a8ccb44748e0aad4409fcca86
#: ../../topics/forms/formsets.txt:110
msgid ""
"If the number of forms in the initial data exceeds ``max_num``, all initial "
"data forms will be displayed regardless.  (No extra forms will be "
"displayed.)"
msgstr "Si le nombre de formulaires dans les données initiales dépasse ``max_num``, tous les formulaires correspondant aux données initiales seront tout de même affichés (mais sans formulaire supplémentaire)."

# f693ff8464cc44b8b72f3e12f540312a
#: ../../topics/forms/formsets.txt:113
msgid ""
"By default, ``max_num`` only affects how many forms are displayed and does "
"not affect validation.  If ``validate_max=True`` is passed to the "
":func:`~django.forms.formsets.formset_factory`, then ``max_num`` will affect"
" validation.  See :ref:`validate_max`."
msgstr "Par défaut, ``max_num`` ne s'applique qu'au nombre de formulaires affichés et non pas à la validation. Si ``validate_max=True`` est transmis à :func:`~django.forms.formsets.formset_factory`, ``max_num`` s'applique alors à la validation. Voir :ref:`validate_max`."

# 046430f8fb5d470f9f3beac518bc3920
#: ../../topics/forms/formsets.txt:120
msgid ""
"The ``validate_max`` parameter was added to "
":func:`~django.forms.formsets.formset_factory`.  Also, the behavior of "
"``FormSet`` was brought in line with that of ``ModelFormSet`` so that it "
"displays initial data regardless of ``max_num``."
msgstr "Le paramètre ``validate_max`` a été ajouté à :func:`~django.forms.formsets.formset_factory`. De même, le comportement de ``FormSet`` a été aligné sur celui de ``ModelFormSet`` afin que les données initiales s'affichent toujours quelle que soit la valeur de ``max_num``."

# e938febf7539406c99bc05542345e8f4
#: ../../topics/forms/formsets.txt:126
msgid "Formset validation"
msgstr "Validation des formulaires groupés"

# e4802ed9cbef4b959dad2669d6550c68
#: ../../topics/forms/formsets.txt:128
msgid ""
"Validation with a formset is almost identical to a regular ``Form``. There "
"is an ``is_valid`` method on the formset to provide a convenient way to "
"validate all forms in the formset::"
msgstr "La validation des formulaires groupés est presque identique à celle d'un formulaire ``Form`` normal. L'objet de formulaires groupés contient une méthode ``is_valid`` afin de fournir une manière agile de valider tous les formulaires du groupe ::"

# 7e21a12a24504d268e7d1cefa706a3fc
#: ../../topics/forms/formsets.txt:144
msgid ""
"We passed in no data to the formset which is resulting in a valid form. The "
"formset is smart enough to ignore extra forms that were not changed. If we "
"provide an invalid article::"
msgstr "Nous n'avons fourni aucune donnée aux formulaires groupés ce qui aboutit à un formulaire valide. Les formulaires groupés sont assez intelligents pour ne pas prendre en compte des formulaires supplémentaires qui n'ont pas été modifiés. Si nous passons un article non valable ::"

# 5d7dca931926442fb1b373e9b699bb0d
#: ../../topics/forms/formsets.txt:163
msgid ""
"As we can see, ``formset.errors`` is a list whose entries correspond to the "
"forms in the formset. Validation was performed for each of the two forms, "
"and the expected error message appears for the second item."
msgstr "Comme on peut le voir, ``formset.errors`` est une liste composée d'éléments correspondants à chaque formulaire du groupe. La validation s'est faite pour chacun des deux formulaires, et le message d'erreur attendu apparaît pour le second."

# 1e7caa9cf0de44e98c85ba860ffea83c
#: ../../topics/forms/formsets.txt:173
msgid ""
"To check how many errors there are in the formset, we can use the "
"``total_error_count`` method::"
msgstr "Pour contrôler le nombre d'erreurs dans les formulaires groupés, nous pouvons utiliser la méthode ``total_error_count``::"

# f3965bc1c0234d5695ca3e86eaeb0878
#: ../../topics/forms/formsets.txt:184
msgid ""
"We can also check if form data differs from the initial data (i.e. the form "
"was sent without any data)::"
msgstr "Nous pouvons aussi vérifier si les données des formulaires diffèrent des données initiales (c'est-à-dire si le formulaire a été envoyé sans aucune donnée) ::"

# 93b2332b0ba64264a31079b7937ed9ff
#: ../../topics/forms/formsets.txt:201
msgid "Understanding the ManagementForm"
msgstr "Rôle du formulaire de gestion (``ManagementForm``)"

# f42e70b3a2394b9a948073b5d8297f2b
#: ../../topics/forms/formsets.txt:203
msgid ""
"You may have noticed the additional data (``form-TOTAL_FORMS``, ``form-"
"INITIAL_FORMS`` and ``form-MAX_NUM_FORMS``) that was required in the "
"formset's data above. This data is required for the ``ManagementForm``. This"
" form is used by the formset to manage the collection of forms contained in "
"the formset. If you don't provide this management data, an exception will be"
" raised::"
msgstr "Vous avez peut-être remarqué les données supplémentaires (``form-TOTAL_FORMS``, ``form-INITIAL_FORMS`` et ``form-MAX_NUM_FORMS``) qui étaient requises dans les données de formulaires groupés ci-dessus. Ces données sont exigées par le formulaire de gestion. Celui-ci est utilisé par les formulaires groupés pour gérer l'ensemble des formulaires contenus dans le groupe. Si vous ne fournissez pas ces données de gestion, une exception sera générée ::"

# 62708d33b3a1411c90eb6891b9de6385
#: ../../topics/forms/formsets.txt:219
msgid ""
"It is used to keep track of how many form instances are being displayed. If "
"you are adding new forms via JavaScript, you should increment the count "
"fields in this form as well. On the other hand, if you are using JavaScript "
"to allow deletion of existing objects, then you need to ensure the ones "
"being removed are properly marked for deletion by including "
"``form-#-DELETE`` in the ``POST`` data. It is expected that all forms are "
"present in the ``POST`` data regardless."
msgstr "Ces données servent à conserver la trace du nombre d'instances de formulaires qui sont affichées. Si vous ajoutez de nouveaux formulaires par JavaScript, il est aussi nécessaire d'incrémenter les champs de comptage de ce formulaire. D'un autre côté, si vous utilisez JavaScript pour permettre la suppression d'objets existants, vous devez alors vous assurer que ceux qui sont supprimés soient correctement marqués comme « à supprimer » en incluant le paramètre ``form-#-DELETE`` dans les données d'envoi ``POST``. Il est prévu que tous les formulaires soient présents dans les données ``POST`` quoi qu'il arrive."

# 54dd86b8a9564190be2ff4b6b170abef
#: ../../topics/forms/formsets.txt:226
msgid ""
"The management form is available as an attribute of the formset itself. When"
" rendering a formset in a template, you can include all the management data "
"by rendering ``{{ my_formset.management_form }}`` (substituting the name of "
"your formset as appropriate)."
msgstr "Le formulaire de gestion est disponible sous forme d'attribut de l'objet de formulaires groupés. Lorsque vous affichez des formulaires groupés dans un gabarit, vous pouvez inclure toutes les données de gestion en affichant ``{{ my_formset.management_form }}`` (en remplaçant le nom de vos formulaires groupés en conséquence)."

# 7f22010e14384ef59ea344cfbd9b20ed
#: ../../topics/forms/formsets.txt:232
msgid "``total_form_count`` and ``initial_form_count``"
msgstr "``total_form_count`` et ``initial_form_count``"

# c06b1fd44be5407e8ecd73cdc351dab7
#: ../../topics/forms/formsets.txt:234
msgid ""
"``BaseFormSet`` has a couple of methods that are closely related to the "
"``ManagementForm``, ``total_form_count`` and ``initial_form_count``."
msgstr "``BaseFormSet`` possède quelques méthodes étroitement liées aux données ``total_form_count`` et ``initial_form_count`` du formulaire de gestion ``ManagementForm``."

# 378f257f3a5c4aeaa5d6a337c00d16f0
#: ../../topics/forms/formsets.txt:237
msgid ""
"``total_form_count`` returns the total number of forms in this formset. "
"``initial_form_count`` returns the number of forms in the formset that were "
"pre-filled, and is also used to determine how many forms are required. You "
"will probably never need to override either of these methods, so please be "
"sure you understand what they do before doing so."
msgstr "``total_form_count`` renvoie le nombre total de formulaires du groupe de formulaires. ``initial_form_count`` renvoie le nombre de formulaires du groupe qui ont été pré-remplis et est également utilisé pour déterminer le nombre de formulaires requis. Vous n'aurez probablement jamais à surcharger l'une de ces méthodes, mais prenez garde à bien comprendre ce qu'elles font si vous deviez le faire."

# f46b3d024040428ea00cf1f83b2d8f6f
#: ../../topics/forms/formsets.txt:244
msgid "``empty_form``"
msgstr "``empty_form``"

# 1a7d4bbd3b74452ea9e73b4aa5cc3d1c
#: ../../topics/forms/formsets.txt:246
msgid ""
"``BaseFormSet`` provides an additional attribute ``empty_form`` which "
"returns a form instance with a prefix of ``__prefix__`` for easier use in "
"dynamic forms with JavaScript."
msgstr "``BaseFormSet`` fournit un attribut supplémentaire ``empty_form`` qui renvoie une instance de formulaire avec le préfixe ``__prefix__`` pour faciliter l'utilisation de formulaires dynamiques avec JavaScript."

# a3dee5fec685440caa1cc893bcb4df27
#: ../../topics/forms/formsets.txt:251
msgid "Custom formset validation"
msgstr "Validation personnalisée des formulaires groupés"

# a361ecd99ea2405c82a489c8c29abc18
#: ../../topics/forms/formsets.txt:253
msgid ""
"A formset has a ``clean`` method similar to the one on a ``Form`` class. "
"This is where you define your own validation that works at the formset "
"level::"
msgstr "Les formulaires groupés ont une méthode ``clean`` similaire à celle d'une classe ``Form``. C'est là que vous pouvez définir votre propre validation agissant au niveau des formulaires groupés ::"

# 341df0d51fdb47899a25efbeb7f7c0d7
#: ../../topics/forms/formsets.txt:291
msgid ""
"The formset ``clean`` method is called after all the ``Form.clean`` methods "
"have been called. The errors will be found using the ``non_form_errors()`` "
"method on the formset."
msgstr "La méthode ``clean`` des formulaires groupés est appelée après les méthodes ``Form.clean`` des formulaires individuels. Les erreurs produites à ce niveau sont accessibles par la méthode ``non_form_errors()`` sur l'objet des formulaires groupés."

# 8edb16c9855c4de2b6f126a6d878f86a
#: ../../topics/forms/formsets.txt:298
msgid "Validating the number of forms in a formset"
msgstr "Validation du nombre de formulaires dans les formulaires groupés"

# cbe5670209b347988c351f38267fa0ca
#: ../../topics/forms/formsets.txt:300
msgid ""
"If ``validate_max=True`` is passed to "
":func:`~django.forms.formsets.formset_factory`, validation will also check "
"that the number of forms in the data set, minus those marked for deletion, "
"is less than or equal to ``max_num``."
msgstr "Si ``validate_max=True`` est transmis à :func:`~django.forms.formsets.formset_factory`, la validation vérifiera également que le nombre de formulaires dans les données reçues moins ceux marqués pour la suppression ne dépasse pas ``max_num``."

# d8dbafae59ad450b89194faa07ee43bb
#: ../../topics/forms/formsets.txt:325
msgid ""
"``validate_max=True`` validates against ``max_num`` strictly even if "
"``max_num`` was exceeded because the amount of initial data supplied was "
"excessive."
msgstr "``validate_max=True`` valide strictement la valeur de ``max_num``, même si cette valeur a été dépassée en raison d'un nombre de données initiales trop important."

# 581b9fd9e0d0494594124700e12c87ae
#: ../../topics/forms/formsets.txt:329
msgid ""
"Applications which need more customizable validation of the number of forms "
"should use custom formset validation."
msgstr "Les applications ayant besoin d'une validation plus adaptée du nombre de formulaires peuvent utiliser la validation personnalisée de formulaires groupés."

# 10a85907c5d3425089864efde7703c15
#: ../../topics/forms/formsets.txt:334
msgid ""
"Regardless of ``validate_max``, if the number of forms in a data set exceeds"
" ``max_num`` by more than 1000, then the form will fail to validate as if "
"``validate_max`` were set, and additionally only the first 1000 forms above "
"``max_num`` will be validated.  The remainder will be truncated entirely.  "
"This is to protect against memory exhaustion attacks using forged POST "
"requests."
msgstr "Quelle que soit la valeur de ``validate_max``, si le nombre de formulaires dans un jeu de données dépasse ``max_num`` de plus de 1000, la validation du formulaire échoue comme si ``validate_max`` avait été défini ; de plus, seuls les 1000 premiers formulaires dépassant ``max_num`` seront validés. Tout le reste est purement ignoré. Il s'agit d'une mesure de protection contre les attaques de remplissage de mémoire employant des requêtes ``POST`` contrefaites."

# be0db59e1b634660937279a3670bf737
#: ../../topics/forms/formsets.txt:343
msgid ""
"The ``validate_max`` parameter was added to "
":func:`~django.forms.formsets.formset_factory`."
msgstr "Le paramètre ``validate_max`` a été ajouté à :func:`~django.forms.formsets.formset_factory`."

# 23a4b5133d224dc6986de8de0d13ec2d
#: ../../topics/forms/formsets.txt:347
msgid "Dealing with ordering and deletion of forms"
msgstr "Tri et suppression de formulaires"

# 7ad4d5a2fb564eb6b216fbc464ea30c8
#: ../../topics/forms/formsets.txt:349
msgid ""
"The :func:`~django.forms.formsets.formset_factory` provides two optional "
"parameters ``can_order`` and ``can_delete`` to help with ordering of forms "
"in formsets and deletion of forms from a formset."
msgstr "La méthode :func:`~django.forms.formsets.formset_factory` fournit deux paramètres facultatifs ``can_order`` et ``can_delete`` pour faciliter le tri et la suppression de formulaires dans des formulaires groupés."

# b70b1ca8b79b44fd87a2a36c3c55b2b3
#: ../../topics/forms/formsets.txt:354
msgid "``can_order``"
msgstr "``can_order``"

# 770c57427f534c5b9a4d10ef8cf1d202
# 790ccf2088a24260a4790e1129ed0bb1
#: ../../topics/forms/formsets.txt:356 ../../topics/forms/formsets.txt:414
msgid "Default: ``False``"
msgstr "Valeur par défaut : ``False``"

# defb1da4c53e473c8eb23f0a05488e6b
#: ../../topics/forms/formsets.txt:358
msgid "Lets you create a formset with the ability to order::"
msgstr "Ce paramètre permet de créer des formulaires groupés qui peuvent être triés ::"

# 62def8bbdd8b4204b0452bf91373e5d1
#: ../../topics/forms/formsets.txt:379
msgid ""
"This adds an additional field to each form. This new field is named "
"``ORDER`` and is an ``forms.IntegerField``. For the forms that came from the"
" initial data it automatically assigned them a numeric value. Let's look at "
"what will happen when the user changes these values::"
msgstr "Ceci ajoute un champ supplémentaire à chaque formulaire. Ce nouveau champ s'appelle ``ORDER`` et est de type ``forms.IntegerField``. Pour les formulaires générés à partir des données initiales, ces champs reçoivent automatiquement une valeur numérique. Voyons ce qui se passe si l'utilisateur modifie ces valeurs ::"

# adabbcabd73844b4a8bef85328c5e5e4
#: ../../topics/forms/formsets.txt:412
msgid "``can_delete``"
msgstr "``can_delete``"

# 7a07b171a9f5406895fac8f8e8d61453
#: ../../topics/forms/formsets.txt:416
msgid ""
"Lets you create a formset with the ability to select forms for deletion::"
msgstr "Ce paramètre permet de créer des formulaires groupés où l'on peut choisir des formulaires à supprimer ::"

# 2a9fa6fecb824e8dacc01be027ea3f4f
#: ../../topics/forms/formsets.txt:438
msgid ""
"Similar to ``can_order`` this adds a new field to each form named ``DELETE``"
" and is a ``forms.BooleanField``. When data comes through marking any of the"
" delete fields you can access them with ``deleted_forms``::"
msgstr "Un peu comme pour ``can_order``, ce paramètre ajoute un nouveau champ ``DELETE`` de type ``forms.BooleanField`` à chaque formulaire. Lorsque les données reviennent et que certains de ces champs ont une valeur « vrai », il est possible d'accéder aux formulaires concernés avec ``deleted_forms``::"

# d31c0e5da7a14a359db0defe2838c291
#: ../../topics/forms/formsets.txt:464
msgid ""
"If you are using a "
":class:`ModelFormSet<django.forms.models.BaseModelFormSet>`, model instances"
" for deleted forms will be deleted when you call ``formset.save()``. On the "
"other hand, if you are using a plain ``FormSet``, it's up to you to handle "
"``formset.deleted_forms``, perhaps in your formset's ``save()`` method, as "
"there's no general notion of what it means to delete a form."
msgstr "Si vous utilisez un :class:`ModelFormSet<django.forms.models.BaseModelFormSet>`, les instances de modèle correspondant aux formulaires supprimés seront détruites au moment où ``formset.save()`` sera appelée. D'un autre côté, si vous utilisez un simple ``FormSet``, c'est à vous de gérer les formulaires marqués pour la suppression (``formset.deleted_forms``), peut-être dans la méthode ``save()`` de vos formulaires groupés, car il n'existe pas de notion générale sur la signification de la suppression d'un formulaire."

# fae380b9882d40ee84e0eafc806c73a3
#: ../../topics/forms/formsets.txt:472
msgid "Adding additional fields to a formset"
msgstr "Ajout de champs supplémentaires à des formulaires groupés"

# 5bb18ee574354ebe845bc7a8398cbce6
#: ../../topics/forms/formsets.txt:474
msgid ""
"If you need to add additional fields to the formset this can be easily "
"accomplished. The formset base class provides an ``add_fields`` method. You "
"can simply override this method to add your own fields or even redefine the "
"default fields/attributes of the order and deletion fields::"
msgstr "L'ajout de champs supplémentaires aux formulaires groupés est simple à effectuer. La classe de base des formulaires groupés offre une méthode ``add_fields``. Vous pouvez simplement surcharger cette méthode pour ajouter vos propres champs ou même pour redéfinir les champs/attributs par défaut des champs de tri et de suppression ::"

# dac248e4fdd34407a6d10cda9d1a3508
#: ../../topics/forms/formsets.txt:496
msgid "Using a formset in views and templates"
msgstr "Utilisation des formulaires groupés dans les vues et les gabarits"

# 94f8e4b3ed564592831957ed1e68c086
#: ../../topics/forms/formsets.txt:498
msgid ""
"Using a formset inside a view is as easy as using a regular ``Form`` class. "
"The only thing you will want to be aware of is making sure to use the "
"management form inside the template. Let's look at a sample view:"
msgstr "L'utilisation de formulaires groupés dans une vue est aussi simple que l'utilisation d'une classe ``Form`` habituelle. La seule chose à laquelle il faut être attentif est de ne pas oublier d'inclure le formulaire de gestion dans le gabarit. Examinons un exemple de vue :"

# 05e7f8b16c0d4d85ab00c49caf708d7e
#: ../../topics/forms/formsets.txt:519
msgid "The ``manage_articles.html`` template might look like this:"
msgstr "Le gabarit ``manage_articles.html`` pourrait ressembler à ceci :"

# 2be0ba92a71e4251b4867f20dc846ead
#: ../../topics/forms/formsets.txt:532
msgid ""
"However the above can be slightly shortcutted and let the formset itself "
"deal with the management form:"
msgstr "Toutefois, le code ci-dessus peut être légèrement raccourci en laissant les formulaires groupés se charger eux-mêmes du formulaire de gestion :"

# 3c15971916574466a1e60d98f0dd5899
#: ../../topics/forms/formsets.txt:543
msgid ""
"The above ends up calling the ``as_table`` method on the formset class."
msgstr "Le résultat du code ci-dessus est que la classe de formulaires groupés va appeler sa méthode ``as_table``."

# 9e7a7f06fcc74d49906afc1fc41f1a55
#: ../../topics/forms/formsets.txt:548
msgid "Manually rendered ``can_delete`` and ``can_order``"
msgstr "Affichage manuel de ``can_delete`` et ``can_order``"

# d9a24b1a421640f9a25254ad878aa2f9
#: ../../topics/forms/formsets.txt:550
msgid ""
"If you manually render fields in the template, you can render ``can_delete``"
" parameter with ``{{ form.DELETE }}``:"
msgstr "Si vous affichez manuellement les champs dans le gabarit, vous pouvez afficher le paramètre ``can_delete`` avec ``{{ form.DELETE }}``:"

# 938921ba58714f67a188cb14fc800727
#: ../../topics/forms/formsets.txt:569
msgid ""
"Similarly, if the formset has the ability to order (``can_order=True``), it "
"is possible to render it with ``{{ form.ORDER }}``."
msgstr "De la même façon, si les formulaires groupés peuvent être triés (``can_order=True``), il est possible d'afficher le champ de tri avec ``{{ form.ORDER }}``."

# 3bc98584bdb948c1a9e5609b5d4cf457
#: ../../topics/forms/formsets.txt:573
msgid "Using more than one formset in a view"
msgstr "Utilisation de plus d'un objet de formulaires groupés dans une vue"

# 356472abc07a4642b9a599feea81eee3
#: ../../topics/forms/formsets.txt:575
msgid ""
"You are able to use more than one formset in a view if you like. Formsets "
"borrow much of its behavior from forms. With that said you are able to use "
"``prefix`` to prefix formset form field names with a given value to allow "
"more than one formset to be sent to a view without name clashing. Lets take "
"a look at how this might be accomplished:"
msgstr "Il est possible d'utiliser plus d'un objet de formulaires groupés dans une vue. Les formulaires groupés ont un comportement très semblable à celui des formulaires. Ceci dit, vous pouvez utiliser l'attribut ``prefix`` afin de préfixer les noms de champs des formulaires groupés avec une valeur donnée, ce qui permettra d'envoyer plusieurs ensembles de formulaires groupés à une vue sans conflit de nommage. Voyons un peu comment cela pourrait être fait :"

# c1e9cdd870d24d99bd0a9f5d5f5d7c94
#: ../../topics/forms/formsets.txt:604
msgid ""
"You would then render the formsets as normal. It is important to point out "
"that you need to pass ``prefix`` on both the POST and non-POST cases so that"
" it is rendered and processed correctly."
msgstr "Les formulaires groupés seraient ensuite affichés comme d'habitude. Il est important de relever que vous devez indiquer ``prefix`` dans tous les cas (``POST`` ou non), afin que l'affichage et le traitement des données puissent se faire correctement."

# a47d8fe001ca4e66a269dcef755e94b1
#: ../../topics/forms/index.txt:3
msgid "Working with forms"
msgstr "Utilisation des formulaires"

# 5d1dd252db8a41699b46a58583273388
# 84d95ee670224c47b06c52a5b96f4687
#: ../../topics/forms/index.txt:5 ../../topics/templates.txt:5
msgid "About this document"
msgstr "À propos de ce document"

# 1127b59e29674113b6f5d1624633050a
#: ../../topics/forms/index.txt:7
msgid ""
"This document provides an introduction to Django's form handling features. "
"For a more detailed look at specific areas of the forms API, see "
":doc:`/ref/forms/api`, :doc:`/ref/forms/fields`, and "
":doc:`/ref/forms/validation`."
msgstr "Ce document présente une introduction aux fonctionnalités de formulaires avec Django. Pour plus de détails sur des aspects spécifiques de l'API des formulaires, consultez :doc:`/ref/forms/api`, :doc:`/ref/forms/fields` et :doc:`/ref/forms/validation`."

# cd9e3bbcb19f47979cf810e6a8dcd413
#: ../../topics/forms/index.txt:14
msgid "``django.forms`` is Django's form-handling library."
msgstr "``django.forms`` est la bibliothèque de gestion des formulaires de Django."

# 45bdb2fda8ba4db3babce0267bbdba50
#: ../../topics/forms/index.txt:16
msgid ""
"While it is possible to process form submissions just using Django's "
":class:`~django.http.HttpRequest` class, using the form library takes care "
"of a number of common form-related tasks. Using it, you can:"
msgstr "Même s'il est possible de traiter les envois de formulaires en utilisant simplement la classe :class:`~django.http.HttpRequest` de Django, l'utilisation de la bibliothèque de formulaires se charge d'un certain nombre de tâches liées aux formulaires. Avec cette bibliothèque, vous pouvez ::"

# fa77d086d7884cd0ac10b928ad2c50ea
#: ../../topics/forms/index.txt:20
msgid "Display an HTML form with automatically generated form widgets."
msgstr "Afficher un formulaire HTML contenant des composants de formulaires générés automatiquement."

# afa28c810ee34296b30efe6dea5dff11
#: ../../topics/forms/index.txt:21
msgid "Check submitted data against a set of validation rules."
msgstr "Vérifier les données envoyées par un ensemble de règles de validation."

# a419a1a4c1c649c59eb53a4861fde93c
#: ../../topics/forms/index.txt:22
msgid "Redisplay a form in the case of validation errors."
msgstr "Réafficher le formulaire en cas d'erreurs de validation."

# aee8834484d3489094c50954c129ac0f
#: ../../topics/forms/index.txt:23
msgid "Convert submitted form data to the relevant Python data types."
msgstr "Convertir les données de formulaires envoyées dans les types Python appropriés."

# 100a7e19890f453eb111c9ba9ded8f23
#: ../../topics/forms/index.txt:28
msgid "The library deals with these concepts:"
msgstr "La bibliothèque se base sur ces concepts :"

# 17c9de56791941f9985b232a4bf6ceeb
#: ../../topics/forms/index.txt:31
msgid "Widget"
msgstr "Composant"

# 97d3b19e89c54400bb0565bf392e2731
#: ../../topics/forms/index.txt:33
msgid ""
"A class that corresponds to an HTML form widget, e.g. ``<input "
"type=\"text\">`` or ``<textarea>``. This handles rendering of the widget as "
"HTML."
msgstr "Une classe correspondant à un composant de formulaire HTML, par exemple ``<input type=\"text\">`` ou ``<textarea>``. L'affichage du composant en HTML est aussi pris en charge."

# 0fc459b49d0a475da55864d4d7d35944
#: ../../topics/forms/index.txt:36
msgid "Field"
msgstr "Champ"

# c39f9be443384be8a3f0d5088c325bd8
#: ../../topics/forms/index.txt:38
msgid ""
"A class that is responsible for doing validation, e.g. an ``EmailField`` "
"that makes sure its data is a valid email address."
msgstr "Une classe responsable de la validation, par exemple un champ ``EmailField`` qui s'assure que ses données correspondent à une adresse électronique valable."

# 8648c87a258946f7b78bf2fb6b400315
#: ../../topics/forms/index.txt:40
msgid "Form"
msgstr "Formulaire"

# a33d52c7c2214eb28b672a479326ba88
#: ../../topics/forms/index.txt:42
msgid ""
"A collection of fields that knows how to validate itself and display itself "
"as HTML."
msgstr "Un ensemble de champs qui savent comment valider leur contenu et s'afficher sous forme de code HTML."

# 02b5746f3dc947b29cf93ab7bdad7b25
#: ../../topics/forms/index.txt:44
msgid "Form Assets (the Media class)"
msgstr ""

# e81d60aae3c541bd8efd1f109d79efcf
#: ../../topics/forms/index.txt:46
msgid "The CSS and JavaScript resources that are required to render a form."
msgstr "Les ressources CSS et JavaScript requises pour afficher un formulaire."

# b8ecaf68c733458db19591e9713bf067
#: ../../topics/forms/index.txt:48
msgid ""
"The library is decoupled from the other Django components, such as the "
"database layer, views and templates. It relies only on Django settings, a "
"couple of ``django.utils`` helper functions and Django's "
"internationalization hooks (but you're not required to be using "
"internationalization features to use this library)."
msgstr "La bibliothèque est découplée des autres composants de Django, tels que la couche de base de données, les vues et les gabarits. Elle ne dépend que des réglages de Django, de quelques fonctions utilitaires de ``django.utils`` ainsi que des fonctions de localisation de Django (mais rien ne vous oblige à utiliser les fonctions de localisation quand vous utilisez cette bibliothèque)."

# 4d5a068449d641628952c53dcf29166d
#: ../../topics/forms/index.txt:55
msgid "Form objects"
msgstr "Les objets ``Form``"

# 393f2ba2597949e2b731c24a3aa44302
#: ../../topics/forms/index.txt:57
msgid ""
"A Form object encapsulates a sequence of form fields and a collection of "
"validation rules that must be fulfilled in order for the form to be "
"accepted. Form classes are created as subclasses of ``django.forms.Form`` "
"and make use of a declarative style that you'll be familiar with if you've "
"used Django's database models."
msgstr "Un objet ``Form`` (formulaire) incorpore une série de champs de formulaires et un ensemble de règles de validation qui doivent être respectées pour que le formulaire soit accepté. Les classes de formulaires sont créées en héritant de ``django.forms.Form`` et font usage du style déclaratif qui devrait vous paraître familier si vous avez utilisé les modèles de base de données de Django."

# a1759697ad4e497bb6f6bad93c78e043
#: ../../topics/forms/index.txt:63
msgid ""
"For example, consider a form used to implement \"contact me\" functionality "
"on a personal Web site:"
msgstr "Par exemple, considérons un formulaire servant à implémenter la fonctionnalité « Me contacter » sur un site Web personnel :"

# 3fd68b5c69074f5a9839a7453eaabc55
#: ../../topics/forms/index.txt:76
msgid ""
"A form is composed of ``Field`` objects. In this case, our form has four "
"fields: ``subject``, ``message``, ``sender`` and ``cc_myself``. "
"``CharField``, ``EmailField`` and ``BooleanField`` are just three of the "
"available field types; a full list can be found in :doc:`/ref/forms/fields`."
msgstr "Un formulaire est composé d'objets ``Field`` (champs). Dans ce cas, notre formulaire possède quatre champs : ``subject``, ``message``, ``sender`` et ``cc_myself``. ``CharField``, ``EmailField`` et ``BooleanField`` ne sont que trois des types de champs disponibles ; une liste complète figure dans :doc:`/ref/forms/fields`."

# a8b71f2d44e6408695166680ffa957c8
#: ../../topics/forms/index.txt:81
msgid ""
"If your form is going to be used to directly add or edit a Django model, you"
" can use a :doc:`ModelForm </topics/forms/modelforms>` to avoid duplicating "
"your model description."
msgstr "Si le formulaire sera utilisé pour directement ajouter ou modifier un modèle Django, vous pouvez utiliser un :doc:`ModelForm </topics/forms/modelforms>` pour éviter la duplication de la description de votre modèle."

# b57b660322974ba5bd58f4dec8b2ccd0
#: ../../topics/forms/index.txt:88
msgid "Using a form in a view"
msgstr "Utilisation d'un formulaire dans une vue"

# 4abca7f7dc4d47b6af4faf54b2ddccd4
#: ../../topics/forms/index.txt:90
msgid "The standard pattern for processing a form in a view looks like this:"
msgstr "La pratique standard du traitement d'un formulaire dans une vue ressemble à ceci :"

# 01b9f50b781047f9a1d7083f1630e31c
#: ../../topics/forms/index.txt:112
msgid "There are three possible code paths here:"
msgstr "Il existe trois chemins de code possibles ici :"

# cdcf701406e34e649d5b093be1690831
#: ../../topics/forms/index.txt:115
msgid "Form submitted?"
msgstr "Formulaire envoyé ?"

# 69522ffd9fb24794a48a3b0613ef0f53
#: ../../topics/forms/index.txt:115
msgid "Data?"
msgstr "Données ?"

# c7a3209cfce0467aa4e82bfb2610d28a
#: ../../topics/forms/index.txt:115
msgid "What occurs"
msgstr "Ce qui se passe"

# 00116fd44f1249b7b4513ab4877760d6
#: ../../topics/forms/index.txt:117
msgid "Unsubmitted"
msgstr "Non envoyé"

# 7cbe3179c20146dd88e3bd93767559d7
#: ../../topics/forms/index.txt:117
msgid "None yet"
msgstr "Aucune"

# f9b88544afe3435aab2a537c86080e5f
#: ../../topics/forms/index.txt:117
msgid "Template gets passed unbound instance of ContactForm."
msgstr "Le gabarit reçoit une instance non renseignée de ``ContactForm``."

# dbbe535032ed44c9a60df10a05b276c4
# 42f94727e03c4a5fad1de9700d2d535f
#: ../../topics/forms/index.txt:120 ../../topics/forms/index.txt:123
msgid "Submitted"
msgstr "Envoyé"

# 7c9eef040c14442fab092ce616c4f0cc
#: ../../topics/forms/index.txt:120
msgid "Invalid data"
msgstr "Données non valides"

# baa41f6e8b834f3d9fd3531b1484eba3
#: ../../topics/forms/index.txt:120
msgid "Template gets passed bound instance of ContactForm."
msgstr "Le gabarit reçoit une instance renseignée de ``ContactForm``."

# 600826e1d877407791bc324085e7b119
#: ../../topics/forms/index.txt:123
msgid "Valid data"
msgstr "Données valides"

# d50ee29bd0e74dd7b7608a08c529d06b
#: ../../topics/forms/index.txt:123
msgid "Valid data is processed. Redirect to a \"thanks\" page."
msgstr "Les données valides sont traitées. Redirection vers une page « Merci »."

# 1d7687deb4334aa08058191960e51390
#: ../../topics/forms/index.txt:127
msgid ""
"The distinction between :ref:`ref-forms-api-bound-unbound` is important:"
msgstr "La distinction entre :ref:`ref-forms-api-bound-unbound` est importante :"

# 77580d90861946aab9c3f3321b0833f1
#: ../../topics/forms/index.txt:129
msgid ""
"An unbound form has no data associated with it. When rendered to the user, "
"it will be empty or will contain default values."
msgstr "Un formulaire non renseigné n'a aucune donnée associée. Lorsqu'il est présenté à l'utilisateur, il sera vide ou ne contiendra que des valeurs par défaut."

# 5f706f6dbe4240579b21b4f2adc48ba7
#: ../../topics/forms/index.txt:132
msgid ""
"A bound form has submitted data, and hence can be used to tell if that data "
"is valid. If an invalid bound form is rendered, it can include inline error "
"messages telling the user what data to correct."
msgstr "Un formulaire renseigné contient des données envoyées et il est donc possible de lui demander si ces données sont valides. Si un formulaire renseigné non valide est affiché, il peut contenir des messages d'erreur intégrés indiquant à l'utilisateur quelles sont les données à corriger. "

# d8bb6cfcc75b4a9182a4959d653c4f31
#: ../../topics/forms/index.txt:137
msgid "Handling file uploads with a form"
msgstr "Gestion des envois de fichiers dans un formulaire"

# 350c35f20df14330bc5b3e3109219c68
#: ../../topics/forms/index.txt:139
msgid ""
"To see how to handle file uploads with your form, see :ref:`binding-"
"uploaded-files`."
msgstr "Pour savoir comment gérer les envois de fichiers avec votre formulaire, consultez :ref:`binding-uploaded-files`."

# 25d0fbb9da5d461f99f62a1e407e94bd
#: ../../topics/forms/index.txt:143
msgid "Processing the data from a form"
msgstr "Traitement des données d'un formulaire"

# cdaf1740c1cf424280a2fb7c18f39fbf
#: ../../topics/forms/index.txt:145
msgid ""
"Once ``is_valid()`` returns ``True``, the successfully validated form data "
"will be in the ``form.cleaned_data`` dictionary. This data will have been "
"converted nicely into Python types for you."
msgstr "Quand ``is_valid()`` renvoie ``True``, les données validées du formulaire se trouvent dans le dictionnaire ``form.cleaned_data``. Ces données auront été gracieusement converties en types Python pour vous."

# e74c9f4e71cf425b9c8da9896e03cbe1
#: ../../topics/forms/index.txt:151
msgid ""
"You can still access the unvalidated data directly from ``request.POST`` at "
"this point, but the validated data is better."
msgstr "À ce stade, vous pouvez toujours accéder directement aux données non validées dans ``request.POST``, mais les données validées sont plus adéquates."

# a47c14e6b76d4f4dae03341b5ed6fcc4
#: ../../topics/forms/index.txt:154
msgid ""
"In the above example, ``cc_myself`` will be a boolean value. Likewise, "
"fields such as ``IntegerField`` and ``FloatField`` convert values to a "
"Python int and float respectively."
msgstr "Dans l'exemple ci-dessus, ``cc_myself`` contient une valeur booléenne. De même, les champs tels que ``IntegerField`` et ``FloatField`` convertissent leurs valeurs en un type Python ``int`` et ``float``, respectivement."

# 3987a227e63c4e15aa6aa7e3d8c4d05b
#: ../../topics/forms/index.txt:158
msgid ""
"Read-only fields are not available in ``form.cleaned_data`` (and setting a "
"value in a custom ``clean()`` method won't have any effect). These fields "
"are displayed as text rather than as input elements, and thus are not posted"
" back to the server."
msgstr "Les champs en lecture seule ne sont pas disponibles dans ``form.cleaned_data`` (et définir une valeur dans une méthode ``clean()`` personnalisée n'aura aucun effet). Ces champs sont affichés sous forme textuelle au lieu de zones de saisie, ce qui fait qu'ils ne sont pas renvoyés au serveur."

# 922d842b7ad6461a851ae5a8e0030e46
#: ../../topics/forms/index.txt:163
msgid ""
"Extending the earlier example, here's how the form data could be processed:"
msgstr "En poursuivant l'exemple précédent, voici comment les données de formulaires pourraient être traitées :"

# 60f2b8efa4ee41b4bea8e70c8a28bb67
#: ../../topics/forms/index.txt:183
msgid "For more on sending email from Django, see :doc:`/topics/email`."
msgstr "Pour en savoir plus sur l'envoi de courriels à partir de Django, consultez :doc:`/topics/email`."

# f40b64d7a6844f9bb71818bb6f332057
#: ../../topics/forms/index.txt:186
msgid "Displaying a form using a template"
msgstr "Affichage d'un formulaire dans un gabarit"

# 4e569c8dfb274551a00bd30e60a5da2d
#: ../../topics/forms/index.txt:188
msgid ""
"Forms are designed to work with the Django template language. In the above "
"example, we passed our ``ContactForm`` instance to the template using the "
"context variable ``form``. Here's a simple example template::"
msgstr "Les formulaires sont conçus pour fonctionner avec le langage de gabarit de Django. Dans l'exemple ci-dessus, nous avons transmis l'instance de ``ContactForm`` au gabarit par l'intermédiaire de la variable de contexte ``form``. Voici un exemple simple de gabarit ::"

# 9154c92407a54cd98ed0efa223934e1e
#: ../../topics/forms/index.txt:197
msgid ""
"The form only outputs its own fields; it is up to you to provide the "
"surrounding ``<form>`` tags and the submit button."
msgstr "Le formulaire n'affiche que ses propres champs ; il vous revient d'écrire les balises englobantes ``<form>`` et le bouton d'envoi."

# 3f06ae32f06d4434bfba48efa6a3775a
#: ../../topics/forms/index.txt:200
msgid ""
"If your form includes uploaded files, be sure to include "
"``enctype=\"multipart/form-data\"`` in the ``form`` element. If you wish to "
"write a generic template that will work whether or not the form has files, "
"you can use the :meth:`~django.forms.Form.is_multipart` attribute on the "
"form::"
msgstr "Si le formulaire permet d'envoyer des fichiers, prenez soin d'inclure ``enctype=\"multipart/form-data\"`` dans la balise ``form``. Si vous souhaitez écrire un gabarit générique fonctionnant avec ou sans envoi de fichier dans le formulaire, vous pouvez tester l'attribut :meth:`~django.forms.Form.is_multipart` du formulaire ::"

# 130c84623ccf416a8c24f938ef4d209d
#: ../../topics/forms/index.txt:208
msgid "Forms and Cross Site Request Forgery protection"
msgstr "Formulaires et protection contre le « Cross site request forgery » (CSRF)"

# c07348ae862344e88ca6d3ceb5ba79be
#: ../../topics/forms/index.txt:210
msgid ""
"Django ships with an easy-to-use :doc:`protection against Cross Site Request"
" Forgeries </ref/contrib/csrf>`. When submitting a form via POST with CSRF "
"protection enabled you must use the :ttag:`csrf_token` template tag as in "
"the preceding example. However, since CSRF protection is not directly tied "
"to forms in templates, this tag is omitted from the following examples in "
"this document."
msgstr "Django est livré avec une :doc:`protection simple d'emploi contre les attaques Cross-Site Request Forgery </ref/contrib/csrf>`. Lors de l'envoi d'un formulaire par la méthode POST avec la protection CSRF active, vous devez utiliser la balise de gabarit :ttag:`csrf_token` comme dans l'exemple précédent. Cependant, comme la protection CSRF n'est pas directement liée aux formulaires dans les gabarits, cette balise est omise dans les exemples suivants de ce document."

# eed0372fd55b4d9696ce3ff1660a692e
#: ../../topics/forms/index.txt:217
msgid ""
"``form.as_p`` will output the form with each form field and accompanying "
"label wrapped in a paragraph. Here's the output for our example template::"
msgstr "``form.as_p`` affiche le formulaire avec chacun de ses champs de formulaire et de ses étiquettes correspondantes englobé dans un paragraphe. Voici ce que ça donne pour notre gabarit d'exemple ::"

# 2a53240973ba486793fc80eaac37c1bb
#: ../../topics/forms/index.txt:232
msgid ""
"Note that each form field has an ID attribute set to ``id_<field-name>``, "
"which is referenced by the accompanying label tag. This is important for "
"ensuring forms are accessible to assistive technology such as screen reader "
"software. You can also :ref:`customize the way in which labels and ids are "
"generated <ref-forms-api-configuring-label>`."
msgstr "Notez que chaque champ de formulaire possède un attribut ID défini à ``id_<nom-du-champ>`` auquel fait référence la balise étiquette (``<label>``) accompagnant le champ. C'est important dans l'optique de rendre les formulaires accessibles par les aides techniques comme les logiciels de lecture d'écran. Vous pouvez aussi :ref:`personnaliser la manière dont les étiquettes et les identifiants sont générés <ref-forms-api-configuring-label>`."

# d5ed4b2b576544e49243af0fb43e745c
#: ../../topics/forms/index.txt:238
msgid ""
"You can also use ``form.as_table`` to output table rows (you'll need to "
"provide your own ``<table>`` tags) and ``form.as_ul`` to output list items."
msgstr "Vous pouvez également utiliser ``form.as_table`` pour afficher des lignes de tableau (vous devrez ajouter vous-même les balises ``<table>``) et ``form.as_ul`` pour afficher des éléments de liste."

# cf740b468b714ab1bbe4e60ffb6a78f2
#: ../../topics/forms/index.txt:242
msgid "Customizing the form template"
msgstr "Personnalisation du gabarit de formulaire"

# f9c8e63e14a3431db6b621f64ec96884
#: ../../topics/forms/index.txt:244
msgid ""
"If the default generated HTML is not to your taste, you can completely "
"customize the way a form is presented using the Django template language. "
"Extending the above example::"
msgstr "Si le code HTML généré par défaut ne vous convient pas, vous pouvez personnaliser complètement la manière dont le formulaire est affiché en utilisant le langage de gabarit de Django. En partant de l'exemple précédent ::"

# a715e2c0de954b2d84ddbbab49898b6c
#: ../../topics/forms/index.txt:273
msgid ""
"Each named form-field can be output to the template using ``{{ "
"form.name_of_field }}``, which will produce the HTML needed to display the "
"form widget. Using ``{{ form.name_of_field.errors }}`` displays a list of "
"form errors, rendered as an unordered list. This might look like::"
msgstr "Chaque champ de formulaire nommé peut être affiché dans le gabarit en utilisant ``{{ form.nom_du_champ }}``, ce qui produira le code HTML requis pour afficher le composant de formulaire. La syntaxe ``{{ form.nom_du_champ.errors }}`` affiche une liste des erreurs du formulaire, sous forme de liste non ordonnée. Cela pourrait ressembler à ceci ::"

# 67f479818ef945afbddf46174e27033d
#: ../../topics/forms/index.txt:282
msgid ""
"The list has a CSS class of ``errorlist`` to allow you to style its "
"appearance. If you wish to further customize the display of errors you can "
"do so by looping over them::"
msgstr "La liste possède une classe CSS ``errorlist`` pour vous permettre de mettre en forme son apparence. Si vous souhaitez personnaliser davantage l'affichage des erreurs, vous pouvez le faire par une boucle ::"

# 0ddb254d00184d4fbb0ff9f0ce7bf30a
#: ../../topics/forms/index.txt:295
msgid "Looping over the form's fields"
msgstr "Boucles sur champs de formulaires"

# 309c30ef0ed84775bc55730d201b7a5f
#: ../../topics/forms/index.txt:297
msgid ""
"If you're using the same HTML for each of your form fields, you can reduce "
"duplicate code by looping through each field in turn using a ``{% for %}`` "
"loop::"
msgstr "Si vous utilisez le même code HTML pour tous vos champs de formulaire, vous pouvez réduire la duplication de code en effectuant une boucle sur chaque champ en utilisant l'opérateur ``{% for %}``::"

# 85986ec5bc9a4a119c2d3ec46c1720c3
#: ../../topics/forms/index.txt:311
msgid ""
"Within this loop, ``{{ field }}`` is an instance of "
":class:`~django.forms.BoundField`. ``BoundField`` also has the following "
"attributes, which can be useful in your templates:"
msgstr "Dans cette boucle, ``{{ field }}`` est une instance de :class:`~django.forms.BoundField`. ``BoundField`` possède également les attributs suivants qui peuvent être utiles dans vos gabarits :"

# 99493cae2f9c43ca924cd7bf0fad0bc8
#: ../../topics/forms/index.txt:316
msgid "``{{ field.label }}``"
msgstr "``{{ field.label }}``"

# 010bb4ae2aaa4ef295bd386e6b121653
#: ../../topics/forms/index.txt:316
msgid "The label of the field, e.g. ``Email address``."
msgstr "L'étiquette du champ, par exemple  ``Adresse de courriel``."

# f2c34e9d0a9c469b991a07f4dcef2264
#: ../../topics/forms/index.txt:326
msgid "``{{ field.label_tag }}``"
msgstr "``{{ field.label_tag }}``"

# bb7dacb8225f48e29f7294f1eabf7075
#: ../../topics/forms/index.txt:319
msgid "The field's label wrapped in the appropriate HTML ``<label>`` tag."
msgstr ""

# 3401a0400e474937930feee03a14be18
#: ../../topics/forms/index.txt:323
msgid ""
"This includes the form's :attr:`~django.forms.Form.label_suffix`. For "
"example, the default ``label_suffix`` is a colon::"
msgstr ""

# 2680b8069ea1424e8576bf3f1823fd6c
#: ../../topics/forms/index.txt:332
msgid "``{{ field.id_for_label }}``"
msgstr ""

# 4ca6cc98f0cf49e39117f7c94deaff5a
#: ../../topics/forms/index.txt:329
msgid ""
"The ID that will be used for this field (``id_email`` in the example above)."
" You may want to use this in lieu of ``label_tag`` if you are constructing "
"the label manually. It's also useful, for example, if you have some inline "
"JavaScript and want to avoid hardcoding the field's ID."
msgstr ""

# e85b390aee834b8888065ef81af01aa1
#: ../../topics/forms/index.txt:335
msgid "``{{ field.value }}``"
msgstr "``{{ field.value }}``"

# 94198e583f324a8d91c3d9700500259f
#: ../../topics/forms/index.txt:335
msgid "The value of the field. e.g ``someone@example.com``"
msgstr "La valeur du champ, par exemple ``quelqu-un@example.com``"

# 3715ad92d7184ccc90cbd3fe0f0f0c88
#: ../../topics/forms/index.txt:339
msgid "``{{ field.html_name }}``"
msgstr "``{{ field.html_name }}``"

# ccdeb21d81934ec0a56f08983bbbbc3c
#: ../../topics/forms/index.txt:338
msgid ""
"The name of the field that will be used in the input element's name field. "
"This takes the form prefix into account, if it has been set."
msgstr "Le nom du champ tel qu'il sera utilisé dans le nom de champ de la balise ``input``. Il prend en compte le préfixe de formulaire, si celui-ci est défini."

# a248a6d8621b43e4a7fcd09b9f2fa857
#: ../../topics/forms/index.txt:342
msgid "``{{ field.help_text }}``"
msgstr "``{{ field.help_text }}``"

# 20c4ef41014b4c8380fd75c2e99677a6
#: ../../topics/forms/index.txt:342
msgid "Any help text that has been associated with the field."
msgstr "Tout texte d'aide associé au champ."

# 7de16a496634431191bb1b233113861a
#: ../../topics/forms/index.txt:349
msgid "``{{ field.errors }}``"
msgstr "``{{ field.errors }}``"

# 78fa213da37d4d74a58b82b5ae351b9d
#: ../../topics/forms/index.txt:345
msgid ""
"Outputs a ``<ul class=\"errorlist\">`` containing any validation errors "
"corresponding to this field. You can customize the presentation of the "
"errors with a ``{% for error in field.errors %}`` loop. In this case, each "
"object in the loop is a simple string containing the error message."
msgstr "Affiche une liste ``<ul class=\"errorlist\">`` contenant toute erreur de validation correspondant à ce champ. Vous pouvez personnaliser la présentation des erreurs avec une boucle ``{% for error in field.errors %}``. Dans ce cas, chaque objet de la boucle est une simple chaîne de caractères contenant le message d'erreur."

# a428fb254e3c4545b5b920ec7d13bad2
#: ../../topics/forms/index.txt:358
msgid "``{{ field.is_hidden }}``"
msgstr "``{{ field.is_hidden }}``"

# 7ff7a5dba03e4dad8790a57ae913cb0c
#: ../../topics/forms/index.txt:352
msgid ""
"This attribute is ``True`` if the form field is a hidden field and ``False``"
" otherwise. It's not particularly useful as a template variable, but could "
"be useful in conditional tests such as::"
msgstr "Cet attribut vaut ``True`` si le champ de formulaire est un champ masqué, sinon il vaut ``False``. Ce n'est pas particulièrement utile comme variable de gabarit, mais pourrait être utile dans des tests conditionnels tels que ::"

# fd37df3f48304badb7776e4aada1cbc7
#: ../../topics/forms/index.txt:364
msgid "``{{ field.field }}``"
msgstr "``{{ field.field }}``"

# 7ed70230be194e70a7e3bf98ead390e3
#: ../../topics/forms/index.txt:361
msgid ""
"The :class:`~django.forms.Field` instance from the form class that this "
":class:`~django.forms.BoundField` wraps. You can use it to access "
":class:`~django.forms.Field` attributes , e.g. ``{{ "
"char_field.field.max_length }}``."
msgstr "L'instance :class:`~django.forms.Field` de la classe de formulaire que cet objet :class:`~django.forms.BoundField` adapte. Vous pouvez l'utiliser pour accéder aux attributs de :class:`~django.forms.Field`, par exemple ``{{ char_field.field.max_length }}``."

# d9371c7a1ebb49b388bb5dba6fb4f0a0
#: ../../topics/forms/index.txt:367
msgid "Looping over hidden and visible fields"
msgstr "Boucles sur les champs masqués et visibles"

# 6137955f52e14b83821e30fc4f5e2e3d
#: ../../topics/forms/index.txt:369
msgid ""
"If you're manually laying out a form in a template, as opposed to relying on"
" Django's default form layout, you might want to treat ``<input "
"type=\"hidden\">`` fields differently than non-hidden fields. For example, "
"because hidden fields don't display anything, putting error messages \"next "
"to\" the field could cause confusion for your users -- so errors for those "
"fields should be handled differently."
msgstr "Si vous affichez manuellement un formulaire dans un gabarit, sans faire appel à l'affichage par défaut des formulaires de Django, il peut être nécessaire de traiter différemment les champs ``<input type=\"hidden\">`` des autres champs non masqués. Par exemple, comme les champs masqués ne produisent pas de contenu visible, l'affichage de messages d'erreur « à côté » du champ pourrait générer de la confusion pour les utilisateurs ; il faut donc gérer différemment les erreurs de ce type de champ."

# d577f3dcc5684e0b877488c8a7f864b7
#: ../../topics/forms/index.txt:376
msgid ""
"Django provides two methods on a form that allow you to loop over the hidden"
" and visible fields independently: ``hidden_fields()`` and "
"``visible_fields()``. Here's a modification of an earlier example that uses "
"these two methods::"
msgstr "Django fournit deux méthodes qui permettent de tourner en boucle indépendamment sur les champs visibles et masqués : ``hidden_fields()`` et ``visible_fields()``. Voici une modification d'un exemple précédent en utilisant ces deux méthodes ::"

# 7384fd2f664c484688eac0b4efab6367
#: ../../topics/forms/index.txt:396
msgid ""
"This example does not handle any errors in the hidden fields. Usually, an "
"error in a hidden field is a sign of form tampering, since normal form "
"interaction won't alter them. However, you could easily insert some error "
"displays for those form errors, as well."
msgstr "Cet exemple ne gère pas du tout les erreurs des champs masqués. En principe, une erreur dans un champ masqué est un signe de manipulation abusive d'un formulaire, puisque l'interaction normale avec un formulaire ne les modifie pas. Cependant, vous pourriez facilement ajouter aussi une forme d'affichage pour ces erreurs de formulaire."

# d97e2455155f479e86ced6fb29fa3396
#: ../../topics/forms/index.txt:402
msgid "Reusable form templates"
msgstr "Gabarits de formulaire réutilisables"

# 4bc41695accd4bbe823e1b38d8c84ae2
#: ../../topics/forms/index.txt:404
msgid ""
"If your site uses the same rendering logic for forms in multiple places, you"
" can reduce duplication by saving the form's loop in a standalone template "
"and using the :ttag:`include` tag to reuse it in other templates::"
msgstr "Si votre site utilise la même logique d'affichage des formulaires à plusieurs endroits, vous pouvez réduire la duplication en enregistrant la boucle de formulaire dans un gabarit autonome et en employant la balise :ttag:`include` afin de réutiliser ce contenu dans d'autres gabarits ::"

# 20e11f0b13f34937b6bb59f5068e574d
#: ../../topics/forms/index.txt:422
msgid ""
"If the form object passed to a template has a different name within the "
"context, you can alias it using the ``with`` argument of the :ttag:`include`"
" tag::"
msgstr "Si l'objet formulaire transmis au gabarit possède un nom différent dans le contexte, vous pouvez lui donner un alias en utilisant le paramètre ``with`` de la balise :ttag:`include`::"

# c138010d8cca4bb498a7c39c6c201946
#: ../../topics/forms/index.txt:431
msgid ""
"If you find yourself doing this often, you might consider creating a custom "
":ref:`inclusion tag<howto-custom-template-tags-inclusion-tags>`."
msgstr "Si vous constatez que vous reproduisez souvent ce même code, il vous faut peut-être envisager la création d'une :ref:`balise d'inclusion<howto-custom-template-tags-inclusion-tags>` personnalisée."

# 7acc06edec6d4c9ba7bc92ab9c64ad3b
#: ../../topics/forms/index.txt:435
msgid "Further topics"
msgstr "Sujets complémentaires"

# 29bd54a6c8be45d58da40ad143dc9198
#: ../../topics/forms/index.txt:437
msgid "This covers the basics, but forms can do a whole lot more:"
msgstr "Cette page aborde les généralités, mais les formulaires peuvent faire bien d'autres choses encore :"

# 4fe323eff1a24f8cb7e91a6a2134a8f6
#: ../../topics/forms/index.txt:449
msgid ":doc:`The Forms Reference </ref/forms/index>`"
msgstr ":doc:`La référence des formulaires </ref/forms/index>`"

# d06931357454482db7b28915de83c8ea
#: ../../topics/forms/index.txt:449
msgid ""
"Covers the full API reference, including form fields, form widgets, and form"
" and field validation."
msgstr "Contient la référence d'API complète, y compris les champs de formulaire, les composants de formulaire et la validation des champs et des formulaires."

# d8705106f3d2473c92b1ae9705a287e6
#: ../../topics/forms/media.txt:2
msgid "Form Assets (the ``Media`` class)"
msgstr "Fichiers annexes de formulaire (classe ``Media``)"

# 9b24fa420fa64a4dbfb02db6ce31bc99
#: ../../topics/forms/media.txt:4
msgid ""
"Rendering an attractive and easy-to-use Web form requires more than just "
"HTML - it also requires CSS stylesheets, and if you want to use fancy "
"\"Web2.0\" widgets, you may also need to include some JavaScript on each "
"page. The exact combination of CSS and JavaScript that is required for any "
"given page will depend upon the widgets that are in use on that page."
msgstr "L'affichage d'un formulaire Web attractif et ergonomique exige plus que du code HTML simple, il nécessite également des feuilles de style CSS, et si vous voulez utiliser des composants « Web 2.0 » plaisants, il sera peut-être nécessaire d'inclure aussi du code JavaScript sur chaque page. La combinaison exacte de CSS et de JavaScript nécessaire pour une page donnée dépend des composants de formulaire employés sur cette page."

# 0a8f651c5d0f4fe3acca3dd2fc062e0d
#: ../../topics/forms/media.txt:10
msgid ""
"This is where asset definitions come in. Django allows you to associate "
"different files -- like stylesheets and scripts -- with the forms and "
"widgets that require those assets. For example, if you want to use a "
"calendar to render DateFields, you can define a custom Calendar widget. This"
" widget can then be associated with the CSS and JavaScript that is required "
"to render the calendar. When the Calendar widget is used on a form, Django "
"is able to identify the CSS and JavaScript files that are required, and "
"provide the list of file names in a form suitable for easy inclusion on your"
" Web page."
msgstr "C'est là où la définition de fichiers annexes intervient. Django permet d'associer différents fichiers comme des feuilles de style et des scripts à des formulaires et des composants qui ont besoin de ces fichiers. Par exemple, si vous voulez utiliser un calendrier pour afficher les champs date, vous pouvez définir un composant ``Calendrier`` personnalisé. Ce composant peut ensuite être associé à des fichiers CSS et JavaScript requis pour afficher le calendrier. Quand le composant ``Calendrier`` est utilisé dans un formulaire, Django est capable d'identifier les fichiers CSS et JavaScript nécessaires et de fournir la liste des noms de fichiers au formulaire de manière à ce qu'ils puissent être facilement inclus dans la page Web."

# d8b12feac3914d5e9e382d7cc422f06c
#: ../../topics/forms/media.txt:20
msgid "Assets and Django Admin"
msgstr "Fichiers annexes dans l'administration de Django"

# d2f7b2cfe5524d6cbb4a59cd1d544e79
#: ../../topics/forms/media.txt:22
msgid ""
"The Django Admin application defines a number of customized widgets for "
"calendars, filtered selections, and so on. These widgets define asset "
"requirements, and the Django Admin uses the custom widgets in place of the "
"Django defaults. The Admin templates will only include those files that are "
"required to render the widgets on any given page."
msgstr "L'application d'administration de Django définit un certain nombre de composants personnalisés pour les calendriers, les sélections filtrées, etc. Ces composants définissent des exigences de fichiers annexes et l'administration de Django utilise ces composants personnalisés au lieu des composants par défaut de Django. Les gabarits de l'administration n'incluent que les fichiers nécessaires pour l'affichage des composants de la page en cours."

# ed002d885dbf4c81823123e9f4ba55c8
#: ../../topics/forms/media.txt:29
msgid ""
"If you like the widgets that the Django Admin application uses, feel free to"
" use them in your own application! They're all stored in "
"``django.contrib.admin.widgets``."
msgstr "Si vous appréciez les composants utilisés par le site d'administration de Django, vous pouvez librement les utiliser dans votre propre application ! Ils se trouvent dans ``django.contrib.admin.widgets``."

# 76f40761bd5d41c4a0ffda69c509ca1a
#: ../../topics/forms/media.txt:33
msgid "Which JavaScript toolkit?"
msgstr "Quelle bibliothèque JavaScript ?"

# 960a434602af4c5c95774e9a9b707f9b
#: ../../topics/forms/media.txt:35
msgid ""
"Many JavaScript toolkits exist, and many of them include widgets (such as "
"calendar widgets) that can be used to enhance your application. Django has "
"deliberately avoided blessing any one JavaScript toolkit. Each toolkit has "
"its own relative strengths and weaknesses - use whichever toolkit suits your"
" requirements. Django is able to integrate with any JavaScript toolkit."
msgstr "Il existe plusieurs bibliothèques JavaScript et beaucoup d'entre elles contiennent des composants utiles pour améliorer l'interface d'une application (comme par exemple des composants de calendrier). Django a délibérément évité de choisir parmi ces bibliothèques JavaScript. Chacune a ses forces et ses faiblesses, utilisez donc celle qui correspond à vos besoins. Django est capable d'intégrer n'importe quelle bibliothèque JavaScript."

# 08b9a463750840c7be307dfe604b6ade
#: ../../topics/forms/media.txt:45
msgid "Assets as a static definition"
msgstr "Fichiers annexes définis statiquement"

# d713ab7306154781997454fcd8405133
#: ../../topics/forms/media.txt:47
msgid ""
"The easiest way to define assets is as a static definition. Using this "
"method, the declaration is an inner ``Media`` class. The properties of the "
"inner class define the requirements."
msgstr "La façon la plus simple de définir des fichiers annexes est sous forme de définition statique. Avec cette méthode, la déclaration se fait dans une classe ``Media`` interne. Les propriétés de la classe interne définissent les exigences."

# 37e30fd9c3ec4f50ba7495c9c2b3879d
#: ../../topics/forms/media.txt:51
msgid "Here's a simple example::"
msgstr "Voici un exemple simple ::"

# d352398cbe224d65870f65fb267ff234
#: ../../topics/forms/media.txt:62
msgid ""
"This code defines a ``CalendarWidget``, which will be based on "
"``TextInput``. Every time the CalendarWidget is used on a form, that form "
"will be directed to include the CSS file ``pretty.css``, and the JavaScript "
"files ``animations.js`` and ``actions.js``."
msgstr "Ce code définit un composant ``CalendarWidget``, qui est basé sur ``TextInput``. Chaque fois que ``CalendarWidget`` sera utilisé dans un formulaire, ce dernier sera amené à inclure le fichier CSS ``pretty.css`` et les fichiers JavaScript ``animations.js`` et ``actions.js``."

# 087e7b4683c4474e821dcfefb544e8db
#: ../../topics/forms/media.txt:67
msgid ""
"This static definition is converted at runtime into a widget property named "
"``media``. The list of assets for a ``CalendarWidget`` instance can be "
"retrieved through this property::"
msgstr "Cette définition statique est convertie au moment de l'exécution en une propriété de composant nommée ``media``. La liste des fichiers annexes d'une instance de composant ``CalendarWidget`` peut être obtenue par cette propriété ::"

# c452da7b6a8b494b8c71f7317c0b9fbb
#: ../../topics/forms/media.txt:77
msgid ""
"Here's a list of all possible ``Media`` options. There are no required "
"options."
msgstr "Voici une liste de toutes les options possibles de ``Media``. Il n'y a pas d'option obligatoire."

# 1555ed3f9d0048daa82c2f8c3625252a
#: ../../topics/forms/media.txt:80
msgid "``css``"
msgstr "``css``"

# 4595f42fbc2a49a2a314ac2b5f0c1e61
#: ../../topics/forms/media.txt:82
msgid ""
"A dictionary describing the CSS files required for various forms of output "
"media."
msgstr "Un dictionnaire décrivant les fichiers CSS requis par les différentes formes de support d'affichage."

# b85715e636f946f8978577aca58fd22f
#: ../../topics/forms/media.txt:85
msgid ""
"The values in the dictionary should be a tuple/list of file names. See "
":ref:`the section on paths <form-asset-paths>` for details of how to specify"
" paths to these files."
msgstr "Les valeurs du dictionnaire doivent être composées de tuples/listes de noms de fichiers. Consultez :ref:`la section sur les chemins <form-asset-paths>` pour plus de détails sur la manière de définir les chemins de ces fichiers."

# d2c4c4bb7b9c4c279495e53104ac6dde
#: ../../topics/forms/media.txt:89
msgid ""
"The keys in the dictionary are the output media types. These are the same "
"types accepted by CSS files in media declarations: 'all', 'aural', "
"'braille', 'embossed', 'handheld', 'print', 'projection', 'screen', 'tty' "
"and 'tv'. If you need to have different stylesheets for different media "
"types, provide a list of CSS files for each output medium. The following "
"example would provide two CSS options -- one for the screen, and one for "
"print::"
msgstr "Les clés du dictionnaire correspondent aux types de support d'affichage. Ce sont les mêmes types que les fichiers CSS acceptent dans les déclarations « media » : 'all', 'aural', 'braille', 'embossed', 'handheld', 'print', 'projection', 'screen', 'tty' and 'tv'. Si vous avez besoin de feuilles de style différentes en fonction de types de support différents, indiquez des listes de fichiers CSS correspondant à chacun de ces types. L'exemple suivant fournit deux options CSS, une pour l'affichage à l'écran et l'autre pour l'impression ::"

# 5024831feeec4dbe9fa7cf7bfcd215ac
#: ../../topics/forms/media.txt:102
msgid ""
"If a group of CSS files are appropriate for multiple output media types, the"
" dictionary key can be a comma separated list of output media types. In the "
"following example, TV's and projectors will have the same media "
"requirements::"
msgstr "Si un groupe de fichiers CSS convient à plusieurs types de support d'affichage, la clé de dictionnaire peut être une liste de types de support d'affichage séparés par des virgules. Dans l'exemple suivant, les télévisions et les projecteurs ont les mêmes exigences en terme de support ::"

# 833c280705ce4063a9deac9bf1602217
#: ../../topics/forms/media.txt:114
msgid ""
"If this last CSS definition were to be rendered, it would become the "
"following HTML::"
msgstr "Si cette dernière définition de CSS devait être affichée, cela produirait le code HTML suivant ::"

# 35cdf7191ee8422a80508520ae1da482
#: ../../topics/forms/media.txt:121
msgid "``js``"
msgstr "``js``"

# 2264b26106fc4ad2a72893d50d0bc95c
#: ../../topics/forms/media.txt:123
msgid ""
"A tuple describing the required JavaScript files. See :ref:`the section on "
"paths <form-asset-paths>` for details of how to specify paths to these "
"files."
msgstr "Un tuple décrivant les fichiers JavaScript nécessaires. Consultez :ref:`la section sur les chemins <form-asset-paths>` pour plus de détails sur la manière de définir les chemins de ces fichiers."

# 539b430e3e9c421a9f98f27668b57a4e
#: ../../topics/forms/media.txt:128
msgid "``extend``"
msgstr "``extend``"

# 12a00b1255f74dae83e5debfd44bd7f1
#: ../../topics/forms/media.txt:130
msgid "A boolean defining inheritance behavior for ``Media`` declarations."
msgstr "Une valeur booléenne définissant le comportement de l'héritage des déclarations ``Media``."

# ebea85ceacbb41a2b98afe8cead795b2
#: ../../topics/forms/media.txt:132
msgid ""
"By default, any object using a static ``Media`` definition will inherit all "
"the assets associated with the parent widget. This occurs regardless of how "
"the parent defines its own requirements. For example, if we were to extend "
"our basic Calendar widget from the example above::"
msgstr "Par défaut, tout objet utilisant une définition statique de ``Media`` hérite de tous les fichiers annexes associés au composant parent, et ceci quelle que soit la manière dont le parent définit ses propres exigences. Par exemple, si nous devions améliorer notre composant ``Calendar`` basique de l'exemple ci-dessus ::"

# 6b84b22ef7984c73896b2fe432a4087a
#: ../../topics/forms/media.txt:153
msgid ""
"The FancyCalendar widget inherits all the assets from its parent widget. If "
"you don't want ``Media`` to be inherited in this way, add an "
"``extend=False`` declaration to the ``Media`` declaration::"
msgstr "Le composant ``FancyCalendar`` hérite de tous les fichiers annexes de son composant parent. Si vous ne souhaitez pas que ``Media`` soit hérité de cette façon, ajoutez une déclaration ``extend=False`` à la déclaration de ``Media``::"

# fa53ca4cc4b944788b04b1366b083fbd
#: ../../topics/forms/media.txt:170
msgid ""
"If you require even more control over inheritance, define your assets using "
"a :ref:`dynamic property <dynamic-property>`. Dynamic properties give you "
"complete control over which files are inherited, and which are not."
msgstr "Si vous avez besoin de pouvoir contrôler encore plus l'héritage, définissez vos fichiers annexes en utilisant une :ref:`propriété dynamique <dynamic-property>`. Les propriétés dynamiques vous donnent un contrôle total sur les fichiers hérités et ceux qui ne le seront pas."

# e28c0d953efd48e98cc287099735f473
#: ../../topics/forms/media.txt:177
msgid "``Media`` as a dynamic property"
msgstr "``Media`` comme propriété dynamique"

# 1e50386769994721b1eec82750b41970
#: ../../topics/forms/media.txt:179
msgid ""
"If you need to perform some more sophisticated manipulation of asset "
"requirements, you can define the ``media`` property directly. This is done "
"by defining a widget property that returns an instance of ``forms.Media``.  "
"The constructor for ``forms.Media`` accepts ``css`` and ``js`` keyword "
"arguments in the same format as that used in a static media definition."
msgstr "Si vous avez besoin d'effectuer certaines manipulations encore plus sophistiquées sur les fichiers annexes requis, vous pouvez définir directement la propriété ``media``. Cela peut être réalisé en définissant une propriété du composant qui renvoie une instance de ``forms.Media``. le constructeur de ``forms.Media`` accepte les paramètres nommés ``css`` and ``js`` dans le même format que celui qui est utilisé pour les définitions statiques de fichiers annexes."

# 228eb8232c7e4f6684d210104ed4cae8
#: ../../topics/forms/media.txt:186
msgid ""
"For example, the static definition for our Calendar Widget could also be "
"defined in a dynamic fashion::"
msgstr "Par exemple, la définition statique de notre composant de calendrier pourrait tout aussi bien être réalisée de manière dynamique ::"

# 02bef4e2af8d4ac8a179e73bfd00fa5b
#: ../../topics/forms/media.txt:195
msgid ""
"See the section on `Media objects`_ for more details on how to construct "
"return values for dynamic ``media`` properties."
msgstr "Consultez la section sur les `objets Media`_ pour plus de détails sur la manière de construire des valeurs de retour pour les propriétés dynamiques ``media``."

# 8e6bb147f63b4fa382a67420590e3e0c
#: ../../topics/forms/media.txt:201
msgid "Paths in asset definitions"
msgstr "Chemins dans les définitions de fichiers annexes"

# de8000f06a7a4ef0bd2052b7531365cf
#: ../../topics/forms/media.txt:203
msgid ""
"Paths used to specify assets can be either relative or absolute. If a path "
"starts with ``/``, ``http://`` or ``https://``, it will be interpreted as an"
" absolute path, and left as-is. All other paths will be prepended with the "
"value of the appropriate prefix."
msgstr "Les chemins utilisés pour définir les fichiers annexes peuvent être relatifs ou absolus. Si un chemin commence par ``/``, ``http://`` ou ``https://``, il sera interprété comme un chemin absolu et laissé tel quel. Tous les autres chemins seront préfixés par la valeur appropriée."

# 5c13df7bcc05454cb3c49725a98056ed
#: ../../topics/forms/media.txt:208
msgid ""
"As part of the introduction of the :doc:`staticfiles app "
"</ref/contrib/staticfiles>` two new settings were added to refer to \"static"
" files\" (images, CSS, Javascript, etc.) that are needed to render a "
"complete web page: :setting:`STATIC_URL` and :setting:`STATIC_ROOT`."
msgstr "Dans le cadre de l'introduction de :doc:`l'application staticfiles </ref/contrib/staticfiles>`, deux nouveaux réglages ont été ajoutés pour faire référence aux « fichiers statiques » (images, CSS, JavaScript, etc.) nécessaires à l'affichage d'une page Web complète : :setting:`STATIC_URL` et :setting:`STATIC_ROOT`."

# a7ef1866b7654ba8b9e016d825c42b5b
#: ../../topics/forms/media.txt:213
msgid ""
"To find the appropriate prefix to use, Django will check if the "
":setting:`STATIC_URL` setting is not ``None`` and automatically fall back to"
" using :setting:`MEDIA_URL`. For example, if the :setting:`MEDIA_URL` for "
"your site was ``'http://uploads.example.com/'`` and :setting:`STATIC_URL` "
"was ``None``::"
msgstr "Pour trouver le bon préfixe à utiliser, Django contrôle si le réglage :setting:`STATIC_URL` est différent de ``None`` et se rabat sur :setting:`MEDIA_URL` en cas de besoin. Par exemple, si le réglage :setting:`MEDIA_URL` de votre site est ``'http://uploads.example.com/'`` et que :setting:`STATIC_URL`  vaut ``None``::"

# 3e938d200ed44a1e9347073c3e7875bd
#: ../../topics/forms/media.txt:233
msgid "But if :setting:`STATIC_URL` is ``'http://static.example.com/'``::"
msgstr "Mai si :setting:`STATIC_URL` vaut ``'http://static.example.com/'``::"

# 0a8ba2ff769b4cbda65ae8e8ecb5d901
#: ../../topics/forms/media.txt:243
msgid "``Media`` objects"
msgstr "Objets ``Media``"

# 2ad61b2dc67c4733879366c612a7ba73
#: ../../topics/forms/media.txt:245
msgid ""
"When you interrogate the ``media`` attribute of a widget or form, the value "
"that is returned is a ``forms.Media`` object. As we have already seen, the "
"string representation of a ``Media`` object is the HTML required to include "
"the relevant files in the ``<head>`` block of your HTML page."
msgstr "Lorsque vous interrogez l'attribut ``media`` d'un composant ou d'un formulaire, la valeur renvoyée est un objet ``forms.Media``. Comme nous l'avons déjà vu, la représentation textuelle d'un objet ``Media`` contient le code HTML nécessaire pour inclure les fichiers concernés dans le bloc ``<head>`` de votre page HTML."

# c63e5e7fd6e3415782e02a39ddf74662
#: ../../topics/forms/media.txt:251
msgid "However, ``Media`` objects have some other interesting properties."
msgstr "Cependant, les objets ``Media`` ont certaines autres propriétés intéressantes."

# 01fce3f8943c41da95ca94ecfa19b4b3
#: ../../topics/forms/media.txt:254
msgid "Subsets of assets"
msgstr "Sous-ensembles de fichiers annexes"

# fa5ba4b2a6754ee280ac6071b9d3e7d0
#: ../../topics/forms/media.txt:256
msgid ""
"If you only want files of a particular type, you can use the subscript "
"operator to filter out a medium of interest. For example::"
msgstr "Si vous ne souhaitez obtenir que les fichiers d'un type particulier, vous pouvez utiliser l'opérateur d'indice pour filtrer le support qui vous intéresse. Par exemple ::"

# 61e68d72f2b44ac8b5e27bd9edd2ddc1
#: ../../topics/forms/media.txt:268
msgid ""
"When you use the subscript operator, the value that is returned is a new "
"``Media`` object -- but one that only contains the media of interest."
msgstr "Lorsque vous employez l'opérateur d'indice, la valeur renvoyée est un nouvel objet ``Media``, mais qui ne contient que les fichiers qui vous intéressent."

# 4d56073408d14bd79d6f4f4529ca31d2
#: ../../topics/forms/media.txt:272
msgid "Combining ``Media`` objects"
msgstr "Combinaison d'objets ``Media``"

# 3b7a4dec6f68414ebb73ebbed6288152
#: ../../topics/forms/media.txt:274
msgid ""
"``Media`` objects can also be added together. When two ``Media`` objects are"
" added, the resulting ``Media`` object contains the union of the assets "
"specified by both::"
msgstr "Les objets ``Media`` peuvent aussi être fusionnés. Lorsque l'on additionne deux objets ``Media``, l'objet ``Media`` résultant contient l'union des fichiers annexes contenus dans les deux objets ::"

# 3639dc65b3964325bf9e73a590ce2905
#: ../../topics/forms/media.txt:299
msgid "``Media`` on Forms"
msgstr "``Media`` pour les formulaires"

# e0db1d61d78c4c8195a947b21a5d475a
#: ../../topics/forms/media.txt:301
msgid ""
"Widgets aren't the only objects that can have ``media`` definitions -- forms"
" can also define ``media``. The rules for ``media`` definitions on forms are"
" the same as the rules for widgets: declarations can be static or dynamic; "
"path and inheritance rules for those declarations are exactly the same."
msgstr "Les composants ne sont pas les seuls objets qui peuvent posséder des définitions ``media``, les formulaires peuvent aussi en définir. Les règles concernant les définitions ``media`` des formulaires sont les mêmes que pour les composants : les déclarations peuvent être statiques ou dynamiques ; les règles des chemins et de l'héritage de ces déclarations sont également identiques."

# 98646424bf474f6eac09b8ae75c944b9
#: ../../topics/forms/media.txt:307
msgid ""
"Regardless of whether you define a ``media`` declaration, *all* Form objects"
" have a ``media`` property. The default value for this property is the "
"result of adding the ``media`` definitions for all widgets that are part of "
"the form::"
msgstr "Que vous définissiez une déclaration ``media`` ou non, *tous* les objets ``Form`` possèdent une propriété ``media``. La valeur par défaut de cette propriété est le résultat de la fusion de toutes les définitions ``media`` de tous les composants du formulaire ::"

# ccb603f91f1149abbe9b6762d95f91eb
#: ../../topics/forms/media.txt:324
msgid ""
"If you want to associate additional assets with a form -- for example, CSS "
"for form layout -- simply add a ``Media`` declaration to the form::"
msgstr "Si vous souhaitez associer des fichiers annexes supplémentaires à un formulaire, par exemple des règles CSS pour la mise en forme du formulaire, ajoutez simplement une déclaration ``Media`` au formulaire ::"

# 4f0af2b3b38c40aea13aed50a7d264b4
#: ../../topics/forms/modelforms.txt:3
msgid "Creating forms from models"
msgstr "Création de formulaires à partir de modèles"

# 016a56592bbf4d9aa2032b1c570a5ca4
#: ../../topics/forms/modelforms.txt:11
msgid "``ModelForm``"
msgstr "``ModelForm``"

# 84a60adf95974c229d40b864fcc9ba65
#: ../../topics/forms/modelforms.txt:14
msgid ""
"If you're building a database-driven app, chances are you'll have forms that"
" map closely to Django models. For instance, you might have a "
"``BlogComment`` model, and you want to create a form that lets people submit"
" comments. In this case, it would be redundant to define the field types in "
"your form, because you've already defined the fields in your model."
msgstr "Si vous construisez une application basée sur une base de données, il y a des chances pour que vos formulaires correspondent étroitement avec les modèles Django. Par exemple, vous pourriez avoir un modèle ``BlogComment`` et vouloir créer un formulaire permettant d'envoyer des commentaires. Dans ce cas, il serait redondant de devoir définir les types de champs du formulaire, car vous avez déjà défini des champs au niveau du modèle."

# fbc248645d214c9da8485c084083038f
#: ../../topics/forms/modelforms.txt:20
msgid ""
"For this reason, Django provides a helper class that lets you create a "
"``Form`` class from a Django model."
msgstr "C'est pour cette raison que Django fournit une classe utilitaire permettant de créer une classe de formulaire ``Form`` à partir d'un modèle Django."

# 4fdac530ca594c1c88ea1d88e14dac31
#: ../../topics/forms/modelforms.txt:44
msgid ""
"The generated ``Form`` class will have a form field for every model field "
"specified, in the order specified in the ``fields`` attribute."
msgstr "La classe de formulaire générée contiendra un champ de formulaire pour chaque champ de modèle inclus, dans l'ordre indiqué par l'attribut ``fields``."

# 927ed1407101403faa228ee514ef87c7
#: ../../topics/forms/modelforms.txt:47
msgid ""
"Each model field has a corresponding default form field. For example, a "
"``CharField`` on a model is represented as a ``CharField`` on a form. A "
"model ``ManyToManyField`` is represented as a ``MultipleChoiceField``. Here "
"is the full list of conversions:"
msgstr "Chaque champ de modèle possède un champ de formulaire par défaut. Par exemple, le champ ``CharField`` d'un modèle est représenté par un champ de formulaire ``CharField``. Un champ ``ManyToManyField`` d'un modèle est représenté par un champ de formulaire ``MultipleChoiceField``. Voici la liste complète des correspondances :"

# 42a9b7cd44024673a76b83c88d03c3e2
#: ../../topics/forms/modelforms.txt:53
msgid "Model field"
msgstr "Champ de modèle"

# 9da684daffde422cb609634f0f682288
#: ../../topics/forms/modelforms.txt:53
msgid "Form field"
msgstr "Champ de formulaire"

# 428f3fffd32447bd8fa92e6bc563615b
#: ../../topics/forms/modelforms.txt:55
msgid "``AutoField``"
msgstr "``AutoField``"

# acb98816316b4501be4cd4f53f10b8ea
#: ../../topics/forms/modelforms.txt:55
msgid "Not represented in the form"
msgstr "Non représenté dans le formulaire"

# 129dedd8a1b049d2b47baf556ca2d5f7
#: ../../topics/forms/modelforms.txt:57
msgid "``BigIntegerField``"
msgstr "``BigIntegerField``"

# f23fab3e99384c41b65da381ab1d62bc
#: ../../topics/forms/modelforms.txt:57
msgid ""
"``IntegerField`` with ``min_value`` set to -9223372036854775808 and "
"``max_value`` set to 9223372036854775807."
msgstr "``IntegerField`` avec ``min_value`` définie à -9223372036854775808 et ``max_value`` définie à 9223372036854775807."

# 7ac87c5048a146f993d7b310d6099d15
# be887072eef44b9caa6bd08d27e32860
#: ../../topics/forms/modelforms.txt:61 ../../topics/forms/modelforms.txt:61
msgid "``BooleanField``"
msgstr "``BooleanField``"

# 732c91b2a5bb4bdea3b01dfdf3a66a91
# cfa39f09d52a4978b23960e827caedcb
# b14f3b3f997343db97aeb69b22d7c58e
#: ../../topics/forms/modelforms.txt:63 ../../topics/forms/modelforms.txt:66
#: ../../topics/forms/modelforms.txt:95
msgid "``CharField``"
msgstr "``CharField``"

# d00fa7c4d9bb4651ab35d5d882bbd660
#: ../../topics/forms/modelforms.txt:63
msgid ""
"``CharField`` with ``max_length`` set to the model field's ``max_length``"
msgstr "``CharField`` avec ``max_length`` définie à la même valeur que ``max_length`` du champ de modèle"

# 38bb15684f324a0d9ea7f559119f0ba7
#: ../../topics/forms/modelforms.txt:66
msgid "``CommaSeparatedIntegerField``"
msgstr "``CommaSeparatedIntegerField``"

# f50cef2da4b84353b75f6d5cbbceaed2
# 9b220bb0f53a4ee8adf3207b0ff55b9a
#: ../../topics/forms/modelforms.txt:68 ../../topics/forms/modelforms.txt:68
msgid "``DateField``"
msgstr "``DateField``"

# febaa20a2b844b9fb1e9491f971fa8bd
# 794fd5264cca47a7b86909a486eb87cd
#: ../../topics/forms/modelforms.txt:70 ../../topics/forms/modelforms.txt:70
msgid "``DateTimeField``"
msgstr "``DateTimeField``"

# ac0ba22c5bef449ea70fb3224d12a441
# a8818eb4a9b04d70be41b98f220893c1
#: ../../topics/forms/modelforms.txt:72 ../../topics/forms/modelforms.txt:72
msgid "``DecimalField``"
msgstr "``DecimalField``"

# d0babce3f4e64e3092a3cffba4a24e00
# 8a36b2cdaf6d402d97bf444a801a0e29
#: ../../topics/forms/modelforms.txt:74 ../../topics/forms/modelforms.txt:74
msgid "``EmailField``"
msgstr "``EmailField``"

# 613a1b77d80b429fa39b63d481eff90d
# d2c84590856347a495bfb080700a16aa
#: ../../topics/forms/modelforms.txt:76 ../../topics/forms/modelforms.txt:76
msgid "``FileField``"
msgstr "``FileField``"

# 27fe6c58001f4e1faab3b72614d82ed6
# 6a67a5d1c4674587b0976d8632ef9f12
#: ../../topics/forms/modelforms.txt:78 ../../topics/forms/modelforms.txt:78
msgid "``FilePathField``"
msgstr "``FilePathField``"

# 2f6573c49ed345949bb3a6d5b39dbf5c
# 3f8a59775cf9447e899a475d9a3ef2b7
#: ../../topics/forms/modelforms.txt:80 ../../topics/forms/modelforms.txt:80
msgid "``FloatField``"
msgstr "``FloatField``"

# 1e7e29e86c124a6e81f1653f6f88d5ed
#: ../../topics/forms/modelforms.txt:82
msgid "``ForeignKey``"
msgstr "``ForeignKey``"

# 158c789ab52d4018866c73a08db624da
#: ../../topics/forms/modelforms.txt:82
msgid "``ModelChoiceField`` (see below)"
msgstr "``ModelChoiceField`` (voir ci-dessous)"

# f6f2b618e77e42ccb9314ae6a806330a
# 4424a3894639419d879850b1a3d9afad
#: ../../topics/forms/modelforms.txt:84 ../../topics/forms/modelforms.txt:84
msgid "``ImageField``"
msgstr "``ImageField``"

# 12def06cd77548218495d29fa5d3fe7d
# 7204262aa6da4dd3a32df13c11e4571b
# f86dd887733146898ae9179f43d3a3eb
# f9bfc991ff734abeb918d95d46177c9c
# 23401ba2889d41dcaa3f81b8e15be511
#: ../../topics/forms/modelforms.txt:86 ../../topics/forms/modelforms.txt:86
#: ../../topics/forms/modelforms.txt:97 ../../topics/forms/modelforms.txt:99
#: ../../topics/forms/modelforms.txt:103
msgid "``IntegerField``"
msgstr "``IntegerField``"

# bb70cfb3d6474c329f18b78b07dbe5d9
# 7db9ddb3b53547dc9ff855060bc79933
#: ../../topics/forms/modelforms.txt:88 ../../topics/forms/modelforms.txt:88
msgid "``IPAddressField``"
msgstr "``IPAddressField``"

# 7c8de659fe234743a31456ec9ded18c1
# 192229ac457440968797531ae876b685
#: ../../topics/forms/modelforms.txt:90 ../../topics/forms/modelforms.txt:90
msgid "``GenericIPAddressField``"
msgstr "``GenericIPAddressField``"

# b528829810a741589b2831f7f4a93956
#: ../../topics/forms/modelforms.txt:92
msgid "``ManyToManyField``"
msgstr "``ManyToManyField``"

# 7c836cecacef4606a536d35c41969d04
#: ../../topics/forms/modelforms.txt:92
msgid "``ModelMultipleChoiceField`` (see below)"
msgstr "``ModelMultipleChoiceField`` (voir ci-dessous)"

# 6d04aa50d7c64c05a17744df5bc8185e
#: ../../topics/forms/modelforms.txt:95
msgid "``NullBooleanField``"
msgstr "``NullBooleanField``"

# 9a3f7f3e91894505bb98f0b177c3022f
#: ../../topics/forms/modelforms.txt:97
msgid "``PositiveIntegerField``"
msgstr "``PositiveIntegerField``"

# 15232a157273498d9c4e95c87eed314f
#: ../../topics/forms/modelforms.txt:99
msgid "``PositiveSmallIntegerField``"
msgstr "``PositiveSmallIntegerField``"

# 35b09f68a2dd43bd9b802912bd6f64cf
# 9eda2414cac54feaac8554a31e588b46
#: ../../topics/forms/modelforms.txt:101 ../../topics/forms/modelforms.txt:101
msgid "``SlugField``"
msgstr "``SlugField``"

# 21f827114e574569b7072751b6ca7025
#: ../../topics/forms/modelforms.txt:103
msgid "``SmallIntegerField``"
msgstr "``SmallIntegerField``"

# 1cc81cbf6d6d48b0b9e26388a990a5d6
#: ../../topics/forms/modelforms.txt:105
msgid "``TextField``"
msgstr "``TextField``"

# 3236a5c9ee134798bddec08c7a7a91d0
#: ../../topics/forms/modelforms.txt:105
msgid "``CharField`` with ``widget=forms.Textarea``"
msgstr "``CharField`` avec ``widget=forms.Textarea``"

# dbf5df325f454b42b79d40fd3a8eaff7
# 56c349e366724eb38a085ba1f5136784
#: ../../topics/forms/modelforms.txt:108 ../../topics/forms/modelforms.txt:108
msgid "``TimeField``"
msgstr "``TimeField``"

# ab411783c92c4418b0a1c960d194a016
# 8b1b43295dad473993bd648e3b6e7bac
#: ../../topics/forms/modelforms.txt:110 ../../topics/forms/modelforms.txt:110
msgid "``URLField``"
msgstr "``URLField``"

# bb5ca429f21546628c82195df1b5c883
#: ../../topics/forms/modelforms.txt:114
msgid ""
"As you might expect, the ``ForeignKey`` and ``ManyToManyField`` model field "
"types are special cases:"
msgstr "Comme l'on peut s'y attendre, les champs de modèle de type ``ForeignKey`` et ``ManyToManyField`` sont des cas spéciaux :"

# b0a1f5391d3241588b82e8991c081176
#: ../../topics/forms/modelforms.txt:117
msgid ""
"``ForeignKey`` is represented by ``django.forms.ModelChoiceField``, which is"
" a ``ChoiceField`` whose choices are a model ``QuerySet``."
msgstr "``ForeignKey`` est représenté par ``django.forms.ModelChoiceField``, qui est un champ ``ChoiceField``  dont les choix possibles sont définis par le ``QuerySet`` d'un modèle."

# 007e3f7a5f3f40adbb292f7f416ffca8
#: ../../topics/forms/modelforms.txt:120
msgid ""
"``ManyToManyField`` is represented by "
"``django.forms.ModelMultipleChoiceField``, which is a "
"``MultipleChoiceField`` whose choices are a model ``QuerySet``."
msgstr "``ManyToManyField`` est représenté par un ``django.forms.ModelMultipleChoiceField``, qui est un champ ``MultipleChoiceField`` dont les choix possibles sont définis par le ``QuerySet`` d'un modèle."

# db5f25c66af044c5a30d192e3e821994
#: ../../topics/forms/modelforms.txt:124
msgid "In addition, each generated form field has attributes set as follows:"
msgstr "De plus, chaque champ de formulaire généré possède les attributs comme suit :"

# 3a121c3d504d47aa8963256079711f7a
#: ../../topics/forms/modelforms.txt:126
msgid ""
"If the model field has ``blank=True``, then ``required`` is set to ``False``"
" on the form field. Otherwise, ``required=True``."
msgstr "Si le champ de modèle a ``blank=True``, ``required`` est alors défini à ``False`` dans le champ de formulaire. Sinon, ``required=True``."

# 2584aa2a6cae4a4b8cee4a5c0df2884a
#: ../../topics/forms/modelforms.txt:129
msgid ""
"The form field's ``label`` is set to the ``verbose_name`` of the model "
"field, with the first character capitalized."
msgstr "L'étiquette (``label``) du champ de formulaire est défini à la valeur ``verbose_name`` du champ de modèle, avec le premier caractère en majuscules."

# 2c656824a2764c53952889e042feaf28
#: ../../topics/forms/modelforms.txt:132
msgid ""
"The form field's ``help_text`` is set to the ``help_text`` of the model "
"field."
msgstr "La valeur ``help_text`` du champ de formulaire est définie à la valeur ``help_text`` du champ de modèle."

# a3624741b0724c8eaafb9929798387f6
#: ../../topics/forms/modelforms.txt:135
msgid ""
"If the model field has ``choices`` set, then the form field's ``widget`` "
"will be set to ``Select``, with choices coming from the model field's "
"``choices``. The choices will normally include the blank choice which is "
"selected by default. If the field is required, this forces the user to make "
"a selection. The blank choice will not be included if the model field has "
"``blank=False`` and an explicit ``default`` value (the ``default`` value "
"will be initially selected instead)."
msgstr "Si la valeur ``choices`` d'un champ de modèle est définie, le composant ( ``widget``) du champ de formulaire sera de type ``Select`` dont les choix proviendront de la valeur ``choices`` du champ de modèle. Ces choix incluent normalement le choix vierge qui est sélectionné par défaut. Si le champ est obligatoire, cela force l'utilisateur à faire un choix. Le choix vierge n'est pas inclus si le champ de modèle a ``blank=False`` ainsi qu'une valeur par défaut (``default``) explicite (c'est la valeur ``default`` qui sera initialement sélectionnée)."

# b5d6f88886bd4d6eaa61383d1de0b2f9
#: ../../topics/forms/modelforms.txt:143
msgid ""
"Finally, note that you can override the form field used for a given model "
"field. See `Overriding the default fields`_ below."
msgstr "Pour terminer, notez que vous pouvez surcharger le champ de formulaire utilisé pour un champ de modèle donné. Consultez `Surcharge des champs par défaut`_ ci-dessous."

# 8981b964b169495c824173081748ae41
#: ../../topics/forms/modelforms.txt:149
msgid "Consider this set of models::"
msgstr "Considérez cet ensemble de modèles ::"

# a0c2086e679e4a49b6f02ed48d46d80f
#: ../../topics/forms/modelforms.txt:184
msgid ""
"With these models, the ``ModelForm`` subclasses above would be roughly "
"equivalent to this (the only difference being the ``save()`` method, which "
"we'll discuss in a moment.)::"
msgstr "Avec ces modèles, les sous-classes ``ModelForm`` ci-dessus seraient à peu près équivalentes à ceci (avec comme seule différence la méthode ``save()`` que nous aborderons dans un moment) ::"

# fbdfd22942c64eb6b2399346e6934f72
#: ../../topics/forms/modelforms.txt:203
msgid "Validation on a ``ModelForm``"
msgstr "Validation d'un ``ModelForm``"

# 8b56bdb8179a4e14b1d8bc167b0309e6
#: ../../topics/forms/modelforms.txt:205
msgid "There are two main steps involved in validating a ``ModelForm``:"
msgstr "La validation d'un ``ModelForm`` se distingue en deux étapes importantes :"

# 310dd7efe8694ab0861427c3c52a87bf
#: ../../topics/forms/modelforms.txt:207
msgid ":ref:`Validating the form <form-and-field-validation>`"
msgstr "La :ref:`validation du formulaire <form-and-field-validation>`"

# b413d0db3bef43d8857ef0962be4bc4a
#: ../../topics/forms/modelforms.txt:208
msgid ":ref:`Validating the model instance <validating-objects>`"
msgstr "La :ref:`validation de l'instance de modèle <validating-objects>`"

# 3cdc3f9d469d4849a2b4c5668c2cd58e
#: ../../topics/forms/modelforms.txt:210
msgid ""
"Just like normal form validation, model form validation is triggered "
"implicitly when calling :meth:`~django.forms.Form.is_valid()` or accessing "
"the :attr:`~django.forms.Form.errors` attribute and explicitly when calling "
"``full_clean()``, although you will typically not use the latter method in "
"practice."
msgstr "Comme pour la validation de formulaire normale, la validation des formulaires de modèle est déclenchée implicitement lors de l'appel à :meth:`~django.forms.Form.is_valid()` ou par l'accession à l'attribut :attr:`~django.forms.Form.errors`, ou explicitement en appelant ``full_clean()``, même si en pratique cette dernière méthode est rarement utilisée."

# 692d8dee60714e74a62747a1a2735d08
#: ../../topics/forms/modelforms.txt:216
msgid ""
"``Model`` validation (:meth:`Model.full_clean() "
"<django.db.models.Model.full_clean()>`) is triggered from within the form "
"validation step, right after the form's ``clean()`` method is called."
msgstr "La validation de ``Model`` (:meth:`Model.full_clean() <django.db.models.Model.full_clean()>`) est déclenchée à l'intérieur de l'étape de validation de formulaire, juste après l'appel à la méthode ``clean()`` du formulaire."

# 985cbe2eca2945d3a025935dae3c1bc2
#: ../../topics/forms/modelforms.txt:222
msgid ""
"The cleaning process modifies the model instance passed to the ``ModelForm``"
" constructor in various ways. For instance, any date fields on the model are"
" converted into actual date objects. Failed validation may leave the "
"underlying model instance in an inconsistent state and therefore it's not "
"recommended to reuse it."
msgstr "Le processus de nettoyage modifie l'instance de modèle transmise au constructeur de ``ModelForm`` de plusieurs manières. Par exemple, toute valeur de champ date du modèle est convertie en vrai objet date. Une validation qui échoue peut laisser l'instance de modèle sous-jacente dans un état non cohérent et il n'est donc pas conseillé de la réutiliser."

# 7f14b3490d8a40c28bbede3df84fa9c9
#: ../../topics/forms/modelforms.txt:231
msgid "Overriding the clean() method"
msgstr "Surcharge de la méthode clean()"

# 2ae6b50fe6f24d4ab07f8a30336cfbb9
#: ../../topics/forms/modelforms.txt:233
msgid ""
"You can override the ``clean()`` method on a model form to provide "
"additional validation in the same way you can on a normal form."
msgstr "Vous pouvez surcharger la méthode ``clean()`` d'un formulaire de modèle pour procéder à des validations supplémentaires de la même manière que pour un formulaire normal."

# 812f32e9be914d08a4e7e6f7a8f9ae3d
#: ../../topics/forms/modelforms.txt:236
msgid ""
"A model form instance bound to a model object will contain an ``instance`` "
"attribute that gives its methods access to that specific model instance."
msgstr "Une instance de formulaire de modèle liée à un objet modèle contient un attribut ``instance`` qui donne à ses méthodes l'accès à cette instance de modèle spécifique."

# 350fd7362d9a47848afb9cedd29f6796
#: ../../topics/forms/modelforms.txt:241
msgid ""
"The ``ModelForm.clean()`` method sets a flag that makes the :ref:`model "
"validation <validating-objects>` step validate the uniqueness of model "
"fields that are marked as ``unique``, ``unique_together`` or "
"``unique_for_date|month|year``."
msgstr "La méthode ``ModelForm.clean()`` définit un drapeau qui fait que l'étape de :ref:`validation de modèle <validating-objects>` valide l'unicité des champs de modèle marqués comme ``unique``, ``unique_together`` ou ``unique_for_date|month|year``."

# c0ef58dcde374215b9724ba365d212bf
#: ../../topics/forms/modelforms.txt:246
msgid ""
"If you would like to override the ``clean()`` method and maintain this "
"validation, you must call the parent class's ``clean()`` method."
msgstr "Si vous souhaitez surcharger la méthode ``clean()`` et maintenir cette validation, vous devez appeler la méthode ``clean()`` de la classe parente."

# 61e7ee5906fb45c49d898d7acaece58f
#: ../../topics/forms/modelforms.txt:250
msgid "Interaction with model validation"
msgstr "Interactions avec la validation des modèles"

# f49a97458ce445b494a08789bc338ece
#: ../../topics/forms/modelforms.txt:252
msgid ""
"As part of the validation process, ``ModelForm`` will call the ``clean()`` "
"method of each field on your model that has a corresponding field on your "
"form. If you have excluded any model fields, validation will not be run on "
"those fields. See the :doc:`form validation </ref/forms/validation>` "
"documentation for more on how field cleaning and validation work."
msgstr "Dans le cadre du processus de validation, ``ModelForm`` appelle la méthode ``clean()`` de chaque champ du modèle possédant un champ de formulaire correspondant. Si vous avez exclu des champs de modèle, la validation ne sera pas effectuée pour ces champs. Consultez la documentation de la :doc:`validation des formulaires </ref/forms/validation>` pour en savoir plus sur le fonctionnement du nettoyage et de la validation des champs."

# 0a217726319f47ce8d310215912e8418
#: ../../topics/forms/modelforms.txt:258
msgid ""
"The model's ``clean()`` method will be called before any uniqueness checks "
"are made. See :ref:`Validating objects <validating-objects>` for more "
"information on the model's ``clean()`` hook."
msgstr "La méthode ``clean()`` du modèle est appelée avant les contrôles d'unicité. Consultez la :ref:`validation des objets <validating-objects>` pour plus d'informations sur la méthode ``clean()`` des modèles."

# 20a5a2c3486046a5b5fa5c642894c118
#: ../../topics/forms/modelforms.txt:263
msgid "Considerations regarding fields' ``error_messages``"
msgstr "Considérations sur les messages d'erreur des champs"

# a798f2da463a418f89fd9d67e376649b
#: ../../topics/forms/modelforms.txt:265
msgid ""
"Error messages defined at the :attr:`form field "
"<django.forms.Field.error_messages>` level or at the :ref:`form Meta "
"<modelforms-overriding-default-fields>` level always take precedence over "
"the error messages defined at the :attr:`model field "
"<django.db.models.Field.error_messages>` level. Error messages  defined on "
":attr:`model fields <django.db.models.Field.error_messages>` are only used "
"when the ``ValidationError`` is raised during the :ref:`model validation "
"<validating-objects>` step and no corresponding error messages are defined "
"at the form level."
msgstr "Les messages d'erreur définis au niveau des :attr:`champs de formulaire <django.forms.Field.error_messages>` ou au niveau de la :ref:`classe Meta de formulaire <modelforms-overriding-default-fields>` ont toujours la priorité sur les messages d'erreur définis au niveau des :attr:`champs de modèle <django.db.models.Field.error_messages>`. Ces derniers ne sont utilisés que lorsqu'une erreur ``ValidationError`` est générée à l'étape de :ref:`validation du modèle  <validating-objects>` et qu'aucun message d'erreur correspondant n'est défini au niveau du formulaire."

# d6f48d7bc18743e1bfedee36b16c56f3
#: ../../topics/forms/modelforms.txt:277
msgid "The ``save()`` method"
msgstr "La méthode ``save()``"

# ba03ba04d8e94bd4ad1c52a9fe480702
#: ../../topics/forms/modelforms.txt:279
msgid ""
"Every ``ModelForm`` also has a ``save()`` method. This method creates and "
"saves a database object from the data bound to the form. A subclass of "
"``ModelForm`` can accept an existing model instance as the keyword argument "
"``instance``; if this is supplied, ``save()`` will update that instance. If "
"it's not supplied, ``save()`` will create a new instance of the specified "
"model:"
msgstr "Chaque ``ModelForm`` possède aussi une méthode ``save()``. Celle-ci crée et enregistre un objet en base de données à partir des données saisies dans le formulaire. Une sous-classe de ``ModelForm`` peut accepter une instance existante de modèle par le paramètre nommé ``instance``. Si celui-ci est présent, ``save()`` met à jour cette instance. Dans le cas contraire, ``save()`` crée une nouvelle instance du modèle concerné :"

# 9b9bde098f31497d82f76fa6f7260e89
#: ../../topics/forms/modelforms.txt:302
msgid ""
"Note that if the form :ref:`hasn't been validated <validation-on-"
"modelform>`, calling ``save()`` will do so by checking ``form.errors``. A "
"``ValueError`` will be raised if the data in the form doesn't validate -- "
"i.e., if ``form.errors`` evaluates to ``True``."
msgstr "Notez que si le formulaire :ref:`n'a pas été validé <validation-on-modelform>`, l'appel à ``save()`` s'en occupera en contrôlant ``form.errors``. Une erreur ``ValueError`` est générée si les données du formulaire ne sont pas valides, par exemple si ``form.errors`` est évalué à ``True``."

# ac5bba957ae04d4989bc1364782e9d6f
#: ../../topics/forms/modelforms.txt:307
msgid ""
"This ``save()`` method accepts an optional ``commit`` keyword argument, "
"which accepts either ``True`` or ``False``. If you call ``save()`` with "
"``commit=False``, then it will return an object that hasn't yet been saved "
"to the database. In this case, it's up to you to call ``save()`` on the "
"resulting model instance. This is useful if you want to do custom processing"
" on the object before saving it, or if you want to use one of the "
"specialized :ref:`model saving options <ref-models-force-insert>`. "
"``commit`` is ``True`` by default."
msgstr "Cette méthode ``save()`` accepte un paramètre nommé facultatif ``commit``, qui accepte les valeurs ``True`` ou ``False``. Si vous appelez ``save()`` avec ``commit=False``, elle renvoie un objet qui n'aura pas encore été enregistré dans la base de données. Dans ce cas, c'est à vous d'appeler ``save()`` sur l'instance de modèle obtenue. C'est utile lorsque vous souhaitez effectuer un traitement particulier sur l'objet avant qu'il soit enregistré, ou si vous voulez utiliser l'une des :ref:`options d'enregistrement de modèle <ref-models-force-insert>` spécialisées. ``commit`` vaut ``True`` par défaut."

# e8b2820d4945489fa6cf77565c83bcd2
#: ../../topics/forms/modelforms.txt:316
msgid ""
"Another side effect of using ``commit=False`` is seen when your model has a "
"many-to-many relation with another model. If your model has a many-to-many "
"relation and you specify ``commit=False`` when you save a form, Django "
"cannot immediately save the form data for the many-to-many relation. This is"
" because it isn't possible to save many-to-many data for an instance until "
"the instance exists in the database."
msgstr "Un autre effet de bord de l'utilisation de ``commit=False`` se voit lorsque le modèle possède une relation plusieurs-à-plusieurs vers un autre modèle. Dans ce cas, Django ne peut pas enregistrer immédiatement les données du formulaire de la relation plusieurs-à-plusieurs. La raison est qu'il n'est pas possible d'enregistrer des données plusieurs-à-plusieurs propres à une instance si celle-ci n'existe pas encore dans la base de données."

# 7101bc2b353b4c5f9cf796954c3354d1
#: ../../topics/forms/modelforms.txt:323
msgid ""
"To work around this problem, every time you save a form using "
"``commit=False``, Django adds a ``save_m2m()`` method to your ``ModelForm`` "
"subclass. After you've manually saved the instance produced by the form, you"
" can invoke ``save_m2m()`` to save the many-to-many form data. For example:"
msgstr "Pour contourner ce problème, chaque fois que vous enregistrez un formulaire avec ``commit=False``, Django ajoute une méthode ``save_m2m()`` à la sous-classe de votre ``ModelForm``. Après avoir manuellement enregistré l'instance dérivée du formulaire, vous pouvez appeler ``save_m2m()`` pour enregistrer les données de formulaire de type plusieurs-à-plusieurs. Par exemple :"

# 4599c95f93df4a3b83f6b142054a5f18
#: ../../topics/forms/modelforms.txt:345
msgid ""
"Calling ``save_m2m()`` is only required if you use ``save(commit=False)``. "
"When you use a simple ``save()`` on a form, all data -- including many-to-"
"many data -- is saved without the need for any additional method calls. For "
"example:"
msgstr "Il n'est utile d'appeler ``save_m2m()`` que si vous utilisez ``save(commit=False)``. Lorsque vous appelez simplement la méthode ``save()`` d'un formulaire, toutes les données, y compris les données plusieurs-à-plusieurs, sont enregistrées sans avoir besoin de faire quoi que ce soit d'autre. Par exemple :"

# 2125fa3434714fa38570503a101eda15
#: ../../topics/forms/modelforms.txt:359
msgid ""
"Other than the ``save()`` and ``save_m2m()`` methods, a ``ModelForm`` works "
"exactly the same way as any other ``forms`` form. For example, the "
"``is_valid()`` method is used to check for validity, the ``is_multipart()`` "
"method is used to determine whether a form requires multipart file upload "
"(and hence whether ``request.FILES`` must be passed to the form), etc. See "
":ref:`binding-uploaded-files` for more information."
msgstr "À part les méthodes ``save()`` et ``save_m2m()``, un ``ModelForm`` fonctionne exactement de la même manière que tout autre formulaire ``forms``. Par exemple, la méthode ``is_valid()`` est utilisée pour vérifier la validité, la méthode ``is_multipart()`` est utilisée pour déterminer si un formulaire nécessite un envoi de fichier ``multipart`` (et donc que ``request.FILES`` doit être transmis au formulaire), etc. Voir :ref:`binding-uploaded-files` pour plus d'informations."

# 8793116c84c1419598c5f4d921ffd83a
#: ../../topics/forms/modelforms.txt:369
msgid "Selecting the fields to use"
msgstr "Sélection des champs à utiliser"

# ac161304e91c49f59255c320ee56d8fb
#: ../../topics/forms/modelforms.txt:371
msgid ""
"It is strongly recommended that you explicitly set all fields that should be"
" edited in the form using the ``fields`` attribute. Failure to do so can "
"easily lead to security problems when a form unexpectedly allows a user to "
"set certain fields, especially when new fields are added to a model. "
"Depending on how the form is rendered, the problem may not even be visible "
"on the web page."
msgstr "Il est fortement recommandé de définir explicitement tous les champs qui doivent être présents dans le formulaire en utilisant l'attribut ``fields``. Si vous ne le faites pas, cela peut facilement devenir source de problèmes de sécurité lorsqu'un formulaire permet à un utilisateur de définir certains champs de manière non prévue, particulièrement lorsqu'on ajoute de nouveaux champs à un modèle. En fonction de la façon dont le formulaire est affiché, il est même possible que le problème ne soit pas visible sur la page Web."

# 0a6653f8da1a400f8e88d8e155d16b4f
#: ../../topics/forms/modelforms.txt:377
msgid ""
"The alternative approach would be to include all fields automatically, or "
"blacklist only some. This fundamental approach is known to be much less "
"secure and has led to serious exploits on major websites (e.g. `GitHub "
"<https://github.com/blog/1068-public-key-security-vulnerability-and-"
"mitigation>`_)."
msgstr "Une autre approche est d'inclure automatiquement tous les champs ou d'en exclure certains. Mais à la base, cette approche est notoirement moins sécurisée et a déjà abouti à des failles sévères sur des sites Web célèbres (par ex. `GitHub <https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation>`_)."

# b5301a9adc104f2e91f59d45ca436ef8
#: ../../topics/forms/modelforms.txt:382
msgid ""
"There are, however, two shortcuts available for cases where you can "
"guarantee these security concerns do not apply to you:"
msgstr "Il existe toutefois deux raccourcis disponibles pour les cas où vous pouvez garantir que ces questions de sécurité ne s'appliquent pas à votre situation :"

# b5f6dd8c74dd4a1288e6806b1691e8bc
#: ../../topics/forms/modelforms.txt:385
msgid ""
"Set the ``fields`` attribute to the special value ``'__all__'`` to indicate "
"that all fields in the model should be used. For example::"
msgstr "Définir l'attribut ``fields`` à la valeur spéciale ``'__all__'`` pour indiquer que tous les champs du modèle doivent être utilisés. Par exemple ::"

# 6a84ec8137f24403bc762f17ce67d1d9
#: ../../topics/forms/modelforms.txt:395
msgid ""
"Set the ``exclude`` attribute of the ``ModelForm``’s inner ``Meta`` class to"
" a list of fields to be excluded from the form."
msgstr "Définir l'attribut ``exclude`` de la classe interne ``Meta`` du ``ModelForm`` à une liste de champs à exclure du formulaire."

# c4f0435eca8343478feec261c90b40be
#: ../../topics/forms/modelforms.txt:405
msgid ""
"Since the ``Author`` model has the 3 fields ``name``, ``title`` and "
"``birth_date``, this will result in the fields ``name`` and ``birth_date`` "
"being present on the form."
msgstr "Comme le modèle ``Author`` possède les trois champs ``name``, ``title`` et ``birth_date``, nous nous retrouvons avec les champs ``name`` et ``birth_date`` affichés dans le formulaire."

# 17f64fc3c5574edcbe35174cc47441f1
#: ../../topics/forms/modelforms.txt:409
msgid ""
"If either of these are used, the order the fields appear in the form will be"
" the order the fields are defined in the model, with ``ManyToManyField`` "
"instances appearing last."
msgstr "Si l'une de ces techniques est employée, l'ordre d'apparition des champs dans le formulaire respecte l'ordre de définition des champs du modèle, avec les instances ``ManyToManyField`` apparaissant en dernier."

# 67a47b1b52e34d8fb08abc0bb591f75e
#: ../../topics/forms/modelforms.txt:413
msgid ""
"In addition, Django applies the following rule: if you set "
"``editable=False`` on the model field, *any* form created from the model via"
" ``ModelForm`` will not include that field."
msgstr "De plus, Django applique la règle suivante : si vous définissez ``editable=False`` au niveau du champ de modèle, *tout* formulaire créé à partir du modèle via ``ModelForm`` ne contiendra pas ce champ."

# e5da294238f5472c91706dad441a1896
#: ../../topics/forms/modelforms.txt:419
msgid ""
"Before version 1.6, the ``'__all__'`` shortcut did not exist, but omitting "
"the ``fields`` attribute had the same effect. Omitting both ``fields`` and "
"``exclude`` is now deprecated, but will continue to work as before until "
"version 1.8"
msgstr "Avant la version 1.6, le raccourci ``'__all__'`` n'existait pas, mais l'omission de l'attribut ``fields`` avait le même effet. L'omission à la fois de ``fields`` et ``exclude`` est actuellement obsolète, mais continuera de fonctionner comme avant jusqu'à la version 1.8."

# ec72ba4f8c2548a799aa1a3142f4fe24
#: ../../topics/forms/modelforms.txt:427
msgid ""
"Any fields not included in a form by the above logic will not be set by the "
"form's ``save()`` method. Also, if you manually add the excluded fields back"
" to the form, they will not be initialized from the model instance."
msgstr "Tout champ non inclus dans un formulaire par la logique ci-dessus ne sera pas touché par la méthode ``save()`` du formulaire. De même, si vous ajoutez manuellement dans un formulaire un champ initialement exclu, ce champ ne sera pas initialisé avec les données de l'instance de modèle. "

# b0bb950e1619463b8383f7a722626a6b
#: ../../topics/forms/modelforms.txt:432
msgid ""
"Django will prevent any attempt to save an incomplete model, so if the model"
" does not allow the missing fields to be empty, and does not provide a "
"default value for the missing fields, any attempt to ``save()`` a "
"``ModelForm`` with missing fields will fail.  To avoid this failure, you "
"must instantiate your model with initial values for the missing, but "
"required fields::"
msgstr "Django empêche toute tentative d'enregistrer un modèle incomplet. Si le modèle n'autorise pas les champs manquants à être vides et que ces champs n'ont pas de valeur par défaut, tout tentative d'appeler ``save()`` sur un ``ModelForm`` avec des champs manquants échouera. Pour éviter ce problème, vous devez créer une instance de modèle comportant des valeurs initiales pour les champs obligatoires manquants ::"

# dd4b5489fe674c318d79ecab7a08d950
#: ../../topics/forms/modelforms.txt:443
msgid ""
"Alternatively, you can use ``save(commit=False)`` and manually set any extra"
" required fields::"
msgstr "Une variante est d'utiliser ``save(commit=False)`` et de définir manuellement les champs obligatoires supplémentaires ::"

# b37a326f2087450c96a44f98676cf113
#: ../../topics/forms/modelforms.txt:451
msgid ""
"See the `section on saving forms`_ for more details on using "
"``save(commit=False)``."
msgstr "Consultez la `section sur l'enregistrement des formulaires`_ pour plus de détails sur l'utilisation de ``save(commit=False)``."

# df1aecadad934e1c85d2b6bd99c372fb
#: ../../topics/forms/modelforms.txt:459
msgid "Overriding the default fields"
msgstr "Surcharge des champs par défaut"

# 81392ffdb4a84ac196d84c93aebcf9f0
#: ../../topics/forms/modelforms.txt:461
msgid ""
"The default field types, as described in the `Field types`_ table above, are"
" sensible defaults. If you have a ``DateField`` in your model, chances are "
"you'd want that to be represented as a ``DateField`` in your form. But "
"``ModelForm`` gives you the flexibility of changing the form field type and "
"widget for a given model field."
msgstr "Les types de champs par défaut, tels que décrits dans le tableau ci-dessus `Types de champs`_, sont des choix raisonnables. Si votre modèle contient un champ ``DateField``, il est probable que vous vouliez représenter ce champ dans un formulaire par un champ de formulaire ``DateField``. Mais ``ModelForm`` permet de surcharger le type de champ ou de composant de formulaire correspondant à un champ de modèle défini."

# 10e1ce2fa57d460f9611628621717732
#: ../../topics/forms/modelforms.txt:467
msgid ""
"To specify a custom widget for a field, use the ``widgets`` attribute of the"
" inner ``Meta`` class. This should be a dictionary mapping field names to "
"widget classes or instances."
msgstr "Pour indiquer un composant personnalisé pour un champ, utilisez l'attribut ``widgets`` de la classe ``Meta`` interne. Ce doit être un dictionnaire faisant correspondre les noms de champs à des classes ou des instances de composants."

# f74b07e8e0d44c07aa061f50dbf95878
#: ../../topics/forms/modelforms.txt:471
msgid ""
"For example, if you want the a ``CharField`` for the ``name`` attribute of "
"``Author`` to be represented by a ``<textarea>`` instead of its default "
"``<input type=\"text\">``, you can override the field's widget::"
msgstr "Par exemple, si vous voulez que le champ ``CharField`` de l'attribut ``name`` du modèle ``Author`` soit représenté par un composant ``<textarea>`` au lieu du composant ``<input type=\"text\">`` par défaut, vous pouvez surcharger le composant du champ ::"

# c5e49d9c82354b9ba5ba4524a1f3a2f3
#: ../../topics/forms/modelforms.txt:487
msgid ""
"The ``widgets`` dictionary accepts either widget instances (e.g., "
"``Textarea(...)``) or classes (e.g., ``Textarea``)."
msgstr "Le dictionnaire ``widgets`` accepte aussi bien des instances de composants (par ex. ``Textarea(...)``) que des classes (par ex. ``Textarea``)."

# 93fd92515c0a4084ab11262d71b5ea5b
#: ../../topics/forms/modelforms.txt:492
msgid ""
"The ``labels``, ``help_texts`` and ``error_messages`` options were added."
msgstr "Les options ``labels``, ``help_texts`` et ``error_messages`` ont été ajoutées."

# 8dd06aa8598045b2a461f541f19dc344
#: ../../topics/forms/modelforms.txt:494
msgid ""
"Similarly, you can specify the ``labels``, ``help_texts`` and "
"``error_messages`` attributes of the inner ``Meta`` class if you want to "
"further customize a field."
msgstr "De la même façon, vous pouvez indiquer les attributs ``labels``, ``help_texts`` et ``error_messages`` de la classe interne ``Meta`` si vous avez besoin de personnaliser davantage un champ."

# 76e6846e69e040d2ab9e48ef7c2e2777
#: ../../topics/forms/modelforms.txt:497
msgid ""
"For example if you wanted to customize the wording of all user facing "
"strings for the ``name`` field::"
msgstr "Par exemple, si vous souhaitez personnaliser la formulation de tous les textes visibles pour l'utilisateur concernant le champ ``name``::"

# 5ac2e1e6dfcf4d0c96fc0ae4db2f89f5
#: ../../topics/forms/modelforms.txt:516
msgid ""
"Finally, if you want complete control over of a field -- including its type,"
" validators, etc. -- you can do this by declaratively specifying fields like"
" you would in a regular ``Form``."
msgstr "Finalement, si vous souhaitez contrôler complètement un champ, y compris son type, ses validateurs, etc., vous pouvez le faire en définissant les champs de manière déclarative comme on le ferait pour un formulaire ``Form`` normal."

# 2d5f35de470f434b81ffd0867cca1883
#: ../../topics/forms/modelforms.txt:520
msgid ""
"For example, if you wanted to use ``MySlugFormField`` for the ``slug`` "
"field, you could do the following::"
msgstr "Par exemple, si vous souhaitez utiliser ``MySlugFormField`` pour le champ ``slug``, vous pourriez procéder ainsi ::"

# f655b2cbbc964deb9b924b3c8f0d2500
#: ../../topics/forms/modelforms.txt:534
msgid ""
"If you want to specify a field's validators, you can do so by defining the "
"field declaratively and setting its ``validators`` parameter::"
msgstr "Si vous souhaitez indiquer les validateurs d'un champ, vous pouvez le faire en définissant le champ de manière déclarative et en indiquant le paramètre ``validators``::"

# 6b70d0659162418bb61e3569689d739c
#: ../../topics/forms/modelforms.txt:549
msgid ""
"When you explicitly instantiate a form field like this, it is important to "
"understand how ``ModelForm`` and regular ``Form`` are related."
msgstr "Lorsque vous créez une instance de formulaire explicitement comme ceci, il est important de comprendre comment les formulaires de type ``ModelForm`` et ``Form`` sont liés."

# c88da35d389a40a398da58fcfc7a6d8d
#: ../../topics/forms/modelforms.txt:552
msgid ""
"``ModelForm`` is a regular ``Form`` which can automatically generate certain"
" fields. The fields that are automatically generated depend on the content "
"of the ``Meta`` class and on which fields have already been defined "
"declaratively. Basically, ``ModelForm`` will **only** generate fields that "
"are **missing** from the form, or in other words, fields that weren't "
"defined declaratively."
msgstr "``ModelForm`` est comme un formulaire ``Form`` normal qui peut générer automatiquement certains champs. Les champs automatiquement générés dépendent du contenu de la classe ``Meta`` et des champs éventuellement définis de manière déclarative. Au fond, ``ModelForm`` va **uniquement** générer les champs qui sont **absents** du formulaire, ou en d'autres termes, les champs qui n'ont pas été définis déclarativement."

# c786f5d25ed449ab83c92bda3dfa820f
#: ../../topics/forms/modelforms.txt:559
msgid ""
"Fields defined declaratively are left as-is, therefore any customizations "
"made to ``Meta`` attributes such as ``widgets``, ``labels``, ``help_texts``,"
" or ``error_messages`` are ignored; these only apply to fields that are "
"generated automatically."
msgstr "Les champs définis déclarativement sont laissés tels quels, ce qui fait que toute personnalisation effectuée au niveau des attributs de ``Meta``, tels que ``widgets``, ``labels``, ``help_texts`` ou ``error_messages`` est ignorée ; ces derniers ne s'appliquent qu'aux champs automatiquement générés."

# 5cd32d4d05f04406944537b4398f2c0b
#: ../../topics/forms/modelforms.txt:564
msgid ""
"Similarly, fields defined declaratively do not draw their attributes like "
"``max_length`` or ``required`` from the corresponding model. If you want to "
"maintain the behavior specified in the model, you must set the relevant "
"arguments explicitly when declaring the form field."
msgstr "De même, les champs définis déclarativement ne dérivent pas leurs attributs comme ``max_length`` ou ``required`` du modèle correspondant. Si vous voulez conserver le comportement défini au niveau du modèle, vous devez définir les paramètres adéquats explicitement dans la déclaration du champ de formulaire."

# 957e30acea2c436ab8448bebb7c0edb8
#: ../../topics/forms/modelforms.txt:569
msgid "For example, if the ``Article`` model looks like this::"
msgstr "Par exemple, si le modèle ``Article`` ressemble à ceci ::"

# 60e1cf53332c4bf5a4af837bfb3353c9
#: ../../topics/forms/modelforms.txt:576
msgid ""
"and you want to do some custom validation for ``headline``, while keeping "
"the ``blank`` and ``help_text`` values as specified, you might define "
"``ArticleForm`` like this::"
msgstr "et que vous vouliez effectuer une validation particulière pour ``headline`` tout en conservant les valeurs ``blank`` et ``help_text`` d'origine, voici comment vous pourriez définir ``ArticleForm``::"

# 8d8cf824ff7044edbb12466ad6247771
#: ../../topics/forms/modelforms.txt:588
msgid ""
"You must ensure that the type of the form field can be used to set the "
"contents of the corresponding model field. When they are not compatible, you"
" will get a ``ValueError`` as no implicit conversion takes place."
msgstr "Vous devez vous assurer que le type du champ de formulaire peut être utilisé pour définir le contenu du champ de modèle correspondant. S'ils ne sont pas compatibles, vous obtiendrez une erreur ``ValueError`` car aucune conversion implicite n'est effectuée."

# 71ac32c8978f4b31ae27443c872feedd
#: ../../topics/forms/modelforms.txt:592
msgid ""
"See the :doc:`form field documentation </ref/forms/fields>` for more "
"information on fields and their arguments."
msgstr "Consultez la :doc:`documentation des champs de formulaire </ref/forms/fields>` pour plus d'informations sur les champs et leurs paramètres."

# cc05b81293684417a70c536cdd17e766
#: ../../topics/forms/modelforms.txt:597
msgid "Enabling localization of fields"
msgstr "Activation de la régionalisation des champs"

# 2bd6064155ed4bb08075079b7d6cf40b
#: ../../topics/forms/modelforms.txt:601
msgid ""
"By default, the fields in a ``ModelForm`` will not localize their data. To "
"enable localization for fields, you can use the ``localized_fields`` "
"attribute on the ``Meta`` class."
msgstr "Par défaut, les champs d'un ``ModelForm`` ne régionalisent pas leurs données. Pour activer cette régionalisation, vous pouvez utiliser l'attribut ``localized_fields`` de la classe ``Meta``."

# 4c7184a064c34240a3f6ed1042e789ec
# b0c91c43288d468ca1f42a5ba6d2bd3f
#: ../../topics/forms/modelforms.txt:612 ../../topics/forms/modelforms.txt:789
msgid ""
"If ``localized_fields`` is set to the special value ``'__all__'``, all "
"fields will be localized."
msgstr "Si ``localized_fields`` est défini à la valeur spéciale ``'__all__'``, les valeurs de tous les champs seront régionalisées."

# 70a0800213d04f8180fb50b8f1d6848a
#: ../../topics/forms/modelforms.txt:616
msgid "Form inheritance"
msgstr "Héritage de formulaire"

# 777d411765cc423bb95a2e336a135f6f
#: ../../topics/forms/modelforms.txt:618
msgid ""
"As with basic forms, you can extend and reuse ``ModelForms`` by inheriting "
"them. This is useful if you need to declare extra fields or extra methods on"
" a parent class for use in a number of forms derived from models. For "
"example, using the previous ``ArticleForm`` class::"
msgstr "Comme pour les formulaires de base, il est possible d'étendre et de réutiliser les ``ModelForms`` par l'héritage. C'est utile lorsque vous devez déclarer des champs ou des méthodes supplémentaires dans une sous-classe pour les utiliser dans des formulaires dérivés de modèles. Par exemple, en utilisant la classe ``ArticleForm`` présentée précédemment ::"

# b53314b4ae3f4897a0de739c0040dd46
#: ../../topics/forms/modelforms.txt:627
msgid ""
"This creates a form that behaves identically to ``ArticleForm``, except "
"there's some extra validation and cleaning for the ``pub_date`` field."
msgstr "Cela crée un formulaire qui se comporte comme ``ArticleForm``, à l'exception de certaines validations et nettoyages supplémentaires pour le champ ``pub_date``."

# 9bccdb35469d49489780aacb0efa33b0
#: ../../topics/forms/modelforms.txt:630
msgid ""
"You can also subclass the parent's ``Meta`` inner class if you want to "
"change the ``Meta.fields`` or ``Meta.excludes`` lists::"
msgstr "Il est aussi possible d'hériter de la classe ``Meta`` interne du parent si vous avez besoin de modifier les listes ``Meta.fields`` ou ``Meta.excludes``::"

# aef42b87d2ac4206995ce2ca363d8a88
#: ../../topics/forms/modelforms.txt:637
msgid ""
"This adds the extra method from the ``EnhancedArticleForm`` and modifies the"
" original ``ArticleForm.Meta`` to remove one field."
msgstr "Nous conservons ici la méthode supplémentaire de ``EnhancedArticleForm`` et enlevons un champ de la classe ``ArticleForm.Meta`` originale."

# 0bfabdbf26a94707a168b8f71eed4138
#: ../../topics/forms/modelforms.txt:640
msgid "There are a couple of things to note, however."
msgstr "Il faut cependant relever certains points."

# a82e2ce55de74389b1be7a6fd1173c15
#: ../../topics/forms/modelforms.txt:642
msgid ""
"Normal Python name resolution rules apply. If you have multiple base classes"
" that declare a ``Meta`` inner class, only the first one will be used. This "
"means the child's ``Meta``, if it exists, otherwise the ``Meta`` of the "
"first parent, etc."
msgstr "Les règles Python habituelles de la résolution de noms s'appliquent. Si vous avez plusieurs classes de base déclarant une classe interne ``Meta``, seule la première sera considérée. C'est -à-dire la classe ``Meta`` de la sous-classe, s'il y en a une, sinon celle du premier parent, etc. "

# b3d4d717ac4141ccb5f49c19a61970ef
#: ../../topics/forms/modelforms.txt:647
msgid ""
"For technical reasons, a subclass cannot inherit from both a ``ModelForm`` "
"and a ``Form`` simultaneously."
msgstr "Pour des raisons techniques, une sous-classe ne peut hériter à la fois d'un ``ModelForm`` et d'un ``Form``."

# 17ab58aaec5942769322b3c47aead4c6
#: ../../topics/forms/modelforms.txt:650
msgid ""
"Chances are these notes won't affect you unless you're trying to do "
"something tricky with subclassing."
msgstr "Il y a de bonnes chances que ces notes ne vous concernent pas pour autant que vous ne vous lanciez pas dans des systèmes d'héritage complexes."

# e56bddc48576447f8d773954c685ec6b
#: ../../topics/forms/modelforms.txt:656
msgid "ModelForm factory function"
msgstr "Fonction de fabrique de ModelForm"

# 744f534490c1458386f6693cf498f9e9
#: ../../topics/forms/modelforms.txt:658
msgid ""
"You can create forms from a given model using the standalone function "
":func:`~django.forms.models.modelform_factory`, instead of using a class "
"definition. This may be more convenient if you do not have many "
"customizations to make::"
msgstr "Vous pouvez créer des formulaires à partir d'un modèle donné en utilisant la fonction autonome :func:`~django.forms.models.modelform_factory` au lieu de passer par une définition de classe. Cela peut être plus pratique si vous n'avez pas à effectuer trop d'adaptations ::"

# af880341eff64fbdabbc97327b45ecd4
#: ../../topics/forms/modelforms.txt:667
msgid ""
"This can also be used to make simple modifications to existing forms, for "
"example by specifying the widgets to be used for a given field::"
msgstr "Cela peut également être utilisé pour faire des modifications simples à des formulaires existants, par exemple pour indiquer les composants à utiliser pour un certain champ ::"

# 6c7d5d0177df4b4294e39bdbaf08008b
#: ../../topics/forms/modelforms.txt:674
msgid ""
"The fields to include can be specified using the ``fields`` and ``exclude`` "
"keyword arguments, or the corresponding attributes on the ``ModelForm`` "
"inner ``Meta`` class. Please see the ``ModelForm`` :ref:`modelforms-"
"selecting-fields` documentation."
msgstr "Les champs à inclure peuvent être spécifiés en utilisant les paramètres nommés ``fields`` et ``exclude``, ou les attributs correspondants de la classe interne ``Meta`` du ``ModelForm``. Veuillez consulter la documentation :ref:`modelforms-selecting-fields` des ``ModelForm``."

# dc72121ddb1e4477acb07127662690a1
#: ../../topics/forms/modelforms.txt:679
msgid "... or enable localization for specific fields::"
msgstr "… ou pour activer la régionalisation de certains champs ::"

# 0867687b2009496491243efeb5512a31
#: ../../topics/forms/modelforms.txt:686
msgid "Model formsets"
msgstr "Formulaires groupés de modèles"

# 6aabe480b7fe482a8b72601601fb20f4
#: ../../topics/forms/modelforms.txt:690
msgid ""
"Like :doc:`regular formsets </topics/forms/formsets>`, Django provides a "
"couple of enhanced formset classes that make it easy to work with Django "
"models. Let's reuse the ``Author`` model from above::"
msgstr "Comme pour les :doc:`formulaires groupés normaux </topics/forms/formsets>`, Django fournit quelques classes de formulaires groupés améliorées qui facilitent le travail avec les modèles Django. Réutilisons le modèle ``Author`` défini plus haut ::"

# 1a070df648a2494bbe8a11294ed22e6f
#: ../../topics/forms/modelforms.txt:698
msgid ""
"This will create a formset that is capable of working with the data "
"associated with the ``Author`` model. It works just like a regular formset::"
msgstr "Cela crée un jeu de formulaires groupés qui sont capables de gérer les données associées au modèle ``Author``. Le fonctionnement est le même que pour des formulaires groupés normaux ::"

# b5933882d91e45ecaea2cc0b119c4956
#: ../../topics/forms/modelforms.txt:715
msgid ""
":func:`~django.forms.models.modelformset_factory` uses "
":func:`~django.forms.formsets.formset_factory` to generate formsets. This "
"means that a model formset is just an extension of a basic formset that "
"knows how to interact with a particular model."
msgstr ":func:`~django.forms.models.modelformset_factory` utilise :func:`~django.forms.formsets.formset_factory` pour générer les formulaires groupés. Cela signifie que les formulaires groupés de modèle ne sont qu'une extension des formulaires groupés de base, mais qui savent comment interagir avec un modèle particulier."

# 4eee54f6772247c895b1d9a3b89a090c
#: ../../topics/forms/modelforms.txt:721
msgid "Changing the queryset"
msgstr "Modification du jeu de requête"

# 5eb2e004afb642c1824868cd734ab8bd
#: ../../topics/forms/modelforms.txt:723
msgid ""
"By default, when you create a formset from a model, the formset will use a "
"queryset that includes all objects in the model (e.g., "
"``Author.objects.all()``). You can override this behavior by using the "
"``queryset`` argument::"
msgstr "Par défaut, lorsque vous créez des formulaires groupés à partir d'un modèle, ceux-ci utilisent un jeu de requête qui contient tous les objets du modèle (par ex. ``Author.objects.all()``). Vous pouvez surcharger ce comportement en utilisant le paramètre ``queryset``::"

# 0023d3596e2a4642b0a70a8246e5fdc8
#: ../../topics/forms/modelforms.txt:730
msgid ""
"Alternatively, you can create a subclass that sets ``self.queryset`` in "
"``__init__``::"
msgstr "Comme variante, vous pouvez créer une sous-classe définissant ``self.queryset`` dans sa méthode ``__init__``::"

# 0a3ece245c624dc2b0ce3eba412dbf47
#: ../../topics/forms/modelforms.txt:741
msgid "Then, pass your ``BaseAuthorFormSet`` class to the factory function::"
msgstr "Puis, passez votre classe ``BaseAuthorFormSet`` à la fonction de fabrique ::"

# 99677127b48d4cfa86f2c04646aeab6c
#: ../../topics/forms/modelforms.txt:745
msgid ""
"If you want to return a formset that doesn't include *any* pre-existing "
"instances of the model, you can specify an empty QuerySet::"
msgstr "Si vous souhaitez renvoyer des formulaires groupés qui ne contiennent *aucune* instance préexistante du modèle, vous pouvez indiquer un objet ``QuerySet`` vide ::"

# 6c3a5bdfa89b46e6a89abd47ae4c4cab
#: ../../topics/forms/modelforms.txt:752
msgid "Controlling which fields are used with ``fields`` and ``exclude``"
msgstr "Contrôle des champs utilisés avec ``fields`` et ``exclude``"

# d99007722aa54f408c8125b6766f8f05
#: ../../topics/forms/modelforms.txt:754
msgid ""
"By default, a model formset uses all fields in the model that are not marked"
" with ``editable=False``. However, this can be overridden at the formset "
"level::"
msgstr "Par défaut, les formulaires groupés d'un modèle utilisent tous les champs du modèle qui ne sont pas marqués avec ``editable=False``. Cependant, il est possible de surcharger ce comportement au niveau des formulaires groupés ::"

# fd56d8a445e944a4990a6528c611efb7
#: ../../topics/forms/modelforms.txt:759
msgid ""
"Using ``fields`` restricts the formset to use only the given fields. "
"Alternatively, you can take an \"opt-out\" approach, specifying which fields"
" to exclude::"
msgstr "L'utilisation de ``fields`` indique aux formulaires groupés  les champs qu'ils doivent utiliser. Il est aussi possible d'utiliser une approche par exclusion, indiquant quels sont les champs à exclure ::"

# ecd5151f06084f138f85becc773ec9ae
#: ../../topics/forms/modelforms.txt:766
msgid "Specifying widgets to use in the form with ``widgets``"
msgstr "Indication des composants de formulaire à utiliser avec ``widgets``"

# c80c959a36fc40d7bcca114556ebc2b0
#: ../../topics/forms/modelforms.txt:770
msgid ""
"Using the ``widgets`` parameter, you can specify a dictionary of values to "
"customize the ``ModelForm``’s widget class for a particular field. This "
"works the same way as the ``widgets`` dictionary on the inner ``Meta`` class"
" of a ``ModelForm`` works::"
msgstr "En exploitant le paramètre ``widgets``, vous pouvez indiquer un dictionnaire de valeurs afin de personnaliser la classe de composant d'un champ particulier du ``ModelForm``. C'est le même principe de fonctionnement que le dictionnaire ``widgets`` de la classe ``Meta`` interne d'un ``ModelForm``::"

# 397c13cac62f4c2896377c7551156aeb
#: ../../topics/forms/modelforms.txt:779
msgid "Enabling localization for fields with ``localized_fields``"
msgstr "Activation de la régionalisation des champs avec ``localized_fields``"

# 935c6215c6c34191a1521a58e4327e5c
#: ../../topics/forms/modelforms.txt:783
msgid ""
"Using the ``localized_fields`` parameter, you can enable localization for "
"fields in the form."
msgstr "À l'aide du paramètre ``localized_fields``, vous pouvez activer la régionalisation des champs du formulaire."

# c86d6fe21ec349c98acf1cab127e4b45
#: ../../topics/forms/modelforms.txt:793
msgid "Providing initial values"
msgstr "Indication de valeurs initiales"

# e2311ed58a5743b18e875e8a60ab620d
#: ../../topics/forms/modelforms.txt:795
msgid ""
"As with regular formsets, it's possible to :ref:`specify initial data "
"<formsets-initial-data>` for forms in the formset by specifying an "
"``initial`` parameter when instantiating the model formset class returned by"
" :func:`~django.forms.models.modelformset_factory`. However, with model "
"formsets, the initial values only apply to extra forms, those that aren't "
"bound to an existing object instance."
msgstr "Comme pour les formulaires groupés normaux, il est possible :ref:`de fournir des données initiales <formsets-initial-data>` aux formulaires groupés en indiquant le paramètre ``initial`` au moment de la création de l'instance de classe de formulaires groupés de modèles renvoyée par :func:`~django.forms.models.modelformset_factory`. Cependant, avec les formulaires groupés de modèles, les valeurs initiales ne s'appliquent qu'aux formulaires supplémentaires, ceux qui ne sont pas liés à des instances d'objets existants."

# 4ac58a6c87304a7993e48a4921f141a4
#: ../../topics/forms/modelforms.txt:805
msgid "Saving objects in the formset"
msgstr "Enregistrement des objets des formulaires groupés"

# 2b33ca79526c49c08fd3ae3f6cb4d24f
#: ../../topics/forms/modelforms.txt:807
msgid ""
"As with a ``ModelForm``, you can save the data as a model object. This is "
"done with the formset's ``save()`` method::"
msgstr "Comme pour un ``ModelForm``, vous pouvez enregistrer les données sous forme d'objet de modèle. Cela se fait par la méthode ``save()`` des formulaires groupés ::"

# dfcaa4fff7c5476c84df5b249df89523
#: ../../topics/forms/modelforms.txt:816
msgid ""
"The ``save()`` method returns the instances that have been saved to the "
"database. If a given instance's data didn't change in the bound data, the "
"instance won't be saved to the database and won't be included in the return "
"value (``instances``, in the above example)."
msgstr "La méthode ``save()`` renvoie les instances qui ont été enregistrées dans la base de données. Si les données d'une instance précise n'ont pas été modifiées dans les données du formulaire, l'instance ne sera pas enregistrée dans la base de données et ne sera pas non plus incluse dans la valeur renvoyée (``instances``, dans l'exemple ci-dessus)."

# e9210e0ea1134eec968d9e3f5b6fe87c
#: ../../topics/forms/modelforms.txt:821
msgid ""
"When fields are missing from the form (for example because they have been "
"excluded), these fields will not be set by the ``save()`` method. You can "
"find more information about this restriction, which also holds for regular "
"``ModelForms``, in `Selecting the fields to use`_."
msgstr "Lorsque des champs sont absents du formulaire (par exemple en raison de leur exclusion), ces champs ne sont pas modifiés par la méthode ``save()``. Vous pouvez trouver plus d'informations sur cette restriction, qui est aussi valable pour les formulaires ``ModelForm`` normaux, dans `Sélection des champs à utiliser`_."

# 9bbc3b9d35bf4dceafa963f79ce05d4d
#: ../../topics/forms/modelforms.txt:826
msgid "Pass ``commit=False`` to return the unsaved model instances::"
msgstr "Passez ``commit=False`` pour recevoir les instances de modèles non enregistrées ::"

# d90551b253b64418b5447876f6c9c330
#: ../../topics/forms/modelforms.txt:834
msgid ""
"This gives you the ability to attach data to the instances before saving "
"them to the database. If your formset contains a ``ManyToManyField``, you'll"
" also need to call ``formset.save_m2m()`` to ensure the many-to-many "
"relationships are saved properly."
msgstr "Cela vous permet de définir des données complémentaires dans les instances avant de les enregistrer dans la base de données. Si vos formulaires groupés contiennent un champ ``ManyToManyField``, vous devrez également appeler ``formset.save_m2m()`` pour vous assurer que les liens plusieurs-à-plusieurs soient correctement enregistrés."

# 13f81034cd8b46e788b26a23fffcb5a2
#: ../../topics/forms/modelforms.txt:842
msgid "Limiting the number of editable objects"
msgstr "Restriction du nombre d'objets modifiables"

# 6920eb17f8634141b005bc241f494527
#: ../../topics/forms/modelforms.txt:844
msgid ""
"As with regular formsets, you can use the ``max_num`` and ``extra`` "
"parameters to :func:`~django.forms.models.modelformset_factory` to limit the"
" number of extra forms displayed."
msgstr "Comme pour les formulaires groupés normaux, vous pouvez utiliser les paramètres ``max_num`` et ``extra`` de :func:`~django.forms.models.modelformset_factory` pour restreindre le nombre de formulaires supplémentaires affichés."

# d1a6c8eed19e473d87ca4c52d92d3a62
#: ../../topics/forms/modelforms.txt:848
msgid "``max_num`` does not prevent existing objects from being displayed::"
msgstr "``max_num`` n'empêche pas les objets existants d'être affichés ::"

# ab2b0384aa514cc8b988fa36e13d80e2
#: ../../topics/forms/modelforms.txt:858
msgid ""
"If the value of ``max_num`` is greater than the number of existing related "
"objects, up to ``extra`` additional blank forms will be added to the "
"formset, so long as the total number of forms does not exceed ``max_num``::"
msgstr "Si la valeur de ``max_num`` est plus grande que le nombre d'objets liés existants, un maximum de  ``extra`` formulaires vierges supplémentaires seront ajoutés aux formulaires groupés, aussi longtemps que le nombre total de formulaires n'excède pas ``max_num``::"

# d4d03b99b05747cfa1ac518a012668a2
#: ../../topics/forms/modelforms.txt:875
msgid "Using a model formset in a view"
msgstr "Utilisation de formulaires groupés de modèle dans une vue"

# 956cfdda31504c8989e518c073f8c5c1
#: ../../topics/forms/modelforms.txt:877
msgid ""
"Model formsets are very similar to formsets. Let's say we want to present a "
"formset to edit ``Author`` model instances::"
msgstr "Les formulaires groupés de modèle sont très semblables aux formulaires groupés normaux. Admettons que nous voulions afficher des formulaires groupés pour modifier les instances du modèle ``Author``::"

# f34fe7c7153d4fd9b034617ac926a0f0
#: ../../topics/forms/modelforms.txt:897
msgid ""
"As you can see, the view logic of a model formset isn't drastically "
"different than that of a \"normal\" formset. The only difference is that we "
"call ``formset.save()`` to save the data into the database. (This was "
"described above, in :ref:`saving-objects-in-the-formset`.)"
msgstr "Comme vous pouvez le voir, la logique de la vue de formulaires groupés de modèle n'est pas fondamentalement différente de celle de formulaires groupés normaux. La seule différence est que nous appelons ``formset.save()`` pour enregistrer les données dans la base de données (comme cela a été décrit ci-dessus dans :ref:`saving-objects-in-the-formset`)."

# 2cdba457c8a64e5d916c93168f6cc018
#: ../../topics/forms/modelforms.txt:905
msgid "Overriding ``clean()`` on a ``ModelFormSet``"
msgstr "Surcharge de ``clean()`` d'un ``ModelFormSet``"

# 86eb231b810b45abbeaedb5a3cf0b7c7
#: ../../topics/forms/modelforms.txt:907
msgid ""
"Just like with ``ModelForms``, by default the ``clean()`` method of a "
"``ModelFormSet`` will validate that none of the items in the formset violate"
" the unique constraints on your model (either ``unique``, "
"``unique_together`` or ``unique_for_date|month|year``).  If you want to "
"override the ``clean()`` method on a ``ModelFormSet`` and maintain this "
"validation, you must call the parent class's ``clean`` method::"
msgstr "Tout comme pour ``ModelForms``, la méthode ``clean()`` de ``ModelFormSet`` valide par défaut qu'aucun des éléments dans les formulaires groupés ne viole les contraintes d'unicité de votre modèle (que ce soit ``unique``, ``unique_together`` ou ``unique_for_date|month|year``). Si vous souhaitez surcharger la méthode ``clean()`` d'un ``ModelFormSet`` et conserver cette validation, vous devez appeler la méthode ``clean`` de la classe parente ::"

# 822816a539c54eb18935e04c70626714
#: ../../topics/forms/modelforms.txt:924
msgid ""
"Also note that by the time you reach this step, individual model instances "
"have already been created for each ``Form``. Modifying a value in "
"``form.cleaned_data`` is not sufficient to affect the saved value. If you "
"wish to modify a value in ``ModelFormSet.clean()`` you must modify "
"``form.instance``::"
msgstr "Notez également qu'une fois que vous avez atteint cette étape, les instances de modèles individuelles pour chaque formulaire ont déjà été créées. Il ne suffit donc pas de modifier une valeur dans ``form.cleaned_data`` pour changer la valeur enregistrée. Si vous souhaitez modifier une valeur dans ``ModelFormSet.clean()``, vous devez modifier ``form.instance``::"

# 8f1a07fa7d4f4cec803f35f62f5250aa
#: ../../topics/forms/modelforms.txt:943
msgid "Using a custom queryset"
msgstr "Utilisation d'un jeu de requête personnalisé"

# c6e81a736d3d4dcbb7ed1a6f0b9ef9cc
#: ../../topics/forms/modelforms.txt:927
msgid ""
"As stated earlier, you can override the default queryset used by the model "
"formset::"
msgstr "Comme indiqué précédemment, il est possible de surcharger le jeu de requête utilisé par défaut par les formulaires groupés de modèle ::"

# 580a057cded44de59cecf594039887ef
#: ../../topics/forms/modelforms.txt:948
msgid ""
"Note that we pass the ``queryset`` argument in both the ``POST`` and ``GET``"
" cases in this example."
msgstr "Notez que nous transmettons le paramètre ``queryset`` à la fois aux requêtes ``POST`` et ``GET`` dans cet exemple."

# 0c69eee2754942389dd06a367c582b67
#: ../../topics/forms/modelforms.txt:952
msgid "Using the formset in the template"
msgstr "Utilisation des formulaires groupés dans un gabarit"

# 20b12d33813241b29f5dba0dada00e49
#: ../../topics/forms/modelforms.txt:956
msgid "There are three ways to render a formset in a Django template."
msgstr "Il y a trois façons d'afficher des formulaires groupés dans un gabarit Django."

# 033b7f8427ab45288c8b17a56d2fa1b7
#: ../../topics/forms/modelforms.txt:958
msgid "First, you can let the formset do most of the work::"
msgstr "Premièrement, vous pouvez déléguer aux formulaires groupés l'essentiel du travail ::"

# 00848d6de60e4f81ba511bbb868d6e94
#: ../../topics/forms/modelforms.txt:964
msgid ""
"Second, you can manually render the formset, but let the form deal with "
"itself::"
msgstr "Deuxièmement, vous pouvez afficher les formulaires groupés manuellement, mais laisser le soin à chaque formulaire de s'afficher lui-même ::"

# e30797a4075e47ec929187f415ad160e
#: ../../topics/forms/modelforms.txt:974
msgid ""
"When you manually render the forms yourself, be sure to render the "
"management form as shown above. See the :ref:`management form documentation "
"<understanding-the-managementform>`."
msgstr "Lorsque vous vous occupez vous-même d'afficher les différents formulaires, prenez soin d'inclure également le formulaire de gestion comme le montre l'exemple ci-dessus. Voir la :ref:`documentation du formulaire de gestion <understanding-the-managementform>`."

# d08a7555b7984b549635ef9d24836206
#: ../../topics/forms/modelforms.txt:978
msgid "Third, you can manually render each field::"
msgstr "Troisièmement, vous pouvez afficher manuellement chaque champ ::"

# 5be1a1b4b6e3465cb38707c78615bb5e
#: ../../topics/forms/modelforms.txt:989
msgid ""
"If you opt to use this third method and you don't iterate over the fields "
"with a ``{% for %}`` loop, you'll need to render the primary key field. For "
"example, if you were rendering the ``name`` and ``age`` fields of a model::"
msgstr "Si vous optez pour cette troisième méthode et que vous ne bouclez pas sur les champs avec un ``{% for %}``, vous devez aussi inclure le champ de clé primaire. Par exemple, si vous affichez les champs ``name`` et ``age`` d'un modèle ::"

# d4dfc9b5b1eb4912a10d60d0f9987bcd
#: ../../topics/forms/modelforms.txt:1004
msgid ""
"Notice how we need to explicitly render ``{{ form.id }}``. This ensures that"
" the model formset, in the ``POST`` case, will work correctly. (This example"
" assumes a primary key named ``id``. If you've explicitly defined your own "
"primary key that isn't called ``id``, make sure it gets rendered.)"
msgstr "Voyez comment nous devons explicitement afficher ``{{ form.id }}``. Ceci pour s'assurer du bon fonctionnement des formulaires groupés de modèle, dans le cas de l'envoi ``POST`` (cet exemple suppose que la clé primaire s'appelle ``id``. Si vous avez explicitement nommé la clé primaire su modèle autrement que ``id``, prenez soin de l'afficher)."

# acc96cd0ace24fd0a6d7737c4c247e43
#: ../../topics/forms/modelforms.txt:1014
msgid "Inline formsets"
msgstr "Sous-formulaires groupés"

# ab8853f2049c450abd5247bb5f9b2d02
#: ../../topics/forms/modelforms.txt:1018
msgid ""
"Inline formsets is a small abstraction layer on top of model formsets. These"
" simplify the case of working with related objects via a foreign key. "
"Suppose you have these two models::"
msgstr "Les sous-formulaires groupés sont une petite couche d'abstraction au-dessus des formulaires groupés de modèle. Ils simplifient la situation où l'on manipule des objets liés au travers d'une clé étrangère. Supposons que l'on dispose de ces deux modèles ::"

# a8fb99fc2724421d9658386e8999598e
#: ../../topics/forms/modelforms.txt:1031
msgid ""
"If you want to create a formset that allows you to edit books belonging to a"
" particular author, you could do this::"
msgstr "Si vous voulez créer des formulaires groupés permettant de modifier les livres appartenant à un auteur particulier, vous pourriez faire ainsi ::"

# 96e1d6caf51246139fce9b57a5cc7a70
#: ../../topics/forms/modelforms.txt:1041
msgid ""
":func:`~django.forms.models.inlineformset_factory` uses "
":func:`~django.forms.models.modelformset_factory` and marks "
"``can_delete=True``."
msgstr ":func:`~django.forms.models.inlineformset_factory` utilise :func:`~django.forms.models.modelformset_factory` et définit ``can_delete=True``."

# a8450050fce04b96832ad68be9addbcd
#: ../../topics/forms/modelforms.txt:1047
msgid ""
":ref:`Manually rendered can_delete and can_order <manually-rendered-can-"
"delete-and-can-order>`."
msgstr ":ref:`can_delete et can_order affichés manuellement <manually-rendered-can-delete-and-can-order>`."

# 190254b22b5d4415b85d1b3d96ee91de
#: ../../topics/forms/modelforms.txt:1050
msgid "Overriding methods on an ``InlineFormSet``"
msgstr "Surcharge des méthodes d'un ``InlineFormSet``"

# fa20b3e10084454ba52450bc5f841d75
#: ../../topics/forms/modelforms.txt:1052
msgid ""
"When overriding methods on ``InlineFormSet``, you should subclass "
":class:`~models.BaseInlineFormSet` rather than "
":class:`~models.BaseModelFormSet`."
msgstr "Lorsque vous surchargez des méthodes de sous-formulaires groupés (``InlineFormSet``), il est préférable d'hériter de :class:`~models.BaseInlineFormSet` plutôt que de :class:`~models.BaseModelFormSet`."

# 1ab61dc4694b41c19ea781f2c3622e6b
#: ../../topics/forms/modelforms.txt:1056
msgid "For example, if you want to override ``clean()``::"
msgstr "Par exemple, si vous souhaitez surcharger ``clean()``::"

# 41f109918d3a4c97ad407b1b21efcef8
#: ../../topics/forms/modelforms.txt:1068
msgid "See also :ref:`model-formsets-overriding-clean`."
msgstr "Voir aussi :ref:`model-formsets-overriding-clean`."

# c57c07c3116a4530afabd82ceaa80e29
#: ../../topics/forms/modelforms.txt:1070
msgid ""
"Then when you create your inline formset, pass in the optional argument "
"``formset``::"
msgstr "Puis, au moment de créer les sous-formulaires groupés, passez le paramètre facultatif ``formset``::"

# 9b074025bdbd408c82e6b97e27e3ddaa
#: ../../topics/forms/modelforms.txt:1079
msgid "More than one foreign key to the same model"
msgstr "Plus d'une clé étrangère vers le même modèle"

# 9399c1d8371f4a44a28dd71a1d4aa6f8
#: ../../topics/forms/modelforms.txt:1081
msgid ""
"If your model contains more than one foreign key to the same model, you'll "
"need to resolve the ambiguity manually using ``fk_name``. For example, "
"consider the following model::"
msgstr "Si votre modèle contient plus d'une clé étrangère vers le même modèle, vous devrez résoudre l'ambiguïté manuellement en utilisant ``fk_name``. Par exemple, considérez le modèle suivant ::"

# b4ba5da726ee45b9b8e534607210234f
#: ../../topics/forms/modelforms.txt:1090
msgid ""
"To resolve this, you can use ``fk_name`` to "
":func:`~django.forms.models.inlineformset_factory`::"
msgstr "Pour résoudre cela, vous pouvez définir ``fk_name`` dans :func:`~django.forms.models.inlineformset_factory`::"

# eff942b94be14cabad8dc8821feb08fb
#: ../../topics/forms/modelforms.txt:1096
msgid "Using an inline formset in a view"
msgstr "Utilisation de sous-formulaires groupés dans une vue"

# babcfdab525646df99d49fc6f954c509
#: ../../topics/forms/modelforms.txt:1098
msgid ""
"You may want to provide a view that allows a user to edit the related "
"objects of a model. Here's how you can do that::"
msgstr "Il peut être nécessaire de définir une vue permettant à un utilisateur de modifier les objets liés d'un modèle. Voici comment on peut le faire ::"

# 7a87b31f4bdd4fb8b84ea2c6e901bbb7
#: ../../topics/forms/modelforms.txt:1116
msgid ""
"Notice how we pass ``instance`` in both the ``POST`` and ``GET`` cases."
msgstr "Notez comment nous définissons le paramètre ``instance`` aussi bien dans le cas ``POST`` que le cas ``GET``."

# 6b7f035e5e5f4dac9e412f9bea0869da
#: ../../topics/forms/modelforms.txt:1119
msgid "Specifying widgets to use in the inline form"
msgstr "Indication des composants à utiliser dans le sous-formulaire"

# ad8ff4c298dc48ffb8817e279d2d95d3
#: ../../topics/forms/modelforms.txt:1123
msgid ""
"``inlineformset_factory`` uses ``modelformset_factory`` and passes most of "
"its arguments to ``modelformset_factory``. This means you can use the "
"``widgets`` parameter in much the same way as passing it to "
"``modelformset_factory``. See `Specifying widgets to use in the form with "
"widgets`_ above."
msgstr "``inlineformset_factory`` utilise ``modelformset_factory`` et transmet la plupart de ses paramètres à ``modelformset_factory``. Cela signifie que vous pouvez utiliser le paramètre ``widgets`` tout comme vous le feriez pour ``modelformset_factory``. Voir `Indication des composants de formulaire à utiliser avec widgets`_ ci-dessus."

# 1eb2c5c28f0b439fb0b42fbefcc281d1
#: ../../topics/http/decorators.txt:3
msgid "View decorators"
msgstr "Décorateurs de vue"

# 6238b108f7f64f419148cd708b4dd0ca
#: ../../topics/http/decorators.txt:7
msgid ""
"Django provides several decorators that can be applied to views to support "
"various HTTP features."
msgstr "Django fournit plusieurs décorateurs afin de permettre aux vues de prendre en charge différentes fonctionnalités HTTP."

# 6330dfceabfa41099fc1547f08ef9d60
#: ../../topics/http/decorators.txt:11
msgid "Allowed HTTP methods"
msgstr "Méthodes HTTP autorisées"

# d3d70bbe380248c7a966d695e3749e7a
#: ../../topics/http/decorators.txt:13
msgid ""
"The decorators in :mod:`django.views.decorators.http` can be used to "
"restrict access to views based on the request method. These decorators will "
"return a :class:`django.http.HttpResponseNotAllowed` if the conditions are "
"not met."
msgstr "Les décorateurs présents dans  :mod:`django.views.decorators.http` peuvent être utilisés pour restreindre l'accès à une vue en se basant sur la méthode utilisée lors de la requête. Ces décorateurs renvoient une instance de :class:`django.http.HttpResponseNotAllowed` si les conditions ne sont pas remplies."

# c1d2447156574b0ba3eb65961fadfda0
#: ../../topics/http/decorators.txt:19
msgid ""
"Decorator to require that a view only accept particular request methods. "
"Usage::"
msgstr "Décorateur exigeant que l'accès à une vue se fasse via certaines méthodes HTTP seulement. Exemple ::"

# c166c129b1754fba98a4ee9571200f5a
#: ../../topics/http/decorators.txt:30
msgid "Note that request methods should be in uppercase."
msgstr "Remarquez que les noms de méthodes HTTP doivent être en majuscules."

# c1b2e9ac50164f7fb3ce3299f3a567a7
#: ../../topics/http/decorators.txt:34
msgid "Decorator to require that a view only accept the GET method."
msgstr "Décorateur exigeant que la vue n'accepte que la méthode GET."

# 00bb10cb0dec485f8b86cb766281d607
#: ../../topics/http/decorators.txt:38
msgid "Decorator to require that a view only accept the POST method."
msgstr "Décorateur exigeant que la vue n'accepte que la méthode POST."

# 94f77a13197c40ee864da38be405594c
#: ../../topics/http/decorators.txt:42
msgid ""
"Decorator to require that a view only accept the GET and HEAD methods. These"
" methods are commonly considered \"safe\" because they should not have the "
"significance of taking an action other than retrieving the requested "
"resource."
msgstr "Décorateur exigeant que la vue n'accepte que les méthodes GET et HEAD. Ces méthodes sont généralement considérées « sans risque » car elles ne devraient rien faire d'autre mis à part retourner la ressource demandée."

# 7e28a05931ea4bd4bd343b468474ffa1
#: ../../topics/http/decorators.txt:48
msgid ""
"Django will automatically strip the content of responses to HEAD requests "
"while leaving the headers unchanged, so you may handle HEAD requests exactly"
" like GET requests in your views. Since some software, such as link "
"checkers, rely on HEAD requests, you might prefer using ``require_safe`` "
"instead of ``require_GET``."
msgstr "Django retire automatiquement le contenu des réponses aux requêtes HEAD en prenant soin de laisser les en-têtes inchangés, vous pouvez ainsi traiter les requêtes HEAD comme des requêtes GET dans vos vues. Étant donné que certains programmes, tels que les vérificateurs d'hyperliens, se basent sur les requêtes HEAD, il peut être préférable d'utiliser ``require_safe`` à la place de ``require_GET``."

# 3bf12256a8814aeba275c6ddb1d5a473
#: ../../topics/http/decorators.txt:55
msgid "Conditional view processing"
msgstr "Traitement conditionnel de vue"

# 0c0ef36030704440a1abf5e6e84b8b2f
#: ../../topics/http/decorators.txt:57
msgid ""
"The following decorators in :mod:`django.views.decorators.http` can be used "
"to control caching behavior on particular views."
msgstr "Les décorateurs suivants présents dans :mod:`django.views.decorators.http` peuvent être utilisés pour contrôler le comportement du cache sur certaines vues."

# 0ffc7b73e18c471fa561ded05516b81c
#: ../../topics/http/decorators.txt:66
msgid ""
"These decorators can be used to generate ``ETag`` and ``Last-Modified`` "
"headers; see :doc:`conditional view processing </topics/conditional-view-"
"processing>`."
msgstr "Ces décorateurs peuvent être utilisés pour générer des en-têtes ``ETag`` et ``Last-Modified``. Voir :doc:`traitement conditionnel de vue </topics/conditional-view-processing>`."

# 8f30db51cbe8440894c30b6460ee87f1
#: ../../topics/http/decorators.txt:73
msgid "GZip compression"
msgstr "Compression GZip"

# 1b4a7a52e9564a5aa3cfb627970ff209
#: ../../topics/http/decorators.txt:75
msgid ""
"The decorators in :mod:`django.views.decorators.gzip` control content "
"compression on a per-view basis."
msgstr "Les décorateurs présents dans :mod:`django.views.decorators.gzip` contrôlent la compression du contenu vue par vue."

# 977ed02c1d274a5985a69e2341622f97
#: ../../topics/http/decorators.txt:80
msgid ""
"This decorator compresses content if the browser allows gzip compression. It"
" sets the ``Vary`` header accordingly, so that caches will base their "
"storage on the ``Accept-Encoding`` header."
msgstr "Ce décorateur compresse le contenu si le navigateur autorise la compression gzip. Il déclare l'en-tête ``Vary`` en conséquence, de façon à ce que la mise en cache dépende de l'en-tête ``Accept-Encoding``."

# 5712c457f7a447949b737f8fbe17560e
#: ../../topics/http/decorators.txt:87
msgid "Vary headers"
msgstr "En-têtes Vary"

# 0848d20dd9fa4bc8be40ad5b9e2c4ea1
#: ../../topics/http/decorators.txt:89
msgid ""
"The decorators in :mod:`django.views.decorators.vary` can be used to control"
" caching based on specific request headers."
msgstr "Les décorateurs présents dans :mod:`django.views.decorators.vary` peuvent être utilisés pour contrôler la mise en cache reposant sur certains en-têtes des requêtes."

# 966d778186a7464cb843f2f8b434071a
#: ../../topics/http/decorators.txt:96
msgid ""
"The ``Vary`` header defines which request headers a cache mechanism should "
"take into account when building its cache key."
msgstr "L'en-tête ``Vary`` définit quels en-têtes de requête un mécanisme de cache doit prendre en considération pour générer sa clé de cache."

# 304a3ef8016d4882b41394dcc710400d
#: ../../topics/http/decorators.txt:99
msgid "See :ref:`using vary headers <using-vary-headers>`."
msgstr "Voir :ref:`utilisation des en-têtes vary <using-vary-headers>`."

# 7d4c46a46ec8477580aac7a797141cad
#: ../../topics/http/file-uploads.txt:3
msgid "File Uploads"
msgstr ""

# 25c53e81e012491897e231c36c201c49
#: ../../topics/http/file-uploads.txt:7
msgid ""
"When Django handles a file upload, the file data ends up placed in "
":attr:`request.FILES <django.http.HttpRequest.FILES>` (for more on the "
"``request`` object see the documentation for :doc:`request and response "
"objects </ref/request-response>`). This document explains how files are "
"stored on disk and in memory, and how to customize the default behavior."
msgstr ""

# 3165c243aa8d435497c78debf63ec62a
#: ../../topics/http/file-uploads.txt:14
msgid "Basic file uploads"
msgstr ""

# be61e46c110143278a4bda50699b528c
#: ../../topics/http/file-uploads.txt:16
msgid "Consider a simple form containing a :class:`~django.forms.FileField`::"
msgstr ""

# d7a4ed933fbf4d97be6edefc7b8e7db0
#: ../../topics/http/file-uploads.txt:25
msgid ""
"A view handling this form will receive the file data in :attr:`request.FILES"
" <django.http.HttpRequest.FILES>`, which is a dictionary containing a key "
"for each :class:`~django.forms.FileField` (or "
":class:`~django.forms.ImageField`, or other :class:`~django.forms.FileField`"
" subclass) in the form. So the data from the above form would be accessible "
"as ``request.FILES['file']``."
msgstr ""

# 2de118362aae47fb830fc501957cc124
#: ../../topics/http/file-uploads.txt:32
msgid ""
"Note that :attr:`request.FILES <django.http.HttpRequest.FILES>` will only "
"contain data if the request method was ``POST`` and the ``<form>`` that "
"posted the request has the attribute ``enctype=\"multipart/form-data\"``. "
"Otherwise, ``request.FILES`` will be empty."
msgstr ""

# 40b8bd5c8cda4591af47802d1bb0fae4
#: ../../topics/http/file-uploads.txt:37
msgid ""
"Most of the time, you'll simply pass the file data from ``request`` into the"
" form as described in :ref:`binding-uploaded-files`. This would look "
"something like::"
msgstr ""

# aa300153f04340ce9fa12618198106d1
#: ../../topics/http/file-uploads.txt:58
msgid ""
"Notice that we have to pass :attr:`request.FILES "
"<django.http.HttpRequest.FILES>` into the form's constructor; this is how "
"file data gets bound into a form."
msgstr ""

# 1bfec75e6532494bbc8113d30660e780
#: ../../topics/http/file-uploads.txt:62
msgid "Handling uploaded files"
msgstr ""

# 51a71e4e3ee64102a2eaf885b1c64b57
#: ../../topics/http/file-uploads.txt:66
msgid ""
"The final piece of the puzzle is handling the actual file data from "
":attr:`request.FILES <django.http.HttpRequest.FILES>`. Each entry in this "
"dictionary is an ``UploadedFile`` object -- a simple wrapper around an "
"uploaded file. You'll usually use one of these methods to access the "
"uploaded content:"
msgstr ""

# 7ab656c7b82244a0bc4122b612ec2908
#: ../../topics/http/file-uploads.txt:73
msgid ""
"Read the entire uploaded data from the file. Be careful with this method: if"
" the uploaded file is huge it can overwhelm your system if you try to read "
"it into memory. You'll probably want to use ``chunks()`` instead; see below."
msgstr ""

# 09ff55529e474381adc6f189bf12b4c7
#: ../../topics/http/file-uploads.txt:80
msgid ""
"Returns ``True`` if the uploaded file is big enough to require reading in "
"multiple chunks. By default this will be any file larger than 2.5 megabytes,"
" but that's configurable; see below."
msgstr ""

# ecb2f0b26b684fc3af8fa4746813faa7
#: ../../topics/http/file-uploads.txt:86
msgid ""
"A generator returning chunks of the file. If ``multiple_chunks()`` is "
"``True``, you should use this method in a loop instead of ``read()``."
msgstr ""

# 4c584ed831e54443921a7f12f0bcd73a
#: ../../topics/http/file-uploads.txt:89
msgid ""
"In practice, it's often easiest simply to use ``chunks()`` all the time; see"
" the example below."
msgstr ""

# 3e86157ad07a465da05d90b9ab3392f3
#: ../../topics/http/file-uploads.txt:94
msgid "The name of the uploaded file (e.g. ``my_file.txt``)."
msgstr ""

# ca90be3fb908492ea7d7d718aeb99b9f
#: ../../topics/http/file-uploads.txt:98
msgid "The size, in bytes, of the uploaded file."
msgstr ""

# dd87cade0cd34b908171c190e975b4d5
#: ../../topics/http/file-uploads.txt:100
msgid ""
"There are a few other methods and attributes available on ``UploadedFile`` "
"objects; see `UploadedFile objects`_ for a complete reference."
msgstr ""

# 5e0064e99a7249aabd07364e2fe3d5fb
#: ../../topics/http/file-uploads.txt:103
msgid ""
"Putting it all together, here's a common way you might handle an uploaded "
"file::"
msgstr ""

# b2b5bcad95c04ea89b427be684ef44bb
#: ../../topics/http/file-uploads.txt:110
msgid ""
"Looping over ``UploadedFile.chunks()`` instead of using ``read()`` ensures "
"that large files don't overwhelm your system's memory."
msgstr ""

# 178045df2ee54c76b72109d01def73d4
#: ../../topics/http/file-uploads.txt:114
msgid "Where uploaded data is stored"
msgstr ""

# 9485d4e3b69741a9bd8338fdb0ed421d
#: ../../topics/http/file-uploads.txt:116
msgid "Before you save uploaded files, the data needs to be stored somewhere."
msgstr ""

# c9c30dd9fe0443cc96f53698d73c7707
#: ../../topics/http/file-uploads.txt:118
msgid ""
"By default, if an uploaded file is smaller than 2.5 megabytes, Django will "
"hold the entire contents of the upload in memory. This means that saving the"
" file involves only a read from memory and a write to disk and thus is very "
"fast."
msgstr ""

# 4aaf8bc8368e4ede97869afd8271f309
#: ../../topics/http/file-uploads.txt:122
msgid ""
"However, if an uploaded file is too large, Django will write the uploaded "
"file to a temporary file stored in your system's temporary directory. On a "
"Unix-like platform this means you can expect Django to generate a file "
"called something like ``/tmp/tmpzfp6I6.upload``. If an upload is large "
"enough, you can watch this file grow in size as Django streams the data onto"
" disk."
msgstr ""

# 9f6551a25fa04c8ca314787203c7ba3f
#: ../../topics/http/file-uploads.txt:128
msgid ""
"These specifics -- 2.5 megabytes; ``/tmp``; etc. -- are simply \"reasonable "
"defaults\". Read on for details on how you can customize or completely "
"replace upload behavior."
msgstr ""

# 1b7738cc08f44c55ae2e4a46c949bf59
#: ../../topics/http/file-uploads.txt:133
msgid "Changing upload handler behavior"
msgstr ""

# 70704591c76a471f97b1fcd2be7c5c50
#: ../../topics/http/file-uploads.txt:135
msgid "Three settings control Django's file upload behavior:"
msgstr ""

# 5fb4c08795a647ff9b290f62ca4e79e3
#: ../../topics/http/file-uploads.txt:142
msgid ":setting:`FILE_UPLOAD_MAX_MEMORY_SIZE`"
msgstr ""

# 9a110429e7034dfca32b339b7acbcf21
#: ../../topics/http/file-uploads.txt:138
msgid ""
"The maximum size, in bytes, for files that will be uploaded into memory. "
"Files larger than :setting:`FILE_UPLOAD_MAX_MEMORY_SIZE` will be streamed to"
" disk."
msgstr ""

# b2079cd9867e41f0b8079646859546a6
#: ../../topics/http/file-uploads.txt:142
msgid "Defaults to 2.5 megabytes."
msgstr ""

# c21b36b4f60744b1b9b95c32d9b682cb
#: ../../topics/http/file-uploads.txt:149
msgid ":setting:`FILE_UPLOAD_TEMP_DIR`"
msgstr ""

# 648cbcd5d386452c86887075994f3691
#: ../../topics/http/file-uploads.txt:145
msgid ""
"The directory where uploaded files larger than "
":setting:`FILE_UPLOAD_MAX_MEMORY_SIZE` will be stored."
msgstr ""

# 2d3fb8c5f78249e388d272e7293c65be
#: ../../topics/http/file-uploads.txt:148
msgid ""
"Defaults to your system's standard temporary directory (i.e. ``/tmp`` on "
"most Unix-like systems)."
msgstr ""

# 3ebddc96558445dabaf4b3bffb319a49
#: ../../topics/http/file-uploads.txt:168
msgid ":setting:`FILE_UPLOAD_PERMISSIONS`"
msgstr ""

# 5c57e53dd2b44fdaaf0a897579a83525
#: ../../topics/http/file-uploads.txt:152
msgid ""
"The numeric mode (i.e. ``0644``) to set newly uploaded files to. For more "
"information about what these modes mean, see the documentation for "
":func:`os.chmod`."
msgstr "Le mode numérique (ex : ``0644``) des permissions pour les nouveaux fichiers téléversés. Pour plus d'informations sur la signification des ces modes, consultez la documentation de :func:`os.chmod`."

# f0c1ea8c5ac8411eb0318e822e40ec9a
#: ../../topics/http/file-uploads.txt:156
msgid ""
"If this isn't given or is ``None``, you'll get operating-system dependent "
"behavior. On most platforms, temporary files will have a mode of ``0600``, "
"and files saved from memory will be saved using the system's standard umask."
msgstr "Si ce réglage n'est pas défini ou qu'il vaut ``None``, vous obtiendrez un comportement dépendant du système d'exploitation. Sur la plupart des plates-formes, les fichiers temporaires obtiennent un mode ``0600`` et les fichiers enregistrés à partir de la mémoire sont enregistrés avec le masque « umask » standard du système."

# 7314b5559bea421380688b2b84ede2b5
#: ../../topics/http/file-uploads.txt:163
msgid ""
"If you're not familiar with file modes, please note that the leading ``0`` "
"is very important: it indicates an octal number, which is the way that modes"
" must be specified. If you try to use ``644``, you'll get totally incorrect "
"behavior."
msgstr "Si vous n'êtes pas à l'aise avec les modes de fichiers, sachez que le premier ``0`` est très important : il indique un nombre octal, ce qui est la bonne manière d'indiquer les modes. Si vous essayez d'utiliser ``644``, vous obtiendrez un comportement totalement incorrect."

# 79adad00377642ba87b59f37b6fb63b3
#: ../../topics/http/file-uploads.txt:168
msgid "**Always prefix the mode with a 0.**"
msgstr "**Toujours précéder le mode d'un 0.**"

# 730156d1331a4f138d69ea172d9bd39f
#: ../../topics/http/file-uploads.txt:181
msgid ":setting:`FILE_UPLOAD_HANDLERS`"
msgstr ""

# cd5d6b8635054e8db88ca75f01e29814
#: ../../topics/http/file-uploads.txt:171
msgid ""
"The actual handlers for uploaded files. Changing this setting allows "
"complete customization -- even replacement -- of Django's upload process. "
"See `upload handlers`_, below, for details."
msgstr ""

# a9d3970d230c4801a9067a0e5390901c
#: ../../topics/http/file-uploads.txt:175
msgid "Defaults to::"
msgstr ""

# 94f226e58ecf4831af191d174d21333b
#: ../../topics/http/file-uploads.txt:180
msgid ""
"Which means \"try to upload to memory first, then fall back to temporary "
"files.\""
msgstr ""

# a1def8ce05fb4674bcfba1042e4a8446
#: ../../topics/http/file-uploads.txt:184
msgid "Handling uploaded files with a model"
msgstr ""

# f27fea0b0c6a4d29a8ece7f9e944e9ad
#: ../../topics/http/file-uploads.txt:186
msgid ""
"If you're saving a file on a :class:`~django.db.models.Model` with a "
":class:`~django.db.models.FileField`, using a "
":class:`~django.forms.ModelForm` makes this process much easier. The file "
"object will be saved to the location specified by the "
":attr:`~django.db.models.FileField.upload_to` argument of the corresponding "
":class:`~django.db.models.FileField` when calling ``form.save()``::"
msgstr ""

# 5d2e61a7ed174f5da68dbb1edb44487b
#: ../../topics/http/file-uploads.txt:208
msgid ""
"If you are constructing an object manually, you can simply assign the file "
"object from :attr:`request.FILES <django.http.HttpRequest.FILES>` to the "
"file field in the model::"
msgstr ""

# 8879cc1d18b1447b8c120f4fdbd51f3a
#: ../../topics/http/file-uploads.txt:230
msgid "``UploadedFile`` objects"
msgstr ""

# fad5247bad09496793eefbc6bd0be613
#: ../../topics/http/file-uploads.txt:232
msgid ""
"In addition to those inherited from :class:`~django.core.files.File`, all "
"``UploadedFile`` objects define the following methods/attributes:"
msgstr ""

# a7f8d6ffe4b143d29da704dfa9f94769
#: ../../topics/http/file-uploads.txt:237
msgid ""
"The content-type header uploaded with the file (e.g. :mimetype:`text/plain` "
"or :mimetype:`application/pdf`). Like any data supplied by the user, you "
"shouldn't trust that the uploaded file is actually this type. You'll still "
"need to validate that the file contains the content that the content-type "
"header claims -- \"trust but verify.\""
msgstr ""

# a4bcf2141ddd4d1c94c6405e8440131d
#: ../../topics/http/file-uploads.txt:245
msgid ""
"For :mimetype:`text/*` content-types, the character set (i.e. ``utf8``) "
"supplied by the browser. Again, \"trust but verify\" is the best policy "
"here."
msgstr ""

# 792bd6235aa446078ebd8f8c7efc89d0
#: ../../topics/http/file-uploads.txt:250
msgid ""
"Only files uploaded onto disk will have this method; it returns the full "
"path to the temporary uploaded file."
msgstr ""

# 728c8100f4c54d139d13de21f58ad58c
#: ../../topics/http/file-uploads.txt:255
msgid ""
"Like regular Python files, you can read the file line-by-line simply by "
"iterating over the uploaded file:"
msgstr ""

# a1500ff7b7cb4cf48b9049d77a6c23cc
#: ../../topics/http/file-uploads.txt:263
msgid ""
"However, *unlike* standard Python files, :class:`UploadedFile` only "
"understands ``\\n`` (also known as \"Unix-style\") line endings. If you know"
" that you need to handle uploaded files with different line endings, you'll "
"need to do so in your view."
msgstr ""

# 6828180c16ee48c4b43f0a9b21e446c1
#: ../../topics/http/file-uploads.txt:269
msgid "Upload Handlers"
msgstr ""

# 8dba737197a94d2cba8bac1ab73974d6
#: ../../topics/http/file-uploads.txt:271
msgid ""
"When a user uploads a file, Django passes off the file data to an *upload "
"handler* -- a small class that handles file data as it gets uploaded. Upload"
" handlers are initially defined in the :setting:`FILE_UPLOAD_HANDLERS` "
"setting, which defaults to::"
msgstr ""

# 61903bd989684528a7f1217c74ec0f6b
#: ../../topics/http/file-uploads.txt:279
msgid ""
"Together the ``MemoryFileUploadHandler`` and ``TemporaryFileUploadHandler`` "
"provide Django's default file upload behavior of reading small files into "
"memory and large ones onto disk."
msgstr ""

# 366648776e8c46db995ea7db84db43ce
#: ../../topics/http/file-uploads.txt:283
msgid ""
"You can write custom handlers that customize how Django handles files. You "
"could, for example, use custom handlers to enforce user-level quotas, "
"compress data on the fly, render progress bars, and even send data to "
"another storage location directly without storing it locally."
msgstr ""

# 49e24f5049044e22b1aaf163fd441df1
#: ../../topics/http/file-uploads.txt:291
msgid "Modifying upload handlers on the fly"
msgstr ""

# 62a75d96a7054948953311f7082474e5
#: ../../topics/http/file-uploads.txt:293
msgid ""
"Sometimes particular views require different upload behavior. In these "
"cases, you can override upload handlers on a per-request basis by modifying "
"``request.upload_handlers``. By default, this list will contain the upload "
"handlers given by :setting:`FILE_UPLOAD_HANDLERS`, but you can modify the "
"list as you would any other list."
msgstr ""

# ac24ad865fe84a8fbbf83dfc56ac245e
#: ../../topics/http/file-uploads.txt:299
msgid ""
"For instance, suppose you've written a ``ProgressBarUploadHandler`` that "
"provides feedback on upload progress to some sort of AJAX widget. You'd add "
"this handler to your upload handlers like this::"
msgstr ""

# 70166959fc234538bf6a5e3544db70ef
#: ../../topics/http/file-uploads.txt:305
msgid ""
"You'd probably want to use ``list.insert()`` in this case (instead of "
"``append()``) because a progress bar handler would need to run *before* any "
"other handlers. Remember, the upload handlers are processed in order."
msgstr ""

# befd94dbddb0402cbd84fb0c7eab9306
#: ../../topics/http/file-uploads.txt:309
msgid ""
"If you want to replace the upload handlers completely, you can just assign a"
" new list::"
msgstr ""

# 29e7b0dd5fcd491dbea087eb759f1882
#: ../../topics/http/file-uploads.txt:316
msgid ""
"You can only modify upload handlers *before* accessing ``request.POST`` or "
"``request.FILES`` -- it doesn't make sense to change upload handlers after "
"upload handling has already started. If you try to modify "
"``request.upload_handlers`` after reading from ``request.POST`` or "
"``request.FILES`` Django will throw an error."
msgstr ""

# ed9bea55b5d141be872ce45ba8c33443
#: ../../topics/http/file-uploads.txt:323
msgid ""
"Thus, you should always modify uploading handlers as early in your view as "
"possible."
msgstr ""

# 3a0f280a705a465cbb42962aa9cd94c8
#: ../../topics/http/file-uploads.txt:326
msgid ""
"Also, ``request.POST`` is accessed by "
":class:`~django.middleware.csrf.CsrfViewMiddleware` which is enabled by "
"default. This means you will need to use "
":func:`~django.views.decorators.csrf.csrf_exempt` on your view to allow you "
"to change the upload handlers.  You will then need to use "
":func:`~django.views.decorators.csrf.csrf_protect` on the function that "
"actually processes the request.  Note that this means that the handlers may "
"start receiving the file upload before the CSRF checks have been done. "
"Example code:"
msgstr ""

# 0ea5a33be8d04d20825eddcb029df85e
#: ../../topics/http/file-uploads.txt:351
msgid "Writing custom upload handlers"
msgstr ""

# c3fe0d1197ef4449b3ed9f4ad04ab88b
#: ../../topics/http/file-uploads.txt:353
msgid ""
"All file upload handlers should be subclasses of "
"``django.core.files.uploadhandler.FileUploadHandler``. You can define upload"
" handlers wherever you wish."
msgstr ""

# bb898d009beb40518322c6a9b83d4d81
#: ../../topics/http/file-uploads.txt:358
msgid "Required methods"
msgstr ""

# f08b9bd8f2ba4a39b8e2e63b3e818278
#: ../../topics/http/file-uploads.txt:360
msgid "Custom file upload handlers **must** define the following methods:"
msgstr ""

# eddc838ec5734c0899008159a9987d96
#: ../../topics/http/file-uploads.txt:380
msgid "``FileUploadHandler.receive_data_chunk(self, raw_data, start)``"
msgstr ""

# 5ef5bc98e81b432185f2c259f6994d45
#: ../../topics/http/file-uploads.txt:363
msgid "Receives a \"chunk\" of data from the file upload."
msgstr ""

# 6611180bbd16479d87cc42ff76b74fe5
#: ../../topics/http/file-uploads.txt:365
msgid "``raw_data`` is a byte string containing the uploaded data."
msgstr ""

# 76960a00047d4969a81b3e044370421d
#: ../../topics/http/file-uploads.txt:367
msgid ""
"``start`` is the position in the file where this ``raw_data`` chunk begins."
msgstr ""

# 678e8a7aeb884d8d89316135577a89ec
#: ../../topics/http/file-uploads.txt:370
msgid ""
"The data you return will get fed into the subsequent upload handlers' "
"``receive_data_chunk`` methods. In this way, one handler can be a \"filter\""
" for other handlers."
msgstr ""

# 07344d0ff6e3486ebc679485e929a3b0
#: ../../topics/http/file-uploads.txt:374
msgid ""
"Return ``None`` from ``receive_data_chunk`` to short-circuit remaining "
"upload handlers from getting this chunk. This is useful if you're storing "
"the uploaded data yourself and don't want future handlers to store a copy of"
" the data."
msgstr ""

# 375f8254104a4c74af4725264e2de3cb
#: ../../topics/http/file-uploads.txt:379
msgid ""
"If you raise a ``StopUpload`` or a ``SkipFile`` exception, the upload will "
"abort or the file will be completely skipped."
msgstr ""

# 07b70b84e81043b5a25d8235546fdba7
#: ../../topics/http/file-uploads.txt:387
msgid "``FileUploadHandler.file_complete(self, file_size)``"
msgstr ""

# 411a81aadf2643eda3b229647be4e4c1
#: ../../topics/http/file-uploads.txt:383
msgid "Called when a file has finished uploading."
msgstr ""

# 8da7359363fd4f58b3ed09ced4d6ee4a
#: ../../topics/http/file-uploads.txt:385
msgid ""
"The handler should return an ``UploadedFile`` object that will be stored in "
"``request.FILES``. Handlers may also return ``None`` to indicate that the "
"``UploadedFile`` object should come from subsequent upload handlers."
msgstr ""

# 2834187119f24b6bbe28733d7f9b0a36
#: ../../topics/http/file-uploads.txt:390
msgid "Optional methods"
msgstr ""

# 58b7835c44084244b38cf6731e86c7b2
#: ../../topics/http/file-uploads.txt:392
msgid ""
"Custom upload handlers may also define any of the following optional methods"
" or attributes:"
msgstr ""

# 10b5daab80b846bfb17fe3836fd7b1b1
#: ../../topics/http/file-uploads.txt:405
msgid "``FileUploadHandler.chunk_size``"
msgstr ""

# dda51f74e3584ed08eafc4e3426c92cf
#: ../../topics/http/file-uploads.txt:396
msgid ""
"Size, in bytes, of the \"chunks\" Django should store into memory and feed "
"into the handler. That is, this attribute controls the size of chunks fed "
"into ``FileUploadHandler.receive_data_chunk``."
msgstr ""

# e1e26cfd28204655bc101b2380d6b7c6
#: ../../topics/http/file-uploads.txt:400
msgid ""
"For maximum performance the chunk sizes should be divisible by ``4`` and "
"should not exceed 2 GB (2\\ :sup:`31` bytes) in size. When there are "
"multiple chunk sizes provided by multiple handlers, Django will use the "
"smallest chunk size defined by any handler."
msgstr ""

# d4b623df2ae845ba902e122d648214cb
#: ../../topics/http/file-uploads.txt:405
msgid "The default is 64*2\\ :sup:`10` bytes, or 64 KB."
msgstr ""

# bc51bdac2fd5470fa808d5462f7b9a42
#: ../../topics/http/file-uploads.txt:425
msgid ""
"``FileUploadHandler.new_file(self, field_name, file_name, content_type, "
"content_length, charset)``"
msgstr ""

# 9547f8e168244932b364fece5ce18118
#: ../../topics/http/file-uploads.txt:408
msgid ""
"Callback signaling that a new file upload is starting. This is called before"
" any data has been fed to any upload handlers."
msgstr ""

# b8fc8bc2974e4bf19dc9e906d8345342
#: ../../topics/http/file-uploads.txt:411
msgid "``field_name`` is a string name of the file ``<input>`` field."
msgstr ""

# 366f61f3303f4cf6b1b8fa9137e95895
#: ../../topics/http/file-uploads.txt:413
msgid ""
"``file_name`` is the unicode filename that was provided by the browser."
msgstr ""

# bf0359a117a3472d96ac5220b21c487a
#: ../../topics/http/file-uploads.txt:415
msgid ""
"``content_type`` is the MIME type provided by the browser -- E.g. "
"``'image/jpeg'``."
msgstr ""

# 2fade106861c4b9e8bfb408007cdea74
#: ../../topics/http/file-uploads.txt:418
msgid ""
"``content_length`` is the length of the image given by the browser. "
"Sometimes this won't be provided and will be ``None``."
msgstr ""

# 7c262015207841ceb329ef0fd71329be
#: ../../topics/http/file-uploads.txt:421
msgid ""
"``charset`` is the character set (i.e. ``utf8``) given by the browser. Like "
"``content_length``, this sometimes won't be provided."
msgstr ""

# b5a7a814b53c410683aa289e7ad0b1f2
#: ../../topics/http/file-uploads.txt:424
msgid ""
"This method may raise a ``StopFutureHandlers`` exception to prevent future "
"handlers from handling this file."
msgstr ""

# 7e706fcdd98044ab8d726ae3432dfea6
#: ../../topics/http/file-uploads.txt:428
msgid "``FileUploadHandler.upload_complete(self)``"
msgstr ""

# 6954c1bc681248cb89b5930ae691733f
#: ../../topics/http/file-uploads.txt:428
msgid "Callback signaling that the entire upload (all files) has completed."
msgstr ""

# 2b087887cce044f18129c110a7926fea
#: ../../topics/http/file-uploads.txt:446
msgid ""
"``FileUploadHandler.handle_raw_input(self, input_data, META, content_length,"
" boundary, encoding)``"
msgstr ""

# 80930804337e4f45a6b9416f842cf583
#: ../../topics/http/file-uploads.txt:431
msgid ""
"Allows the handler to completely override the parsing of the raw HTTP input."
msgstr ""

# c1f27a205db5433a99861d53e3294a33
#: ../../topics/http/file-uploads.txt:434
msgid "``input_data`` is a file-like object that supports ``read()``-ing."
msgstr ""

# 47d5c40a4cc04f8c9a9bcee4b64221bb
#: ../../topics/http/file-uploads.txt:436
msgid "``META`` is the same object as ``request.META``."
msgstr ""

# d6abe8810ae749b78f0c38da32bb136c
#: ../../topics/http/file-uploads.txt:438
msgid ""
"``content_length`` is the length of the data in ``input_data``. Don't read "
"more than ``content_length`` bytes from ``input_data``."
msgstr ""

# 47bb1aefeb39458b829bafa30fd6c87e
#: ../../topics/http/file-uploads.txt:441
msgid "``boundary`` is the MIME boundary for this request."
msgstr ""

# 5e80f4dda9c748df842e88fa9428fb11
#: ../../topics/http/file-uploads.txt:443
msgid "``encoding`` is the encoding of the request."
msgstr ""

# 80e76842483f4d87b3c6bcb6555e031b
#: ../../topics/http/file-uploads.txt:445
msgid ""
"Return ``None`` if you want upload handling to continue, or a tuple of "
"``(POST, FILES)`` if you want to return the new data structures suitable for"
" the request directly."
msgstr ""

# abf44c5f6a78428e8fa87add6f3e523e
#: ../../topics/http/generic-views.txt:3
msgid "Generic views"
msgstr ""

# 3ab854cb33754b738aac6396ae9f02c0
#: ../../topics/http/generic-views.txt:5
msgid "See :doc:`/ref/class-based-views/index`."
msgstr ""

# 3d91263a2e914d9495d07340eeef20d9
#: ../../topics/http/index.txt:2
msgid "Handling HTTP requests"
msgstr ""

# a828445f23134ac2993d5f14ba845751
#: ../../topics/http/index.txt:4
msgid "Information on handling HTTP requests in Django:"
msgstr ""

# 024d085effe244bbbf7739e9f15b4aed
#: ../../topics/http/middleware.txt:3
msgid "Middleware"
msgstr "Middleware"

# 699229692bfc4fc49a01de57c353c25f
#: ../../topics/http/middleware.txt:5
msgid ""
"Middleware is a framework of hooks into Django's request/response "
"processing. It's a light, low-level \"plugin\" system for globally altering "
"Django's input or output."
msgstr ""

# 4c7adf63598d40f5bee673be086249aa
#: ../../topics/http/middleware.txt:9
msgid ""
"Each middleware component is responsible for doing some specific function. "
"For example, Django includes a middleware component, "
":class:`~django.middleware.transaction.TransactionMiddleware`, that wraps "
"the processing of each HTTP request in a database transaction."
msgstr ""

# 69a310b15e0947e2bad01717384bdf96
#: ../../topics/http/middleware.txt:14
msgid ""
"This document explains how middleware works, how you activate middleware, "
"and how to write your own middleware. Django ships with some built-in "
"middleware you can use right out of the box. They're documented in the :doc"
":`built-in middleware reference </ref/middleware>`."
msgstr ""

# 754292998a8842998dfaa2631a04f9ab
#: ../../topics/http/middleware.txt:20
msgid "Activating middleware"
msgstr "Activation des middlewares"

# a1e2a8dad3214e029ba279b5cfb6570e
#: ../../topics/http/middleware.txt:22
msgid ""
"To activate a middleware component, add it to the "
":setting:`MIDDLEWARE_CLASSES` tuple in your Django settings."
msgstr ""

# 3198ed7ed0df45898ee34061e7f2baf1
#: ../../topics/http/middleware.txt:25
msgid ""
"In :setting:`MIDDLEWARE_CLASSES`, each middleware component is represented "
"by a string: the full Python path to the middleware's class name. For "
"example, here's the default value created by :djadmin:`django-admin.py "
"startproject <startproject>`::"
msgstr ""

# 07d1864648c34e26820cd3d8eb38ff80
#: ../../topics/http/middleware.txt:39
msgid ""
"A Django installation doesn't require any middleware — "
":setting:`MIDDLEWARE_CLASSES` can be empty, if you'd like — but it's "
"strongly suggested that you at least use "
":class:`~django.middleware.common.CommonMiddleware`."
msgstr ""

# 1bd3fa123d31497ca24c0ec864134286
#: ../../topics/http/middleware.txt:44
msgid ""
"The order in :setting:`MIDDLEWARE_CLASSES` matters because a middleware can "
"depend on other middleware. For instance, "
":class:`~django.contrib.auth.middleware.AuthenticationMiddleware` stores the"
" authenticated user in the session; therefore, it must run after "
":class:`~django.contrib.sessions.middleware.SessionMiddleware`."
msgstr ""

# ac04b1227f7b4c1ca32f6e02d7cd65d0
#: ../../topics/http/middleware.txt:51
msgid "Hooks and application order"
msgstr ""

# 7cce36a77828475fb252706fba3928c9
#: ../../topics/http/middleware.txt:53
msgid ""
"During the request phase, before calling the view, Django applies middleware"
" in the order it's defined in :setting:`MIDDLEWARE_CLASSES`, top-down. Two "
"hooks are available:"
msgstr ""

# 11a63f26332f4604ab16ecf2ca85639c
#: ../../topics/http/middleware.txt:57
msgid ":meth:`process_request`"
msgstr ""

# 38de13b89e2a4026a6e3d3bce47fa540
#: ../../topics/http/middleware.txt:58
msgid ":meth:`process_view`"
msgstr ""

# 7a6f39cde69541f9b5a46bafaba05ca6
#: ../../topics/http/middleware.txt:60
msgid ""
"During the response phase, after calling the view, middleware are applied in"
" reverse order, from the bottom up. Three hooks are available:"
msgstr ""

# fc3281fb70db4d869a0cc8d78d296d3a
#: ../../topics/http/middleware.txt:63
msgid ":meth:`process_exception` (only if the view raised an exception)"
msgstr ""

# b4a673d3ad0a4c2ab0505def2e2af2a5
#: ../../topics/http/middleware.txt:64
msgid ":meth:`process_template_response` (only for template responses)"
msgstr ""

# eabc4ba0223442ecb2c3e1d5150be4dc
#: ../../topics/http/middleware.txt:65
msgid ":meth:`process_response`"
msgstr ""

# d3c1cd874a9548789c6f9e1142779690
#: ../../topics/http/middleware.txt:72
msgid ""
"If you prefer, you can also think of it like an onion: each middleware class"
" is a \"layer\" that wraps the view."
msgstr ""

# 7bc4cb59808d4099ae6c29063d40e7cc
#: ../../topics/http/middleware.txt:75
msgid "The behavior of each hook is described below."
msgstr ""

# ebb2217a1dce42168b9fcf09e51db76d
#: ../../topics/http/middleware.txt:78
msgid "Writing your own middleware"
msgstr "Écriture de son propre middleware"

# 70a5425b931d47869c77b14c59147da9
#: ../../topics/http/middleware.txt:80
msgid ""
"Writing your own middleware is easy. Each middleware component is a single "
"Python class that defines one or more of the following methods:"
msgstr "Il est facile d'écrire un middleware. Chaque composant middleware est une classe Python unique qui définit l'une ou plusieurs des méthodes suivantes :"

# adfa1c427f854bf48529e8653a6a4264
#: ../../topics/http/middleware.txt:86
msgid "``process_request``"
msgstr "``process_request``"

# 77c2243ed6244a8b8da5c4f0fcf661e1
#: ../../topics/http/middleware.txt:90
msgid "``request`` is an :class:`~django.http.HttpRequest` object."
msgstr ""

# 2df286925a964306ab82f089955c9595
#: ../../topics/http/middleware.txt:92
msgid ""
"``process_request()`` is called on each request, before Django decides which"
" view to execute."
msgstr ""

# 59aab3e5e56a46579ff90c897f13a3c3
#: ../../topics/http/middleware.txt:95
msgid ""
"It should return either ``None`` or an :class:`~django.http.HttpResponse` "
"object. If it returns ``None``, Django will continue processing this "
"request, executing any other ``process_request()`` middleware, then, "
"``process_view()`` middleware, and finally, the appropriate view. If it "
"returns an :class:`~django.http.HttpResponse` object, Django won't bother "
"calling any other request, view or exception middleware, or the appropriate "
"view; it'll apply response middleware to that "
":class:`~django.http.HttpResponse`, and return the result."
msgstr ""

# b0ffd09d2be046fa8727fae4f9a35f12
#: ../../topics/http/middleware.txt:107
msgid "``process_view``"
msgstr "``process_view``"

# e57070dc555944b8b1765fc8f0bfa956
#: ../../topics/http/middleware.txt:111
msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``view_func`` is"
" the Python function that Django is about to use. (It's the actual function "
"object, not the name of the function as a string.) ``view_args`` is a list "
"of positional arguments that will be passed to the view, and ``view_kwargs``"
" is a dictionary of keyword arguments that will be passed to the view. "
"Neither ``view_args`` nor ``view_kwargs`` include the first view argument "
"(``request``)."
msgstr "``request`` est un objet :class:`~django.http.HttpRequest`. ``view_func`` et la fonction python que Django s'apprête à utiliser (il s'agit bien de l'objet fonction, pas du nom textuel de la fonction). ``view_args`` est une liste de paramètres positionnels qui seront transmis à la vue, et ``view_kwargs`` est un dictionnaire de paramètres nommés qui seront transmis à la vue. Ni ``view_args`` ni ``view_kwargs`` ne comprennent le premier paramètre de la vue (``request``)."

# de9201e49c5048cdae88ae2eabaa6102
#: ../../topics/http/middleware.txt:119
msgid "``process_view()`` is called just before Django calls the view."
msgstr ""

# f7daa1d18f3d4c2380c75a4f442fa073
#: ../../topics/http/middleware.txt:121
msgid ""
"It should return either ``None`` or an :class:`~django.http.HttpResponse` "
"object. If it returns ``None``, Django will continue processing this "
"request, executing any other ``process_view()`` middleware and, then, the "
"appropriate view. If it returns an :class:`~django.http.HttpResponse` "
"object, Django won't bother calling any other view or exception middleware, "
"or the appropriate view; it'll apply response middleware to that "
":class:`~django.http.HttpResponse`, and return the result."
msgstr ""

# cd0b6952040a48efad444509ec54ce28
#: ../../topics/http/middleware.txt:131
msgid ""
"Accessing :attr:`request.POST <django.http.HttpRequest.POST>` or "
":attr:`request.REQUEST <django.http.HttpRequest.REQUEST>` inside middleware "
"from ``process_request`` or ``process_view`` will prevent any view running "
"after the middleware from being able to :ref:`modify the upload handlers for"
" the request <modifying_upload_handlers_on_the_fly>`, and should normally be"
" avoided."
msgstr "L'accès à :attr:`request.POST <django.http.HttpRequest.POST>` ou :attr:`request.REQUEST <django.http.HttpRequest.REQUEST>` depuis un middleware dans ses méthodes ``process_request`` ou ``process_view`` empêche toute vue exécutée après les middlewares de pouvoir :ref:`modifier les gestionnaires de téléversement de la requête <modifying_upload_handlers_on_the_fly>`, et devrait donc être évité."

# d4f655b6b9f64c7380a42d4b7bcfb600
#: ../../topics/http/middleware.txt:138
msgid ""
"The :class:`~django.middleware.csrf.CsrfViewMiddleware` class can be "
"considered an exception, as it provides the "
":func:`~django.views.decorators.csrf.csrf_exempt` and "
":func:`~django.views.decorators.csrf.csrf_protect` decorators which allow "
"views to explicitly control at what point the CSRF validation should occur."
msgstr "La classe :class:`~django.middleware.csrf.CsrfViewMiddleware` peut être considérée comme une exception, car elle fournit les décorateurs :func:`~django.views.decorators.csrf.csrf_exempt` et :func:`~django.views.decorators.csrf.csrf_protect` qui permettent aux vues de contrôler explicitement le moment de la validation CSRF."

# c32819effbcf4d3fbc675ae9521eb50b
#: ../../topics/http/middleware.txt:147
msgid "``process_template_response``"
msgstr "``process_template_response``"

# 23e92846a1b8477d8bcb81473d4f8795
#: ../../topics/http/middleware.txt:151
msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``response`` is "
"the :class:`~django.template.response.TemplateResponse` object (or "
"equivalent) returned by a Django view or by a middleware."
msgstr ""

# bd9413114e8f411aaf4a5291c1e6f360
#: ../../topics/http/middleware.txt:155
msgid ""
"``process_template_response()`` is called just after the view has finished "
"executing, if the response instance has a ``render()`` method, indicating "
"that it is a :class:`~django.template.response.TemplateResponse` or "
"equivalent."
msgstr ""

# c9d836c42ec743b7a373e0f2eff0e1ca
#: ../../topics/http/middleware.txt:159
msgid ""
"It must return a response object that implements a ``render`` method. It "
"could alter the given ``response`` by changing ``response.template_name`` "
"and ``response.context_data``, or it could create and return a brand-new "
":class:`~django.template.response.TemplateResponse` or equivalent."
msgstr ""

# 60e123e3f8104869bf06cf60bb7ae156
#: ../../topics/http/middleware.txt:164
msgid ""
"You don't need to explicitly render responses -- responses will be "
"automatically rendered once all template response middleware has been "
"called."
msgstr "Il n'est pas nécessaire d'effectuer explicitement le rendu des réponses, celles-ci étant automatiquement « rendues » après que tous les middleware de réponse ont été appelés."

# 4e9b03ba06a248668fa550bb85efc43b
#: ../../topics/http/middleware.txt:168
msgid ""
"Middleware are run in reverse order during the response phase, which "
"includes ``process_template_response()``."
msgstr ""

# 644470b1afd846709daafa9954b5adb7
#: ../../topics/http/middleware.txt:174
msgid "``process_response``"
msgstr "``process_response``"

# a0132404f8fe44a4883f84029b495c92
#: ../../topics/http/middleware.txt:178
msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``response`` is "
"the :class:`~django.http.HttpResponse` or "
":class:`~django.http.StreamingHttpResponse` object returned by a Django view"
" or by a middleware."
msgstr ""

# f3b3fe10e75842aab6bed832c63e44c4
#: ../../topics/http/middleware.txt:183
msgid ""
"``process_response()`` is called on all responses before they're returned to"
" the browser."
msgstr ""

# 9e4b8ffe13be4eae9d667cef280d9ec6
#: ../../topics/http/middleware.txt:186
msgid ""
"It must return an :class:`~django.http.HttpResponse` or "
":class:`~django.http.StreamingHttpResponse` object. It could alter the given"
" ``response``, or it could create and return a brand-new "
":class:`~django.http.HttpResponse` or "
":class:`~django.http.StreamingHttpResponse`."
msgstr ""

# 4ae71d3d1c64414f9bb0ad49902c4a1c
#: ../../topics/http/middleware.txt:192
msgid ""
"Unlike the ``process_request()`` and ``process_view()`` methods, the "
"``process_response()`` method is always called, even if the "
"``process_request()`` and ``process_view()`` methods of the same middleware "
"class were skipped (because an earlier middleware method returned an "
":class:`~django.http.HttpResponse`). In particular, this means that your "
"``process_response()`` method cannot rely on setup done in "
"``process_request()``."
msgstr ""

# 2b616068888348ce984555264f96e5ad
#: ../../topics/http/middleware.txt:200
msgid ""
"Finally, remember that during the response phase, middleware are applied in "
"reverse order, from the bottom up. This means classes defined at the end of "
":setting:`MIDDLEWARE_CLASSES` will be run first."
msgstr ""

# 62a7f45d69d844188f4c9b64ae73b61e
#: ../../topics/http/middleware.txt:205
msgid "Dealing with streaming responses"
msgstr ""

# 2042e8506645407e91ab7b1eceee5ee5
#: ../../topics/http/middleware.txt:209
msgid ""
"``response`` may also be an :class:`~django.http.StreamingHttpResponse` "
"object."
msgstr ""

# 532391865af8494bac11a7617ed132ef
#: ../../topics/http/middleware.txt:212
msgid ""
"Unlike :class:`~django.http.HttpResponse`, "
":class:`~django.http.StreamingHttpResponse` does not have a ``content`` "
"attribute. As a result, middleware can no longer assume that all responses "
"will have a ``content`` attribute. If they need access to the content, they "
"must test for streaming responses and adjust their behavior accordingly::"
msgstr "Au contraire de :class:`~django.http.HttpResponse`, :class:`~django.http.StreamingHttpResponse` ne possède pas d'attribut ``content``. En conséquence, les middlewares ne peuvent plus compter sur le fait que toutes les réponses possèdent un attribut ``content``. S'ils ont besoin d'accéder au contenu, ils doivent savoir s'ils ont affaire avec une réponse de type flux (streaming) et ajuster leur comportement en fonction de cela ::"

# 221c5e0b2fc041cc9dcf0e3038924437
#: ../../topics/http/middleware.txt:225
msgid ""
"``streaming_content`` should be assumed to be too large to hold in memory. "
"Response middleware may wrap it in a new generator, but must not consume it."
" Wrapping is typically implemented as follows::"
msgstr ""

# 9ed5a72f9da94681ab2f184cfe0c3325
#: ../../topics/http/middleware.txt:236
msgid "``process_exception``"
msgstr "``process_exception``"

# fba0765018604d529a9fa4b3f3b6b883
#: ../../topics/http/middleware.txt:240
msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``exception`` is"
" an ``Exception`` object raised by the view function."
msgstr "``request`` est un objet :class:`~django.http.HttpRequest`. ``exception`` est un objet ``Exception`` généré par la fonction de vue."

# 4c233f87d9cb4bf7b13925d586fa30ec
#: ../../topics/http/middleware.txt:243
msgid ""
"Django calls ``process_exception()`` when a view raises an exception. "
"``process_exception()`` should return either ``None`` or an "
":class:`~django.http.HttpResponse` object. If it returns an "
":class:`~django.http.HttpResponse` object, the template response and "
"response middleware will be applied, and the resulting response returned to "
"the browser. Otherwise, default exception handling kicks in."
msgstr ""

# 89cfcda31f0c427d89c804441612ebcf
#: ../../topics/http/middleware.txt:250
msgid ""
"Again, middleware are run in reverse order during the response phase, which "
"includes ``process_exception``. If an exception middleware returns a "
"response, the middleware classes above that middleware will not be called at"
" all."
msgstr "Encore une fois, les middlewares sont exécutés dans l'ordre inverse lors de la phase de réponse, ce qui comprend ``process_exception``. Si un middleware d'exception renvoie une réponse, les classes de middleware situées au-dessus ne seront pas du tout appelées."

# a99d80cc50e14cd4b510511363ea5f11
#: ../../topics/http/middleware.txt:255
msgid "``__init__``"
msgstr "``__init__``"

# ed46efad6284483ea6c071988e5b9967
#: ../../topics/http/middleware.txt:257
msgid ""
"Most middleware classes won't need an initializer since middleware classes "
"are essentially placeholders for the ``process_*`` methods. If you do need "
"some global state you may use ``__init__`` to set up. However, keep in mind "
"a couple of caveats:"
msgstr "La plupart des classes de middleware ne nécessitent pas d'initialisation dans la mesure où elles sont essentiellement des conteneurs pour les méthodes ``process_*``. Si vous avez besoin d'une notion d'état global, il est possible d'utiliser ``__init__`` pour cela. Cependant, gardez à l'esprit ces restrictions :"

# 7ea655c902fa4013816bb7abeb404cf6
#: ../../topics/http/middleware.txt:262
msgid ""
"Django initializes your middleware without any arguments, so you can't "
"define ``__init__`` as requiring any arguments."
msgstr "Django initialise les middlewares sans paramètre, il n'est donc pas possible de définir des paramètres obligatoires à ``__init__``."

# 583b64bdc26143859a18687bd03377c9
#: ../../topics/http/middleware.txt:265
msgid ""
"Unlike the ``process_*`` methods which get called once per request, "
"``__init__`` gets called only *once*, when the Web server responds to the "
"first request."
msgstr "Contrairement aux méthodes ``process_*`` qui sont appelées une fois par requête, ``__init__`` n'est appelée qu'*une seule fois*, lorsque le serveur Web répond à la première requête."

# 319deeac66b74f08a93961505dfc7fd4
#: ../../topics/http/middleware.txt:270
msgid "Marking middleware as unused"
msgstr "Signalement d'un middleware à exclure"

# 1e259da1e6d641c08c45c36c3ece2d40
#: ../../topics/http/middleware.txt:272
msgid ""
"It's sometimes useful to determine at run-time whether a piece of middleware"
" should be used. In these cases, your middleware's ``__init__`` method may "
"raise :exc:`django.core.exceptions.MiddlewareNotUsed`. Django will then "
"remove that piece of middleware from the middleware process."
msgstr ""

# 73856f83786a43c0914744b7adeb204d
#: ../../topics/http/middleware.txt:278
msgid "Guidelines"
msgstr "Lignes de conduite"

# e8ab2565b2264e0cb86c129d5363c4c6
#: ../../topics/http/middleware.txt:280
msgid "Middleware classes don't have to subclass anything."
msgstr "Les classes de middleware n'ont aucune obligation d'héritage."

# 68fd764ac5064726b5dbf904030415b3
#: ../../topics/http/middleware.txt:282
msgid ""
"The middleware class can live anywhere on your Python path. All Django cares"
" about is that the :setting:`MIDDLEWARE_CLASSES` setting includes the path "
"to it."
msgstr "Une classe de middleware peut se trouver n'importe où dans le chemin Python. Tout ce que Django demande, c'est que le réglage :setting:`MIDDLEWARE_CLASSES` contienne le chemin du middleware."

# 1baadbe44e614b9884df10be12f633c5
#: ../../topics/http/middleware.txt:286
msgid ""
"Feel free to look at :doc:`Django's available middleware </ref/middleware>` "
"for examples."
msgstr "N'hésitez pas à examiner les :doc:`middleware disponibles dans Django </ref/middleware>` pour avoir des exemples."

# aea19d1a636144e795ce59c40ea20815
#: ../../topics/http/middleware.txt:289
msgid ""
"If you write a middleware component that you think would be useful to other "
"people, contribute to the community! :doc:`Let us know "
"</internals/contributing/index>`, and we'll consider adding it to Django."
msgstr "Si vous écrivez un composant middleware que vous pensez susceptible d'être utilisé par d'autres personnes, contribuez à la communauté ! :doc:`Faites-le nous savoir </internals/contributing/index>` et nous considérerons son éventuel ajout dans Django."

# 30f44ce754784271b66cb8758d65fb5e
#: ../../topics/http/sessions.txt:3
msgid "How to use sessions"
msgstr "Utilisation des sessions"

# 82f1668864084128bbc158e6a5ccbb8d
#: ../../topics/http/sessions.txt:8
msgid ""
"Django provides full support for anonymous sessions. The session framework "
"lets you store and retrieve arbitrary data on a per-site-visitor basis. It "
"stores data on the server side and abstracts the sending and receiving of "
"cookies. Cookies contain a session ID -- not the data itself (unless you're "
"using the :ref:`cookie based backend<cookie-session-backend>`)."
msgstr "Django prend complètement en charge les sessions anonymes. L'infrastructure des sessions permet de stocker et de récupérer des données arbitraires sur la base « un site-un visiteur ». Les données sont stockées côté serveur ; l'envoi et la réception des cookies sont transparents. Les cookies contiennent un identifiant de session, et non pas les données elles-mêmes (sauf si vous utilisez le :ref:`moteur basé sur les cookies<cookie-session-backend>`)."

# 8784a1b4185943e6a1b73795962d9558
#: ../../topics/http/sessions.txt:15
msgid "Enabling sessions"
msgstr "Activation des sessions"

# 4f8741ed9e954b58adb28b062d7dc8cf
#: ../../topics/http/sessions.txt:17
msgid ""
"Sessions are implemented via a piece of :doc:`middleware </ref/middleware>`."
msgstr "Les sessions sont implémentées par l'intermédiaire d'un composant :doc:`middleware </ref/middleware>`."

# f4050d13117647bf83c6f9a38b7352a1
#: ../../topics/http/sessions.txt:19
msgid "To enable session functionality, do the following:"
msgstr "Pour activer la fonctionnalité des sessions, faites ce qui suit :"

# dd1da46ec2dc4923894fa961e10f08d9
#: ../../topics/http/sessions.txt:21
msgid ""
"Edit the :setting:`MIDDLEWARE_CLASSES` setting and make sure it contains "
"``'django.contrib.sessions.middleware.SessionMiddleware'``. The default "
"``settings.py`` created by ``django-admin.py startproject`` has "
"``SessionMiddleware`` activated."
msgstr "Contrôlez que le réglage :setting:`MIDDLEWARE_CLASSES` contient bien ``'django.contrib.sessions.middleware.SessionMiddleware'``. Le fichier ``settings.py`` créé par défaut par ``django-admin.py startproject`` active ``SessionMiddleware``."

# c28ebd46e6c14872a1c02d965edd33dd
#: ../../topics/http/sessions.txt:26
msgid ""
"If you don't want to use sessions, you might as well remove the "
"``SessionMiddleware`` line from :setting:`MIDDLEWARE_CLASSES` and "
"``'django.contrib.sessions'`` from your :setting:`INSTALLED_APPS`. It'll "
"save you a small bit of overhead."
msgstr "Si vous ne souhaitez pas utiliser les sessions, vous pouvez très bien enlever la ligne ``SessionMiddleware`` de :setting:`MIDDLEWARE_CLASSES` et la ligne ``'django.contrib.sessions'`` de :setting:`INSTALLED_APPS`. Cela économisera un peu de travail à Django."

# bdffec3d3fba4c01815bfefc48add70c
#: ../../topics/http/sessions.txt:34
msgid "Configuring the session engine"
msgstr "Configuration du moteur de sessions"

# 7162e36c7a56466e8018490b0f273ad5
#: ../../topics/http/sessions.txt:36
msgid ""
"By default, Django stores sessions in your database (using the model "
"``django.contrib.sessions.models.Session``). Though this is convenient, in "
"some setups it's faster to store session data elsewhere, so Django can be "
"configured to store session data on your filesystem or in your cache."
msgstr "Par défaut, Django stocke les sessions dans la base de données (avec le modèle ``django.contrib.sessions.models.Session``). Bien que cela puisse être pratique, il est plus rapide dans certaines configurations de stocker les données de sessions ailleurs ; il est donc possible de configurer Django pour stocker les données de sessions sur le système de fichiers ou dans un cache."

# 9311e9fdfdd74d29923793edbcb5f4b6
#: ../../topics/http/sessions.txt:42
msgid "Using database-backed sessions"
msgstr "Utilisation des sessions en base de données"

# d2ba66041d3b41ef8bee9f91fd0d5d5b
#: ../../topics/http/sessions.txt:44
msgid ""
"If you want to use a database-backed session, you need to add "
"``'django.contrib.sessions'`` to your :setting:`INSTALLED_APPS` setting."
msgstr "Si vous souhaitez placer le contenu des sessions en base de données, vous devez ajouter ``'django.contrib.sessions'`` dans le réglage :setting:`INSTALLED_APPS`."

# f0a309553c0e49d1bdd47ffce8004679
#: ../../topics/http/sessions.txt:47
msgid ""
"Once you have configured your installation, run ``manage.py syncdb`` to "
"install the single database table that stores session data."
msgstr "Après avoir configuré votre installation, lancez ``manage.py syncdb`` pour installer l'unique table de base de données qui stocke les données des sessions."

# d47b2f7bdf364ab28d026593671187b7
#: ../../topics/http/sessions.txt:53
msgid "Using cached sessions"
msgstr "Utilisation des sessions en cache"

# ab4a76a097534dbcb9846428acf87416
#: ../../topics/http/sessions.txt:55
msgid ""
"For better performance, you may want to use a cache-based session backend."
msgstr "Pour de meilleures performances, il est recommandé d'utiliser le moteur de sessions basé sur le cache."

# c7b4b5ca959b437a9b23ae1dfc1e98dd
#: ../../topics/http/sessions.txt:57
msgid ""
"To store session data using Django's cache system, you'll first need to make"
" sure you've configured your cache; see the :doc:`cache documentation "
"</topics/cache>` for details."
msgstr "Pour stocker les données de sessions en utilisant le système de cache de Django, il s'agit d'abord de s'assurer que le cache est configuré ; voir la :doc:`documentation du cache </topics/cache>` pour plus de détails."

# ea1078f8be9f48c19184fd339b3eb9d3
#: ../../topics/http/sessions.txt:63
msgid ""
"You should only use cache-based sessions if you're using the Memcached cache"
" backend. The local-memory cache backend doesn't retain data long enough to "
"be a good choice, and it'll be faster to use file or database sessions "
"directly instead of sending everything through the file or database cache "
"backends."
msgstr "Les données de sessions ne devraient être stockées en cache que quand le moteur de cache Memcached est utilisé. Le moteur de cache en mémoire locale ne retient pas assez longtemps les données pour qu'il représente un bon choix, et il est plus rapide d'utiliser directement le moteur de sessions basé sur des fichiers ou sur la base de données que de faire transiter le tout par les moteurs de cache basés sur des fichiers ou sur la base de données."

# d853b258f3ed4a5dbdcb2e88c095033b
#: ../../topics/http/sessions.txt:69
msgid ""
"If you have multiple caches defined in :setting:`CACHES`, Django will use "
"the default cache. To use another cache, set :setting:`SESSION_CACHE_ALIAS` "
"to the name of that cache."
msgstr "Si plusieurs caches sont définis dans :setting:`CACHES`, Django utilise le cache par défaut. Pour utiliser un autre cache, définissez :setting:`SESSION_CACHE_ALIAS` avec le nom de ce cache."

# 7482141cf00d4aaca1e51f9b63f776aa
#: ../../topics/http/sessions.txt:75
msgid "The :setting:`SESSION_CACHE_ALIAS` setting was added."
msgstr ""

# edde872017474945a8934f439358df89
#: ../../topics/http/sessions.txt:77
msgid ""
"Once your cache is configured, you've got two choices for how to store data "
"in the cache:"
msgstr "Après avoir configuré le cache, il vous reste deux possibilités pour stocker les données en cache :"

# 0f383c351be34b75ab6c5f1957b56a0d
#: ../../topics/http/sessions.txt:80
msgid ""
"Set :setting:`SESSION_ENGINE` to "
"``\"django.contrib.sessions.backends.cache\"`` for a simple caching session "
"store. Session data will be stored directly in your cache. However, session "
"data may not be persistent: cached data can be evicted if the cache fills up"
" or if the cache server is restarted."
msgstr ""

# 6f35a6083b584de0a779ea4466d5083b
#: ../../topics/http/sessions.txt:86
msgid ""
"For persistent, cached data, set :setting:`SESSION_ENGINE` to "
"``\"django.contrib.sessions.backends.cached_db\"``. This uses a write-"
"through cache -- every write to the cache will also be written to the "
"database. Session reads only use the database if the data is not already in "
"the cache."
msgstr "Pour obtenir des données de sessions à la fois en cache et persistantes, définir :setting:`SESSION_ENGINE` à ``\"django.contrib.sessions.backends.cached_db\"``. Il s'agit là d'un cache à écriture directe, chaque écriture dans le cache sera également écrite en base de données. Les sessions ne sont lues dans la base de données que si elles ne sont pas déjà dans le cache."

# 2fba4572d9c6445da70b50a2a8ed9d62
#: ../../topics/http/sessions.txt:92
msgid ""
"Both session stores are quite fast, but the simple cache is faster because "
"it disregards persistence. In most cases, the ``cached_db`` backend will be "
"fast enough, but if you need that last bit of performance, and are willing "
"to let session data be expunged from time to time, the ``cache`` backend is "
"for you."
msgstr "Les deux stockages de sessions sont assez rapides, mais le cache simple est le plus rapide car il ne s'occupe pas de persistance. Dans la plupart des cas, le moteur ``cached_db`` sera suffisamment rapide, mais si vous avez besoin de performances optimales et qu'il est acceptable pour vous que les données de sessions soient effacées de temps en temps, le moteur ``cache`` est fait pour vous."

# 797c2430b0dc4d00a65a3adedfb11a96
#: ../../topics/http/sessions.txt:97
msgid ""
"If you use the ``cached_db`` session backend, you also need to follow the "
"configuration instructions for the `using database-backed sessions`_."
msgstr "Si vous utilisez le moteur de session ``cached_db``, vous devrez aussi suivre les instructions de configuration décrites dans `Utilisation des sessions en base de données`_."

# 7400e8604fe6401ca71b18325ca3262b
#: ../../topics/http/sessions.txt:101
msgid "Using file-based sessions"
msgstr "Utilisation des sessions basées sur des fichiers"

# 1bd3ee365b5d4c7083d145df20bd15f6
#: ../../topics/http/sessions.txt:103
msgid ""
"To use file-based sessions, set the :setting:`SESSION_ENGINE` setting to "
"``\"django.contrib.sessions.backends.file\"``."
msgstr "Pour utiliser les sessions basées sur des fichiers, définissez le réglage :setting:`SESSION_ENGINE` à ``\"django.contrib.sessions.backends.file\"``."

# c7c2110d09824fa6b1ff29e059d88863
#: ../../topics/http/sessions.txt:106
msgid ""
"You might also want to set the :setting:`SESSION_FILE_PATH` setting (which "
"defaults to output from ``tempfile.gettempdir()``, most likely ``/tmp``) to "
"control where Django stores session files. Be sure to check that your Web "
"server has permissions to read and write to this location."
msgstr "Il peut aussi être souhaitable de définir le réglage :setting:`SESSION_FILE_PATH` (dont la valeur par défaut est le résultat de ``tempfile.gettempdir()``, généralement ``/tmp``) pour contrôler l'emplacement où Django stocke les fichiers de sessions. Vérifiez que le serveur Web dispose des permissions en lecture et écriture à cet endroit."

# 6bdbc8d922344903b2a2fc5a34bb2711
#: ../../topics/http/sessions.txt:114
msgid "Using cookie-based sessions"
msgstr "Utilisation des sessions basées sur les cookies"

# 6b4eafd09fe6498f9205040f859634ad
#: ../../topics/http/sessions.txt:116
msgid ""
"To use cookies-based sessions, set the :setting:`SESSION_ENGINE` setting to "
"``\"django.contrib.sessions.backends.signed_cookies\"``. The session data "
"will be stored using Django's tools for :doc:`cryptographic signing "
"</topics/signing>` and the :setting:`SECRET_KEY` setting."
msgstr "Pour utiliser les sessions basées sur les cookies, définissez le réglage :setting:`SESSION_ENGINE` à ``\"django.contrib.sessions.backends.signed_cookies\"``. Les données de sessions seront stockées en utilisant les outils de Django pour la  :doc:`signature cryptographique </topics/signing>` et le réglage :setting:`SECRET_KEY`."

# be211dc509c14c13af5422039e2c3bb0
#: ../../topics/http/sessions.txt:123
msgid ""
"When using cookies-based sessions :mod:`django.contrib.sessions` can be "
"removed from :setting:`INSTALLED_APPS` setting because data is loaded from "
"the key itself and not from the database, so there is no need for the "
"creation and usage of ``django.contrib.sessions.models.Session`` table."
msgstr ""

# 745d954aca984992a478d1527af9539d
#: ../../topics/http/sessions.txt:130
msgid ""
"It's recommended to leave the :setting:`SESSION_COOKIE_HTTPONLY` setting "
"``True`` to prevent tampering of the stored data from JavaScript."
msgstr "Il est recommandé de laisser le réglage :setting:`SESSION_COOKIE_HTTPONLY` à la valeur ``True`` pour empêcher la manipulation des données stockées à partir du JavaScript."

# c024a4ac24f14df4b76c5ccaa6bbc347
#: ../../topics/http/sessions.txt:135
msgid ""
"**If the SECRET_KEY is not kept secret and you are using the** "
":class:`~django.contrib.sessions.serializers.PickleSerializer`, **this can "
"lead to arbitrary remote code execution.**"
msgstr ""

# 4b7b1f84430a439e9fd461a9c702abc2
#: ../../topics/http/sessions.txt:139
msgid ""
"An attacker in possession of the :setting:`SECRET_KEY` can not only generate"
" falsified session data, which your site will trust, but also remotely "
"execute arbitrary code, as the data is serialized using pickle."
msgstr ""

# f5df6efaa25b435b9fe4d7cf0915d4e0
#: ../../topics/http/sessions.txt:143
msgid ""
"If you use cookie-based sessions, pay extra care that your secret key is "
"always kept completely secret, for any system which might be remotely "
"accessible."
msgstr ""

# 3bd3fcefed954b958f8ab15d59597340
#: ../../topics/http/sessions.txt:147
msgid "**The session data is signed but not encrypted**"
msgstr "** les données de sessions sont signées mais non chiffrées**"

# b410041033fe446aab04a90d1a436faa
#: ../../topics/http/sessions.txt:149
msgid ""
"When using the cookies backend the session data can be read by the client."
msgstr "Lors de l'utilisation du moteur basé sur les cookies, les données de sessions peuvent être lues par le client."

# 13b08115c6c548cba0c3547fd42d663c
#: ../../topics/http/sessions.txt:151
msgid ""
"A MAC (Message Authentication Code) is used to protect the data against "
"changes by the client, so that the session data will be invalidated when "
"being tampered with. The same invalidation happens if the client storing the"
" cookie (e.g. your user's browser) can't store all of the session cookie and"
" drops data. Even though Django compresses the data, it's still entirely "
"possible to exceed the `common limit of 4096 bytes`_ per cookie."
msgstr "Un code MAC (Message Authentication Code) est utilisé pour protéger les données contre des modifications par le client, afin que les données de sessions soient caduques quand elles ont été modifiées. La même protection intervient si le client qui stocke le cookie (par ex. le navigateur de l'utilisateur) ne peut pas stocker tout le cookie de session et tronque des données. Même si Django compresse les données, il est toujours possible de dépasser la `limite habituelle de 4096 octets`_ par cookie."

# c280179a75c74b3bb30efff4e14543c2
#: ../../topics/http/sessions.txt:158
msgid "**No freshness guarantee**"
msgstr "**Aucune garantie de fraîcheur**"

# d5b5f7effbac4c429da01a761f27df68
#: ../../topics/http/sessions.txt:160
msgid ""
"Note also that while the MAC can guarantee the authenticity of the data "
"(that it was generated by your site, and not someone else), and the "
"integrity of the data (that it is all there and correct), it cannot "
"guarantee freshness i.e. that you are being sent back the last thing you "
"sent to the client. This means that for some uses of session data, the "
"cookie backend might open you up to `replay attacks`_. Unlike other session "
"backends which keep a server-side record of each session and invalidate it "
"when a user logs out, cookie-based sessions are not invalidated when a user "
"logs out. Thus if an attacker steals a user's cookie, he can use that cookie"
" to login as that user even if the user logs out. Cookies will only be "
"detected as 'stale' if they are older than your "
":setting:`SESSION_COOKIE_AGE`."
msgstr ""

# cdc8abbd78b14a58bb20fc4bef88d162
#: ../../topics/http/sessions.txt:173
msgid "**Performance**"
msgstr "**Performance**"

# 5b175fbb9a3b41f78b4d290712c844bc
#: ../../topics/http/sessions.txt:175
msgid ""
"Finally, the size of a cookie can have an impact on the `speed of your "
"site`_."
msgstr "Finalement, la taille d'un cookie peut influencer la `rapidité de votre site`_."

# a9cd581774a844008bf76385f0267a85
#: ../../topics/http/sessions.txt:182
msgid "Using sessions in views"
msgstr "Utilisation des sessions dans les vues"

# 4c27c106dea64efcaf57c2cbfbea4daf
#: ../../topics/http/sessions.txt:184
msgid ""
"When ``SessionMiddleware`` is activated, each "
":class:`~django.http.HttpRequest` object -- the first argument to any Django"
" view function -- will have a ``session`` attribute, which is a dictionary-"
"like object."
msgstr "Lorsque ``SessionMiddleware`` est actif, chaque objet :class:`~django.http.HttpRequest`, le premier paramètre de toute fonction vue de Django, possède un attribut ``session`` qui est un objet de type dictionnaire."

# 12045186a8f34cc58b5b46c86a548ce7
#: ../../topics/http/sessions.txt:188
msgid ""
"You can read it and write to ``request.session`` at any point in your view. "
"You can edit it multiple times."
msgstr "Vous pouvez lire et écrire dans ``request.session`` à n'importe quel moment dans votre vue. Vous pouvez le modifier plusieurs fois."

# 0c3fb89d76034aff87c8c31ae5ef0112
#: ../../topics/http/sessions.txt:193
msgid ""
"This is the base class for all session objects. It has the following "
"standard dictionary methods:"
msgstr "C'est la classe de base pour tous les objets session. Elle possède les méthodes de dictionnaire standard suivantes :"

# 5c31064a37264beb9f1c0aea5070ded9
#: ../../topics/http/sessions.txt:198
msgid "Example: ``fav_color = request.session['fav_color']``"
msgstr "Exemple : "

# 3dda0d4f7dd44efc8014df43580c4977
#: ../../topics/http/sessions.txt:202
msgid "Example: ``request.session['fav_color'] = 'blue'``"
msgstr "Exemple : ``request.session['fav_color'] = 'blue'``"

# 0820c539e1bf41749c722a2c49be3879
#: ../../topics/http/sessions.txt:206
msgid ""
"Example: ``del request.session['fav_color']``. This raises ``KeyError`` if "
"the given ``key`` isn't already in the session."
msgstr "Exemple : ``del request.session['fav_color']``. Si la clé indiquée ne se trouve pas déjà dans l'objet session, une exception ``KeyError`` est levée."

# 5ade1bb2304d4343a6d296bf8beb623e
#: ../../topics/http/sessions.txt:211
msgid "Example: ``'fav_color' in request.session``"
msgstr "Exemple : ``'fav_color' in request.session``"

# 48d36692701d432abe7df8ade5e852a6
#: ../../topics/http/sessions.txt:215
msgid "Example: ``fav_color = request.session.get('fav_color', 'red')``"
msgstr "Exemple : ``fav_color = request.session.get('fav_color', 'red')``"

# 7e32bdf87b1a44018d9ce10d8218a090
#: ../../topics/http/sessions.txt:219
msgid "Example: ``fav_color = request.session.pop('fav_color')``"
msgstr "Exemple : ``fav_color = request.session.pop('fav_color')``"

# b49504add6214198884f13ea7dfa7130
#: ../../topics/http/sessions.txt:229
msgid "It also has these methods:"
msgstr "Elle possède aussi ces méthodes :"

# 5e466eab282a46ccbecea2832f4cdb56
#: ../../topics/http/sessions.txt:233
msgid ""
"Delete the current session data from the session and regenerate the session "
"key value that is sent back to the user in the cookie. This is used if you "
"want to ensure that the previous session data can't be accessed again from "
"the user's browser (for example, the :func:`django.contrib.auth.logout()` "
"function calls it)."
msgstr "Supprime les données de la session actuelle et régénère la valeur de clé de session qui est renvoyée à l'utilisateur dans le cookie. C'est utile pour s'assurer que les données de session précédentes ne puissent plus être relues par le navigateur de l'utilisateur (par exemple, c'est ce que fait :func:`django.contrib.auth.logout()`)."

# a0521c680a6c4c0b9fc5f0a3a66f1277
#: ../../topics/http/sessions.txt:241
msgid ""
"Sets a test cookie to determine whether the user's browser supports cookies."
" Due to the way cookies work, you won't be able to test this until the "
"user's next page request. See `Setting test cookies`_ below for more "
"information."
msgstr "Crée un cookie de test pour déterminer si le navigateur de l'utilisateur prend en charge les cookies. En raison du fonctionnement des cookies, vous ne pourrez pas déterminer cela avant la prochaine requête de l'utilisateur. Consultez `Génération de cookies de test`_ ci-dessous pour obtenir plus d'informations."

# d4b4936d8529490ab83b4bc145382e18
#: ../../topics/http/sessions.txt:248
msgid ""
"Returns either ``True`` or ``False``, depending on whether the user's "
"browser accepted the test cookie. Due to the way cookies work, you'll have "
"to call ``set_test_cookie()`` on a previous, separate page request. See "
"`Setting test cookies`_ below for more information."
msgstr "Renvoie ``True`` ou ``False``, selon que le navigateur de l'utilisateur a accepté le cookie de test ou non. En raison du fonctionnement des cookies, vous aurez dû appeler ``set_test_cookie()`` sur une requête de page précédente. Consultez `Génération de cookies de test`_ ci-dessous pour obtenir plus d'informations."

# fa775553adc246bba733e707cbf47617
#: ../../topics/http/sessions.txt:255
msgid "Deletes the test cookie. Use this to clean up after yourself."
msgstr "Supprime le cookie de test. Utilisé pour faire le ménage derrière soi."

# 90d4c6370a924ee8a30f194044652ed8
#: ../../topics/http/sessions.txt:259
msgid ""
"Sets the expiration time for the session. You can pass a number of different"
" values:"
msgstr "Définit la durée d'expiration de la session. Il est possible de passer plusieurs valeurs différentes :"

# 9067a3904a9d4031b9215b5fc3efcb6d
#: ../../topics/http/sessions.txt:262
msgid ""
"If ``value`` is an integer, the session will expire after that many seconds "
"of inactivity. For example, calling ``request.session.set_expiry(300)`` "
"would make the session expire in 5 minutes."
msgstr "Si ``value`` est un nombre entier, la session va expirer après ce nombre de secondes d'inactivité. Par exemple, l'appel de ``request.session.set_expiry(300)`` va provoquer l'expiration de la session dans 5 minutes."

# c0294ab245cc4b8ea0562e7954599fc4
#: ../../topics/http/sessions.txt:267
msgid ""
"If ``value`` is a ``datetime`` or ``timedelta`` object, the session will "
"expire at that specific date/time. Note that ``datetime`` and ``timedelta`` "
"values are only serializable if you are using the "
":class:`~django.contrib.sessions.serializers.PickleSerializer`."
msgstr ""

# 4160292fcebc439fbe9f1af3910dac47
#: ../../topics/http/sessions.txt:272
msgid ""
"If ``value`` is ``0``, the user's session cookie will expire when the user's"
" Web browser is closed."
msgstr "Si la ``value`` est ``0``, le cookie de session de l'utilisateur va expirer au moment où celui-ci ferme son navigateur Web."

# 65fe863f9c9d4a069c2e48472944db6a
#: ../../topics/http/sessions.txt:275
msgid ""
"If ``value`` is ``None``, the session reverts to using the global session "
"expiry policy."
msgstr "Si ``value`` est ``None``, la session se fie à nouveau à la politique d'expiration globale des sessions."

# eb56494b480e4bc4b43c48eb70e7edde
#: ../../topics/http/sessions.txt:278
msgid ""
"Reading a session is not considered activity for expiration purposes. "
"Session expiration is computed from the last time the session was "
"*modified*."
msgstr "La lecture d'une session n'est pas considérée comme une activité en regard de la notion d'expiration. L'expiration de la session est calculée à partir du moment de la dernière *modification* de la session."

# 00fbbc80b5944ed6bc7e61a7d1653ab9
#: ../../topics/http/sessions.txt:284
msgid ""
"Returns the number of seconds until this session expires. For sessions with "
"no custom expiration (or those set to expire at browser close), this will "
"equal :setting:`SESSION_COOKIE_AGE`."
msgstr "Renvoie le nombre de secondes restant jusqu'à l'expiration de la session. Pour les sessions sans expiration particulière (ou celles qui expirent à la fermeture du navigateur), cette valeur sera égale à :setting:`SESSION_COOKIE_AGE`."

# dde4e67c22d141188a6564c24df6cad5
#: ../../topics/http/sessions.txt:288
msgid "This function accepts two optional keyword arguments:"
msgstr "Cette fonction accepte deux paramètres nommés facultatifs :"

# 67de122366984dd499e44ad57291b8b4
#: ../../topics/http/sessions.txt:290
msgid ""
"``modification``: last modification of the session, as a "
":class:`~datetime.datetime` object. Defaults to the current time."
msgstr "``modification``: dernière modification de la session, comme objet :class:`~datetime.datetime`. Par défaut, c'est l'heure actuelle."

# 014a5d8d583442c787301ff795bb0547
#: ../../topics/http/sessions.txt:292
msgid ""
"``expiry``: expiry information for the session, as a "
":class:`~datetime.datetime` object, an :func:`int` (in seconds), or "
"``None``. Defaults to the value stored in the session by :meth:`set_expiry`,"
" if there is one, or ``None``."
msgstr "``expiry``: information d'expiration de la session, comme objet :class:`~datetime.datetime`, valeur :func:`int` (en secondes) ou ``None``. Par défaut, cette valeur est égale à celle stockée dans la session par :meth:`set_expiry`, le cas échéant, sinon ``None``."

# a17c36d7cd264f259813e0a4e9a2f4a8
#: ../../topics/http/sessions.txt:299
msgid ""
"Returns the date this session will expire. For sessions with no custom "
"expiration (or those set to expire at browser close), this will equal the "
"date :setting:`SESSION_COOKIE_AGE` seconds from now."
msgstr "Renvoie la date à laquelle la session expire. Pour les sessions sans expiration particulière (ou celles qui expirent à la fermeture du navigateur), cette valeur sera égale à :setting:`SESSION_COOKIE_AGE` secondes à partir de maintenant."

# 37558255812744f7ad0fa6716a94bb81
#: ../../topics/http/sessions.txt:303
msgid ""
"This function accepts the same keyword argumets as :meth:`get_expiry_age`."
msgstr "Cette fonction accepte les mêmes paramètres nommés que :meth:`get_expiry_age`."

# 1755b9707f4e493d99df638877dfc440
#: ../../topics/http/sessions.txt:307
msgid ""
"Returns either ``True`` or ``False``, depending on whether the user's "
"session cookie will expire when the user's Web browser is closed."
msgstr "Renvoie ``True`` ou ``False`` selon que le cookie de session utilisateur expire au moment de la fermeture du navigateur Web de l'utilisateur ou non."

# 3945e45ea9ab4e8aa89a8626ccb7a5d7
#: ../../topics/http/sessions.txt:314
msgid ""
"Removes expired sessions from the session store. This class method is called"
" by :djadmin:`clearsessions`."
msgstr "Supprime les sessions expirées du stockage des sessions. Cette méthode de classe est appelée par :djadmin:`clearsessions`."

# 694a6846459b414890c712168b3d7a3e
#: ../../topics/http/sessions.txt:319
msgid ""
"Creates a new session key while retaining the current session data. "
":func:`django.contrib.auth.login()` calls this method to mitigate against "
"session fixation."
msgstr ""

# dc58fec6290b433ea31433857c804aeb
#: ../../topics/http/sessions.txt:326
msgid "Session serialization"
msgstr ""

# 53e08583267f4eefbbbcc198acbde297
#: ../../topics/http/sessions.txt:330
msgid ""
"The ability to customize the session serialization format using the "
":setting:`SESSION_SERIALIZER` settings was added."
msgstr ""

# 5ef14e1e3fe249a0b78d5b0827317788
#: ../../topics/http/sessions.txt:335
msgid ""
"Before version 1.6, Django defaulted to using :mod:`pickle` to serialize "
"session data before storing it in the backend. If you're using the "
":ref:`signed cookie session backend<cookie-session-backend>` and "
":setting:`SECRET_KEY` is known by an attacker (there isn't an inherent "
"vulnerability in Django that would cause it to leak), the attacker could "
"insert a string into his session which, when unpickled, executes arbitrary "
"code on the server. The technique for doing so is simple and easily "
"available on the internet. Although the cookie session storage signs the "
"cookie-stored data to prevent tampering, a :setting:`SECRET_KEY` leak "
"immediately escalates to a remote code execution vulnerability."
msgstr ""

# 237b02ea78954d5cbb12d9063c4a4f25
#: ../../topics/http/sessions.txt:346
msgid ""
"This attack can be mitigated by serializing session data using JSON rather "
"than :mod:`pickle`. To facilitate this, Django 1.5.3 introduced a new "
"setting, :setting:`SESSION_SERIALIZER`, to customize the session "
"serialization format. For backwards compatibility, this setting defaults to "
"using :class:`django.contrib.sessions.serializers.PickleSerializer` in "
"Django 1.5.x, but, for security hardening, defaults to "
":class:`django.contrib.sessions.serializers.JSONSerializer` in Django 1.6. "
"Even with the caveats described in :ref:`custom-serializers`, we highly "
"recommend sticking with JSON serialization *especially if you are using the "
"cookie backend*."
msgstr ""

# 9c6f095b1cd046bc87cd4311255f7a0c
#: ../../topics/http/sessions.txt:358
msgid "Bundled Serializers"
msgstr ""

# 023cbf8ccd2f4096be1bdc0a3a2e26a6
#: ../../topics/http/sessions.txt:362
msgid ""
"A wrapper around the JSON serializer from :mod:`django.core.signing`. Can "
"only serialize basic data types."
msgstr ""

# 2cae394082c34248848721db9b55880b
#: ../../topics/http/sessions.txt:365
msgid ""
"In addition, as JSON supports only string keys, note that using non-string "
"keys in ``request.session`` won't work as expected::"
msgstr ""

# cbdaf0633780451790e0136f3b2f6f5a
#: ../../topics/http/sessions.txt:376
msgid ""
"See the :ref:`custom-serializers` section for more details on limitations of"
" JSON serialization."
msgstr ""

# dc649981bb714f2294b7a2dc5543e652
#: ../../topics/http/sessions.txt:381
msgid ""
"Supports arbitrary Python objects, but, as described above, can lead to a "
"remote code execution vulnerability if :setting:`SECRET_KEY` becomes known "
"by an attacker."
msgstr ""

# 6ce4a5b958314efb9e9e4cc05eaa5a5c
#: ../../topics/http/sessions.txt:388
msgid "Write Your Own Serializer"
msgstr ""

# b9f208f9f8c74c4c9802dd641bde5037
#: ../../topics/http/sessions.txt:390
msgid ""
"Note that unlike "
":class:`~django.contrib.sessions.serializers.PickleSerializer`, the "
":class:`~django.contrib.sessions.serializers.JSONSerializer` cannot handle "
"arbitrary Python data types. As is often the case, there is a trade-off "
"between convenience and security. If you wish to store more advanced data "
"types including ``datetime`` and ``Decimal`` in JSON backed sessions, you "
"will need to write a custom serializer (or convert such values to a JSON "
"serializable object before storing them in ``request.session``). While "
"serializing these values is fairly straightforward "
"(``django.core.serializers.json.DateTimeAwareJSONEncoder`` may be helpful), "
"writing a decoder that can reliably get back the same thing that you put in "
"is more fragile. For example, you run the risk of returning a ``datetime`` "
"that was actually a string that just happened to be in the same format "
"chosen for ``datetime``\\s)."
msgstr ""

# bc699d0ba6994d3f9cd422778c48482e
#: ../../topics/http/sessions.txt:404
msgid ""
"Your serializer class must implement two methods, ``dumps(self, obj)`` and "
"``loads(self, data)``, to serialize and deserialize the dictionary of "
"session data, respectively."
msgstr ""

# dd959bf1374d4224a72aecb1972160c9
#: ../../topics/http/sessions.txt:409
msgid "Session object guidelines"
msgstr "Lignes directrices des objets sessions"

# d88cbe7062f749e3a813be14a4df60be
#: ../../topics/http/sessions.txt:411
msgid ""
"Use normal Python strings as dictionary keys on ``request.session``. This is"
" more of a convention than a hard-and-fast rule."
msgstr "Utilisez des chaînes Python normales comme clés de dictionnaire pour ``request.session``. Il s'agit plus d'une convention que d'une règle stricte."

# 67d2eab2b8254c569e33e4c145dbebaa
#: ../../topics/http/sessions.txt:414
msgid ""
"Session dictionary keys that begin with an underscore are reserved for "
"internal use by Django."
msgstr "Les clés de dictionnaire de session commençant par un soulignement sont réservés pour l'usage interne de Django."

# 9925bccff1e548b0b058268458b1274d
#: ../../topics/http/sessions.txt:417
msgid ""
"Don't override ``request.session`` with a new object, and don't access or "
"set its attributes. Use it like a Python dictionary."
msgstr "Ne surchargez pas ``request.session`` avec un nouvel objet et n'accédez pas ou ne modifiez pas ses attributs. Utilisez-le comme un dictionnaire Python."

# 849c365ba0ce44eea1298043bb614b59
#: ../../topics/http/sessions.txt:423
msgid ""
"This simplistic view sets a ``has_commented`` variable to ``True`` after a "
"user posts a comment. It doesn't let a user post a comment more than once::"
msgstr "Cette vue très simple définit une variable ``has_commented`` à ``True`` après qu'un utilisateur a soumis un commentaire. Elle n'autorise pas plus d'un commentaire par utilisateur ::"

# e01b19f3009c48dcb06dd10ae5e4832d
#: ../../topics/http/sessions.txt:434
msgid "This simplistic view logs in a \"member\" of the site::"
msgstr "Cette vue très simple connecte un « membre » du site ::"

# c2619b845a1a4727947703e5627575d1
#: ../../topics/http/sessions.txt:444
msgid "...And this one logs a member out, according to ``login()`` above::"
msgstr "...et celle-ci déconnecte un membre, compte tenu de l'exemple ``login()`` ci-dessus ::"

# 957eefecdee14b4993363e0f72c0a33d
#: ../../topics/http/sessions.txt:453
msgid ""
"The standard :meth:`django.contrib.auth.logout` function actually does a bit"
" more than this to prevent inadvertent data leakage. It calls the "
":meth:`~backends.base.SessionBase.flush` method of ``request.session``. We "
"are using this example as a demonstration of how to work with session "
"objects, not as a full ``logout()`` implementation."
msgstr "La fonction standard :meth:`django.contrib.auth.logout` fait en réalité un peu plus que cela pour empêcher des divulgations de données fortuites. Elle appelle la méthode :meth:`~backends.base.SessionBase.flush` de ``request.session``. Nous utilisons cet exemple comme démonstration du fonctionnement des objets sessions, il ne faut pas le considérer comme une implémentation complète de ``logout()``."

# 22e049c93acc4f4bb6418a0a1aa380ec
#: ../../topics/http/sessions.txt:460
msgid "Setting test cookies"
msgstr "Génération de cookies de test"

# d925985030c54c3493eb908a74994630
#: ../../topics/http/sessions.txt:462
msgid ""
"As a convenience, Django provides an easy way to test whether the user's "
"browser accepts cookies. Just call the "
":meth:`~backends.base.SessionBase.set_test_cookie` method of "
"``request.session`` in a view, and call "
":meth:`~backends.base.SessionBase.test_cookie_worked` in a subsequent view "
"-- not in the same view call."
msgstr "Par commodité, Django fournit un moyen simple de tester si le navigateur de l'utilisateur accepte les cookies. Il suffit d'appeler la méthode :meth:`~backends.base.SessionBase.set_test_cookie` de ``request.session`` dans une vue, et d'appeler :meth:`~backends.base.SessionBase.test_cookie_worked` dans une des vues suivantes, mais pas dans le même appel de vue."

# 8e85fda4fb944cec9fe4a0d5443e9fdd
#: ../../topics/http/sessions.txt:469
msgid ""
"This awkward split between ``set_test_cookie()`` and "
"``test_cookie_worked()`` is necessary due to the way cookies work. When you "
"set a cookie, you can't actually tell whether a browser accepted it until "
"the browser's next request."
msgstr "Cette séparation bizarre entre ``set_test_cookie()`` et ``test_cookie_worked()`` est nécessaire en raison du fonctionnement des cookies. Lorsque vous définissez un cookie, il n'est en fait pas possible de savoir si le navigateur l'a accepté avant de recevoir la prochaine requête du navigateur."

# 970fb97d579e4cfd8b07bb2b058b2a85
#: ../../topics/http/sessions.txt:473
msgid ""
"It's good practice to use "
":meth:`~backends.base.SessionBase.delete_test_cookie()` to clean up after "
"yourself. Do this after you've verified that the test cookie worked."
msgstr "Il est recommandé d'utiliser :meth:`~backends.base.SessionBase.delete_test_cookie()` pour faire le ménage derrière soi. Faites-le après avoir vérifié que le cookie de test a fonctionné."

# 74d9258bf0c9485aa734b81c01ebc600
#: ../../topics/http/sessions.txt:477
msgid "Here's a typical usage example::"
msgstr "Voici un exemple d'utilisation typique ::"

# a804f448ecf0430db4b22a3b0a781f30
#: ../../topics/http/sessions.txt:490
msgid "Using sessions out of views"
msgstr "Utilisation des sessions en dehors des vues"

# 1cf96d4ef23446a29a28ad4c74295c3d
#: ../../topics/http/sessions.txt:492
msgid "An API is available to manipulate session data outside of a view::"
msgstr "Une API est disponible pour manipuler les données de sessions en dehors des vues ::"

# dab3105441094fcca6478b6e372ed73a
#: ../../topics/http/sessions.txt:507
msgid ""
"In order to mitigate session fixation attacks, sessions keys that don't "
"exist are regenerated::"
msgstr ""

# 3c855238680e43d989ea4bdaf36ad930
#: ../../topics/http/sessions.txt:516
msgid ""
"If you're using the ``django.contrib.sessions.backends.db`` backend, each "
"session is just a normal Django model. The ``Session`` model is defined in "
"``django/contrib/sessions/models.py``. Because it's a normal model, you can "
"access sessions using the normal Django database API::"
msgstr "Si vous utilisez le moteur ``django.contrib.sessions.backends.db``, chaque session n'est en fait qu'un modèle Django normal. Le modèle ``Session`` est défini dans ``django/contrib/sessions/models.py``. Comme c'est un modèle normal, vous pouvez accéder aux sessions en utilisant l'API habituelle de base de données Django ::"

# 0539f9c4df024054b9bc84dc2fa48ef4
#: ../../topics/http/sessions.txt:526
msgid ""
"Note that you'll need to call ``get_decoded()`` to get the session "
"dictionary. This is necessary because the dictionary is stored in an encoded"
" format::"
msgstr "Notez que vous devrez appeler ``get_decoded()`` pour obtenir le dictionnaire de session. Cela est nécessaire car le dictionnaire est stocké dans un format codé ::"

# eccd1d914c9b4273860a3a852c49b482
#: ../../topics/http/sessions.txt:535
msgid "When sessions are saved"
msgstr "Enregistrement des sessions"

# 748ff7023c294431ba435c457f16fe0e
#: ../../topics/http/sessions.txt:537
msgid ""
"By default, Django only saves to the session database when the session has "
"been modified -- that is if any of its dictionary values have been assigned "
"or deleted::"
msgstr "Par défaut, Django n'enregistre la session dans la base de données qu'au moment où la session a été modifiée, c'est-à-dire qu'au moins une des valeurs de son dictionnaire a été définie ou supprimée ::"

# dc6294ef5d5f42dcb8600ecef99c9705
#: ../../topics/http/sessions.txt:554
msgid ""
"In the last case of the above example, we can tell the session object "
"explicitly that it has been modified by setting the ``modified`` attribute "
"on the session object::"
msgstr "Dans le dernier cas de l'exemple ci-dessus, nous pouvons indiquer explicitement à l'objet session qu'il a été modifié en définissant son attribut ``modified``::"

# 409740cd6e1d40cf9be86adc979eb12a
#: ../../topics/http/sessions.txt:560
msgid ""
"To change this default behavior, set the "
":setting:`SESSION_SAVE_EVERY_REQUEST` setting to ``True``. When set to "
"``True``, Django will save the session to the database on every single "
"request."
msgstr "Pour modifier ce comportement par défaut, définissez le réglage :setting:`SESSION_SAVE_EVERY_REQUEST` à ``True``. Dans ce cas, Django enregistre la session dans la base de données lors de chaque requête."

# 57785b39685947a9bd147cafe56e7a36
#: ../../topics/http/sessions.txt:564
msgid ""
"Note that the session cookie is only sent when a session has been created or"
" modified. If :setting:`SESSION_SAVE_EVERY_REQUEST` is ``True``, the session"
" cookie will be sent on every request."
msgstr "Notez que le cookie de session n'est envoyé que lorsqu'une session a été créée ou modifiée. Si :setting:`SESSION_SAVE_EVERY_REQUEST` vaut ``True``, le cookie de session sera envoyé lors de chaque requête."

# 82ebec189e6b41ba851db38b7febfc48
#: ../../topics/http/sessions.txt:568
msgid ""
"Similarly, the ``expires`` part of a session cookie is updated each time the"
" session cookie is sent."
msgstr "De même, la partie ``expires`` d'un cookie de session est mis à jour chaque fois que le cookie de session est envoyé."

# d82312971c75401e8464b71e1a2787cb
#: ../../topics/http/sessions.txt:573
msgid "The session is not saved if the response's status code is 500."
msgstr ""

# 735e85eca311492baf95eb632c7678e1
#: ../../topics/http/sessions.txt:578
msgid "Browser-length sessions vs. persistent sessions"
msgstr "Expiration ou persistance des sessions"

# dda6f9bef18345b2aa7092cad4c604c4
#: ../../topics/http/sessions.txt:580
msgid ""
"You can control whether the session framework uses browser-length sessions "
"vs. persistent sessions with the :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` "
"setting."
msgstr "Le réglage :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` permet de contrôler le type des sessions utilisées par l'infrastructure des sessions, soit les sessions expirant à la fermeture du navigateur ou les sessions persistantes."

# 1d45c6fc838e49e7a83b73ffb01b226f
#: ../../topics/http/sessions.txt:584
msgid ""
"By default, :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` is set to ``False``, "
"which means session cookies will be stored in users' browsers for as long as"
" :setting:`SESSION_COOKIE_AGE`. Use this if you don't want people to have to"
" log in every time they open a browser."
msgstr "Par défaut, :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` est défini à ``False``, ce qui signifie que les cookies de session seront stockés dans les navigateurs des utilisateurs pour une durée de :setting:`SESSION_COOKIE_AGE`. Utilisé quand on ne souhaite pas que les utilisateurs doivent se connecter chaque fois qu'ils ouvrent leur navigateur."

# aa89ea08df214fb9b36fd970c5cfee2f
#: ../../topics/http/sessions.txt:589
msgid ""
"If :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` is set to ``True``, Django "
"will use browser-length cookies -- cookies that expire as soon as the user "
"closes his or her browser. Use this if you want people to have to log in "
"every time they open a browser."
msgstr "Si :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` est défini à ``True``, Django utilise des cookies expirant à la fermeture du navigateur. Utilisé quand on souhaite que les utilisateurs doivent se connecter chaque fois qu'ils ouvrent leur navigateur."

# 7a7d98d0314d482baafddd3d946a9717
#: ../../topics/http/sessions.txt:594
msgid ""
"This setting is a global default and can be overwritten at a per-session "
"level by explicitly calling the "
":meth:`~backends.base.SessionBase.set_expiry` method of ``request.session`` "
"as described above in `using sessions in views`_."
msgstr "Ce réglage est une valeur par défaut globale et peut être surchargé au niveau de chaque session en appelant explicitement la méthode :meth:`~backends.base.SessionBase.set_expiry` de ``request.session`` comme décrit ci-dessus dans `utilisation des sessions dans les vues`_."

# 7eff7d624bf343d0a24c9aef214206e5
#: ../../topics/http/sessions.txt:600
msgid ""
"Some browsers (Chrome, for example) provide settings that allow users to "
"continue browsing sessions after closing and re-opening the browser. In some"
" cases, this can interfere with the "
":setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` setting and prevent sessions from"
" expiring on browser close. Please be aware of this while testing Django "
"applications which have the :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` "
"setting enabled."
msgstr "Certains navigateurs (Chrome, par exemple) peuvent être réglés afin de ne pas fermer les sessions de navigation entre fermeture et réouverture du navigateur. Dans certains cas, cela peut interférer avec le réglage :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE`  et empêcher les sessions d'expirer à la fermeture du navigateur. Il est important de le savoir lors des tests d'applications Django qui ont le réglage :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` actif."

# 4aa0f8c5c085410eae494012825b552a
#: ../../topics/http/sessions.txt:609
msgid "Clearing the session store"
msgstr "Effacement du stockage des sessions"

# 611e43661154412dbcddc615284055df
#: ../../topics/http/sessions.txt:611
msgid ""
"As users create new sessions on your website, session data can accumulate in"
" your session store. If you're using the database backend, the "
"``django_session`` database table will grow. If you're using the file "
"backend, your temporary directory will contain an increasing number of "
"files."
msgstr "Au fur et à mesure que des utilisateurs créent de nouvelles sessions sur votre site Web, les données de sessions s'accumulent dans votre stockage de sessions. Si vous utilisez le moteur en base de données, la table de base de données ``django_session`` prend du volume. Si vous utilisez le moteur basé sur des fichiers, le nombre des fichiers dans le répertoire temporaire va augmenter constamment."

# f6eac229a77146dca0c3589f06d852c7
#: ../../topics/http/sessions.txt:616
msgid ""
"To understand this problem, consider what happens with the database backend."
" When a user logs in, Django adds a row to the ``django_session`` database "
"table. Django updates this row each time the session data changes. If the "
"user logs out manually, Django deletes the row. But if the user does *not* "
"log out, the row never gets deleted. A similar process happens with the file"
" backend."
msgstr "Pour comprendre ce problème, examinons ce qui se passe avec le moteur en base de données. Lorsqu'un utilisateur se connecte, Django ajoute un enregistrement dans la table ``django_session``. Il met à jour cet enregistrement chaque fois que les données de la session sont modifiées. Si l'utilisateur se déconnecte explicitement, Django efface l'enregistrement. Mais si l'utilisateur ne le fait *pas*, l'enregistrement n'est jamais effacé. Le principe est identique avec le moteur basé sur les fichiers."

# 849d62cfcca84256984ba9e8c900566e
#: ../../topics/http/sessions.txt:622
msgid ""
"Django does *not* provide automatic purging of expired sessions. Therefore, "
"it's your job to purge expired sessions on a regular basis. Django provides "
"a clean-up management command for this purpose: :djadmin:`clearsessions`. "
"It's recommended to call this command on a regular basis, for example as a "
"daily cron job."
msgstr "Django ne fournit *pas* de système automatique d'effacement des sessions expirées. C'est donc à vous de le faire à intervalle régulier. Django met à disposition une commande de gestion de nettoyage dans ce but : :djadmin:`clearsessions`. Il est recommandé de lancer cette commande régulièrement, par exemple dans une tâche « cron » journalière."

# 08ed57bc4eed48459107e36e7e2bfe3f
#: ../../topics/http/sessions.txt:628
msgid ""
"Note that the cache backend isn't vulnerable to this problem, because caches"
" automatically delete stale data. Neither is the cookie backend, because the"
" session data is stored by the users' browsers."
msgstr "Notez que le moteur basé sur le cache n'est pas sujet à ce problème, car les caches suppriment automatiquement les données obsolètes. Pareil pour le moteur basé sur les cookies, car les données de sessions sont stockées par les navigateurs des utilisateurs."

# c7c55c2b2a304d4fa1d0714ffb04cc35
#: ../../topics/http/sessions.txt:633
msgid "Settings"
msgstr "Réglages"

# dc5b29b2ea3445b3b7de982e65de55b3
#: ../../topics/http/sessions.txt:635
msgid ""
"A few :ref:`Django settings <settings-sessions>` give you control over "
"session behavior:"
msgstr ""

# b72babbe16404dda92e5c1da7fc035a8
#: ../../topics/http/sessions.txt:638
msgid ":setting:`SESSION_CACHE_ALIAS`"
msgstr ""

# 78197c06768d4737bca2c3cce86467b9
#: ../../topics/http/sessions.txt:639
msgid ":setting:`SESSION_COOKIE_AGE`"
msgstr ""

# 2f73999996cb432380b942b3ff0d08f2
#: ../../topics/http/sessions.txt:640
msgid ":setting:`SESSION_COOKIE_DOMAIN`"
msgstr ""

# f0e0012563ad4d058facfb9eff13a551
#: ../../topics/http/sessions.txt:641
msgid ":setting:`SESSION_COOKIE_HTTPONLY`"
msgstr ""

# cd25bf98f68f419da909112beff75423
#: ../../topics/http/sessions.txt:642
msgid ":setting:`SESSION_COOKIE_NAME`"
msgstr ""

# 809800883b024a6e8b2e7df50683aaf8
#: ../../topics/http/sessions.txt:643
msgid ":setting:`SESSION_COOKIE_PATH`"
msgstr ""

# a4e3b197097c474b929fdd4d693faf45
#: ../../topics/http/sessions.txt:644
msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

# 41ee0d8db6e543ffad62a5cd505dad0e
#: ../../topics/http/sessions.txt:645
msgid ":setting:`SESSION_ENGINE`"
msgstr ""

# e6478030761140f2ad7665eb8d44911e
#: ../../topics/http/sessions.txt:646
msgid ":setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE`"
msgstr ""

# 0ade138adc7742fcb8c45440515632d3
#: ../../topics/http/sessions.txt:647
msgid ":setting:`SESSION_FILE_PATH`"
msgstr ""

# b59c69c78192490686c446a7982f0f53
#: ../../topics/http/sessions.txt:648
msgid ":setting:`SESSION_SAVE_EVERY_REQUEST`"
msgstr ""

# 7f036d1bbce847a98290be20477505be
# 88aa8417fbf0445c8e413875412cf1cc
#: ../../topics/http/sessions.txt:653 ../../topics/security.txt:199
msgid "Session security"
msgstr "Sécurité des sessions"

# 49d5e1530a1a4d80bcd78a0d24205a91
#: ../../topics/http/sessions.txt:655
msgid ""
"Subdomains within a site are able to set cookies on the client for the whole"
" domain. This makes session fixation possible if all subdomains are not "
"controlled by trusted users (or, are at least unable to set cookies)."
msgstr ""

# 267a54b96ab14a9091cc03c58b28ef06
#: ../../topics/http/sessions.txt:659
msgid ""
"For example, an attacker could log into ``good.example.com`` and get a valid"
" session for his account. If the attacker has control over "
"``bad.example.com``, he can use it to send his session key to you since a "
"subdomain is permitted to set cookies on ``*.example.com``. When you visit "
"``good.example.com``, you'll be logged in as the attacker and might "
"inadvertently enter your sensitive personal data (e.g. credit card info) "
"into the attackers account."
msgstr ""

# fd67c210c6064a229274217d24c2aac4
#: ../../topics/http/sessions.txt:666
msgid ""
"Another possible attack would be if ``good.example.com`` sets its "
":setting:`SESSION_COOKIE_DOMAIN` to ``\".example.com\"`` which would cause "
"session cookies from that site to be sent to ``bad.example.com``."
msgstr ""

# 4a06c91b147e48609000b950190af349
#: ../../topics/http/sessions.txt:671
msgid "Technical details"
msgstr "Détails techniques"

# 285af0d73b9b4d239903dd00ab03200c
#: ../../topics/http/sessions.txt:673
msgid ""
"The session dictionary accepts any :mod:`json` serializable value when using"
" :class:`~django.contrib.sessions.serializers.JSONSerializer` or any "
"pickleable Python object when using "
":class:`~django.contrib.sessions.serializers.PickleSerializer`. See the "
":mod:`pickle` module for more information."
msgstr ""

# 4bd5ebab010b45f2a6cdd373d5bd26bb
#: ../../topics/http/sessions.txt:679
msgid "Session data is stored in a database table named ``django_session`` ."
msgstr "Les données des sessions sont stockées dans une table de base de données nommée ``django_session`` ."

# 82eacb9a420147ddb3e797ce95eec13f
#: ../../topics/http/sessions.txt:681
msgid ""
"Django only sends a cookie if it needs to. If you don't set any session "
"data, it won't send a session cookie."
msgstr "Django n'envoie un cookie qu'en cas de nécessité. Si vous ne définissez pas de données de session, le cookie de session ne sera pas envoyé."

# 78146d47139c4d5dbc3b58571df12df4
#: ../../topics/http/sessions.txt:685
msgid "Session IDs in URLs"
msgstr "Identifiants de session dans les URL"

# 3fbc47cfcd704f958b2a0dafaad081a7
#: ../../topics/http/sessions.txt:687
msgid ""
"The Django sessions framework is entirely, and solely, cookie-based. It does"
" not fall back to putting session IDs in URLs as a last resort, as PHP does."
" This is an intentional design decision. Not only does that behavior make "
"URLs ugly, it makes your site vulnerable to session-ID theft via the "
"\"Referer\" header."
msgstr "L'infrastructure des sessions de Django est complètement et uniquement basé sur les cookies. Il ne se rabat pas sur le système des identifiants de session dans les URL comme le fait PHP. C'est une décision conceptuelle volontaire. Cette technique défigure les URL et rend votre site vulnérable aux vols d'identifiants de session par l'intermédiaire de l'en-tête « Referer »."

# a406554a61e04020972258af6180f1ee
#: ../../topics/http/shortcuts.txt:3
msgid "Django shortcut functions"
msgstr "Les fonctions raccourcis de Django"

# 8058dc4c20414fcf930cda2c597e25e7
#: ../../topics/http/shortcuts.txt:11
msgid ""
"The package ``django.shortcuts`` collects helper functions and classes that "
"\"span\" multiple levels of MVC. In other words, these functions/classes "
"introduce controlled coupling for convenience's sake."
msgstr "Le paquet ``django.shortcuts`` rassemble des fonctions et des classes utilitaires qui recouvrent plusieurs niveaux de l'architecture MVC. En d'autres termes, ces fonctions/classes introduisent un couplage contrôlé à des fins de commodité."

# 55d4a28df94f49b79d8ce67dbc9c8c18
#: ../../topics/http/shortcuts.txt:16
msgid "``render``"
msgstr "``render``"

# aad011ec57b647b0a1f6b2a2797b891b
#: ../../topics/http/shortcuts.txt:20
msgid ""
"Combines a given template with a given context dictionary and returns an "
":class:`~django.http.HttpResponse` object with that rendered text."
msgstr "Combine un gabarit donné avec un dictionnaire contexte donné et renvoie un objet :class:`~django.http.HttpResponse` avec le texte résultant."

# 5819bcb22f9b4f08ba7d857e7493539c
#: ../../topics/http/shortcuts.txt:23
msgid ""
":func:`render()` is the same as a call to :func:`render_to_response()` with "
"a `context_instance` argument that forces the use of a "
":class:`~django.template.RequestContext`."
msgstr ":func:`render()` est semblable à l'appel à :func:`render_to_response()` avec un paramètre `context_instance` qui force l'utilisation d'une classe :class:`~django.template.RequestContext`."

# 11fb73393f204723b4014154a0814a5d
# 5b442fe0d36947769b6d92357fbe6e21
# 37e78b3fdcd2449d80aab0df8d77bb83
# 13fcc59fcd8847f295aa8a4e44890e76
# 6dfa63efe7834c3b814cdcc42ad4b74e
#: ../../topics/http/shortcuts.txt:28 ../../topics/http/shortcuts.txt:100
#: ../../topics/http/shortcuts.txt:239 ../../topics/http/shortcuts.txt:285
#: ../../topics/pagination.txt:137
msgid "Required arguments"
msgstr "Paramètres obligatoires"

# 2da12a1f2bc2400b9e5c93cfd7a015ee
#: ../../topics/http/shortcuts.txt:31
msgid "``request``"
msgstr "``request``"

# 43c48750cda241c18cc97bb27f38840a
#: ../../topics/http/shortcuts.txt:31
msgid "The request object used to generate this response."
msgstr "L'objet requête utilisé pour générer la réponse."

# b7f73d4d87b94368a1f5cb5b957d1427
# 17d7cce2824348c2a3d412c274659742
#: ../../topics/http/shortcuts.txt:34 ../../topics/http/shortcuts.txt:106
msgid "``template_name``"
msgstr "``template_name``"

# 161dea0257fa4b21a9177ddf13179cc9
#: ../../topics/http/shortcuts.txt:34
msgid "The full name of a template to use or sequence of template names."
msgstr "Le nom complet d'un gabarit à utiliser ou une liste de noms de gabarits."

# 61bfca1cbaf142538c63d63e76b68bab
# 2c405a036e4c4b76a3612d5f37843f16
# f7f0f863728142359554ed783c9c2f06
#: ../../topics/http/shortcuts.txt:37 ../../topics/http/shortcuts.txt:109
#: ../../topics/pagination.txt:148
msgid "Optional arguments"
msgstr "Paramètres facultatifs"

# f28a9df2c4194d0e9dd92df124482dda
# 0141275a73d64cbcb0776351b6f499d4
#: ../../topics/http/shortcuts.txt:42 ../../topics/http/shortcuts.txt:114
msgid "``dictionary``"
msgstr "``dictionary``"

# c5be32d6dded40228e8a9834f06d6168
# 4fb6dfd9d6d146198a049b50ef115256
#: ../../topics/http/shortcuts.txt:40 ../../topics/http/shortcuts.txt:112
msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. If a value in the dictionary is callable, the view will"
" call it just before rendering the template."
msgstr "Un dictionnaire de valeurs à ajouter un contexte du gabarit. Par défaut, ce dictionnaire est vide. Si une des valeurs du dictionnaire est exécutable, la vue l'appellera immédiatement avant de faire le rendu du gabarit."

# 4e04196fe50e449cb52e5a4ff759e454
# 906ca98bf4de4567ac8a8aa974552aa9
#: ../../topics/http/shortcuts.txt:47 ../../topics/http/shortcuts.txt:126
msgid "``context_instance``"
msgstr "``context_instance``"

# 4c7ca68a56454b8a9ec8c1215bbf3c93
#: ../../topics/http/shortcuts.txt:45
msgid ""
"The context instance to render the template with. By default, the template "
"will be rendered with a ``RequestContext`` instance (filled with values from"
" ``request`` and ``dictionary``)."
msgstr "L'instance de contexte avec laquelle effectuer le rendu du gabarit. Par défaut, le gabarit sera rendu avec une instance ``RequestContext`` (complétée par des valeurs de ``request`` et ``dictionary``)."

# e5be4db361b245ae915f771ef7b3b829
# 0d5c6d7dba1744afa51c08bba2d172e1
#: ../../topics/http/shortcuts.txt:55 ../../topics/http/shortcuts.txt:135
msgid "``content_type``"
msgstr "``content_type``"

# 45fdcf6216f647bcab6cdf5296b43df0
# 31f908f593484751ae358c2d9bb18bdd
#: ../../topics/http/shortcuts.txt:50 ../../topics/http/shortcuts.txt:129
msgid ""
"The MIME type to use for the resulting document. Defaults to the value of "
"the :setting:`DEFAULT_CONTENT_TYPE` setting."
msgstr "Le type MIME à utiliser pour le document produit. La valeur par défaut est celle du réglage :setting:`DEFAULT_CONTENT_TYPE`."

# a34d86e84881414584bbe093fefc8cd2
# 932bd342fb6f4438b8325a4b72d269e2
#: ../../topics/http/shortcuts.txt:55 ../../topics/http/shortcuts.txt:134
msgid "This parameter used to be called ``mimetype``."
msgstr "Ce paramètre s'appelait précédemment ``mimetype``."

# af6a2926bc714f9087501b59b53c5bd8
#: ../../topics/http/shortcuts.txt:58
msgid "``status``"
msgstr "``status``"

# 2afa63ae24414df692ec73f39efde3f7
#: ../../topics/http/shortcuts.txt:58
msgid "The status code for the response. Defaults to ``200``."
msgstr "Le code d'état de la réponse. La valeur par défaut est ``200``."

# 01e9b2cff2bd4c5693727983193a3ab6
#: ../../topics/http/shortcuts.txt:63
msgid "``current_app``"
msgstr "``current_app``"

# 6829e8e50b1545d789613928029aa5c4
#: ../../topics/http/shortcuts.txt:61
msgid ""
"A hint indicating which application contains the current view. See the "
":ref:`namespaced URL resolution strategy <topics-http-reversing-url-"
"namespaces>` for more information."
msgstr "Une indication de l'application contenant la vue actuelle. Consultez la :ref:`stratégie de résolution des URL en espaces de noms <topics-http-reversing-url-namespaces>` pour plus d'informations."

# c2b156318ed44eb9a2b5c03c95e474eb
# 3a82734090fb4cc88dbc217f4bff5ad4
# f0d8b3527ee84a44889c8127afc4de7f
# dc41db3471484e34b3d61a230cf454f8
# dbd3dc720bcb441bb9d7b78ad5443f60
# 00fc667b8ef24993a058ce0f434684c7
# bd91960747374b46bf44f1647f09dfa2
# a6fb6ce40ddd4809bf9135456e59d869
# 859125c55e9e41b296b152761ca97e45
#: ../../topics/http/shortcuts.txt:66 ../../topics/http/shortcuts.txt:138
#: ../../topics/http/shortcuts.txt:251 ../../topics/http/shortcuts.txt:297
#: ../../topics/http/urls.txt:65 ../../topics/http/urls.txt:800
#: ../../topics/pagination.txt:13 ../../topics/testing/advanced.txt:36
#: ../../topics/testing/overview.txt:810
msgid "Example"
msgstr "Exemple"

# 6c3cbd2475b74266a9b98e3730699f50
# e33bda6e3ef94b21963a4618582d4dfc
#: ../../topics/http/shortcuts.txt:68 ../../topics/http/shortcuts.txt:140
msgid ""
"The following example renders the template ``myapp/index.html`` with the "
"MIME type :mimetype:`application/xhtml+xml`::"
msgstr "L'exemple suivant effectue le rendu du gabarit ``myapp/index.html`` avec le type MIME :mimetype:`application/xhtml+xml`::"

# 3900b380ee784f6fb92149c977a60031
# 128f1e5006c74b2d83dfb144d42f8c4c
# b2ea8a908abb4050addafec62c5b1baa
# 28ff04cad4ba45b6be99710618b6b6af
#: ../../topics/http/shortcuts.txt:78 ../../topics/http/shortcuts.txt:150
#: ../../topics/http/shortcuts.txt:261 ../../topics/http/shortcuts.txt:306
msgid "This example is equivalent to::"
msgstr "Cet exemple est équivalent à ::"

# 6a3e7041d7d7438e8cc1eb33ca851c8f
#: ../../topics/http/shortcuts.txt:92
msgid "``render_to_response``"
msgstr "``render_to_response``"

# 2f061438e3394f259600664c7d9fe90f
#: ../../topics/http/shortcuts.txt:96
msgid ""
"Renders a given template with a given context dictionary and returns an "
":class:`~django.http.HttpResponse` object with that rendered text."
msgstr "Effectue le rendu d'un gabarit donné avec le dictionnaire de contexte donné et renvoie un objet :class:`~django.http.HttpResponse` avec le texte résultant."

# 5b80232b51bc4b22ac9f4d07b7ca73e7
#: ../../topics/http/shortcuts.txt:103
msgid ""
"The full name of a template to use or sequence of template names. If a "
"sequence is given, the first template that exists will be used. See the "
":ref:`template loader documentation <ref-templates-api-the-python-api>` for "
"more information on how templates are found."
msgstr "Le nom complet d'un gabarit à utiliser ou une liste de noms de gabarits. Si une liste est donnée, le premier gabarit de la liste qui est trouvé sera utilisé. Consultez la :ref:`documentation du chargeur de gabarits <ref-templates-api-the-python-api>` pour plus d'informations sur la façon dont les gabarits sont recherchés."

# 7bfb0c522c5d4a5f8f2e41b2f139b8c4
#: ../../topics/http/shortcuts.txt:117
msgid ""
"The context instance to render the template with. By default, the template "
"will be rendered with a :class:`~django.template.Context` instance (filled "
"with values from ``dictionary``). If you need to use :ref:`context "
"processors <subclassing-context-requestcontext>`, render the template with a"
" :class:`~django.template.RequestContext` instance instead. Your code might "
"look something like this::"
msgstr "L'instance de contexte avec laquelle effectuer le rendu du gabarit. Par défaut, le gabarit sera rendu avec une instance :class:`~django.template.Context` (complétée par des valeurs de ``dictionary``). Si vous avez besoin d'utiliser des :ref:`processeurs de contexte <subclassing-context-requestcontext>`, produisez plutôt le gabarit avec une instance :class:`~django.template.RequestContext`. Votre code pourrait ressembler à ceci ::"

# 2a128b4b1b6f4ca8991f7741a8c5ed0c
#: ../../topics/http/shortcuts.txt:163
msgid "``redirect``"
msgstr "``redirect``"

# 4dfb8796be7a4155bffd3ce0a60a979e
#: ../../topics/http/shortcuts.txt:167
msgid ""
"Returns an :class:`~django.http.HttpResponseRedirect` to the appropriate URL"
" for the arguments passed."
msgstr "Renvoie une réponse :class:`~django.http.HttpResponseRedirect` à l'URL correspondant aux paramètres transmis."

# a32a82674a9c4d91a30b0f67896c1def
#: ../../topics/http/shortcuts.txt:170
msgid "The arguments could be:"
msgstr "Les paramètres peuvent être :"

# e8ff37b3f1fa4b84a029e7b3dfa8ba0a
#: ../../topics/http/shortcuts.txt:172
msgid ""
"A model: the model's :meth:`~django.db.models.Model.get_absolute_url()` "
"function will be called."
msgstr "Un modèle : la fonction :meth:`~django.db.models.Model.get_absolute_url()` du modèle sera appelée."

# ef4b84d86ccf49dbb2602dc4e63ad393
#: ../../topics/http/shortcuts.txt:175
msgid ""
"A view name, possibly with arguments: :func:`urlresolvers.reverse "
"<django.core.urlresolvers.reverse>` will be used to reverse-resolve the "
"name."
msgstr "Un nom de vue, et potentiellement des paramètres  : :func:`urlresolvers.reverse <django.core.urlresolvers.reverse>` sera utilisée pour résoudre le nom."

# 9e2efbfb9a2048f4813bb39df5f86d31
#: ../../topics/http/shortcuts.txt:179
msgid "A URL, which will be used as-is for the redirect location."
msgstr "Une URL qui sera utilisée telle quelle comme emplacement de redirection."

# e0b71d564a09445db3ea430f720a714e
#: ../../topics/http/shortcuts.txt:181
msgid ""
"By default issues a temporary redirect; pass ``permanent=True`` to issue a "
"permanent redirect"
msgstr "Produit par défaut une redirection temporaire ; indiquez ``permanent=True`` pour produire une redirection permanente."

# 359e19fc744b48fabf957dfad97d96ce
#: ../../topics/http/shortcuts.txt:187
msgid "You can use the :func:`redirect` function in a number of ways."
msgstr "La fonction :func:`redirect` peut être utilisée de différentes manières."

# 01e970d4920b45a8b248e41aca88ccb4
#: ../../topics/http/shortcuts.txt:189
msgid ""
"By passing some object; that object's "
":meth:`~django.db.models.Model.get_absolute_url` method will be called to "
"figure out the redirect URL::"
msgstr "En lui passant un objet ; la méthode :meth:`~django.db.models.Model.get_absolute_url` de l'objet est appelée pour produire l'URL de redirection ::"

# 242a3522eb014fec88eb2e1efead6545
#: ../../topics/http/shortcuts.txt:200
msgid ""
"By passing the name of a view and optionally some positional or keyword "
"arguments; the URL will be reverse resolved using the "
":func:`~django.core.urlresolvers.reverse` method::"
msgstr "En lui passant le nom d'une vue et, en option, des paramètres positionnels ou nommés ; l'URL sera résolue en utilisant la méthode :func:`~django.core.urlresolvers.reverse`::"

# 21f60e5331834e1abe9deceb866278db
#: ../../topics/http/shortcuts.txt:208
msgid "By passing a hardcoded URL to redirect to::"
msgstr "En lui passant une URL de redirection fixe ::"

# 0e6cdfeeaf504ebf8a1582858fcd78ac
#: ../../topics/http/shortcuts.txt:214
msgid "This also works with full URLs::"
msgstr "Cela fonctionne aussi avec des URL complètes ::"

# ea036e7dda70439da2e44eec25e9b303
#: ../../topics/http/shortcuts.txt:220
msgid ""
"By default, :func:`redirect` returns a temporary redirect. All of the above "
"forms accept a ``permanent`` argument; if set to ``True`` a permanent "
"redirect will be returned::"
msgstr "Par défaut, :func:`redirect` renvoie une redirection temporaire. Toutes les formes ci-dessus acceptent un paramètre ``permanent`` qui, s'il est défini à ``True``, produit une redirection permanente ::"

# e4174c3f138a4169a8377031ee714039
#: ../../topics/http/shortcuts.txt:230
msgid "``get_object_or_404``"
msgstr "``get_object_or_404``"

# 744bc1fbfbcb421b8222b255d3a42c8b
#: ../../topics/http/shortcuts.txt:234
msgid ""
"Calls :meth:`~django.db.models.query.QuerySet.get()` on a given model "
"manager, but it raises :class:`~django.http.Http404` instead of the model's "
":class:`~django.core.exceptions.DoesNotExist` exception."
msgstr "Appelle :meth:`~django.db.models.query.QuerySet.get()` d'un gestionnaire de modèle donné, mais lève une exception :class:`~django.http.Http404` au lieu de l'exception :class:`~django.core.exceptions.DoesNotExist` du modèle."

# a9a2d627608d4842aab4cd861b32c38b
# 4186c70ddfb9423bbe976238f9b2c619
#: ../../topics/http/shortcuts.txt:244 ../../topics/http/shortcuts.txt:290
msgid "``klass``"
msgstr "``klass``"

# 2a03e70b739d449bb38ee876ee3d0131
#: ../../topics/http/shortcuts.txt:242
msgid ""
"A :class:`~django.db.models.Model` class, a "
":class:`~django.db.models.Manager`, or a "
":class:`~django.db.models.query.QuerySet` instance from which to get the "
"object."
msgstr "Une classe :class:`~django.db.models.Model`, un :class:`~django.db.models.Manager` ou une instance :class:`~django.db.models.query.QuerySet` comme source de l'objet."

# fae8a4cb514d4ca7ace2d48569bf242c
# caee270adfb94ca3bc4009a6ff08cb8c
#: ../../topics/http/shortcuts.txt:248 ../../topics/http/shortcuts.txt:294
msgid "``**kwargs``"
msgstr "``**kwargs``"

# 02cf6a7deb8048f0a9e30df63892becb
# ab2947e671124247bc50c516e120fbe5
#: ../../topics/http/shortcuts.txt:247 ../../topics/http/shortcuts.txt:293
msgid ""
"Lookup parameters, which should be in the format accepted by ``get()`` and "
"``filter()``."
msgstr "Paramètres de recherche, dans un format accepté par ``get()`` et ``filter()``."

# 104f5c3e779a4941a94d747a1b5e60df
#: ../../topics/http/shortcuts.txt:253
msgid ""
"The following example gets the object with the primary key of 1 from "
"``MyModel``::"
msgstr "L'exemple suivant obtient l'objet``MyModel`` ayant la clé primaire 1 ::"

# 5e7534903ae84fb0975cff2efa7c4a75
#: ../../topics/http/shortcuts.txt:272
msgid ""
"The most common use case is to pass a :class:`~django.db.models.Model`, as "
"shown above. However, you can also pass a "
":class:`~django.db.models.query.QuerySet` instance::"
msgstr "Le cas le plus courant est de transmettre un :class:`~django.db.models.Model`, comme montré ci-dessus. Cependant, vous pouvez aussi transmettre une instance :class:`~django.db.models.query.QuerySet`::"

# 7a26d9314bfe40a68cfd4c891230cd04
#: ../../topics/http/shortcuts.txt:279
msgid "The above example is a bit contrived since it's equivalent to doing::"
msgstr "L'exemple ci-dessus est un peu tiré par les cheveux, car il est équivalent à ::"

# 1c8b0176c7d143ef9b679468da32e2bc
#: ../../topics/http/shortcuts.txt:283
msgid ""
"but it can be useful if you are passed the ``queryset`` variable from "
"somewhere else."
msgstr "mais cela reste utile dans les cas où vous recevez une variable ``queryset`` par un autre moyen."

# e5559d4903314230a5f2a4253b320b7d
#: ../../topics/http/shortcuts.txt:286
msgid ""
"Finally, you can also use a :class:`~django.db.models.Manager`. This is "
"useful for example if you have a :ref:`custom manager<custom-managers>`::"
msgstr "Finalement, vous pouvez aussi utiliser un gestionnaire (:class:`~django.db.models.Manager`). C'est utile par exemple si vous avez un :ref:`gestionnaire personnalisé<custom-managers>` ::"

# a7128a0f3f094793ad6a6b679a67c539
#: ../../topics/http/shortcuts.txt:292
msgid ""
"You can also use :class:`related "
"managers<django.db.models.fields.related.RelatedManager>`::"
msgstr "Il est aussi possible d'utiliser des :class:`gestionnaires de liaison<django.db.models.fields.related.RelatedManager>`::"

# c3b42a1f706844f98d2b4933cc548977
#: ../../topics/http/shortcuts.txt:298
msgid ""
"Note: As with ``get()``, a "
":class:`~django.core.exceptions.MultipleObjectsReturned` exception will be "
"raised if more than one object is found."
msgstr "Note : comme pour ``get()``, une exception :class:`~django.core.exceptions.MultipleObjectsReturned` sera levée si plus d'un objet est renvoyé."

# 56d7fc7e040442d5941ae40ba0d76cee
#: ../../topics/http/shortcuts.txt:276
msgid "``get_list_or_404``"
msgstr "``get_list_or_404``"

# b22cd6a5fe4948dfbe7fb14da5cfed98
#: ../../topics/http/shortcuts.txt:280
msgid ""
"Returns the result of :meth:`~django.db.models.query.QuerySet.filter()` on a"
" given model manager cast to a list, raising :class:`~django.http.Http404` "
"if the resulting list is empty."
msgstr "Renvoie le résultat de :meth:`~django.db.models.query.QuerySet.filter()` sur un gestionnaire de modèle donné transformé en liste, générant :class:`~django.http.Http404` si la liste résultante est vide."

# 11f69b8918c5418fb2f911682c3e43f2
#: ../../topics/http/shortcuts.txt:288
msgid ""
"A :class:`~django.db.models.Model`, :class:`~django.db.models.Manager` or "
":class:`~django.db.models.query.QuerySet` instance from which to get the "
"list."
msgstr "Une instance de :class:`~django.db.models.Model`, :class:`~django.db.models.Manager` ou :class:`~django.db.models.query.QuerySet` comme source de la liste d'objets."

# 8d9db2fdb1a34974b59c5fef9f53bde1
#: ../../topics/http/shortcuts.txt:299
msgid "The following example gets all published objects from ``MyModel``::"
msgstr "L'exemple suivant récupère tous les objets publiés de "

# f090cf1fd0894429b20eb8dcb4a88381
#: ../../topics/http/shortcuts.txt:9
msgid "shortcuts"
msgstr "raccourcis"

# 415f884d8ac1477eae8bc62ea7035933
#: ../../topics/http/urls.txt:3
msgid "URL dispatcher"
msgstr ""

# 500649c2cfee4d33a090e93c547739b1
#: ../../topics/http/urls.txt:5
msgid ""
"A clean, elegant URL scheme is an important detail in a high-quality Web "
"application. Django lets you design URLs however you want, with no framework"
" limitations."
msgstr "Une organisation propre et élégante des URL est un aspect important dans une application Web de qualité. Django vous laisse organiser vos URL comme bon vous semble, sans restriction imposée par le système."

# e2917cc0177d465c96311f495cfbb8ff
#: ../../topics/http/urls.txt:9
msgid ""
"There's no ``.php`` or ``.cgi`` required, and certainly none of that "
"``0,2097,1-1-1928,00`` nonsense."
msgstr "Pas besoin de ``.php`` ou de ``.cgi``, et encore moins de ``0,2097,1-1-1928,00``."

# c376e19eb4134315818d2d8c8ae2b04c
#: ../../topics/http/urls.txt:12
msgid ""
"See `Cool URIs don't change`_, by World Wide Web creator Tim Berners-Lee, "
"for excellent arguments on why URLs should be clean and usable."
msgstr "Lisez `Cool URIs don't change`_, par le père du World Wide Web Tim Berners-Lee, pour savoir pourquoi les URL devraient être claires et conviviales."

# e53edcf06cd04472a66bee335d6b70fb
#: ../../topics/http/urls.txt:20
msgid ""
"To design URLs for an app, you create a Python module informally called a "
"**URLconf** (URL configuration). This module is pure Python code and is a "
"simple mapping between URL patterns (simple regular expressions) to Python "
"functions (your views)."
msgstr "Pour organiser les URL d'une application, il s'agit de créer un module Python appelé communément **URLconf** (configuration d'URL). Le code de ce module est en Python pur et est une simple correspondance entre motifs d'URL (de banales expressions régulières) et fonctions Python (vos vues)."

# 00ba4c75247043868f421c9a65a09485
#: ../../topics/http/urls.txt:25
msgid ""
"This mapping can be as short or as long as needed. It can reference other "
"mappings. And, because it's pure Python code, it can be constructed "
"dynamically."
msgstr "Cette correspondance peut être autant courte que longue. Elle peut faire référence à d'autres correspondances. Et étant donné qu'il s'agit de code Python pur, elle peut être construite dynamiquement."

# 7a5456293ec3431c8d5661a2ae84f74d
#: ../../topics/http/urls.txt:29
msgid ""
"Django also provides a way to translate URLs according to the active "
"language. See the :ref:`internationalization documentation <url-"
"internationalization>` for more information."
msgstr ""

# ac0d690f740d4b9a8b6f83780c3ce3ef
#: ../../topics/http/urls.txt:36
msgid "How Django processes a request"
msgstr "Processus de traitement des requêtes par Django"

# 9f6b402ec47d4527a342fdb9782d2151
#: ../../topics/http/urls.txt:38
msgid ""
"When a user requests a page from your Django-powered site, this is the "
"algorithm the system follows to determine which Python code to execute:"
msgstr "Quand un utilisateur accède à une page de votre site Django, voici l'algorithme que le système suit pour déterminer quel code Python doit être exécuté :"

# 2693039aa6ea484084577765f14a57b4
#: ../../topics/http/urls.txt:41
msgid ""
"Django determines the root URLconf module to use. Ordinarily, this is the "
"value of the :setting:`ROOT_URLCONF` setting, but if the incoming "
"``HttpRequest`` object has an attribute called ``urlconf`` (set by "
"middleware :ref:`request processing <request-middleware>`), its value will "
"be used in place of the :setting:`ROOT_URLCONF` setting."
msgstr "Django identifie le module URLconf racine à utiliser. Par défaut, c'est la valeur attribuée au réglage :setting:`ROOT_URLCONF`, mais si la requête ``HttpRequest`` entrante a un attribut ``urlconf`` (défini par l'intergiciel de :ref:`traitement de requête <request-middleware>`), sa valeur sera utilisée en lieu et place du réglage :setting:`ROOT_URLCONF`."

# 823ee39d72164fc39f67f0e970164ab7
#: ../../topics/http/urls.txt:47
msgid ""
"Django loads that Python module and looks for the variable ``urlpatterns``. "
"This should be a Python list, in the format returned by the function "
":func:`django.conf.urls.patterns`."
msgstr "Django charge ce module Python et cherche la variable ``urlpatterns``. Ce devrait être une liste Python, au format renvoyé par la fonction :func:`django.conf.urls.patterns`."

# 99e32ae6430c45e59ea84e157ad735ec
#: ../../topics/http/urls.txt:51
msgid ""
"Django runs through each URL pattern, in order, and stops at the first one "
"that matches the requested URL."
msgstr "Django parcourt chaque motif d'URL dans l'ordre et s'arrête dès la première correspondance avec l'URL demandée."

# c6a95c9b39c24bd9933ce39e88bacd92
#: ../../topics/http/urls.txt:54
msgid ""
"Once one of the regexes matches, Django imports and calls the given view, "
"which is a simple Python function (or a :doc:`class based view </topics"
"/class-based-views/index>`). The view gets passed an "
":class:`~django.http.HttpRequest` as its first argument and any values "
"captured in the regex as remaining arguments."
msgstr "Une fois qu'une des expressions régulières correspond, Django importe et appelle la vue correspondante, qui est une simple fonction Python (ou une :doc:`vue reposant sur une classe </topics/class-based-views/index>`). La vue se voit passer une :class:`~django.http.HttpRequest` en tant que premier paramètre puis toutes les valeurs capturées dans l'expression régulière en tant que paramètres restants."

# 4246d776f71446ce9ac30d9ce43d3710
#: ../../topics/http/urls.txt:60
msgid ""
"If no regex matches, or if an exception is raised during any point in this "
"process, Django invokes an appropriate error-handling view. See `Error "
"handling`_ below."
msgstr "Si aucune expression régulière ne correspond, ou si une exception est levée durant ce processus, Django appelle une vue d'erreur appropriée. Voir `Gestion d'erreur`_ plus bas."

# 324a0ca2cf9c4952a5bc60432837d845
#: ../../topics/http/urls.txt:67
msgid "Here's a sample URLconf::"
msgstr "Voici un exemple d'URLconf ::"

# 77a506c95ed54173a309862dbd7cdafd
#: ../../topics/http/urls.txt:80
msgid "To capture a value from the URL, just put parenthesis around it."
msgstr "Pour capturer une valeur contenue dans l'URL, entourez-la simplement de parenthèses."

# e06e92fd61084ebaa1c0e5c966c6680c
#: ../../topics/http/urls.txt:82
msgid ""
"There's no need to add a leading slash, because every URL has that. For "
"example, it's ``^articles``, not ``^/articles``."
msgstr "Inutile de préfixer vos URL d'une barre oblique, elles en ont toutes une. Par exemple, écrivez ``^articles`` et non ``^/articles``."

# 723831951ec04aef9f8e04b0915139c5
#: ../../topics/http/urls.txt:85
msgid ""
"The ``'r'`` in front of each regular expression string is optional but "
"recommended. It tells Python that a string is \"raw\" -- that nothing in the"
" string should be escaped. See `Dive Into Python's explanation`_."
msgstr "Le ``'r'`` devant chaque expression régulière est facultatif mais recommandé. Il signale à Python qu'une chaîne est « brute », aucun caractère de la chaîne ne doit être échappé. Voir `l'explication de Dive Into Python`_."

# cde33bbb41ff444d94e2fd4b0bacf50f
#: ../../topics/http/urls.txt:89
msgid "Example requests:"
msgstr "Exemples de requêtes :"

# 569d476661184128824e77d5a269343d
#: ../../topics/http/urls.txt:91
msgid ""
"A request to ``/articles/2005/03/`` would match the third entry in the list."
" Django would call the function ``news.views.month_archive(request, '2005', "
"'03')``."
msgstr "Une requête sur ``/articles/2005/03/`` correspondrait à la troisième entrée dans la liste. Django appellerait la fonction ``news.views.month_archive(request, '2005', '03')``."

# 34ab95a7f55649a184875df9b753d699
#: ../../topics/http/urls.txt:95
msgid ""
"``/articles/2005/3/`` would not match any URL patterns, because the third "
"entry in the list requires two digits for the month."
msgstr "``/articles/2005/3/`` ne correspondrait à aucun motif d'URL, car la troisième entrée dans la liste nécessite deux chiffres pour le mois."

# 6951bbc0891d4d97891e21e62798c966
#: ../../topics/http/urls.txt:98
msgid ""
"``/articles/2003/`` would match the first pattern in the list, not the "
"second one, because the patterns are tested in order, and the first one is "
"the first test to pass. Feel free to exploit the ordering to insert special "
"cases like this."
msgstr "``/articles/2003/`` correspondrait au premier motif de la liste, et non le deuxième, car les motifs sont évalués dans l'ordre, et le premier est le premier à correspondre. Libre à vous d'utiliser l'ordre de définition pour traiter des cas spéciaux comme ici."

# 339c1994c332423eaf63ddaf976dfcf0
#: ../../topics/http/urls.txt:103
msgid ""
"``/articles/2003`` would not match any of these patterns, because each "
"pattern requires that the URL end with a slash."
msgstr "``/articles/2003`` ne correspondrait à aucun motif, car chaque motif nécessite que l'URL se termine par une barre oblique."

# 4e18a55875e6442697f04c9e2d8bd6b1
#: ../../topics/http/urls.txt:106
msgid ""
"``/articles/2003/03/03/`` would match the final pattern. Django would call "
"the function ``news.views.article_detail(request, '2003', '03', '03')``."
msgstr "``/articles/2003/03/03/`` correspondrait au dernier motif. Django appellerait la fonction ``news.views.article_detail(request, '2003', '03', '03')``."

# d0f3fc86393a4e5cac918f7b176fbaa9
#: ../../topics/http/urls.txt:112
msgid "Named groups"
msgstr "Groupes nommés"

# 1886fce729fd4a43b4cf0a58acd47bb4
#: ../../topics/http/urls.txt:114
msgid ""
"The above example used simple, *non-named* regular-expression groups (via "
"parenthesis) to capture bits of the URL and pass them as *positional* "
"arguments to a view. In more advanced usage, it's possible to use *named* "
"regular-expression groups to capture URL bits and pass them as *keyword* "
"arguments to a view."
msgstr "L'exemple ci-dessus utilise de simples groupes d'expressions régulières *non nommés* (via les parenthèses) pour capturer des bouts d'URL et les passer en tant que paramètres *positionnels* à une vue. Dans des situations plus poussées, il est possible d'utiliser des groupes de capture *nommés* pour capturer des bouts d'URL et les passer en tant que paramètres *nommés* à une vue."

# 41267fbbcb6b48c0abb8414cda4a649f
#: ../../topics/http/urls.txt:120
msgid ""
"In Python regular expressions, the syntax for named regular-expression "
"groups is ``(?P<name>pattern)``, where ``name`` is the name of the group and"
" ``pattern`` is some pattern to match."
msgstr "La syntaxe des expressions régulières en Python pour les groupes de captures nommés est ``(?P<nom>motif)``, où ``nom`` est le nom du groupe et ``motif`` est le motif à faire correspondre."

# b00358b107574e5a84f697ac160eb574
#: ../../topics/http/urls.txt:124
msgid "Here's the above example URLconf, rewritten to use named groups::"
msgstr "Voici le même exemple d'URLconf que ci-dessus, réécrit en utilisant les groupes nommés :"

# f64863f9012748588cc45eca17bf0e12
#: ../../topics/http/urls.txt:135
msgid ""
"This accomplishes exactly the same thing as the previous example, with one "
"subtle difference: The captured values are passed to view functions as "
"keyword arguments rather than positional arguments. For example:"
msgstr "Le résultat est strictement identique qu'avec le précédent exemple, avec une subtile différence : les valeurs capturées sont passées aux vues en tant que paramètres nommés plutôt qu'en tant que paramètres positionnels. Par exemple :"

# c4e24591969f4f388a6e9d16c0a0da15
#: ../../topics/http/urls.txt:139
msgid ""
"A request to ``/articles/2005/03/`` would call the function "
"``news.views.month_archive(request, year='2005', month='03')``, instead of "
"``news.views.month_archive(request, '2005', '03')``."
msgstr "Une requête sur ``/articles/2005/03/`` appellerait la fonction ``news.views.month_archive(request, year='2005', month='03')``, plutôt que ``news.views.month_archive(request, '2005', '03')``."

# 3ce408bae7a74c00ace1763a5de142bf
#: ../../topics/http/urls.txt:143
msgid ""
"A request to ``/articles/2003/03/03/`` would call the function "
"``news.views.article_detail(request, year='2003', month='03', day='03')``."
msgstr "Une requête sur ``/articles/2003/03/03/`` appellerait la fonction ``news.views.article_detail(request, year='2003', month='03', day='03')``."

# d2f29ee604be4dc2bfea355969ea4e7b
#: ../../topics/http/urls.txt:146
msgid ""
"In practice, this means your URLconfs are slightly more explicit and less "
"prone to argument-order bugs -- and you can reorder the arguments in your "
"views' function definitions. Of course, these benefits come at the cost of "
"brevity; some developers find the named-group syntax ugly and too verbose."
msgstr "En pratique, cela signifie que vos modules URLconf sont légèrement plus explicites et moins sujets aux bogues d'ordre des paramètres, et vous pouvez réordonner les paramètres des définitions de vos vues. Bien sûr, ces avantages viennent au prix de la brièveté ; certains développeurs trouvent la syntaxe des groupes nommés vilaine et trop verbeuse."

# 23c394eee980404d8ab1e171e7b63172
#: ../../topics/http/urls.txt:152
msgid "The matching/grouping algorithm"
msgstr ""

# be2619d45a71416e98d7e8126c7e8c3e
#: ../../topics/http/urls.txt:154
msgid ""
"Here's the algorithm the URLconf parser follows, with respect to named "
"groups vs. non-named groups in a regular expression:"
msgstr ""

# bea9a9966eeb4824a53554472502ff1b
#: ../../topics/http/urls.txt:157
msgid ""
"If there are any named arguments, it will use those, ignoring non-named "
"arguments."
msgstr ""

# b7aee6da4cf349debd5cb31781d70ed1
#: ../../topics/http/urls.txt:160
msgid ""
"Otherwise, it will pass all non-named arguments as positional arguments."
msgstr ""

# 83b9e930352e4fa180663ea32f72e779
#: ../../topics/http/urls.txt:162
msgid ""
"In both cases, any extra keyword arguments that have been given as per "
"`Passing extra options to view functions`_ (below) will also be passed to "
"the view."
msgstr ""

# 0e8c1213798e4a9aad7c8698c9b5b0e8
#: ../../topics/http/urls.txt:166
msgid "What the URLconf searches against"
msgstr ""

# fa55e97bae674fa9a0fc4cf1b60373fa
#: ../../topics/http/urls.txt:168
msgid ""
"The URLconf searches against the requested URL, as a normal Python string. "
"This does not include GET or POST parameters, or the domain name."
msgstr ""

# ef718af1323e418e8dcd51de8a5a7a10
#: ../../topics/http/urls.txt:171
msgid ""
"For example, in a request to ``http://www.example.com/myapp/``, the URLconf "
"will look for ``myapp/``."
msgstr ""

# 7467a415e5c647d589e0a340bbaf3b35
#: ../../topics/http/urls.txt:174
msgid ""
"In a request to ``http://www.example.com/myapp/?page=3``, the URLconf will "
"look for ``myapp/``."
msgstr ""

# 6263486c8e75428e888dcabaabb76fd5
#: ../../topics/http/urls.txt:177
msgid ""
"The URLconf doesn't look at the request method. In other words, all request "
"methods -- ``POST``, ``GET``, ``HEAD``, etc. -- will be routed to the same "
"function for the same URL."
msgstr ""

# 68c2ec261e7f43bdba1910febd8f1f84
#: ../../topics/http/urls.txt:182
msgid "Notes on capturing text in URLs"
msgstr ""

# 30d505f0a9f649149357e61a44874e5f
#: ../../topics/http/urls.txt:184
msgid ""
"Each captured argument is sent to the view as a plain Python string, "
"regardless of what sort of match the regular expression makes. For example, "
"in this URLconf line::"
msgstr ""

# 84c60457de3b4cd9a4904f0548455a7c
#: ../../topics/http/urls.txt:190
msgid ""
"...the ``year`` argument to ``news.views.year_archive()`` will be a string, "
"not an integer, even though the ``\\d{4}`` will only match integer strings."
msgstr ""

# 4f047ba023964f05b12ba23329e9916a
#: ../../topics/http/urls.txt:193
msgid ""
"A convenient trick is to specify default parameters for your views' "
"arguments. Here's an example URLconf and view::"
msgstr ""

# 6f9795598c2f4a39bc9b3dae6698bb98
#: ../../topics/http/urls.txt:209
msgid ""
"In the above example, both URL patterns point to the same view -- "
"``blog.views.page`` -- but the first pattern doesn't capture anything from "
"the URL. If the first pattern matches, the ``page()`` function will use its "
"default argument for ``num``, ``\"1\"``. If the second pattern matches, "
"``page()`` will use whatever ``num`` value was captured by the regex."
msgstr ""

# 8641df8d50474279b4cd87c02d560c75
#: ../../topics/http/urls.txt:216
msgid "Performance"
msgstr ""

# d0aa375dba7a41e6b1b64f6ead11f0ff
#: ../../topics/http/urls.txt:218
msgid ""
"Each regular expression in a ``urlpatterns`` is compiled the first time it's"
" accessed. This makes the system blazingly fast."
msgstr ""

# fa0dbf4c7d004a948a64ad06fcb669ea
#: ../../topics/http/urls.txt:222
msgid "Syntax of the urlpatterns variable"
msgstr ""

# 1be978581e8d457cb6d047bebcd41eeb
#: ../../topics/http/urls.txt:224
msgid ""
"``urlpatterns`` should be a Python list, in the format returned by the "
"function :func:`django.conf.urls.patterns`. Always use ``patterns()`` to "
"create the ``urlpatterns`` variable."
msgstr ""

# 5f8fe56341c14f1b91ef9044597570a3
#: ../../topics/http/urls.txt:229
msgid "Error handling"
msgstr ""

# 17034c622999446990cdcfd01ed6f725
#: ../../topics/http/urls.txt:231
msgid ""
"When Django can't find a regex matching the requested URL, or when an "
"exception is raised, Django will invoke an error-handling view."
msgstr ""

# 3dcf899d7a6c45f2bbc66d27fd72b7a0
#: ../../topics/http/urls.txt:234
msgid ""
"The views to use for these cases are specified by four variables. Their "
"default values should suffice for most projects, but further customization "
"is possible by assigning values to them."
msgstr ""

# acf40d869d91409ebf00b2df29e6fb9a
#: ../../topics/http/urls.txt:238
msgid ""
"See the documentation on :ref:`customizing error views <customizing-error-"
"views>` for the full details."
msgstr ""

# 0c9c071b49124972bcb1285d8d5dcb8e
#: ../../topics/http/urls.txt:241
msgid ""
"Such values can be set in your root URLconf. Setting these variables in any "
"other URLconf will have no effect."
msgstr ""

# 69c9a9789a21406496c20eb54e455688
#: ../../topics/http/urls.txt:244
msgid ""
"Values must be callables, or strings representing the full Python import "
"path to the view that should be called to handle the error condition at "
"hand."
msgstr ""

# 0de5bdcaf8504b699bdebb494bfb1099
#: ../../topics/http/urls.txt:247
msgid "The variables are:"
msgstr ""

# 76cd1f9d656b4361a6be477ddb305a39
#: ../../topics/http/urls.txt:249
msgid "``handler404`` -- See :data:`django.conf.urls.handler404`."
msgstr ""

# 14d74b147c72437ea54d7ce344c38342
#: ../../topics/http/urls.txt:250
msgid "``handler500`` -- See :data:`django.conf.urls.handler500`."
msgstr ""

# ab33d4ed581a4fb68abba0fd3070742e
#: ../../topics/http/urls.txt:251
msgid "``handler403`` -- See :data:`django.conf.urls.handler403`."
msgstr ""

# 3372250b52594fb5a55b5a642dde6226
#: ../../topics/http/urls.txt:252
msgid "``handler400`` -- See :data:`django.conf.urls.handler400`."
msgstr ""

# a2b84bf72ee445b89f20188db72d8112
#: ../../topics/http/urls.txt:257
msgid "The view prefix"
msgstr ""

# 3c90c9eae1174d54b2e2509c542578a4
#: ../../topics/http/urls.txt:259
msgid ""
"You can specify a common prefix in your ``patterns()`` call, to cut down on "
"code duplication."
msgstr ""

# 98a1c29d1d9049abb8ca34f03eaf2d57
#: ../../topics/http/urls.txt:262
msgid ""
"Here's the example URLconf from the :doc:`Django overview "
"</intro/overview>`::"
msgstr ""

# 2badea6774d54199b426e90b90cdeb49
#: ../../topics/http/urls.txt:272
msgid ""
"In this example, each view has a common prefix -- ``'news.views'``. Instead "
"of typing that out for each entry in ``urlpatterns``, you can use the first "
"argument to the ``patterns()`` function to specify a prefix to apply to each"
" view function."
msgstr ""

# b4d8f6b582144d46a4c700bda497f9b6
#: ../../topics/http/urls.txt:277
msgid ""
"With this in mind, the above example can be written more concisely as::"
msgstr ""

# fca7083033974eecb25d8b199ee8a5ee
#: ../../topics/http/urls.txt:287
msgid ""
"Note that you don't put a trailing dot (``\".\"``) in the prefix. Django "
"puts that in automatically."
msgstr ""

# 4b6604e0f09d419cb000be59edc8bea5
#: ../../topics/http/urls.txt:291
msgid "Multiple view prefixes"
msgstr ""

# 833297a459c34cfa93d4844ee45bfa4e
#: ../../topics/http/urls.txt:293
msgid ""
"In practice, you'll probably end up mixing and matching views to the point "
"where the views in your ``urlpatterns`` won't have a common prefix. However,"
" you can still take advantage of the view prefix shortcut to remove "
"duplication. Just add multiple ``patterns()`` objects together, like this:"
msgstr ""

# 6f06f103efdb47b2a1fa3929b80f918e
#: ../../topics/http/urls.txt:298
msgid "Old::"
msgstr ""

# 9cf03bdce5d441b3bf0cc51137f41eec
#: ../../topics/http/urls.txt:308
msgid "New::"
msgstr ""

# c8cd20925f1743c7a50ee08ef1ba72c9
#: ../../topics/http/urls.txt:324
msgid "Including other URLconfs"
msgstr ""

# ede3be74a79747b78255891d911e1975
#: ../../topics/http/urls.txt:326
msgid ""
"At any point, your ``urlpatterns`` can \"include\" other URLconf modules. "
"This essentially \"roots\" a set of URLs below other ones."
msgstr ""

# 3df3b2787f264e6da9a923cfd215a5c0
#: ../../topics/http/urls.txt:329
msgid ""
"For example, here's an excerpt of the URLconf for the `Django Web site`_ "
"itself. It includes a number of other URLconfs::"
msgstr ""

# 2cc43b3506104385aa6673129fe8f0fc
#: ../../topics/http/urls.txt:342
msgid ""
"Note that the regular expressions in this example don't have a ``$`` (end-"
"of-string match character) but do include a trailing slash. Whenever Django "
"encounters ``include()`` (:func:`django.conf.urls.include()`), it chops off "
"whatever part of the URL matched up to that point and sends the remaining "
"string to the included URLconf for further processing."
msgstr ""

# c4aa5f9ef27746bdacf34a11ed186d1a
#: ../../topics/http/urls.txt:348
msgid ""
"Another possibility is to include additional URL patterns not by specifying "
"the URLconf Python module defining them as the ``include()`` argument but by"
" using directly the pattern list as returned by "
":func:`~django.conf.urls.patterns` instead. For example, consider this "
"URLconf::"
msgstr ""

# d71d6c541bcd4b63bbbe14882f2e8dd9
#: ../../topics/http/urls.txt:366
msgid ""
"In this example, the ``/credit/reports/`` URL will be handled by the "
"``credit.views.report()`` Django view."
msgstr ""

# c8f585343b8646ef95e38ab17723cfd9
#: ../../topics/http/urls.txt:369
msgid ""
"This can be used to remove redundancy from URLconfs where a single pattern "
"prefix is used repeatedly. For example, consider this URLconf::"
msgstr ""

# 4661be7f5a5343b689a29f46a7a8a90c
#: ../../topics/http/urls.txt:381
msgid ""
"We can improve this by stating the common path prefix only once and grouping"
" the suffixes that differ::"
msgstr ""

# 4fd8e5acb36545d3a0589b0dcd5e88e6
#: ../../topics/http/urls.txt:398
msgid "Captured parameters"
msgstr ""

# 9afbf204ee1a4719abea68689c780720
#: ../../topics/http/urls.txt:400
msgid ""
"An included URLconf receives any captured parameters from parent URLconfs, "
"so the following example is valid::"
msgstr ""

# 9048f69aa5d44f28a32030d42e9ff702
#: ../../topics/http/urls.txt:418
msgid ""
"In the above example, the captured ``\"username\"`` variable is passed to "
"the included URLconf, as expected."
msgstr ""

# be199cdda3784ba294cb19080710e26b
#: ../../topics/http/urls.txt:424
msgid "Passing extra options to view functions"
msgstr ""

# 6b8828d38fa94e5d834fe4da7427bd44
#: ../../topics/http/urls.txt:426
msgid ""
"URLconfs have a hook that lets you pass extra arguments to your view "
"functions, as a Python dictionary."
msgstr ""

# 30c7f8a25feb42b296e6a0f14c49db57
#: ../../topics/http/urls.txt:429
msgid ""
"The :func:`django.conf.urls.url` function can take an optional third "
"argument which should be a dictionary of extra keyword arguments to pass to "
"the view function."
msgstr ""

# 58a724b8c9ea4c7f882c180a470764c8
#: ../../topics/http/urls.txt:441
msgid ""
"In this example, for a request to ``/blog/2005/``, Django will call "
"``blog.views.year_archive(request, year='2005', foo='bar')``."
msgstr ""

# de8ac69553d84908a4ca15983e62316f
#: ../../topics/http/urls.txt:444
msgid ""
"This technique is used in the :doc:`syndication framework "
"</ref/contrib/syndication>` to pass metadata and options to views."
msgstr ""

# a918670ce058464ea0496dc099cdac16
#: ../../topics/http/urls.txt:448
msgid "Dealing with conflicts"
msgstr ""

# 0bacf99545fe4d0dab05922e9aafc86b
#: ../../topics/http/urls.txt:450
msgid ""
"It's possible to have a URL pattern which captures named keyword arguments, "
"and also passes arguments with the same names in its dictionary of extra "
"arguments. When this happens, the arguments in the dictionary will be used "
"instead of the arguments captured in the URL."
msgstr ""

# da187961937c4427aee88ca1d6fa50bc
#: ../../topics/http/urls.txt:456
msgid "Passing extra options to ``include()``"
msgstr ""

# 620bf16297bd484096a1089243201821
#: ../../topics/http/urls.txt:458
msgid ""
"Similarly, you can pass extra options to :func:`~django.conf.urls.include`. "
"When you pass extra options to ``include()``, *each* line in the included "
"URLconf will be passed the extra options."
msgstr ""

# 8aaf9561f5d54916a05bdbdff09b356c
#: ../../topics/http/urls.txt:462
msgid "For example, these two URLconf sets are functionally identical:"
msgstr ""

# 43e4765942da4c68be389c52933c5c9d
#: ../../topics/http/urls.txt:464
msgid "Set one::"
msgstr ""

# 2b5dc845ef70408f8046de91b1285253
#: ../../topics/http/urls.txt:481
msgid "Set two::"
msgstr ""

# ce6b55d974144976bbf1023f59447753
#: ../../topics/http/urls.txt:498
msgid ""
"Note that extra options will *always* be passed to *every* line in the "
"included URLconf, regardless of whether the line's view actually accepts "
"those options as valid. For this reason, this technique is only useful if "
"you're certain that every view in the included URLconf accepts the extra "
"options you're passing."
msgstr ""

# 525bfee83c274934a7390f8bed161911
#: ../../topics/http/urls.txt:504
msgid "Passing callable objects instead of strings"
msgstr ""

# 33be55a26ede443d9bceb876f067dfe6
#: ../../topics/http/urls.txt:506
msgid ""
"Some developers find it more natural to pass the actual Python function "
"object rather than a string containing the path to its module. This "
"alternative is supported -- you can pass any callable object as the view."
msgstr ""

# d7f3311d00db4907b1a3d2f346b289e5
#: ../../topics/http/urls.txt:510
msgid "For example, given this URLconf in \"string\" notation::"
msgstr ""

# 83d3805336274e22bc1008a7e66f72d5
#: ../../topics/http/urls.txt:520
msgid ""
"You can accomplish the same thing by passing objects rather than strings. "
"Just be sure to import the objects::"
msgstr ""

# 409cf5d571264b0d9c6ab4e26928720d
#: ../../topics/http/urls.txt:532
msgid ""
"The following example is functionally identical. It's just a bit more "
"compact because it imports the module that contains the views, rather than "
"importing each view individually::"
msgstr ""

# 9e89eab1c06a4d6e951a4a888fdd5221
#: ../../topics/http/urls.txt:545
msgid "The style you use is up to you."
msgstr ""

# 9a61d02f4f9b418d8db4927187905ef5
#: ../../topics/http/urls.txt:547
msgid ""
"Note that if you use this technique -- passing objects rather than strings "
"-- the view prefix (as explained in \"The view prefix\" above) will have no "
"effect."
msgstr ""

# 491e857334444c9986411021e67109a0
#: ../../topics/http/urls.txt:550
msgid ""
"Note that :doc:`class based views</topics/class-based-views/index>` must be "
"imported::"
msgstr ""

# 59863103c76242099e60b71471cddfeb
#: ../../topics/http/urls.txt:561
msgid "Reverse resolution of URLs"
msgstr ""

# d5454d6f31af4755b67434ec06d55bb9
#: ../../topics/http/urls.txt:563
msgid ""
"A common need when working on a Django project is the possibility to obtain "
"URLs in their final forms either for embedding in generated content (views "
"and assets URLs, URLs shown to the user, etc.) or for handling of the "
"navigation flow on the server side (redirections, etc.)"
msgstr ""

# aa565a4247404076a58ed78399972143
#: ../../topics/http/urls.txt:568
msgid ""
"It is strongly desirable not having to hard-code these URLs (a laborious, "
"non-scalable and error-prone strategy) or having to devise ad-hoc mechanisms"
" for generating URLs that are parallel to the design described by the "
"URLconf and as such in danger of producing stale URLs at some point."
msgstr ""

# a09102fa497c43ee8ec572ab88f020a0
#: ../../topics/http/urls.txt:573
msgid ""
"In other words, what's needed is a DRY mechanism. Among other advantages it "
"would allow evolution of the URL design without having to go all over the "
"project source code to search and replace outdated URLs."
msgstr ""

# 92e4428cc90e4b15996b282a46182d08
#: ../../topics/http/urls.txt:577
msgid ""
"The piece of information we have available as a starting point to get a URL "
"is an identification (e.g. the name) of the view in charge of handling it, "
"other pieces of information that necessarily must participate in the lookup "
"of the right URL are the types (positional, keyword) and values of the view "
"arguments."
msgstr ""

# 4dfbc1c2d0544eb49fb3ce78669f09ca
#: ../../topics/http/urls.txt:582
msgid ""
"Django provides a solution such that the URL mapper is the only repository "
"of the URL design. You feed it with your URLconf and then it can be used in "
"both directions:"
msgstr ""

# 72f7361d2db7475aaf6bef515157b706
#: ../../topics/http/urls.txt:586
msgid ""
"Starting with a URL requested by the user/browser, it calls the right Django"
" view providing any arguments it might need with their values as extracted "
"from the URL."
msgstr ""

# e67d0a6f953a48fa90033e011e0a035e
#: ../../topics/http/urls.txt:590
msgid ""
"Starting with the identification of the corresponding Django view plus the "
"values of arguments that would be passed to it, obtain the associated URL."
msgstr ""

# 2ab2e51b668f434dabe41266ef1dbebc
#: ../../topics/http/urls.txt:593
msgid ""
"The first one is the usage we've been discussing in the previous sections. "
"The second one is what is known as *reverse resolution of URLs*, *reverse "
"URL matching*, *reverse URL lookup*, or simply *URL reversing*."
msgstr ""

# 4fbadf531d1841a4a944f2df9fcebf74
#: ../../topics/http/urls.txt:597
msgid ""
"Django provides tools for performing URL reversing that match the different "
"layers where URLs are needed:"
msgstr ""

# 643159c63b3a4c2583b987d0f39303b8
#: ../../topics/http/urls.txt:600
msgid "In templates: Using the :ttag:`url` template tag."
msgstr ""

# f7c58ba13d094eb7882034fcbaf396eb
#: ../../topics/http/urls.txt:602
msgid ""
"In Python code: Using the :func:`django.core.urlresolvers.reverse` function."
msgstr ""

# fb1346e1c8564136b6f216d921da4b42
#: ../../topics/http/urls.txt:605
msgid ""
"In higher level code related to handling of URLs of Django model instances: "
"The :meth:`~django.db.models.Model.get_absolute_url` method."
msgstr ""

# dc02cdac44de40ac9f3ff168cad4875f
#: ../../topics/http/urls.txt:611
msgid "Consider again this URLconf entry::"
msgstr ""

# fd4d24dc5664452d98cebb932fba19b7
#: ../../topics/http/urls.txt:621
msgid ""
"According to this design, the URL for the archive corresponding to year "
"*nnnn* is ``/articles/nnnn/``."
msgstr ""

# d16810eada5447fdbe2b45e95250e395
#: ../../topics/http/urls.txt:624
msgid "You can obtain these in template code by using:"
msgstr ""

# 8f374d0581084f3a9275eee08de7e1ef
#: ../../topics/http/urls.txt:636
msgid "Or in Python code::"
msgstr ""

# 5f07f4b892c04dd5baaa338bbe891418
#: ../../topics/http/urls.txt:647
msgid ""
"If, for some reason, it was decided that the URLs where content for yearly "
"article archives are published at should be changed then you would only need"
" to change the entry in the URLconf."
msgstr ""

# 669b96a0441540a781401997b71ed103
#: ../../topics/http/urls.txt:651
msgid ""
"In some scenarios where views are of a generic nature, a many-to-one "
"relationship might exist between URLs and views. For these cases the view "
"name isn't a good enough identificator for it when it comes the time of "
"reversing URLs. Read the next section to know about the solution Django "
"provides for this."
msgstr ""

# 524f7107512c466d8c3a2d579cd006de
#: ../../topics/http/urls.txt:659
msgid "Naming URL patterns"
msgstr ""

# 44baa64b8cb548f88d7e2291b21a52ca
#: ../../topics/http/urls.txt:661
msgid ""
"It's fairly common to use the same view function in multiple URL patterns in"
" your URLconf. For example, these two URL patterns both point to the "
"``archive`` view::"
msgstr ""

# ffeb839b8bd945a988b5a7f07c993b1a
#: ../../topics/http/urls.txt:673
msgid ""
"This is completely valid, but it leads to problems when you try to do "
"reverse URL matching (through the :func:`~django.core.urlresolvers.reverse` "
"function or the :ttag:`url` template tag). Continuing this example, if you "
"wanted to retrieve the URL for the ``archive`` view, Django's reverse URL "
"matcher would get confused, because *two* URL patterns point at that view."
msgstr ""

# ca5c0752858b4eb29db3d3636236aa42
#: ../../topics/http/urls.txt:679
msgid ""
"To solve this problem, Django supports **named URL patterns**. That is, you "
"can give a name to a URL pattern in order to distinguish it from other "
"patterns using the same view and parameters. Then, you can use this name in "
"reverse URL matching."
msgstr ""

# c2fb2c1469054bb99d659617cb5f5699
#: ../../topics/http/urls.txt:684
msgid "Here's the above example, rewritten to use named URL patterns::"
msgstr ""

# a735ce7382254d7080229e8bce4806f9
#: ../../topics/http/urls.txt:694
msgid ""
"With these names in place (``full-archive`` and ``arch-summary``), you can "
"target each pattern individually by using its name:"
msgstr ""

# cc4c1d693b52452cbdad8d9ee3a54702
#: ../../topics/http/urls.txt:702
msgid ""
"Even though both URL patterns refer to the ``archive`` view here, using the "
"``name`` parameter to :func:`django.conf.urls.url` allows you to tell them "
"apart in templates."
msgstr ""

# 01e9e796c75748979df9161694db0ab3
#: ../../topics/http/urls.txt:706
msgid ""
"The string used for the URL name can contain any characters you like. You "
"are not restricted to valid Python names."
msgstr ""

# c99adbb2029d446384e8b5427b2d8f0b
#: ../../topics/http/urls.txt:711
msgid ""
"When you name your URL patterns, make sure you use names that are unlikely "
"to clash with any other application's choice of names. If you call your URL "
"pattern ``comment``, and another application does the same thing, there's no"
" guarantee which URL will be inserted into your template when you use this "
"name."
msgstr ""

# 247b1f9a58044681a774f25b07757aec
#: ../../topics/http/urls.txt:717
msgid ""
"Putting a prefix on your URL names, perhaps derived from the application "
"name, will decrease the chances of collision. We recommend something like "
"``myapp-comment`` instead of ``comment``."
msgstr ""

# 372bf372636144fb9bfc34a08740c01a
#: ../../topics/http/urls.txt:724
msgid "URL namespaces"
msgstr ""

# eeee237b086f48bfb651b7afa9950fbd
#: ../../topics/http/urls.txt:727
msgid "Introduction"
msgstr "Introduction"

# aab27519676b4178993f12cc8ea75e22
#: ../../topics/http/urls.txt:729
msgid ""
"When you need to deploy multiple instances of a single application, it can "
"be helpful to be able to differentiate between instances. This is especially"
" important when using :ref:`named URL patterns <naming-url-patterns>`, since"
" multiple instances of a single application will share named URLs. "
"Namespaces provide a way to tell these named URLs apart."
msgstr ""

# 38704edd453443088fe46396c679ca47
#: ../../topics/http/urls.txt:735
msgid "A URL namespace comes in two parts, both of which are strings:"
msgstr ""

# b586fa1f70354b5088aba81997719865
#: ../../topics/http/urls.txt:738
msgid "application namespace"
msgstr ""

# 84d76737c8ad4c0ca8f91397ff716baf
#: ../../topics/http/urls.txt:740
msgid ""
"This describes the name of the application that is being deployed. Every "
"instance of a single application will have the same application namespace. "
"For example, Django's admin application has the somewhat predictable "
"application namespace of ``'admin'``."
msgstr ""

# 949aa72ea832434cb48291b5900bf1ee
#: ../../topics/http/urls.txt:744
msgid "instance namespace"
msgstr ""

# e3a33ff4374c48959cf2318a90d7061a
#: ../../topics/http/urls.txt:746
msgid ""
"This identifies a specific instance of an application. Instance namespaces "
"should be unique across your entire project. However, an instance namespace "
"can be the same as the application namespace. This is used to specify a "
"default instance of an application. For example, the default Django Admin "
"instance has an instance namespace of ``'admin'``."
msgstr ""

# 39b6fd650aad4af6898e06add2af3ee6
#: ../../topics/http/urls.txt:752
msgid ""
"Namespaced URLs are specified using the ``':'`` operator. For example, the "
"main index page of the admin application is referenced using "
"``'admin:index'``. This indicates a namespace of ``'admin'``, and a named "
"URL of ``'index'``."
msgstr ""

# 54877b91917b4f3b9a6a7943edb3528f
#: ../../topics/http/urls.txt:756
msgid ""
"Namespaces can also be nested. The named URL ``'foo:bar:whiz'`` would look "
"for a pattern named ``'whiz'`` in the namespace ``'bar'`` that is itself "
"defined within the top-level namespace ``'foo'``."
msgstr ""

# b22961f4157443d691d5a1b4ba8a2d51
#: ../../topics/http/urls.txt:763
msgid "Reversing namespaced URLs"
msgstr ""

# 424aeb64d2fd482e831f805cf6ebc054
#: ../../topics/http/urls.txt:765
msgid ""
"When given a namespaced URL (e.g. ``'myapp:index'``) to resolve, Django "
"splits the fully qualified name into parts, and then tries the following "
"lookup:"
msgstr ""

# d005ef01830442139b484c79b681d371
#: ../../topics/http/urls.txt:768
msgid ""
"First, Django looks for a matching :term:`application namespace` (in this "
"example, ``'myapp'``). This will yield a list of instances of that "
"application."
msgstr ""

# f7faf93fb70f4944a85ab901004de51b
#: ../../topics/http/urls.txt:772
msgid ""
"If there is a *current* application defined, Django finds and returns the "
"URL resolver for that instance. The *current* application can be specified "
"as an attribute on the template context - applications that expect to have "
"multiple deployments should set the ``current_app`` attribute on any "
"``Context`` or ``RequestContext`` that is used to render a template."
msgstr ""

# bc31c85a7f8a4cc2bd6ac4c3807498e8
#: ../../topics/http/urls.txt:779
msgid ""
"The current application can also be specified manually as an argument to the"
" :func:`django.core.urlresolvers.reverse` function."
msgstr ""

# d8e6509122bb4d94b23ddefabc9ac7c8
#: ../../topics/http/urls.txt:782
msgid ""
"If there is no current application. Django looks for a default application "
"instance. The default application instance is the instance that has an "
":term:`instance namespace` matching the :term:`application namespace` (in "
"this example, an instance of the ``myapp`` called ``'myapp'``)."
msgstr ""

# 84b7a3f5f72845c698f7f0bdb539a826
#: ../../topics/http/urls.txt:788
msgid ""
"If there is no default application instance, Django will pick the last "
"deployed instance of the application, whatever its instance name may be."
msgstr ""

# 2dbfad9437684964842685d2ab53e891
#: ../../topics/http/urls.txt:791
msgid ""
"If the provided namespace doesn't match an :term:`application namespace` in "
"step 1, Django will attempt a direct lookup of the namespace as an "
":term:`instance namespace`."
msgstr ""

# 0086005e02fd49beba969a6156d77447
#: ../../topics/http/urls.txt:795
msgid ""
"If there are nested namespaces, these steps are repeated for each part of "
"the namespace until only the view name is unresolved. The view name will "
"then be resolved into a URL in the namespace that has been found."
msgstr ""

# 4ebd6da8328c466ebc1c13be0222d560
#: ../../topics/http/urls.txt:802
msgid ""
"To show this resolution strategy in action, consider an example of two "
"instances of ``myapp``: one called ``'foo'``, and one called ``'bar'``. "
"``myapp`` has a main index page with a URL named ``'index'``. Using this "
"setup, the following lookups are possible:"
msgstr ""

# bce9279d4f7f4ff18477f69f23ec2528
# 15a4b16da960469ca7d0d70d94b0ce9e
#: ../../topics/http/urls.txt:807 ../../topics/http/urls.txt:824
msgid ""
"If one of the instances is current - say, if we were rendering a utility "
"page in the instance ``'bar'`` - ``'myapp:index'`` will resolve to the index"
" page of the instance ``'bar'``."
msgstr ""

# ed38940300d2430086a980ced9355740
#: ../../topics/http/urls.txt:811
msgid ""
"If there is no current instance - say, if we were rendering a page somewhere"
" else on the site - ``'myapp:index'`` will resolve to the last registered "
"instance of ``myapp``. Since there is no default instance, the last instance"
" of ``myapp`` that is registered will be used. This could be ``'foo'`` or "
"``'bar'``, depending on the order they are introduced into the urlpatterns "
"of the project."
msgstr ""

# 44a6a25feb204783bca2c83bfa10a30b
#: ../../topics/http/urls.txt:818
msgid ""
"``'foo:index'`` will always resolve to the index page of the instance "
"``'foo'``."
msgstr ""

# 68b9449e1f7b456cb5294d13d57aa204
#: ../../topics/http/urls.txt:821
msgid ""
"If there was also a default instance - i.e., an instance named ``'myapp'`` -"
" the following would happen:"
msgstr ""

# 8965a4c6fcb04668b18669b5649fd864
#: ../../topics/http/urls.txt:828
msgid ""
"If there is no current instance - say, if we were rendering a page somewhere"
" else on the site - ``'myapp:index'`` will resolve to the index page of the "
"default instance."
msgstr ""

# 4bec53e0765a45d89c0fe976d7fd1426
#: ../../topics/http/urls.txt:832
msgid ""
"``'foo:index'`` will again resolve to the index page of the instance "
"``'foo'``."
msgstr ""

# cf5624115485452e8e8f5690e1ef337e
#: ../../topics/http/urls.txt:838
msgid "URL namespaces and included URLconfs"
msgstr ""

# 4619f751481243768d543d48be86c0d1
#: ../../topics/http/urls.txt:840
msgid "URL namespaces of included URLconfs can be specified in two ways."
msgstr ""

# 4a061a07c5194fd190d565b5d4385bb9
#: ../../topics/http/urls.txt:842
msgid ""
"Firstly, you can provide the :term:`application <application namespace>` and"
" :term:`instance <instance namespace>` namespaces as arguments to "
":func:`django.conf.urls.include()` when you construct your URL patterns. For"
" example,::"
msgstr ""

# f40eb70074944b438ada7d8ee887239f
#: ../../topics/http/urls.txt:849
msgid ""
"This will include the URLs defined in ``apps.help.urls`` into the "
":term:`application namespace` ``'bar'``, with the :term:`instance namespace`"
" ``'foo'``."
msgstr ""

# cb4240b069c74348a1efd4e1ddee2272
#: ../../topics/http/urls.txt:853
msgid ""
"Secondly, you can include an object that contains embedded namespace data. "
"If you ``include()`` an object as returned by "
":func:`~django.conf.urls.patterns`, the URLs contained in that object will "
"be added to the global namespace. However, you can also ``include()`` a "
"3-tuple containing::"
msgstr ""

# 930b4d0c5a884ecb9573181722b52a89
#: ../../topics/http/urls.txt:871
msgid ""
"This will include the nominated URL patterns into the given application and "
"instance namespace."
msgstr ""

# b2e26ee66d8c48c7aa4ade67716103ec
#: ../../topics/http/urls.txt:874
msgid ""
"For example, the Django Admin is deployed as instances of "
":class:`~django.contrib.admin.AdminSite`.  ``AdminSite`` objects have a "
"``urls`` attribute: A 3-tuple that contains all the patterns in the "
"corresponding admin site, plus the application namespace ``'admin'``, and "
"the name of the admin instance. It is this ``urls`` attribute that you "
"``include()`` into your projects ``urlpatterns`` when you deploy an Admin "
"instance."
msgstr ""

# c7167eeb5539464992e3b8ff9d90fbf9
#: ../../topics/http/views.txt:3
msgid "Writing views"
msgstr ""

# db010ccc2e414d4d80aa62fdc21aba7d
#: ../../topics/http/views.txt:5
msgid ""
"A view function, or *view* for short, is simply a Python function that takes"
" a Web request and returns a Web response. This response can be the HTML "
"contents of a Web page, or a redirect, or a 404 error, or an XML document, "
"or an image . . . or anything, really. The view itself contains whatever "
"arbitrary logic is necessary to return that response. This code can live "
"anywhere you want, as long as it's on your Python path. There's no other "
"requirement--no \"magic,\" so to speak. For the sake of putting the code "
"*somewhere*, the convention is to put views in a file called ``views.py``, "
"placed in your project or application directory."
msgstr ""

# fc7d5847c46648a3998b94837fa6c67e
#: ../../topics/http/views.txt:16
msgid "A simple view"
msgstr ""

# c5a0575750d943698a28f6917785398a
#: ../../topics/http/views.txt:18
msgid ""
"Here's a view that returns the current date and time, as an HTML document:"
msgstr ""

# fa045d7c89554947883b2d5be3851ed8
#: ../../topics/http/views.txt:30
msgid "Let's step through this code one line at a time:"
msgstr ""

# c79eeb5069234cd0b703a80f03e0d4d9
#: ../../topics/http/views.txt:32
msgid ""
"First, we import the class :class:`~django.http.HttpResponse` from the "
":mod:`django.http` module, along with Python's ``datetime`` library."
msgstr ""

# b16738c948644126ba510b980b8ffaea
#: ../../topics/http/views.txt:35
msgid ""
"Next, we define a function called ``current_datetime``. This is the view "
"function. Each view function takes an :class:`~django.http.HttpRequest` "
"object as its first parameter, which is typically named ``request``."
msgstr ""

# 679b8c55d7714b59ab60bea6a7a8b070
#: ../../topics/http/views.txt:39
msgid ""
"Note that the name of the view function doesn't matter; it doesn't have to "
"be named in a certain way in order for Django to recognize it. We're calling"
" it ``current_datetime`` here, because that name clearly indicates what it "
"does."
msgstr ""

# fea7e6a223224ce49c835eb040ea085d
#: ../../topics/http/views.txt:44
msgid ""
"The view returns an :class:`~django.http.HttpResponse` object that contains "
"the generated response. Each view function is responsible for returning an "
":class:`~django.http.HttpResponse` object. (There are exceptions, but we'll "
"get to those later.)"
msgstr ""

# 70314ea61388434180a0a02c954b5b6e
#: ../../topics/http/views.txt:49
msgid "Django's Time Zone"
msgstr ""

# 616d11d265e84e588dbf004a0b289cc2
#: ../../topics/http/views.txt:51
msgid ""
"Django includes a :setting:`TIME_ZONE` setting that defaults to "
"``America/Chicago``. This probably isn't where you live, so you might want "
"to change it in your settings file."
msgstr ""

# 4fe27d045b5e4757a0cd9bee31ecf71e
#: ../../topics/http/views.txt:56
msgid "Mapping URLs to views"
msgstr ""

# 99055487a5034695af9999d216aba4e5
#: ../../topics/http/views.txt:58
msgid ""
"So, to recap, this view function returns an HTML page that includes the "
"current date and time. To display this view at a particular URL, you'll need"
" to create a *URLconf*; see :doc:`/topics/http/urls` for instructions."
msgstr ""

# 7fc05113c5674d48a376846e8a8b0c23
#: ../../topics/http/views.txt:63
msgid "Returning errors"
msgstr ""

# 96f11e20374145b4b1be663304197586
#: ../../topics/http/views.txt:65
msgid ""
"Returning HTTP error codes in Django is easy. There are subclasses of "
":class:`~django.http.HttpResponse` for a number of common HTTP status codes "
"other than 200 (which means *\"OK\"*). You can find the full list of "
"available subclasses in the :ref:`request/response <ref-httpresponse-"
"subclasses>` documentation.  Just return an instance of one of those "
"subclasses instead of a normal :class:`~django.http.HttpResponse` in order "
"to signify an error. For example::"
msgstr ""

# 34f311c4472a49489285e7a91d08f0be
#: ../../topics/http/views.txt:82
msgid ""
"There isn't a specialized subclass for every possible HTTP response code, "
"since many of them aren't going to be that common. However, as documented in"
" the :class:`~django.http.HttpResponse` documentation, you can also pass the"
" HTTP status code into the constructor for "
":class:`~django.http.HttpResponse` to create a return class for any status "
"code you like. For example::"
msgstr ""

# 48931625bf104e71bfbfa8341de3efcd
#: ../../topics/http/views.txt:96
msgid ""
"Because 404 errors are by far the most common HTTP error, there's an easier "
"way to handle those errors."
msgstr ""

# 5f380ab2812946f996932ea1a7f620f4
#: ../../topics/http/views.txt:100
msgid "The Http404 exception"
msgstr ""

# cda1bc3f373c4f92a01e556300b4a82a
#: ../../topics/http/views.txt:104
msgid ""
"When you return an error such as :class:`~django.http.HttpResponseNotFound`,"
" you're responsible for defining the HTML of the resulting error page::"
msgstr ""

# 0a34047c6e0e4f82a09fe8aa4b19d6be
#: ../../topics/http/views.txt:109
msgid ""
"For convenience, and because it's a good idea to have a consistent 404 error"
" page across your site, Django provides an ``Http404`` exception. If you "
"raise ``Http404`` at any point in a view function, Django will catch it and "
"return the standard error page for your application, along with an HTTP "
"error code 404."
msgstr ""

# 49ec504ba51747c39dc2c1ce96f3ecc1
#: ../../topics/http/views.txt:114
msgid "Example usage::"
msgstr "Exemple d'utilisation ::"

# fbb21b995cfb4fa1b3535cea17233a1b
#: ../../topics/http/views.txt:127
msgid ""
"In order to use the ``Http404`` exception to its fullest, you should create "
"a template that is displayed when a 404 error is raised. This template "
"should be called ``404.html`` and located in the top level of your template "
"tree."
msgstr ""

# 008b563e2eb64e669d38a51753df178c
#: ../../topics/http/views.txt:134
msgid "Customizing error views"
msgstr ""

# fb58c9536905439ca8bbdef43edc612f
#: ../../topics/http/views.txt:139
msgid "The 404 (page not found) view"
msgstr ""

# bdee1b99115b468390bc1ef5f5cf5b3b
#: ../../topics/http/views.txt:143
msgid ""
"When you raise :exc:`~django.http.Http404` from within a view, Django loads "
"a special view devoted to handling 404 errors. By default, it's the view "
":func:`django.views.defaults.page_not_found`, which either produces a very "
"simple \"Not Found\" message or loads and renders the template ``404.html`` "
"if you created it in your root template directory."
msgstr ""

# b335ff1b50934db692c7c7011096eb43
#: ../../topics/http/views.txt:149
msgid ""
"The default 404 view will pass one variable to the template: "
"``request_path``, which is the URL that resulted in the error."
msgstr ""

# b2d28eaede214d4aa3c00da08eac5fdd
#: ../../topics/http/views.txt:152
msgid ""
"The ``page_not_found`` view should suffice for 99% of Web applications, but "
"if you want to override it, you can specify "
":data:`~django.conf.urls.handler404` in your root URLconf (setting "
"``handler404`` anywhere else will have no effect), like so::"
msgstr ""

# d3ea2f22b0884786861fe2fac4e47db7
#: ../../topics/http/views.txt:159
msgid ""
"Behind the scenes, Django determines the 404 view by looking for "
"``handler404`` in your root URLconf, and falling back to "
"``django.views.defaults.page_not_found`` if you did not define one."
msgstr ""

# eee11195ef69454fa70e78aa0950a8eb
#: ../../topics/http/views.txt:163
msgid "Three things to note about 404 views:"
msgstr ""

# a89cede883794ed98eef9a46e10d2075
#: ../../topics/http/views.txt:165
msgid ""
"The 404 view is also called if Django doesn't find a match after checking "
"every regular expression in the URLconf."
msgstr "La vue 404 est également appelée si Django ne trouve pas de correspondance après avoir vérifié chaque expression régulière dans l'URLconf."

# c262efe120e1491985482761093efca9
#: ../../topics/http/views.txt:168
msgid ""
"The 404 view is passed a :class:`~django.template.RequestContext` and will "
"have access to variables supplied by your "
":setting:`TEMPLATE_CONTEXT_PROCESSORS` setting (e.g., ``MEDIA_URL``)."
msgstr ""

# e225967c4bd24017a95dacbbfba38ed2
#: ../../topics/http/views.txt:172
msgid ""
"If :setting:`DEBUG` is set to ``True`` (in your settings module), then your "
"404 view will never be used, and your URLconf will be displayed instead, "
"with some debug information."
msgstr ""

# bc601128657045f19eab5fc1c24977b1
#: ../../topics/http/views.txt:179
msgid "The 500 (server error) view"
msgstr ""

# 3582a395a89844ecbc94b66ac6835881
#: ../../topics/http/views.txt:183
msgid ""
"Similarly, Django executes special-case behavior in the case of runtime "
"errors in view code. If a view results in an exception, Django will, by "
"default, call the view ``django.views.defaults.server_error``, which either "
"produces a very simple \"Server Error\" message or loads and renders the "
"template ``500.html`` if you created it in your root template directory."
msgstr ""

# 64be0186208c467c81320f9e7866868d
#: ../../topics/http/views.txt:189
msgid ""
"The default 500 view passes no variables to the ``500.html`` template and is"
" rendered with an empty ``Context`` to lessen the chance of additional "
"errors."
msgstr ""

# 8e18427c289e4756b26a6d24cd616b1e
#: ../../topics/http/views.txt:192
msgid ""
"This ``server_error`` view should suffice for 99% of Web applications, but "
"if you want to override the view, you can specify "
":data:`~django.conf.urls.handler500` in your root URLconf, like so::"
msgstr ""

# 381ebdd448ba442eae6be25d7f600585
#: ../../topics/http/views.txt:198
msgid ""
"Behind the scenes, Django determines the 500 view by looking for "
"``handler500`` in your root URLconf, and falling back to "
"``django.views.defaults.server_error`` if you did not define one."
msgstr ""

# 470fc97fcb2c42e0b2260da64faab27e
#: ../../topics/http/views.txt:202
msgid "One thing to note about 500 views:"
msgstr ""

# d59dac59ecc54bdf9c63670fdf2688f6
#: ../../topics/http/views.txt:204
msgid ""
"If :setting:`DEBUG` is set to ``True`` (in your settings module), then your "
"500 view will never be used, and the traceback will be displayed instead, "
"with some debug information."
msgstr ""

# 2b2edd2621ab43dd945fc635486801ad
#: ../../topics/http/views.txt:211
msgid "The 403 (HTTP Forbidden) view"
msgstr ""

# 99fbf65d83c443c2baa16c6b519b11da
#: ../../topics/http/views.txt:215
msgid ""
"In the same vein as the 404 and 500 views, Django has a view to handle 403 "
"Forbidden errors. If a view results in a 403 exception then Django will, by "
"default, call the view ``django.views.defaults.permission_denied``."
msgstr ""

# ffa9010ea47c48f9b5100a57f8cd25d5
#: ../../topics/http/views.txt:219
msgid ""
"This view loads and renders the template ``403.html`` in your root template "
"directory, or if this file does not exist, instead serves the text \"403 "
"Forbidden\", as per :rfc:`2616` (the HTTP 1.1 Specification)."
msgstr ""

# 38da86ea7632480290cddef503c45098
#: ../../topics/http/views.txt:223
msgid ""
"``django.views.defaults.permission_denied`` is triggered by a "
":exc:`~django.core.exceptions.PermissionDenied` exception. To deny access in"
" a view you can use code like this::"
msgstr ""

# 09ed1f29a6c649c1899d79962fba3c6d
#: ../../topics/http/views.txt:234
msgid ""
"It is possible to override ``django.views.defaults.permission_denied`` in "
"the same way you can for the 404 and 500 views by specifying a "
":data:`~django.conf.urls.handler403` in your root URLconf::"
msgstr ""

# d34206ac616948b79f1bc352f86ff5cd
#: ../../topics/http/views.txt:243
msgid "The 400 (bad request) view"
msgstr ""

# 537df474a118479c99228e2871a398be
#: ../../topics/http/views.txt:249
msgid ""
"When a :exc:`~django.core.exceptions.SuspiciousOperation` is raised in "
"Django, it may be handled by a component of Django (for example resetting "
"the session data). If not specifically handled, Django will consider the "
"current request a 'bad request' instead of a server error."
msgstr ""

# 318a01decaa049dca2fe195f6525a348
#: ../../topics/http/views.txt:254
msgid ""
"``django.views.defaults.bad_request``, is otherwise very similar to the "
"``server_error`` view, but returns with the status code 400 indicating that "
"the error condition was the result of a client operation."
msgstr ""

# 15bc360514264ef99da471919372659b
#: ../../topics/http/views.txt:258
msgid ""
"Like ``server_error``, the default ``bad_request`` should suffice for 99% of"
" Web applications, but if you want to override the view, you can specify "
":data:`~django.conf.urls.handler400` in your root URLconf, like so::"
msgstr ""

# 815e160ae6ea4099a3743dfd2b565c56
#: ../../topics/http/views.txt:264
msgid ""
"``bad_request`` views are also only used when :setting:`DEBUG` is ``False``."
msgstr ""

# 6b9a0063fad34e4290939ffa936e494b
#: ../../topics/i18n/formatting.txt:5
msgid "Format localization"
msgstr "Régionalisation des formats"

# 6d3b521bb916432795377e79c7bfb388
#: ../../topics/i18n/formatting.txt:10
msgid ""
"Django's formatting system is capable to display dates, times and numbers in"
" templates using the format specified for the current :term:`locale <locale "
"name>`. It also handles localized input in forms."
msgstr "Le système des formats de Django est capable d'afficher des dates, des heures et des nombres dans les gabarits en utilisant les formats définis pour la langue (:term:`locale <locale name>`) active. Il gère également les saisies en formats régionalisés dans les formulaires."

# 623be4f266bf4531bbb8d7d9f2a57436
#: ../../topics/i18n/formatting.txt:13
msgid ""
"When it's enabled, two users accessing the same content may see dates, times"
" and numbers formatted in different ways, depending on the formats for their"
" current locale."
msgstr "Lorsqu'il est actif, deux utilisateurs accédant simultanément à un même contenu peuvent voir les dates, les heures et les nombres mis en forme différemment, en fonction des formats de leur langue actuelle."

# 78b597047a64409884b7b74e90049e59
#: ../../topics/i18n/formatting.txt:17
msgid ""
"The formatting system is disabled by default. To enable it, it's necessary "
"to set :setting:`USE_L10N = True <USE_L10N>` in your settings file."
msgstr "Le système des formats est désactivé par défaut. Pour l'activer, il est nécessaire de définir :setting:`USE_L10N = True <USE_L10N>` dans votre fichier de réglages."

# 85e627d04013430cbbb53ff4c64f98ff
#: ../../topics/i18n/formatting.txt:22
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes :setting:`USE_L10N = True <USE_L10N>` "
"for convenience.  Note, however, that to enable number formatting with "
"thousand separators it is necessary to set :setting:`USE_THOUSAND_SEPARATOR "
"= True <USE_THOUSAND_SEPARATOR>` in your settings file. Alternatively, you "
"could use :tfilter:`intcomma` to format numbers in your template."
msgstr "Le fichier :file:`settings.py` créé par défaut par :djadmin:`django-admin.py startproject <startproject>` contient  :setting:`USE_L10N = True <USE_L10N>` pour des raisons pratiques. Notez toutefois que pour activer le formatage des nombres avec les séparateurs de milliers, il est nécessaire d'ajouter :setting:`USE_THOUSAND_SEPARATOR = True <USE_THOUSAND_SEPARATOR>` dans le fichier des réglages. Une autre manière de le faire est d'utiliser le filtre :tfilter:`intcomma` pour mettre en forme les nombres dans les gabarits."

# 7d41c00ef9a74b40885d0d659b898cf5
#: ../../topics/i18n/formatting.txt:31
msgid ""
"There is also an independent but related :setting:`USE_I18N` setting that "
"controls if Django should activate translation. See "
":doc:`/topics/i18n/translation` for more details."
msgstr "Il existe également un réglage différent mais lié nommé :setting:`USE_I18N` qui contrôle l'activation ou non des traductions. Voir :doc:`/topics/i18n/translation` pour plus de détails."

# 1d7b65fe731d4db1b6a453298b50b259
#: ../../topics/i18n/formatting.txt:36
msgid "Locale aware input in forms"
msgstr "Saisies régionalisées dans les formulaires"

# 3f8e6d68f40045bd8f48cf6d69ddb4d0
#: ../../topics/i18n/formatting.txt:38
msgid ""
"When formatting is enabled, Django can use localized formats when parsing "
"dates, times and numbers in forms. That means it tries different formats for"
" different locales when guessing the format used by the user when inputting "
"data on forms."
msgstr "Lorsque l'utilisation des formats est active, Django peut utiliser des formats régionalisés lorsqu'il reçoit des dates, des heures et des nombres en provenance de formulaires. Cela signifie qu'il essaie différents formats de différentes langues pour deviner le format utilisé par l'utilisateur lors de saisies de données dans un formulaire."

# 0a3727e8f4244924a938a25db2d89ea4
#: ../../topics/i18n/formatting.txt:43
msgid ""
"Django uses different formats for displaying data to those it uses for "
"parsing data. Most notably, the formats for parsing dates can't use the "
"``%a`` (abbreviated weekday name), ``%A`` (full weekday name), ``%b`` "
"(abbreviated month name), ``%B`` (full month name), or ``%p`` (AM/PM)."
msgstr "Django utilise différents formats pour afficher les données que ceux qu'il utilise pour analyser les données reçues. Plus particulièrement, les formats d'analyse de dates ne peuvent pas utiliser ``%a`` (jour de la semaine abrégé), ``%A`` (jour de la semaine complet), ``%b`` (nom du mois abrégé), ``%B`` (nom du mois complet) et ``%p`` (AM/PM)."

# afde785569cf4a7f8477a75f3b351314
#: ../../topics/i18n/formatting.txt:49
msgid ""
"To enable a form field to localize input and output data simply use its "
"``localize`` argument::"
msgstr "Pour qu'un champ de formulaire utilise des formats régionalisés pour mettre en forme ses données affichées et saisies, utilisez simplement son paramètre ``localize``::"

# 451d5cddeadc405c8ba1756ca2adc548
#: ../../topics/i18n/formatting.txt:59
msgid "Controlling localization in templates"
msgstr "Contrôle de la régionalisation dans les gabarits"

# f349ded5ccb1457bbf080abeee34024f
#: ../../topics/i18n/formatting.txt:61
msgid ""
"When you have enabled formatting with :setting:`USE_L10N`, Django will try "
"to use a locale specific format whenever it outputs a value in a template."
msgstr "Quand la mise en forme est activée avec :setting:`USE_L10N`, Django essaie d'utiliser des formats spécifiques à la langue lorsqu'il affiche une valeur dans un gabarit."

# d286834d314c4fb4a1921e236e37e590
#: ../../topics/i18n/formatting.txt:65
msgid ""
"However, it may not always be appropriate to use localized values -- for "
"example, if you're outputting Javascript or XML that is designed to be "
"machine-readable, you will always want unlocalized values. You may also want"
" to use localization in selected templates, rather than using localization "
"everywhere."
msgstr "Cependant, il n'est pas toujours adéquat d'utiliser des valeurs régionalisées, par exemple si vous produisez du JavaScript ou du XML qui devront être interprétés par le système, ce contenu ne devrait jamais contenir d'affichage régionalisé. Il peut aussi être parfois souhaitable de limiter la régionalisation à certains gabarits, plutôt que de l'utiliser partout."

# 59464490d4f2415eb430c06e71c57291
#: ../../topics/i18n/formatting.txt:71
msgid ""
"To allow for fine control over the use of localization, Django provides the "
"``l10n`` template library that contains the following tags and filters."
msgstr "Pour permettre un contrôle plus fin sur l'emploi de la régionalisation, Django propose la bibliothèque de gabarit ``l10n`` qui contient les balises et filtres suivants."

# b5a9682789e147d5afc2cfac74574dae
# e9f6ef66520e4d43bdee931ec30483d6
#: ../../topics/i18n/formatting.txt:76 ../../topics/i18n/timezones.txt:261
msgid "Template tags"
msgstr "Balises de gabarit"

# cff677af03e9485c8c2db24ae0b12c79
# 3b35ef29fa834e9f981d0f98447a938e
#: ../../topics/i18n/formatting.txt:81 ../../topics/i18n/formatting.txt:115
msgid "localize"
msgstr "localize"

# 2bf366a5bede4a1da3e607d7f33744ca
#: ../../topics/i18n/formatting.txt:83
msgid ""
"Enables or disables localization of template variables in the contained "
"block."
msgstr "Active ou désactive la régionalisation de variables de gabarits dans le bloc qu'elle définit."

# d23bc6f64c5a4adb942a83e03727018f
#: ../../topics/i18n/formatting.txt:86
msgid ""
"This tag allows a more fine grained control of localization than "
":setting:`USE_L10N`."
msgstr "Cette balise permet une granularité plus fine dans le choix de régionalisation que le réglage :setting:`USE_L10N`."

# a1a5dec0e75e49c3bb5cb302c1cba248
#: ../../topics/i18n/formatting.txt:89
msgid "To activate or deactivate localization for a template block, use::"
msgstr "Pour activer ou désactiver la régionalisation pour un bloc de gabarit, utilisez ::"

# 1c2fd81890a9442ca4f0a935e295df36
#: ../../topics/i18n/formatting.txt:103
msgid ""
"The value of :setting:`USE_L10N` isn't respected inside of a ``{% localize "
"%}`` block."
msgstr "La valeur de :setting:`USE_L10N` n'est pas prise en compte à l'intérieur d'un bloc ``{% localize %}``."

# ffdc624b536a4322aaf5d5af976dba03
#: ../../topics/i18n/formatting.txt:106
msgid ""
"See :tfilter:`localize` and :tfilter:`unlocalize` for template filters that "
"will do the same job on a per-variable basis."
msgstr "Voir aussi :tfilter:`localize` et :tfilter:`unlocalize` pour des filtres de gabarit qui font le même travail au niveau des variables."

# b692f1d64fc2472ebf06bafbcad1fb56
# 31e9acbc9e174a95bf7e878548573da7
#: ../../topics/i18n/formatting.txt:110 ../../topics/i18n/timezones.txt:328
msgid "Template filters"
msgstr "Filtres de gabarit"

# 0dd9057afc454819926cba438a7e3013
#: ../../topics/i18n/formatting.txt:117
msgid "Forces localization of a single value."
msgstr "Force la régionalisation d'une seule valeur."

# f015ab2a9ee8432e891ae56ec2bf1820
#: ../../topics/i18n/formatting.txt:125
msgid ""
"To disable localization on a single value, use :tfilter:`unlocalize`. To "
"control localization over a large section of a template, use the "
":ttag:`localize` template tag."
msgstr "Pour désactiver la régionalisation d'une seule valeur, utilisez :tfilter:`unlocalize`. Pour contrôler la régionalisation sur toute une section d'un gabarit, utilisez la balise de gabarit :ttag:`localize`."

# 1e21b7e318944b86a83c5aeb02d3087c
#: ../../topics/i18n/formatting.txt:133
msgid "unlocalize"
msgstr "unlocalize"

# a3f5a18f6be44dd9876a8c87fed6a300
#: ../../topics/i18n/formatting.txt:135
msgid "Forces a single value to be printed without localization."
msgstr "Force l'affichage d'une seule valeur sans régionalisation."

# aea586f54ed84e189c5fc2674fb804b4
#: ../../topics/i18n/formatting.txt:143
msgid ""
"To force localization of a single value, use :tfilter:`localize`. To control"
" localization over a large section of a template, use the :ttag:`localize` "
"template tag."
msgstr "Pour forcer la régionalisation d'une seule valeur, utilisez :tfilter:`localize`. Pour contrôler la régionalisation sur toute une section d'un gabarit, utilisez la balise de gabarit :ttag:`localize`."

# 19080090189640ba8d4f7ba2c9b0a251
#: ../../topics/i18n/formatting.txt:150
msgid "Creating custom format files"
msgstr "Création de fichiers de formats personnalisés"

# 483908494e3e4a0a9bc6443e69c49dd0
#: ../../topics/i18n/formatting.txt:152
msgid ""
"Django provides format definitions for many locales, but sometimes you might"
" want to create your own, because a format files doesn't exist for your "
"locale, or because you want to overwrite some of the values."
msgstr "Django fournit des définitions de formats pour de nombreuses langues, mais il peut être parfois souhaitable de créer ses propres formats, soit parce qu'il n'existe pas de fichier de formats pour votre langue, soit par ce que vous souhaitez surcharger certaines valeurs."

# 0eac094994134c6abd911ce2029d132a
#: ../../topics/i18n/formatting.txt:156
msgid ""
"To use custom formats, specify the path where you'll place format files "
"first. To do that, just set your :setting:`FORMAT_MODULE_PATH` setting to "
"the package where format files will exist, for instance::"
msgstr "Pour utiliser des formats personnalisés, indiquez d'abord le chemin où vous allez placer les fichiers de formats. Pour cela, il suffit d'indiquer dans le réglage :setting:`FORMAT_MODULE_PATH` le chemin du paquet dans lequel seront définis les fichiers de formats ; par exemple ::"

# 627a37092daa466cb307de503ae0e19a
#: ../../topics/i18n/formatting.txt:162
msgid ""
"Files are not placed directly in this directory, but in a directory named as"
" the locale, and must be named ``formats.py``."
msgstr "Les fichiers ne seront pas directement dans ce répertoire, mais dans un sous-répertoire nommé d'après le code de langue, puis dans un fichier nommé ``formats.py``."

# 643f054af32c4267a375aa76cfee558d
#: ../../topics/i18n/formatting.txt:165
msgid ""
"To customize the English formats, a structure like this would be needed::"
msgstr "Pour personnaliser les formats anglais, voici à quoi ressemblerait la structure nécessaire ::"

# b486019b98764d14aa54b22224f51118
#: ../../topics/i18n/formatting.txt:174
msgid ""
"where :file:`formats.py` contains custom format definitions. For example::"
msgstr "où :file:`formats.py` contient les définitions de formats personnalisés. Par exemple ::"

# 0fe20db8650e403c8afee480b4324c1c
#: ../../topics/i18n/formatting.txt:178
msgid ""
"to use a non-breaking space (Unicode ``00A0``) as a thousand separator, "
"instead of the default for English, a comma."
msgstr "pour utiliser une espace insécable (Unicode ``00A0``) comme séparateur de milliers au lieu du caractère par défaut qui est la virgule en anglais."

# b20c648b18de48ccb62bc27799fc2cd2
#: ../../topics/i18n/formatting.txt:182
msgid "Limitations of the provided locale formats"
msgstr "Limites des formats de langue fournis"

# c8864c9eb162453884781f6ddceccf38
#: ../../topics/i18n/formatting.txt:184
msgid ""
"Some locales use context-sensitive formats for numbers, which Django's "
"localization system cannot handle automatically."
msgstr "Certaines langues utilisent des formats différents selon le contexte pour les nombres, ce que le système de régionalisation de Django ne sait pas gérer automatiquement."

# ff196340ee7c40c09d5d187784c71a59
#: ../../topics/i18n/formatting.txt:188
msgid "Switzerland (German)"
msgstr "Suisse (alémanique)"

# 9caa9f6c3cb549d3978c24bcfc0cb0b3
#: ../../topics/i18n/formatting.txt:190
msgid ""
"The Swiss number formatting depends on the type of number that is being "
"formatted. For monetary values, a comma is used as the thousand separator "
"and a decimal point for the decimal separator. For all other numbers, a "
"comma is used as decimal separator and a space as thousand separator. The "
"locale format provided by Django uses the generic separators, a comma for "
"decimal and a space for thousand separators."
msgstr "Le système de mise en forme des nombres dépend du type de nombre. Pour les valeurs monétaires, c'est la virgule qui doit être utilisée comme séparateur de milliers et le point décimal comme séparateur décimal. Pour tous les autres nombres, la virgule est utilisée comme séparateur décimal et l'espace comme séparateur de milliers. Le format de langue fournit par Django utilise toujours les séparateurs globaux, une virgule comme séparateur décimal et l'espace comme séparateur de milliers."

# 75e553d27f004586a40d97ac69e81efa
#: ../../topics/i18n/index.txt:3
msgid "Internationalization and localization"
msgstr "Internationalisation et régionalisation"

# f551c43714a84dd9bbd6367d7e7e7bb0
#: ../../topics/i18n/index.txt:16
msgid ""
"The goal of internationalization and localization is to allow a single Web "
"application to offer its content in languages and formats tailored to the "
"audience."
msgstr "Le but de l'internationalisation et de la régionalisation est de permettre à une seule application Web de présenter son contenu dans des langues et des formats adaptés à ses visiteurs."

# d30ca1a25de049edb6e127879405e6e7
#: ../../topics/i18n/index.txt:20
msgid ""
"Django has full support for :doc:`translation of text "
"</topics/i18n/translation>`, :doc:`formatting of dates, times and numbers "
"</topics/i18n/formatting>`, and :doc:`time zones </topics/i18n/timezones>`."
msgstr "Django prend pleinement en charge la :doc:`traduction de texte </topics/i18n/translation>`, la :doc:`mise en forme de dates, d'heures et de nombres </topics/i18n/formatting>`, et les :doc:`fuseaux horaires </topics/i18n/timezones>`."

# b3f1c56109844175938c853e6fe9fda1
#: ../../topics/i18n/index.txt:24
msgid "Essentially, Django does two things:"
msgstr "Essentiellement, Django effectue deux choses :"

# 54fcbf03da354e83978da964c3ace9b6
#: ../../topics/i18n/index.txt:26
msgid ""
"It allows developers and template authors to specify which parts of their "
"apps should be translated or formatted for local languages and cultures."
msgstr "Il permet aux développeurs et aux rédacteurs de gabarits d'indiquer quelles parties de leurs applications doivent être traduites ou mises en forme en fonction des langues et cultures locales."

# a7f90327bd6c47f9a1281a64fb290369
#: ../../topics/i18n/index.txt:28
msgid ""
"It uses these hooks to localize Web apps for particular users according to "
"their preferences."
msgstr "Il utilise ces marqueurs pour régionaliser les applications Web en fonction des préférences des utilisateurs."

# a8bc1e6c5e63419094dd7847ca3dc4d7
#: ../../topics/i18n/index.txt:31
msgid ""
"Obviously, translation depends on the target language, and formatting "
"usually depends on the target country. These informations are provided by "
"browsers in the ``Accept-Language`` header. However, the time zone isn't "
"readily available."
msgstr "Évidemment, la traduction dépend de la langue cible et la mise en forme dépend généralement du pays cible. Ces informations sont données par les navigateurs dans l'en-tête ``Accept-Language``. Cependant, le fuseau horaire n'est pas accessible de manière évidente."

# 4b74f16dbe014dd0a23b13ed21abc43a
#: ../../topics/i18n/index.txt:36
msgid "Definitions"
msgstr "Définitions"

# 23b8acb1b0d043d99c9998820f03bbf2
#: ../../topics/i18n/index.txt:38
msgid ""
"The words \"internationalization\" and \"localization\" often cause "
"confusion; here's a simplified definition:"
msgstr "Les mots « internationalisation » et « régionalisation » sont souvent sources de confusion. En voici une définition simplifiée :"

# 04d419e31f604868b201b0c48821bcff
#: ../../topics/i18n/index.txt:42
msgid "internationalization"
msgstr "internationalisation"

# b86950b998d64850a8de8490c54520b7
#: ../../topics/i18n/index.txt:44
msgid "Preparing the software for localization. Usually done by developers."
msgstr "Préparation du logiciel en vue de sa régionalisation. Habituellement effectuée par les développeurs."

# cfbad49870fe428e9dad471c4bc4ab31
#: ../../topics/i18n/index.txt:45
msgid "localization"
msgstr "régionalisation"

# b60bb1d680f549808e89c9a4a6c1ae0b
#: ../../topics/i18n/index.txt:47
msgid ""
"Writing the translations and local formats. Usually done by translators."
msgstr "Rédaction des traductions et des formats de langue. Habituellement effectuée par les traducteurs."

# a2df3aa59bfa41ce8dfcf73eaefdb480
#: ../../topics/i18n/index.txt:49
msgid ""
"More details can be found in the `W3C Web Internationalization FAQ`_, the "
"`Wikipedia article`_ or the `GNU gettext documentation`_."
msgstr "Vous pouvez trouver de plus amples détails dans la  `FAQ W3C Web Internationalization`_, l'`article Wikipédia`_ ou la `documentation de GNU gettext`_."

# 1279a42b8a4043ebb56a1118bcc74907
#: ../../topics/i18n/index.txt:57
msgid ""
"Translation and formatting are controlled by :setting:`USE_I18N` and "
":setting:`USE_L10N` settings respectively. However, both features involve "
"internationalization and localization. The names of the settings are an "
"unfortunate result of Django's history."
msgstr "La traduction et la mise en forme sont contrôlés par les réglages respectifs  :setting:`USE_I18N` et :setting:`USE_L10N`. Mais les deux fonctionnalités concernent l'internationalisation et la régionalisation. Les noms de ces réglages dans Django ont une malencontreuse origine historique."

# 9e2046e96ac14accab81e31d56f375d7
#: ../../topics/i18n/index.txt:62
msgid ""
"Here are some other terms that will help us to handle a common language:"
msgstr "Voici quelques autres termes qui vont nous aider à gérer une même langue :"

# ef10e469c23f46e2ae1628d49e4f0c9f
#: ../../topics/i18n/index.txt:65
msgid "locale name"
msgstr "nom de locale"

# 62eb26ef9ae74da9b9f84f5828526243
#: ../../topics/i18n/index.txt:67
msgid ""
"A locale name, either a language specification of the form ``ll`` or a "
"combined language and country specification of the form ``ll_CC``. Examples:"
" ``it``, ``de_AT``, ``es``, ``pt_BR``. The language part is always in lower "
"case and the country part in upper case. The separator is an underscore."
msgstr "Un nom de locale indiquant soit une langue sous la forme ``ll`` ou une combinaison de code langue et pays sous la forme ``ll_PP``. Exemples : ``it``, ``de_AT``, ``es``, ``pt_BR``. Le code de langue est toujours en minuscules et le code pays en majuscules. Le séparateur est un caractère soulignement."

# e53600f662ca46e3b147a959796a55bb
#: ../../topics/i18n/index.txt:72
msgid "language code"
msgstr "code de langue"

# 0ea8cd6400774c229b6181d4c5c3ec7f
#: ../../topics/i18n/index.txt:74
msgid ""
"Represents the name of a language. Browsers send the names of the languages "
"they accept in the ``Accept-Language`` HTTP header using this format. "
"Examples: ``it``, ``de-at``, ``es``, ``pt-br``. Both the language and the "
"country parts are in lower case. The separator is a dash."
msgstr "Représente le nom d'une langue. Les navigateurs envoient les noms de langues qu'ils acceptent dans l'en-tête HTTP ``Accept-Language`` avec ce format. Exemples : ``it``, ``de-at``, ``es``, ``pt-br``. Aussi bien le code langue que le code pays sont en minuscules. Le séparateur est un tiret."

# 48c4d9eb7d864507b579b0b017d58eb1
#: ../../topics/i18n/index.txt:78
msgid "message file"
msgstr "fichier de messages"

# 79a7ffe3a4054cd7aae071ecd2701f49
#: ../../topics/i18n/index.txt:80
msgid ""
"A message file is a plain-text file, representing a single language, that "
"contains all available :term:`translation strings <translation string>` and "
"how they should be represented in the given language. Message files have a "
"``.po`` file extension."
msgstr "Un fichier de messages est un fichier de texte pur correspondant à une seule langue et qui contient toutes les :term:`chaînes de caractères de traduction <translation string>` disponibles avec leur équivalent traduit dans la langue donnée. Les fichiers de messages possèdent l'extension ``.po``."

# 71241e9086b54bd38399b4a4c14f988e
#: ../../topics/i18n/index.txt:84
msgid "translation string"
msgstr "chaîne à traduire"

# 7671e62ecbc9418fbbdcf88b1f46a32b
#: ../../topics/i18n/index.txt:86
msgid "A literal that can be translated."
msgstr "Du texte à traduire."

# 1a42f4fbe05440ff9544be414665b903
#: ../../topics/i18n/index.txt:87
msgid "format file"
msgstr "format de fichier"

# 3f3b6b17fd7346978d029684daa82e60
#: ../../topics/i18n/index.txt:89
msgid ""
"A format file is a Python module that defines the data formats for a given "
"locale."
msgstr "Un fichier de formats est un module Python définissant les formats de données d'une langue définie."

# c40e4c1a26b443a19c24de89ac9c6a09
#: ../../topics/i18n/timezones.txt:5
msgid "Time zones"
msgstr "Fuseaux horaires"

# 35ab0823ed2f4f50aca00b610b42d378
#: ../../topics/i18n/timezones.txt:12
msgid ""
"When support for time zones is enabled, Django stores date and time "
"information in UTC in the database, uses time-zone-aware datetime objects "
"internally, and translates them to the end user's time zone in templates and"
" forms."
msgstr "Lorsque la prise en charge des fuseaux horaires est activée, Django stocke les informations de date/heure en UTC dans la base de données, utilise en interne des objets date/heure conscients de leur fuseau horaire et les convertit dans les gabarits et les formulaires en utilisant le fuseau horaire de l'utilisateur."

# a8d3c1ba2a82411db373bb0478062eae
#: ../../topics/i18n/timezones.txt:17
msgid ""
"This is handy if your users live in more than one time zone and you want to "
"display date and time information according to each user's wall clock."
msgstr "C'est très pratique si vos utilisateurs sont répartis sur plus d'un fuseau horaire et que vous vouliez afficher les informations temporelles selon l'heure locale de chacun."

# b575eb6738c94a3ba299107cc690d103
#: ../../topics/i18n/timezones.txt:20
msgid ""
"Even if your Web site is available in only one time zone, it's still good "
"practice to store data in UTC in your database. One main reason is Daylight "
"Saving Time (DST). Many countries have a system of DST, where clocks are "
"moved forward in spring and backward in autumn. If you're working in local "
"time, you're likely to encounter errors twice a year, when the transitions "
"happen. (The pytz_ documentation discusses `these issues`_ in greater "
"detail.) This probably doesn't matter for your blog, but it's a problem if "
"you over-bill or under-bill your customers by one hour, twice a year, every "
"year. The solution to this problem is to use UTC in the code and use local "
"time only when interacting with end users."
msgstr "Même si votre site Web n'est utilisé que dans un seul fuseau horaire, stocker les données en UTC dans la base de données fait partie des bonnes pratiques. Une des raisons principales étant l'heure d'été (Daylight Saving Time - DST). Dans beaucoup de pays, l'heure d'été fait avancer d'une heure au printemps et reculer d'une heure en automne. Si vous travaillez en temps local, vous risquez d'obtenir des erreurs deux fois par année, au moment de la transition (la documentation de pytz_ aborde `ces questions`_ plus en détails). ce n'est probablement pas un problème pour votre blog, mais c'en est un si vous surfacturez ou sous-facturez vos clients d'une heure, deux fois par année, chaque année. La solution à ce problème est d'utiliser UTC dans le code, et le temps local uniquement lors des interactions avec les utilisateurs du site."

# 417fcc1ac3294d34adb803347a269af9
#: ../../topics/i18n/timezones.txt:31
msgid ""
"Time zone support is disabled by default. To enable it, set :setting:`USE_TZ"
" = True <USE_TZ>` in your settings file. Installing pytz_ is highly "
"recommended, but not mandatory. It's as simple as:"
msgstr "La prise en charge des fuseaux horaires est désactivée par défaut. Pour l'activer, définissez :setting:`USE_TZ = True <USE_TZ>` dans votre fichier de réglages. L'installation de pytz_ est fortement recommandée, mais pas obligatoire. C'est aussi simple que :"

# 827b3fbcf8c84a64ab3c6c1584c512e5
#: ../../topics/i18n/timezones.txt:41
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes :setting:`USE_TZ = True <USE_TZ>` for "
"convenience."
msgstr "Le fichier :file:`settings.py` créé par défaut par :djadmin:`django-admin.py startproject <startproject>` définit :setting:`USE_TZ = True <USE_TZ>` par commodité."

# 66c62e8d246d4d1c94558c2d7bce6d3e
#: ../../topics/i18n/timezones.txt:47
msgid ""
"There is also an independent but related :setting:`USE_L10N` setting that "
"controls whether Django should activate format localization. See "
":doc:`/topics/i18n/formatting` for more details."
msgstr "Il existe également un réglage différent mais lié nommé :setting:`USE_L10N` qui contrôle l'activation ou non des formats de régionalisation. Voir :doc:`/topics/i18n/formatting` pour plus de détails."

# 067dcc278fad479087c9d52abf4720be
#: ../../topics/i18n/timezones.txt:51
msgid ""
"If you're wrestling with a particular problem, start with the :ref:`time "
"zone FAQ <time-zones-faq>`."
msgstr "Si vous êtes empêtré dans un problème particulier, commencez par lire la :ref:`FAQ des fuseaux horaires <time-zones-faq>`."

# 9b7ca734bf9d490b92426107f5c6dc57
#: ../../topics/i18n/timezones.txt:55
msgid "Concepts"
msgstr "Concepts"

# 55cf18cbc96445f589b74416d6a5d289
#: ../../topics/i18n/timezones.txt:60
msgid "Naive and aware datetime objects"
msgstr "Objets ``datetime`` naïfs et conscients"

# 2e9c7620f84f44fcaf7b43d9fa26acfe
#: ../../topics/i18n/timezones.txt:62
msgid ""
"Python's :class:`datetime.datetime` objects have a ``tzinfo`` attribute that"
" can be used to store time zone information, represented as an instance of a"
" subclass of :class:`datetime.tzinfo`. When this attribute is set and "
"describes an offset, a datetime object is **aware**. Otherwise, it's "
"**naive**."
msgstr "Les objets :class:`datetime.datetime` de Python possèdent un attribut ``tzinfo`` pouvant être utilisé pour stocker le fuseau horaire, représenté par une instance d'une sous-classe de :class:`datetime.tzinfo`. Lorsque cet attribut est défini et qu'il décrit un décalage horaire, l'objet ``datetime`` est **conscient**. Dans le cas contraire, il est **naïf**."

# ce90f00ff5ba458faf4812a30ad435ad
#: ../../topics/i18n/timezones.txt:67
msgid ""
"You can use :func:`~django.utils.timezone.is_aware` and "
":func:`~django.utils.timezone.is_naive` to determine whether datetimes are "
"aware or naive."
msgstr "Vous pouvez utiliser  :func:`~django.utils.timezone.is_aware` et :func:`~django.utils.timezone.is_naive` pour déterminer si les objets ``datetime`` sont conscients (aware) ou naïfs."

# 7e6fb2c89aae4c01aaf0af266b1f4090
#: ../../topics/i18n/timezones.txt:71
msgid ""
"When time zone support is disabled, Django uses naive datetime objects in "
"local time. This is simple and sufficient for many use cases. In this mode, "
"to obtain the current time, you would write::"
msgstr "Lorsque la prise en charge des fuseaux horaires est désactivée, Django utilise des objets ``datetime`` naïfs en heure locale. C'est simple et suffisant dans de nombreux cas. Dans ce mode, pour obtenir le temps actuel, vous écririez ::"

# 9ceb3b4f5d5749ca873998dc221de271
#: ../../topics/i18n/timezones.txt:79
msgid ""
"When time zone support is enabled, Django uses time-zone-aware datetime "
"objects. If your code creates datetime objects, they should be aware too. In"
" this mode, the example above becomes::"
msgstr "Lorsque la prise en charge des fuseaux horaires est activée, Django utilise des objets ``datetime`` conscients de leur fuseau horaire. Si vote code crée des objets ``datetime``, ils devraient également être conscients. Dans ce mode, l'exemple ci-dessus devient ::"

# 01499e96224541fd96ade51804d510b3
#: ../../topics/i18n/timezones.txt:90
msgid ""
":mod:`django.utils.timezone` provides a :func:`~django.utils.timezone.now()`"
" function that returns a naive or aware datetime object according to the "
"value of :setting:`USE_TZ`."
msgstr ":mod:`django.utils.timezone` contient une fonction :func:`~django.utils.timezone.now()` qui renvoie un objet ``datetime`` conscient ou naïf en fonction de la valeur de :setting:`USE_TZ`."

# 80f13c98c915470288f92198dd4d911a
#: ../../topics/i18n/timezones.txt:96
msgid ""
"Dealing with aware datetime objects isn't always intuitive. For instance, "
"the ``tzinfo`` argument of the standard datetime constructor doesn't work "
"reliably for time zones with DST. Using UTC is generally safe; if you're "
"using other time zones, you should review the `pytz`_ documentation "
"carefully."
msgstr "La manipulation des objets ``datetime`` conscients n'est pas toujours intuitive. Par exemple, le paramètre ``tzinfo`` du constructeur standard de ``datetime`` ne fonctionne pas de manière fiable pour les fuseaux horaires avec heure d'été. L'utilisation de l'heure UTC est généralement sûre ; si vous utilisez d'autres fuseaux horaires, vous devriez lire attentivement la documentation de `pytz`_."

# 04a4930e35874814a7f25227be2e02d7
#: ../../topics/i18n/timezones.txt:104
msgid ""
"Python's :class:`datetime.time` objects also feature a ``tzinfo`` attribute,"
" and PostgreSQL has a matching ``time with time zone`` type. However, as "
"PostgreSQL's docs put it, this type \"exhibits properties which lead to "
"questionable usefulness\"."
msgstr "Les objets :class:`datetime.time` de Python comportent également un attribut ``tzinfo``, et PostgreSQL possède un type correspondant ``time with time zone`` (heure avec fuseau horaire). Cependant, comme l'explique la documentation de PostgreSQL, ce type « prête des propriétés qui font douter de son utilité »."

# 1e016aa062b541fbae22784a27d8b54b
#: ../../topics/i18n/timezones.txt:109
msgid ""
"Django only supports naive time objects and will raise an exception if you "
"attempt to save an aware time object."
msgstr "Django ne prend en charge que des objets ``time`` naïfs et génère une exception si vous essayez d'enregistrer un objet ``time`` conscient."

# 348519e9014e4303be7ecbc83ba14b7d
#: ../../topics/i18n/timezones.txt:115
msgid "Interpretation of naive datetime objects"
msgstr "Interprétation des objets ``datetime`` naïfs"

# d9f1226c215a4be29cd8bc861d860191
#: ../../topics/i18n/timezones.txt:117
msgid ""
"When :setting:`USE_TZ` is ``True``, Django still accepts naive datetime "
"objects, in order to preserve backwards-compatibility. When the database "
"layer receives one, it attempts to make it aware by interpreting it in the "
":ref:`default time zone <default-current-time-zone>` and raises a warning."
msgstr "Lorsque :setting:`USE_TZ` vaut ``True``, Django accepte encore les objets ``datetime`` naïfs, afin de préserver la rétrocompatibilité. Lorsque la couche base de données en reçoit un, elle essaie de le rendre conscient en l'interprétant dans le :ref:`fuseau horaire par défaut <default-current-time-zone>` et génère un avertissement."

# b1f3884578604198be3b824aab1d85e3
#: ../../topics/i18n/timezones.txt:122
msgid ""
"Unfortunately, during DST transitions, some datetimes don't exist or are "
"ambiguous. In such situations, pytz_ raises an exception. Other "
":class:`~datetime.tzinfo` implementations, such as the local time zone used "
"as a fallback when pytz_ isn't installed, may raise an exception or return "
"inaccurate results. That's why you should always create aware datetime "
"objects when time zone support is enabled."
msgstr "Malheureusement, durant les transitions d'heure d'été, certains objets ``datetime`` n'existent pas ou sont ambigus. Dans de telles situations, pytz_ génère une exception. D'autres implémentations de :class:`~datetime.tzinfo`, tel que le fuseau local utilisé comme valeur de repli quand pytz_ n'est pas installé, peuvent générer une exception ou renvoyer un résultat imprécis. C'est pourquoi vous devriez toujours créer des objets ``datetime`` conscients lorsque la prise en charge des fuseaux horaires est activée."

# 409c004ac25d4f09a17a73a9f4749c15
#: ../../topics/i18n/timezones.txt:129
msgid ""
"In practice, this is rarely an issue. Django gives you aware datetime "
"objects in the models and forms, and most often, new datetime objects are "
"created from existing ones through :class:`~datetime.timedelta` arithmetic. "
"The only datetime that's often created in application code is the current "
"time, and :func:`timezone.now() <django.utils.timezone.now>` automatically "
"does the right thing."
msgstr "En pratique, c'est rarement un problème. Django produit des objets ``datetime`` conscients dans les modèles et les formulaires, et la plupart du temps, les nouveaux objets ``datetime`` sont créés à partir d'objets existants par des opérations :class:`~datetime.timedelta`. Le seul objet ``datetime`` qui est souvent créé dans du code applicatif est l'heure actuelle et :func:`timezone.now() <django.utils.timezone.now>` fait automatiquement ce qu'il faut."

# d1aec388c8564bd0946526ffe2a75c93
#: ../../topics/i18n/timezones.txt:139
msgid "Default time zone and current time zone"
msgstr "Fuseau horaire par défaut et fuseau horaire actuel"

# 5a7b8109868e4554937fa8a9461bb7e1
#: ../../topics/i18n/timezones.txt:141
msgid ""
"The **default time zone** is the time zone defined by the "
":setting:`TIME_ZONE` setting."
msgstr "Le **fuseau horaire par défaut** est le fuseau horaire défini par le réglage :setting:`TIME_ZONE`."

# 2c5f8a7ce1c945a4ab4374369e17a837
#: ../../topics/i18n/timezones.txt:144
msgid "The **current time zone** is the time zone that's used for rendering."
msgstr "Le **fuseau horaire actuel** est le fuseau horaire utilisé pour l'affichage."

# 51f0f0f6dfea43709e1113910da4a401
#: ../../topics/i18n/timezones.txt:146
msgid ""
"You should set the current time zone to the end user's actual time zone with"
" :func:`~django.utils.timezone.activate`. Otherwise, the default time zone "
"is used."
msgstr "Vous devriez définir le fuseau horaire actuel au fuseau horaire réel de l'utilisateur avec :func:`~django.utils.timezone.activate`. Sinon, c'est le fuseau horaire par défaut qui est utilisé."

# a3faf7cc459b4805a45c95f5aad29670
#: ../../topics/i18n/timezones.txt:152
msgid ""
"As explained in the documentation of :setting:`TIME_ZONE`, Django sets "
"environment variables so that its process runs in the default time zone. "
"This happens regardless of the value of :setting:`USE_TZ` and of the current"
" time zone."
msgstr "Comme expliqué dans la documentation de :setting:`TIME_ZONE`, Django définit des variables d'environnement afin que son processus tourne dans le fuseau horaire par défaut. Ce comportement est indépendant de la valeur de :setting:`USE_TZ` et du fuseau horaire actuel."

# 1461762acbbe42cabfceb0ad6d10d24a
#: ../../topics/i18n/timezones.txt:157
msgid ""
"When :setting:`USE_TZ` is ``True``, this is useful to preserve backwards-"
"compatibility with applications that still rely on local time. However, "
":ref:`as explained above <naive-datetime-objects>`, this isn't entirely "
"reliable, and you should always work with aware datetimes in UTC in your own"
" code. For instance, use :meth:`~datetime.datetime.utcfromtimestamp` instead"
" of :meth:`~datetime.datetime.fromtimestamp` -- and don't forget to set "
"``tzinfo`` to :data:`~django.utils.timezone.utc`."
msgstr "Lorsque :setting:`USE_TZ` vaut ``True``, ceci est utile pour préserver la rétrocompatibilité avec les applications qui se basent encore sur le temps local. Cepedant, :ref:`comme expliqué ci-dessus <naive-datetime-objects>`, ce n'est pas totalement fiable et vous devriez toujours travailler avec des objets ``datetime`` conscients en UTC dans votre propre code. Par exemple, utilisez :meth:`~datetime.datetime.utcfromtimestamp` au lieu de :meth:`~datetime.datetime.fromtimestamp` et n'oubliez pas de définir ``tzinfo`` à :data:`~django.utils.timezone.utc`."

# 759d44db2fe04929bcc298c4824825ad
#: ../../topics/i18n/timezones.txt:167
msgid "Selecting the current time zone"
msgstr "Sélection du fuseau horaire actuel"

# b09b9b915357478cb231d192994d7730
#: ../../topics/i18n/timezones.txt:169
msgid ""
"The current time zone is the equivalent of the current :term:`locale <locale"
" name>` for translations. However, there's no equivalent of the ``Accept-"
"Language`` HTTP header that Django could use to determine the user's time "
"zone automatically. Instead, Django provides :ref:`time zone selection "
"functions <time-zone-selection-functions>`. Use them to build the time zone "
"selection logic that makes sense for you."
msgstr "Le fuseau horaire actuel est l'équivalent de la  :term:`langue <locale name>` actuelle pour les traductions. Cependant, il n'y a pas d'équivalent à l'en-tête HTTP ``Accept-Language`` que Django pourrait utiliser pour déterminer automatiquement le fuseau horaire de l'utilisateur. Au lieu de cela, Django fournit des :ref:`fonctions de sélection du fuseau horaire <time-zone-selection-functions>`. Utilisez-les pour bâtir une logique de sélection du fuseau horaire qui a du sens dans votre situation."

# b2ddeaaeee114f7da70633f63aa5a0fc
#: ../../topics/i18n/timezones.txt:176
msgid ""
"Most Web sites that care about time zones just ask users in which time zone "
"they live and store this information in the user's profile. For anonymous "
"users, they use the time zone of their primary audience or UTC. pytz_ "
"provides helpers_, like a list of time zones per country, that you can use "
"to pre-select the most likely choices."
msgstr "La plupart des sites Web se préoccupant des fuseaux horaires ne font que demander aux utilisateurs leur fuseau horaire de domicile et stockent cette information dans le profil des utilisateurs. Pour les utilisateurs anonymes, ils utilisent le fuseau horaire de la majorité de leur public ou l'heure UTC. pytz_ propose des utilitaires_, comme une liste de fuseaux horaires par pays, qu'il est possible d'exploiter pour faire une présélection des choix les plus probables."

# c7a506c292e8480d992634846af99c51
#: ../../topics/i18n/timezones.txt:182
msgid ""
"Here's an example that stores the current timezone in the session. (It skips"
" error handling entirely for the sake of simplicity.)"
msgstr "Voici un exemple qui stocke le fuseau horaire actuel dans la session (la gestion d'erreur est totalement absente par simplicité)."

# 8f5efa53cbeb48ef8cc995c54cda97b7
#: ../../topics/i18n/timezones.txt:185
msgid "Add the following middleware to :setting:`MIDDLEWARE_CLASSES`::"
msgstr "Ajoutez le middleware suivant à :setting:`MIDDLEWARE_CLASSES`::"

# 5011969dfba747f5b3c8624968b146eb
#: ../../topics/i18n/timezones.txt:197
msgid "Create a view that can set the current timezone::"
msgstr "Créez une vue capable de définir le fuseau horaire actuel ::"

# de9936a735084feab085552179f908d9
#: ../../topics/i18n/timezones.txt:209
msgid "Include a form in ``template.html`` that will ``POST`` to this view:"
msgstr "Ajoutez un formulaire dans ``template.html`` dont la cible ``POST`` est cette vue :"

# b447dc8941a644f697f12601f4e19625
#: ../../topics/i18n/timezones.txt:228
msgid "Time zone aware input in forms"
msgstr "Saisie de données avec fuseau horaire dans les formulaires"

# 832972d4e73f4839b4a23f3a229230f1
#: ../../topics/i18n/timezones.txt:230
msgid ""
"When you enable time zone support, Django interprets datetimes entered in "
"forms in the :ref:`current time zone <default-current-time-zone>` and "
"returns aware datetime objects in ``cleaned_data``."
msgstr "Lorsque vous activez la prise en charge des fuseaux horaires, Django interprète les dates/heures saisies dans les formulaires dans le :ref:`fuseau horaire actuel <default-current-time-zone>` et place des objets ``datetime`` conscients dans "

# 03e9db5d4f3b40ed9dae2cde8ec89153
#: ../../topics/i18n/timezones.txt:234
msgid ""
"If the current time zone raises an exception for datetimes that don't exist "
"or are ambiguous because they fall in a DST transition (the timezones "
"provided by pytz_ do this), such datetimes will be reported as invalid "
"values."
msgstr "Si le fuseau horaire actuel génère une exception pour les dates/heures qui n'existent pas ou qui sont ambiguës car elles se trouvent dans une transition d'heure d'été (les fuseaux horaires dans pytz_ le font), ces dates/heures seront signalées comme non valables."

# 7ef132b037e34636b4c5c52e92d74d0c
#: ../../topics/i18n/timezones.txt:241
msgid "Time zone aware output in templates"
msgstr "Affichage de fuseaux horaires conscients dans les gabarits"

# 7a74883719114600b3dbb1e4cd9982b6
#: ../../topics/i18n/timezones.txt:243
msgid ""
"When you enable time zone support, Django converts aware datetime objects to"
" the :ref:`current time zone <default-current-time-zone>` when they're "
"rendered in templates. This behaves very much like :doc:`format localization"
" </topics/i18n/formatting>`."
msgstr "Lorsque vous activez la prise en charge des fuseaux horaires, Django convertit les objets ``datetime`` dans le :ref:`fuseau horaire actuel <default-current-time-zone>` au moment où ils sont affichés dans un gabarit. Ce comportement est très semblable à la :doc:`régionalisation des formats </topics/i18n/formatting>`."

# 302ed33de406456c8bdfaa86c35beaf5
#: ../../topics/i18n/timezones.txt:250
msgid ""
"Django doesn't convert naive datetime objects, because they could be "
"ambiguous, and because your code should never produce naive datetimes when "
"time zone support is enabled. However, you can force conversion with the "
"template filters described below."
msgstr "Django ne convertit pas les objets ``datetime`` naïfs car ils peuvent être ambigus et parce que votre code ne doit jamais produire de tels objets naïfs lorsque la prise en charge des fuseaux horaires est activée. Cependant, vous pouvez forcer la conversion avec les filtres de gabarit décrits ci-dessous."

# 0c73248257b145678db12efd98dbbb46
#: ../../topics/i18n/timezones.txt:255
msgid ""
"Conversion to local time isn't always appropriate -- you may be generating "
"output for computers rather than for humans. The following filters and tags,"
" provided by the ``tz`` template tag library, allow you to control the time "
"zone conversions."
msgstr "La conversion en temps local n'est pas toujours adéquate, par exemple dans le cas où vous générez du contenu à destination d'autres ordinateurs. Les filtres et balises suivants, mis à disposition par la bibliothèque de balises de gabarit ``tz``, permettent de contrôler les conversions de fuseaux horaires."

# 8dc60c72979f4391836d8abe615bad12
# d62dfb71232f419ca80db2513edceaaa
#: ../../topics/i18n/timezones.txt:266 ../../topics/i18n/timezones.txt:337
msgid "localtime"
msgstr "localtime"

# 8b4ebd412f6441d4b872c92724d632b7
#: ../../topics/i18n/timezones.txt:268
msgid ""
"Enables or disables conversion of aware datetime objects to the current time"
" zone in the contained block."
msgstr "Active ou désactive la conversion d'objets ``datetime`` conscients dans le fuseau horaire actuel à l'intérieur du bloc contenu."

# f96342bfc0d5412cacf8d2e27c7b19f2
#: ../../topics/i18n/timezones.txt:271
msgid ""
"This tag has exactly the same effects as the :setting:`USE_TZ` setting as "
"far as the template engine is concerned. It allows a more fine grained "
"control of conversion."
msgstr "Cette balise a exactement le même effet que le réglage :setting:`USE_TZ` en ce qui concerne le moteur de gabarits. Elle permet un contrôle plus précis des endroits où la conversion se fait."

# 7b2d5f547fd044b88c915be0dda6a27f
#: ../../topics/i18n/timezones.txt:275
msgid "To activate or deactivate conversion for a template block, use::"
msgstr "Pour activer ou désactiver la conversion pour un bloc de gabarit, utilisez ::"

# 822bc827223c487a8da205223f2a9327
#: ../../topics/i18n/timezones.txt:289
msgid ""
"The value of :setting:`USE_TZ` isn't respected inside of a ``{% localtime "
"%}`` block."
msgstr "La valeur de :setting:`USE_TZ` n'est pas prise en compte à l'intérieur d'un bloc ``{% localtime %}``."

# d00f7aae4e99473b8229ac03e0ad833f
# 29dee7688ddb447ea446ee8a66b60a89
#: ../../topics/i18n/timezones.txt:295 ../../topics/i18n/timezones.txt:363
msgid "timezone"
msgstr "timezone"

# 0f1c5451d8e74f0a8e4f4e0e685236af
#: ../../topics/i18n/timezones.txt:297
msgid ""
"Sets or unsets the current time zone in the contained block. When the "
"current time zone is unset, the default time zone applies."
msgstr "Définit ou annule le fuseau horaire actuel dans le bloc contenu. Lorsque le fuseau horaire actuel est annulé, c'est le fuseau horaire par défaut qui s'applique."

# 5fc6c238266e4a71a8cb3cc01f23b4a4
#: ../../topics/i18n/timezones.txt:315
msgid "get_current_timezone"
msgstr "get_current_timezone"

# ec647b4e4f6148c4af40e1aea78cb889
#: ../../topics/i18n/timezones.txt:317
msgid ""
"When the ``django.core.context_processors.tz`` context processor is enabled "
"-- by default, it is -- each :class:`~django.template.RequestContext` "
"contains a ``TIME_ZONE`` variable that provides the name of the current time"
" zone."
msgstr "Lorsque le processeur de contexte ``django.core.context_processors.tz`` est actif (il l'est par défaut), chaque objet :class:`~django.template.RequestContext` contient une variable ``TIME_ZONE`` qui contient le nom du fuseau horaire actuel."

# add0be8226434562a7cc1bc9e2651e95
#: ../../topics/i18n/timezones.txt:322
msgid ""
"If you don't use a :class:`~django.template.RequestContext`, you can obtain "
"this value with the ``get_current_timezone`` tag::"
msgstr "Si vous n'utilisez pas de :class:`~django.template.RequestContext`, vous pouvez obtenir cette valeur avec la balise ``get_current_timezone``::"

# 4450f51f54e64a5aa31b7d13cc0fc341
#: ../../topics/i18n/timezones.txt:330
msgid ""
"These filters accept both aware and naive datetimes. For conversion "
"purposes, they assume that naive datetimes are in the default time zone. "
"They always return aware datetimes."
msgstr "Ces filtres acceptent aussi bien des objets ``datetime`` conscients que naïfs. À des fins de conversion, ils partent du principe que les objets naïfs sont dans le fuseau horaire par défaut. Ils renvoient toujours des objets ``datetime`` conscients."

# 5f7e17b462484d30ae4d8c1da39fb95c
#: ../../topics/i18n/timezones.txt:339
msgid "Forces conversion of a single value to the current time zone."
msgstr "Force la conversion d'une valeur unique dans le fuseau horaire actuel."

# e8ff521728dd4d7aac817f48ed9fdc59
#: ../../topics/i18n/timezones.txt:350
msgid "utc"
msgstr "utc"

# f1b076abfa994e139d065fa2c2e39fc3
#: ../../topics/i18n/timezones.txt:352
msgid "Forces conversion of a single value to UTC."
msgstr "Force la conversion d'une seule valeur en UTC."

# f1c655af2f9a4c8f9faec6e2c5324e71
#: ../../topics/i18n/timezones.txt:365
msgid "Forces conversion of a single value to an arbitrary timezone."
msgstr "Force la conversion d'une seule valeur dans un fuseau horaire arbitraire."

# 6f4caafd699c4ce2a0ee6fe5fbcad2a7
#: ../../topics/i18n/timezones.txt:367
msgid ""
"The argument must be an instance of a :class:`~datetime.tzinfo` subclass or "
"a time zone name. If it is a time zone name, pytz_ is required."
msgstr "Le paramètre doit être une instance d'une sous-classe de :class:`~datetime.tzinfo` ou un nom de fuseau horaire. S'il s'agit d'un nom de fuseau horaire, pytz_ est obligatoire."

# b31148e8d9c44fd8b64d32b2c665661e
#: ../../topics/i18n/timezones.txt:379
msgid "Migration guide"
msgstr "Guide de migration"

# 2e2fb53ad31d403aa88ac4ce2fa07e91
#: ../../topics/i18n/timezones.txt:381
msgid ""
"Here's how to migrate a project that was started before Django supported "
"time zones."
msgstr "Voici comment effectuer la migration d'un projet démarré avant que Django ne prenne en charge les fuseaux horaires."

# b21793b654c04cd1bc5108295f6d0858
#: ../../topics/i18n/timezones.txt:385
msgid "Database"
msgstr "Base de données"

# 248e768c86454ea887b5270f94ac1429
#: ../../topics/i18n/timezones.txt:388
msgid "PostgreSQL"
msgstr "PostgreSQL"

# 7e85ed0ee70c487ebc3fc0ccbc42cc91
#: ../../topics/i18n/timezones.txt:390
msgid ""
"The PostgreSQL backend stores datetimes as ``timestamp with time zone``. In "
"practice, this means it converts datetimes from the connection's time zone "
"to UTC on storage, and from UTC to the connection's time zone on retrieval."
msgstr "Le moteur PostgreSQL stocke les dates/heures comme ``timestamp with time zone``. En pratique, cela signifie qu'il convertit les objets ``datetime`` en UTC à partir du fuseau horaire de la connexion au moment du stockage, et à partir d'UTC vers le fuseau horaire de la connexion lors de la sélection."

# 1d5df5e80e2a4893965d85df96d14839
#: ../../topics/i18n/timezones.txt:394
msgid ""
"As a consequence, if you're using PostgreSQL, you can switch between "
"``USE_TZ = False`` and ``USE_TZ = True`` freely. The database connection's "
"time zone will be set to :setting:`TIME_ZONE` or ``UTC`` respectively, so "
"that Django obtains correct datetimes in all cases. You don't need to "
"perform any data conversions."
msgstr "En conséquence, si vous utilisez PostgreSQL, vous pouvez librement passer de ``USE_TZ = False`` à ``USE_TZ = True`` et inversement. Le fuseau horaire de la connexion de la base de données sera défini respectivement à :setting:`TIME_ZONE` et à ``UTC``, ce qui fait que Django reçoit des dates/heures correctes dans tous les cas. Vous n'avez pas à convertir les données."

# 26d0a4a8552a4bca8d5b937f8a1e6d75
#: ../../topics/i18n/timezones.txt:401
msgid "Other databases"
msgstr "Autres bases de données"

# fecc7357f7a04ae9a213115c9bf0a591
#: ../../topics/i18n/timezones.txt:403
msgid ""
"Other backends store datetimes without time zone information. If you switch "
"from ``USE_TZ = False`` to ``USE_TZ = True``, you must convert your data "
"from local time to UTC -- which isn't deterministic if your local time has "
"DST."
msgstr "Les autres moteurs stockent les dates/heures sans information de fuseau horaire. Si vous passez de ``USE_TZ = False`` à ``USE_TZ = True``, vous devez convertir vos données du temps local en UTC, ce qui n'est pas déterministe si votre temps local est sujet à l'heure d'été."

# 636282baf0c047bb889156a9b40e0575
#: ../../topics/i18n/timezones.txt:408
msgid "Code"
msgstr "Code"

# fdbdb325a03b4c16ac5d73bb37dfc9a1
#: ../../topics/i18n/timezones.txt:410
msgid ""
"The first step is to add :setting:`USE_TZ = True <USE_TZ>` to your settings "
"file and install pytz_ (if possible). At this point, things should mostly "
"work. If you create naive datetime objects in your code, Django makes them "
"aware when necessary."
msgstr "La première étape est d'ajouter :setting:`USE_TZ = True <USE_TZ>` à votre fichier de réglages et d'installer pytz_ (si possible). À ce stade, tout devrait fonctionner en principe. Si vous créez des objets ``datetime`` naïfs dans votre code, Django les rend conscients en cas de besoin."

# 5ecac4e7fd56413e8b8cb66a0417d333
#: ../../topics/i18n/timezones.txt:415
msgid ""
"However, these conversions may fail around DST transitions, which means you "
"aren't getting the full benefits of time zone support yet. Also, you're "
"likely to run into a few problems because it's impossible to compare a naive"
" datetime with an aware datetime. Since Django now gives you aware "
"datetimes, you'll get exceptions wherever you compare a datetime that comes "
"from a model or a form with a naive datetime that you've created in your "
"code."
msgstr "Cependant, ces conversions peuvent échouer aux alentours des transitions d'heure d'été, ce qui signifie que vous n'obtenez pas encore tous les bénéfices de la prise en charge des fuseaux horaires. Il est également probable que vous rencontriez quelques problèmes car il est impossible de comparer une date/heure naïve avec une date/heure consciente. Comme Django vous donne maintenant des dates/heures conscientes, vous obtiendrez des exceptions chaque fois que vous comparez une date/heure provenant d'un modèle ou d'un formulaire avec une date/heure naïve que vous avez créée dans votre code."

# c0cb8d437d6248a2801f62b6985b75cd
#: ../../topics/i18n/timezones.txt:422
msgid ""
"So the second step is to refactor your code wherever you instantiate "
"datetime objects to make them aware. This can be done incrementally. "
":mod:`django.utils.timezone` defines some handy helpers for compatibility "
"code: :func:`~django.utils.timezone.now`, "
":func:`~django.utils.timezone.is_aware`, "
":func:`~django.utils.timezone.is_naive`, "
":func:`~django.utils.timezone.make_aware`, and "
":func:`~django.utils.timezone.make_naive`."
msgstr "La seconde étape est donc de réviser votre code pour que chaque endroit où vous créer des objets ``datetime``, ceux-ci soient conscients. Cela peut se faire progressivement. :mod:`django.utils.timezone` définit quelques utilitaires bien pratiques pour du code compatible : :func:`~django.utils.timezone.now`, :func:`~django.utils.timezone.is_aware`, :func:`~django.utils.timezone.is_naive`, :func:`~django.utils.timezone.make_aware` et :func:`~django.utils.timezone.make_naive`."

# d9f8380249bb4d8299100d184d9252de
#: ../../topics/i18n/timezones.txt:431
msgid ""
"Finally, in order to help you locate code that needs upgrading, Django "
"raises a warning when you attempt to save a naive datetime to the database::"
msgstr "Finalement, pour vous aider à trouver le code qui a besoin d'être mis à jour, Django émet un avertissement lorsque vous essayez d'enregistrer une date/heure naïve dans la base de données ::"

# a592647608214e2a9a2ae880cabff9f1
#: ../../topics/i18n/timezones.txt:437
msgid ""
"During development, you can turn such warnings into exceptions and get a "
"traceback by adding the following to your settings file::"
msgstr "Durant le développement, vous pouvez transformer ces avertissements en exceptions et obtenir une trace d'appel en ajoutant ce qui suit dans votre fichier de réglages ::"

# 1de40cb160c04534ad6ca227510d2f0b
#: ../../topics/i18n/timezones.txt:446
msgid "Fixtures"
msgstr "Instantanés"

# 6f78b16fdf7e42a1b9171fbb6ed28856
#: ../../topics/i18n/timezones.txt:448
msgid ""
"When serializing an aware datetime, the UTC offset is included, like this::"
msgstr "Lors de la sérialisation d'une date/heure consciente, le décalage UTC est pris en compte, comme ceci ::"

# fc2621f65d0a444baec76c8abff078a7
#: ../../topics/i18n/timezones.txt:452
msgid "For a naive datetime, it obviously isn't::"
msgstr "Pour une date/heure naïve, ce n'est évidemment pas le cas ::"

# 8921a176405843598b40daa79a83787a
#: ../../topics/i18n/timezones.txt:456
msgid ""
"For models with :class:`~django.db.models.DateTimeField`\\ s, this "
"difference makes it impossible to write a fixture that works both with and "
"without time zone support."
msgstr "Pour les modèles comportant des champs :class:`~django.db.models.DateTimeField`, cette différence rend impossible l'écriture d'un instantané fonctionnant à la fois avec et sans prise en charge des fuseaux horaires."

# 0279a7e885f24577a7649ec847dc5c8f
#: ../../topics/i18n/timezones.txt:460
msgid ""
"Fixtures generated with ``USE_TZ = False``, or before Django 1.4, use the "
"\"naive\" format. If your project contains such fixtures, after you enable "
"time zone support, you'll see :exc:`~exceptions.RuntimeWarning`\\ s when you"
" load them. To get rid of the warnings, you must convert your fixtures to "
"the \"aware\" format."
msgstr "Les instantanés générés avec ``USE_TZ = False`` ou avant Django 1.4 utilisent le format « naïf ». Si votre projet contient de tels instantanés et que vous activez la prise en charge des fuseaux horaires, vous verrez des exceptions :exc:`~exceptions.RuntimeWarning` lorsque vous les chargez. Pour vous débarrasser des ces avertissements, vous devez convertir vos instantanés au format « conscient »."

# 70ce2281cea34a588457e8deb244ff5d
#: ../../topics/i18n/timezones.txt:466
msgid ""
"You can regenerate fixtures with :djadmin:`loaddata` then "
":djadmin:`dumpdata`. Or, if they're small enough, you can simply edit them "
"to add the UTC offset that matches your :setting:`TIME_ZONE` to each "
"serialized datetime."
msgstr "Vous pouvez régénérer les instantanés avec :djadmin:`loaddata`, puis :djadmin:`dumpdata`. Ou s'ils ne sont pas trop gros, vous pouvez simplement les modifier et ajouter le décalage UTC correspondant à votre  :setting:`TIME_ZONE` dans chaque objet ``datetime`` sérialisé."

# 51ad8546a91a48218a6a5e414aa27948
#: ../../topics/i18n/timezones.txt:473
msgid "FAQ"
msgstr "FAQ"

# dc85e694f4064c2ea67a1625481d1333
#: ../../topics/i18n/timezones.txt:476
msgid "Setup"
msgstr "Configuration"

# a09872202bb644ac967c46b457c1046b
#: ../../topics/i18n/timezones.txt:478
msgid ""
"**I don't need multiple time zones. Should I enable time zone support?**"
msgstr "**Je n'ai pas besoin de plusieurs fuseaux horaires. Dois-je activer la prise en charge des fuseaux horaires ?**"

# c11bbf0eb81648afa21f52c4167764e1
#: ../../topics/i18n/timezones.txt:480
msgid ""
"Yes. When time zone support is enabled, Django uses a more accurate model of"
" local time. This shields you from subtle and unreproducible bugs around "
"Daylight Saving Time (DST) transitions."
msgstr "Oui. Lorsque la prise en charge des fuseaux horaires est activée, Django utilise un modèle plus précis du temps local. Cela vous protège de bogues subtils et non reproductibles lors des transitions d'heure d'été (DST)."

# a4014d2c211542ffa3ef5ba48b4a5b0c
#: ../../topics/i18n/timezones.txt:484
msgid ""
"In this regard, time zones are comparable to ``unicode`` in Python. At first"
" it's hard. You get encoding and decoding errors. Then you learn the rules. "
"And some problems disappear -- you never get mangled output again when your "
"application receives non-ASCII input."
msgstr "À cet égard, les fuseaux horaires sont comparables à l'Unicode dans Python. Au début c'est difficile. Vous obtenez des erreurs de codage et de décodage. Puis vous apprenez comment ça marche. Et certains problèmes disparaissent, vous n'obtenez plus jamais d'affichage corrompu lorsque votre application reçoit du contenu non ASCII."

# b5125fcb980b49b5bc6f4bfda187ea70
#: ../../topics/i18n/timezones.txt:489
msgid ""
"When you enable time zone support, you'll encounter some errors because "
"you're using naive datetimes where Django expects aware datetimes. Such "
"errors show up when running tests and they're easy to fix. You'll quickly "
"learn how to avoid invalid operations."
msgstr "Lorsque vous activez la prise en charge des fuseaux horaires, vous allez rencontrer certaines erreurs parce que vous utilisez des dates/heures naïves là où Django s'attend à des dates/heures conscientes. De telles erreurs apparaissent lors de l'exécution des tests et elles sont simples à corriger. Vous apprendrez rapidement comment éviter les opérations non valides."

# b25e472b56444c7db31eec9d92571579
#: ../../topics/i18n/timezones.txt:494
msgid ""
"On the other hand, bugs caused by the lack of time zone support are much "
"harder to prevent, diagnose and fix. Anything that involves scheduled tasks "
"or datetime arithmetic is a candidate for subtle bugs that will bite you "
"only once or twice a year."
msgstr "D'un autre côté, les bogues qui proviennent d'une non prise en charge des fuseaux horaires sont beaucoup plus durs à prévenir, à diagnostiquer et à corriger. Tout ce qui touche aux tâches planifiées ou à l'arithmétique des dates/heures est sujet à de subtils bogues qui ne vous affecteront qu'une ou deux fois par année."

# 0fd89852f930449fbfce28c85ea2cfdf
#: ../../topics/i18n/timezones.txt:499
msgid ""
"For these reasons, time zone support is enabled by default in new projects, "
"and you should keep it unless you have a very good reason not to."
msgstr "C'est pour ces raisons que la prise en charge des fuseaux horaires est activée par défaut dans les nouveaux projets, et vous devriez garder ce réglage pour autant que vous n'ayez pas une bonne raison de ne pas le faire."

# cd873cf28b98499aab5d226cec66e670
#: ../../topics/i18n/timezones.txt:502
msgid "**I've enabled time zone support. Am I safe?**"
msgstr "**J'ai activé la prise en charge des fuseaux horaires. Suis-je tranquille ?**"

# 06394368912a4d0a98f6fed0f2a9014b
#: ../../topics/i18n/timezones.txt:504
msgid ""
"Maybe. You're better protected from DST-related bugs, but you can still "
"shoot yourself in the foot by carelessly turning naive datetimes into aware "
"datetimes, and vice-versa."
msgstr "Peut-être. Vous êtes mieux protégé des bogues liés à l'heure d'été, mais il est toujours possible que vous vous trompiez en convertissant sans précaution des objets ``datetime`` naïfs en objets ``datetime`` conscients et vice-versa."

# 515c15fc903f45b6802332ef699d83fe
#: ../../topics/i18n/timezones.txt:508
msgid ""
"If your application connects to other systems -- for instance, if it queries"
" a Web service -- make sure datetimes are properly specified. To transmit "
"datetimes safely, their representation should include the UTC offset, or "
"their values should be in UTC (or both!)."
msgstr "Si votre application se connecte à d'autres systèmes, par exemple si elle interroge un service Web, prenez soin de bien définir les dates/heures. Pour les transmettre de manière fiable, leur représentation doit inclure le décalage UTC ou leur valeur doit être en UTC (ou les deux !)."

# 139f29948ceb438c9700674873b952ca
#: ../../topics/i18n/timezones.txt:513
msgid ""
"Finally, our calendar system contains interesting traps for computers::"
msgstr "Finalement, notre système de calendrier contient des pièges intéressants pour les ordinateurs ::"

# 9687b1c8bd24465baca85d373e84e8f3
#: ../../topics/i18n/timezones.txt:525
msgid ""
"(To implement this function, you must decide whether 2012-02-29 minus one "
"year is 2011-02-28 or 2011-03-01, which depends on your business "
"requirements.)"
msgstr "(Pour implémenter cette fonction, vous devez décider si 2012-02-29 moins une année est 2011-02-28 ou 2011-03-01, ce qui dépend de vos exigences métier)"

# 01589c45df914d02ae7a01effc6d5b2c
#: ../../topics/i18n/timezones.txt:529
msgid "**Should I install pytz?**"
msgstr "**Dois-je installer pytz ?**"

# e616f1678f7b402ea5ce49dcad0acd92
#: ../../topics/i18n/timezones.txt:531
msgid ""
"Yes. Django has a policy of not requiring external dependencies, and for "
"this reason pytz_ is optional. However, it's much safer to install it."
msgstr "Oui. La politique de Django est de ne pas exiger de dépendances externes, c'est pour cela que pytz_ est facultatif. Cependant, il est beaucoup plus sûr de l'installer."

# 02ee2825664349e98d3348b3562a994b
#: ../../topics/i18n/timezones.txt:534
msgid ""
"As soon as you activate time zone support, Django needs a definition of the "
"default time zone. When pytz is available, Django loads this definition from"
" the `tz database`_. This is the most accurate solution. Otherwise, it "
"relies on the difference between local time and UTC, as reported by the "
"operating system, to compute conversions. This is less reliable, especially "
"around DST transitions."
msgstr "Dès que vous activez la prise en charge des fuseaux horaires, Django a besoin d'une définition du fuseau horaire par défaut. Lorsque pytz est disponible, Django charge cette définition à partir de la `base de données tz`_. C'est la solution la plus précise. Sinon, il calcule les conversions en se basant sur la différence entre le temps local et le temps UTC tel que rapporté par le système d'exploitation. C'est moins fiable, en particulier durant les périodes de transitions d'heure d'été."

# 7bdcf8efba9448e984b171dc8182e6ee
#: ../../topics/i18n/timezones.txt:541
msgid ""
"Furthermore, if you want to support users in more than one time zone, pytz "
"is the reference for time zone definitions."
msgstr "De plus, si vous souhaitez gérer des utilisateurs dans plusieurs fuseaux horaires, pytz est la référence en ce qui concerne les définitions de fuseaux horaires."

# e2c03252d234438ea5e9d3f8eb6387b2
#: ../../topics/i18n/timezones.txt:545
msgid "Troubleshooting"
msgstr "Dépannage"

# 43fe97aaa15c476f8c72f437f3ff15fd
#: ../../topics/i18n/timezones.txt:547
msgid ""
"**My application crashes with** ``TypeError: can't compare offset-naive`` "
"``and offset-aware datetimes`` **-- what's wrong?**"
msgstr "**Mon application plante avec** ``TypeError: can't compare offset-naive`` ``and offset-aware datetimes`` **, qu'est-ce que je fais faux ?**"

# 31a9299275054783827ad3511db25f54
#: ../../topics/i18n/timezones.txt:550
msgid ""
"Let's reproduce this error by comparing a naive and an aware datetime::"
msgstr "Reproduisons cette erreur en comparant des objets ``datetime`` naïf et conscient ::"

# 5faf3972acf947eb87a25c36e55641aa
#: ../../topics/i18n/timezones.txt:561
msgid ""
"If you encounter this error, most likely your code is comparing these two "
"things:"
msgstr "Si vous rencontrez cette erreur, il est très probable que votre code compare ces deux choses :"

# 7cffe6358965497b9943509780274c95
#: ../../topics/i18n/timezones.txt:564
msgid ""
"a datetime provided by Django -- for instance, a value read from a form or a"
" model field. Since you enabled time zone support, it's aware."
msgstr "un objet ``datetime`` fourni par Django, par exemple une valeur lue à partir d'un champ de formulaire ou d'un champ de modèle. Comme vous avez activé la prise en charge des fuseaux horaires, cet objet est conscient."

# 4f626259d1c34c3c9399b278c25c7c43
#: ../../topics/i18n/timezones.txt:566
msgid ""
"a datetime generated by your code, which is naive (or you wouldn't be "
"reading this)."
msgstr "un objet ``datetime`` généré dans votre code de manière naïve (sinon vous ne liriez pas ceci)."

# 9666533629634d9092f6457bea6868e5
#: ../../topics/i18n/timezones.txt:569
msgid ""
"Generally, the correct solution is to change your code to use an aware "
"datetime instead."
msgstr "Généralement, la solution correcte est de modifier votre code pour qu'il utilise plutôt un objet ``datetime`` conscient."

# cc26522f43634b3891949e971995f9e4
#: ../../topics/i18n/timezones.txt:572
msgid ""
"If you're writing a pluggable application that's expected to work "
"independently of the value of :setting:`USE_TZ`, you may find "
":func:`django.utils.timezone.now` useful. This function returns the current "
"date and time as a naive datetime when ``USE_TZ = False`` and as an aware "
"datetime when ``USE_TZ = True``. You can add or subtract "
":class:`datetime.timedelta` as needed."
msgstr "Si vous écrivez une application réutilisable qui doit fonctionner indépendamment de la valeur de :setting:`USE_TZ`, il peut être utile d'appeler :func:`django.utils.timezone.now`. Cette fonction renvoie la date et l'heure actuelle sous forme d'objet ``datetime`` naïf lorsque ``USE_TZ = False`` et sous forme d'objet ``datetime`` conscient lorsque ``USE_TZ = True``. Vous pouvez y ajouter ou soustraire une valeur :class:`datetime.timedelta` selon vos besoins."

# c19a0fcf57664f91aff0f903c8fccd23
#: ../../topics/i18n/timezones.txt:579
msgid ""
"**I see lots of** ``RuntimeWarning: DateTimeField received a naive "
"datetime`` ``(YYYY-MM-DD HH:MM:SS)`` ``while time zone support is active`` "
"**-- is that bad?**"
msgstr "**Je vois beaucoup de** ``RuntimeWarning: DateTimeField received a naive datetime`` ``(YYYY-MM-DD HH:MM:SS)`` ``while time zone support is active`` **, est-ce mauvais signe ?**"

# 51f78cacfc7e441fa3313306d310b4e2
#: ../../topics/i18n/timezones.txt:583
msgid ""
"When time zone support is enabled, the database layer expects to receive "
"only aware datetimes from your code. This warning occurs when it receives a "
"naive datetime. This indicates that you haven't finished porting your code "
"for time zone support. Please refer to the :ref:`migration guide <time-"
"zones-migration-guide>` for tips on this process."
msgstr "Lorsque la prise en charge des fuseaux horaires est activée, la couche de base de données s'attend à ne recevoir que des objets ``datetime`` conscients de votre code. Cet avertissement se produit lorsqu'elle reçoit un objet ``datetime`` naïf. Cela indique que vous n'avez pas terminé de transformer votre code pour la prise en charge des fuseaux horaires. Veuillez vous référer au :ref:`guide de migration <time-zones-migration-guide>` pour des indications supplémentaires sur ce processus."

# 03c4ac47f1534563b908e26274d0da04
#: ../../topics/i18n/timezones.txt:589
msgid ""
"In the meantime, for backwards compatibility, the datetime is considered to "
"be in the default time zone, which is generally what you expect."
msgstr "Dans l'intervalle et par rétrocompatibilité, Django considère l'objet ``datetime`` comme se trouvant dans le fuseau horaire par défaut, ce qui correspond généralement à la réalité."

# 2752c28ea0854715833b5f95b2e8118e
#: ../../topics/i18n/timezones.txt:592
msgid "``now.date()`` **is yesterday! (or tomorrow)**"
msgstr "``now.date()`` **est hier ! (ou demain)**"

# a7635c18f27243ad97fb1966001aa8ee
#: ../../topics/i18n/timezones.txt:594
msgid ""
"If you've always used naive datetimes, you probably believe that you can "
"convert a datetime to a date by calling its :meth:`~datetime.datetime.date` "
"method. You also consider that a :class:`~datetime.date` is a lot like a "
":class:`~datetime.datetime`, except that it's less accurate."
msgstr "Si vous avez toujours utilisé des objets ``datetime`` naïfs, vous pensez probablement pouvoir convertir un objet ``datetime`` en objet ``date`` en appelant sa méthode :meth:`~datetime.datetime.date`. Vous considérez également que :class:`~datetime.date` est très semblable à :class:`~datetime.datetime`, avec moins de précision."

# d01f81b77e894f34b0d6c1260d47eb41
#: ../../topics/i18n/timezones.txt:599
msgid "None of this is true in a time zone aware environment::"
msgstr "Rien de cela n'est vrai dans un environnement conscient des fuseaux horaires ::"

# cd3392e83cc14883bd8abea258d57f4b
#: ../../topics/i18n/timezones.txt:617
msgid ""
"As this example shows, the same datetime has a different date, depending on "
"the time zone in which it is represented. But the real problem is more "
"fundamental."
msgstr "Comme le montre cet exemple, le même objet ``datetime`` peut représenter une date différente selon le fuseau horaire dans lequel il est représenté. Mais le problème réel est plus fondamental."

# 7081ccc5f5c74435b5d42bfdd88b0894
#: ../../topics/i18n/timezones.txt:621
msgid ""
"A datetime represents a **point in time**. It's absolute: it doesn't depend "
"on anything. On the contrary, a date is a **calendaring concept**. It's a "
"period of time whose bounds depend on the time zone in which the date is "
"considered. As you can see, these two concepts are fundamentally different, "
"and converting a datetime to a date isn't a deterministic operation."
msgstr "Un objet ``datetime`` représente un **point dans le temps**. C'est absolu et cela ne dépend de rien d'autre. Au contraire, une date est un **concept calendaire**. Il s'agit d'une période de temps dont les limites dépendent du fuseau horaire dans lequel la date est considérée. Comme vous pouvez le voir, ces deux concepts sont fondamentalement différents et la conversion d'un objet ``datetime`` en un objet ``date`` n'est pas une opération déterministe."

# 75bdc3f3610b47578daa961c8a2848e6
#: ../../topics/i18n/timezones.txt:627
msgid "What does this mean in practice?"
msgstr "Qu'est-ce que cela signifie en pratique ?"

# 797a3fa640614b729c877124735ae4ce
#: ../../topics/i18n/timezones.txt:629
msgid ""
"Generally, you should avoid converting a :class:`~datetime.datetime` to "
":class:`~datetime.date`. For instance, you can use the :tfilter:`date` "
"template filter to only show the date part of a datetime. This filter will "
"convert the datetime into the current time zone before formatting it, "
"ensuring the results appear correctly."
msgstr "Généralement, vous devriez éviter de convertir un objet :class:`~datetime.datetime` en :class:`~datetime.date`. Par exemple, vous pouvez utiliser le filtre de gabarit :tfilter:`date` pour n'afficher que la partie date d'un objet ``datetime``. Ce filtre convertit l'objet ``datetime`` dans le fuseau horaire actuel avant de le mettre en forme, s'assurant ainsi que le résultat produit sera correct."

# 7250aa1337df4767959359d4ac953405
#: ../../topics/i18n/timezones.txt:635
msgid ""
"If you really need to do the conversion yourself, you must ensure the "
"datetime is converted to the appropriate time zone first. Usually, this will"
" be the current timezone::"
msgstr "Si vous avez réellement besoin d'effectuer vous-même la conversion, vous devez d'abord prendre soin de convertir l'objet ``datetime`` dans le fuseau horaire approprié. Il s'agit généralement du fuseau horaire actuel ::"

# db11fc1cd9f844fea3e3e4ffc17da1ae
#: ../../topics/i18n/timezones.txt:654
msgid ""
"**I have a string** ``\"2012-02-21 10:28:45\"`` **and I know it's in the** "
"``\"Europe/Helsinki\"`` **time zone. How do I turn that into an aware "
"datetime?**"
msgstr "**J'ai une chaîne** ``\"2012-02-21 10:28:45\"`` **et je sais qu'elle est dans le fuseau horaire ** ``\"Europe/Helsinki\"``. Comment puis-je la transformer en un objet ``datetime`` conscient ?**"

# d544a140d1994faf9012d04121e99ec7
#: ../../topics/i18n/timezones.txt:658
msgid "This is exactly what pytz_ is for."
msgstr "C'est exactement le rôle de pytz_."

# cd373ceb50bd4f0fabadace75d5e006c
#: ../../topics/i18n/timezones.txt:666
msgid ""
"Note that ``localize`` is a pytz extension to the :class:`~datetime.tzinfo` "
"API. Also, you may want to catch ``pytz.InvalidTimeError``. The "
"documentation of pytz contains `more examples`_. You should review it before"
" attempting to manipulate aware datetimes."
msgstr "Notez que ``localize`` est une extension de pytz à l'API :class:`~datetime.tzinfo`. Il peut être nécessaire d'intercepter les erreurs ``pytz.InvalidTimeError``. La documentation de pytz contient `davantage d'exemples`_. Il est recommandé de la consulter avant d'essayer de manipuler des objets ``datetime`` conscients."

# 8701739ddb6f495b8240074ec7a8d9d6
#: ../../topics/i18n/timezones.txt:671
msgid "**How can I obtain the local time in the current time zone?**"
msgstr "**Comment puis-je obtenir le temps local dans le fuseau horaire actuel ?**"

# 829135055ed7489ba204843a89777cc3
#: ../../topics/i18n/timezones.txt:673
msgid "Well, the first question is, do you really need to?"
msgstr "Et bien, la première question à se poser est : est-ce réellement nécessaire ?"

# 8eacf3da319c46c49f1317fe36eca3a7
#: ../../topics/i18n/timezones.txt:675
msgid ""
"You should only use local time when you're interacting with humans, and the "
"template layer provides :ref:`filters and tags <time-zones-in-templates>` to"
" convert datetimes to the time zone of your choice."
msgstr "Le temps local ne doit être utilisé que lorsque l'on interagit avec des humains, et la couche des gabarits fournit des :ref:`filtres et des balises <time-zones-in-templates>` pour convertir des objets ``datetime`` dans le fuseau horaire de votre choix."

# 103ef85632de4a6cbb958f733a749072
#: ../../topics/i18n/timezones.txt:679
msgid ""
"Furthermore, Python knows how to compare aware datetimes, taking into "
"account UTC offsets when necessary. It's much easier (and possibly faster) "
"to write all your model and view code in UTC. So, in most circumstances, the"
" datetime in UTC returned by :func:`django.utils.timezone.now` will be "
"sufficient."
msgstr "De plus, Python sait comparer des objets ``datetime`` conscients, en prenant en compte les décalages UTC si nécessaire. C'est beaucoup plus simple (et potentiellement plus rapide) d'écrire tout le code des modèles et des vues en UTC. Ainsi, dans la plupart des cas, l'objet ``datetime`` en UTC renvoyé par :func:`django.utils.timezone.now` sera suffisant."

# 2e2d8ecff2024da6b5132b4b75c63dfb
#: ../../topics/i18n/timezones.txt:685
msgid ""
"For the sake of completeness, though, if you really want the local time in "
"the current time zone, here's how you can obtain it::"
msgstr "Par souci d'exhaustivité, si vous devez vraiment obtenir le temps local dans le fuseau horaire actuel, voici comment vous pouvez l'obtenir ::"

# c9456b74f35f4973a0fb58641c735ac6
#: ../../topics/i18n/timezones.txt:692
msgid ""
"In this example, pytz_ is installed and the current time zone is "
"``\"Europe/Paris\"``."
msgstr "Dans cet exemple, pytz_ est installé et le fuseau horaire actuel est ``\"Europe/Paris\"``."

# 681e56f63fc04b80a8113fc5368fff1c
#: ../../topics/i18n/timezones.txt:695
msgid "**How can I see all available time zones?**"
msgstr "**Comment puis-je voir tous les fuseaux horaires disponibles ?**"

# f8b0c06d47da4f7cba05eade7c50046d
#: ../../topics/i18n/timezones.txt:697
msgid ""
"pytz_ provides helpers_, including a list of current time zones and a list "
"of all available time zones -- some of which are only of historical "
"interest."
msgstr "pytz_ fournit des utilitaires_, y compris une liste des fuseaux horaires actuels et une liste de tous les fuseaux horaires disponibles, parmi lesquels se trouvent aussi certains qui n'ont qu'un intérêt historique."

# 007412cdcf9d4b379f1a68c5ee2a35e0
#: ../../topics/i18n/translation.txt:3
msgid "Translation"
msgstr "Traduction"

# b58d8a9761934d23a9cd9ebd732a994c
#: ../../topics/i18n/translation.txt:10
msgid ""
"In order to make a Django project translatable, you have to add a minimal "
"amount of hooks to your Python code and templates. These hooks are called "
":term:`translation strings <translation string>`. They tell Django: \"This "
"text should be translated into the end user's language, if a translation for"
" this text is available in that language.\" It's your responsibility to mark"
" translatable strings; the system can only translate strings it knows about."
msgstr "Dans le but de rendre traduisible un projet Django, il est nécessaire d'ajouter un minimum de marqueurs dans le code Python et les gabarits. Ces marqueurs s'appellent des :term:`chaînes de traduction <translation string>`. Ils indiquent à Django que « ce texte doit être traduit dans la langue de l'utilisateur pour autant qu'il existe une traduction de ce texte dans cette langue ». Il est de votre responsabilité de marquer les chaînes de caractères traduisibles ; le système ne peut traduire que les éléments qu'on lui a indiqués."

# 1b154f66af8d4863955dfe39274725a8
#: ../../topics/i18n/translation.txt:17
msgid ""
"Django then provides utilities to extract the translation strings into a "
":term:`message file`. This file is a convenient way for translators to "
"provide the equivalent of the translation strings in the target language. "
"Once the translators have filled in the message file, it must be compiled. "
"This process relies on the GNU gettext toolset."
msgstr "Django fournit ensuite des utilitaires pour extraire les chaînes à traduire dans un :term:`fichier de messages`. Ce fichier sert ensuite aux traducteurs qui pourront faire leur travail en rédigeant les équivalences des chaînes à traduire dans leur langue. Lorsque que ce travail est terminé, le fichier doit être compilé. Ce processus se base sur les outils GNU gettext."

# 9e4eb6021b074d259408c84f25e387da
#: ../../topics/i18n/translation.txt:23
msgid ""
"Once this is done, Django takes care of translating Web apps on the fly in "
"each available language, according to users' language preferences."
msgstr "Quand tout cela est fait, Django s'occupe de traduire les applications Web à la volée dans chacune des langues disponibles, en accord avec les préférences linguistiques des utilisateurs."

# f65d7444d29d470d9c34a718fb28207f
#: ../../topics/i18n/translation.txt:26
msgid ""
"Django's internationalization hooks are on by default, and that means "
"there's a bit of i18n-related overhead in certain places of the framework. "
"If you don't use internationalization, you should take the two seconds to "
"set :setting:`USE_I18N = False <USE_I18N>` in your settings file. Then "
"Django will make some optimizations so as not to load the "
"internationalization machinery. You'll probably also want to remove "
"``'django.core.context_processors.i18n'`` from your "
":setting:`TEMPLATE_CONTEXT_PROCESSORS` setting."
msgstr "Le système d'internationalisation de Django est activé par défaut, ce qui peut générer un petit surplus de travail à certains endroits du système. Si vous n'utilisez pas l'internationalisation, prenez les deux secondes nécessaires à définir :setting:`USE_I18N = False <USE_I18N>` dans votre fichier de réglages. Django pourra alors effectuer certaines optimisations en ne chargeant pas tout le mécanisme d'internationalisation. Dans ce cas, il est aussi recommandé de supprimer ``'django.core.context_processors.i18n'`` de votre réglage  :setting:`TEMPLATE_CONTEXT_PROCESSORS`."

# 4358ea6384da43b6ae816ef385676870
#: ../../topics/i18n/translation.txt:36
msgid ""
"There is also an independent but related :setting:`USE_L10N` setting that "
"controls if Django should implement format localization. See "
":doc:`/topics/i18n/formatting` for more details."
msgstr "Il existe également un réglage différent mais lié nommé :setting:`USE_L10N` qui contrôle l'activation ou non des formats de régionalisation. Voir :doc:`/topics/i18n/formatting` pour plus de détails."

# 5de8a38341bf49649dec0bd567d25d83
#: ../../topics/i18n/translation.txt:42
msgid ""
"Make sure you've activated translation for your project (the fastest way is "
"to check if :setting:`MIDDLEWARE_CLASSES` includes "
":mod:`django.middleware.locale.LocaleMiddleware`). If you haven't yet, see "
":ref:`how-django-discovers-language-preference`."
msgstr "Vérifiez si la traduction est activée dans votre projet (la manière la plus rapide est de contrôler la présence de :mod:`django.middleware.locale.LocaleMiddleware` dans :setting:`MIDDLEWARE_CLASSES`). Si ce n'est pas encore fait, lisez :ref:`how-django-discovers-language-preference`."

# 532f258bb1494fbaae2ef3e7eb88b237
#: ../../topics/i18n/translation.txt:48
msgid "Internationalization: in Python code"
msgstr "Internationalisation : dans le code Python"

# b91c64472fa9407395bfe47d57a9973b
#: ../../topics/i18n/translation.txt:51
msgid "Standard translation"
msgstr "Traduction standard"

# 2bc587f0f0634562a64b10dc0d3b61a9
#: ../../topics/i18n/translation.txt:53
msgid ""
"Specify a translation string by using the function "
":func:`~django.utils.translation.ugettext`. It's convention to import this "
"as a shorter alias, ``_``, to save typing."
msgstr "Définissez une chaîne à traduire en utilisant la fonction :func:`~django.utils.translation.ugettext`. Par convention, il est fréquent de l'importer par un alias plus court, ``_``, pour s'économiser des frappes au clavier."

# b46894007f82478aaa7c8bd8db2460fd
#: ../../topics/i18n/translation.txt:58
msgid ""
"Python's standard library ``gettext`` module installs ``_()`` into the "
"global namespace, as an alias for ``gettext()``. In Django, we have chosen "
"not to follow this practice, for a couple of reasons:"
msgstr "Le module ``gettext`` de la bibliothèque Python standard installe ``_()`` dans l'espace de noms global comme alias de ``gettext()``. Dans Django, nous avons choisi de ne pas suivre cette pratique, pour plusieurs raisons :"

# 1c87735085334ddb94fbba7f223a848c
#: ../../topics/i18n/translation.txt:62
msgid ""
"For international character set (Unicode) support, "
":func:`~django.utils.translation.ugettext` is more useful than "
"``gettext()``. Sometimes, you should be using "
":func:`~django.utils.translation.ugettext_lazy` as the default translation "
"method for a particular file. Without ``_()`` in the global namespace, the "
"developer has to think about which is the most appropriate translation "
"function."
msgstr "Pour la prise en charge des jeux de caractères internationaux (Unicode), :func:`~django.utils.translation.ugettext` est plus utile que ``gettext()``. Parfois, il est préférable d'utiliser :func:`~django.utils.translation.ugettext_lazy` comme méthode de traduction par défaut dans un certain fichier. En l'absence de ``_()`` dans l'espace de noms global, le développeur doit réfléchir à ce qui est le plus approprié comme fonction de traduction."

# d615a0995f774c4cb6325aff33d8055b
#: ../../topics/i18n/translation.txt:70
msgid ""
"The underscore character (``_``) is used to represent \"the previous "
"result\" in Python's interactive shell and doctest tests. Installing a "
"global ``_()`` function causes interference. Explicitly importing "
"``ugettext()`` as ``_()`` avoids this problem."
msgstr "Le caractère soulignement (``_``) est utilisé pour représenter le « résultat précédent » dans le shell interactif de Python et les tests ``doctest``. L'installation globale de ``_()`` interfère avec le précédent. L'importation explicite de ``ugettext()`` comme ``_()`` évite ce problème."

# 164fdc1ac9ec44dc858556a38dc5ffc7
#: ../../topics/i18n/translation.txt:77
msgid ""
"In this example, the text ``\"Welcome to my site.\"`` is marked as a "
"translation string::"
msgstr "Dans cet exemple, le texte ``\"Welcome to my site.\"`` est marqué comme chaîne à traduire ::"

# 6ee1abfb0b094eba9542ea119f3a1066
#: ../../topics/i18n/translation.txt:87
msgid ""
"Obviously, you could code this without using the alias. This example is "
"identical to the previous one::"
msgstr "On aurait pu évidemment écrire cela sans employer l'alias. Cet exemple est identique au précédent ::"

# 3991345a92e746a485b7c568dab95dd1
#: ../../topics/i18n/translation.txt:97
msgid ""
"Translation works on computed values. This example is identical to the "
"previous two::"
msgstr "La traduction fonctionne sur des valeurs calculées. Cet exemple est identique aux deux précédents ::"

# 8797d654898b45cdaf3a6ef0bda39c42
#: ../../topics/i18n/translation.txt:105
msgid "Translation works on variables. Again, here's an identical example::"
msgstr "La traduction fonctionne avec des variables. Encore une fois, voici un exemple identique ::"

# ba95fe35152d4affa8f7a51a8ecc2c54
#: ../../topics/i18n/translation.txt:112
msgid ""
"(The caveat with using variables or computed values, as in the previous two "
"examples, is that Django's translation-string-detecting utility, :djadmin"
":`django-admin.py makemessages <makemessages>`, won't be able to find these "
"strings. More on :djadmin:`makemessages` later.)"
msgstr "(L'inconvénient avec l'utilisation de variables ou de valeurs calculées comme dans les deux exemples précédents, c'est que l'utilitaire de détection des chaînes à traduire de Django, :djadmin:`django-admin.py makemessages <makemessages>`, ne sera pas capable de trouver ces chaînes. Plus de détails sur :djadmin:`makemessages` un peu plus tard.)"

# ad2932e07b374d63a2be43aee67d7ef2
#: ../../topics/i18n/translation.txt:117
msgid ""
"The strings you pass to ``_()`` or ``ugettext()`` can take placeholders, "
"specified with Python's standard named-string interpolation syntax. "
"Example::"
msgstr "Les chaînes que vous placez dans ``_()`` ou ``ugettext()`` acceptent des substituants sous la forme de la syntaxe d'interpolation par paramètres nommés standard de Python. Exemple ::"

# e6f899c39d124f4395ffe6179a407104
#: ../../topics/i18n/translation.txt:124
msgid ""
"This technique lets language-specific translations reorder the placeholder "
"text. For example, an English translation may be ``\"Today is November "
"26.\"``, while a Spanish translation may be ``\"Hoy es 26 de Noviembre.\"`` "
"-- with the the month and the day placeholders swapped."
msgstr "Cette technique permet aux différentes traductions de modifier l'ordre des substituants. Par exemple, pour un texte anglais ``\"Today is November 26.\"``, la traduction espagnole pourrait être ``\"Hoy es 26 de Noviembre.\"``, avec les substituants mois et jour intervertis."

# 0d2d1f34fe334777a9b67238479341d9
#: ../../topics/i18n/translation.txt:129
msgid ""
"For this reason, you should use named-string interpolation (e.g., "
"``%(day)s``) instead of positional interpolation (e.g., ``%s`` or ``%d``) "
"whenever you have more than a single parameter. If you used positional "
"interpolation, translations wouldn't be able to reorder placeholder text."
msgstr "Pour cette raison, il est recommandé d'utiliser l'interpolation par paramètre nommé (ex : ``%(day)s``) au lieu de l'interpolation par position (ex : ``%s`` ou ``%d``) chaque fois qu'il y a plus d'un paramètre. Avec l'interpolation par position, les traductions ne peuvent pas changer l'ordre des substituants."

# aba1f4d9f00a4354b1b84759f42a2247
#: ../../topics/i18n/translation.txt:137
msgid "Comments for translators"
msgstr "Commentaires pour les traducteurs"

# 4c59c884557940f1ac545432998ab7d6
#: ../../topics/i18n/translation.txt:139
msgid ""
"If you would like to give translators hints about a translatable string, you"
" can add a comment prefixed with the ``Translators`` keyword on the line "
"preceding the string, e.g.::"
msgstr "Si vous souhaitez donner des indications aux traducteurs à propos d'une chaîne à traduire, vous pouvez ajouter un commentaire préfixé par le mot-clé ``Translators`` à la ligne précédant la chaîne ; par exemple ::"

# 14080356007f489aaefb81442f6aafac
#: ../../topics/i18n/translation.txt:147
msgid ""
"The comment will then appear in the resulting ``.po`` file associated with "
"the translatable contruct located below it and should also be displayed by "
"most translation tools."
msgstr "Le commentaire apparaîtra alors dans le fichier ``.po`` résultant de l'extraction des chaînes, juste avant le bloc de la chaîne à traduire, et la plupart des outils de traduction l'affichent également dans leur interface."

# 461663401b0a48839b404eb3abd1cd0a
#: ../../topics/i18n/translation.txt:151
msgid ""
"Just for completeness, this is the corresponding fragment of the resulting "
"``.po`` file:"
msgstr "Pour les curieux, voici le fragment correspondant dans le fichier ``.po`` résultant :"

# ab480f64042f4c3a86ffbb2416c0efb2
#: ../../topics/i18n/translation.txt:161
msgid ""
"This also works in templates. See :ref:`translator-comments-in-templates` "
"for more details."
msgstr "Cela fonctionne aussi dans les gabarits. Voir :ref:`translator-comments-in-templates` pour plus de détails."

# 9f67b9f05671498a80639bc67d9bfab5
#: ../../topics/i18n/translation.txt:165
msgid "Marking strings as no-op"
msgstr "Marquage des chaînes « en blanc »"

# b423df580ff248aebf11fd7d02fa23d4
#: ../../topics/i18n/translation.txt:167
msgid ""
"Use the function :func:`django.utils.translation.ugettext_noop()` to mark a "
"string as a translation string without translating it. The string is later "
"translated from a variable."
msgstr "La fonction :func:`django.utils.translation.ugettext_noop()` permet de marquer une chaîne comme chaîne à traduire, mais sans la traduire réellement. La traduction effective peut se faire plus tard à partir d'une variable."

# 1ad2995c13714e8ca26cbf11dfb79458
#: ../../topics/i18n/translation.txt:171
msgid ""
"Use this if you have constant strings that should be stored in the source "
"language because they are exchanged over systems or users -- such as strings"
" in a database -- but should be translated at the last possible point in "
"time, such as when the string is presented to the user."
msgstr "Cette technique est utile pour des chaînes constantes devant être stockées dans la langue source parce qu'elles sont échangées entre systèmes ou utilisateurs, comme des chaînes en base de données, mais qu'elles devraient être traduites le plus tard possible, juste avant d'être affichées pour un utilisateur."

# 1d261a00990444259c71aec3dcc99bf3
#: ../../topics/i18n/translation.txt:177
msgid "Pluralization"
msgstr "Pluriels"

# af6b821cbda8416a8c9bacc9a21ceb76
#: ../../topics/i18n/translation.txt:179
msgid ""
"Use the function :func:`django.utils.translation.ungettext()` to specify "
"pluralized messages."
msgstr "La fonction :func:`django.utils.translation.ungettext()` permet de marquer des messages contenant un pluriel."

# e146f9ad3100432c8342f791f4959421
#: ../../topics/i18n/translation.txt:182
msgid ""
"``ungettext`` takes three arguments: the singular translation string, the "
"plural translation string and the number of objects."
msgstr "``ungettext`` accepte trois paramètres : la chaîne à traduire au singulier, la chaîne à traduire au pluriel et le nombre d'objets."

# b3658abcd07741de927e2e93adcfcc44
#: ../../topics/i18n/translation.txt:185
msgid ""
"This function is useful when you need your Django application to be "
"localizable to languages where the number and complexity of `plural forms "
"<http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms>`_ is "
"greater than the two forms used in English ('object' for the singular and "
"'objects' for all the cases where ``count`` is different from one, "
"irrespective of its value.)"
msgstr "Cette fonction est utile lorsque vous voulez traduire votre application Django dans des langues où le nombre et la complexité des `formes plurielles <http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms>`_ sont plus grands que les deux formes utilisées en anglais (« object » pour le singulier et « objects » dans tous les cas où ``count`` est différent de un, quelle que soit sa valeur)."

# 2fc2776ca18646508f789d7d5ef4e6bc
#: ../../topics/i18n/translation.txt:206
msgid ""
"In this example the number of objects is passed to the translation languages"
" as the ``count`` variable."
msgstr "Dans cet exemple, le nombre d'objets est communiqué à la langue de traduction par la variable ``count``."

# 002c240f57cb463daef5a82247848515
#: ../../topics/i18n/translation.txt:209
msgid "Lets see a slightly more complex usage example::"
msgstr "Examinons un exemple un peu plus complexe ::"

# 017af3f00ed748958b555c5b0a1af5f1
#: ../../topics/i18n/translation.txt:229
msgid ""
"Here we reuse localizable, hopefully already translated literals (contained "
"in the ``verbose_name`` and ``verbose_name_plural`` model ``Meta`` options) "
"for other parts of the sentence so all of it is consistently based on the "
"cardinality of the elements at play."
msgstr "Ici, nous réutilisons des chaînes traduisibles, potentiellement déjà traduites (contenues dans les options de modèle ``Meta`` ``verbose_name`` et ``verbose_name_plural``) pour d'autres parties de la phrase afin que le tout soit conforme à la cardinalité des éléments en jeu."

# 85a73bf9972d42ab920fbd513b36b1b8
#: ../../topics/i18n/translation.txt:238
msgid ""
"When using this technique, make sure you use a single name for every "
"extrapolated variable included in the literal. In the example above note how"
" we used the ``name`` Python variable in both translation strings. This "
"example would fail::"
msgstr "En utilisant cette technique, prenez soin de toujours utiliser le même nom pour chaque variable extrapolée incluse dans la chaîne. Dans l'exemple ci-dessus, notez comment nous avons utilisé la variable Python ``name`` dans les deux chaînes à traduire. Cet exemple ne fonctionnera pas ::"

# f6c42b88baea4211a10aa946d136f08a
#: ../../topics/i18n/translation.txt:258
msgid ""
"You would get an error when running :djadmin:`django-admin.py "
"compilemessages <compilemessages>`::"
msgstr "Vous obtiendriez une erreur lors du lancement de :djadmin:`django-admin.py compilemessages <compilemessages>`::"

# 1b391c5887ee4a339d7950d3971a2359
#: ../../topics/i18n/translation.txt:266
msgid "Contextual markers"
msgstr "Marqueurs contextuels"

# b6db9956ba154ecba8d77d217803024e
#: ../../topics/i18n/translation.txt:268
msgid ""
"Sometimes words have several meanings, such as ``\"May\"`` in English, which"
" refers to a month name and to a verb. To enable translators to translate "
"these words correctly in different contexts, you can use the "
":func:`django.utils.translation.pgettext()` function, or the "
":func:`django.utils.translation.npgettext()` function if the string needs "
"pluralization. Both take a context string as the first variable."
msgstr "Il peut arriver que des mots ont plusieurs significations, comme ``\"May\"`` en anglais, qui peut se référer à un nom de mois ou à un verbe. Pour permettre aux traducteurs de traduire correctement ces mots dans des contextes différents, il est possible d'utiliser la fonction :func:`django.utils.translation.pgettext()`, ou :func:`django.utils.translation.npgettext()` si la chaîne contient des pluriels. Les deux acceptent une chaîne de contexte comme premier paramètre."

# babaaefa99ab4c9c8f3abf9693f4d3cd
#: ../../topics/i18n/translation.txt:275
msgid ""
"In the resulting ``.po`` file, the string will then appear as often as there"
" are different contextual markers for the same string (the context will "
"appear on the ``msgctxt`` line), allowing the translator to give a different"
" translation for each of them."
msgstr "Dans le fichier ``.po`` résultant, la même chaîne apparaîtra aussi souvent qu'il y a de marqueurs contextuels différents (le contexte apparaît à la ligne ``msgctxt``), permettant ainsi au traducteur d'attribuer des traductions différentes à chacune d'elles."

# 40d4310d3c504913953b52b2f64846d2
#: ../../topics/i18n/translation.txt:286
msgid "or::"
msgstr "ou ::"

# 5955113489b4484d97fef15bed5322f8
#: ../../topics/i18n/translation.txt:295
msgid "will appear in the ``.po`` file as:"
msgstr "apparaîtra dans le fichier ``.po`` comme :"

# 85b6847540c8448f931c53e2dddbfc19
#: ../../topics/i18n/translation.txt:303
msgid ""
"Contextual markers are also supported by the :ttag:`trans` and "
":ttag:`blocktrans` template tags."
msgstr "Les marqueurs contextuels sont également pris en charge par les balises de gabarit :ttag:`trans` et :ttag:`blocktrans`."

# 9f1dfad1bbfd4aec9a6817bca36a769e
#: ../../topics/i18n/translation.txt:309
msgid "Lazy translation"
msgstr "Traduction différée"

# 9a1ad4e77f4645da936704429e3c544f
#: ../../topics/i18n/translation.txt:311
msgid ""
"Use the lazy versions of translation functions in "
":mod:`django.utils.translation` (easily recognizable by the ``lazy`` suffix "
"in their names) to translate strings lazily -- when the value is accessed "
"rather than when they're called."
msgstr "Les versions différées des fonctions de traduction dans :mod:`django.utils.translation` (facilement reconnaissables par le suffixe ``lazy`` dans leur nom) permettent de traduire du texte en différé, au moment où la chaîne est réellement utilisée plutôt qu'au moment où la fonction est appelée."

# e639a05a79784fafbd36ec469f5db54a
#: ../../topics/i18n/translation.txt:316
msgid ""
"These functions store a lazy reference to the string -- not the actual "
"translation. The translation itself will be done when the string is used in "
"a string context, such as in template rendering."
msgstr "Ces fonctions stockent une référence différée à la chaîne originale, et non pas la traduction réelle. La traduction en tant que telle est effectuée lorsque le texte est utilisé dans un contexte textuel, par exemple dans le rendu d'un gabarit."

# 6df4cf8e6fbe406da531bbffaf47006c
#: ../../topics/i18n/translation.txt:320
msgid ""
"This is essential when calls to these functions are located in code paths "
"that are executed at module load time."
msgstr "Ce procédé est essentiel lorsque les appels à ces fonctions sont situés dans des endroits du code qui sont exécutés lors du chargement des modules."

# 01ec1a99227747b38d4f7e185f7117a8
#: ../../topics/i18n/translation.txt:323
msgid ""
"This is something that can easily happen when defining models, forms and "
"model forms, because Django implements these such that their fields are "
"actually class-level attributes. For that reason, make sure to use lazy "
"translations in the following cases:"
msgstr "Ceci peut facilement se produire lors de la définition des modèles, des formulaires et des formulaires de modèle, car la manière dont Django les implémente fait que leurs champs sont des attributs de classe. C'est pour cette raison qu'il faut utiliser des traductions différées dans les cas suivants :"

# 2f7b1509da9e44809563b3ea7435e741
#: ../../topics/i18n/translation.txt:329
msgid ""
"Model fields and relationships ``verbose_name`` and ``help_text`` option "
"values"
msgstr "Valeurs d'options ``verbose_name`` et ``help_text`` des champs et relations de modèle "

# e441aedc1bd94f2ca6d0c715fcc569e7
#: ../../topics/i18n/translation.txt:331
msgid ""
"For example, to translate the help text of the *name* field in the following"
" model, do the following::"
msgstr "Par exemple, pour traduire le texte d'aide du champ ``name`` dans le modèle suivant, faites comme ceci ::"

# 73ac573fad994450859ae16cd436c7f8
#: ../../topics/i18n/translation.txt:340
msgid ""
"You can mark names of ``ForeignKey``, ``ManyTomanyField`` or "
"``OneToOneField`` relationship as translatable by using their "
"``verbose_name`` options::"
msgstr "Vous pouvez marquer les noms des relations ``ForeignKey``, ``ManyTomanyField`` ou ``OneToOneField`` comme chaînes à traduire en utilisant leur option ``verbose_name``::"

# 1c1d619c7ad449bfb346b3e4babdc362
#: ../../topics/i18n/translation.txt:347
msgid ""
"Just like you would do in :attr:`~django.db.models.Options.verbose_name` you"
" should provide a lowercase verbose name text for the relation as Django "
"will automatically titlecase it when required."
msgstr "Comme vous le feriez pour :attr:`~django.db.models.Options.verbose_name`, le texte de nom verbeux de la relation devrait être en minuscules, car Django s'occupe de mettre les majuscules dans les situations appropriées."

# 14cb5e299fcb468c9f86fc4efe201b97
#: ../../topics/i18n/translation.txt:352
msgid "Model verbose names values"
msgstr "Valeurs de noms verbeux de modèle"

# b67e77cc40774eadbddc8fffe1fefa7b
#: ../../topics/i18n/translation.txt:354
msgid ""
"It is recommended to always provide explicit "
":attr:`~django.db.models.Options.verbose_name` and "
":attr:`~django.db.models.Options.verbose_name_plural` options rather than "
"relying on the fallback English-centric and somewhat naïve determination of "
"verbose names Django performs by looking at the model's class name::"
msgstr "Il est recommandé de toujours fournir les options explicites :attr:`~django.db.models.Options.verbose_name` et :attr:`~django.db.models.Options.verbose_name_plural` plutôt que de vous rabattre sur la version anglo-centrique et déterminée de manière quelque peu naïve du nom verbeux que Django crée en se basant sur le nom de classe du modèle ::"

# 57e1a8f1c45e4c6288499738f80c7592
#: ../../topics/i18n/translation.txt:371
msgid "Model methods ``short_description`` attribute values"
msgstr "Valeurs d'attribut ``short_description`` des méthodes de modèle"

# e22127ccca084d859478f64dd28428d7
#: ../../topics/i18n/translation.txt:373
msgid ""
"For model methods, you can provide translations to Django and the admin site"
" with the ``short_description`` attribute::"
msgstr "Pour les méthodes de modèle, vous pouvez indiquer à Django et au site d'administration des descriptions traduisibles dans l'attribut ``short_description``::"

# 94fe7c912e224b35b6b0f8fde33d065c
#: ../../topics/i18n/translation.txt:388
msgid "Working with lazy translation objects"
msgstr "Manipulation des objets de traduction différée"

# c9d83e77b92f4130b0b7633c4bb75dec
#: ../../topics/i18n/translation.txt:390
msgid ""
"The result of a ``ugettext_lazy()`` call can be used wherever you would use "
"a unicode string (an object with type ``unicode``) in Python. If you try to "
"use it where a bytestring (a ``str`` object) is expected, things will not "
"work as expected, since a ``ugettext_lazy()`` object doesn't know how to "
"convert itself to a bytestring. You can't use a unicode string inside a "
"bytestring, either, so this is consistent with normal Python behavior. For "
"example::"
msgstr "Le résultat d'un appel ``ugettext_lazy()`` peut être utilisé à tous les endroits où peut se trouver une chaîne unicode (objet de type ``unicode``) dans du code Python. Si vous essayez de l'utiliser là où une chaîne d'octets (objet de type ``str``) est attendue, les choses ne vont pas fonctionner comme prévu, car un objet ``ugettext_lazy()`` ne sait pas comment se convertir lui-même en chaîne d'octets (« bytestring »). Il n'est pas non plus possible de placer une chaîne unicode dans une chaîne d'octets, cela reste donc cohérent par rapport au comportement Python normal. Par exemple ::"

# 70a5960b0b6f43cb8c921ab2f5757b8d
#: ../../topics/i18n/translation.txt:404
msgid ""
"If you ever see output that looks like ``\"hello "
"<django.utils.functional...>\"``, you have tried to insert the result of "
"``ugettext_lazy()`` into a bytestring. That's a bug in your code."
msgstr "Dans le cas où vous voyez un contenu ressemblant à ``\"hello <django.utils.functional...>\"``, c'est que vous avez essayé d'insérer le résultat de ``ugettext_lazy()`` dans une chaîne d'octets. Il s'agit d'un bogue dans le code."

# 584e17bded6b42698492ff356fb6abb0
#: ../../topics/i18n/translation.txt:408
msgid ""
"If you don't like the long ``ugettext_lazy`` name, you can just alias it as "
"``_`` (underscore), like so::"
msgstr "Si vous n'aimez pas le long nom de ``ugettext_lazy``, vous pouvez simplement en faire un alias ``_`` (soulignement), comme ceci ::"

# 7211562117b747d58978a1a964fbb833
#: ../../topics/i18n/translation.txt:417
msgid ""
"Using ``ugettext_lazy()`` and ``ungettext_lazy()`` to mark strings in models"
" and utility functions is a common operation. When you're working with these"
" objects elsewhere in your code, you should ensure that you don't "
"accidentally convert them to strings, because they should be converted as "
"late as possible (so that the correct locale is in effect). This "
"necessitates the use of the helper function described next."
msgstr "L'utilisation de ``ugettext_lazy()`` et ``ungettext_lazy()`` pour marquer des chaînes dans des modèles et des fonctions utilitaires est une opération courante. Lorsque que vous manipulez ces objets ailleurs dans votre code, vous devriez prendre soin de ne jamais les convertir accidentellement en chaînes de caractères, car ils devraient être convertis le plus tard possible (afin que la langue correcte soit active). Ceci nécessite l'emploi de la fonction utilitaire décrite ci-après."

# dd034043b86a45fdadcc0e6305cea4c8
#: ../../topics/i18n/translation.txt:427
msgid "Lazy translations and plural"
msgstr "Traductions différées et pluriels"

# e39c128745b548f7a6301348b1c75129
#: ../../topics/i18n/translation.txt:431
msgid ""
"When using lazy translation for a plural string (``[u]n[p]gettext_lazy``), "
"you generally don't know the ``number`` argument at the time of the string "
"definition. Therefore, you are authorized to pass a key name instead of an "
"integer as the ``number`` argument. Then ``number`` will be looked up in the"
" dictionary under that key during string interpolation. Here's example::"
msgstr "Lors de l'utilisation de traductions différées avec une chaîne contenant des pluriels (``[u]n[p]gettext_lazy``), vous ne connaissez généralement pas le paramètre ``number`` au moment de la définition de la chaîne. C'est pourquoi vous êtes autorisé dans ce cas à passer un nom de clé au lieu d'un nombre comme paramètre ``number``. Ensuite, cette clé ``number`` sera cherchée dans le dictionnaire durant l'extrapolation de la chaîne. Voici un exemple ::"

# 10bc7b4d19f543a89d8cdd82e702df14
#: ../../topics/i18n/translation.txt:449
msgid ""
"If the string contains exactly one unnamed placeholder, you can interpolate "
"directly with the ``number`` argument::"
msgstr "Si la chaîne contient un seul substituant non nommé, vous pouvez directement interpoler avec le paramètre ``number``::"

# f6b619c6da834f01abada2338c8f6b86
#: ../../topics/i18n/translation.txt:463
msgid "Joining strings: string_concat()"
msgstr "Concaténation de chaînes : string_concat()"

# e007f44bc855485c82f43fbceec8424f
#: ../../topics/i18n/translation.txt:465
msgid ""
"Standard Python string joins (``''.join([...])``) will not work on lists "
"containing lazy translation objects. Instead, you can use "
":func:`django.utils.translation.string_concat()`, which creates a lazy "
"object that concatenates its contents *and* converts them to strings only "
"when the result is included in a string. For example::"
msgstr "Les concaténations de chaînes habituelles de Python (``''.join([...])``) ne fonctionnent pas avec des listes contenant des objets de traduction différée. Il faut utiliser :func:`django.utils.translation.string_concat()` à la place, ce qui va créer un objet différé qui se chargera de concaténer son contenu *et* de le convertir en chaîne au moment où ce contenu sera inclus dans une chaîne. Par exemple ::"

# c4bd0bb079fb41018cf2f5aeca6ac495
#: ../../topics/i18n/translation.txt:478
msgid ""
"In this case, the lazy translations in ``result`` will only be converted to "
"strings when ``result`` itself is used in a string (usually at template "
"rendering time)."
msgstr "Dans ce cas, les traductions différées dans ``result`` ne seront converties en chaînes qu'au moment où ``result`` sera elle-même utilisée dans une chaîne (habituellement au moment du rendu du gabarit)."

# 98bca19895804482a24273b934a1c88b
#: ../../topics/i18n/translation.txt:483
msgid "Other uses of lazy in delayed translations"
msgstr "Autres usages de traductions différées avec ``lazy``"

# 1ea51c29136e4e9788941ce9305a5f57
#: ../../topics/i18n/translation.txt:485
msgid ""
"For any other case where you would like to delay the translation, but have "
"to pass the translatable string as argument to another function, you can "
"wrap this function inside a lazy call yourself. For example::"
msgstr "Dans tout autre situation où il serait utile de différer la traduction mais qu'il est nécessaire de passer la chaîne à traduire comme paramètre d'une autre fonction, il est possible d'envelopper vous-même cette fonction à l'intérieur d'un appel à ``lazy``. Par exemple ::"

# 0ead325ee65d44acb71b554b079c1cf9
#: ../../topics/i18n/translation.txt:496
msgid "And then later::"
msgstr "Puis, plus tard ::"

# b831bd9bf4da42a38b586c7ab2c43d40
#: ../../topics/i18n/translation.txt:501
msgid "Localized names of languages"
msgstr "Noms de langues régionalisés"

# f01dfa88a8ba43ddbf7c07228c54a56c
#: ../../topics/i18n/translation.txt:505
msgid ""
"The ``get_language_info()`` function provides detailed information about "
"languages::"
msgstr "La fonction ``get_language_info()`` fournit des informations détaillées sur les langues ::"

# f151104f0bce4d11b66df8fad20e1815
#: ../../topics/i18n/translation.txt:513
msgid ""
"The ``name`` and ``name_local`` attributes of the dictionary contain the "
"name of the language in English and in the language itself, respectively.  "
"The ``bidi`` attribute is True only for bi-directional languages."
msgstr "Les attributs ``name`` et ``name_local`` du dictionnaire contiennent respectivement le nom de langue en anglais et dans la langue elle-même. L'attribut ``bidi`` vaut ``True`` seulement pour les langues s'écrivant de droite à gauche."

# 7608bfe5f2394105a7f25e3e950b663a
#: ../../topics/i18n/translation.txt:517
msgid ""
"The source of the language information is the ``django.conf.locale`` module."
" Similar access to this information is available for template code. See "
"below."
msgstr "La source des informations sur les langues se trouve dans le module ``django.conf.locale``. Ces informations sont également accessibles dans le code des gabarits. Voir ci-dessous."

# c2703d9bd4a6407794ce61a07d19da5e
#: ../../topics/i18n/translation.txt:523
msgid "Internationalization: in template code"
msgstr "Internationalisation : dans le code des gabarits"

# e650b56d09764e189aa931abde036213
#: ../../topics/i18n/translation.txt:527
msgid ""
"Translations in :doc:`Django templates </topics/templates>` uses two "
"template tags and a slightly different syntax than in Python code. To give "
"your template access to these tags, put ``{% load i18n %}`` toward the top "
"of your template. As with all template tags, this tag needs to be loaded in "
"all templates which use translations, even those templates that extend from "
"other templates which have already loaded the ``i18n`` tag."
msgstr "Les traductions dans les :doc:`gabarits Django </topics/templates>` utilisent deux balises de gabarit et une syntaxe légèrement différente que dans le code Python. Pour donner accès à ces balises dans vos gabarits, ajoutez ``{% load i18n %}`` au sommet de votre gabarit. Comme pour toutes les balises de gabarit, cette balise doit être chargée dans tous les gabarits qui utilisent les traductions, même pour les gabarits qui étendent d'autres gabarits ayant déjà chargé la bibliothèque ``i18n``."

# 3a8497de80a2423bba9b1e194037767e
#: ../../topics/i18n/translation.txt:537
msgid "``trans`` template tag"
msgstr "Balise de gabarit ``trans``"

# 1c4399db8ddd4b24953bdf8eafa14b8b
#: ../../topics/i18n/translation.txt:539
msgid ""
"The ``{% trans %}`` template tag translates either a constant string "
"(enclosed in single or double quotes) or variable content::"
msgstr "La balise de gabarit ``{% trans %}`` traduit soit une chaîne constante (entourée de guillemets simples ou doubles) ou un contenu de variable ::"

# 8542cf07693a4d0b866c684098dc919f
#: ../../topics/i18n/translation.txt:545
msgid ""
"If the ``noop`` option is present, variable lookup still takes place but the"
" translation is skipped. This is useful when \"stubbing out\" content that "
"will require translation in the future::"
msgstr "Si l'option ``noop`` est présente, l'accès à la variable se fait toujours mais la traduction est omise. C'est utile pour marquer du contenu qui devra être traduit à un moment ultérieur ::"

# f0551e6209744769baa10e7893f35bd9
#: ../../topics/i18n/translation.txt:551
msgid ""
"Internally, inline translations use an "
":func:`~django.utils.translation.ugettext` call."
msgstr "En interne, cette technique de traduction fait appel à :func:`~django.utils.translation.ugettext`."

# 155ae8aa85b846f5b6b90e7729fa100e
#: ../../topics/i18n/translation.txt:554
msgid ""
"In case a template var (``myvar`` above) is passed to the tag, the tag will "
"first resolve such variable to a string at run-time and then look up that "
"string in the message catalogs."
msgstr "Dans le cas où une variable de gabarit (``myvar`` ci-dessus) est passée à la balise, celle-ci résout en premier la variable en chaîne au moment de l'exécution puis consulte les catalogues de messages pour trouver une traduction."

# 7f11ccb1ba924406a2ccf2db2f45520c
#: ../../topics/i18n/translation.txt:558
msgid ""
"It's not possible to mix a template variable inside a string within ``{% "
"trans %}``. If your translations require strings with variables "
"(placeholders), use ``{% blocktrans %}`` instead."
msgstr "Il n'est pas possible de mélanger du texte littéral et des variables dans ``{% trans %}``. si vos traductions nécessitent des chaînes contenant des variables (substituants), utilisez plutôt ``{% blocktrans %}``."

# 6c47aa5446c94c34a611a1873d36aa2b
#: ../../topics/i18n/translation.txt:563
msgid ""
"If you'd like to retrieve a translated string without displaying it, you can"
" use the following syntax::"
msgstr "Si vous aimeriez récupérer une chaîne traduite sans l'afficher, vous pouvez utiliser la syntaxe suivante ::"

# 32f173dd5b99473a8bb5c020f4d41be2
#: ../../topics/i18n/translation.txt:571
msgid ""
"In practice you'll use this to get strings that are used in multiple places "
"or should be used as arguments for other template tags or filters::"
msgstr "En pratique, vous utiliserez cela pour obtenir des chaînes utilisées à plusieurs endroits ou qui doivent être passées comme paramètres à d'autres balises ou filtres de gabarit ::"

# 880d201afe2a4282904c02c48acb6096
#: ../../topics/i18n/translation.txt:587
msgid ""
"``{% trans %}`` also supports :ref:`contextual markers<contextual-markers>` "
"using the ``context`` keyword:"
msgstr "``{% trans %}`` prend aussi en charge les :ref:`marqueurs contextuels<contextual-markers>` à l'aide du mot-clé ``context``:"

# 2864237b9a144b51971b19c1a9652f21
#: ../../topics/i18n/translation.txt:597
msgid "``blocktrans`` template tag"
msgstr "Balise de gabarit "

# e59d853523e64f36803d2f34a165819a
#: ../../topics/i18n/translation.txt:599
msgid ""
"Contrarily to the :ttag:`trans` tag, the ``blocktrans`` tag allows you to "
"mark complex sentences consisting of literals and variable content for "
"translation by making use of placeholders::"
msgstr "Contrairement à la balise :ttag:`trans`, la balise ``blocktrans`` permet de marquer comme chaînes à traduire des phrases complexes contenant à la fois du texte littéral et des variables par le moyen des substituants ::"

# 99644f81085442c184c9a30c1b315d65
#: ../../topics/i18n/translation.txt:605
msgid ""
"To translate a template expression -- say, accessing object attributes or "
"using template filters -- you need to bind the expression to a local "
"variable for use within the translation block. Examples::"
msgstr "Pour traduire une expression de gabarit, par exemple un accès aux attributs d'un objet ou une utilisation de filtre de gabarit, il est nécessaire de lier l'expression à une variable locale pour l'utiliser ensuite dans le bloc à traduire. Exemple ::"

# 86561b6ed9e5456db40106d144d4dc01
#: ../../topics/i18n/translation.txt:617
msgid "You can use multiple expressions inside a single ``blocktrans`` tag::"
msgstr "Vous pouvez utiliser plusieurs expressions à l'intérieur d'une seule balise ``blocktrans``::"

# 7c23d5f470aa48d0b05f7b303ecc61ff
#: ../../topics/i18n/translation.txt:623
msgid ""
"The previous more verbose format is still supported: ``{% blocktrans with "
"book|title as book_t and author|title as author_t %}``"
msgstr "L'ancien format plus verbeux est toujours accepté : `{% blocktrans with book|title as book_t and author|title as author_t %}``"

# a16a37e797474cf5b4a760f5d605554f
#: ../../topics/i18n/translation.txt:626
msgid ""
"If resolving one of the block arguments fails, blocktrans will fall back to "
"the default language by deactivating the currently active language "
"temporarily with the :func:`~django.utils.translation.deactivate_all` "
"function."
msgstr "Si la résolution d'un des paramètres du bloc échoue, ``blocktrans`` se rabat sur la langue par défaut en désactivant temporairement la langue actuelle avec la fonction :func:`~django.utils.translation.deactivate_all`."

# 61a3caa6e20e43748c0a8a768d491478
#: ../../topics/i18n/translation.txt:631
msgid "This tag also provides for pluralization. To use it:"
msgstr "Cette balise permet également l'utilisation de pluriels. Pour l'utiliser :"

# d9184cbc2b8e453497a49390ce87f937
#: ../../topics/i18n/translation.txt:633
msgid ""
"Designate and bind a counter value with the name ``count``. This value will "
"be the one used to select the right plural form."
msgstr "Désignez et liez une valeur de compteur nommée ``count``. Cette valeur sera celle utilisée pour choisir la bonne forme de pluriel."

# 378c026accc14a7bb599f53183548bf7
#: ../../topics/i18n/translation.txt:636
msgid ""
"Specify both the singular and plural forms separating them with the ``{% "
"plural %}`` tag within the ``{% blocktrans %}`` and ``{% endblocktrans %}`` "
"tags."
msgstr "Indiquez à la fois les formes au singulier et au pluriel en les séparant par la balise ``{% plural %}`` à l'intérieur des balises ``{% blocktrans %}`` et ``{% endblocktrans %}``."

# 60f6a377bb7644f4b408a9b5e8e9883b
#: ../../topics/i18n/translation.txt:648
msgid "A more complex example::"
msgstr "Un exemple plus complexe ::"

# 7c2f14533f83409b95a67e7226ec4881
#: ../../topics/i18n/translation.txt:656
msgid ""
"When you use both the pluralization feature and bind values to local "
"variables in addition to the counter value, keep in mind that the "
"``blocktrans`` construct is internally converted to an ``ungettext`` call. "
"This means the same :ref:`notes regarding ungettext variables "
"<pluralization-var-notes>` apply."
msgstr "Lorsque vous utilisez à la fois la fonction de pluriel et l'attribution de valeurs à des variables locales en plus de la valeur de compteur, il faut savoir qu'en interne, ``blocktrans`` est converti en un appel ``ungettext``. Cela signifie que les :ref:`notes concernant les variables ungettext <pluralization-var-notes>` s'appliquent également."

# 2d6eb7c1bc634062bf8286ee4a20f20e
#: ../../topics/i18n/translation.txt:662
msgid ""
"Reverse URL lookups cannot be carried out within the ``blocktrans`` and "
"should be retrieved (and stored) beforehand::"
msgstr "La résolution inverse d'URL ne peut pas se faire à l'intérieur de ``blocktrans`` et doit donc être effectuée au préalable ::"

# 6d0b792fdfbc4aa1ab3c67ae1c176f0e
#: ../../topics/i18n/translation.txt:670
msgid ""
"``{% blocktrans %}`` also supports :ref:`contextual markers<contextual-"
"markers>` using the ``context`` keyword:"
msgstr "``{% blocktrans %}`` prend aussi en charge les :ref:`marqueurs contextuels<contextual-markers>` à l'aide du mot-clé ``context``:"

# d69b760dd85d4e32bc01da29ebce8a28
#: ../../topics/i18n/translation.txt:678
msgid "String literals passed to tags and filters"
msgstr "Texte littéral transmis aux balises et aux filtres"

# 910e7286ac0147d3917e636e51b33a94
#: ../../topics/i18n/translation.txt:680
msgid ""
"You can translate string literals passed as arguments to tags and filters by"
" using the familiar ``_()`` syntax::"
msgstr "Vous pouvez traduire le texte littéral transmis comme paramètre à des balises et des filtres en utilisant la syntaxe familière ``_()``::"

# b832c05ba3dd4c41a0e9fe1ed299ef35
#: ../../topics/i18n/translation.txt:685
msgid ""
"In this case, both the tag and the filter will see the translated string, so"
" they don't need to be aware of translations."
msgstr "Dans ce cas, aussi bien la balise que le filtre recevra la chaîne traduite, ils n'ont donc pas besoin de se préoccuper des traductions."

# d729a13b2f7e496484b9851b43ba1e65
#: ../../topics/i18n/translation.txt:689
msgid ""
"In this example, the translation infrastructure will be passed the string "
"``\"yes,no\"``, not the individual strings ``\"yes\"`` and ``\"no\"``. The "
"translated string will need to contain the comma so that the filter parsing "
"code knows how to split up the arguments. For example, a German translator "
"might translate the string ``\"yes,no\"`` as ``\"ja,nein\"`` (keeping the "
"comma intact)."
msgstr "Dans cet exemple, l'infrastructure de traduction recevra la chaîne ``\"yes,no\"``, et non pas les chaînes individuelles ``\"yes\"`` et ``\"no\"``. La chaîne à traduire devra contenir la virgule afin que le code d'analyse du filtre sache où séparer les paramètres. Par exemple, un traducteur allemand pourrait traduire la chaîne ``\"yes,no\"`` comme ``\"ja,nein\"`` (en préservant la virgule)."

# 9224b95866724688b6d20cd9349ab5e8
#: ../../topics/i18n/translation.txt:699
msgid "Comments for translators in templates"
msgstr "Commentaires pour les traducteurs dans les gabarits"

# ac6581a87b344450a94b3ca8463e951e
#: ../../topics/i18n/translation.txt:701
msgid ""
"Just like with :ref:`Python code <translator-comments>`, these notes for "
"translators can be specified using comments, either with the :ttag:`comment`"
" tag:"
msgstr "Tout comme avec le :ref:`code Python <translator-comments>`, ces notes à l'intention des traducteurs peuvent être indiquées en utilisant des commentaires, soit avec la balise :ttag:`comment`:"

# 8c57edbedcf6493a9afc915ac7a8a942
#: ../../topics/i18n/translation.txt:714
msgid ""
"or with the ``{#`` ... ``#}`` :ref:`one-line comment constructs <template-"
"comments>`:"
msgstr "ou avec la :ref:`syntaxe de commentaire sur une seule ligne <template-comments>` ``{#`` ... ``#}``:"

# 96249ec8de4c43c381b46a3b41368967
#: ../../topics/i18n/translation.txt:724
msgid ""
"Just for completeness, these are the corresponding fragments of the "
"resulting ``.po`` file:"
msgstr "Pour les curieux, voici les fragments correspondant dans le fichier ``.po`` résultant :"

# a8baf1480caf4345861a880956c6ac81
#: ../../topics/i18n/translation.txt:756
msgid "Switching language in templates"
msgstr "Changement de langue dans les gabarits"

# d030dec514ab480f9b669af7ec622ce4
#: ../../topics/i18n/translation.txt:758
msgid ""
"If you want to select a language within a template, you can use the "
"``language`` template tag:"
msgstr "Si vous avez besoin de changer de langue à l'intérieur d'un gabarit, vous pouvez utiliser la balise de gabarit ``language``:"

# 77678194852e46e48aa327be4a4310b0
#: ../../topics/i18n/translation.txt:775
msgid ""
"While the first occurrence of \"Welcome to our page\" uses the current "
"language, the second will always be in English."
msgstr "Alors que la première occurrence de \"Welcome to our page\" utilise la langue active, la seconde sera toujours en anglais."

# 271bb7cc4da249798eadc3f4b87f27f0
#: ../../topics/i18n/translation.txt:781
msgid "Other tags"
msgstr "Autres balises"

# c4a02e7d00004a62ae2c9e5c92b0ff4c
#: ../../topics/i18n/translation.txt:783
msgid ""
"Each ``RequestContext`` has access to three translation-specific variables:"
msgstr "Chaque objet ``RequestContext`` a accès à trois variables spécifiques à la traduction :"

# 77daa55b73a24f95b17e82f9f7be05ba
#: ../../topics/i18n/translation.txt:785
msgid ""
"``LANGUAGES`` is a list of tuples in which the first element is the "
":term:`language code` and the second is the language name (translated into "
"the currently active locale)."
msgstr "``LANGUAGES`` est une liste de tuples dont le premier élément est le :term:`code de langue` et le second est le nom de la langue (traduit dans la langue actuellement active)."

# 03fdde5a2e9a40be870e415e5d545f9b
#: ../../topics/i18n/translation.txt:789
msgid ""
"``LANGUAGE_CODE`` is the current user's preferred language, as a string. "
"Example: ``en-us``. (See :ref:`how-django-discovers-language-preference`.)"
msgstr "``LANGUAGE_CODE`` est la langue préférée de l'utilisateur actuel, sous forme textuelle. Exemple : ``en-us`` (voir :ref:`how-django-discovers-language-preference`)."

# 295df5f9c24f46e4bd178fa91d0f3a26
#: ../../topics/i18n/translation.txt:792
msgid ""
"``LANGUAGE_BIDI`` is the current locale's direction. If True, it's a right-"
"to-left language, e.g.: Hebrew, Arabic. If False it's a left-to-right "
"language, e.g.: English, French, German etc."
msgstr "``LANGUAGE_BIDI`` indique la direction du texte de la langue actuelle. Si ``True``, il s'agit d'une langue s'écrivant de droite à gauche, comme l'hébreu ou l'arabe. Si ``False``, il s'agit d'une langue s'écrivant de gauche à droite, comme l'anglais, le français, l'allemand, etc."

# bb198d42a4b14c2d821d69860be361ee
#: ../../topics/i18n/translation.txt:796
msgid ""
"If you don't use the ``RequestContext`` extension, you can get those values "
"with three tags::"
msgstr "Si vous n'utilisez pas l'extension ``RequestContext``, vous pouvez obtenir ces valeurs avec trois balises ::"

# 10dc86795c614489a59de4510ae5b514
#: ../../topics/i18n/translation.txt:803
msgid "These tags also require a ``{% load i18n %}``."
msgstr "Ces balises nécessitent aussi le chargement ``{% load i18n %}``."

# 7359d2d54a8244cda242e18b314903cb
#: ../../topics/i18n/translation.txt:805
msgid ""
"You can also retrieve information about any of the available languages using"
" provided template tags and filters. To get information about a single "
"language, use the ``{% get_language_info %}`` tag::"
msgstr "Vous pouvez aussi récupérer toute information à propos des langues disponibles en utilisant des balises et des filtres intégrés. Pour obtenir des informations sur une seule langue, utilisez la balise ``{% get_language_info %}``::"

# 28332b240e6b44e1928255cccbad88dc
#: ../../topics/i18n/translation.txt:812
msgid "You can then access the information::"
msgstr "Vous pouvez ensuite accéder à ces informations ::"

# 317cc29be2e74ba8b33d7ffd579a4ef2
#: ../../topics/i18n/translation.txt:819
msgid ""
"You can also use the ``{% get_language_info_list %}`` template tag to "
"retrieve information for a list of languages (e.g. active languages as "
"specified in :setting:`LANGUAGES`). See :ref:`the section about the "
"set_language redirect view <set_language-redirect-view>` for an example of "
"how to display a language selector using ``{% get_language_info_list %}``."
msgstr "Vous pouvez aussi utiliser la balise de gabarit ``{% get_language_info_list %}`` pour obtenir les informations d'une liste de langues (par ex. les langues actives figurant dans :setting:`LANGUAGES`). Consultez :ref:`la section sur la vue de redirection set_language <set_language-redirect-view>` pour trouver un exemple sur la manière d'afficher un sélecteur de langue avec ``{% get_language_info_list %}``."

# 9ac0dd1c56ff4268b408a3e83163b426
#: ../../topics/i18n/translation.txt:825
msgid ""
"In addition to :setting:`LANGUAGES` style nested tuples, ``{% "
"get_language_info_list %}`` supports simple lists of language codes. If you "
"do this in your view:"
msgstr "En plus des tuples imbriqués dans le style :setting:`LANGUAGES`, ``{% get_language_info_list %}`` accepte de simples listes de codes de langue. Si vous faites ceci dans votre vue :"

# 1b6e117e68c8471b8d0335a1dad71ce0
#: ../../topics/i18n/translation.txt:835
msgid "you can iterate over those languages in the template::"
msgstr "vous pouvez faire une boucle sur ces langues dans le gabarit ::"

# 3bbbfba6fd4c4bfbba47152119e86c0e
#: ../../topics/i18n/translation.txt:840
msgid "There are also simple filters available for convenience:"
msgstr "Il existe aussi des filtres simples pour votre confort :"

# 1ea003fb4a3541949ad09820819fa073
#: ../../topics/i18n/translation.txt:842
msgid "``{{ LANGUAGE_CODE|language_name }}`` (\"German\")"
msgstr "``{{ LANGUAGE_CODE|language_name }}`` (\"German\")"

# 2349e02d696040a696c890b5c8618898
#: ../../topics/i18n/translation.txt:843
msgid "``{{ LANGUAGE_CODE|language_name_local }}`` (\"Deutsch\")"
msgstr "``{{ LANGUAGE_CODE|language_name_local }}`` (\"Deutsch\")"

# fafbed2eac4747c9a351c01720a05006
#: ../../topics/i18n/translation.txt:844
msgid "``{{ LANGUAGE_CODE|bidi }}`` (False)"
msgstr "``{{ LANGUAGE_CODE|bidi }}`` (False)"

# 00b04c76935c48dfb8b7e43c3b5c6387
#: ../../topics/i18n/translation.txt:849
msgid "Internationalization: in JavaScript code"
msgstr "Internationalisation : dans le code JavaScript"

# 566d02d69f6345d9b831ebe3f99bc85e
#: ../../topics/i18n/translation.txt:853
msgid "Adding translations to JavaScript poses some problems:"
msgstr "L'ajout de traductions en Javascript pose quelques problèmes :"

# 9cc78b3925424bda87e94df2fd9f103b
#: ../../topics/i18n/translation.txt:855
msgid "JavaScript code doesn't have access to a ``gettext`` implementation."
msgstr "Le code JavaScript n'a pas d'accès à une implémentation de ``gettext``."

# c07e8e9fbe4d4304a74dd3c693d645da
#: ../../topics/i18n/translation.txt:857
msgid ""
"JavaScript code doesn't have access to ``.po`` or ``.mo`` files; they need "
"to be delivered by the server."
msgstr "Le code JavaScript n'a pas accès à des fichiers ``.po`` ou ``.mo``; ils doivent être fournis par le serveur."

# 1fd191dfb0204bd49f7ad017138814d5
#: ../../topics/i18n/translation.txt:860
msgid ""
"The translation catalogs for JavaScript should be kept as small as possible."
msgstr "Les catalogues de traduction pour JavaScript doivent être aussi compacts que possible."

# 759b1fddc6df4eedbea9eead183dda04
#: ../../topics/i18n/translation.txt:863
msgid ""
"Django provides an integrated solution for these problems: It passes the "
"translations into JavaScript, so you can call ``gettext``, etc., from within"
" JavaScript."
msgstr "Django fournit une solution intégrée pour ces problèmes : il transpose les traductions dans JavaScript afin que vous puissiez appeler les fonctions de type ``gettext`` dans votre code JavaScript."

# eb2d3a64af8645fca8a7e54aa6a16b7b
#: ../../topics/i18n/translation.txt:870
msgid "The ``javascript_catalog`` view"
msgstr "La vue ``javascript_catalog``"

# accfb33fb32b45f3a6a5b12bfdbe8c59
#: ../../topics/i18n/translation.txt:876
msgid ""
"The main solution to these problems is the "
":meth:`django.views.i18n.javascript_catalog` view, which sends out a "
"JavaScript code library with functions that mimic the ``gettext`` interface,"
" plus an array of translation strings. Those translation strings are taken "
"from applications or Django core, according to what you specify in either "
"the ``info_dict`` or the URL. Paths listed in :setting:`LOCALE_PATHS` are "
"also included."
msgstr "La solution principale à ces problèmes est la vue :meth:`django.views.i18n.javascript_catalog` qui renvoie une bibliothèque de code JavaScript avec des fonctions qui simulent l'interface ``gettext``, ainsi qu'un tableau de chaînes de traduction. Celles-ci proviennent des applications ou du cœur Django, en fonction de ce que vous indiquez dans la structure ``info_dict`` ou dans l'URL. Les chemins énumérés dans :setting:`LOCALE_PATHS` sont aussi inclus."

# 0e317d74623c489a9a8095c013f85cce
#: ../../topics/i18n/translation.txt:883
msgid "You hook it up like this::"
msgstr "Voici comment l'intégrer ::"

# 25580ba1dbb644c99cf9449c1cedccbb
#: ../../topics/i18n/translation.txt:893
msgid ""
"Each string in ``packages`` should be in Python dotted-package syntax (the "
"same format as the strings in :setting:`INSTALLED_APPS`) and should refer to"
" a package that contains a ``locale`` directory. If you specify multiple "
"packages, all those catalogs are merged into one catalog. This is useful if "
"you have JavaScript that uses strings from different applications."
msgstr "Chaque chaîne dans ``packages`` doit respecter la syntaxe pointée des paquets Python (même format que les chaînes dans :setting:`INSTALLED_APPS`) et doit faire référence à un module contenant un répertoire ``locale``. Si vous indiquez plusieurs modules, tous les catalogues sont fusionnés en un seul. C'est utile si vous avez du code JavaScript qui utilise des chaînes provenant de plusieurs applications."

# 712b937fe2e34c57981ea109c1bfc826
#: ../../topics/i18n/translation.txt:899
msgid ""
"The precedence of translations is such that the packages appearing later in "
"the ``packages`` argument have higher precedence than the ones appearing at "
"the beginning, this is important in the case of clashing translations for "
"the same literal."
msgstr "La priorité des traductions se fait par ordre d'apparition des modules dans le paramètre ``packages``; ceux qui apparaissent en dernier ont la priorité sur les premiers, ce qui est important dans le cas où une même chaîne est traduite différemment dans plusieurs catalogues."

# 07413ef99c5f466b838d35955078eed1
#: ../../topics/i18n/translation.txt:904
msgid ""
"By default, the view uses the ``djangojs`` gettext domain. This can be "
"changed by altering the ``domain`` argument."
msgstr "Par défaut, la vue utilise le domaine gettext ``djangojs``. Cela peut être changé en modifiant le paramètre ``domain``."

# dfa7f4d7e78e4734b2f650865e8ae502
#: ../../topics/i18n/translation.txt:907
msgid ""
"You can make the view dynamic by putting the packages into the URL pattern::"
msgstr "Vous pouvez rendre la vue dynamique en fournissant le paramètre ``packages`` dans le motif d'URL ::"

# 9409fe8975804f4ba44e77952d3d21f9
#: ../../topics/i18n/translation.txt:913
msgid ""
"With this, you specify the packages as a list of package names delimited by "
"'+' signs in the URL. This is especially useful if your pages use code from "
"different apps and this changes often and you don't want to pull in one big "
"catalog file. As a security measure, these values can only be either "
"``django.conf`` or any package from the :setting:`INSTALLED_APPS` setting."
msgstr "Avec ceci, vous indiquez les paquets sous forme d'une liste de noms de paquets délimités par le caractère « + » dans l'URL. C'est particulièrement utile quand vos pages utilisent du code de différentes applications, qu'elles changent souvent et que vous ne voulez pas simplement produire un gros fichier de traductions. Par mesure de sécurité, ces valeurs sont limitées à ``django.conf`` ou tout autre paquet figurant dans le réglage :setting:`INSTALLED_APPS`."

# 64b33006420041b6b86996b3bff8d8df
#: ../../topics/i18n/translation.txt:919
msgid ""
"The JavaScript translations found in the paths listed in the "
":setting:`LOCALE_PATHS` setting are also always included. To keep "
"consistency with the translations lookup order algorithm used for Python and"
" templates, the directories listed in :setting:`LOCALE_PATHS` have the "
"highest precedence with the ones appearing first having higher precedence "
"than the ones appearing later."
msgstr "Les traductions JavaScript extraites des chemins figurant dans le réglage :setting:`LOCALE_PATHS` sont aussi toujours incluses. Pour rester cohérent avec l'algorithme d'ordre de recherche des traductions dans le code Python et les gabarits, les répertoires mentionnés dans :setting:`LOCALE_PATHS` ont la priorité, les premiers dans la liste ayant priorité sur les suivants."

# 4801bbb5f7174f919122c11272ea1025
#: ../../topics/i18n/translation.txt:927
msgid "Using the JavaScript translation catalog"
msgstr "Emploi du catalogue des traductions JavaScript"

# 2e807feca2fc4adc9b9c07622b0b3733
#: ../../topics/i18n/translation.txt:931
msgid ""
"To use the catalog, just pull in the dynamically generated script like this:"
msgstr "Pour utiliser le catalogue, insérez le script généré dynamiquement comme ceci :"

# 48a3667b80a54789af0c92e7dfc6d8bb
#: ../../topics/i18n/translation.txt:937
msgid ""
"This uses reverse URL lookup to find the URL of the JavaScript catalog view."
" When the catalog is loaded, your JavaScript code can use the standard "
"``gettext`` interface to access it::"
msgstr "Nous utilisons la résolution inverse d'URL pour trouver l'URL de la vue du catalogue JavaScript. Lorsque le catalogue est chargé, votre code JavaScript peut utiliser l'interface ``gettext`` standard pour y avoir accès ::"

# 9ca67eb8e84f40719cce4b2238b456ad
#: ../../topics/i18n/translation.txt:943
msgid "There is also an ``ngettext`` interface::"
msgstr "L'interface ``ngettext`` est aussi disponible ::"

# 017b6df021364dad99755a71bccedac8
#: ../../topics/i18n/translation.txt:949
msgid "and even a string interpolation function::"
msgstr "ainsi qu'une fonction d'interpolation de chaîne ::"

# 2c14b256fd1842d58700a131d37c1f24
#: ../../topics/i18n/translation.txt:953
msgid ""
"The interpolation syntax is borrowed from Python, so the ``interpolate`` "
"function supports both positional and named interpolation:"
msgstr "La syntaxe d'interpolation est empruntée à Python ; ainsi, la fonction ``interpolate`` prend en charge à la fois les paramètres nommées et les paramètres positionnels :"

# 7d48fb44d3594500b56f286864f561f9
#: ../../topics/i18n/translation.txt:956
msgid ""
"Positional interpolation: ``obj`` contains a JavaScript Array object whose "
"elements values are then sequentially interpolated in their corresponding "
"``fmt`` placeholders in the same order they appear. For example::"
msgstr "Interpolation positionnelle : ``obj`` contient un objet Array JavaScript dont les valeurs d'éléments sont interpolées dans l'ordre d'apparition de leur substituant ``fmt`` correspondant. Par exemple ::"

# 698b7f3ffbca47ebbb833e7cd446e272
#: ../../topics/i18n/translation.txt:966
msgid ""
"Named interpolation: This mode is selected by passing the optional boolean "
"``named`` parameter as true. ``obj`` contains a JavaScript object or "
"associative array. For example::"
msgstr "Interpolation nommée : ce mode est sélectionné en passant ``true`` dans le paramètre booléen facultatif ``named``. ``obj`` contient un objet JavaScript ou un tableau associatif. Par exemple ::"

# 7607e6cc458e432b95191a8b9178cc04
#: ../../topics/i18n/translation.txt:979
msgid ""
"You shouldn't go over the top with string interpolation, though: this is "
"still JavaScript, so the code has to make repeated regular-expression "
"substitutions. This isn't as fast as string interpolation in Python, so keep"
" it to those cases where you really need it (for example, in conjunction "
"with ``ngettext`` to produce proper pluralizations)."
msgstr "Il ne faut cependant pas abuser de l'interpolation de chaînes : c'est toujours du JavaScript, le code effectue donc des substitutions répétées par expression régulière. Ce n'est pas aussi rapide que l'interpolation de chaînes en Python, il s'agit donc de réserver cet usage pour les cas où c'est vraiment nécessaire (par exemple conjointement avec``ngettext`` pour générer des pluriels corrects)."

# 1db5341075c743a490b843da1ecdef35
#: ../../topics/i18n/translation.txt:986
msgid "Note on performance"
msgstr "Note sur les performances"

# 48280f93b7b947c5b43a16fa542ef417
#: ../../topics/i18n/translation.txt:988
msgid ""
"The :func:`~django.views.i18n.javascript_catalog` view generates the catalog"
" from ``.mo`` files on every request. Since its output is constant — at "
"least for a given version of a site — it's a good candidate for caching."
msgstr "La vue :func:`~django.views.i18n.javascript_catalog` génère le catalogue depuis les fichiers ``.mo`` à chaque requête. Comme le résultat est constant, au moins pour une version donnée du site, c'est une bonne occasion d'utiliser le cache."

# c7ca22775696442d8016fa236cdbad27
#: ../../topics/i18n/translation.txt:992
msgid ""
"Server-side caching will reduce CPU load. It's easily implemented with the "
":func:`~django.views.decorators.cache.cache_page` decorator. To trigger "
"cache invalidation when your translations change, provide a version-"
"dependent key prefix, as shown in the example below, or map the view at a "
"version-dependent URL."
msgstr "Le cache côté serveur réduit la charge sur le processeur. Le décorateur :func:`~django.views.decorators.cache.cache_page` permet de le faire facilement. Pour provoquer l'invalidation du cache lorsque les traductions ont changé, ajoutez un préfixe de clé dépendant de la version, comme le montre l'exemple ci-dessous, ou faites correspondre la vue à une URL dépendant de la version."

# f19da9a8cd7b460eaeab65ac112338fd
#: ../../topics/i18n/translation.txt:1008
msgid ""
"Client-side caching will save bandwidth and make your site load faster. If "
"you're using ETags (:setting:`USE_ETAGS = True <USE_ETAGS>`), you're already"
" covered. Otherwise, you can apply :ref:`conditional decorators "
"<conditional-decorators>`. In the following example, the cache is "
"invalidated whenever your restart your application server."
msgstr "Le cache côté client économise de la bande passante et accélère le chargement de votre site. Si vous utilisez les ``ETags`` (:setting:`USE_ETAGS = True <USE_ETAGS>`), il n'y a rien à faire de plus. Sinon, vous pouvez appliquer des :ref:`décorateurs conditionnels <conditional-decorators>`. Dans l'exemple qui suit, le cache est invalidé chaque fois que vous relancez le serveur d'applications."

# ab798e56b01e4179bb2308038de96db9
#: ../../topics/i18n/translation.txt:1025
msgid ""
"You can even pre-generate the javascript catalog as part of your deployment "
"procedure and serve it as a static file. This radical technique is "
"implemented in django-statici18n_."
msgstr "Il est même possible de pré-générer le catalogue JavaScript dans le cadre de votre procédure de déploiement et le servir comme fichier statique. Cette technique radicale est implémentée dans django-statici18n_."

# 2d6832f7ad1c4aff8de5f2236597bddd
#: ../../topics/i18n/translation.txt:1034
msgid "Internationalization: in URL patterns"
msgstr "Internationalisation : dans les motifs d'URL"

# 10537d775f4049f9887833db28dd9b95
#: ../../topics/i18n/translation.txt:1040
msgid "Django provides two mechanisms to internationalize URL patterns:"
msgstr "Django fournit deux mécanismes pour internationaliser les motifs d'URL :"

# 8afe9a89f58d424ab4a70377a16361bf
#: ../../topics/i18n/translation.txt:1042
msgid ""
"Adding the language prefix to the root of the URL patterns to make it "
"possible for :class:`~django.middleware.locale.LocaleMiddleware` to detect "
"the language to activate from the requested URL."
msgstr "En ajoutant le préfixe de langue à la racine des motifs d'URL afin que :class:`~django.middleware.locale.LocaleMiddleware` puisse détecter la langue à activer à partir de l'URL demandée."

# 1f4ea1584bb6433e8ebe6eb879c562ed
#: ../../topics/i18n/translation.txt:1046
msgid ""
"Making URL patterns themselves translatable via the "
":func:`django.utils.translation.ugettext_lazy()` function."
msgstr "En rendant traduisibles les motifs d'URL eux-mêmes via la fonction :func:`django.utils.translation.ugettext_lazy()`."

# d5f43c031abd428b8026e703444cc4ed
#: ../../topics/i18n/translation.txt:1051
msgid ""
"Using either one of these features requires that an active language be set "
"for each request; in other words, you need to have "
":class:`django.middleware.locale.LocaleMiddleware` in your "
":setting:`MIDDLEWARE_CLASSES` setting."
msgstr "L'utilisation de chacune de ces techniques exige qu'une langue active soit définie pour chaque requête ; en d'autres termes, votre réglage :setting:`MIDDLEWARE_CLASSES` doit contenir :class:`django.middleware.locale.LocaleMiddleware`."

# 30c778b586ed4026b63ddd62dc97c14c
#: ../../topics/i18n/translation.txt:1057
msgid "Language prefix in URL patterns"
msgstr "Préfixe de langue dans les motifs d'URL"

# e45ef49e5acc475abcbff8f91e7711fb
#: ../../topics/i18n/translation.txt:1061
msgid ""
"This function can be used in your root URLconf as a replacement for the "
"normal :func:`django.conf.urls.patterns` function. Django will automatically"
" prepend the current active language code to all url patterns defined within"
" :func:`~django.conf.urls.i18n.i18n_patterns`. Example URL patterns::"
msgstr "Cette fonction peut être utilisée dans votre configuration d'URL racine en remplacement de la fonction :func:`django.conf.urls.patterns` normale. Django préfixe automatiquement tous les motifs d'URL définis par :func:`~django.conf.urls.i18n.i18n_patterns` avec le code de langue actuellement actif. Exemple de motifs d'URL ::"

# d01b5dc7932f4eebbc4c2ffba8cc9ee0
#: ../../topics/i18n/translation.txt:1085
msgid ""
"After defining these URL patterns, Django will automatically add the "
"language prefix to the URL patterns that were added by the ``i18n_patterns``"
" function. Example::"
msgstr "Après la définition de ces motifs d'URL, Django ajoute automatiquement le préfixe de langue dans les motifs d'URL qui ont été ajoutés avec la fonction ``i18n_patterns``. Exemple ::"

# 100a7b1a30ec43c686a0aae3d6f15eda
#: ../../topics/i18n/translation.txt:1104
msgid ""
":func:`~django.conf.urls.i18n.i18n_patterns` is only allowed in your root "
"URLconf. Using it within an included URLconf will throw an "
":exc:`~django.core.exceptions.ImproperlyConfigured` exception."
msgstr ":func:`~django.conf.urls.i18n.i18n_patterns` ne peut figurer que dans la configuration d'URL racine. Si vous essayez de l'utiliser dans une configuration d'URL incluse, vous obtiendrez une exception :exc:`~django.core.exceptions.ImproperlyConfigured`."

# 7a37e7d56ee744ca950f0ca49d74bc7e
#: ../../topics/i18n/translation.txt:1110
msgid ""
"Ensure that you don't have non-prefixed URL patterns that might collide with"
" an automatically-added language prefix."
msgstr "Assurez-vous de ne pas avoir de motifs d'URL non préfixés qui pourraient être confondus avec des motifs contenant le préfixe de langue automatique."

# 26b165061ead4f37ad98bdf277886533
#: ../../topics/i18n/translation.txt:1115
msgid "Translating URL patterns"
msgstr "Traduction de motifs d'URL"

# d6742f686e9448ffbcef2bf93a0ff3fe
#: ../../topics/i18n/translation.txt:1117
msgid ""
"URL patterns can also be marked translatable using the "
":func:`~django.utils.translation.ugettext_lazy` function. Example::"
msgstr "Les motifs d'URL peuvent aussi être signalés comme traduisibles en utilisant la fonction :func:`~django.utils.translation.ugettext_lazy`. Exemple ::"

# 91feae82e3354b5e850b0aa0f855258e
#: ../../topics/i18n/translation.txt:1140
msgid ""
"After you've created the translations, the "
":func:`~django.core.urlresolvers.reverse` function will return the URL in "
"the active language. Example::"
msgstr "Après avoir effectué les traductions, la fonction :func:`~django.core.urlresolvers.reverse` renverra l'URL dans la langue active. Exemple ::"

# 39553f82616a4943b22bd7f13f8beb93
#: ../../topics/i18n/translation.txt:1157
msgid ""
"In most cases, it's best to use translated URLs only within a language-code-"
"prefixed block of patterns (using "
":func:`~django.conf.urls.i18n.i18n_patterns`), to avoid the possibility that"
" a carelessly translated URL causes a collision with a non-translated URL "
"pattern."
msgstr "Dans la plupart des cas, il est recommandé de n'utiliser des URL traduites que dans des blocs de motifs avec préfixe de code de langue (utilisant :func:`~django.conf.urls.i18n.i18n_patterns`), pour éviter l'éventualité qu'une URL mal traduite entre en conflit avec un motif d'URL non traduit."

# cebe7985ae5a4b5fb6ba5505888a77e6
#: ../../topics/i18n/translation.txt:1166
msgid "Reversing in templates"
msgstr "Résolution inverse dans les gabarits"

# a46999dd10854eb7bf6429e2ff9750e1
#: ../../topics/i18n/translation.txt:1168
msgid ""
"If localized URLs get reversed in templates they always use the current "
"language. To link to a URL in another language use the :ttag:`language` "
"template tag. It enables the given language in the enclosed template "
"section:"
msgstr "Lors de la résolution d'URL régionalisées dans les gabarits, c'est toujours la langue active qui sera utilisée. Pour créer un lien vers une URL dans une autre langue, utilisez la balise de gabarit :ttag:`language`. Elle active la langue indiquée à l'intérieur de la section de gabarit concernée :"

# 964cade8a7034900b8cce83e48d32c41
#: ../../topics/i18n/translation.txt:1185
msgid ""
"The :ttag:`language` tag expects the language code as the only argument."
msgstr "La balise :ttag:`language` n'accepte que le code de langue comme paramètre."

# 6be8949b11c042e79453512792384f8c
#: ../../topics/i18n/translation.txt:1190
msgid "Localization: how to create language files"
msgstr "Régionalisation : comment créer les fichiers de langues"

# c6e3cc243c584341b7e47dbacd5b37a7
#: ../../topics/i18n/translation.txt:1192
msgid ""
"Once the string literals of an application have been tagged for later "
"translation, the translation themselves need to be written (or obtained). "
"Here's how that works."
msgstr "Après avoir marqué les chaînes à traduire dans le code d'une application, il s'agit d'effectuer les traductions elles-mêmes. Voici comment ça fonctionne."

# ea302419597343019e51dd37b8fa247c
#: ../../topics/i18n/translation.txt:1197
msgid "Message files"
msgstr "Fichiers de messages"

# b5dad8ef41e44445bf8e6741440171f9
#: ../../topics/i18n/translation.txt:1214
msgid ""
"The first step is to create a :term:`message file` for a new language. A "
"message file is a plain-text file, representing a single language, that "
"contains all available translation strings and how they should be "
"represented in the given language. Message files have a ``.po`` file "
"extension."
msgstr "La première étape est de créer un :term:`fichier de messages` pour la nouvelle langue. Il s'agit d'un simple fichier texte correspondant à une seule langue et contenant toutes les chaînes à traduire disponibles ainsi que leur traduction dans la langue cible. Les fichiers de messages possèdent l'extension de fichier ``.po``."

# b5381e0c26e0425e88ecd5a616879026
#: ../../topics/i18n/translation.txt:1219
msgid ""
"Django comes with a tool, :djadmin:`django-admin.py makemessages "
"<makemessages>`, that automates the creation and upkeep of these files."
msgstr "Django est livré avec un outil, :djadmin:`django-admin.py makemessages <makemessages>`, qui automatise la création et la maintenance de ces fichiers."

# a7f85d04a8de4b1482578a670e4dca9c
#: ../../topics/i18n/translation.txt:1222
msgid "Gettext utilities"
msgstr "Utilitaires gettext"

# 01182b36215e4db1892ebb66b6f0f592
#: ../../topics/i18n/translation.txt:1224
msgid ""
"The ``makemessages`` command (and ``compilemessages`` discussed later) use "
"commands from the GNU gettext toolset: ``xgettext``, ``msgfmt``, "
"``msgmerge`` and ``msguniq``."
msgstr "La commande ``makemessages`` (ainsi que ``compilemessages`` présentée plus bas) utilise des commandes de la suite d'outils GNU gettext : ``xgettext``, ``msgfmt``, ``msgmerge`` et ``msguniq``."

# c3662840b1dc4926a3187357a7582abb
#: ../../topics/i18n/translation.txt:1228
msgid "The minimum version of the ``gettext`` utilities supported is 0.15."
msgstr "La version minimale prise en charge des utilitaires  ``gettext`` est la version 0.15."

# b1298c3215ff45c6b8dc0d87e4a70351
#: ../../topics/i18n/translation.txt:1230
msgid "To create or update a message file, run this command::"
msgstr "Pour créer ou mettre à jour un fichier de messages, exécutez cette commande ::"

# 923e2d6339dc4f2d992175fe454e696e
#: ../../topics/i18n/translation.txt:1234
msgid ""
"...where ``de`` is the language code for the message file you want to "
"create. The language code, in this case, is in :term:`locale format<locale "
"name>`. For example, it's ``pt_BR`` for Brazilian Portuguese and ``de_AT`` "
"for Austrian German."
msgstr "…où ``de`` est le code de langue du fichier de messages que vous souhaitez créer. Le code de langue, dans ce cas, est au :term:`format de locale<locale name>`. Par exemple, le portugais du Brésil est représenté par ``pt_BR`` et l'allemand d'Autriche par ``de_AT``."

# 9ee87e3975f54121a2340a45206b7df7
#: ../../topics/i18n/translation.txt:1239
msgid "The script should be run from one of two places:"
msgstr "Le script doit être lancé depuis l'un des deux endroits suivants :"

# 746ad9713adb4f52a9a77d9261334d52
#: ../../topics/i18n/translation.txt:1241
msgid ""
"The root directory of your Django project (the one that contains "
"``manage.py``)."
msgstr "Le répertoire racine de votre projet Django (celui qui contient ``manage.py``)."

# 0ceadf86179c4b95be230f0c9b9f391d
#: ../../topics/i18n/translation.txt:1243
msgid "The root directory of one of your Django apps."
msgstr "Le répertoire racine de l'une de vos applications Django."

# 6e295c0beeb4415c9b100db0cf104e25
#: ../../topics/i18n/translation.txt:1245
msgid ""
"The script runs over your project source tree or your application source "
"tree and pulls out all strings marked for translation (see :ref:`how-django-"
"discovers-translations` and be sure :setting:`LOCALE_PATHS` is configured "
"correctly). It creates (or updates) a message file in the directory "
"``locale/LANG/LC_MESSAGES``. In the ``de`` example, the file will be "
"``locale/de/LC_MESSAGES/django.po``."
msgstr "Le script parcourt l'arborescence des sources de votre projet ou de votre application et extrait toutes les chaînes marquées pour la traduction (consultez :ref:`how-django-discovers-translations` et assurez-vous que :setting:`LOCALE_PATHS` est correctement configuré). Il crée (ou met à jour) un fichier de messages dans le répertoire ``locale/LANG/LC_MESSAGES``. Dans l'exemple avec ``de``, le fichier équivaudra à ``locale/de/LC_MESSAGES/django.po``."

# 8fc0a53de75f47b08b3573054beafc4b
#: ../../topics/i18n/translation.txt:1252
msgid ""
"By default :djadmin:`django-admin.py makemessages <makemessages>` examines "
"every file that has the ``.html`` or ``.txt`` file extension. In case you "
"want to override that default, use the ``--extension`` or ``-e`` option to "
"specify the file extensions to examine::"
msgstr "Par défaut, :djadmin:`django-admin.py makemessages <makemessages>` examine chaque fichier ayant une extension ``.html`` ou ``.txt``. Dans le cas où vous souhaitez modifier cela, utilisez l'option ``--extension`` ou ``-e`` pour indiquer les extensions de fichiers à examiner ::"

# fb6e198b53934e48af067eb2b7d2270a
#: ../../topics/i18n/translation.txt:1259
msgid ""
"Separate multiple extensions with commas and/or use ``-e`` or "
"``--extension`` multiple times::"
msgstr "Séparez plusieurs extensions par une virgule ou utilisez plusieurs occurrences de ``-e`` ou ``--extension``::"

# f50b3f2fceab4725bec02bbbc0f633c5
#: ../../topics/i18n/translation.txt:1266
msgid ""
"When :ref:`creating message files from JavaScript source code <creating-"
"message-files-from-js-code>` you need to use the special 'djangojs' domain, "
"**not** ``-e js``."
msgstr "Lors de la :ref:`création de fichiers de messages à partir de code JavaScript <creating-message-files-from-js-code>`, vous devez utiliser le domaine particulier ``djangojs``, et **non pas** ``-e js``."

# 8da1e950625d44ab902ca9940809ab31
#: ../../topics/i18n/translation.txt:1270
msgid "No gettext?"
msgstr "Pas de gettext ?"

# e0dfbb4dc82d4fae927cfbbce6a17ee7
#: ../../topics/i18n/translation.txt:1272
msgid ""
"If you don't have the ``gettext`` utilities installed, "
":djadmin:`makemessages` will create empty files. If that's the case, either "
"install the ``gettext`` utilities or just copy the English message file "
"(``locale/en/LC_MESSAGES/django.po``) if available and use it as a starting "
"point; it's just an empty translation file."
msgstr "Si les utilitaires ``gettext`` ne sont pas installés, :djadmin:`makemessages` crée des fichiers vides. Dans ce cas, installez les utilitaires ``gettext`` ou copiez simplement le fichier de messages anglais (``locale/en/LC_MESSAGES/django.po``) s'il y en a un et utilisez-le comme point de départ ; ce n'est qu'un fichier de traductions vides."

# 0791a0ed29d7432f986bc27ec847ac1a
# 6a0caaef278d4aa0b5e729c5638a3c6d
#: ../../topics/i18n/translation.txt:1278
#: ../../topics/i18n/translation.txt:1350
msgid "Working on Windows?"
msgstr "Vous utilisez Windows ?"

# e7f2f866e12c462d81e3b7bb6738ab51
#: ../../topics/i18n/translation.txt:1280
msgid ""
"If you're using Windows and need to install the GNU gettext utilities so "
":djadmin:`makemessages` works, see :ref:`gettext_on_windows` for more "
"information."
msgstr "Si vous utilisez Windows et que vous avez besoin d'installer les utilitaires GNU gettext pour le fonctionnement de :djadmin:`makemessages`, consultez :ref:`gettext_on_windows` pour plus d'informations."

# 50b054dba7a54e78ad3988b94bf0b499
#: ../../topics/i18n/translation.txt:1284
msgid ""
"The format of ``.po`` files is straightforward. Each ``.po`` file contains a"
" small bit of metadata, such as the translation maintainer's contact "
"information, but the bulk of the file is a list of **messages** -- simple "
"mappings between translation strings and the actual translated text for the "
"particular language."
msgstr "Le format des fichiers ``.po`` est assez simple. Chaque fichier ``.po`` contient quelques métadonnées telles que les informations de contact du mainteneur de la traduction, mais la partie principale du fichier est composée d'une liste de **messages**, de simples correspondances entre les chaînes à traduire et les textes de la traduction dans la langue cible."

# 21502af2920d4b689be6228698fc327b
#: ../../topics/i18n/translation.txt:1290
msgid ""
"For example, if your Django app contained a translation string for the text "
"``\"Welcome to my site.\"``, like so::"
msgstr "Par exemple, si votre application Django contient une chaîne à traduire pour le texte ``\"Welcome to my site.\"``, comme ceci ::"

# 8e82db003468430aa1927f8a2e3c5f2a
#: ../../topics/i18n/translation.txt:1295
msgid ""
"...then :djadmin:`django-admin.py makemessages <makemessages>` will have "
"created a ``.po`` file containing the following snippet -- a message::"
msgstr "…alors :djadmin:`django-admin.py makemessages <makemessages>` créera un fichier ``.po`` contenant l'extrait (message) suivant ::"

# 4d5e1a217727449eb59d5db9f62b5ced
#: ../../topics/i18n/translation.txt:1302
msgid "A quick explanation:"
msgstr "Une rapide explication :"

# 3620e62e16834fc8bddf9cf5d2838004
#: ../../topics/i18n/translation.txt:1304
msgid ""
"``msgid`` is the translation string, which appears in the source. Don't "
"change it."
msgstr "``msgid`` est la chaîne à traduire apparaissant dans la source. N'y touchez pas."

# d71e1f05ea9a488d8ff308a4e17fe1b4
#: ../../topics/i18n/translation.txt:1306
msgid ""
"``msgstr`` is where you put the language-specific translation. It starts out"
" empty, so it's your responsibility to change it. Make sure you keep the "
"quotes around your translation."
msgstr "``msgstr`` est l'emplacement devant recevoir la traduction dans la langue cible. Il est vide au début, il est donc de votre responsabilité d'y ajouter le contenu traduit. Prenez soin de ne pas enlever les guillemets autour de la traduction."

# 24e798fbc48b48ae9ae018db8c8485c0
#: ../../topics/i18n/translation.txt:1309
msgid ""
"As a convenience, each message includes, in the form of a comment line "
"prefixed with ``#`` and located above the ``msgid`` line, the filename and "
"line number from which the translation string was gleaned."
msgstr "Chaque message contient des indications utiles sous la forme d'une ligne de commentaire préfixée par ``#`` et située au-dessus de la ligne ``msgid``; ce commentaire contient le nom de fichier et le numéro de ligne correspondant au fichier duquel cette chaîne à traduire a été extraite."

# 50229f835b344c6db0ab807db67e75f7
#: ../../topics/i18n/translation.txt:1313
msgid ""
"Long messages are a special case. There, the first string directly after the"
" ``msgstr`` (or ``msgid``) is an empty string. Then the content itself will "
"be written over the next few lines as one string per line. Those strings are"
" directly concatenated. Don't forget trailing spaces within the strings; "
"otherwise, they'll be tacked together without whitespace!"
msgstr "Les longs messages sont des cas spéciaux. La première expression juste après ``msgstr`` (ou ``msgid``) est une chaîne vide. Le contenu lui-même est écrit dans les lignes suivantes sur plusieurs lignes qui seront concaténées au moment de la récupération de la traduction. N'oubliez donc pas les espaces en fin de ligne à l'intérieur du texte, sinon les lignes seront mises bout à bout sans espace !"

# 13dee2ff72da49ea92ad466fa294ec1a
#: ../../topics/i18n/translation.txt:1319
msgid "Mind your charset"
msgstr "Attention au codage des caractères"

# e4b094c133de4ceca26d8e387aa11c80
#: ../../topics/i18n/translation.txt:1321
msgid ""
"When creating a PO file with your favorite text editor, first edit the "
"charset line (search for ``\"CHARSET\"``) and set it to the charset you'll "
"be using to edit the content. Due to the way the ``gettext`` tools work "
"internally and because we want to allow non-ASCII source strings in Django's"
" core and your applications, you **must** use UTF-8 as the encoding for your"
" PO file. This means that everybody will be using the same encoding, which "
"is important when Django processes the PO files."
msgstr "Lors de la création d'un fichier PO avec votre éditeur de texte favori, commencez par modifier la ligne ``charset`` (cherchez ``\"CHARSET\"``) et ajoutez-y le code de caractères que vous utilisez pour modifier le contenu. En raison du fonctionnement interne des outils ``gettext`` et de la volonté du cœur de Django d'accepter dans les chaînes source des caractères hors de l'ensemble ASCII, vous **devez** utiliser UTF-8 comme codage pour vos fichiers PO. Cela signifie que tout le monde utilise le même codage de caractères, ce qui est important pour Django lorsqu'il traite les fichiers PO."

# fa922b0979fc4a7aa257722e35c9ffca
#: ../../topics/i18n/translation.txt:1329
msgid ""
"To reexamine all source code and templates for new translation strings and "
"update all message files for **all** languages, run this::"
msgstr "Pour réexaminer tout le code source et les gabarits à la recherche de nouvelles chaînes à traduire et pour mettre à jour tous les fichiers de messages pour **toutes** les langues, exécutez ceci ::"

# f330ca1865454481895d1cec868aa6c2
#: ../../topics/i18n/translation.txt:1335
msgid "Compiling message files"
msgstr "Compilation des fichiers de messages"

# 11c159f3d6f045548e656fc8d7befc30
#: ../../topics/i18n/translation.txt:1337
msgid ""
"After you create your message file -- and each time you make changes to it "
"-- you'll need to compile it into a more efficient form, for use by "
"``gettext``. Do this with the :djadmin:`django-admin.py compilemessages "
"<compilemessages>` utility."
msgstr "Après avoir créé un fichier de messages et lors de chaque modification à ce fichier, il est nécessaire de le compiler dans un format plus efficace utilisable par ``gettext``. Ceci se fait à l'aide de la commande :djadmin:`django-admin.py compilemessages <compilemessages>`."

# 07d01b1b503f4d82ab25efdac8826d03
#: ../../topics/i18n/translation.txt:1342
msgid ""
"This tool runs over all available ``.po`` files and creates ``.mo`` files, "
"which are binary files optimized for use by ``gettext``. In the same "
"directory from which you ran :djadmin:`django-admin.py makemessages "
"<makemessages>`, run :djadmin:`django-admin.py compilemessages "
"<compilemessages>` like this::"
msgstr "Cet outil parcourt tous les fichiers ``.po`` disponibles et crée des fichiers ``.mo`` qui sont des fichiers binaires optimisés pour ``gettext``. Dans le même répertoire à partir duquel vous avez lancé :djadmin:`django-admin.py makemessages <makemessages>`, exécutez :djadmin:`django-admin.py compilemessages <compilemessages>` comme ceci ::"

# dd844df187da4e19be3c46005699d3dd
#: ../../topics/i18n/translation.txt:1348
msgid "That's it. Your translations are ready for use."
msgstr "C'est tout. Vos traductions sont prêtes à l'emploi."

# 50609cc42bee4f7b8d9f863dd9052a8c
#: ../../topics/i18n/translation.txt:1352
msgid ""
"If you're using Windows and need to install the GNU gettext utilities so "
":djadmin:`django-admin.py compilemessages <compilemessages>` works see "
":ref:`gettext_on_windows` for more information."
msgstr "Si vous utilisez Windows et que vous avez besoin d'installer les utilitaires GNU gettext pour le fonctionnement de :djadmin:`django-admin.py compilemessages <compilemessages>`, consultez :ref:`gettext_on_windows` pour plus d'informations."

# 306223a78aa64ddbbe00e8935c22de34
#: ../../topics/i18n/translation.txt:1356
msgid ".po files: Encoding and BOM usage."
msgstr "Fichiers .po : codage et présence du BOM"

# 663f06b20a3c4b478ae37815302f5d80
#: ../../topics/i18n/translation.txt:1358
msgid ""
"Django only supports ``.po`` files encoded in UTF-8 and without any BOM "
"(Byte Order Mark) so if your text editor adds such marks to the beginning of"
" files by default then you will need to reconfigure it."
msgstr "Django ne gère que les fichiers ``.po`` codés en UTF-8 et sans BOM (Byte Order Mark) ; si votre éditeur de texte ajoute par défaut de telles marques au début des fichiers, il vous faudra le reconfigurer."

# b515c919dadd43f58d674d4d06c10b16
#: ../../topics/i18n/translation.txt:1365
msgid "Creating message files from JavaScript source code"
msgstr "Création de fichiers de messages à partir de code JavaScript"

# badf9c8ef415491f9fbb7533e0cacfdf
#: ../../topics/i18n/translation.txt:1367
msgid ""
"You create and update the message files the same way as the other Django "
"message files -- with the :djadmin:`django-admin.py makemessages "
"<makemessages>` tool. The only difference is you need to explicitly specify "
"what in gettext parlance is known as a domain in this case the ``djangojs`` "
"domain, by providing a ``-d djangojs`` parameter, like this::"
msgstr "La création et la mise à jour des fichiers de messages se fait de la même manière que les autres fichiers de messages de Django, à l'aide de l'outil :djadmin:`django-admin.py makemessages <makemessages>`. La seule différence est que vous devez explicitement définir ce que le jargon ``gettext`` appelle un domaine, dans ce cas le domaine ``djangojs``, en indiquant le paramètre ``-d djangojs`` comme ceci ::"

# 6a54022ffb9049b1869c324cbf0a3635
#: ../../topics/i18n/translation.txt:1375
msgid ""
"This would create or update the message file for JavaScript for German. "
"After updating message files, just run :djadmin:`django-admin.py "
"compilemessages <compilemessages>` the same way as you do with normal Django"
" message files."
msgstr "Ceci va créer ou mettre à jour le fichier de messages JavaScript en allemand. Après la mise à jour des fichiers de messages, il suffit de lancer :djadmin:`django-admin.py compilemessages <compilemessages>` sur le même principe que pour les autres fichiers de messages de Django."

# bfefa03f3b6c40e88556c6c39d94a584
#: ../../topics/i18n/translation.txt:1382
msgid "``gettext`` on Windows"
msgstr "``gettext`` et Windows"

# 26ecc9c1253c4e24b9a3b10e527c85da
#: ../../topics/i18n/translation.txt:1384
msgid ""
"This is only needed for people who either want to extract message IDs or "
"compile message files (``.po``). Translation work itself just involves "
"editing existing files of this type, but if you want to create your own "
"message files, or want to test or compile a changed message file, you will "
"need the ``gettext`` utilities:"
msgstr "Ceci n'est nécessaire que pour les personnes qui doivent extraire des messages à traduire ou compiler des fichiers de messages (``.po``). Le travail de traduction en soi ne requiert que de modifier des fichiers de ce type, mais si vous souhaitez créer vos propres fichiers de messages ou que vous vouliez tester ou compiler un fichier de messages modifié, vous aurez besoin des utilitaires ``gettext``:"

# 235f4e5f11ef43528bd74d44b70b2c4a
#: ../../topics/i18n/translation.txt:1389
msgid ""
"Download the following zip files from the GNOME servers "
"http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/ or from one of "
"its mirrors_"
msgstr "Téléchargez les fichiers zip suivants à partir des serveurs de GNOME (http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/) ou de l'un des miroirs_"

# 7d60f11e17eb4f388819f8df95159ea1
#: ../../topics/i18n/translation.txt:1393
msgid "``gettext-runtime-X.zip``"
msgstr "``gettext-runtime-X.zip``"

# 1b03340f670b4fe4bdf054699d37ea91
#: ../../topics/i18n/translation.txt:1394
msgid "``gettext-tools-X.zip``"
msgstr "``gettext-tools-X.zip``"

# b74e0c36f5224739a6701ea924cd18f1
#: ../../topics/i18n/translation.txt:1396
msgid "``X`` is the version number, we are requiring ``0.15`` or higher."
msgstr "``X`` est le numéro de version, il faut au minimum la version ``0.15``."

# 90cd2357f43c420a8ad9b614827538a7
#: ../../topics/i18n/translation.txt:1398
msgid ""
"Extract the contents of the ``bin\\`` directories in both files to the same "
"folder on your system (i.e. ``C:\\Program Files\\gettext-utils``)"
msgstr "Décompressez le contenu des répertoires ``bin\\`` des deux fichiers dans le même dossier de votre système (par ex. ``C:\\Program Files\\gettext-utils``)"

# 2136c5adca2e4d6d930717abb93756b2
#: ../../topics/i18n/translation.txt:1401
msgid "Update the system PATH:"
msgstr "Mettez à jour le chemin PATH du système :"

# 72fea4970885486893f8141cb9f6f037
#: ../../topics/i18n/translation.txt:1403
msgid "``Control Panel > System > Advanced > Environment Variables``."
msgstr "``Panneau de configuration > Système > Avancé > Variables d'environnement``."

# cc9cbe615e894035a18d4cc2c2007e49
#: ../../topics/i18n/translation.txt:1404
msgid "In the ``System variables`` list, click ``Path``, click ``Edit``."
msgstr "Dans la liste des ``Variables système``, cliquez sur ``Chemin``, puis ``Modifier``."

# 66b5e36f6e4c433e9a48df411641ebcc
#: ../../topics/i18n/translation.txt:1405
msgid ""
"Add ``;C:\\Program Files\\gettext-utils\\bin`` at the end of the ``Variable "
"value`` field."
msgstr "Ajoutez ``;C:\\Program Files\\gettext-utils\\bin`` à la suite du champ ``Valeur de la variable``."

# fea1e7d2b5ae4f2c9b3e5f63ae0c11fc
#: ../../topics/i18n/translation.txt:1410
msgid ""
"You may also use ``gettext`` binaries you have obtained elsewhere, so long "
"as the ``xgettext --version`` command works properly. Do not attempt to use "
"Django translation utilities with a ``gettext`` package if the command "
"``xgettext --version`` entered at a Windows command prompt causes a popup "
"window saying \"xgettext.exe has generated errors and will be closed by "
"Windows\"."
msgstr "Il est aussi possible d'utiliser des binaires ``gettext`` obtenus par une autre source, tant que la commande ``xgettext --version`` fonctionne correctement. N'essayez pas d'utiliser les utilitaires de traduction de Django avec un paquet ``gettext`` si la commande ``xgettext --version`` saisie dans une invite de commande Windows produit une fenêtre contenant un message du genre « xgettext.exe a produit des erreurs et sera fermé par Windows »."

# 922bc1415a1e409db5a906c3190c1837
#: ../../topics/i18n/translation.txt:1418
msgid "Miscellaneous"
msgstr "Divers"

# 58cad72096e841a2b6aa61359f8be65b
#: ../../topics/i18n/translation.txt:1423
msgid "The ``set_language`` redirect view"
msgstr "La vue de redirection ``set_language``"

# a92ee4a0398f472fbcb37278b1f807e1
#: ../../topics/i18n/translation.txt:1431
msgid ""
"As a convenience, Django comes with a view, "
":func:`django.views.i18n.set_language`, that sets a user's language "
"preference and redirects to a given URL or, by default, back to the previous"
" page."
msgstr "Par commodité, Django fournit une vue, :func:`django.views.i18n.set_language`, qui définit la préférence de langue d'un utilisateur et redirige vers une URL donnée ou, par défaut, revient à la page précédente."

# 7e37d96c215f4257aa435cddc05bad03
#: ../../topics/i18n/translation.txt:1435
msgid ""
"Make sure that the following item is in your "
":setting:`TEMPLATE_CONTEXT_PROCESSORS` list in your settings file::"
msgstr "Assurez-vous de la présence de cette ligne dans la liste :setting:`TEMPLATE_CONTEXT_PROCESSORS` de votre fichier de réglages ::"

# cb77a6e8486e4cd49cda4456b9a8228e
#: ../../topics/i18n/translation.txt:1440
msgid "Activate this view by adding the following line to your URLconf::"
msgstr "Activez la vue en ajoutant la ligne suivante dans votre configuration d'URL ::"

# 5cec21352e41447799b11aaf7b10a767
#: ../../topics/i18n/translation.txt:1444
msgid ""
"(Note that this example makes the view available at ``/i18n/setlang/``.)"
msgstr "(Notez que cet exemple rend la vue disponible par ``/i18n/setlang/``.)"

# ca68552a5cd14ce698f96476d9d39585
#: ../../topics/i18n/translation.txt:1448
msgid ""
"Make sure that you don't include the above URL within "
":func:`~django.conf.urls.i18n.i18n_patterns` - it needs to be language-"
"independent itself to work correctly."
msgstr "Vérifiez que l'URL ci-dessus ne soit pas ajoutée au moyen de :func:`~django.conf.urls.i18n.i18n_patterns`, car elle doit être elle-même indépendante de la langue pour fonctionner correctement."

# 18db544168294c6b9414a4b5a1dc816f
#: ../../topics/i18n/translation.txt:1452
msgid ""
"The view expects to be called via the ``POST`` method, with a ``language`` "
"parameter set in request. If session support is enabled, the view saves the "
"language choice in the user's session. Otherwise, it saves the language "
"choice in a cookie that is by default named ``django_language``. (The name "
"can be changed through the :setting:`LANGUAGE_COOKIE_NAME` setting.)"
msgstr "La vue s'attend à être appelée par la méthode ``POST``, avec un paramètre ``language`` défini dans la requête. Si la prise en charge des sessions est active, la vue enregistre le choix de langue dans la session de l'utilisateur. Sinon, elle enregistre le choix de langue dans un cookie nommé par défaut ``django_language`` (le nom peut être modifié par le réglage :setting:`LANGUAGE_COOKIE_NAME`)."

# 5e86b6354dc44b12b8139065320df772
#: ../../topics/i18n/translation.txt:1458
msgid ""
"After setting the language choice, Django redirects the user, following this"
" algorithm:"
msgstr "Après avoir défini le choix de la langue, Django redirige l'utilisateur en suivant cet algorithme :"

# c21ade9ce3ed4befa17d3d51b0a8a0e9
#: ../../topics/i18n/translation.txt:1461
msgid "Django looks for a ``next`` parameter in the ``POST`` data."
msgstr "Django cherche un paramètre ``next`` dans les données ``POST``."

# 09687e72d3f14204af3ed50bb314c4e2
#: ../../topics/i18n/translation.txt:1462
msgid ""
"If that doesn't exist, or is empty, Django tries the URL in the ``Referrer``"
" header."
msgstr "S'il n'existe pas ou qu'il est vide, Django cherche l'URL dans l'en-tête ``Referer``."

# a0bc78772ddf44468899e13912008515
#: ../../topics/i18n/translation.txt:1464
msgid ""
"If that's empty -- say, if a user's browser suppresses that header -- then "
"the user will be redirected to ``/`` (the site root) as a fallback."
msgstr "Si c'est toujours vide, par exemple dans le cas où le navigateur de l'utilisateur supprime cet en-tête, l'utilisateur sera redirigé vers ``/`` (la racine du site) en dernier recours."

# 0d2efe10b36249589967e87ac14dc02d
#: ../../topics/i18n/translation.txt:1467
msgid "Here's example HTML template code:"
msgstr "Voici un exemple de code de gabarit HTML :"

# e73d47641be14e7bb24f239380bd850f
#: ../../topics/i18n/translation.txt:1485
msgid ""
"In this example, Django looks up the URL of the page to which the user will "
"be redirected in the ``redirect_to`` context variable."
msgstr "Dans cet exemple, Django cherche l'URL de la page vers laquelle l'utilisateur sera redirigé dans la variable de contexte ``redirect_to``."

# c26bb9b875a149d089547cbf4028d235
#: ../../topics/i18n/translation.txt:1489
msgid "Using translations outside views and templates"
msgstr "Traductions en dehors des vues et des gabarits"

# 9302814276f34da9ae8f727db3e026f7
#: ../../topics/i18n/translation.txt:1491
msgid ""
"While Django provides a rich set of i18n tools for use in views and "
"templates, it does not restrict the usage to Django-specific code. The "
"Django translation mechanisms can be used to translate arbitrary texts to "
"any language that is supported by Django (as long as an appropriate "
"translation catalog exists, of course). You can load a translation catalog, "
"activate it and translate text to language of your choice, but remember to "
"switch back to original language, as activating a translation catalog is "
"done on per-thread basis and such change will affect code running in the "
"same thread."
msgstr "Django contient un ensemble d'outils d'internationalisation bien fourni pour être utilisé dans les vues et les gabarits, mais leur usage n'est pas limité au code spécifique à Django. Les mécanismes de traduction de Django peuvent être utilisés pour traduire n'importe quel texte vers toutes les langues prises en charge par Django (pour autant qu'un catalogue de traductions correspondant existe, bien sûr). Vous pouvez charger un catalogue de traductions, l'activer et traduire du texte dans la langue de votre choix, mais n'oubliez pas de restaurer la langue initiale, car l'activation d'un catalogue de traductions est valable pour tout un fil d'exécution (thread) et une telle modification affecte le code s'exécutant dans le même fil."

# b8282105b2434b70b85147d93244c96e
#: ../../topics/i18n/translation.txt:1512
msgid ""
"Calling this function with the value 'de' will give you ``\"Willkommen\"``, "
"regardless of :setting:`LANGUAGE_CODE` and language set by middleware."
msgstr "L'appel de cette fonction avec la valeur « de » produira ``\"Willkommen\"``, quelle que soit la valeur de :setting:`LANGUAGE_CODE` ou la langue définie par un intergiciel."

# 9a3f0ee3013247faa9c587280cb37a83
#: ../../topics/i18n/translation.txt:1515
msgid ""
"Functions of particular interest are "
"``django.utils.translation.get_language()`` which returns the language used "
"in the current thread, ``django.utils.translation.activate()`` which "
"activates a translation catalog for the current thread, and "
"``django.utils.translation.check_for_language()`` which checks if the given "
"language is supported by Django."
msgstr "Quelques fonctions dignes d'intérêt sont ``django.utils.translation.get_language()`` qui renvoie la langue utilisée dans le fil d'exécution actuel, ``django.utils.translation.activate()`` qui active un catalogue de traductions pour le fil d'exécution en cours et ``django.utils.translation.check_for_language()`` qui vérifie si la langue indiquée est prise en charge par Django."

# b941d33a012342b68a30a575f15c75ee
#: ../../topics/i18n/translation.txt:1522
msgid "Implementation notes"
msgstr "Notes d'implémentation"

# fa21b8e1ef8e4e9f8de075e1187b8a69
#: ../../topics/i18n/translation.txt:1527
msgid "Specialties of Django translation"
msgstr "Spécialités des traductions Django"

# cd2541b73e3943e785964c2fe0a2b17b
#: ../../topics/i18n/translation.txt:1529
msgid ""
"Django's translation machinery uses the standard ``gettext`` module that "
"comes with Python. If you know ``gettext``, you might note these specialties"
" in the way Django does translation:"
msgstr "Le mécanisme de traduction de Django utilise le module standard ``gettext`` livré avec Python. Si vous connaissez ``gettext``, vous allez peut-être constater ces particularités dans la manière dont Django gère les traductions :"

# c0483c28c06842f3846f6e83fe77f200
#: ../../topics/i18n/translation.txt:1533
msgid ""
"The string domain is ``django`` or ``djangojs``. This string domain is used "
"to differentiate between different programs that store their data in a "
"common message-file library (usually ``/usr/share/locale/``). The ``django``"
" domain is used for python and template translation strings and is loaded "
"into the global translation catalogs. The ``djangojs`` domain is only used "
"for JavaScript translation catalogs to make sure that those are as small as "
"possible."
msgstr "Le texte du domaine est ``django`` ou ``djangojs``. Ce texte sert à distinguer les divers programmes qui stockent leurs données dans un endroit commun aux fichiers de messages (normalement ``/usr/share/locale/``). Le domaine ``django`` est utilisé  pour les chaînes de traduction du code Python et des gabarits et est chargé dans les catalogues de traductions globaux. Le domaine ``djangojs`` n'est utilisé que pour les catalogues de traductions JavaScript afin qu'ils restent aussi petits que possible."

# 822a9897cd9b44228caebb3a89136d3b
#: ../../topics/i18n/translation.txt:1540
msgid ""
"Django doesn't use ``xgettext`` alone. It uses Python wrappers around "
"``xgettext`` and ``msgfmt``. This is mostly for convenience."
msgstr "Django n'utilise pas directement ``xgettext``, mais des adaptateurs Python autour de ``xgettext`` et ``msgfmt``. Ceci essentiellement pour des raisons pratiques."

# dbf8fcdfd2404bda8c93872b742527f3
#: ../../topics/i18n/translation.txt:1546
msgid "How Django discovers language preference"
msgstr "Processus de découverte de la préférence de langue par Django"

# d875cb2ab1f24ae59f45fda26682762e
#: ../../topics/i18n/translation.txt:1548
msgid ""
"Once you've prepared your translations -- or, if you just want to use the "
"translations that come with Django -- you'll just need to activate "
"translation for your app."
msgstr "Après avoir préparé les traductions, ou si vous voulez simplement utiliser les traductions qui proviennent de Django, il suffit d'activer les traductions pour votre application."

# 8d052db367ea4c0d89ca12347e71f5cb
#: ../../topics/i18n/translation.txt:1552
msgid ""
"Behind the scenes, Django has a very flexible model of deciding which "
"language should be used -- installation-wide, for a particular user, or "
"both."
msgstr "En arrière-plan, Django utilise un modèle très souple pour décider de la langue à activer, de manière globale, pour un utilisateur particulier ou les deux."

# 16b1638c3ce146aa88f1a8d9b08c0a1a
#: ../../topics/i18n/translation.txt:1555
msgid ""
"To set an installation-wide language preference, set "
":setting:`LANGUAGE_CODE`. Django uses this language as the default "
"translation -- the final attempt if no better matching translation is found "
"through one of the methods employed by the locale middleware (see below)."
msgstr "Pour configurer une préférence de langue générale du projet, définissez :setting:`LANGUAGE_CODE`. Django utilise cette langue comme traduction par défaut, c'est-à-dire le choix final si aucune autre traduction correspondante n'est découverte par l'une des méthodes employées par l'intergiciel de langue (voir ci-dessous)."

# edd139d727f34c5088d0f1a6e47a24c0
#: ../../topics/i18n/translation.txt:1560
msgid ""
"If all you want is to run Django with your native language all you need to "
"do is set :setting:`LANGUAGE_CODE` and make sure the corresponding "
":term:`message files <message file>` and their compiled versions (``.mo``) "
"exist."
msgstr "Si vous souhaitez simplement faire fonctionner Django dans votre langue maternelle, la seule chose est faire est de définir :setting:`LANGUAGE_CODE` et de vérifier que les :term:`fichiers de messages <message file>` correspondants ainsi que leur version compilée (``.mo``) existent."

# 686900a48b484e9aa1298d6fe744476b
#: ../../topics/i18n/translation.txt:1564
msgid ""
"If you want to let each individual user specify which language he or she "
"prefers, then you also need to use use the ``LocaleMiddleware``. "
"``LocaleMiddleware`` enables language selection based on data from the "
"request. It customizes content for each user."
msgstr "Si vous voulez que chaque utilisateur puisse indiquer sa langue préférée, il est alors nécessaire d'utiliser ``LocaleMiddleware``. Cet intergiciel active le choix de la langue en fonction des données de la requête. Il personnalise le contenu pour chaque utilisateur."

# 3ec29af941e64fd9bde15c473ad383d6
#: ../../topics/i18n/translation.txt:1569
msgid ""
"To use ``LocaleMiddleware``, add "
"``'django.middleware.locale.LocaleMiddleware'`` to your "
":setting:`MIDDLEWARE_CLASSES` setting. Because middleware order matters, you"
" should follow these guidelines:"
msgstr "Pour utiliser ``LocaleMiddleware``, ajoutez ``'django.middleware.locale.LocaleMiddleware'`` à votre réglage :setting:`MIDDLEWARE_CLASSES`. Les intergiciels sont sensibles à leur ordre d'apparition, il est donc recommandé de suivre ces instructions :"

# 84299fef788e499499152ddca2abf42f
#: ../../topics/i18n/translation.txt:1573
msgid "Make sure it's one of the first middlewares installed."
msgstr "Assurez-vous qu'il figure parmi les premiers intergiciels installés."

# 58056e928ce443c79466334e6b863c96
#: ../../topics/i18n/translation.txt:1574
msgid ""
"It should come after ``SessionMiddleware``, because ``LocaleMiddleware`` "
"makes use of session data. And it should come before ``CommonMiddleware`` "
"because ``CommonMiddleware`` needs an activated language in order to resolve"
" the requested URL."
msgstr "Il devrait figurer après ``SessionMiddleware``, parce que ``LocaleMiddleware`` emploie des données de session. Et il devrait figurer après ``CommonMiddleware``, parce que ``CommonMiddleware`` a besoin d'une langue active pour la résolution de l'URL demandée."

# 23550d69f8df4efba4467c5d519283cb
#: ../../topics/i18n/translation.txt:1578
msgid "If you use ``CacheMiddleware``, put ``LocaleMiddleware`` after it."
msgstr "Si vous utilisez ``CacheMiddleware``, placez-le avant ``LocaleMiddleware``."

# 421449c5c3c34c449e24a6270a5da736
#: ../../topics/i18n/translation.txt:1580
msgid "For example, your :setting:`MIDDLEWARE_CLASSES` might look like this::"
msgstr "Par exemple, voici à quoi pourrait ressembler votre réglage :setting:`MIDDLEWARE_CLASSES`::"

# ec1e0d00412f491ba219801882eee680
#: ../../topics/i18n/translation.txt:1588
msgid ""
"(For more on middleware, see the :doc:`middleware documentation "
"</topics/http/middleware>`.)"
msgstr "(Pour plus d'informations sur les intergiciels, consultez la :doc:`documentation sur les intergiciels </topics/http/middleware>`.)"

# c1452638d595400ab156babf5efe2f5f
#: ../../topics/i18n/translation.txt:1591
msgid ""
"``LocaleMiddleware`` tries to determine the user's language preference by "
"following this algorithm:"
msgstr "``LocaleMiddleware`` essaie de déterminer la préférence de langue de l'utilisateur en suivant cet algorithme :"

# 32121c91589c45da862edd0433021dd8
#: ../../topics/i18n/translation.txt:1594
msgid ""
"First, it looks for the language prefix in the requested URL.  This is only "
"performed when you are using the ``i18n_patterns`` function in your root "
"URLconf. See :ref:`url-internationalization` for more information about the "
"language prefix and how to internationalize URL patterns."
msgstr "Premièrement, il cherche un préfixe de langue dans l'URL demandée. Ceci n'est valable que lorsque vous utilisez la fonction ``i18n_patterns`` dans votre configuration d'URL racine. Voir :ref:`url-internationalization` pour plus d'informations sur les préfixes de langue et sur la manière d'internationaliser les motifs d'URL."

# 265df45de6fb45519b0599b7d9ac1083
#: ../../topics/i18n/translation.txt:1599
msgid ""
"Failing that, it looks for a ``django_language`` key in the current user's "
"session."
msgstr "S'il ne trouve rien, il cherche une clé ``django_language`` dans la session de l'utilisateur actuel."

# 54e677bcc6d2445b8d1ce944b96622b3
#: ../../topics/i18n/translation.txt:1602
msgid "Failing that, it looks for a cookie."
msgstr "S'il ne trouve rien, il cherche un cookie."

# 2481f4aedb7b45298da68ae5043e1bca
#: ../../topics/i18n/translation.txt:1604
msgid ""
"The name of the cookie used is set by the :setting:`LANGUAGE_COOKIE_NAME` "
"setting. (The default name is ``django_language``.)"
msgstr "Le nom de ce cookie est défini par le réglage :setting:`LANGUAGE_COOKIE_NAME` (la valeur par défaut est ``django_language``)."

# 56616b06207f475392418bea365c5f71
#: ../../topics/i18n/translation.txt:1607
msgid ""
"Failing that, it looks at the ``Accept-Language`` HTTP header. This header "
"is sent by your browser and tells the server which language(s) you prefer, "
"in order by priority. Django tries each language in the header until it "
"finds one with available translations."
msgstr "S'il ne trouve rien, il examine l'en-tête HTTP ``Accept-Language``. Cet en-tête est envoyé par le navigateur et indique au serveur les langues préférées de l'utilisateur, triées par ordre de préférence. Django prend en compte chaque langue de cet en-tête jusqu'à ce qu'il en trouve une dont les traductions sont disponibles."

# 8eccfa39e1c144f593d2d0cbf6822ce5
#: ../../topics/i18n/translation.txt:1612
msgid "Failing that, it uses the global :setting:`LANGUAGE_CODE` setting."
msgstr "S'il ne trouve rien, il utilise le réglage global :setting:`LANGUAGE_CODE`."

# 1504d2d6f3544e8c91c837fda4763435
#: ../../topics/i18n/translation.txt:1618
msgid ""
"In each of these places, the language preference is expected to be in the "
"standard :term:`language format<language code>`, as a string. For example, "
"Brazilian Portuguese is ``pt-br``."
msgstr "À chacun de ces endroits, la préférence de langue est supposée être dans le :term:`format de langue<language code>` standard, sous forme textuelle. Par exemple, le portugais brésilien est représenté par ``pt-br``."

# 13cbd05120c541c38dc2e385f2732678
#: ../../topics/i18n/translation.txt:1622
msgid ""
"If a base language is available but the sublanguage specified is not, Django"
" uses the base language. For example, if a user specifies ``de-at`` "
"(Austrian German) but Django only has ``de`` available, Django uses ``de``."
msgstr "Si une langue de base est disponible mais que la variante indiquée ne l'est pas, Django utilise la langue de base. Par exemple, si un utilisateur indique ``fr-be`` (français de Belgique) mais que Django ne connaît que ``fr``, il utilisera ``fr``."

# b621f18383a94065a36f8acc5f5be7a9
#: ../../topics/i18n/translation.txt:1627
msgid ""
"Only languages listed in the :setting:`LANGUAGES` setting can be selected. "
"If you want to restrict the language selection to a subset of provided "
"languages (because your application doesn't provide all those languages), "
"set :setting:`LANGUAGES` to a list of languages. For example::"
msgstr "Seules les langues présentes dans le réglage :setting:`LANGUAGES` peuvent être choisies. Si vous souhaitez restreindre le choix possible des langues à un sous-ensemble des langues disponibles (parce que votre application ne fournit pas toutes ces langues), définissez :setting:`LANGUAGES` à une liste de langues. Par exemple ::"

# 181604125f914a5790bd6de5c066bc3b
#: ../../topics/i18n/translation.txt:1637
msgid ""
"This example restricts languages that are available for automatic selection "
"to German and English (and any sublanguage, like de-ch or en-us)."
msgstr "Cet exemple limite les langues disponibles lors de la sélection automatique à l'allemand et à l'anglais (et à toute variante, du genre ``de-ch`` ou ``en-us``)."

# a6ded48074c1410585d35b445fc1df4b
#: ../../topics/i18n/translation.txt:1626
msgid ""
"If you define a custom :setting:`LANGUAGES` setting, as explained in the "
"previous bullet, you can mark the language names as translation strings -- "
"but use :func:`~django.utils.translation.ugettext_lazy` instead of "
":func:`~django.utils.translation.ugettext` to avoid a circular import."
msgstr "Si vous définissez un réglage :setting:`LANGUAGES` personnalisé comme expliqué au point ci-dessus, il est possible de marquer les noms de langues comme chaînes à traduire, mais utilisez alors :func:`~django.utils.translation.ugettext_lazy` au lieu de :func:`~django.utils.translation.ugettext` pour éviter une importation circulaire."

# cde9adf4d87c45529b6225f9fdde8a93
#: ../../topics/i18n/translation.txt:1631
msgid "Here's a sample settings file::"
msgstr "Voici un exemple de fichier de réglages ::"

# 436a674e353c41ca90f114fa2daa98f0
#: ../../topics/i18n/translation.txt:1640
msgid ""
"Once ``LocaleMiddleware`` determines the user's preference, it makes this "
"preference available as ``request.LANGUAGE_CODE`` for each "
":class:`~django.http.HttpRequest`. Feel free to read this value in your view"
" code. Here's a simple example::"
msgstr "Lorsque ``LocaleMiddleware`` a déterminé la préférence de langue de l'utilisateur, il rend disponible cette préférence dans la variable ``request.LANGUAGE_CODE`` de chaque :class:`~django.http.HttpRequest`. Cette valeur est à votre disposition dans le code de vos vues. Voici un exemple simple ::"

# 720885a1e79041fca49f8777a2c4185c
#: ../../topics/i18n/translation.txt:1685
msgid ""
"Note that, with static (middleware-less) translation, the language is in "
"``settings.LANGUAGE_CODE``, while with dynamic (middleware) translation, "
"it's in ``request.LANGUAGE_CODE``."
msgstr "Remarquez qu'avec la traduction statique (sans intergiciel), la langue se trouve dans ``settings.LANGUAGE_CODE`` alors qu'avec la traduction dynamique (avec intergiciel), elle se trouve dans ``request.LANGUAGE_CODE``."

# 6b0349c44cbd45ababe4bf45a81fa0ff
#: ../../topics/i18n/translation.txt:1697
msgid "How Django discovers translations"
msgstr "Processus de découverte des traductions par Django"

# 7e2f428b8a2443c9ad4f1d78e36f7f55
#: ../../topics/i18n/translation.txt:1699
msgid ""
"At runtime, Django builds an in-memory unified catalog of literals-"
"translations. To achieve this it looks for translations by following this "
"algorithm regarding the order in which it examines the different file paths "
"to load the compiled :term:`message files <message file>` (``.mo``) and the "
"precedence of multiple translations for the same literal:"
msgstr "Au moment de l'exécution, Django construit un catalogue consolidé en mémoire des chaînes de traduction. Pour faire cela, il cherche des traductions selon l'algorithme suivant concernant l'ordre dans lequel il examine les différents chemins de fichiers en vue du chargement des :term:`fichiers de messages <message file>` compilés (``.mo``) et de la priorité d'éventuelles traductions différentes de la même chaîne :"

# 9d642f9bba8d4ae99bcd1c8a223ed817
#: ../../topics/i18n/translation.txt:1705
msgid ""
"The directories listed in :setting:`LOCALE_PATHS` have the highest "
"precedence, with the ones appearing first having higher precedence than the "
"ones appearing later."
msgstr "Les répertoires énumérés dans :setting:`LOCALE_PATHS` ont la plus haute priorité, ceux apparaissant en premier ayant priorité sur les suivants."

# df46e392c0aa4183a90238064e53d643
#: ../../topics/i18n/translation.txt:1708
msgid ""
"Then, it looks for and uses if it exists a ``locale`` directory in each of "
"the installed apps listed in :setting:`INSTALLED_APPS`.  The ones appearing "
"first have higher precedence than the ones appearing later."
msgstr "Puis, il recherche et utilise le cas échéant un répertoire ``locale`` dans chacune des applications installées figurant dans :setting:`INSTALLED_APPS`. Celles apparaissant en premier ayant priorité sur les suivantes."

# 7eb97196184e4c20807d250763b83efb
#: ../../topics/i18n/translation.txt:1711
msgid ""
"Finally, the Django-provided base translation in ``django/conf/locale`` is "
"used as a fallback."
msgstr "Et finalement, la traduction de base fournie par Django dans ``django/conf/locale`` est utilisée en dernier recours."

# 2a6aca26c28a40a69f2110b8bc96d38f
#: ../../topics/i18n/translation.txt:1716
msgid ""
"The translations for literals included in JavaScript assets are looked up "
"following a similar but not identical algorithm. See the "
":ref:`javascript_catalog view documentation <javascript_catalog-view>` for "
"more details."
msgstr "Les traductions de chaînes contenues dans des fichiers JavaScript sont parcourues par un algorithme semblable mais pas identique. Consultez la :ref:`documentation de la vue javascript_catalog <javascript_catalog-view>` pour plus de détails."

# 2597e04f817440b7acc4c612cf4f2987
#: ../../topics/i18n/translation.txt:1721
msgid ""
"In all cases the name of the directory containing the translation is "
"expected to be named using :term:`locale name` notation. E.g. ``de``, "
"``pt_BR``, ``es_AR``, etc."
msgstr "Dans tous les cas, le nom du répertoire contenant une traduction doit respecter le format de nommage avec la notation de :term:`nom de locale`. Par ex. : ``de``, ``pt_BR``, ``es_AR``, etc."

# 4de60b24bbef4f7d88326f7a12d70c10
#: ../../topics/i18n/translation.txt:1725
msgid ""
"This way, you can write applications that include their own translations, "
"and you can override base translations in your project. Or, you can just "
"build a big project out of several apps and put all translations into one "
"big common message file specific to the project you are composing. The "
"choice is yours."
msgstr "De cette façon, vous pouvez écrire des applications incluant leurs propres traductions et il est possible de surcharger les traductions de base par celles de votre projet. Ou, vous pouvez construire un gros projet composé de plusieurs applications et placer toutes les traductions dans un seul gros fichier de messages commun spécifique au projet que vous mettez en place. C'est à vous de choisir."

# eebacee7f4f24823957583d590399b1d
#: ../../topics/i18n/translation.txt:1730
msgid "All message file repositories are structured the same way. They are:"
msgstr "Tous les dépôts de fichiers de messages sont structurés de la même façon. C'est-à-dire :"

# 22974e5bc938449bae7672003738a24a
#: ../../topics/i18n/translation.txt:1732
msgid ""
"All paths listed in :setting:`LOCALE_PATHS` in your settings file are "
"searched for ``<language>/LC_MESSAGES/django.(po|mo)``"
msgstr "Django parcourt tous les chemins mentionnés dans :setting:`LOCALE_PATHS` de votre fichier de réglages à la recherche de ``<code_de_langue>/LC_MESSAGES/django.(po|mo)``"

# 7eeb34bbbfe044dba8571c9ad2c4b46d
#: ../../topics/i18n/translation.txt:1734
msgid "``$APPPATH/locale/<language>/LC_MESSAGES/django.(po|mo)``"
msgstr "``$CHEMIN_APP/locale/<code_de_langue>/LC_MESSAGES/django.(po|mo)``"

# 90253e72fbb84844b63130bfda914fd3
#: ../../topics/i18n/translation.txt:1735
msgid ""
"``$PYTHONPATH/django/conf/locale/<language>/LC_MESSAGES/django.(po|mo)``"
msgstr "``$PYTHONPATH/django/conf/locale/<code_de_langue>/LC_MESSAGES/django.(po|mo)``"

# 637c031c60fc4e31b49faf8429c3baf0
#: ../../topics/i18n/translation.txt:1737
msgid ""
"To create message files, you use the :djadmin:`django-admin.py makemessages "
"<makemessages>` tool. You only need to be in the same directory where the "
"``locale/`` directory is located. And you use :djadmin:`django-admin.py "
"compilemessages <compilemessages>` to produce the binary ``.mo`` files that "
"are used by ``gettext``."
msgstr "Pour créer des fichiers de messages, il faut utiliser l'outil :djadmin:`django-admin.py makemessages <makemessages>`. La seule contrainte est de se placer dans le répertoire où se trouve le répertoire ``locale/``. Et pour produire les fichiers binaires ``.mo`` utilisés par ``gettext``, il faut utiliser :djadmin:`django-admin.py compilemessages <compilemessages>`."

# e15fcbd66b2143189c78b69043162a1e
#: ../../topics/i18n/translation.txt:1742
msgid ""
"You can also run :djadmin:`django-admin.py compilemessages "
"--settings=path.to.settings <compilemessages>` to make the compiler process "
"all the directories in your :setting:`LOCALE_PATHS` setting."
msgstr "Vous pouvez aussi exécuter :djadmin:`django-admin.py compilemessages --settings=chemin.vers.settings <compilemessages>` pour que le compilateur s'occupe de tous les répertoires énumérés dans le réglage :setting:`LOCALE_PATHS`."

# 18094ddc306f4abca09029a67e07a888
#: ../../topics/i18n/translation.txt:1746
msgid ""
"Finally, you should give some thought to the structure of your translation "
"files. If your applications need to be delivered to other users and will be "
"used in other projects, you might want to use app-specific translations. But"
" using app-specific translations and project-specific translations could "
"produce weird problems with :djadmin:`makemessages`: it will traverse all "
"directories below the current path and so might put message IDs into a "
"unified, common message file for the current project that are already in "
"application message files."
msgstr "Finalement, il est recommandé de s'accorder un temps de réflexion au sujet de la structure des fichiers de traductions. Si vos applications doivent être livrées à d'autres utilisateurs ou qu'elles seront utilisées dans d'autres projets, il est raisonnable de créer des traductions spécifiques à l'application. Mais l'utilisation de traductions à la fois spécifiques à des applications et au projet peut générer des problèmes bizarres avec :djadmin:`makemessages`: cette commande parcourt tous les répertoires à partir du chemin actuel et peut potentiellement extraire des chaînes à traduire et les placer dans un fichier de messages commun au projet alors qu'elles se trouvent déjà dans un fichier de messages d'une application."

# 23749c4164b44d73bdda6142e0d160ad
#: ../../topics/i18n/translation.txt:1754
msgid ""
"The easiest way out is to store applications that are not part of the "
"project (and so carry their own translations) outside the project tree. That"
" way, :djadmin:`django-admin.py makemessages <makemessages>`, when ran on a "
"project level will only extract strings that are connected to your explicit "
"project and not strings that are distributed independently."
msgstr "La solution la plus évidente est de stocker les applications ne faisant pas partie du projet (et qui contiennent leurs propres traductions) en dehors de l'arborescence du projet. De cette manière, lorsque :djadmin:`django-admin.py makemessages <makemessages>` est lancé au niveau du projet, seules les chaînes spécifiques au projet seront extraites, et plus les chaînes des applications autonomes."

# 79118bc5196344d09156c286f578fda5
#: ../../topics/index.txt:2
msgid "Using Django"
msgstr "Utilisation de Django"

# 69025f9c109a45b9b51c852ed70f47f6
#: ../../topics/index.txt:4
msgid "Introductions to all the key parts of Django you'll need to know:"
msgstr "Introductions à toutes les parties essentielles de Django qu'il faut connaître :"

# 8b34314113054d378ce27985b29c06fb
#: ../../topics/install.txt:3
msgid "How to install Django"
msgstr "Comment installer Django"

# ed9d475678324596b6fa5f80ad1d6c06
#: ../../topics/install.txt:5
msgid "This document will get you up and running with Django."
msgstr "Ce document a pour but de vous préparer à faire fonctionner Django."

# 011211f12ff14250944996fa75a20758
#: ../../topics/install.txt:8
msgid "Install Python"
msgstr "Installation de Python"

# 2747d9bfa85144858c34d655834f101e
#: ../../topics/install.txt:10
msgid ""
"Being a Python Web framework, Django requires Python. It works with Python "
"2.6, 2.7, 3.2 or 3.3."
msgstr "Django étant un applicatif Web Python, il a donc besoin de Python. Il fonctionne avec Python 2.6, 2.7, 3.2 ou 3.3."

# 553fa2078d90413087decb490104ea8d
#: ../../topics/install.txt:13
msgid ""
"Get Python at http://www.python.org. If you're running Linux or Mac OS X, "
"you probably already have it installed."
msgstr "Python peut être obtenu sur http://www.python.org. Si vous utilisez Linux ou Mac OS X, il est probablement déjà installé sur votre système."

# d2928c64b9bd4032a1e511c5673e4a1a
#: ../../topics/install.txt:16
msgid "Django on Jython"
msgstr "Django sur Jython"

# 6f36084963854ce994074e0e872b7bf9
#: ../../topics/install.txt:18
msgid ""
"If you use Jython_ (a Python implementation for the Java platform), you'll "
"need to follow a few additional steps. See :doc:`/howto/jython` for details."
msgstr "Si vous utilisez Jython_ (une implémentation de Python pour machine Java), vous devrez suivre quelques étapes supplémentaires. Voyez :doc:`/howto/jython` pour les détails."

# 33ecbc9ba44a4b16a6693da482ccc3b6
#: ../../topics/install.txt:23
msgid "Python on Windows"
msgstr "Python sur Windows"

# 898e3a79a02d471db15a3581a107a230
#: ../../topics/install.txt:25
msgid ""
"On Windows, you might need to adjust your ``PATH`` environment variable to "
"include paths to Python executable and additional scripts. For example, if "
"your Python is installed in ``C:\\Python27\\``, the following paths need to "
"be added to ``PATH``::"
msgstr "Sur Windows, il peut être nécessaire d'ajuster la variable d'environnement ``PATH`` pour y inclure les chemins vers l'exécutable Python et autres scripts supplémentaires. Par exemple, si vous avez installé Python dans ``C:\\Python27\\``, les chemins suivants doivent être ajoutés à ``PATH``::"

# d2d8fcb7a57e4165b8febb544ba78a7b
#: ../../topics/install.txt:33
msgid "Install Apache and mod_wsgi"
msgstr "Installation de Apache et mod_wsgi"

# 54a42e49454f4cc8ad4d778f305b947c
#: ../../topics/install.txt:35
msgid ""
"If you just want to experiment with Django, skip ahead to the next section; "
"Django includes a lightweight web server you can use for testing, so you "
"won't need to set up Apache until you're ready to deploy Django in "
"production."
msgstr "Si vous voulez juste faire quelques expériences avec Django, passez directement à la section suivante ; Django inclut un serveur Web léger utilisable pour les tests, il n'est donc pas utile de configurer Apache tant que vous ne souhaitez pas déployer Django en production."

# ba96fc4e053c49189151f7b3e608ca46
#: ../../topics/install.txt:40
msgid ""
"If you want to use Django on a production site, use `Apache`_ with "
"`mod_wsgi`_. mod_wsgi can operate in one of two modes: an embedded mode and "
"a daemon mode. In embedded mode, mod_wsgi is similar to mod_perl -- it "
"embeds Python within Apache and loads Python code into memory when the "
"server starts. Code stays in memory throughout the life of an Apache "
"process, which leads to significant performance gains over other server "
"arrangements. In daemon mode, mod_wsgi spawns an independent daemon process "
"that handles requests. The daemon process can run as a different user than "
"the Web server, possibly leading to improved security, and the daemon "
"process can be restarted without restarting the entire Apache Web server, "
"possibly making refreshing your codebase more seamless. Consult the mod_wsgi"
" documentation to determine which mode is right for your setup. Make sure "
"you have Apache installed, with the mod_wsgi module activated. Django will "
"work with any version of Apache that supports mod_wsgi."
msgstr "Si vous souhaitez utiliser Django sur un site en production, utilisez `Apache`_ avec `mod_wsgi`_. mod_wsgi peut fonctionner dans deux modes : un mode intégré et un mode démon. Dans le mode intégré, mod_wsgi est comparable à mod_perl, il intègre Python dans Apache et charge le code Python en mémoire au démarrage du serveur. Le code reste en mémoire tout au long du cycle de vie du processus Apache, ce qui apporte des améliorations de performance significatives en comparaison d'autres configurations. En mode démon, mod_wsgi délègue la gestion des requêtes à un processus démon indépendant. Ce processus peut fonctionner sous un nom d'utilisateur différent de celui du serveur Web, ce qui peut améliorer la sécurité ; d'autre part, le processus peut être redémarré sans devoir redémarrer tout le serveur Web Apache, ce qui peut simplifier la mise à jour de code. Consultez la documentation de mod_wsgi pour déterminer le mode qui vous conviendra le mieux. Assurez-vous que Apache est installé et que son module mod_wsgi est activé. Django fonctionne avec toute version d'Apache qui prend en charge mod_wsgi."

# 441a06eba86d4b96ab1e8b64616a33ea
#: ../../topics/install.txt:56
msgid ""
"See :doc:`How to use Django with mod_wsgi </howto/deployment/wsgi/modwsgi>` "
"for information on how to configure mod_wsgi once you have it installed."
msgstr "Consultez :doc:`Comment utiliser Django avec mod_wsgi </howto/deployment/wsgi/modwsgi>` pour plus d'informations sur la façon de configurer mod_wsgi après l'avoir installé."

# 21fa5f15ae5146ee94a28fe1dde60793
#: ../../topics/install.txt:60
msgid ""
"If you can't use mod_wsgi for some reason, fear not: Django supports many "
"other deployment options. One is :doc:`uWSGI "
"</howto/deployment/wsgi/uwsgi>`; it works very well with `nginx`_. Another "
"is :doc:`FastCGI </howto/deployment/fastcgi>`, perfect for using Django with"
" servers other than Apache. Additionally, Django follows the WSGI spec "
"(:pep:`3333`), which allows it to run on a variety of server platforms. See "
"the `server-arrangements wiki page`_ for specific installation instructions "
"for each platform."
msgstr "Si vous n'avez pas la possibilité d'utiliser mod_wsgi, ne désespérez pas : Django prend en charge beaucoup d'autres scénarios de déploiement. L'un d'entre eux est :doc:`uWSGI </howto/deployment/wsgi/uwsgi>` ; il fonctionne très bien avec `nginx`_. Un autre est :doc:`FastCGI </howto/deployment/fastcgi>`, parfait pour utiliser Django avec d'autres serveurs que Apache. De plus, Django respecte la spécification WSGI (:pep:`3333`) ce qui permet de le faire fonctionner sur divers plates-formes serveurs. Consultez la `page Wiki sur les configurations serveurs`_ (en anglais) pour des instructions d'installation spécifiques à chaque plate-forme."

# 1b02faadc5044077b3e53a663e84d74b
#: ../../topics/install.txt:76
msgid "Get your database running"
msgstr "Mise en route de la base de données"

# 0a65a09181e94d5eb98f211bd47a8965
#: ../../topics/install.txt:78
msgid ""
"If you plan to use Django's database API functionality, you'll need to make "
"sure a database server is running. Django supports many different database "
"servers and is officially supported with PostgreSQL_, MySQL_, Oracle_ and "
"SQLite_."
msgstr "Si vous prévoyez d'utiliser la fonctionnalité base de données de Django, vous devez faire le nécessaire pour qu'une base de données soit fonctionnelle. Django sait gérer plusieurs serveurs de bases de données différents ; officiellement, il prend en charge PostgreSQL_, MySQL_, Oracle_ et SQLite_."

# a34f51a4157b4c3094886b51aae42ed4
#: ../../topics/install.txt:83
msgid ""
"If you are developing a simple project or something you don't plan to deploy"
" in a production environment, SQLite is generally the simplest option as it "
"doesn't require running a separate server. However, SQLite has many "
"differences from other databases, so if you are working on something "
"substantial, it's recommended to develop with the same database as you plan "
"on using in production."
msgstr "Si vous développez un projet simple ou quelque chose que vous ne prévoyez pas de déployer dans un environnement de production, SQLite est généralement l'option la plus simple car elle n'exige pas de serveur séparé. Cependant, SQLite comporte beaucoup de différences en comparaison d'autres bases de données et si vous travaillez sur un projet un peu conséquent, il est recommandé de développer avec la même base de données qui sera utilisée en production."

# efee1e07514643b09cbb7c4a4fbf32a3
#: ../../topics/install.txt:90
msgid ""
"In addition to the officially supported databases, there are backends "
"provided by 3rd parties that allow you to use other databases with Django:"
msgstr "En plus des bases de données prises en charge officiellement, il existe des moteurs externes à Django qui permettent d'utiliser d'autres bases de données avec Django :"

# dc607c8fd68947b8bcd6df672489a84a
#: ../../topics/install.txt:93
msgid "`Sybase SQL Anywhere`_"
msgstr "`Sybase SQL Anywhere`_"

# e58c41a8914446fb95d603bd548774d4
#: ../../topics/install.txt:94
msgid "`IBM DB2`_"
msgstr "`IBM DB2`_"

# 12af5cf0ddb048d5aa9cc0217d84e9dc
#: ../../topics/install.txt:95
msgid "`Microsoft SQL Server 2005`_"
msgstr "`Microsoft SQL Server 2005`_"

# 5609d7d8d034451aaf9524d7dbb7024e
#: ../../topics/install.txt:96
msgid "Firebird_"
msgstr "Firebird_"

# a8c1c3ae2f4d433eb78ed514fb6124c6
#: ../../topics/install.txt:97
msgid "ODBC_"
msgstr "ODBC_"

# 64778127823a4dc39d01d35b30e31bff
#: ../../topics/install.txt:99
msgid ""
"The Django versions and ORM features supported by these unofficial backends "
"vary considerably. Queries regarding the specific capabilities of these "
"unofficial backends, along with any support queries, should be directed to "
"the support channels provided by each 3rd party project."
msgstr "Les versions de Django et les fonctionnalités ORM prises en charges par ces moteurs inofficiels varient considérablement. Si vous avez des questions concernant les capacités spécifiques de ces moteurs inofficiels ou des questions de support, vous devrez vous adresser aux canaux d'aide offerts par chacun de ces projets externes."

# a6f91959a6714d7b8e7480ec16fbb864
#: ../../topics/install.txt:104
msgid ""
"In addition to a database backend, you'll need to make sure your Python "
"database bindings are installed."
msgstr "En plus du moteur de base de données, il est aussi nécessaire de vérifier que les liaisons Python pour la base de données sont installées."

# bdef0a9b5b5a4a2e9c51f1aa8f0974b1
#: ../../topics/install.txt:107
msgid ""
"If you're using PostgreSQL, you'll need the `postgresql_psycopg2`_ package. "
"You might want to refer to our :ref:`PostgreSQL notes <postgresql-notes>` "
"for further technical details specific to this database."
msgstr "Si vous utilisez PostgreSQL, vous avez besoin du paquet `postgresql_psycopg2`_. Vous pouvez consultez les :ref:`notes sur PostgreSQL <postgresql-notes>` pour des détails techniques plus complets au sujet de cette base de données."

# 5dfef91b33e64cfaaa0daad52f95c262
#: ../../topics/install.txt:111
msgid ""
"If you're on Windows, check out the unofficial `compiled Windows version`_."
msgstr "Si vous êtes sur Windows, récupérez la `version non officielle compilée pour Windows`_."

# 66b6853ac1c5469fbb0ad828f3ea58f9
#: ../../topics/install.txt:113
msgid ""
"If you're using MySQL, you'll need the ``MySQL-python`` package, version "
"1.2.1p2 or higher. You will also want to read the database-specific "
":ref:`notes for the MySQL backend <mysql-notes>`."
msgstr "Si vous utilisez MySQL, vous aurez besoin du paquet ``MySQL-python``, version 1.2.1p2 ou plus récente. Il est aussi recommandé de lire les :ref:`notes spécifiques pour le moteur de base de données MySQL <mysql-notes>`."

# 70562eb18f6341b49d8e23a81c5a297e
#: ../../topics/install.txt:117
msgid ""
"If you're using SQLite you might want to read the :ref:`SQLite backend notes"
" <sqlite-notes>`."
msgstr "Si vous utilisez SQLite, il est recommandé de lire les :ref:`notes du moteur SQLite <sqlite-notes>`."

# ca82b2dc964d47cba24713d51b5d2d3b
#: ../../topics/install.txt:120
msgid ""
"If you're using Oracle, you'll need a copy of cx_Oracle_, but please read "
"the database-specific :ref:`notes for the Oracle backend <oracle-notes>` for"
" important information regarding supported versions of both Oracle and "
"``cx_Oracle``."
msgstr "Si vous utilisez Oracle, vous aurez besoin d'une copie de cx_Oracle_, mais veuillez lire les :ref:`notes spécifiques pour le moteur de base de données Oracle <oracle-notes>` qui contient d'importantes informations concernant les versions prises en charge d'Oracle et de ``cx_Oracle``."

# 9df6e503848e4c6f984350a787c9ff77
#: ../../topics/install.txt:125
msgid ""
"If you're using an unofficial 3rd party backend, please consult the "
"documentation provided for any additional requirements."
msgstr "Si vous utilisez un moteur externe non officiel, consultez la documentation qui l'accompagne pour d'éventuels contraintes supplémentaires."

# 2208eb2160bd47928d0b15d41d3085a5
#: ../../topics/install.txt:128
msgid ""
"If you plan to use Django's ``manage.py syncdb`` command to automatically "
"create database tables for your models (after first installing Django and "
"creating a project), you'll need to ensure that Django has permission to "
"create and alter tables in the database you're using; if you plan to "
"manually create the tables, you can simply grant Django ``SELECT``, "
"``INSERT``, ``UPDATE`` and ``DELETE`` permissions. On some databases, Django"
" will need ``ALTER TABLE`` privileges during ``syncdb`` but won't issue "
"``ALTER TABLE`` statements on a table once ``syncdb`` has created it. After "
"creating a database user with these permissions, you'll specify the details "
"in your project's settings file, see :setting:`DATABASES` for details."
msgstr "Si vous pensez utiliser la commande de Django ``manage.py syncdb`` pour créer automatiquement les tables de base de données pour vos modèles (après la fin de l'installation de Django et la création d'un projet), vous devez vous assurer que Django possède les permissions de créer et modifier les tables dans la base de données que vous utilisez ; si vous pensez créer manuellement les tables, il suffit alors d'attribuer à Django les permissions ``SELECT``, ``INSERT``, ``UPDATE`` et ``DELETE``. Pour certaines bases de données, Django aura besoin des privilèges ``ALTER TABLE`` durant l'exécution de ``syncdb``, mais ne générera plus de commandes ``ALTER TABLE`` pour une table après sa création par ``syncdb``. Après avoir créé un utilisateur de base de données possédant ces permissions, il s'agira d'indiquer les détails de connexion dans le fichier de réglages de votre projet, voir :setting:`DATABASES` pour les détails."

# 1cf0cef01f85410681c56b881014e261
#: ../../topics/install.txt:139
msgid ""
"If you're using Django's :doc:`testing framework</topics/testing/index>` to "
"test database queries, Django will need permission to create a test "
"database."
msgstr "Si vous utilisez l':doc:`infrastructure de test</topics/testing/index>` de Django pour tester les requêtes de bases de données, Django aura besoin des permissions nécessaires pour créer une base de données de test."

# 4773ccd3f18845049c13954dd17b189a
#: ../../topics/install.txt:158
msgid "Remove any old versions of Django"
msgstr "Désinstallation des anciennes versions de Django"

# 3d7d98d004494d37adff303393b972b8
#: ../../topics/install.txt:160
msgid ""
"If you are upgrading your installation of Django from a previous version, "
"you will need to uninstall the old Django version before installing the new "
"version."
msgstr "Si vous mettez à jour votre installation de Django à partir d'une version précédente, il est nécessaire de d'abord désinstaller l'ancienne version de Django avant d'installer la nouvelle."

# 3061338e1f31404fbca16e733861bf25
#: ../../topics/install.txt:164
msgid ""
"If you installed Django using pip_ or ``easy_install`` previously, "
"installing with pip_ or ``easy_install`` again will automatically take care "
"of the old version, so you don't need to do it yourself."
msgstr "Si l'ancienne version de Django a été installée avec pip_ ou ``easy_install``, l'installation de la nouvelle version en utilisant le même outil (pip_ ou ``easy_install``) provoquera automatiquement la désinstallation de la version précédente, vous n'avez donc rien à faire de particulier."

# 7cb794ec6eff4e48a1d901fecda0ab95
#: ../../topics/install.txt:168
msgid ""
"If you previously installed Django using ``python setup.py install``, "
"uninstalling is as simple as deleting the ``django`` directory from your "
"Python ``site-packages``. To find the directory you need to remove, you can "
"run the following at your shell prompt (not the interactive Python prompt):"
msgstr "Si l'ancienne version de Django a été installée avec ``python setup.py install``, sa désinstallation se résume à supprimer le répertoire ``django`` du répertoire ``site-packages`` de votre installation Python. Pour trouver le répertoire à supprimer, vous pouvez exécuter la commande suivante dans le shell d'un terminal (pas dans un shell Python interactif) :"

# b132ea30509e4db596c1d7382e1fd10d
#: ../../topics/install.txt:181
msgid "Install the Django code"
msgstr "Installation du code de Django"

# 0a5c957855eb49debc2f7ed855f1bafb
#: ../../topics/install.txt:183
msgid ""
"Installation instructions are slightly different depending on whether you're"
" installing a distribution-specific package, downloading the latest official"
" release, or fetching the latest development version."
msgstr "Les instructions d'installation divergent légèrement selon que vous installez un paquet de votre distribution, que vous téléchargez la dernière version officielle ou que vous récupériez la dernière version en développement."

# 8adf795b970045168a4e99d92ddc20d7
#: ../../topics/install.txt:187
msgid "It's easy, no matter which way you choose."
msgstr "C'est facile, quelle que soit la méthode choisie."

# d58808201ef44b789008733b65c721d2
#: ../../topics/install.txt:190
msgid "Installing a distribution-specific package"
msgstr "Installation d'un paquet de la distribution"

# 6c4f99c4cc4d459cbe150874058aee66
#: ../../topics/install.txt:192
msgid ""
"Check the :doc:`distribution specific notes </misc/distributions>` to see if"
" your platform/distribution provides official Django packages/installers. "
"Distribution-provided packages will typically allow for automatic "
"installation of dependencies and easy upgrade paths."
msgstr "Parcourez les :doc:`notes spécifiques aux distributions </misc/distributions>` pour vérifier que votre plate-forme/distribution propose des paquets ou installeurs officiels de Django. Les paquets fournis par les distributions permettent généralement de profiter de l'installation automatique des dépendances et de mises à niveau plus faciles."

# 61a7ed9f449a40ba95f087a8990ed55f
#: ../../topics/install.txt:200
msgid "Installing an official release with ``pip``"
msgstr "Installation d'une version officielle avec "

# 26f42533dc614745b5c3caab7f082d86
#: ../../topics/install.txt:202
msgid "This is the recommended way to install Django."
msgstr "C'est la façon recommandée d'installer Django."

# 2686e366b013438a9f891d8a81ed5e78
#: ../../topics/install.txt:204
msgid ""
"Install pip_. The easiest is to use the `standalone pip installer`_. If your"
" distribution already has ``pip`` installed, you might need to update it if "
"it's outdated. (If it's outdated, you'll know because installation won't "
"work.)"
msgstr "Installez pip_. La manière la plus simple est d'utiliser l'`installeur pip autonome`_. Si votre distribution contient déjà une version installée de ``pip``, il pourrait être nécessaire de la mettre à jour si elle est trop ancienne (dans ce cas, vous le verrez bien car l'installation ne fonctionnera pas)."

# c1eef521f40e4741a2d4c23b0ce73bf0
#: ../../topics/install.txt:209
msgid ""
"(optional) Take a look at virtualenv_ and virtualenvwrapper_. These tools "
"provide isolated Python environments, which are more practical than "
"installing packages systemwide. They also allow installing packages without "
"administrator privileges. It's up to you to decide if you want to learn and "
"use them."
msgstr "(facultatif) Jetez un œil à virtualenv_ et virtualenvwrapper_. Ces outils fournissent des environnements Python isolés qui sont bien plus pratiques que d'installer des paquets au niveau de tout le système. Ils permettent aussi d'installer des paquets sans avoir besoin de privilèges administrateurs. C'est à vous de savoir si vous voulez apprendre à les utiliser."

# 91982d193c1a407c99cbcb1f49e08332
#: ../../topics/install.txt:215
msgid ""
"If you're using Linux, Mac OS X or some other flavor of Unix, enter the "
"command ``sudo pip install Django`` at the shell prompt. If you're using "
"Windows, start a command shell with administrator privileges and run the "
"command ``pip install Django``. This will install Django in your Python "
"installation's ``site-packages`` directory."
msgstr "Si vous utilisez Linux, Mac OS X ou toute autre variante de Unix, saisissez la commande ``sudo pip install Django`` dans une invite de commande. Si vous utilisez Windows, lancez une invite de commande avec des droits d'administrateur et lancez la commande ``pip install Django``. Cela va installer Django dans le répertoire ``site-packages`` de votre installation Python."

# 86489cd2b7044308aad989e034ccfcd2
#: ../../topics/install.txt:221
msgid ""
"If you're using a virtualenv, you don't need ``sudo`` or administrator "
"privileges, and this will install Django in the virtualenv's ``site-"
"packages`` directory."
msgstr "Si vous utilisez un ``virtualenv``, vous n'avez pas besoin de ``sudo`` ni de privilèges administrateurs ; la commande installera Django dans le répertoire ``site-packages`` du virtualenv."

# 9a7ad27b40d8476d8e94d79bc9f376f1
#: ../../topics/install.txt:231
msgid "Installing an official release manually"
msgstr "Installation manuelle d'une version officielle"

# b31b5f0191bf4bfaaba8e2ec08d01989
#: ../../topics/install.txt:233
msgid "Download the latest release from our `download page`_."
msgstr "Téléchargez la dernière version à partir de notre `page de téléchargement`_."

# 662c12d84d234364ad5e673dfa766729
#: ../../topics/install.txt:235
msgid ""
"Untar the downloaded file (e.g. ``tar xzvf Django-X.Y.tar.gz``, where "
"``X.Y`` is the version number of the latest release). If you're using "
"Windows, you can download the command-line tool bsdtar_ to do this, or you "
"can use a GUI-based tool such as 7-zip_."
msgstr "Décompressez le fichier téléchargé (par ex. ``tar xzvf Django-X.Y.tar.gz``, où ``X.Y`` est le numéro de version de la dernière version). Si vous utilisez Windows, vous pouvez télécharger l'outil en ligne de commande bsdtar_ pour cette opération ou vous pouvez utiliser un outil graphique du genre 7-zip_."

# ce75d9eeab9b4633a282e4acc31cc351
#: ../../topics/install.txt:240
msgid "Change into the directory created in step 2 (e.g. ``cd Django-X.Y``)."
msgstr "Placez-vous dans le répertoire créé à l'étape 2 (par ex. ``cd Django-X.Y``)."

# 1e928c8c5f094890823f497cc3001a98
#: ../../topics/install.txt:242
msgid ""
"If you're using Linux, Mac OS X or some other flavor of Unix, enter the "
"command ``sudo python setup.py install`` at the shell prompt. If you're "
"using Windows, start a command shell with administrator privileges and run "
"the command ``python setup.py install``. This will install Django in your "
"Python installation's ``site-packages`` directory."
msgstr "Si vous utilisez Linux, Mac OS X ou toute autre variante de Unix, saisissez la commande ``sudo python setup.py install`` dans une invite de commande. Si vous utilisez Windows, lancez une invite de commande avec des droits d'administrateur et lancez la commande ``python setup.py install``. Cela va installer Django dans le répertoire ``site-packages`` de votre installation Python."

# 0904d0a07e9b4e789ff93f232dac2a18
#: ../../topics/install.txt:248
msgid "Removing an old version"
msgstr "Suppression d'une ancienne version"

# ab72eb8f9bdd40c5917a1cb53ea6940b
#: ../../topics/install.txt:250
msgid ""
"If you use this installation technique, it is particularly important that "
"you :ref:`remove any existing installations<removing-old-versions-of-"
"django>` of Django first. Otherwise, you can end up with a broken "
"installation that includes files from previous versions that have since been"
" removed from Django."
msgstr "Si vous utilisez cette technique d'installation, il est particulièrement important de :ref:`supprimer d'abord toute installation existante<removing-old-versions-of-django>` de Django. Sinon, vous pouvez vous retrouver avec une installation défaillante qui contient des fichiers de versions précédentes qui ne doivent plus se trouver dans Django."

# af72cad5d35940c6873657e6c465b67a
#: ../../topics/install.txt:264
msgid "Installing the development version"
msgstr "Installation de la version de développement"

# 47277fa1b533492487b75cb4519c2745
#: ../../topics/install.txt:266
msgid "Tracking Django development"
msgstr "Suivi du développement de Django"

# c4417fa3840c4703a3cf61731892eef7
#: ../../topics/install.txt:268
msgid ""
"If you decide to use the latest development version of Django, you'll want "
"to pay close attention to `the development timeline`_, and you'll want to "
"keep an eye on the :ref:`release notes for the upcoming release "
"<development_release_notes>`. This will help you stay on top of any new "
"features you might want to use, as well as any changes you'll need to make "
"to your code when updating your copy of Django. (For stable releases, any "
"necessary changes are documented in the release notes.)"
msgstr "Si vous décidez d'utiliser la dernière version de développement de Django, il est recommandé de surveiller attentivement l'`activité de développement`_ de même que les :ref:`notes de publication de la version à venir <development_release_notes>`. Cela vous aidera à vous tenir au courant de toute nouvelle fonctionnalité que vous pourriez exploiter ou des modifications que vous devrez effectuer dans votre code lors de la mise à jour de votre copie de Django (pour les versions stables, toute modification nécessaire est documentée dans les notes de publication)."

# ef2590caf56a4a61a0411fc2e487948a
#: ../../topics/install.txt:279
msgid ""
"If you'd like to be able to update your Django code occasionally with the "
"latest bug fixes and improvements, follow these instructions:"
msgstr "Si vous aimeriez pouvoir mettre à jour occasionnellement votre version de Django avec les dernières corrections et améliorations, suivez ces instructions :"

# 96f23cedbfe3482a9594b9a196b9f431
#: ../../topics/install.txt:282
msgid ""
"Make sure that you have Git_ installed and that you can run its commands "
"from a shell. (Enter ``git help`` at a shell prompt to test this.)"
msgstr "Vérifiez que Git_ est installé et que vous pouvez lancer ses commandes depuis un terminal (saisissez ``git help`` à l'invite de commande pour le tester). "

# da4bf79e338a474ea5345deef35d02ae
#: ../../topics/install.txt:285
msgid ""
"Check out Django's main development branch (the 'trunk' or 'master') like "
"so:"
msgstr "Créez une copie de travail de la branche principale de développement de Django (appelée « trunk » ou « master ») comme ceci :"

# d41bf8e0142e4316ae25de6b669d57cf
#: ../../topics/install.txt:292
msgid ""
"This will create a directory ``django-trunk`` in your current directory."
msgstr "Un répertoire ``django-trunk`` sera créé dans le répertoire actuel."

# 7744578b330f4130ae0b6fe41dbc9737
#: ../../topics/install.txt:294
msgid ""
"Make sure that the Python interpreter can load Django's code. The most "
"convenient way to do this is via pip_. Run the following command:"
msgstr "Vérifiez que l'interpréteur Python peut charger le code de Django. La façon la plus pratique de faire cela est d'utiliser pip_. Lancez la commande suivante :"

# 98dfe258582f45cda09631bda6ad13d5
#: ../../topics/install.txt:301
msgid "(If using a virtualenv_ you can omit ``sudo``.)"
msgstr "(Si vous utilisez un virtualenv_, vous pouvez omettre ``sudo``.)"

# 77e027d73d9544c99dc7a8adcca539ba
#: ../../topics/install.txt:303
msgid ""
"This will make Django's code importable, and will also make the ``django-"
"admin.py`` utility command available. In other words, you're all set!"
msgstr "Ceci rendra le code Django importable et mettra aussi à disposition la commande utilitaire ``django-admin.py``. En d'autres mots, vous serez fin prêt !"

# 059967b3493b4224b8c913e14b1fa1c6
#: ../../topics/install.txt:307
msgid ""
"If you don't have pip_ available, see the alternative instructions for "
"`installing the development version without pip`_."
msgstr "Si pip_ n'est pas disponible, consultez les instructions alternatives pour l'`installation de la version de développement sans pip`_."

# 33d3350ec2af4c6ab62ce3091822fb75
#: ../../topics/install.txt:312
msgid ""
"Don't run ``sudo python setup.py install``, because you've already carried "
"out the equivalent actions in step 3."
msgstr "Ne lancez pas ``sudo python setup.py install`` car vous avez déjà effectué les actions équivalentes à l'étape 3."

# b7df374be4934c07ae8e207f80b281c0
#: ../../topics/install.txt:315
msgid ""
"When you want to update your copy of the Django source code, just run the "
"command ``git pull`` from within the ``django-trunk`` directory. When you do"
" this, Git will automatically download any changes."
msgstr "Lorsque vous souhaitez mettre à jour votre copie du code source de Django, lancez simplement la commande ``git pull`` à partir du répertoire ``django-trunk``. Quand vous faites cela, Git télécharge automatiquement toutes les modifications."

# 249f52e099394b7abd9a7f13d3fdf3b8
#: ../../topics/install.txt:324
msgid "Installing the development version without pip"
msgstr "Installation de la version de développement sans pip"

# 3a7ed29c0d194ed49f7ebffc12250cdd
#: ../../topics/install.txt:326
msgid ""
"If you don't have pip_, you can instead manually `modify Python's search "
"path`_."
msgstr "Si pip_ n'est pas disponible, vous pouvez manuellement `modifier le chemin de recherche Python`_ à la place.  "

# 57cc9d8f365c45bcab50965d12c9d792
#: ../../topics/install.txt:329
msgid ""
"First follow steps 1 and 2 above, so that you have a ``django-trunk`` "
"directory with a checkout of Django's latest code in it. Then add a ``.pth``"
" file containing the full path to the ``django-trunk`` directory to your "
"system's ``site-packages`` directory. For example, on a Unix-like system:"
msgstr "Suivez d'abord les étapes 1 et 2 ci-dessus pour obtenir un répertoire ``django-trunk`` contenant une extraction du dernier code de Django. Ensuite, dans le répertoire ``site-packages`` de votre système, ajoutez un fichier ``.pth`` contenant le chemin complet vers le répertoire ``django-trunk``. Par exemple, sur un système de type Unix :"

# 83d52711b0774ec989ba9f3490b42212
#: ../../topics/install.txt:338
msgid ""
"In the above line, change ``WORKING-DIR/django-trunk`` to match the full "
"path to your new ``django-trunk`` directory, and change ``SITE-PACKAGES-"
"DIR`` to match the location of your system's ``site-packages`` directory."
msgstr "Dans la ligne ci-dessus, modifiez ``WORKING-DIR/django-trunk`` pour qu'il corresponde au chemin complet de votre nouveau répertoire ``django-trunk`` et modifiez ``SITE-PACKAGES-DIR``  pour qu'il corresponde au répertoire ``site-packages`` de votre système."

# 498953d9bb6e4258950fffb0bd740e84
#: ../../topics/install.txt:342
msgid ""
"The location of the ``site-packages`` directory depends on the operating "
"system, and the location in which Python was installed. To find your "
"system's ``site-packages`` location, execute the following:"
msgstr "L'emplacement du répertoire ``site-packages`` dépend du système d'exploitation et de l'emplacement d'installation de Python. Pour trouver où se situe ce répertoire dans votre système, exécutez ce qui suit :"

# 59525b2a2699470085955a548553b22f
#: ../../topics/install.txt:350
msgid ""
"(Note that this should be run from a shell prompt, not a Python interactive "
"prompt.)"
msgstr "(Notez que cette commande doit être lancée dans une invite de commande de shell, et non pas dans un shell interactif Python.)"

# 47f078b55b7946c9a90105b83e73bb0f
#: ../../topics/install.txt:353
msgid ""
"Some Debian-based Linux distributions have separate ``site-packages`` "
"directories for user-installed packages, such as when installing Django from"
" a downloaded tarball. The command listed above will give you the system's "
"``site-packages``, the user's directory can be found in ``/usr/local/lib/`` "
"instead of ``/usr/lib/``."
msgstr "Certaines distributions Linux basées sur Debian ont des répertoires ``site-packages`` distincts pour les paquets installés par les utilisateurs, comme lorsqu'on installe Django à partir d'une archive téléchargée. La commande mentionnée ci-dessus affiche le répertoire ``site-packages`` du système, celui des utilisateurs pouvant être trouvé dans ``/usr/local/lib/`` au lieu de ``/usr/lib/``."

# d1c0586ea9df4f61829bcb8e5b63ff76
#: ../../topics/install.txt:359
msgid ""
"Next you need to make the ``django-admin.py`` utility available in your "
"shell PATH."
msgstr "Vous devez ensuite rendre disponible la commande ``django-admin.py`` dans le chemin PATH de votre shell."

# 3dde6f23ae3d411f87158b444c69e5c3
#: ../../topics/install.txt:362
msgid ""
"On Unix-like systems, create a symbolic link to the file ``django-"
"trunk/django/bin/django-admin.py`` in a directory on your system path, such "
"as ``/usr/local/bin``. For example:"
msgstr "Sur des systèmes de type Unix, créez un lien symbolique vers le fichier ``django-trunk/django/bin/django-admin.py`` dans un des répertoires contenus dans le chemin système, comme ``/usr/local/bin``. Par exemple :"

# 8e949d469d5048169a64cbf2c8a58c38
#: ../../topics/install.txt:370
msgid ""
"(In the above line, change WORKING-DIR to match the full path to your new "
"``django-trunk`` directory.)"
msgstr "(Dans la ligne ci-dessus, modifiez WORKING-DIR pour qu'il corresponde au chemin complet vers votre nouveau répertoire ``django-trunk``.)"

# 500b87f8c7af49ecb44bb39176493a4e
#: ../../topics/install.txt:373
msgid ""
"This simply lets you type ``django-admin.py`` from within any directory, "
"rather than having to qualify the command with the full path to the file."
msgstr "Cela vous permet de simplement taper ``django-admin.py`` à partir de n'importe quel répertoire, plutôt que de devoir qualifier la commande avec son chemin complet vers le fichier."

# 18a030ef63d24299afc00b9823671d81
#: ../../topics/install.txt:376
msgid ""
"On Windows systems, the same result can be achieved by copying the file "
"``django-trunk/django/bin/django-admin.py`` to somewhere on your system "
"path, for example ``C:\\Python27\\Scripts``."
msgstr "Sur des systèmes Windows, on peut arriver au même résultat en copiant le fichier ``django-trunk/django/bin/django-admin.py`` dans un emplacement se trouvant le chemin système, par exemple ``C:\\Python27\\Scripts``."

# 62f6afd1dbe047a9961a203773453428
#: ../../topics/localflavor.txt:3
msgid "The \"local flavor\" add-ons"
msgstr "Les compléments régionaux « local flavor »"

# 126f1e1d7e5b45119d0de5a7a34d5f36
#: ../../topics/localflavor.txt:5
msgid ""
"Historically, Django has shipped with ``django.contrib.localflavor`` -- "
"assorted pieces of code that are useful for particular countries or "
"cultures. This code is now distributed separately from Django, for easier "
"maintenance and to trim the size of Django's codebase."
msgstr "Historiquement, Django était livré avec ``django.contrib.localflavor``, des parties de code plus particulièrement adaptées à des pays ou cultures spécifiques. Ce code est dorénavant livré séparément de Django, pour faciliter sa maintenance et pour réduire la taille du code de Django."

# 5ced25b6970345e3915860d54eac553a
#: ../../topics/localflavor.txt:10
msgid ""
"The new localflavor package is named ``django-localflavor``, with a main "
"module called ``localflavor`` and many subpackages using an `ISO 3166 "
"country code`_. For example: ``localflavor.us`` is the localflavor package "
"for the U.S.A."
msgstr "Le nouveau paquet ``localflavor`` s'appelle ``django-localflavor``, contenant un module principal appelé ``localflavor`` et de nombreux sous-paquets nommés d'après le `code de pays ISO 3166`_. Par exemple, ``localflavor.us`` est le paquet régionalisé pour les États-Unis."

# c01a96c639604364a7ba1e3189fce7a0
#: ../../topics/localflavor.txt:15
msgid ""
"Most of these ``localflavor`` add-ons are country-specific fields for the "
":doc:`forms </topics/forms/index>` framework -- for example, a "
"``USStateField`` that knows how to validate U.S. state abbreviations and a "
"``FISocialSecurityNumber`` that knows how to validate Finnish social "
"security numbers."
msgstr "La plupart de ces compléments ``localflavor`` contiennent des champs de :doc:`formulaire </topics/forms/index>` spécifiques à un pays ; par exemple, un champ ``USStateField`` sachant comment valider les abréviations d'états des États-Unis ou un champ ``FISocialSecurityNumber`` sachant comment valider les numéros de sécurité sociale en Finlande."

# 8da262126afd4f0db4e214f249243455
#: ../../topics/localflavor.txt:21
msgid ""
"To use one of these localized components, just import the relevant "
"subpackage. For example, here's how you can create a form with a field "
"representing a French telephone number::"
msgstr "Pour utiliser l'un de ces composants régionalisés, il suffit d'importer le sous-paquet correspondant. Par exemple, voici comment vous pouvez créer un formulaire avec un champ représentant le numéro de téléphone français ::"

# 85195ffb5eb549ad9131862546cc7bc8
#: ../../topics/localflavor.txt:31
msgid ""
"For documentation on a given country's localflavor helpers, see its README "
"file."
msgstr "Pour de la documentation sur les utilitaires de l'application ``localflavor`` d'un pays particulier, consultez son fichier README."

# e18188ae9d0d4cf89f4f394e2c4642fe
#: ../../topics/localflavor.txt:39
msgid "Supported countries"
msgstr "Pays pris en charge"

# 6e5e629c93e04baea1170a5a52c730ed
#: ../../topics/localflavor.txt:41
msgid "See the official documentation for more information:"
msgstr "Consultez la documentation officielle pour plus d'informations :"

# d23eb5ecdba546a5811ea0863bf32780
#: ../../topics/localflavor.txt:43
msgid "https://django-localflavor.readthedocs.org/"
msgstr "https://django-localflavor.readthedocs.org/"

# 82e8e2fcbe2248fbbea698919dbff7f4
#: ../../topics/localflavor.txt:46
msgid "Internationalization of localflavors"
msgstr "Internationalisation des applications ``localflavor``"

# 86195f2f13694beda92983558b4c32e5
#: ../../topics/localflavor.txt:48
msgid ""
"To activate translations for the ``localflavor`` application, you must "
"include the application's name in the :setting:`INSTALLED_APPS` setting, so "
"the internationalization system can find the catalog, as explained in :ref"
":`how-django-discovers-translations`."
msgstr "Pour activer les traductions des applications ``localflavor``, vous devez inclure le nom de l'application dans le réglage :setting:`INSTALLED_APPS` afin que le système d'internationalisation puisse trouver le catalogue des messages, comme expliqué dans :ref:`how-django-discovers-translations`."

# ccf12e4d728940c8842ab2d6e7d69286
#: ../../topics/localflavor.txt:56
msgid "How to migrate"
msgstr "Instructions de migration"

# 7dbf8e1623514fc688e49e1269e1e84c
#: ../../topics/localflavor.txt:58
msgid ""
"If you've used the old ``django.contrib.localflavor`` package or one of the "
"temporary ``django-localflavor-*`` releases, follow these two easy steps to "
"update your code:"
msgstr "Si vous avez par le passé utilisé l'ancien paquet ``django.contrib.localflavor`` ou l'une des versions temporaires de ``django-localflavor-*``, suivez ces deux étapes simples pour mettre à jour votre code :"

# 5d96bc6c1dbc417e99a99d6ddb5c2dfd
#: ../../topics/localflavor.txt:62
msgid "Install the third-party ``django-localflavor`` package from PyPI."
msgstr "Installez le paquet externe ``django-localflavor`` à partir de PyPI."

# 7c9e255006f744169091f5e92a4969ea
#: ../../topics/localflavor.txt:64
msgid "Change your app's import statements to reference the new package."
msgstr "Modifiez l'instruction d'importation de l'application afin de référencer le nouveau paquet."

# 14b1bfe6cc5c4471b9b1f20e4a72daf4
#: ../../topics/localflavor.txt:66
msgid "For example, change this::"
msgstr "Par exemple, modifiez ::"

# 89f98e2106334c2abafc1a97d88f14ad
#: ../../topics/localflavor.txt:70
msgid "...to this::"
msgstr "…comme ceci ::"

# 4c1215b32ee34803977eb4360c277d3c
#: ../../topics/localflavor.txt:74
msgid ""
"The code in the new package is the same (it was copied directly from "
"Django), so you don't have to worry about backwards compatibility in terms "
"of functionality. Only the imports have changed."
msgstr "Le code du nouveau paquet est identique (il a été copié directement depuis Django), vuos n'avez donc pas à vous préoccuper de rétrocompatibilité en termes de fonctionnalités. Seules les importations ont changé."

# 44f030719d1f4b21b5ebc6d1df0c1d52
#: ../../topics/localflavor.txt:81
msgid "Deprecation policy"
msgstr "Politique de déprécation"

# d7dc541168724780b546a91258adf8a0
#: ../../topics/localflavor.txt:83
msgid ""
"In Django 1.5, importing from ``django.contrib.localflavor`` will result in "
"a ``DeprecationWarning``. This means your code will still work, but you "
"should change it as soon as possible."
msgstr "Dans Django 1.5, l'importation de ``django.contrib.localflavor`` génère un avertissement ``DeprecationWarning``. Cela signifie que votre code fonctionne toujours, mais que vous devez le changer dès que possible."

# c5c031a9ae00434a9a64e884429ea011
#: ../../topics/localflavor.txt:87
msgid ""
"In Django 1.6, importing from ``django.contrib.localflavor`` will no longer "
"work."
msgstr "Dans Django 1.6, l'importation de ``django.contrib.localflavor`` ne fonctionne plus."

# b35b8ebf81c34c849b4d2299b306540f
#: ../../topics/logging.txt:3
msgid "Logging"
msgstr ""

# 43d211a412f24debb2d53db5619d7a99
#: ../../topics/logging.txt:9
msgid "A quick logging primer"
msgstr ""

# 33ac7260b770403ab53b8936005856e9
#: ../../topics/logging.txt:11
msgid ""
"Django uses Python's builtin :mod:`logging` module to perform system "
"logging. The usage of this module is discussed in detail in Python's own "
"documentation. However, if you've never used Python's logging framework (or "
"even if you have), here's a quick primer."
msgstr ""

# 3ce483341a7b494f98432838ec715c66
#: ../../topics/logging.txt:17
msgid "The cast of players"
msgstr ""

# cd2127beed8e47029e0761b8bef7f228
#: ../../topics/logging.txt:19
msgid "A Python logging configuration consists of four parts:"
msgstr ""

# 324bbd6f995148628b8978f4fee06284
#: ../../topics/logging.txt:21
msgid ":ref:`topic-logging-parts-loggers`"
msgstr ""

# 0b10d851da794e1fac0056f4a92184bd
#: ../../topics/logging.txt:22
msgid ":ref:`topic-logging-parts-handlers`"
msgstr ""

# cb057b49ba6440f89461403e25e42bc7
#: ../../topics/logging.txt:23
msgid ":ref:`topic-logging-parts-filters`"
msgstr ""

# 55df60b48954452cb38243a28649bf56
#: ../../topics/logging.txt:24
msgid ":ref:`topic-logging-parts-formatters`"
msgstr ""

# f158b5678ad140c0866caf6fa4614725
# 7d06565951b24f59b6d9334bf052a2db
#: ../../topics/logging.txt:29 ../../topics/logging.txt:398
msgid "Loggers"
msgstr ""

# 6ab0967b7a4c4d37944b848e515c8b1b
#: ../../topics/logging.txt:31
msgid ""
"A logger is the entry point into the logging system. Each logger is a named "
"bucket to which messages can be written for processing."
msgstr ""

# b21625416ed44b5cadc747af1fc61976
#: ../../topics/logging.txt:34
msgid ""
"A logger is configured to have a *log level*. This log level describes the "
"severity of the messages that the logger will handle. Python defines the "
"following log levels:"
msgstr ""

# a514b07b3f374db1ba62c0609ba68c0d
#: ../../topics/logging.txt:38
msgid "``DEBUG``: Low level system information for debugging purposes"
msgstr ""

# bd5e74da283d43c3a9806e435079311e
#: ../../topics/logging.txt:40
msgid "``INFO``: General system information"
msgstr ""

# d71178d2ab5a41a2bf1ac3afe9a6de70
#: ../../topics/logging.txt:42
msgid "``WARNING``: Information describing a minor problem that has occurred."
msgstr ""

# 4502bef7d5ee4a7997d9aa2b69c7cda8
#: ../../topics/logging.txt:45
msgid "``ERROR``: Information describing a major problem that has occurred."
msgstr ""

# 544966002f7641ec902fce586dd98b7d
#: ../../topics/logging.txt:48
msgid ""
"``CRITICAL``: Information describing a critical problem that has occurred."
msgstr ""

# 502f571bbe0f4c57ab64b972a5d164fa
#: ../../topics/logging.txt:51
msgid ""
"Each message that is written to the logger is a *Log Record*. Each log "
"record also has a *log level* indicating the severity of that specific "
"message. A log record can also contain useful metadata that describes the "
"event that is being logged. This can include details such as a stack trace "
"or an error code."
msgstr ""

# debbe3b5ede540a48b3aa94e7701680b
#: ../../topics/logging.txt:57
msgid ""
"When a message is given to the logger, the log level of the message is "
"compared to the log level of the logger. If the log level of the message "
"meets or exceeds the log level of the logger itself, the message will "
"undergo further processing. If it doesn't, the message will be ignored."
msgstr ""

# 3973d53479a74db481ce9e1090973c8d
#: ../../topics/logging.txt:63
msgid ""
"Once a logger has determined that a message needs to be processed, it is "
"passed to a *Handler*."
msgstr ""

# 3b7abf37be534e9ca1510dfd424c8db7
# b722764be1ea41aa8d52121e84ab1644
#: ../../topics/logging.txt:69 ../../topics/logging.txt:470
msgid "Handlers"
msgstr ""

# 2ac1a7725268455b9be3cfc4f21c7923
#: ../../topics/logging.txt:71
msgid ""
"The handler is the engine that determines what happens to each message in a "
"logger. It describes a particular logging behavior, such as writing a "
"message to the screen, to a file, or to a network socket."
msgstr ""

# 55ebf03752034877b738a7e3dadbd769
#: ../../topics/logging.txt:75
msgid ""
"Like loggers, handlers also have a log level. If the log level of a log "
"record doesn't meet or exceed the level of the handler, the handler will "
"ignore the message."
msgstr ""

# 49830de369c1490a94db5667476622ab
#: ../../topics/logging.txt:79
msgid ""
"A logger can have multiple handlers, and each handler can have a different "
"log level. In this way, it is possible to provide different forms of "
"notification depending on the importance of a message. For example, you "
"could install one handler that forwards ``ERROR`` and ``CRITICAL`` messages "
"to a paging service, while a second handler logs all messages (including "
"``ERROR`` and ``CRITICAL`` messages) to a file for later analysis."
msgstr ""

# 39691080ea7f4596996ce3af8bcc00ef
# b17645721209408687188dc6c6530a16
# 7986caf6c5654209ba3a2830dffc8ed2
#: ../../topics/logging.txt:90 ../../topics/logging.txt:532
#: ../../topics/templates.txt:126
msgid "Filters"
msgstr "Filtres"

# b795e90be496429189e4e153450e49eb
#: ../../topics/logging.txt:92
msgid ""
"A filter is used to provide additional control over which log records are "
"passed from logger to handler."
msgstr ""

# db0f00176b004bc6ae63aa4e036f3eab
#: ../../topics/logging.txt:95
msgid ""
"By default, any log message that meets log level requirements will be "
"handled. However, by installing a filter, you can place additional criteria "
"on the logging process. For example, you could install a filter that only "
"allows ``ERROR`` messages from a particular source to be emitted."
msgstr ""

# 2f5ad25876ae42b8bf3bf0e3395db5f7
#: ../../topics/logging.txt:101
msgid ""
"Filters can also be used to modify the logging record prior to being "
"emitted. For example, you could write a filter that downgrades ``ERROR`` log"
" records to ``WARNING`` records if a particular set of criteria are met."
msgstr ""

# db64b9c6941c4543a193da5493140751
#: ../../topics/logging.txt:106
msgid ""
"Filters can be installed on loggers or on handlers; multiple filters can be "
"used in a chain to perform multiple filtering actions."
msgstr ""

# 7f603e8c015246258adb6078c8d372af
#: ../../topics/logging.txt:112
msgid "Formatters"
msgstr ""

# 98756d000b474ced898a131b3c70b865
#: ../../topics/logging.txt:114
msgid ""
"Ultimately, a log record needs to be rendered as text. Formatters describe "
"the exact format of that text. A formatter usually consists of a Python "
"formatting string; however, you can also write custom formatters to "
"implement specific formatting behavior."
msgstr ""

# aa2df7bfd4884741a81c80b077c62c3c
#: ../../topics/logging.txt:120
msgid "Using logging"
msgstr ""

# 746d54a7c01c4555a79868e7f0f428e9
#: ../../topics/logging.txt:122
msgid ""
"Once you have configured your loggers, handlers, filters and formatters, you"
" need to place logging calls into your code. Using the logging framework is "
"very simple. Here's an example::"
msgstr ""

# 0e4e4dcb292a48c690d73f98c019ef71
#: ../../topics/logging.txt:138
msgid ""
"And that's it! Every time the ``bad_mojo`` condition is activated, an error "
"log record will be written."
msgstr ""

# 7d8f376341a543e3b42d77179aab2489
#: ../../topics/logging.txt:142
msgid "Naming loggers"
msgstr ""

# a1b2fecd2bf44a1cbb7f3d7d688695dc
#: ../../topics/logging.txt:144
msgid ""
"The call to :func:`logging.getLogger()` obtains (creating, if necessary) an "
"instance of a logger. The logger instance is identified by a name. This name"
" is used to identify the logger for configuration purposes."
msgstr ""

# dd680f1428674f81b2e896d8ca1d1d33
#: ../../topics/logging.txt:149
msgid ""
"By convention, the logger name is usually ``__name__``, the name of the "
"python module that contains the logger. This allows you to filter and handle"
" logging calls on a per-module basis. However, if you have some other way of"
" organizing your logging messages, you can provide any dot-separated name to"
" identify your logger::"
msgstr ""

# 5a7299ec560a43eb95f22c4700e42c56
#: ../../topics/logging.txt:158
msgid ""
"The dotted paths of logger names define a hierarchy. The "
"``project.interesting`` logger is considered to be a parent of the "
"``project.interesting.stuff`` logger; the ``project`` logger is a parent of "
"the ``project.interesting`` logger."
msgstr ""

# de97105e25a14d38abee43831dccd4e0
#: ../../topics/logging.txt:163
msgid ""
"Why is the hierarchy important? Well, because loggers can be set to "
"*propagate* their logging calls to their parents. In this way, you can "
"define a single set of handlers at the root of a logger tree, and capture "
"all logging calls in the subtree of loggers. A logging handler defined in "
"the ``project`` namespace will catch all logging messages issued on the "
"``project.interesting`` and ``project.interesting.stuff`` loggers."
msgstr ""

# 53299ee63db24d32a28bbaec5939fcc1
#: ../../topics/logging.txt:171
msgid ""
"This propagation can be controlled on a per-logger basis. If you don't want "
"a particular logger to propagate to its parents, you can turn off this "
"behavior."
msgstr ""

# 0ced4206c76b47be8d139cbc782bc8f6
#: ../../topics/logging.txt:176
msgid "Making logging calls"
msgstr ""

# b65fe9b9f4104685a64206b86ce7c31a
#: ../../topics/logging.txt:178
msgid ""
"The logger instance contains an entry method for each of the default log "
"levels:"
msgstr ""

# 4dff2d3b1d9e496c957d73474965339c
#: ../../topics/logging.txt:181
msgid "``logger.critical()``"
msgstr ""

# bd867f9f4ed54617815636ed620bd455
#: ../../topics/logging.txt:182
msgid "``logger.error()``"
msgstr ""

# 43a8a97b03d84b87a54834c75a0e05e5
#: ../../topics/logging.txt:183
msgid "``logger.warning()``"
msgstr ""

# c5077be166d447ac869c81b3e6508975
#: ../../topics/logging.txt:184
msgid "``logger.info()``"
msgstr ""

# 2643aea1ce5a4cb9845b61acb8fa126e
#: ../../topics/logging.txt:185
msgid "``logger.debug()``"
msgstr ""

# 5cf217b4d5aa4597b13cae253b1531e4
#: ../../topics/logging.txt:187
msgid "There are two other logging calls available:"
msgstr ""

# 6eade67cc3044ac09a59185e7f7b64f4
#: ../../topics/logging.txt:189
msgid ""
"``logger.log()``: Manually emits a logging message with a specific log "
"level."
msgstr ""

# 51367f512f064ef2992b956d0b3c1639
#: ../../topics/logging.txt:192
msgid ""
"``logger.exception()``: Creates an ``ERROR`` level logging message wrapping "
"the current exception stack frame."
msgstr ""

# 5683dfdeb6ae4055b03c697294758827
#: ../../topics/logging.txt:198
msgid "Configuring logging"
msgstr ""

# f4c3caa4040c4e45a377b2718d8f743a
#: ../../topics/logging.txt:200
msgid ""
"Of course, it isn't enough to just put logging calls into your code. You "
"also need to configure the loggers, handlers, filters and formatters to "
"ensure that logging output is output in a useful way."
msgstr ""

# 8051b81c8adc46309fbe7a231bbab3be
#: ../../topics/logging.txt:204
msgid ""
"Python's logging library provides several techniques to configure logging, "
"ranging from a programmatic interface to configuration files. By default, "
"Django uses the `dictConfig format`_."
msgstr ""

# 653118190f9e4ce8a2587860f0307b74
#: ../../topics/logging.txt:209
msgid ""
"``logging.dictConfig`` is a builtin library in Python 2.7. In order to make "
"this library available for users of earlier Python versions, Django includes"
" a copy as part of ``django.utils.log``. If you have Python 2.7 or later, "
"the system native library will be used; if you have Python 2.6, Django's "
"copy will be used."
msgstr ""

# b63311f54467440b9a7d55c1d76a02ed
#: ../../topics/logging.txt:215
msgid ""
"In order to configure logging, you use :setting:`LOGGING` to define a "
"dictionary of logging settings. These settings describes the loggers, "
"handlers, filters and formatters that you want in your logging setup, and "
"the log levels and other properties that you want those components to have."
msgstr ""

# e4ba78a2839648eb81516b43d194bdbb
#: ../../topics/logging.txt:221
msgid ""
"Prior to Django 1.5, the :setting:`LOGGING` setting always overwrote the "
":ref:`default Django logging configuration <default-logging-configuration>`."
" From Django 1.5 forward, it is possible to get the project's logging "
"configuration merged with Django's defaults, hence you can decide if you "
"want to add to, or replace the existing configuration."
msgstr ""

# 7edefebee4874aa4baa8b3a0e6c27da1
#: ../../topics/logging.txt:227
msgid ""
"If the ``disable_existing_loggers`` key in the :setting:`LOGGING` dictConfig"
" is set to ``True`` (which is the default) the default configuration is "
"completely overridden. Alternatively you can redefine some or all of the "
"loggers by setting ``disable_existing_loggers`` to ``False``."
msgstr ""

# 84bd15065e2c443da01fc69215510673
#: ../../topics/logging.txt:232
msgid ""
"Logging is configured as soon as settings have been loaded (either manually "
"using :func:`~django.conf.settings.configure` or when at least one setting "
"is accessed). Since the loading of settings is one of the first things that "
"Django does, you can be certain that loggers are always ready for use in "
"your project code."
msgstr ""

# f82af13539664c4e97773b4829ab7550
#: ../../topics/logging.txt:245
msgid ""
"The full documentation for `dictConfig format`_ is the best source of "
"information about logging configuration dictionaries. However, to give you a"
" taste of what is possible, here is an example of a fairly complex logging "
"setup, configured using :func:`logging.config.dictConfig`::"
msgstr ""

# 729849b1689f4d03a1b59edc604540c6
#: ../../topics/logging.txt:302
msgid "This logging configuration does the following things:"
msgstr ""

# bb5bb4f4bae04b2e8f9c2cebeefa4067
#: ../../topics/logging.txt:304
msgid ""
"Identifies the configuration as being in 'dictConfig version 1' format. At "
"present, this is the only dictConfig format version."
msgstr ""

# 979499372f844d1a81e7210a46b4247a
#: ../../topics/logging.txt:307
msgid "Disables all existing logging configurations."
msgstr ""

# e805471b4abe4beb95e20e9ccc9f4c1e
#: ../../topics/logging.txt:309
msgid "Defines two formatters:"
msgstr ""

# 88795b4e3cd7495fb07f82dce70f5009
#: ../../topics/logging.txt:311
msgid ""
"``simple``, that just outputs the log level name (e.g., ``DEBUG``) and the "
"log message."
msgstr ""

# a2847ffe20c34b1596cc95708518b026
#: ../../topics/logging.txt:314
msgid ""
"The ``format`` string is a normal Python formatting string describing the "
"details that are to be output on each logging line. The full list of detail "
"that can be output can be found in the `formatter documentation`_."
msgstr ""

# c933e376fcff488e99f26978ef4555eb
#: ../../topics/logging.txt:319
msgid ""
"``verbose``, that outputs the log level name, the log message, plus the "
"time, process, thread and module that generate the log message."
msgstr ""

# c8d959c4e06640b5b0bfe7c3cbaf9cf6
#: ../../topics/logging.txt:323
msgid ""
"Defines one filter -- ``project.logging.SpecialFilter``, using the alias "
"``special``. If this filter required additional arguments at time of "
"construction, they can be provided as additional keys in the filter "
"configuration dictionary. In this case, the argument ``foo`` will be given a"
" value of ``bar`` when instantiating the ``SpecialFilter``."
msgstr ""

# f752621c76a3470b97e78b2752fd794e
#: ../../topics/logging.txt:330
msgid "Defines three handlers:"
msgstr ""

# 4ecf3445c2994d99bc76065714dd9668
#: ../../topics/logging.txt:332
msgid ""
"``null``, a NullHandler, which will pass any ``DEBUG`` (or higher) message "
"to ``/dev/null``."
msgstr ""

# f5bde503658d4e2f8e622820e34c5a15
#: ../../topics/logging.txt:335
msgid ""
"``console``, a StreamHandler, which will print any ``DEBUG`` (or higher) "
"message to stderr. This handler uses the ``simple`` output format."
msgstr ""

# ccb259ced4ad423dbe2552244a661c45
#: ../../topics/logging.txt:339
msgid ""
"``mail_admins``, an AdminEmailHandler, which will email any ``ERROR`` (or "
"higher) message to the site admins. This handler uses the ``special`` "
"filter."
msgstr ""

# fa97e8c2c36e44348a09168ac1f1e2eb
#: ../../topics/logging.txt:343
msgid "Configures three loggers:"
msgstr ""

# 088c9fa14ff3484cbaed40966be9171a
#: ../../topics/logging.txt:345
msgid ""
"``django``, which passes all messages at ``INFO`` or higher to the ``null`` "
"handler."
msgstr ""

# 65ed5bc779e74c91a3f40e2b2c658bb8
#: ../../topics/logging.txt:348
msgid ""
"``django.request``, which passes all ``ERROR`` messages to the "
"``mail_admins`` handler. In addition, this logger is marked to *not* "
"propagate messages. This means that log messages written to "
"``django.request`` will not be handled by the ``django`` logger."
msgstr ""

# 073ccb9032454065bd7586fff37d0c38
#: ../../topics/logging.txt:354
msgid ""
"``myproject.custom``, which passes all messages at ``INFO`` or higher that "
"also pass the ``special`` filter to two handlers -- the ``console``, and "
"``mail_admins``. This means that all ``INFO`` level messages (or higher) "
"will be printed to the console; ``ERROR`` and ``CRITICAL`` messages will "
"also be output via email."
msgstr ""

# ccdb36280d1241ddbec6b926e9dc41a7
#: ../../topics/logging.txt:364
msgid "Custom logging configuration"
msgstr ""

# 95a2f8b201224124af5602af6b6f3d4e
#: ../../topics/logging.txt:366
msgid ""
"If you don't want to use Python's dictConfig format to configure your "
"logger, you can specify your own configuration scheme."
msgstr ""

# 6f51f246334e45eebd0fe635a673dc50
#: ../../topics/logging.txt:369
msgid ""
"The :setting:`LOGGING_CONFIG` setting defines the callable that will be used"
" to configure Django's loggers. By default, it points at Python's "
":func:`logging.config.dictConfig()` function. However, if you want to use a "
"different configuration process, you can use any other callable that takes a"
" single argument. The contents of :setting:`LOGGING` will be provided as the"
" value of that argument when logging is configured."
msgstr ""

# 6eeb569d9ac14fc2a81c3a8965300e7f
#: ../../topics/logging.txt:377
msgid "Disabling logging configuration"
msgstr ""

# 588af8b4baaf40e9a01b5f253821d4a9
#: ../../topics/logging.txt:379
msgid ""
"If you don't want to configure logging at all (or you want to manually "
"configure logging using your own approach), you can set "
":setting:`LOGGING_CONFIG` to ``None``. This will disable the configuration "
"process."
msgstr ""

# 63fa5925459944b1a32cbdf809f7b082
#: ../../topics/logging.txt:385
msgid ""
"Setting :setting:`LOGGING_CONFIG` to ``None`` only means that the "
"configuration process is disabled, not logging itself. If you disable the "
"configuration process, Django will still make logging calls, falling back to"
" whatever default logging behavior is defined."
msgstr ""

# 4f17ec29d1af4ec2b5964eec46fa002d
#: ../../topics/logging.txt:392
msgid "Django's logging extensions"
msgstr ""

# f15669b505a3484b8127761951daa7d5
#: ../../topics/logging.txt:394
msgid ""
"Django provides a number of utilities to handle the unique requirements of "
"logging in Web server environment."
msgstr ""

# 80c27b8e5db741aa906f78df566c56d3
#: ../../topics/logging.txt:400
msgid "Django provides four built-in loggers."
msgstr ""

# 37b45bdc8a7e4326989224ee9ece1e49
#: ../../topics/logging.txt:403
msgid "``django``"
msgstr ""

# 68ed9220325444e7ab0ef1fb7ce64e73
#: ../../topics/logging.txt:405
msgid ""
"``django`` is the catch-all logger. No messages are posted directly to this "
"logger."
msgstr ""

# 6ee066d83a12400ca542a6cba1c5d71f
#: ../../topics/logging.txt:409
msgid "``django.request``"
msgstr ""

# 0e7baa60c9754487b772346d28c27317
#: ../../topics/logging.txt:411
msgid ""
"Log messages related to the handling of requests. 5XX responses are raised "
"as ``ERROR`` messages; 4XX responses are raised as ``WARNING`` messages."
msgstr ""

# 704c46edc8d747fb85744883230f1f9f
# 3bd19c6a4ed54089855332a7f84eda78
#: ../../topics/logging.txt:415 ../../topics/logging.txt:430
msgid "Messages to this logger have the following extra context:"
msgstr ""

# 5861371d8a524a8396ec0f8201d434ef
#: ../../topics/logging.txt:417
msgid "``status_code``: The HTTP response code associated with the request."
msgstr ""

# 5b70632d718a4b0da8ad9c41c6a2288e
#: ../../topics/logging.txt:420
msgid "``request``: The request object that generated the logging message."
msgstr ""

# c9aecd1c868140b2ba48f48fe8e32a4b
#: ../../topics/logging.txt:424
msgid "``django.db.backends``"
msgstr ""

# 54df5093773d4b3092bfd06a84dd4dcc
#: ../../topics/logging.txt:426
msgid ""
"Messages relating to the interaction of code with the database. For example,"
" every SQL statement executed by a request is logged at the ``DEBUG`` level "
"to this logger."
msgstr ""

# d99ce69000a1410aa8d1496ecf50d83f
#: ../../topics/logging.txt:432
msgid "``duration``: The time taken to execute the SQL statement."
msgstr ""

# f813a8ec8f1e4f5881bcba362358d1f6
#: ../../topics/logging.txt:433
msgid "``sql``: The SQL statement that was executed."
msgstr ""

# bbebccb36d6d4933b465bc48425964ed
#: ../../topics/logging.txt:434
msgid "``params``: The parameters that were used in the SQL call."
msgstr ""

# cc3ad1b877d44b9198aa12b42720b39e
#: ../../topics/logging.txt:436
msgid ""
"For performance reasons, SQL logging is only enabled when ``settings.DEBUG``"
" is set to ``True``, regardless of the logging level or handlers that are "
"installed."
msgstr ""

# f37c7986d4504d088a85d6764e382dfa
#: ../../topics/logging.txt:441
msgid "``django.security.*``"
msgstr ""

# 74c621ea0cfc41e89b198d301cb8c483
#: ../../topics/logging.txt:443
msgid ""
"The security loggers will receive messages on any occurrence of "
":exc:`~django.core.exceptions.SuspiciousOperation`. There is a sub-logger "
"for each sub-type of SuspiciousOperation. The level of the log event depends"
" on where the exception is handled.  Most occurrences are logged as a "
"warning, while any ``SuspiciousOperation`` that reaches the WSGI handler "
"will be logged as an error. For example, when an HTTP ``Host`` header is "
"included in a request from a client that does not match "
":setting:`ALLOWED_HOSTS`, Django will return a 400 response, and an error "
"message will be logged to the ``django.security.DisallowedHost`` logger."
msgstr ""

# 634c51b9d9d64613a20a0c3ad7d5f562
#: ../../topics/logging.txt:453
msgid ""
"Only the parent ``django.security`` logger is configured by default, and all"
" child loggers will propagate to the parent logger. The ``django.security`` "
"logger is configured the same as the ``django.request`` logger, and any "
"error events will be mailed to admins. Requests resulting in a 400 response "
"due to a ``SuspiciousOperation`` will not be logged to the "
"``django.request`` logger, but only to the ``django.security`` logger."
msgstr ""

# 90c9d01adc604fd88d50425407befc29
#: ../../topics/logging.txt:460
msgid ""
"To silence a particular type of SuspiciousOperation, you can override that "
"specific logger following this example::"
msgstr ""

# 4a86f9251d3a4e25a06c213283e11d5c
#: ../../topics/logging.txt:472
msgid ""
"Django provides one log handler in addition to those provided by the Python "
"logging module."
msgstr ""

# 42b2edd58eaf4deab7b68edde9a8420b
#: ../../topics/logging.txt:477
msgid ""
"This handler sends an email to the site admins for each log message it "
"receives."
msgstr ""

# 1c7e08127acc4af7bad40dceb607e628
#: ../../topics/logging.txt:480
msgid ""
"If the log record contains a ``request`` attribute, the full details of the "
"request will be included in the email."
msgstr ""

# 3cf38677b5784803b6060d1844181bdc
#: ../../topics/logging.txt:483
msgid ""
"If the log record contains stack trace information, that stack trace will be"
" included in the email."
msgstr ""

# 4d5bcfd5ba1449c3af6a758f86c4d0c0
#: ../../topics/logging.txt:486
msgid ""
"The ``include_html`` argument of ``AdminEmailHandler`` is used to control "
"whether the traceback email includes an HTML attachment containing the full "
"content of the debug Web page that would have been produced if "
":setting:`DEBUG` were ``True``. To set this value in your configuration, "
"include it in the handler definition for "
"``django.utils.log.AdminEmailHandler``, like this::"
msgstr ""

# f809ef1e47934e2f80e9ae7b151c1f8a
#: ../../topics/logging.txt:501
msgid ""
"Note that this HTML version of the email contains a full traceback, with "
"names and values of local variables at each level of the stack, plus the "
"values of your Django settings. This information is potentially very "
"sensitive, and you may not want to send it over email. Consider using "
"something such as `Sentry`_ to get the best of both worlds -- the rich "
"information of full tracebacks plus the security of *not* sending the "
"information over email. You may also explicitly designate certain sensitive "
"information to be filtered out of error reports -- learn more on "
":ref:`Filtering error reports<filtering-error-reports>`."
msgstr ""

# 607646b90340431995b36c57c7599f87
#: ../../topics/logging.txt:513
msgid ""
"By setting the ``email_backend`` argument of ``AdminEmailHandler``, the "
":ref:`email backend <topic-email-backends>` that is being used by the "
"handler can be overridden, like this::"
msgstr ""

# be37b82d949c4f6bb12c9f16dd416fa4
#: ../../topics/logging.txt:525
msgid ""
"By default, an instance of the email backend specified in "
":setting:`EMAIL_BACKEND` will be used."
msgstr ""

# b7a60dd9042e450db6649b1293feb033
#: ../../topics/logging.txt:534
msgid ""
"Django provides two log filters in addition to those provided by the Python "
"logging module."
msgstr ""

# 8889db3401994f93a4bf33b2ee6059e9
#: ../../topics/logging.txt:539
msgid ""
"This filter accepts a callback function (which should accept a single "
"argument, the record to be logged), and calls it for each record that passes"
" through the filter. Handling of that record will not proceed if the "
"callback returns False."
msgstr ""

# c478ef74031448e3866a8b746e5a1db8
#: ../../topics/logging.txt:544
msgid ""
"For instance, to filter out :exc:`~django.http.UnreadablePostError` (raised "
"when a user cancels an upload) from the admin emails, you would create a "
"filter function::"
msgstr ""

# c7075274cf754c6bbfb0c478eb5f2bdc
#: ../../topics/logging.txt:557
msgid "and then add it to your logging config::"
msgstr ""

# 41489802148f4511976655d8da16d818
#: ../../topics/logging.txt:575
msgid "This filter will only pass on records when settings.DEBUG is False."
msgstr ""

# 70bb6dd9421f4a70b0e5fe6072a0a7fc
#: ../../topics/logging.txt:577
msgid ""
"This filter is used as follows in the default :setting:`LOGGING` "
"configuration to ensure that the :class:`AdminEmailHandler` only sends error"
" emails to admins when :setting:`DEBUG` is ``False``::"
msgstr ""

# 0499398ac71447e89b051607a4c8606f
#: ../../topics/logging.txt:598
msgid ""
"This filter is similar to :class:`RequireDebugFalse`, except that records "
"are passed only when :setting:`DEBUG` is ``True``."
msgstr ""

# 14d31d55e81d4ac79e6f9288c8826b2c
#: ../../topics/logging.txt:604
msgid "Django's default logging configuration"
msgstr ""

# ac0eefca4e45461289ecb7ac09439515
#: ../../topics/logging.txt:606
msgid ""
"By default, Django configures the ``django.request`` logger so that all "
"messages with ``ERROR`` or ``CRITICAL`` level are sent to "
":class:`AdminEmailHandler`, as long as the :setting:`DEBUG` setting is set "
"to ``False``."
msgstr ""

# 83084a2b80bf4d499b866d43faf392ff
#: ../../topics/logging.txt:610
msgid ""
"All messages reaching the ``django`` catch-all logger when :setting:`DEBUG` "
"is ``True`` are sent to the console. They are simply discarded (sent to "
"``NullHandler``) when :setting:`DEBUG` is ``False``."
msgstr ""

# 97293b770933403da4c3e39a311bbfd1
#: ../../topics/logging.txt:616
msgid ""
"Before Django 1.5, all messages reaching the ``django`` logger were "
"discarded, regardless of :setting:`DEBUG`."
msgstr ""

# 71e6a0ad8ed34d4f903205c1c07cca4d
#: ../../topics/logging.txt:619
msgid ""
"See also :ref:`Configuring logging <configuring-logging>` to learn how you "
"can complement or replace this default logging configuration."
msgstr ""

# af5b7b9d530b49d19f0d3cc1a47b073a
#: ../../topics/pagination.txt:3
msgid "Pagination"
msgstr "Pagination"

# cd032f7f2b434794af132ba34e85b4b2
#: ../../topics/pagination.txt:8
msgid ""
"Django provides a few classes that help you manage paginated data -- that "
"is, data that's split across several pages, with \"Previous/Next\" links. "
"These classes live in :file:`django/core/paginator.py`."
msgstr "Django fournit quelques classes qui aident à effectuer de la pagination de données, c'est-à-dire des données qui sont partagées en plusieurs pages, avec des liens « Précédent/Suivant ». Ces classes se trouvent dans :file:`django/core/paginator.py`."

# 7913a70310424314a7126defac07038d
#: ../../topics/pagination.txt:15
msgid ""
"Give :class:`Paginator` a list of objects, plus the number of items you'd "
"like to have on each page, and it gives you methods for accessing the items "
"for each page::"
msgstr "En donnant à :class:`Paginator` une liste d'objets ainsi que le nombre d'éléments souhaités sur chaque page, cette classe vous offre des méthodes pour accéder aux éléments des différentes pages ::"

# 8c53c91b859447b6b194677f0f0b33dd
#: ../../topics/pagination.txt:67
msgid ""
"Note that you can give ``Paginator`` a list/tuple, a Django ``QuerySet``, or"
" any other object with a ``count()`` or ``__len__()`` method. When "
"determining the number of objects contained in the passed object, "
"``Paginator`` will first try calling ``count()``, then fallback to using "
"``len()`` if the passed object has no ``count()`` method. This allows "
"objects such as Django's ``QuerySet`` to use a more efficient ``count()`` "
"method when available."
msgstr "Remarquez que vous pouvez donner à ``Paginator`` une liste/tuple, un ``QuerySet`` Django ou tout autre objet possédant une méthode `count()`` ou ``__len__()``. Pour déterminer le nombre d'objets contenus dans l'objet transmis, ``Paginator`` essaie d'abord d'appeler ``count()`` et se rabat sur ``len()`` si l'objet en question n'a pas de méthode ``count()``. Cela permet à des objets comme les ``QuerySet`` de Django d'utiliser une méthode ``count()`` plus efficace le cas échéant."

# 3947d712af204294ae7e580fe83b50d4
#: ../../topics/pagination.txt:77
msgid "Using ``Paginator`` in a view"
msgstr "Utilisation de ``Paginator`` dans une vue"

# ee7899516eaa4139863ddc095eaa2254
#: ../../topics/pagination.txt:79
msgid ""
"Here's a slightly more complex example using :class:`Paginator` in a view to"
" paginate a queryset. We give both the view and the accompanying template to"
" show how you can display the results. This example assumes you have a "
"``Contacts`` model that has already been imported."
msgstr "Voici un exemple un peu plus complexe qui utilise :class:`Paginator` dans une vue pour paginer un résultat de requête. Nous présentons à la fois la vue et le gabarit correspondant pour vous montrer comment afficher les résultats. Cet exemple part du principe qu'il existe un modèle ``Contacts`` qui a déjà été importé."

# c6a7af4ae3f348b4ac65f83280f7d1ba
#: ../../topics/pagination.txt:84
msgid "The view function looks like this::"
msgstr "La fonction de vue ressemble à ceci ::"

# 4b935104e4b947deaf1863ce540c7e1c
#: ../../topics/pagination.txt:104
msgid ""
"In the template :file:`list.html`, you'll want to include navigation between"
" pages along with any interesting information from the objects themselves::"
msgstr "Dans le gabarit :file:`list.html`, il est nécessaire d'inclure des éléments de navigation pour passer d'une page à l'autre, ainsi que des informations utiles sur les objets eux-mêmes ::"

# 463d2fa1a4ce4638a0b46f173d3f5e1e
#: ../../topics/pagination.txt:130
msgid "``Paginator`` objects"
msgstr "Objets ``Paginator``"

# 330a97e20deb41488bd3c51063ba15ea
#: ../../topics/pagination.txt:132
msgid "The :class:`Paginator` class has this constructor:"
msgstr "Voici le constructeur de la classe :class:`Paginator` :"

# a1004e7498e54e9eb864ae0e5461a5e0
#: ../../topics/pagination.txt:141
msgid "``object_list``"
msgstr "``object_list``"

# 412cb373093b4a07a62459b8f6c60a61
#: ../../topics/pagination.txt:140
msgid ""
"A list, tuple, Django ``QuerySet``, or other sliceable object with a "
"``count()`` or ``__len__()`` method."
msgstr "Une liste, un tuple, un ``QuerySet`` Django ou tout autre objet qu'il est possible de partager avec une méthode ``count()`` ou ``__len__()``."

# 687d082ebe4b4c34990f7af742a35ec1
#: ../../topics/pagination.txt:145
msgid "``per_page``"
msgstr "``per_page``"

# f864a3a71d1144458318d26165cab939
#: ../../topics/pagination.txt:144
msgid ""
"The maximum number of items to include on a page, not including orphans (see"
" the ``orphans`` optional argument below)."
msgstr "Le nombre maximum d'éléments à inclure dans une page, sans tenir compte des orphelins (voir le paramètre facultatif ``orphans`` ci-dessous)."

# 29df52d7127246a78365e21e56b96c79
#: ../../topics/pagination.txt:158
msgid "``orphans``"
msgstr "``orphans``"

# affb08722a7040cea18c0f0e52ee5c2f
#: ../../topics/pagination.txt:151
msgid ""
"The minimum number of items allowed on the last page, defaults to zero. Use "
"this when you don't want to have a last page with very few items. If the "
"last page would normally have a number of items less than or equal to "
"``orphans``, then those items will be added to the previous page (which "
"becomes the last page) instead of leaving the items on a page by themselves."
" For example, with 23 items, ``per_page=10``, and ``orphans=3``, there will "
"be two pages; the first page with 10 items and the  second (and last) page "
"with 13 items."
msgstr "Le nombre maximum d'éléments autorisés sur la dernière page, la valeur par défaut étant zéro. Utilisez ce paramètre lorsque vous ne souhaitez pas de dernière page avec très peu d'éléments. Lorsque la dernière page ne contient que le nombre ``orphans`` d'éléments ou moins, ces éléments sont alors ajoutés à la page précédente (qui devient la dernière page) au lieu de les laisser seuls sur une page. Par exemple, avec 23 éléments, ``per_page=10``  et ``orphans=3``, il y aura deux pages ; la première avec 10 éléments et la seconde (et dernière) avec 13 éléments."

# 10660ed1943a4cd7a703834f776335e7
#: ../../topics/pagination.txt:162
msgid "``allow_empty_first_page``"
msgstr "``allow_empty_first_page``"

# fb466d6d9c214b119889a4c683f201b9
#: ../../topics/pagination.txt:161
msgid ""
"Whether or not the first page is allowed to be empty.  If ``False`` and "
"``object_list`` is  empty, then an ``EmptyPage`` error will be raised."
msgstr "Indique si la première page peut être vide. Avec la valeur ``False`` et une liste ``object_list`` vide, une erreur ``EmptyPage`` sera produite."

# 38ef7bdfaf18465f84ded1c057a226b4
# 426a4acc3cca4e20bef62378d556a3ba
# 86e719aed4d24320900b905dc7b3d4f2
#: ../../topics/pagination.txt:165 ../../topics/pagination.txt:235
#: ../../topics/testing/advanced.txt:360
msgid "Methods"
msgstr "Méthodes"

# 9954168695a54d379e23948919d5760b
#: ../../topics/pagination.txt:169
msgid ""
"Returns a :class:`Page` object with the given 1-based index. Raises "
":exc:`InvalidPage` if the given page number doesn't exist."
msgstr "Renvoie un objet :class:`Page` correspondant à l'index ``number`` (commençant à 1). Si le numéro de page indiqué n'existe pas, une exception :exc:`InvalidPage` est levée."

# 45b0669d71f743d79e9f1fa71287814c
# 78528a9d1f6d417eadfee0162b322815
# 35fcc3dbc7b240b5839061db8ff89ce3
#: ../../topics/pagination.txt:173 ../../topics/pagination.txt:280
#: ../../topics/testing/advanced.txt:344
msgid "Attributes"
msgstr "Attributs"

# 8283cd8d6f614c70835f9809cc3b204e
#: ../../topics/pagination.txt:177
msgid "The total number of objects, across all pages."
msgstr "Le nombre total d'objets sur toutes les pages."

# 042e133b20f44441a28459d8de690fae
#: ../../topics/pagination.txt:181
msgid ""
"When determining the number of objects contained in ``object_list``, "
"``Paginator`` will first try calling ``object_list.count()``. If "
"``object_list`` has no ``count()`` method, then ``Paginator`` will fallback "
"to using ``len(object_list)``. This allows objects, such as Django's "
"``QuerySet``, to use a more efficient ``count()`` method when available."
msgstr "Lors de la détermination du nombre d'objets contenus dans ``object_list``, ``Paginator`` essaie d'abord d'appeler ``object_list.count()``. Si ``object_list`` n'a pas de méthode ``count()``, ``Paginator`` se rabat sur ``len(object_list)``. Cela permet à des objets comme les ``QuerySet`` de Django d'utiliser une méthode ``count()`` plus efficace le cas échéant."

# e4abf58902924308b86250e4cfda6927
#: ../../topics/pagination.txt:190
msgid "The total number of pages."
msgstr "Le nombre total de pages."

# 911a2cca8aa0462896b3e5da3761b40d
#: ../../topics/pagination.txt:194
msgid "A 1-based range of page numbers, e.g., ``[1, 2, 3, 4]``."
msgstr "Une série de numéros de pages commençant à 1, par ex: ``[1, 2, 3, 4]``."

# 6e6ca74f40b545e9aca85d6e72054a1d
#: ../../topics/pagination.txt:198
msgid "``InvalidPage`` exceptions"
msgstr "Exceptions ``InvalidPage``"

# 55732d251a9143109504642fa270b1fb
#: ../../topics/pagination.txt:202
msgid ""
"A base class for exceptions raised when a paginator is passed an invalid "
"page number."
msgstr "Une classe de base pour les exceptions levées lorsqu'un paginateur reçoit un numéro de page non valable."

# 37185cfa4e454c96bbad2277fdbe2793
#: ../../topics/pagination.txt:205
msgid ""
"The :meth:`Paginator.page` method raises an exception if the requested page "
"is invalid (i.e., not an integer) or contains no objects. Generally, it's "
"enough to trap the ``InvalidPage`` exception, but if you'd like more "
"granularity, you can trap either of the following exceptions:"
msgstr "La méthode :meth:`Paginator.page` lève une exception quand la page demandée n'est pas valable (par ex. ce n'est pas un nombre entier) ou quand elle ne contient aucun objet. Il est généralement suffisant d'intercepter l'exception ``InvalidPage``, mais si vous souhaitez plus de finesse, vous pouvez intercepter l'une des exceptions suivantes :"

# 7b890a70884941de9560cc0773940d5d
#: ../../topics/pagination.txt:212
msgid "Raised when ``page()`` is given a value that isn't an integer."
msgstr "Levée lorsque ``page()`` reçoit une valeur qui n'est pas un nombre entier."

# 4da5ccb641d844918d8479e53a5b3760
#: ../../topics/pagination.txt:216
msgid ""
"Raised when ``page()`` is given a valid value but no objects exist on that "
"page."
msgstr "Levée lorsque ``page()`` reçoit une valeur valable, mais que la page en question ne contient pas d'objet."

# 6fbaa3c60fd24736bc4d9c8925f0b854
#: ../../topics/pagination.txt:219
msgid ""
"Both of the exceptions are subclasses of :exc:`InvalidPage`, so you can "
"handle them both with a simple ``except InvalidPage``."
msgstr "Ces deux exceptions sont des sous-classes de :exc:`InvalidPage`, il est donc possible de les intercepter par une simple ligne ``except InvalidPage``."

# ac1d144f73c2430e82158bf39ebd49e7
#: ../../topics/pagination.txt:224
msgid "``Page`` objects"
msgstr "Objets ``Page``"

# 4baa604798f64356a99fa20b9f0b1745
#: ../../topics/pagination.txt:226
msgid ""
"You usually won't construct ``Page`` objects by hand -- you'll get them "
"using :meth:`Paginator.page`."
msgstr "Les objets ``Page`` ne sont normalement pas construits manuellement, mais plutôt obtenus en appelant :meth:`Paginator.page`."

# 146433ca6e7f4f78aba45bd364063017
#: ../../topics/pagination.txt:231
msgid ""
"A page acts like a sequence of :attr:`Page.object_list` when using ``len()``"
" or iterating it directly."
msgstr "Une page se comporte comme un liste de :attr:`Page.object_list` lorsqu'on lui applique ``len()`` ou qu'on effectue une itération sur elle."

# ea6aad94cea84e85812883bec67c4a51
#: ../../topics/pagination.txt:239
msgid "Returns ``True`` if there's a next page."
msgstr "Renvoie ``True`` s'il existe une page suivante."

# eb1542f50ebc4025ae6575a458616eb2
#: ../../topics/pagination.txt:243
msgid "Returns ``True`` if there's a previous page."
msgstr "Renvoie ``True`` s'il existe une page précédente."

# 48c818540c5b49b58173113536a486c1
#: ../../topics/pagination.txt:247
msgid "Returns ``True`` if there's a next *or* previous page."
msgstr "Renvoie ``True`` s'il existe une page suivante *ou* une page précédente."

# ea39281bb26346ffb5efe1a18e0e400d
#: ../../topics/pagination.txt:251
msgid "Returns the next page number."
msgstr "Renvoie le numéro de la prochaine page."

# 8535fc3a66a04a4eb2fc2f941150e967
#: ../../topics/pagination.txt:255
msgid "Raises :exc:`InvalidPage` if next page doesn't exist."
msgstr "Lève :exc:`InvalidPage` s'il n'y a pas de page suivante."

# 6125e63aee8c4c1faf8c70eaffd6103b
#: ../../topics/pagination.txt:259
msgid "Returns the previous page number."
msgstr "Renvoie le numéro de la prochaine précédente."

# 584879e0d2f643c1ab41dce535731e41
#: ../../topics/pagination.txt:263
msgid "Raises :exc:`InvalidPage` if previous page doesn't exist."
msgstr "Lève :exc:`InvalidPage` s'il n'y a pas de page précédente."

# ba21532640cb4076abe78c1186cfa09a
#: ../../topics/pagination.txt:267
msgid ""
"Returns the 1-based index of the first object on the page, relative to all "
"of the objects in the paginator's list. For example, when paginating a list "
"of 5 objects with 2 objects per page, the second page's "
":meth:`~Page.start_index` would return ``3``."
msgstr "Renvoie l'index (commençant par 1) du premier objet de la page, relatif à tous les autres objets de la liste du paginateur. Par exemple, lors de la pagination d'une liste de 5 objets par groupes de 2, la méthode :meth:`~Page.start_index` de la deuxième page renverrait ``3``."

# c93becd99fef42c791aea60b2b6a9a81
#: ../../topics/pagination.txt:274
msgid ""
"Returns the 1-based index of the last object on the page, relative to all of"
" the objects in the paginator's list. For example, when paginating a list of"
" 5 objects with 2 objects per page, the second page's "
":meth:`~Page.end_index` would return ``4``."
msgstr "Renvoie l'index (commençant par 1) du dernier objet de la page, relatif à tous les autres objets de la liste du paginateur. Par exemple, lors de la pagination d'une liste de 5 objets par groupes de 2, la méthode :meth:`~Page.end_index` de la deuxième page renverrait ``4``."

# 2ae26840cc75472d99d506be3e611497
#: ../../topics/pagination.txt:284
msgid "The list of objects on this page."
msgstr "La liste des objets de cette page."

# cb00807ebc404d139e81968cf805238b
#: ../../topics/pagination.txt:288
msgid "The 1-based page number for this page."
msgstr "Le numéro de page (commençant par 1) de cette page."

# 40bd901327b541bf96bff7eaa3108c4e
#: ../../topics/pagination.txt:292
msgid "The associated :class:`Paginator` object."
msgstr "L'objet :class:`Paginator` associé."

# 9956e01bb3dd4efc97e1260449dedd30
#: ../../topics/python3.txt:3
msgid "Porting to Python 3"
msgstr ""

# c2b116b3ecec4efba9d6b1702354fde3
#: ../../topics/python3.txt:5
msgid ""
"Django 1.5 is the first version of Django to support Python 3. The same code"
" runs both on Python 2 (≥ 2.6.5) and Python 3 (≥ 3.2), thanks to the six_ "
"compatibility layer."
msgstr ""

# 5677c9c6f45f4418bc322ae7a2cced42
#: ../../topics/python3.txt:11
msgid ""
"This document is primarily targeted at authors of pluggable application who "
"want to support both Python 2 and 3. It also describes guidelines that apply"
" to Django's code."
msgstr ""

# 5bb149e3e433410aa9378edae85918cd
# ecab215d90b84479b83e35fbf8f3af8f
# e04b5a6f9b3740cbb691eced39db502c
#: ../../topics/python3.txt:16 ../../topics/templates.txt:16
#: ../../topics/templates.txt:69
msgid "Philosophy"
msgstr "Philosophie"

# e867518e21fa4ab88827834d1f74e86d
#: ../../topics/python3.txt:18
msgid ""
"This document assumes that you are familiar with the changes between Python "
"2 and Python 3. If you aren't, read `Python's official porting guide`_ "
"first. Refreshing your knowledge of unicode handling on Python 2 and 3 will "
"help; the `Pragmatic Unicode`_ presentation is a good resource."
msgstr ""

# fd250479af794cdf8d0b20472f11af64
#: ../../topics/python3.txt:23
msgid ""
"Django uses the *Python 2/3 Compatible Source* strategy. Of course, you're "
"free to chose another strategy for your own code, especially if you don't "
"need to stay compatible with Python 2. But authors of pluggable applications"
" are encouraged to use the same porting strategy as Django itself."
msgstr ""

# add4bc2b5fc2408aa9d8238966308acb
#: ../../topics/python3.txt:28
msgid ""
"Writing compatible code is much easier if you target Python ≥ 2.6. Django "
"1.5 introduces compatibility tools such as :mod:`django.utils.six`, which is"
" a customized version of the :mod:`six module <six>`. For convenience, "
"forwards-compatible aliases were introduced in Django 1.4.2. If your "
"application takes advantage of these tools, it will require Django ≥ 1.4.2."
msgstr ""

# 25a023bce1b44b66920e33fe255a13ff
#: ../../topics/python3.txt:34
msgid ""
"Obviously, writing compatible source code adds some overhead, and that can "
"cause frustration. Django's developers have found that attempting to write "
"Python 3 code that's compatible with Python 2 is much more rewarding than "
"the opposite. Not only does that make your code more future-proof, but "
"Python 3's advantages (like the saner string handling) start shining "
"quickly. Dealing with Python 2 becomes a backwards compatibility "
"requirement, and we as developers are used to dealing with such constraints."
msgstr ""

# e7b459f24a1545a1af0542f7164d9575
#: ../../topics/python3.txt:42
msgid ""
"Porting tools provided by Django are inspired by this philosophy, and it's "
"reflected throughout this guide."
msgstr ""

# 2818aba4383447f2856d493a350bf83a
#: ../../topics/python3.txt:49
msgid "Porting tips"
msgstr ""

# a830943ca46145fcbe2798ec7815f4a9
#: ../../topics/python3.txt:52
msgid "Unicode literals"
msgstr ""

# 4a3157b0890b4c1d83e702bd73ff28f5
#: ../../topics/python3.txt:54
msgid "This step consists in:"
msgstr ""

# 8b8b6a09299a4f84aa5578814ab5c3b3
#: ../../topics/python3.txt:56
msgid ""
"Adding ``from __future__ import unicode_literals`` at the top of your Python"
" modules -- it's best to put it in each and every module, otherwise you'll "
"keep checking the top of your files to see which mode is in effect;"
msgstr ""

# bf29e3e803a14db19b513121cfebe024
#: ../../topics/python3.txt:59
msgid "Removing the ``u`` prefix before unicode strings;"
msgstr ""

# b14ee988c14f4eba918cfa4b99c96272
#: ../../topics/python3.txt:60
msgid "Adding a ``b`` prefix before bytestrings."
msgstr ""

# 8b4c361629ec455787848191d189930f
#: ../../topics/python3.txt:62
msgid ""
"Performing these changes systematically guarantees backwards compatibility."
msgstr ""

# 015deba363c34eec8e959d7589d47424
#: ../../topics/python3.txt:64
msgid ""
"However, Django applications generally don't need bytestrings, since Django "
"only exposes unicode interfaces to the programmer. Python 3 discourages "
"using bytestrings, except for binary data or byte-oriented interfaces. "
"Python 2 makes bytestrings and unicode strings effectively interchangeable, "
"as long as they only contain ASCII data. Take advantage of this to use "
"unicode strings wherever possible and avoid the ``b`` prefixes."
msgstr ""

# 24c1a760205d4918a774b8ef9b3e2379
#: ../../topics/python3.txt:73
msgid ""
"Python 2's ``u`` prefix is a syntax error in Python 3.2 but it will be "
"allowed again in Python 3.3 thanks to :pep:`414`. Thus, this transformation "
"is optional if you target Python ≥ 3.3. It's still recommended, per the "
"\"write Python 3 code\" philosophy."
msgstr ""

# 4793976712d54e508416b5a4f115361a
# 28371ffe08bf401c9ddd8ddbd8e7c1a7
#: ../../topics/python3.txt:79 ../../topics/python3.txt:339
msgid "String handling"
msgstr ""

# f86d624f06c94bde9777e9d2dd7fb192
#: ../../topics/python3.txt:81
msgid ""
"Python 2's :func:`unicode` type was renamed :func:`str` in Python 3, "
":func:`str` was renamed ``bytes()``, and :func:`basestring` disappeared. "
"six_ provides :ref:`tools <string-handling-with-six>` to deal with these "
"changes."
msgstr ""

# 8d05886552ba4f39967cd3c52b7aeffd
#: ../../topics/python3.txt:86
msgid ""
"Django also contains several string related classes and functions in the "
":mod:`django.utils.encoding` and :mod:`django.utils.safestring` modules. "
"Their names used the words ``str``, which doesn't mean the same thing in "
"Python 2 and Python 3, and ``unicode``, which doesn't exist in Python 3. In "
"order to avoid ambiguity and confusion these concepts were renamed ``bytes``"
" and ``text``."
msgstr ""

# d07c0cb65e6e4f728d35d6f31f3b38e8
#: ../../topics/python3.txt:93
msgid "Here are the name changes in :mod:`django.utils.encoding`:"
msgstr ""

# 8d042b938e2e4ccba5135f49398c31ae
# 0f7795ab38f14421b56a17de360527f8
#: ../../topics/python3.txt:96 ../../topics/python3.txt:120
msgid "Old name"
msgstr ""

# 4f1497efc6d34602b1f3c2675e6f65d6
# 87ed44610f084c17a9a970e5457ba814
#: ../../topics/python3.txt:96 ../../topics/python3.txt:120
msgid "New name"
msgstr ""

# 644facb1a82b40c482898dec650ba253
#: ../../topics/python3.txt:98
msgid "``smart_str``"
msgstr ""

# 7e2e7a96ea8f4e9fa8cf640a9aab887a
#: ../../topics/python3.txt:98
msgid "``smart_bytes``"
msgstr ""

# ff70693817c649129228cc839d7b1d5f
#: ../../topics/python3.txt:99
msgid "``smart_unicode``"
msgstr ""

# 77337f2fbf07471eba525334b88f9072
#: ../../topics/python3.txt:99
msgid "``smart_text``"
msgstr ""

# 592f58854d9a4fee82521237b8a0cab7
#: ../../topics/python3.txt:100
msgid "``force_unicode``"
msgstr ""

# 6f9c13ae9b6442b7b8a29b832932cb40
#: ../../topics/python3.txt:100
msgid "``force_text``"
msgstr ""

# 748c77290ffb44feb37cdec95e7b1991
#: ../../topics/python3.txt:103
msgid ""
"For backwards compatibility, the old names still work on Python 2. Under "
"Python 3, ``smart_str`` is an alias for ``smart_text``."
msgstr ""

# 448e2951945840e39892f8bb54e02b02
# 4af4998626a444b8b9256c06af837c50
#: ../../topics/python3.txt:106 ../../topics/python3.txt:132
msgid "For forwards compatibility, the new names work as of Django 1.4.2."
msgstr ""

# e61d89d8dc764f20b94b1118d4ea7577
#: ../../topics/python3.txt:110
msgid ""
":mod:`django.utils.encoding` was deeply refactored in Django 1.5 to provide "
"a more consistent API. Check its documentation for more information."
msgstr ""

# eb4124b86a6a4d429c57e582209c8d75
#: ../../topics/python3.txt:114
msgid ""
":mod:`django.utils.safestring` is mostly used via the "
":func:`~django.utils.safestring.mark_safe` and "
":func:`~django.utils.safestring.mark_for_escaping` functions, which didn't "
"change. In case you're using the internals, here are the name changes:"
msgstr ""

# ed7081713b1145a189d7583d48df7bc5
#: ../../topics/python3.txt:122
msgid "``EscapeString``"
msgstr ""

# c8f4992e814647d6af0e98ee290eef30
#: ../../topics/python3.txt:122
msgid "``EscapeBytes``"
msgstr ""

# 56ca4e0bfbee4e80a44ed0bac381dbb7
#: ../../topics/python3.txt:123
msgid "``EscapeUnicode``"
msgstr ""

# ad594f06b06643dc854e4c291f1fbca8
#: ../../topics/python3.txt:123
msgid "``EscapeText``"
msgstr ""

# 28f46b0eccd344a2b80f1cd34ab5cfa8
#: ../../topics/python3.txt:124
msgid "``SafeString``"
msgstr ""

# 6a243d5af23944f7b177fdc5cf3fcbdc
#: ../../topics/python3.txt:124
msgid "``SafeBytes``"
msgstr ""

# 591280270b8648cda26683a54ece55e3
#: ../../topics/python3.txt:125
msgid "``SafeUnicode``"
msgstr ""

# 9a6d70f44a3542fa83a05cb808383056
#: ../../topics/python3.txt:125
msgid "``SafeText``"
msgstr ""

# cff62ea40872403088c293b965e1678b
#: ../../topics/python3.txt:128
msgid ""
"For backwards compatibility, the old names still work on Python 2. Under "
"Python 3, ``EscapeString`` and ``SafeString`` are aliases for ``EscapeText``"
" and ``SafeText`` respectively."
msgstr ""

# 6f17925368f5423aa4d56fbd4b3f3d47
#: ../../topics/python3.txt:135
msgid ":meth:`~object.__str__` and :meth:`~object.__unicode__` methods"
msgstr ""

# 56765d47713b4c6bac8631ffee178c94
#: ../../topics/python3.txt:137
msgid ""
"In Python 2, the object model specifies :meth:`~object.__str__` and "
":meth:`~object.__unicode__` methods. If these methods exist, they must "
"return ``str`` (bytes) and ``unicode`` (text) respectively."
msgstr ""

# c9a30fc957974ac39700b98523154816
#: ../../topics/python3.txt:141
msgid ""
"The ``print`` statement and the :func:`str` built-in call "
":meth:`~object.__str__` to determine the human-readable representation of an"
" object. The :func:`unicode` built-in calls :meth:`~object.__unicode__` if "
"it exists, and otherwise falls back to :meth:`~object.__str__` and decodes "
"the result with the system encoding. Conversely, the "
":class:`~django.db.models.Model` base class automatically derives "
":meth:`~object.__str__` from :meth:`~object.__unicode__` by encoding to "
"UTF-8."
msgstr ""

# faf42e99e3e946c5bbaee2371e620e78
#: ../../topics/python3.txt:149
msgid ""
"In Python 3, there's simply :meth:`~object.__str__`, which must return "
"``str`` (text)."
msgstr ""

# 7d36bbaa1ba442ba8320198b9f76f9e3
#: ../../topics/python3.txt:152
msgid ""
"(It is also possible to define ``__bytes__()``, but Django application have "
"little use for that method, because they hardly ever deal with ``bytes``.)"
msgstr ""

# c8e5d4e3d55d409fbd866d43cd5ed656
#: ../../topics/python3.txt:156
msgid ""
"Django provides a simple way to define :meth:`~object.__str__` and "
":meth:`~object.__unicode__` methods that work on Python 2 and 3: you must "
"define a :meth:`~object.__str__` method returning text and to apply the "
":func:`~django.utils.encoding.python_2_unicode_compatible` decorator."
msgstr ""

# 4dc102d118a94468bfe9d63cfed8f7a2
#: ../../topics/python3.txt:161
msgid ""
"On Python 3, the decorator is a no-op. On Python 2, it defines appropriate "
":meth:`~object.__unicode__` and :meth:`~object.__str__` methods (replacing "
"the original :meth:`~object.__str__` method in the process). Here's an "
"example::"
msgstr ""

# e11a5ac5fd8f4572b9315fcac29103f0
#: ../../topics/python3.txt:173
msgid "This technique is the best match for Django's porting philosophy."
msgstr ""

# 2fb1f4e8084144989e8855c46934dbe4
#: ../../topics/python3.txt:175
msgid ""
"For forwards compatibility, this decorator is available as of Django 1.4.2."
msgstr ""

# 19f0640faacc481296774fd5a99b15a3
#: ../../topics/python3.txt:177
msgid ""
"Finally, note that :meth:`~object.__repr__` must return a ``str`` on all "
"versions of Python."
msgstr ""

# 0ae3d8cf4a064d109a9426e6069ae571
#: ../../topics/python3.txt:181
msgid ":class:`dict` and :class:`dict`-like classes"
msgstr ""

# 26ef1f44f88f437eadce806c6c2f4a42
#: ../../topics/python3.txt:183
msgid ""
":meth:`dict.keys`, :meth:`dict.items` and :meth:`dict.values` return lists "
"in Python 2 and iterators in Python 3. :class:`~django.http.QueryDict` and "
"the :class:`dict`-like classes defined in :mod:`django.utils.datastructures`"
" behave likewise in Python 3."
msgstr ""

# 682c9bb08c1d409bbb83d53782d8b5a6
#: ../../topics/python3.txt:188
msgid ""
"six_ provides compatibility functions to work around this change: "
":func:`~six.iterkeys`, :func:`~six.iteritems`, and :func:`~six.itervalues`. "
"It also contains an undocumented ``iterlists`` function that works well for "
"``django.utils.datastructures.MultiValueDict`` and its subclasses."
msgstr ""

# f00bffa16d154185abedacab23cb107c
#: ../../topics/python3.txt:194
msgid ""
":class:`~django.http.HttpRequest` and :class:`~django.http.HttpResponse` "
"objects"
msgstr ""

# 180dede35a304c8f9a602be4db6fcbc2
#: ../../topics/python3.txt:196
msgid "According to :pep:`3333`:"
msgstr ""

# 04bedb8d28c940d981766fe10c31f620
#: ../../topics/python3.txt:198
msgid "headers are always ``str`` objects,"
msgstr ""

# 722fdf6445b849ff80d14fbb62798b12
#: ../../topics/python3.txt:199
msgid "input and output streams are always ``bytes`` objects."
msgstr ""

# 5bb9ab8cfd12417a84f9976f5be1b2e1
#: ../../topics/python3.txt:201
msgid ""
"Specifically, :attr:`HttpResponse.content "
"<django.http.HttpResponse.content>` contains ``bytes``, which may become an "
"issue if you compare it with a ``str`` in your tests. The preferred solution"
" is to rely on :meth:`~django.test.SimpleTestCase.assertContains` and "
":meth:`~django.test.SimpleTestCase.assertNotContains`. These methods accept "
"a response and a unicode string as arguments."
msgstr ""

# d2ddb246abaa4fb481fb183205b0b53d
#: ../../topics/python3.txt:209
msgid "Coding guidelines"
msgstr ""

# cfc269e47aee4265bcef4b19c6b511d9
#: ../../topics/python3.txt:211
msgid ""
"The following guidelines are enforced in Django's source code. They're also "
"recommended for third-party application who follow the same porting "
"strategy."
msgstr ""

# 67f46c102a7c44b5a4cb86a00d02dbb7
#: ../../topics/python3.txt:215
msgid "Syntax requirements"
msgstr ""

# 07cadf88dfb5487bb827f072b760ddc6
#: ../../topics/python3.txt:218
msgid "Unicode"
msgstr ""

# ed225dfba09f4da4afd17975dc2e2409
#: ../../topics/python3.txt:220
msgid ""
"In Python 3, all strings are considered Unicode by default. The ``unicode`` "
"type from Python 2 is called ``str`` in Python 3, and ``str`` becomes "
"``bytes``."
msgstr ""

# b6d82ee33d2f45ad88be4466c29a7340
#: ../../topics/python3.txt:224
msgid ""
"You mustn't use the ``u`` prefix before a unicode string literal because "
"it's a syntax error in Python 3.2. You must prefix byte strings with ``b``."
msgstr ""

# d0d9c3fd1cbe4c80985db1d4263de55d
#: ../../topics/python3.txt:227
msgid ""
"In order to enable the same behavior in Python 2, every module must import "
"``unicode_literals`` from ``__future__``::"
msgstr ""

# ceb894522c3f4193bc1f98daf0fd23ac
#: ../../topics/python3.txt:235
msgid ""
"If you need a byte string literal under Python 2 and a unicode string "
"literal under Python 3, use the :func:`str` builtin::"
msgstr ""

# 8d04d6ac360a42c0a22dcb243009d72b
#: ../../topics/python3.txt:240
msgid ""
"In Python 3, there aren't any automatic conversions between ``str`` and "
"``bytes``, and the :mod:`codecs` module became more strict. "
":meth:`str.encode` always returns ``bytes``, and ``bytes.decode`` always "
"returns ``str``. As a consequence, the following pattern is sometimes "
"necessary::"
msgstr ""

# cd702072d75145dc83121d99b77119a1
#: ../../topics/python3.txt:247
msgid "Be cautious if you have to `index bytestrings`_."
msgstr ""

# 30249366c4a0454dba60891177f06ff7
# 34cd21dd79c84dcfab2b789f582250c9
#: ../../topics/python3.txt:252 ../../topics/testing/overview.txt:764
msgid "Exceptions"
msgstr "Exceptions"

# 640e9d9aae254ed0919641657ba8942e
#: ../../topics/python3.txt:254
msgid "When you capture exceptions, use the ``as`` keyword::"
msgstr ""

# e0357fca6c86428c8176648c3a13063b
#: ../../topics/python3.txt:261
msgid "This older syntax was removed in Python 3::"
msgstr ""

# a51113f7c4c743a8b33db44d3487f8fd
#: ../../topics/python3.txt:268
msgid ""
"The syntax to reraise an exception with a different traceback also changed. "
"Use :func:`six.reraise`."
msgstr ""

# 336f9fe66173443fbdb040f4bff70024
#: ../../topics/python3.txt:272
msgid "Magic methods"
msgstr ""

# b7a3e7479c20449f8b2a167ad052a417
#: ../../topics/python3.txt:274
msgid "Use the patterns below to handle magic methods renamed in Python 3."
msgstr ""

# de878a8fb62946e1a49ce83ae9de7ba3
#: ../../topics/python3.txt:277
msgid "Iterators"
msgstr ""

# 7732cf9b7fd141e4963039a9fc49781a
#: ../../topics/python3.txt:289
msgid "Boolean evaluation"
msgstr ""

# 53cca008770546d1a04023b64bf50dec
#: ../../topics/python3.txt:302
msgid "Division"
msgstr ""

# dae6a92410684ee1b530f0b7eccfca57
#: ../../topics/python3.txt:320
msgid ""
"Special methods are looked up on the class and not on the instance to "
"reflect the behavior of the Python interpreter."
msgstr ""

# b726e58b1b3e4479bc0200849e4f3cd7
#: ../../topics/python3.txt:326
msgid "Writing compatible code with six"
msgstr ""

# 2139dd8ffad24ec9b2852ab942cdc677
#: ../../topics/python3.txt:328
msgid ""
"six_ is the canonical compatibility library for supporting Python 2 and 3 in"
" a single codebase. Read its documentation!"
msgstr ""

# 9673a6a044844568b91104afdf79a363
#: ../../topics/python3.txt:331
msgid ""
"A :mod:`customized version of six <django.utils.six>` is bundled with Django"
" as of version 1.4.2. You can import it as ``django.utils.six``."
msgstr ""

# ac487e4194d444a18ec23219c5cfd234
#: ../../topics/python3.txt:334
msgid "Here are the most common changes required to write compatible code."
msgstr ""

# b3fdf052ca764c61a56840374784e7e6
#: ../../topics/python3.txt:341
msgid ""
"The ``basestring`` and ``unicode`` types were removed in Python 3, and the "
"meaning of ``str`` changed. To test these types, use the following idioms::"
msgstr ""

# 14a5c4e5ca55462cb54488aa0b0103c3
#: ../../topics/python3.txt:348
msgid ""
"Python ≥ 2.6 provides ``bytes`` as an alias for ``str``, so you don't need "
":data:`six.binary_type`."
msgstr ""

# 2a9836504aa043dc9df828ba31540a36
#: ../../topics/python3.txt:352
msgid "``long``"
msgstr ""

# 32abfdcc2a6e4d5ea5a9bd352cdd46ae
#: ../../topics/python3.txt:354
msgid ""
"The ``long`` type no longer exists in Python 3. ``1L`` is a syntax error. "
"Use :data:`six.integer_types` check if a value is an integer or a long::"
msgstr ""

# a622116849874fca9546c253f0236b14
#: ../../topics/python3.txt:360
msgid "``xrange``"
msgstr ""

# c1acc9d969134684882806a028082644
#: ../../topics/python3.txt:362
msgid "Import ``six.moves.xrange`` wherever you use ``xrange``."
msgstr ""

# 70a49595dcf94bf0a2a7b5c586d797fb
#: ../../topics/python3.txt:365
msgid "Moved modules"
msgstr ""

# 69fd337089fa4bc0b7287f81a4679cd9
#: ../../topics/python3.txt:367
msgid ""
"Some modules were renamed in Python 3. The ``django.utils.six.moves`` module"
" (based on the :mod:`six.moves module <six.moves>`) provides a compatible "
"location to import them."
msgstr ""

# 3a13d83dd90541459716698e77151bfb
#: ../../topics/python3.txt:372
msgid "PY2"
msgstr ""

# 374014de94074848a01a3b80a197da73
#: ../../topics/python3.txt:374
msgid ""
"If you need different code in Python 2 and Python 3, check :data:`six.PY2`::"
msgstr ""

# ab3c9e41685c4fd9b542ca97a193b796
#: ../../topics/python3.txt:379
msgid ""
"This is a last resort solution when :mod:`six` doesn't provide an "
"appropriate function."
msgstr ""

# bb4a341030194a42b547233eeed93bc7
#: ../../topics/python3.txt:385
msgid "Django customized version of six"
msgstr ""

# cd1c2b9fba5f4f369f0f3222d7babeab
#: ../../topics/python3.txt:387
msgid ""
"The version of six bundled with Django (``django.utils.six``) includes a few"
" extras."
msgstr ""

# 39bf6e6414084faabd008d20f5f2abe8
#: ../../topics/python3.txt:392
msgid ""
"This replaces ``testcase.assertRaisesRegexp`` on Python 2, and "
"``testcase.assertRaisesRegex`` on Python 3. ``assertRaisesRegexp`` still "
"exists in current Python 3 versions, but issues a warning."
msgstr ""

# 68892db890864aa7a1950f0cde7668ef
#: ../../topics/python3.txt:398
msgid ""
"This replaces ``testcase.assertRegexpMatches`` on Python 2, and "
"``testcase.assertRegex`` on Python 3. ``assertRegexpMatches`` still exists "
"in current Python 3 versions, but issues a warning."
msgstr ""

# 48f02bcb39ae463c8dbd34946369cfce
#: ../../topics/python3.txt:403
msgid ""
"In addition to six' defaults moves, Django's version provides ``thread`` as "
"``_thread`` and ``dummy_thread`` as ``_dummy_thread``."
msgstr ""

# 0c286ee00ab44c618783202b3c31aa61
#: ../../topics/security.txt:3
msgid "Security in Django"
msgstr "La sécurité dans Django"

# cf7f6155309547af8285a91842556328
#: ../../topics/security.txt:5
msgid ""
"This document is an overview of Django's security features. It includes "
"advice on securing a Django-powered site."
msgstr "Ce document est un aperçu des fonctionnalités de sécurité dans Django. Il contient des conseils sur la sécurisation des sites basés sur Django."

# 5d1bbe0d4a30438a81d5eab7aa446904
#: ../../topics/security.txt:11
msgid "Cross site scripting (XSS) protection"
msgstr "Protection contre le « Cross site scripting » (XSS)"

# 25f184ab41434c81a900e260fae61945
#: ../../topics/security.txt:15
msgid ""
"XSS attacks allow a user to inject client side scripts into the browsers of "
"other users. This is usually achieved by storing the malicious scripts in "
"the database where it will be retrieved and displayed to other users, or by "
"getting users to click a link which will cause the attacker's JavaScript to "
"be executed by the user's browser. However, XSS attacks can originate from "
"any untrusted source of data, such as cookies or Web services, whenever the "
"data is not sufficiently sanitized before including in a page."
msgstr "Les attaques XSS permettent à un intrus d'injecter des scripts clients dans les navigateurs des utilisateurs. Le principe général est de stocker les scripts malveillants dans la base de données d'où ils seront repris et affichés pour d'autres utilisateurs, ou encore d'amener les utilisateurs à cliquer sur un lien qui va provoquer l'exécution du JavaScript de l'attaquant dans le navigateur des utilisateurs. Cependant, les attaques XSS peuvent provenir de n'importe quelle source de données non fiable, comme les cookies ou les services Web, à chaque fois que les données ne sont pas suffisamment nettoyées avant d'être incluses dans une page."

# 991d80e0f60945a78490a9c796f9e5de
#: ../../topics/security.txt:23
msgid ""
"Using Django templates protects you against the majority of XSS attacks. "
"However, it is important to understand what protections it provides and its "
"limitations."
msgstr "L'utilisation des gabarits Django vous protège de la majorité des attaques XSS. Cependant, il est important de comprendre les protections appliquées et leurs limites."

# c4128d8d4bf3413886ffe2c17b225fc9
#: ../../topics/security.txt:27
msgid ""
"Django templates :ref:`escape specific characters <automatic-html-escaping>`"
" which are particularly dangerous to HTML. While this protects users from "
"most malicious input, it is not entirely foolproof. For example, it will not"
" protect the following:"
msgstr "Les gabarits de Django :ref:`échappent des caractères spécifiques <automatic-html-escaping>` qui sont particulièrement dangereux en HTML. Bien que cela protège les utilisateurs de la plupart des saisies malveillantes, cela ne constitue pas une protection absolue. Par exemple, cela ne protège pas contre ceci :"

# e6f914e1897f4a62a736fa670407b5f2
#: ../../topics/security.txt:36
msgid ""
"If ``var`` is set to ``'class1 onmouseover=javascript:func()'``, this can "
"result in unauthorized JavaScript execution, depending on how the browser "
"renders imperfect HTML."
msgstr "Si ``var`` contient ``'class1 onmouseover=javascript:func()'``, cela peut amener à une exécution de JavaScript non autorisée, selon la manière dont le navigateur produit le HTML imparfait."

# 97a8220f99f244988ee49afa2bcdd5f5
#: ../../topics/security.txt:40
msgid ""
"It is also important to be particularly careful when using ``is_safe`` with "
"custom template tags, the :tfilter:`safe` template tag, :mod:`mark_safe "
"<django.utils.safestring>`, and when autoescape is turned off."
msgstr "Il est aussi important d'être particulièrement prudent lors de l'utilisation de ``is_safe`` avec des balises de gabarit personnalisées, avec la balise de gabarit :tfilter:`safe`, avec :mod:`mark_safe <django.utils.safestring>` et quand l'échappement automatique est désactivé."

# dc2e8f0e97624d409df09d6e42f40936
#: ../../topics/security.txt:44
msgid ""
"In addition, if you are using the template system to output something other "
"than HTML, there may be entirely separate characters and words which require"
" escaping."
msgstr "De plus, si vous utilisez le système des gabarits pour produire du contenu autre que du HTML, les caractères et les mots nécessitant l'échappement peuvent être totalement différents."

# 2c8e2c8ceb1d43e385baf082c284801e
#: ../../topics/security.txt:48
msgid ""
"You should also be very careful when storing HTML in the database, "
"especially when that HTML is retrieved and displayed."
msgstr "Vous devez aussi être très prudent lorsque vous stockez du code HTML dans la base de données, en particulier quand ce contenu est sélectionné et affiché."

# e7be4684904245d1b18c9cc28b28120f
#: ../../topics/security.txt:53
msgid "Cross site request forgery (CSRF) protection"
msgstr "Protection contre le « Cross site request forgery » (CSRF)"

# 840cf0ba3b9a4379aa903ea85d81dc50
#: ../../topics/security.txt:55
msgid ""
"CSRF attacks allow a malicious user to execute actions using the credentials"
" of another user without that user's knowledge or consent."
msgstr "Les attaques CSRF permettent à une personne malveillante d'exécuter des actions en utilisant les données d'authentification d'un autre utilisateur sans que ce dernier ne s'en rende compte."

# 885130efe7f0401f9957301a0cf2f5ef
#: ../../topics/security.txt:58
msgid ""
"Django has built-in protection against most types of CSRF attacks, providing"
" you have :ref:`enabled and used it <using-csrf>` where appropriate. "
"However, as with any mitigation technique, there are limitations. For "
"example, it is possible to disable the CSRF module globally or for "
"particular views. You should only do this if you know what you are doing. "
"There are other :ref:`limitations <csrf-limitations>` if your site has "
"subdomains that are outside of your control."
msgstr "Django offre une protection intégrée contre la plupart des types d'attaques CSRF, pour autant que vous l'ayez :ref:`activée et que vous l'utilisiez <using-csrf>` de manière appropriée. Toutefois, comme pour toute technique de protection, elle est limitée. Par exemple, il est possible de désactiver le module CSRF de manière globale ou pour certaines vues. Vous ne devriez le faire que si vous savez ce que vous faites. Il existe d':ref:`autres limites <csrf-limitations>` si votre site contient des sous-domaines qui ne sont pas sous votre contrôle."

# 74e7d4f5e0704c59ab0ad0bd0edc23ff
#: ../../topics/security.txt:66
msgid ""
":ref:`CSRF protection works <how-csrf-works>` by checking for a nonce in "
"each POST request. This ensures that a malicious user cannot simply "
"\"replay\" a form POST to your Web site and have another logged in user "
"unwittingly submit that form. The malicious user would have to know the "
"nonce, which is user specific (using a cookie)."
msgstr "La :ref:`protection CSRF fonctionne <how-csrf-works>` en contrôlant un jeton dans chaque requête POST. Cela garantit qu'un utilisateur malveillant ne peut simplement « rejouer » un envoi de formulaire POST sur votre site Web tout en faisant soumettre ce formulaire de manière involontaire par un autre utilisateur connecté. L'utilisateur malveillant devrait connaître le jeton qui est spécifique à l'utilisateur (en utilisant un cookie)."

# f5c45fbe85bb42c5b31e5d40af9f5750
#: ../../topics/security.txt:72
msgid ""
"When deployed with :ref:`HTTPS <security-recommendation-ssl>`, "
"``CsrfViewMiddleware`` will check that the HTTP referer header is set to a "
"URL on the same origin (including subdomain and port). Because HTTPS "
"provides additional security, it is imperative to ensure connections use "
"HTTPS where it is available by forwarding insecure connection requests and "
"using HSTS for supported browsers."
msgstr "Lorsqu'il est déployé avec :ref:`HTTPS <security-recommendation-ssl>`, ``CsrfViewMiddleware`` vérifie que l'en-tête « HTTP referer » contient une URL de même origine (y compris le sous-domaine et le port). Comme HTTPS offre une sécurité supplémentaire, il est impératif de s'assurer que les connexions utilisent HTTPS quand c'est possible en redirigeant les requêtes de connexion non sécurisées et en utilisant HSTS pour les navigateurs qui le prennent en charge."

# 6e733b8313c947aa857023cd3ea3290d
#: ../../topics/security.txt:79
msgid ""
"Be very careful with marking views with the ``csrf_exempt`` decorator unless"
" it is absolutely necessary."
msgstr "Soyez très prudent lorsque vous adaptez des vues avec le décorateur ``csrf_exempt`` et ne le faites qu'en cas d'absolue nécessité."

# 2bd4d4807ff747f882be752cbe1e7388
#: ../../topics/security.txt:84
msgid "SQL injection protection"
msgstr "Protection contre l'injection SQL"

# c5a357a5f5544feea62d25033b35c21b
#: ../../topics/security.txt:86
msgid ""
"SQL injection is a type of attack where a malicious user is able to execute "
"arbitrary SQL code on a database. This can result in records being deleted "
"or data leakage."
msgstr "L'injection SQL est un type d'attaque où un utilisateur malveillant est capable d'exécuter du code SQL arbitraire sur une base de données. Il peut en résulter des suppressions d'enregistrements ou des divulgations de données."

# 21579d83e9d7441b87691fd0d2282952
#: ../../topics/security.txt:90
msgid ""
"By using Django's querysets, the resulting SQL will be properly escaped by "
"the underlying database driver. However, Django also gives developers power "
"to write :ref:`raw queries <executing-raw-queries>` or execute :ref:`custom "
"sql <executing-custom-sql>`. These capabilities should be used sparingly and"
" you should always be careful to properly escape any parameters that the "
"user can control. In addition, you should exercise caution when using "
":meth:`extra() <django.db.models.query.QuerySet.extra>`."
msgstr "En utilisant des requêtes Django de type ``QuerySet`` , le code SQL produit est proprement échappé par le pilote de base de données sous-jacent. Cependant, Django permet aussi aux développeurs d'écrire des :ref:`requêtes brutes <executing-raw-queries>` ou d'exécuter du :ref:`code SQL personnalisé <executing-custom-sql>`. Ces possibilités devraient être exploitées de manière parcimonieuse et il faut toujours prendre la précaution d'échapper proprement tout paramètre pouvant être contrôlé par l'utilisateur. De plus, il faut être prudent en utilisant :meth:`extra() <django.db.models.query.QuerySet.extra>`."

# abeb1b72ce494368a580f2cfe1481be8
#: ../../topics/security.txt:99
msgid "Clickjacking protection"
msgstr "Protection contre le détournement de clic (« clickjacking »)"

# 8fd4f9ea03d74c51b15b9df357f9972e
#: ../../topics/security.txt:101
msgid ""
"Clickjacking is a type of attack where a malicious site wraps another site "
"in a frame. This attack can result in an unsuspecting user being tricked "
"into performing unintended actions on the target site."
msgstr "Le détournement de clic est un type d'attaque où un site malveillant intègre un autre site dans un cadre. Cette attaque peut amener un utilisateur à cliquer de manière non désirée pour effectuer des actions non volontaires sur le site ciblé."

# c7437496bdd0465cae76c016d3fb0815
#: ../../topics/security.txt:105
msgid ""
"Django contains :ref:`clickjacking protection <clickjacking-prevention>` in "
"the form of the :mod:`X-Frame-Options middleware "
"<django.middleware.clickjacking.XFrameOptionsMiddleware>` which in a "
"supporting browser can prevent a site from being rendered inside a frame. It"
" is possible to disable the protection on a per view basis or to configure "
"the exact header value sent."
msgstr "Django intègre une :ref:`protection contre le détournement de clic <clickjacking-prevention>` sous la forme de l':mod:`intergiciel X-Frame-Options <django.middleware.clickjacking.XFrameOptionsMiddleware>` qui, dans un navigateur qui le prend en charge, peut empêcher un site d'être affiché à l'intérieur d'un cadre. Il est possible de désactiver cette protection par vue ou de configurer la valeur exacte de l'en-tête envoyé."

# c133333eb52e4a719684431c865d8f00
#: ../../topics/security.txt:112
msgid ""
"The middleware is strongly recommended for any site that does not need to "
"have its pages wrapped in a frame by third party sites, or only needs to "
"allow that for a small section of the site."
msgstr "Cet intergiciel est fortement recommandé pour tout site qui n'a pas besoin de voir ses pages affichées dans un cadre par des sites tiers ou qui n'en a besoin que pour une section limitée du site."

# 4f758bf6900340e18995f3ec8baba7e8
#: ../../topics/security.txt:119
msgid "SSL/HTTPS"
msgstr "SSL/HTTPS"

# 4199eb21c30e41ab9f2c1ea8997bc526
#: ../../topics/security.txt:121
msgid ""
"It is always better for security, though not always practical in all cases, "
"to deploy your site behind HTTPS. Without this, it is possible for malicious"
" network users to sniff authentication credentials or any other information "
"transferred between client and server, and in some cases -- **active** "
"network attackers -- to alter data that is sent in either direction."
msgstr "Le déploiement de votre site en HTTPS est toujours mieux pour la sécurité, même si ce n'est pas toujours réalisable. Sans cela, il est possible que des utilisateurs malveillants du réseau interceptent des données d'authentification ou toute autre information transférée entre le client et le serveur et, dans certains cas, pour des attaquants réseau **actifs**, que des données soient modifiées au passage, dans l'une ou l'autre direction."

# 84a3dcef1c3b49cc9377c92cb9abae86
#: ../../topics/security.txt:127
msgid ""
"If you want the protection that HTTPS provides, and have enabled it on your "
"server, there are some additional steps you may need:"
msgstr "Si vous souhaitez profiter de la protection ajoutée par HTTPS et l'activer sur votre serveur, il peut être nécessaire de procéder à quelques étapes supplémentaires :"

# 6030139524e04132b42a3ded78977ab7
#: ../../topics/security.txt:130
msgid ""
"If necessary, set :setting:`SECURE_PROXY_SSL_HEADER`, ensuring that you have"
" understood the warnings there thoroughly. Failure to do this can result in "
"CSRF vulnerabilities, and failure to do it correctly can also be dangerous!"
msgstr "Si nécessaire, définissez :setting:`SECURE_PROXY_SSL_HEADER`, en prenant soin de bien comprendre les avertissements correspondants. Sinon, cela pourrait provoquer des vulnérabilités CSRF, et son application incorrecte peut aussi être dangereuse !"

# ba2a1d17af67420289df94955bf4d203
#: ../../topics/security.txt:135
msgid "Set up redirection so that requests over HTTP are redirected to HTTPS."
msgstr "Configurez une redirection pour que les requêtes HTTP soient redirigées vers HTTPS."

# 03abf91c9f9e4592876e47fb52adf0b8
#: ../../topics/security.txt:137
msgid ""
"This could be done using a custom middleware. Please note the caveats under "
":setting:`SECURE_PROXY_SSL_HEADER`. For the case of a reverse proxy, it may "
"be easier or more secure to configure the main Web server to do the redirect"
" to HTTPS."
msgstr "Cela peut être effectué avec un intergiciel personnalisé. Prenez bonne note des mises en garde de :setting:`SECURE_PROXY_SSL_HEADER`. Dans le cas d'un serveur mandataire inverse, il peut être plus simple ou plus sûr de configurer le serveur Web principal pour qu'il fasse lui-même la redirection vers HTTPS."

# e7200a49861b42228a7ca14aa2fcf7d3
#: ../../topics/security.txt:142
msgid "Use 'secure' cookies."
msgstr "Utilisez des cookies « sécurisés »."

# be9e346cfb494863b7d27a881b7287c1
#: ../../topics/security.txt:144
msgid ""
"If a browser connects initially via HTTP, which is the default for most "
"browsers, it is possible for existing cookies to be leaked. For this reason,"
" you should set your :setting:`SESSION_COOKIE_SECURE` and "
":setting:`CSRF_COOKIE_SECURE` settings to ``True``. This instructs the "
"browser to only send these cookies over HTTPS connections. Note that this "
"will mean that sessions will not work over HTTP, and the CSRF protection "
"will prevent any POST data being accepted over HTTP (which will be fine if "
"you are redirecting all HTTP traffic to HTTPS)."
msgstr "Si un navigateur se connecte initialement en HTTP, ce qui est le comportement par défaut de la plupart des navigateurs, il est possible que des cookies existants soient divulgués. Pour cette raison, vous devriez définir les réglages  :setting:`SESSION_COOKIE_SECURE` et :setting:`CSRF_COOKIE_SECURE` à ``True``. Cela indique au navigateur qu'il ne doit envoyer les cookies que par des connexions HTTPS. Notez que cela signifie que les sessions ne fonctionneront pas en HTTP et que la protection CSRF empêchera l'acceptation de données POST par HTTP (ce qui ne pose pas de problème si vous redirigez tout le trafic HTTP vers HTTPS)."

# 088abd0efef44e2aa4e5e932d684e5d6
#: ../../topics/security.txt:153
msgid "Use HTTP Strict Transport Security (HSTS)"
msgstr "Utilisez HTTP Strict Transport Security (HSTS)"

# 595ad805c1be407d880e84b6cd20ebf3
#: ../../topics/security.txt:155
msgid ""
"HSTS is an HTTP header that informs a browser that all future connections to"
" a particular site should always use HTTPS. Combined with redirecting "
"requests over HTTP to HTTPS, this will ensure that connections always enjoy "
"the added security of SSL provided one successful connection has occurred. "
"HSTS is usually configured on the web server."
msgstr "HSTS est un en-tête HTTP informant le navigateur que toute connexion future à un site particulier devra toujours utiliser HTTPS. Combiné avec la redirection des requêtes HTTP vers HTTPS, cela garantit que les connexions profiteront toujours de la sécurité ajoutée par SSL à partir du moment où une connexion réussie a eu lieu. HSTS est normalement configuré au niveau du serveur Web."

# 902f46bf4ac846299b90b86a8983fe61
#: ../../topics/security.txt:164
msgid "Host header validation"
msgstr "Validation de l'en-tête Host"

# 1c561641495b43c897c5ffa4a75e028d
#: ../../topics/security.txt:166
msgid ""
"Django uses the ``Host`` header provided by the client to construct URLs in "
"certain cases. While these values are sanitized to prevent Cross Site "
"Scripting attacks, a fake ``Host`` value can be used for Cross-Site Request "
"Forgery, cache poisoning attacks, and poisoning links in emails."
msgstr "Django utilise l'en-tête ``Host`` fourni par le client pour construire les URL dans certains cas. Même si ces valeurs sont vérifiées pour empêcher les attaques Cross Site Scripting, une valeur ``Host`` contrefaite peut être exploitée pour des attaques de type Cross-Site Request Forgery, d'empoisonnement de cache et d'empoisonnement de liens dans les courriels."

# e0fcbb272a64485c95bcf75f09865c29
#: ../../topics/security.txt:171
msgid ""
"Because even seemingly-secure web server configurations are susceptible to "
"fake ``Host`` headers, Django validates ``Host`` headers against the "
":setting:`ALLOWED_HOSTS` setting in the "
":meth:`django.http.HttpRequest.get_host()` method."
msgstr "Comme même des configurations de serveur Web apparemment sûres sont susceptibles d'accepter des en-têtes ``Host`` contrefaits, Django valide les en-têtes ``Host`` en les comparant avec le réglage  :setting:`ALLOWED_HOSTS` dans la méthode :meth:`django.http.HttpRequest.get_host()`."

# 9dffcb7d403c479ab0b4698a23799b22
#: ../../topics/security.txt:176
msgid ""
"This validation only applies via "
":meth:`~django.http.HttpRequest.get_host()`; if your code accesses the "
"``Host`` header directly from ``request.META`` you are bypassing this "
"security protection."
msgstr "Cette validation ne s'applique qu'avec :meth:`~django.http.HttpRequest.get_host()` ; si votre code accède directement à l'en-tête ``Host`` dans ``request.META``, vous outrepassez cette protection de sécurité."

# 6da3015e587046e1931a68a775c5e690
#: ../../topics/security.txt:180
msgid "For more details see the full :setting:`ALLOWED_HOSTS` documentation."
msgstr "Pour plus de détails, consultez la documentation complète de :setting:`ALLOWED_HOSTS`."

# 816677eba11d4dbca3db00f33b7f006d
#: ../../topics/security.txt:184
msgid ""
"Previous versions of this document recommended configuring your web server "
"to ensure it validates incoming HTTP ``Host`` headers. While this is still "
"recommended, in many common web servers a configuration that seems to "
"validate the ``Host`` header may not in fact do so. For instance, even if "
"Apache is configured such that your Django site is served from a non-default"
" virtual host with the ``ServerName`` set, it is still possible for an HTTP "
"request to match this virtual host and supply a fake ``Host`` header. Thus, "
"Django now requires that you set :setting:`ALLOWED_HOSTS` explicitly rather "
"than relying on web server configuration."
msgstr "Des versions précédentes de ce document recommandaient de configurer le serveur Web pour s'assurer qu'il valide les en-têtes HTTP ``Host`` entrants. Même si c'est toujours recommandé, bien des configurations de serveurs Web bien connus paraissant valider l'en-tête ``Host`` ne le font pas toujours en réalité. Par exemple, même si Apache est configuré pour que votre site Django soit servi depuis un hôte virtuel autre que celui par défaut ayant défini ``ServerName``, il est encore possible qu'une requête HTTP corresponde à cet hôte tout en fournissant un en-tête ``Host`` contrefait. C'est pourquoi Django demande dorénavant que :setting:`ALLOWED_HOSTS` soit défini explicitement plutôt que de se fier à la configuration du serveur Web."

# 9d4f810677604e2eb6eb8397ceeadf93
#: ../../topics/security.txt:194
msgid ""
"Additionally, as of 1.3.1, Django requires you to explicitly enable support "
"for the ``X-Forwarded-Host`` header (via the :setting:`USE_X_FORWARDED_HOST`"
" setting) if your configuration requires it."
msgstr "En plus, à partir de 1.3.1, Django exige que vous activiez explicitement la prise en charge de l'en-tête ``X-Forwarded-Host`` (via le réglage :setting:`USE_X_FORWARDED_HOST`) si votre configuration l'exige."

# 88cac9aecba04d50a67d2d8b5407ddf6
#: ../../topics/security.txt:201
msgid ""
"Similar to the :ref:`CSRF limitations <csrf-limitations>` requiring a site "
"to be deployed such that untrusted users don't have access to any "
"subdomains, :mod:`django.contrib.sessions` also has limitations. See "
":ref:`the session topic guide section on security <topics-session-security>`"
" for details."
msgstr "Tout comme les :ref:`limites de CSRF <csrf-limitations>` exigeant qu'un site soit déployé de manière à ce que des utilisateurs non fiables n'aient pas accès à d'éventuels sous-domaines, :mod:`django.contrib.sessions` présente également certaines limites. Consultez la :ref:`section sur la sécurité du guide thématique des sessions <topics-session-security>` pour plus de détails."

# f8242b10d06845919dd38dd0f1740671
#: ../../topics/security.txt:209
msgid "Additional security topics"
msgstr "Thèmes de sécurité supplémentaires"

# 03a48022fe1f4213a37e8b8a7632c35b
#: ../../topics/security.txt:211
msgid ""
"While Django provides good security protection out of the box, it is still "
"important to properly deploy your application and take advantage of the "
"security protection of the Web server, operating system and other "
"components."
msgstr "Même si Django offre nativement de bonnes protections de sécurité, il est toujours important de déployer proprement les applications et de profiter des protections de sécurité du serveur Web, du système d'exploitation et d'autres composants."

# 3b293033c3c24304aea163026284bf69
#: ../../topics/security.txt:215
msgid ""
"Make sure that your Python code is outside of the Web server's root. This "
"will ensure that your Python code is not accidentally served as plain text "
"(or accidentally executed)."
msgstr "Prenez soin de placer votre code Python en dehors de la racine du serveur Web. Ceci pour garantir que le code Python ne puisse pas être accidentellement servi en texte pur (ou exécuté accidentellement)."

# c9ac45c0c540468c8b9dd82c5f922d14
#: ../../topics/security.txt:218
msgid "Take care with any :ref:`user uploaded files <file-upload-security>`."
msgstr "Prenez garde aux :ref:`fichiers envoyés par les utilisateurs <file-upload-security>`."

# e45846cfc51b4e59a2fabecf33dd1929
#: ../../topics/security.txt:219
msgid ""
"Django does not throttle requests to authenticate users. To protect against "
"brute-force attacks against the authentication system, you may consider "
"deploying a Django plugin or Web server module to throttle these requests."
msgstr "Django ne limite pas les requêtes d'authentification des utilisateurs. Pour se protéger des attaques en force brute contre le système d'authentification, il faut envisager le déploiement d'un complément Django ou d'un module du serveur Web pour limiter ces requêtes."

# b89c4aef36ab4aad9ce3f4b36430d510
#: ../../topics/security.txt:222
msgid ""
"If your site accepts file uploads, it is strongly advised that you limit "
"these uploads in your Web server configuration to a reasonable size in order"
" to prevent denial of service (DOS) attacks. In Apache, this can be easily "
"set using the LimitRequestBody_ directive."
msgstr "Si votre site accepte les envois de fichiers, il est fortement conseillé de limiter ces envois dans la configuration du serveur Web à une taille raisonnable afin d'empêcher des attaques par déni de service (DOS). Dans Apache, on peut le faire facilement en configurant la directive LimitRequestBody_."

# ed20fe8f9a5b4c37beb5e44d1df8916d
#: ../../topics/security.txt:226
msgid "Keep your :setting:`SECRET_KEY` a secret."
msgstr "Gardez bien :setting:`SECRET_KEY` secrète."

# 8e3ae944465844a48e04d0789b3ec6c1
#: ../../topics/security.txt:227
msgid ""
"It is a good idea to limit the accessibility of your caching system and "
"database using a firewall."
msgstr "C'est une bonne pratique que de limiter l'accès au système de cache et à la base de données par un pare-feu."

# 10abccbb63ea467fbc2317c5d2fec9e1
#: ../../topics/serialization.txt:3
msgid "Serializing Django objects"
msgstr ""

# ff25d5a08a1b4f73bcb04b8bc5bc8e02
#: ../../topics/serialization.txt:5
msgid ""
"Django's serialization framework provides a mechanism for \"translating\" "
"Django models into other formats. Usually these other formats will be text-"
"based and used for sending Django data over a wire, but it's possible for a "
"serializer to handle any format (text-based or not)."
msgstr ""

# 517219bbce9f404ca6515c9f4746baac
#: ../../topics/serialization.txt:12
msgid ""
"If you just want to get some data from your tables into a serialized form, "
"you could use the :djadmin:`dumpdata` management command."
msgstr ""

# 1e7ed51e327340849721db75e3781e2c
#: ../../topics/serialization.txt:16
msgid "Serializing data"
msgstr ""

# 8ecb92d3c59d40edabd9391af69da27e
#: ../../topics/serialization.txt:18
msgid "At the highest level, serializing data is a very simple operation::"
msgstr ""

# 8068b4a68a2a4afa92b55a7ca31a2cc4
#: ../../topics/serialization.txt:23
msgid ""
"The arguments to the ``serialize`` function are the format to serialize the "
"data to (see `Serialization formats`_) and a "
":class:`~django.db.models.query.QuerySet` to serialize. (Actually, the "
"second argument can be any iterator that yields Django model instances, but "
"it'll almost always be a QuerySet)."
msgstr ""

# 76b9c02a1cee47c0b6eb774ab0f571af
#: ../../topics/serialization.txt:31
msgid "You can also use a serializer object directly::"
msgstr ""

# d59583a4b1554a50a3260aed0faff517
#: ../../topics/serialization.txt:38
msgid ""
"This is useful if you want to serialize data directly to a file-like object "
"(which includes an :class:`~django.http.HttpResponse`)::"
msgstr ""

# caf8589a3efb49649cff4cdf3ccb1144
#: ../../topics/serialization.txt:46
msgid ""
"Calling :func:`~django.core.serializers.get_serializer` with an unknown "
":ref:`format <serialization-formats>` will raise a "
"``django.core.serializers.SerializerDoesNotExist`` exception."
msgstr ""

# 4952e8e669804643a2d1f6ce402bc5ec
#: ../../topics/serialization.txt:51
msgid "Subset of fields"
msgstr ""

# 5036d4b7b437490dbcee094294b2cb2b
#: ../../topics/serialization.txt:53
msgid ""
"If you only want a subset of fields to be serialized, you can specify a "
"``fields`` argument to the serializer::"
msgstr ""

# 89cb5ee6feae4f66a5476b026f5a224f
#: ../../topics/serialization.txt:59
msgid ""
"In this example, only the ``name`` and ``size`` attributes of each model "
"will be serialized."
msgstr ""

# f4627d28b6034418acc6619808eadd67
#: ../../topics/serialization.txt:64
msgid ""
"Depending on your model, you may find that it is not possible to deserialize"
" a model that only serializes a subset of its fields. If a serialized object"
" doesn't specify all the fields that are required by a model, the "
"deserializer will not be able to save deserialized instances."
msgstr ""

# 57e4125f6471420abb0319bebc8937e7
#: ../../topics/serialization.txt:70
msgid "Inherited Models"
msgstr ""

# da80ca2b146d446aad91665df6eff5f8
#: ../../topics/serialization.txt:72
msgid ""
"If you have a model that is defined using an :ref:`abstract base class "
"<abstract-base-classes>`, you don't have to do anything special to serialize"
" that model. Just call the serializer on the object (or objects) that you "
"want to serialize, and the output will be a complete representation of the "
"serialized object."
msgstr ""

# b6597abbaa4149499c122377b2bb660a
#: ../../topics/serialization.txt:78
msgid ""
"However, if you have a model that uses :ref:`multi-table inheritance <multi-"
"table-inheritance>`, you also need to serialize all of the base classes for "
"the model. This is because only the fields that are locally defined on the "
"model will be serialized. For example, consider the following models::"
msgstr ""

# c4bb2bb339a6484d86e1bc1bdb404d07
#: ../../topics/serialization.txt:89
msgid "If you only serialize the Restaurant model::"
msgstr ""

# 917f4fdf38ee4c799d5f6128b060b505
#: ../../topics/serialization.txt:93
msgid ""
"the fields on the serialized output will only contain the "
"``serves_hot_dogs`` attribute. The ``name`` attribute of the base class will"
" be ignored."
msgstr ""

# c6abbfe372a14716aae723b456970300
#: ../../topics/serialization.txt:96
msgid ""
"In order to fully serialize your ``Restaurant`` instances, you will need to "
"serialize the ``Place`` models as well::"
msgstr ""

# b5ef79392a0a4530b67084272da9814e
#: ../../topics/serialization.txt:103
msgid "Deserializing data"
msgstr ""

# dd67e5ef07bc430da09e1e7e1d440e2b
#: ../../topics/serialization.txt:105
msgid "Deserializing data is also a fairly simple operation::"
msgstr ""

# 5ea44516b41f43fa84d980f3fe898116
#: ../../topics/serialization.txt:110
msgid ""
"As you can see, the ``deserialize`` function takes the same format argument "
"as ``serialize``, a string or stream of data, and returns an iterator."
msgstr ""

# 3913c6fbd24742a98c48d278aece99a6
#: ../../topics/serialization.txt:113
msgid ""
"However, here it gets slightly complicated. The objects returned by the "
"``deserialize`` iterator *aren't* simple Django objects. Instead, they are "
"special ``DeserializedObject`` instances that wrap a created -- but unsaved "
"-- object and any associated relationship data."
msgstr ""

# eaaedd754ad44ea9b718ff06d614592a
#: ../../topics/serialization.txt:118
msgid ""
"Calling ``DeserializedObject.save()`` saves the object to the database."
msgstr ""

# ab834a7548734104828a01c02cb23481
#: ../../topics/serialization.txt:122
msgid ""
"If the ``pk`` attribute in the serialized data doesn't exist or is null, a "
"new instance will be saved to the database."
msgstr ""

# 069145035de149b3894149b6cbb5e3e2
#: ../../topics/serialization.txt:127
msgid ""
"In previous versions of Django, the ``pk`` attribute had to be present on "
"the serialized data or a ``DeserializationError`` would be raised."
msgstr ""

# 6137f4bc34a84f87abe39c7856bf7184
#: ../../topics/serialization.txt:130
msgid ""
"This ensures that deserializing is a non-destructive operation even if the "
"data in your serialized representation doesn't match what's currently in the"
" database. Usually, working with these ``DeserializedObject`` instances "
"looks something like::"
msgstr ""

# 6328bf399f8349dabd42e871b7cb1644
#: ../../topics/serialization.txt:139
msgid ""
"In other words, the usual use is to examine the deserialized objects to make"
" sure that they are \"appropriate\" for saving before doing so.  Of course, "
"if you trust your data source you could just save the object and move on."
msgstr ""

# 5830f59493bc4531a78d4e2190083cfa
#: ../../topics/serialization.txt:143
msgid ""
"The Django object itself can be inspected as ``deserialized_object.object``."
msgstr ""

# d310933491b5415bb08c0a4029389bad
#: ../../topics/serialization.txt:147
msgid ""
"If fields in the serialized data do not exist on a model, a "
"``DeserializationError`` will be raised unless the ``ignorenonexistent`` "
"argument is passed in as True::"
msgstr ""

# 5f452b324f53491db74373d70489b35b
#: ../../topics/serialization.txt:156
msgid "Serialization formats"
msgstr ""

# cbb9927c7c514328ba83ad8812715ae1
#: ../../topics/serialization.txt:158
msgid ""
"Django supports a number of serialization formats, some of which require you"
" to install third-party Python modules:"
msgstr ""

# aeec6296c73c469ea218f088b5eaa156
#: ../../topics/serialization.txt:162
msgid "Identifier"
msgstr ""

# cdfaa4c733824336b7a2e6eb7f174833
#: ../../topics/serialization.txt:162
msgid "Information"
msgstr ""

# 32c77b9274534be3a9259253a3f285c3
#: ../../topics/serialization.txt:164
msgid "``xml``"
msgstr ""

# d6ba9220934d4c15975fe6220c9de99e
#: ../../topics/serialization.txt:164
msgid "Serializes to and from a simple XML dialect."
msgstr ""

# 88839ffb50a84e98a09a86a944107d2a
#: ../../topics/serialization.txt:166
msgid "``json``"
msgstr ""

# 19a6040503e24697b2e0324598919be5
#: ../../topics/serialization.txt:166
msgid "Serializes to and from JSON_."
msgstr ""

# 1d9c9620244c4e7c8bd0fb0b69082a53
#: ../../topics/serialization.txt:168
msgid "``yaml``"
msgstr ""

# 63cb145c08a74715bb5c688c1151f7c2
#: ../../topics/serialization.txt:168
msgid ""
"Serializes to YAML (YAML Ain't a Markup Language). This serializer is only "
"available if PyYAML_ is installed."
msgstr ""

# a17d7907c39448af8054aa38a1d014d4
#: ../../topics/serialization.txt:176
msgid "XML"
msgstr ""

# bc775d9a31d0460cba8f8e2d7ac518d7
#: ../../topics/serialization.txt:178
msgid "The basic XML serialization format is quite simple::"
msgstr ""

# b507159c42d44af1890e3428791c2f48
#: ../../topics/serialization.txt:188
msgid ""
"The whole collection of objects that is either serialized or de-serialized "
"is represented by a ``<django-objects>``-tag which contains multiple "
"``<object>``-elements. Each such object has two attributes: \"pk\" and "
"\"model\", the latter being represented by the name of the app "
"(\"sessions\") and the lowercase name of the model (\"session\") separated "
"by a dot."
msgstr ""

# 001779e27c4b44c6ae9d86a9608e619f
#: ../../topics/serialization.txt:194
msgid ""
"Each field of the object is serialized as a ``<field>``-element sporting the"
" fields \"type\" and \"name\". The text content of the element represents "
"the value that should be stored."
msgstr ""

# 2c992264492b4ade87d2c91c3fd36705
#: ../../topics/serialization.txt:198
msgid ""
"Foreign keys and other relational fields are treated a little bit "
"differently::"
msgstr ""

# cc66dd447fbe4941b1c562de0e70e0f8
#: ../../topics/serialization.txt:206
msgid ""
"In this example we specify that the auth.Permission object with the PK 27 "
"has a foreign key to the contenttypes.ContentType instance with the PK 9."
msgstr ""

# 3d42a7f1238a454ba51badd7b402bf41
#: ../../topics/serialization.txt:209
msgid ""
"ManyToMany-relations are exported for the model that binds them. For "
"instance, the auth.User model has such a relation to the auth.Permission "
"model::"
msgstr ""

# 0f8eab29a4d348f99316b76e9ccba021
#: ../../topics/serialization.txt:220
msgid ""
"This example links the given user with the permission models with PKs 46 and"
" 47."
msgstr ""

# 6f0eedfb20964aaf9697639324b06fc2
#: ../../topics/serialization.txt:223
msgid "JSON"
msgstr ""

# 46d937cd0433480b9d0f319e00d74794
#: ../../topics/serialization.txt:225
msgid ""
"When staying with the same example data as before it would be serialized as "
"JSON in the following way::"
msgstr ""

# 4d931f7a0d624e16861b297ed5b15165
#: ../../topics/serialization.txt:239
msgid ""
"The formatting here is a bit simpler than with XML. The whole collection is "
"just represented as an array and the objects are represented by JSON objects"
" with three properties: \"pk\", \"model\" and \"fields\". \"fields\" is "
"again an object containing each field's name and value as property and "
"property-value respectively."
msgstr ""

# d81c592968844c7d84577e8dd204105c
#: ../../topics/serialization.txt:245
msgid ""
"Foreign keys just have the PK of the linked object as property value. "
"ManyToMany-relations are serialized for the model that defines them and are "
"represented as a list of PKs."
msgstr ""

# f7a09b9fc1d742878c5ec44603a61b21
#: ../../topics/serialization.txt:249
msgid ""
"Date and datetime related types are treated in a special way by the JSON "
"serializer to make the format compatible with `ECMA-262`_."
msgstr ""

# 5e13c78cc1534a4db78c8fb14b974d24
#: ../../topics/serialization.txt:252
msgid ""
"Be aware that not all Django output can be passed unmodified to :mod:`json`."
" In particular, :ref:`lazy translation objects <lazy-translations>` need a "
"`special encoder`_ written for them. Something like this will work::"
msgstr ""

# 696c9023e27048bcb7c7a9136e25094f
#: ../../topics/serialization.txt:271
msgid "YAML"
msgstr ""

# 7a90a71495914adca5578216a1851aaf
#: ../../topics/serialization.txt:273
msgid ""
"YAML serialization looks quite similar to JSON. The object list is "
"serialized as a sequence mappings with the keys \"pk\", \"model\" and "
"\"fields\". Each field is again a mapping with the key being name of the "
"field and the value the value::"
msgstr ""

# 86588eee27f649f7bd0b0564a7af524f
#: ../../topics/serialization.txt:281
msgid ""
"Referential fields are again just represented by the PK or sequence of PKs."
msgstr ""

# c77a6587c37e46258d3b72f83efae69b
#: ../../topics/serialization.txt:286
msgid "Natural keys"
msgstr ""

# eda7b08925cb4e1cb7b28a50ec7dce1a
#: ../../topics/serialization.txt:288
msgid ""
"The default serialization strategy for foreign keys and many-to-many "
"relations is to serialize the value of the primary key(s) of the objects in "
"the relation. This strategy works well for most objects, but it can cause "
"difficulty in some circumstances."
msgstr ""

# ca811389c77c47e1b5086675cda5a3aa
#: ../../topics/serialization.txt:293
msgid ""
"Consider the case of a list of objects that have a foreign key referencing "
":class:`~django.contrib.contenttypes.models.ContentType`. If you're going to"
" serialize an object that refers to a content type, then you need to have a "
"way to refer to that content type to begin with. Since ``ContentType`` "
"objects are automatically created by Django during the database "
"synchronization process, the primary key of a given content type isn't easy "
"to predict; it will depend on how and when :djadmin:`syncdb` was executed. "
"This is true for all models which automatically generate objects, notably "
"including :class:`~django.contrib.auth.models.Permission`, "
":class:`~django.contrib.auth.models.Group`, and "
":class:`~django.contrib.auth.models.User`."
msgstr ""

# 577131f7d616438c8c4829eed3290075
#: ../../topics/serialization.txt:307
msgid ""
"You should never include automatically generated objects in a fixture or "
"other serialized data. By chance, the primary keys in the fixture may match "
"those in the database and loading the fixture will have no effect. In the "
"more likely case that they don't match, the fixture loading will fail with "
"an :class:`~django.db.IntegrityError`."
msgstr ""

# 53502310b729461cb79f688bac392ada
#: ../../topics/serialization.txt:313
msgid ""
"There is also the matter of convenience. An integer id isn't always the most"
" convenient way to refer to an object; sometimes, a more natural reference "
"would be helpful."
msgstr ""

# bcacbdeea57e4afe94401fca537f1dcc
#: ../../topics/serialization.txt:317
msgid ""
"It is for these reasons that Django provides *natural keys*. A natural key "
"is a tuple of values that can be used to uniquely identify an object "
"instance without using the primary key value."
msgstr ""

# 6188eaefabc44dce80e7fee32150b462
#: ../../topics/serialization.txt:322
msgid "Deserialization of natural keys"
msgstr ""

# 79bd5fd1d04e48768397629fec32bb50
#: ../../topics/serialization.txt:324
msgid "Consider the following two models::"
msgstr ""

# a229db7fa1fe426f98fd61f7a2081a9d
#: ../../topics/serialization.txt:341
msgid ""
"Ordinarily, serialized data for ``Book`` would use an integer to refer to "
"the author. For example, in JSON, a Book might be serialized as::"
msgstr ""

# 4d85a177e21b4ebea9b4535aa9baf6e8
#: ../../topics/serialization.txt:355
msgid ""
"This isn't a particularly natural way to refer to an author. It requires "
"that you know the primary key value for the author; it also requires that "
"this primary key value is stable and predictable."
msgstr ""

# e07e0c7f78134e55bcc2f6cafa5bf03c
#: ../../topics/serialization.txt:359
msgid ""
"However, if we add natural key handling to Person, the fixture becomes much "
"more humane. To add natural key handling, you define a default Manager for "
"Person with a ``get_by_natural_key()`` method. In the case of a Person, a "
"good natural key might be the pair of first and last name::"
msgstr ""

# 87175feb47c74126838541566c687d04
#: ../../topics/serialization.txt:382
msgid "Now books can use that natural key to refer to ``Person`` objects::"
msgstr ""

# 0fddc1e42ccc4152bea3a7eea661333b
#: ../../topics/serialization.txt:395
msgid ""
"When you try to load this serialized data, Django will use the "
"``get_by_natural_key()`` method to resolve ``[\"Douglas\", \"Adams\"]`` into"
" the primary key of an actual ``Person`` object."
msgstr ""

# fc955d0bd58b47edab00f0b933bdd92c
#: ../../topics/serialization.txt:401
msgid ""
"Whatever fields you use for a natural key must be able to uniquely identify "
"an object. This will usually mean that your model will have a uniqueness "
"clause (either unique=True on a single field, or ``unique_together`` over "
"multiple fields) for the field or fields in your natural key. However, "
"uniqueness doesn't need to be enforced at the database level. If you are "
"certain that a set of fields will be effectively unique, you can still use "
"those fields as a natural key."
msgstr ""

# 923f21a48e344d4389daf16f009858af
#: ../../topics/serialization.txt:411
msgid "Serialization of natural keys"
msgstr ""

# 2670a90e6bcd4b3eb3a1cae9f9c0be30
#: ../../topics/serialization.txt:413
msgid ""
"So how do you get Django to emit a natural key when serializing an object? "
"Firstly, you need to add another method -- this time to the model itself::"
msgstr ""

# bdf35aa37bc2480fa9ff51984768ac9f
#: ../../topics/serialization.txt:430
msgid ""
"That method should always return a natural key tuple -- in this example, "
"``(first name, last name)``. Then, when you call "
"``serializers.serialize()``, you provide a ``use_natural_keys=True`` "
"argument::"
msgstr ""

# bd335943ef0c45288ff56924cf868c53
#: ../../topics/serialization.txt:437
msgid ""
"When ``use_natural_keys=True`` is specified, Django will use the "
"``natural_key()`` method to serialize any reference to objects of the type "
"that defines the method."
msgstr ""

# 48290ed6df9142238c4a40b9bbfaf31e
#: ../../topics/serialization.txt:441
msgid ""
"If you are using :djadmin:`dumpdata` to generate serialized data, you use "
"the :djadminopt:`--natural` command line flag to generate natural keys."
msgstr ""

# a06075667735488ab138cba3d29836cf
#: ../../topics/serialization.txt:446
msgid ""
"You don't need to define both ``natural_key()`` and "
"``get_by_natural_key()``. If you don't want Django to output natural keys "
"during serialization, but you want to retain the ability to load natural "
"keys, then you can opt to not implement the ``natural_key()`` method."
msgstr ""

# f8eaf3e1877947449b24dc18b5fa902f
#: ../../topics/serialization.txt:452
msgid ""
"Conversely, if (for some strange reason) you want Django to output natural "
"keys during serialization, but *not* be able to load those key values, just "
"don't define the ``get_by_natural_key()`` method."
msgstr ""

# 207e192b54d64e3490c0de5620536a17
#: ../../topics/serialization.txt:457
msgid "Dependencies during serialization"
msgstr ""

# e9846a9913ec4f26be801b454f903c27
#: ../../topics/serialization.txt:459
msgid ""
"Since natural keys rely on database lookups to resolve references, it is "
"important that the data exists before it is referenced. You can't make a "
"\"forward reference\" with natural keys -- the data you're referencing must "
"exist before you include a natural key reference to that data."
msgstr ""

# a48aa659949246b3b685a957215a0ea1
#: ../../topics/serialization.txt:464
msgid ""
"To accommodate this limitation, calls to :djadmin:`dumpdata` that use the "
":djadminopt:`--natural` option will serialize any model with a "
"``natural_key()`` method before serializing standard primary key objects."
msgstr ""

# 7ab2d7ebd1954ee186a5c081eeadc2e6
#: ../../topics/serialization.txt:468
msgid ""
"However, this may not always be enough. If your natural key refers to "
"another object (by using a foreign key or natural key to another object as "
"part of a natural key), then you need to be able to ensure that the objects "
"on which a natural key depends occur in the serialized data before the "
"natural key requires them."
msgstr ""

# 6b352c6ad3964826921ee4696e535e96
#: ../../topics/serialization.txt:474
msgid ""
"To control this ordering, you can define dependencies on your "
"``natural_key()`` methods. You do this by setting a ``dependencies`` "
"attribute on the ``natural_key()`` method itself."
msgstr ""

# f58522a1e3294bb3af693904ec4c0607
#: ../../topics/serialization.txt:478
msgid ""
"For example, let's add a natural key to the ``Book`` model from the example "
"above::"
msgstr ""

# 3a8fa87ac0a546b1aa8e16533321c0f9
#: ../../topics/serialization.txt:488
msgid ""
"The natural key for a ``Book`` is a combination of its name and its author. "
"This means that ``Person`` must be serialized before ``Book``. To define "
"this dependency, we add one extra line::"
msgstr ""

# ce5d620412a3474cb1d865c044a074c7
#: ../../topics/serialization.txt:496
msgid ""
"This definition ensures that all ``Person`` objects are serialized before "
"any ``Book`` objects. In turn, any object referencing ``Book`` will be "
"serialized after both ``Person`` and ``Book`` have been serialized."
msgstr ""

# 0bc300e0503b45bc8a57f0d4d6f2e950
#: ../../topics/settings.txt:3
msgid "Django settings"
msgstr "Les réglages de Django"

# b669546d87aa4f189e9cac37d555fb4b
#: ../../topics/settings.txt:5
msgid ""
"A Django settings file contains all the configuration of your Django "
"installation. This document explains how settings work and which settings "
"are available."
msgstr "Un fichier de réglages Django contient toute la configuration de votre installation de Django. Ce document explique le fonctionnement des réglages et quels sont les réglages disponibles."

# ab79d6f5ae7e4ba89905525fd972480b
#: ../../topics/settings.txt:10
msgid "The basics"
msgstr "Principes de base"

# 1f25b6842c314280b8ef6296d7110b84
#: ../../topics/settings.txt:12
msgid "A settings file is just a Python module with module-level variables."
msgstr "Un fichier de réglages n'est qu'un module Python avec des variables de niveau module."

# c8034708330e40c59b147b5c9c24e354
#: ../../topics/settings.txt:14
msgid "Here are a couple of example settings::"
msgstr "Voici quelques exemples de réglages ::"

# d6486226d9cc441e8f17b29ac199f154
#: ../../topics/settings.txt:22
msgid ""
"If you set :setting:`DEBUG` to ``False``, you also need to properly set the "
":setting:`ALLOWED_HOSTS` setting."
msgstr "Si vous définissez :setting:`DEBUG` à ``False``, vous devez également définir correctement le réglage :setting:`ALLOWED_HOSTS`."

# d3952f9a4f6e498283c0b37dde55e339
#: ../../topics/settings.txt:25
msgid "Because a settings file is a Python module, the following apply:"
msgstr "Comme un fichier de réglages est un module Python, les points suivants s'appliquent :"

# e0c4dc8d696143669b47b04c207b6167
#: ../../topics/settings.txt:27
msgid "It doesn't allow for Python syntax errors."
msgstr "Il n'accepte pas les erreurs de syntaxe Python."

# d91854d94b2d48dbb5abcb6013a87afd
#: ../../topics/settings.txt:28
msgid ""
"It can assign settings dynamically using normal Python syntax. For example::"
msgstr "Il peut attribuer des valeurs de réglages dynamiques avec la syntaxe Python habituelle. Par exemple ::"

# 9bc5c8672ac7446d80e719f663791804
#: ../../topics/settings.txt:33
msgid "It can import values from other settings files."
msgstr "Il peut importer des valeurs provenant d'autres fichiers de réglages."

# 7bc08206887d4d89822ec42c1d44a84f
#: ../../topics/settings.txt:38
msgid "Designating the settings"
msgstr "Définition du fichier de réglages"

# 4a566f824ff140319e2bc8d348051e64
#: ../../topics/settings.txt:42
msgid ""
"When you use Django, you have to tell it which settings you're using. Do "
"this by using an environment variable, ``DJANGO_SETTINGS_MODULE``."
msgstr "Quand vous utilisez Django, vous devez lui indiquer le fichier de réglages qu'il doit utiliser. Vous pouvez le faire par une variable d'environnement, ``DJANGO_SETTINGS_MODULE``."

# 3e17d19767934f1fa76ea6bdf1dda3eb
#: ../../topics/settings.txt:45
msgid ""
"The value of ``DJANGO_SETTINGS_MODULE`` should be in Python path syntax, "
"e.g. ``mysite.settings``. Note that the settings module should be on the "
"Python `import search path`_."
msgstr "La valeur de ``DJANGO_SETTINGS_MODULE`` doit respecter la syntaxe des chemins Python, par ex. ``mysite.settings``. Notez que le module de réglages doit se trouver dans le `chemin de recherche d'importation`_ Python."

# 8858edfadb1b480d9e0c176bca8ce1be
#: ../../topics/settings.txt:52
msgid "The django-admin.py utility"
msgstr "L'utilitaire "

# 589ab480e11a4d56a92e26fac7432f46
#: ../../topics/settings.txt:54
msgid ""
"When using :doc:`django-admin.py </ref/django-admin>`, you can either set "
"the environment variable once, or explicitly pass in the settings module "
"each time you run the utility."
msgstr "Quand vous utilisez :doc:`django-admin.py </ref/django-admin>`, vous pouvez soit définir une seule fois la variable d'environnement, soit lui transmettre explicitement le module de réglages à chaque lancement de la commande."

# f93c75afa04843e89e961e954fd5b784
#: ../../topics/settings.txt:58
msgid "Example (Unix Bash shell)::"
msgstr "Exemple (shell Unix bash) ::"

# 47cd0e7a4d9b4d42b260823d12f20d82
#: ../../topics/settings.txt:63
msgid "Example (Windows shell)::"
msgstr "Exemple (shell Windows) ::"

# b7bc28bece774b2daa32f76c3cc86859
#: ../../topics/settings.txt:68
msgid ""
"Use the ``--settings`` command-line argument to specify the settings "
"manually::"
msgstr "Utilisez le paramètre de ligne de commande ``--settings`` pour indiquer manuellement le fichier de réglages ::"

# 65192d8adc754a1b92df10557496b927
#: ../../topics/settings.txt:75
msgid "On the server (mod_wsgi)"
msgstr "Sur le serveur (mod_wsgi)"

# 74f50f0e4a26480e9bb4afac5fd1eba5
#: ../../topics/settings.txt:77
msgid ""
"In your live server environment, you'll need to tell your WSGI application "
"what settings file to use. Do that with ``os.environ``::"
msgstr "Dans l'environnement de production de votre serveur, vous devrez indiquer à votre application WSGI quel fichier de réglages il doit utiliser. Faites-le avec ``os.environ``::"

# f8485232152646348ea8106c643c48ed
#: ../../topics/settings.txt:84
msgid ""
"Read the :doc:`Django mod_wsgi documentation "
"</howto/deployment/wsgi/modwsgi>` for more information and other common "
"elements to a Django WSGI application."
msgstr "Lisez la :doc:`documentation Django de mod_wsgi </howto/deployment/wsgi/modwsgi>` pour plus d'informations ainsi que d'autres éléments communs à toute application WSGI Django."

# 8dbfc3e18b7a41af8ac9647b5a896d92
#: ../../topics/settings.txt:89
msgid "Default settings"
msgstr "Réglages par défaut"

# 41fc0480f47a41ce9d4740611fe76ed3
#: ../../topics/settings.txt:91
msgid ""
"A Django settings file doesn't have to define any settings if it doesn't "
"need to. Each setting has a sensible default value. These defaults live in "
"the module :file:`django/conf/global_settings.py`."
msgstr "Un fichier de réglages Django n'a aucune obligation de définir des réglages s'il n'y a pas de besoins avérés. Chaque réglage possède une valeur par défaut logique. Ces valeurs par défaut se trouvent dans le module :file:`django/conf/global_settings.py`."

# 4db48700681444eca4f8416045a74d69
#: ../../topics/settings.txt:95
msgid "Here's the algorithm Django uses in compiling settings:"
msgstr "Voici l'algorithme utilisé par Django pour compiler les réglages :"

# 54743df449184d7fb633e66f40de5f33
#: ../../topics/settings.txt:97
msgid "Load settings from ``global_settings.py``."
msgstr "Charger les réglages de "

# 1b2a5c0b0f5a43b8bfb61794f3de7c4c
#: ../../topics/settings.txt:98
msgid ""
"Load settings from the specified settings file, overriding the global "
"settings as necessary."
msgstr "Charger les réglages du fichier de réglages en vigueur, surchargeant les réglages globaux si nécessaire."

# 5de4275a8bef4959a480c3b1275dff39
#: ../../topics/settings.txt:101
msgid ""
"Note that a settings file should *not* import from ``global_settings``, "
"because that's redundant."
msgstr "Notez qu'un fichier de réglages ne doit *pas* importer ``global_settings``, car ce serait redondant."

# 39ed86aa92c84dac86a0b0904a3b8581
#: ../../topics/settings.txt:105
msgid "Seeing which settings you've changed"
msgstr "Vision des réglages modifiés"

# f5ce876314d34e93a8ec2fc345f6c1b2
#: ../../topics/settings.txt:107
msgid ""
"There's an easy way to view which of your settings deviate from the default "
"settings. The command ``python manage.py diffsettings`` displays differences"
" between the current settings file and Django's default settings."
msgstr "Il existe une façon simple de voir quels sont les réglages qui diffèrent des réglages par défaut. La commande ``python manage.py diffsettings`` affiche les différences entre le fichier de réglages actuel et les réglages par défaut de Django."

# 9b28ccb439484e2d934f8db776dfbfc8
#: ../../topics/settings.txt:111
msgid "For more, see the :djadmin:`diffsettings` documentation."
msgstr "Pour en savoir plus, lisez la documentation de :djadmin:`diffsettings`."

# 453e8d33a3f041c68ff422755d732d0b
#: ../../topics/settings.txt:114
msgid "Using settings in Python code"
msgstr "Utilisation des réglages dans le code Python"

# 79268340d28f43bb88cb67fb5f1ebd3d
#: ../../topics/settings.txt:116
msgid ""
"In your Django apps, use settings by importing the object "
"``django.conf.settings``. Example::"
msgstr "Dans vos applications Django, utilisez les réglages en important l'objet ``django.conf.settings``. Exemple ::"

# 899beb3490b84eea8ac36d6a012c35db
#: ../../topics/settings.txt:124
msgid ""
"Note that ``django.conf.settings`` isn't a module -- it's an object. So "
"importing individual settings is not possible::"
msgstr "Notez que ``django.conf.settings`` n'est pas un module, c'est un objet. L'importation de réglages individuels n'est donc pas possible ::"

# a7eea5ea0fde4fa5846a2cc804e2be39
#: ../../topics/settings.txt:129
msgid ""
"Also note that your code should *not* import from either ``global_settings``"
" or your own settings file. ``django.conf.settings`` abstracts the concepts "
"of default settings and site-specific settings; it presents a single "
"interface. It also decouples the code that uses settings from the location "
"of your settings."
msgstr "Notez également que votre code ne doit *pas* importer ni de ``global_settings``, ni de votre propre fichier de réglages. ``django.conf.settings`` est une abstraction du concept de réglages par défaut et de réglages spécifiques par site ; il présente une interface unifiée. Il découple aussi le code qui utilise les réglages de l'emplacement de vos réglages."

# aa3fef3e5ac8472abaffadce7c9644bb
#: ../../topics/settings.txt:136
msgid "Altering settings at runtime"
msgstr "Modification des réglages en cours d'exécution"

# 9a4d8da0c8d84c98b45bb6d57aa86a44
#: ../../topics/settings.txt:138
msgid ""
"You shouldn't alter settings in your applications at runtime. For example, "
"don't do this in a view::"
msgstr "Vous ne devriez pas modifier les réglages de vos applications durant leur exécution. Par exemple, ne faites pas ceci dans une vue ::"

# 76e7fbf56ac542e38ae079d7eef4a5de
#: ../../topics/settings.txt:145
msgid "The only place you should assign to settings is in a settings file."
msgstr "Le seul endroit où des réglages doivent recevoir des valeurs est le fichier des réglages."

# 8592b9f138e44df391db83d4ab84e560
#: ../../topics/settings.txt:148
msgid "Security"
msgstr "Sécurité"

# 3eaeefbfb42f4a479509668dd53fc1bd
#: ../../topics/settings.txt:150
msgid ""
"Because a settings file contains sensitive information, such as the database"
" password, you should make every attempt to limit access to it. For example,"
" change its file permissions so that only you and your Web server's user can"
" read it. This is especially important in a shared-hosting environment."
msgstr "Dans la mesure où un fichier de réglages contient des informations sensibles comme des mots de passe de base de données, vous devez faire tout votre possible pour limiter l'accès à ces fichiers. Par exemple, modifiez les permissions du fichier pour que seuls vous et le serveur Web puissiez le lire. C'est particulièrement important dans le contexte d'un environnement d'hébergement partagé."

# ace2364d3f994c4ca8089a7ba50fb9a8
#: ../../topics/settings.txt:156
msgid "Available settings"
msgstr "Réglages disponibles"

# 7f405678f98d4cefa13be389815921d1
#: ../../topics/settings.txt:158
msgid ""
"For a full list of available settings, see the :doc:`settings reference "
"</ref/settings>`."
msgstr "Pour une liste complète des réglages disponibles, consultez la :doc:`référence des réglages </ref/settings>`."

# 7d7b9bb2ad104933b8885aaf05f93b6d
#: ../../topics/settings.txt:161
msgid "Creating your own settings"
msgstr "Création de ses propres réglages"

# f333bdd2491549b8b1ffe2f232dfa219
#: ../../topics/settings.txt:163
msgid ""
"There's nothing stopping you from creating your own settings, for your own "
"Django apps. Just follow these conventions:"
msgstr "Rien ne vous empêche de créer vos propres réglages pour vos propres applications Django. Suivez simplement ces conventions :"

# c8d76793a2cc4e2ca313b0bc0a03b3b2
#: ../../topics/settings.txt:166
msgid "Setting names are in all uppercase."
msgstr "Les noms des réglages sont tout en majuscules."

# 48c4bed65d35410ca92fe40e84546381
#: ../../topics/settings.txt:167
msgid "Don't reinvent an already-existing setting."
msgstr "Ne réinventez pas un réglage existant."

# 80a163d614464990bf75e4b479171d2a
#: ../../topics/settings.txt:169
msgid ""
"For settings that are sequences, Django itself uses tuples, rather than "
"lists, but this is only a convention."
msgstr "Pour les réglages qui sont des listes, Django utilise lui-même des tuples plutôt que des listes, mais ce n'est qu'une convention."

# 7c9b8900352f46fc80d560e2eecd3c1d
#: ../../topics/settings.txt:175
msgid "Using settings without setting DJANGO_SETTINGS_MODULE"
msgstr "Utilisation des réglages sans définir "

# 00f6efaabbe44545aea33787265d47d1
#: ../../topics/settings.txt:177
msgid ""
"In some cases, you might want to bypass the ``DJANGO_SETTINGS_MODULE`` "
"environment variable. For example, if you're using the template system by "
"itself, you likely don't want to have to set up an environment variable "
"pointing to a settings module."
msgstr "Dans certains cas, il peut être souhaitable de ne pas tenir compte de la variable d'environnement ``DJANGO_SETTINGS_MODULE``. Par exemple, si vous utilisez le système de gabarits pour lui-même, il n'est probablement pas utile de configurer une variable d'environnement pointant vers un module de réglages."

# 5c37bcfa91c64644b402f26e9b3ea34a
#: ../../topics/settings.txt:182
msgid ""
"In these cases, you can configure Django's settings manually. Do this by "
"calling:"
msgstr "Dans ces situations, vous pouvez configurer manuellement les réglages de Django. Faites-le en appelant :"

# fde3631e87824b908c4e37690057f7aa
#: ../../topics/settings.txt:194
msgid ""
"Pass ``configure()`` as many keyword arguments as you'd like, with each "
"keyword argument representing a setting and its value. Each argument name "
"should be all uppercase, with the same name as the settings described above."
" If a particular setting is not passed to ``configure()`` and is needed at "
"some later point, Django will use the default setting value."
msgstr "Vous pouvez transmettre autant de paramètres que nécessaire à ``configure()``, sachant que chaque paramètre nommé constituera un réglage avec sa valeur. Chaque nom de paramètre devrait être entièrement en majuscules et correspondre à l'un des paramètres existants. Si un réglage particulier n'est pas transmis à ``configure()`` et qu'il est requis plus loin dans le code, Django utilise alors la valeur par défaut du réglage."

# 0e71bf568eb841f1b2418b3927ae47a6
#: ../../topics/settings.txt:200
msgid ""
"Configuring Django in this fashion is mostly necessary -- and, indeed, "
"recommended -- when you're using a piece of the framework inside a larger "
"application."
msgstr "La configuration de Django de cette manière est surtout nécessaire (et même recommandée) lorsque vous utilisez une partie de l'infrastructure Django dans une application plus vaste."

# d20d8bd152b545d49a51e29898f9d779
#: ../../topics/settings.txt:204
msgid ""
"Consequently, when configured via ``settings.configure()``, Django will not "
"make any modifications to the process environment variables (see the "
"documentation of :setting:`TIME_ZONE` for why this would normally occur). "
"It's assumed that you're already in full control of your environment in "
"these cases."
msgstr "En conséquence, quand Django est configuré par ``settings.configure()``, il ne fera aucune modification aux variables d'environnement du processus (consultez la documentation de :setting:`TIME_ZONE` pour savoir pourquoi cela se passe normalement). Django suppose alors que vous avez déjà le contrôle complet de votre environnement."

# f138d5460a2248b28f1b0f12823b9b95
#: ../../topics/settings.txt:211
msgid "Custom default settings"
msgstr "Réglages par défaut personnalisés"

# afd8eec810724d1bbc485f3b530df42d
#: ../../topics/settings.txt:213
msgid ""
"If you'd like default values to come from somewhere other than "
"``django.conf.global_settings``, you can pass in a module or class that "
"provides the default settings as the ``default_settings`` argument (or as "
"the first positional argument) in the call to ``configure()``."
msgstr "Si vous aimeriez que des valeurs par défaut proviennent d'endroits différents de `django.conf.global_settings``, vous pouvez transmettre un module ou une classe responsable de fournir les valeurs par défaut dans le paramètre ``default_settings`` (ou comme premier paramètre positionnel) dans l'appel à ``configure()``."

# eb993d2f90dc4d91b2304180cd526882
#: ../../topics/settings.txt:218
msgid ""
"In this example, default settings are taken from ``myapp_defaults``, and the"
" :setting:`DEBUG` setting is set to ``True``, regardless of its value in "
"``myapp_defaults``::"
msgstr "Dans cet exemple, les réglages par défaut proviennent de ``myapp_defaults`` et le paramètre :setting:`DEBUG` est défini à ``True``, quelle que soit sa valeur dans ``myapp_defaults``::"

# 52658ac3752a44b793bd858d0d7cd656
#: ../../topics/settings.txt:227
msgid ""
"The following example, which uses ``myapp_defaults`` as a positional "
"argument, is equivalent::"
msgstr "L'exemple suivant qui place ``myapp_defaults`` comme paramètre positionnel est équivalent ::"

# 81d399475f964d77b8890ae3e0ff9ba7
#: ../../topics/settings.txt:232
msgid ""
"Normally, you will not need to override the defaults in this fashion. The "
"Django defaults are sufficiently tame that you can safely use them. Be aware"
" that if you do pass in a new default module, it entirely *replaces* the "
"Django defaults, so you must specify a value for every possible setting that"
" might be used in that code you are importing. Check in "
"``django.conf.settings.global_settings`` for the full list."
msgstr "Normalement, il n'est pas nécessaire de surcharger les valeurs par défaut de cette manière. Les valeurs par défaut de Django sont suffisamment éprouvées pour pouvoir les utiliser avec confiance. Sachez que lorsque vous transmettez un nouveau module de valeurs par défaut, il *remplace* entièrement les valeurs par défaut de Django, il est donc indispensable de fournir des valeurs pour chaque réglage potentiellement utilisé dans le code que vous importez. Parcourez ``django.conf.settings.global_settings`` pour voir la liste complète."

# 26a16ae6f60e4b0e8c51158d4b3d0a37
#: ../../topics/settings.txt:240
msgid "Either configure() or DJANGO_SETTINGS_MODULE is required"
msgstr "Nécessité de configure() ou de DJANGO_SETTINGS_MODULE"

# 15f4849d3c834a3380e9f838c6ad1e99
#: ../../topics/settings.txt:242
msgid ""
"If you're not setting the ``DJANGO_SETTINGS_MODULE`` environment variable, "
"you *must* call ``configure()`` at some point before using any code that "
"reads settings."
msgstr "Si vous ne définissez pas la variable d'environnement ``DJANGO_SETTINGS_MODULE``, vous *devez* appeler ``configure()`` avant que du code se mette à lire des réglages."

# a09e51222f30428ab654c8e51c4568a1
#: ../../topics/settings.txt:246
msgid ""
"If you don't set ``DJANGO_SETTINGS_MODULE`` and don't call ``configure()``, "
"Django will raise an ``ImportError`` exception the first time a setting is "
"accessed."
msgstr "Si vous ne définissez pas ``DJANGO_SETTINGS_MODULE`` et n'appelez pas ``configure()``, Django lèvera une exception ``ImportError`` lors du premier accès à un réglage."

# e4256173600041f6bd8420d65d74a093
#: ../../topics/settings.txt:250
msgid ""
"If you set ``DJANGO_SETTINGS_MODULE``, access settings values somehow, "
"*then* call ``configure()``, Django will raise a ``RuntimeError`` indicating"
" that settings have already been configured. There is a property just for "
"this purpose:"
msgstr "Si vous définissez ``DJANGO_SETTINGS_MODULE``, puis vous accédez à des valeurs de réglages d'une manière ou d'une autre, *puis* vous appelez ``configure()``, Django lèvera une exception ``RuntimeError`` indiquant que les réglages ont déjà été configurés. Il existe une propriété tout exprès pour ce cas de figure :"

# 09a46c249e8e4988ae08b6d82891df9d
#: ../../topics/settings.txt:263
msgid ""
"Also, it's an error to call ``configure()`` more than once, or to call "
"``configure()`` after any setting has been accessed."
msgstr "Il est également erroné d'appeler ``configure()`` plus d'une fois, ou d'appeler ``configure()`` après qu'au moins un réglage ait été lu."

# e9b93b26a2f24356919358517e82e431
#: ../../topics/settings.txt:266
msgid ""
"It boils down to this: Use exactly one of either ``configure()`` or "
"``DJANGO_SETTINGS_MODULE``. Not both, and not neither."
msgstr "En conclusion : utilisez soit ``configure()``, soit ``DJANGO_SETTINGS_MODULE``, mais jamais les deux et toujours au moins un des deux."

# 67bb85f0cdac4b30af7b15cf9f4b1c48
#: ../../topics/signals.txt:3
msgid "Signals"
msgstr "Signaux"

# 8e4d0de3468e463bbd40b870003d8731
#: ../../topics/signals.txt:8
msgid ""
"Django includes a \"signal dispatcher\" which helps allow decoupled "
"applications get notified when actions occur elsewhere in the framework. In "
"a nutshell, signals allow certain *senders* to notify a set of *receivers* "
"that some action has taken place. They're especially useful when many pieces"
" of code may be interested in the same events."
msgstr "Django contient un « distributeur de signaux » qui permet aux applications découplées de pouvoir plus facilement être averties quand des actions se produisent ailleurs dans un projet. En résumé, les signaux permettent à certains *expéditeurs* d'avertir un ensemble de *destinataires* qu'une action a eu lieu. Ils sont particulièrement utiles lorsque beaucoup de parties de code peuvent être intéressées aux mêmes événements."

# 867f607343cf419899158fab650e2e3f
#: ../../topics/signals.txt:14
msgid ""
"Django provides a :doc:`set of built-in signals </ref/signals>` that let "
"user code get notified by Django itself of certain actions. These include "
"some useful notifications:"
msgstr "Django intègre un :doc:`ensemble de signaux </ref/signals>` permettant à du code client d'être averti par Django lui-même de certaines actions. Parmi ceux-ci, en voici quelques-uns bien utiles :"

# 54b72dd2c4a3497eb8837cff7abd787e
#: ../../topics/signals.txt:18
msgid ""
":data:`django.db.models.signals.pre_save` & "
":data:`django.db.models.signals.post_save`"
msgstr ":data:`django.db.models.signals.pre_save` & :data:`django.db.models.signals.post_save`"

# 5f5c922067a94ebf904c331ef428ee94
#: ../../topics/signals.txt:21
msgid ""
"Sent before or after a model's :meth:`~django.db.models.Model.save` method "
"is called."
msgstr "Envoyés avant et après que la méthode :meth:`~django.db.models.Model.save` d'un modèle a été appelée."

# 0cb0d47021564791b238e48309ee1c4d
#: ../../topics/signals.txt:24
msgid ""
":data:`django.db.models.signals.pre_delete` & "
":data:`django.db.models.signals.post_delete`"
msgstr ":data:`django.db.models.signals.pre_delete` & :data:`django.db.models.signals.post_delete`"

# 8d5a55f78aba4b3e8090e3cbda3ad150
#: ../../topics/signals.txt:27
msgid ""
"Sent before or after a model's :meth:`~django.db.models.Model.delete` method"
" or queryset's :meth:`~django.db.models.query.QuerySet.delete` method is "
"called."
msgstr "Envoyés avant et après que la méthode  :meth:`~django.db.models.Model.delete` d'un modèle ou que la méthode :meth:`~django.db.models.query.QuerySet.delete` d'un ``QuerySet`` a été appelée."

# 5eec649740964c07875a6b9c77c48669
#: ../../topics/signals.txt:31
msgid ":data:`django.db.models.signals.m2m_changed`"
msgstr ":data:`django.db.models.signals.m2m_changed`"

# fd6cdc92a302460bb7c4dc42f38c4f8b
#: ../../topics/signals.txt:33
msgid ""
"Sent when a :class:`~django.db.models.ManyToManyField` on a model is "
"changed."
msgstr "Envoyé quand un champ :class:`~django.db.models.ManyToManyField` d'un modèle a été modifié."

# d7e11853fd2b40598a2b2cdce8e08198
#: ../../topics/signals.txt:35
msgid ""
":data:`django.core.signals.request_started` & "
":data:`django.core.signals.request_finished`"
msgstr ":data:`django.core.signals.request_started` & :data:`django.core.signals.request_finished`"

# 20b3decaf24743708f69a813fac525e1
#: ../../topics/signals.txt:38
msgid "Sent when Django starts or finishes an HTTP request."
msgstr "Envoyés lorsque Django démarre et termine une requête HTTP."

# 6533cf3a8c344efdb85ab24fde8c2d75
#: ../../topics/signals.txt:40
msgid ""
"See the :doc:`built-in signal documentation </ref/signals>` for a complete "
"list, and a complete explanation of each signal."
msgstr "Consultez la :doc:`documentation des signaux intégrés </ref/signals>` pour une liste complète ainsi qu'une explication détaillée de chaque signal."

# 4c73789675b146c080e66c816798b7f3
#: ../../topics/signals.txt:43
msgid "You can also `define and send your own custom signals`_; see below."
msgstr "Vous pouvez également `définir et envoyer vos propres signaux personnalisés`_ ; voir ci-dessous."

# 5bc01dacbf3648f29bf5234f08c613d3
#: ../../topics/signals.txt:48
msgid "Listening to signals"
msgstr "Écoute de signaux"

# 8411bd0506544495969cc77be6f73706
#: ../../topics/signals.txt:50
msgid ""
"To receive a signal, you need to register a *receiver* function that gets "
"called when the signal is sent by using the :meth:`.Signal.connect` method:"
msgstr "Pour recevoir un signal, il faut inscrire une fonction *réceptrice* qui sera appelée au moment où le signal est envoyé en utilisant la méthode :meth:`.Signal.connect`:"

# 64a4630048364308aec1dc40fe278a22
#: ../../topics/signals.txt:56
msgid ""
"The callback function which will be connected to this signal. See :ref"
":`receiver-functions` for more information."
msgstr "La fonction réceptrice qui sera connectée à ce signal. Voir :ref:`receiver-functions` pour plus d'informations."

# 22c412019b5a450faa47d50763d66a7a
#: ../../topics/signals.txt:59
msgid ""
"Specifies a particular sender to receive signals from. See :ref:`connecting-"
"to-specific-signals` for more information."
msgstr "Indique un expéditeur particulier duquel recevoir les signaux. Voir :ref:`connecting-to-specific-signals` pour plus d'informations."

# db96a04c94904fa9b00dd961ea8cac23
#: ../../topics/signals.txt:62
msgid ""
"Django stores signal handlers as weak references by default. Thus, if your "
"receiver is a local function, it may be garbage collected. To prevent this, "
"pass ``weak=False`` when you call the signal's ``connect()`` method."
msgstr "Django stocke les gestionnaires de signaux comme référence faible par défaut. Cela signifie que si le récepteur est une fonction locale, il peut être purgé de la mémoire. Pour empêcher cela, indiquez ``weak=False`` lors de l'appel à la méthode ``connect()`` du signal."

# 640e991e7aea4c47b7f9a75e03b8f0a3
#: ../../topics/signals.txt:67
msgid ""
"A unique identifier for a signal receiver in cases where duplicate signals "
"may be sent. See :ref:`preventing-duplicate-signals` for more information."
msgstr "Un identifiant unique pour un récepteur de signal afin d'éviter que certains signaux puissent être envoyés à double. Voir :ref:`preventing-duplicate-signals` pour plus d'informations."

# 175e4f8fbcbe4138a71b0fd82826595f
#: ../../topics/signals.txt:71
msgid ""
"Let's see how this works by registering a signal that gets called after each"
" HTTP request is finished. We'll be connecting to the "
":data:`~django.core.signals.request_finished` signal."
msgstr "Voyons comment ça fonctionne en inscrivant un signal qui sera appelé à la fin de chaque requête HTTP. Nous allons nous connecter au signal :data:`~django.core.signals.request_finished`."

# 5e1170ad58c44d5f82c32628310463b0
#: ../../topics/signals.txt:78
msgid "Receiver functions"
msgstr "Fonctions réceptrices"

# a0b23d4ac99345c1914a80fd9fa61abf
#: ../../topics/signals.txt:80
msgid ""
"First, we need to define a receiver function. A receiver can be any Python "
"function or method:"
msgstr "Tout d'abord, nous devons définir une fonction réceptrice. Celle-ci peut être n'importe quelle fonction ou méthode Python :"

# 94919884fbd2419397c2e0f09c49e99c
#: ../../topics/signals.txt:88
msgid ""
"Notice that the function takes a ``sender`` argument, along with wildcard "
"keyword arguments (``**kwargs``); all signal handlers must take these "
"arguments."
msgstr "Remarquez que la fonction accepte un paramètre ``sender``, accompagné des paramètres nommés génériques (``**kwargs``) ; tous les gestionnaires de signal doivent accepter ces paramètres."

# ac683197b72b413d8b8d92f9f382cee7
#: ../../topics/signals.txt:91
msgid ""
"We'll look at senders `a bit later`_, but right now look at the ``**kwargs``"
" argument. All signals send keyword arguments, and may change those keyword "
"arguments at any time. In the case of "
":data:`~django.core.signals.request_finished`, it's documented as sending no"
" arguments, which means we might be tempted to write our signal handling as "
"``my_callback(sender)``."
msgstr "Nous aborderons le paramètre ``sender`` `un peu plus loin`_, mais commençons par examiner le paramètre ``**kwargs``. Tous les signaux envoient des paramètres nommés et peuvent changer ces paramètres nommés à tout instant. Dans le cas de :data:`~django.core.signals.request_finished`, sa documentation indique qu'il n'envoie pas de paramètre, ce qui signifie que nous pourrions être tentés d'écrire notre fonction de signal comme ``my_callback(sender)``."

# 12d0b82bc83342f5a5b35deb64aef762
#: ../../topics/signals.txt:100
msgid ""
"This would be wrong -- in fact, Django will throw an error if you do so. "
"That's because at any point arguments could get added to the signal and your"
" receiver must be able to handle those new arguments."
msgstr "Ce serait une erreur. En fait, Django génère une exception dans ce cas, parce que l'on doit s'attendre à ce que de nouveaux paramètres soient ajoutés dans le temps et la fonction réceptrice doit être capable d'accepter ces nouveaux paramètres."

# a8204ecab96a4e02ba77feb3f9cd1cef
#: ../../topics/signals.txt:107
msgid "Connecting receiver functions"
msgstr "Connexion des fonctions réceptrices"

# 15947baf6be64ebeac7a4567fd7313d3
#: ../../topics/signals.txt:109
msgid ""
"There are two ways you can connect a receiver to a signal. You can take the "
"manual connect route:"
msgstr "Il y a deux façons de connecter une fonction réceptrice à un signal. Vous pouvez choisir l'option de la connexion manuelle :"

# d5dad5503bb64f0786c2c28f8c2c9320
#: ../../topics/signals.txt:118
msgid ""
"Alternatively, you can use a ``receiver`` decorator when you define your "
"receiver:"
msgstr "L'autre possibilité est d'utiliser le décorateur ``receiver`` au moment de définir la fonction réceptrice :"

# 0182b440032843adb989b145b99dde83
#: ../../topics/signals.txt:130
msgid ""
"Now, our ``my_callback`` function will be called each time a request "
"finishes."
msgstr "À partir de cet instant, la fonction ``my_callback`` sera appelée chaque fois qu'une requête se termine."

# ac3bc7a7214448a98931b5dd626a8353
#: ../../topics/signals.txt:132
msgid ""
"Note that ``receiver`` can also take a list of signals to connect a function"
" to."
msgstr "Notez que ``receiver`` peut aussi accepter une liste de signaux auxquels connecter la fonction."

# 7520496cadb646efae7db7890c81f344
#: ../../topics/signals.txt:137
msgid "The ability to pass a list of signals was added."
msgstr "La capacité de transmettre une liste de signaux a été ajoutée."

# 1e932586cb674bd08a5c02d30e6f3765
#: ../../topics/signals.txt:139
msgid "Where should this code live?"
msgstr "À quel endroit ce code devrait-il se trouver ?"

# 16bf7a14905c4da3a53a042aacaeb1db
#: ../../topics/signals.txt:141
msgid ""
"You can put signal handling and registration code anywhere you like. "
"However, you'll need to make sure that the module it's in gets imported "
"early on so that the signal handling gets registered before any signals need"
" to be sent. This makes your app's ``models.py`` a good place to put "
"registration of signal handlers."
msgstr "Vous pouvez placer les gestionnaires de signaux et le code d'inscription à n'importe quel endroit. Cependant, il faut s'assurer que le module dans lequel se trouve ce code soit importé assez tôt afin que les signaux soient inscrits avant qu'un signal ne doive être envoyé. Il se trouve donc que le fichier ``models.py`` de l'application est un bon endroit pour y placer l'inscription des récepteurs de signaux."

# 30e43ebc785e4d8b8175ba7bbc56576c
#: ../../topics/signals.txt:150
msgid "Connecting to signals sent by specific senders"
msgstr "Connexion aux signaux envoyés par des expéditeurs spécifiques"

# ca72d5662d1c4eec82f6714aa74e785a
#: ../../topics/signals.txt:152
msgid ""
"Some signals get sent many times, but you'll only be interested in receiving"
" a certain subset of those signals. For example, consider the "
":data:`django.db.models.signals.pre_save` signal sent before a model gets "
"saved. Most of the time, you don't need to know when *any* model gets saved "
"-- just when one *specific* model is saved."
msgstr "Certains signaux sont envoyés de nombreuses fois, mais vous n'êtes pas toujours intéressé à tous les recevoir. Par exemple, considérez le signal :data:`django.db.models.signals.pre_save` envoyé avant chaque enregistrement de modèle. La plupart du temps, vous n'avez pas besoin de savoir quand *chaque* modèle est enregistré, mais seulement pour un modèle *spécifique*."

# 60e3d447e5294caca6ae7cb9d037c921
#: ../../topics/signals.txt:158
msgid ""
"In these cases, you can register to receive signals sent only by particular "
"senders. In the case of :data:`django.db.models.signals.pre_save`, the "
"sender will be the model class being saved, so you can indicate that you "
"only want signals sent by some model:"
msgstr "Dans ces situations, vous pouvez inscrire une fonction pour qu'elle ne reçoive les signaux que de certains expéditeurs. Dans le cas de :data:`django.db.models.signals.pre_save`, l'expéditeur sera la classe du modèle en cours d'enregistrement, il est donc possible d'indiquer que vous ne voulez recevoir que les signaux envoyés par certains modèles :"

# 7ccdc08aa6344792887693c4ce25957f
#: ../../topics/signals.txt:173
msgid ""
"The ``my_handler`` function will only be called when an instance of "
"``MyModel`` is saved."
msgstr "La fonction ``my_handler`` ne sera appelée que lors de l'enregistrement d'une instance de ``MyModel``."

# 8fa60efb60e840b6995c44e5cba71e43
#: ../../topics/signals.txt:176
msgid ""
"Different signals use different objects as their senders; you'll need to "
"consult the :doc:`built-in signal documentation </ref/signals>` for details "
"of each particular signal."
msgstr "Différents signaux utilisent différents objets comme expéditeurs ; il s'agit de consulter la :doc:`documentation des signaux intégrés </ref/signals>` pour plus de détails sur chaque signal."

# 6c9296ac265a448a97c18aff6c50afdd
#: ../../topics/signals.txt:183
msgid "Preventing duplicate signals"
msgstr "Prévention des signaux dupliqués"

# 5b7f5bbded7b4041b6f65c7cee51b7b5
#: ../../topics/signals.txt:185
msgid ""
"In some circumstances, the module in which you are connecting signals may be"
" imported multiple times. This can cause your receiver function to be "
"registered more than once, and thus called multiples times for a single "
"signal event."
msgstr "Dans certaines circonstances, le module dans lequel vous connectez les signaux peut être importé à plusieurs reprises. En conséquence, la fonction de réception peut être inscrite plus d'une fois et être ensuite appelée plusieurs fois pour un même événement de signal."

# 1e14e8d4b9364ba8b03bc739901ab229
#: ../../topics/signals.txt:190
msgid ""
"If this behavior is problematic (such as when using signals to send an email"
" whenever a model is saved), pass a unique identifier as the "
"``dispatch_uid`` argument to identify your receiver function. This "
"identifier will usually be a string, although any hashable object will "
"suffice. The end result is that your receiver function will only be bound to"
" the signal once for each unique ``dispatch_uid`` value."
msgstr "Si ce comportement est problématique (par exemple quand des signaux sont utilisés pour envoyer des courriels quand un modèle est enregistré), indiquez un identifiant unique dans le paramètre ``dispatch_uid`` pour identifier votre fonction réceptrice. Il s'agit généralement d'une chaîne de caractères, même si n'importe quel objet hachable peut faire l'affaire. En conséquence, la fonction réceptrice ne sera inscrite au signal qu'une seule fois par valeur unique de ``dispatch_uid``."

# c1214a6e4fb046d8898f91dd8602bdbb
#: ../../topics/signals.txt:204
msgid "Defining and sending signals"
msgstr "Définition et envoi de signaux"

# 624c2ac7ef2f4ac9b0f7047b2782da7f
#: ../../topics/signals.txt:206
msgid ""
"Your applications can take advantage of the signal infrastructure and "
"provide its own signals."
msgstr "Les applications peuvent profiter de l'infrastructure des signaux et fournir leurs propres signaux."

# d7d52fdfb197423598990fed52dd5fc9
#: ../../topics/signals.txt:210
msgid "Defining signals"
msgstr "Définition de signaux"

# 74f6899bb5ad49509f3e50f98621807d
#: ../../topics/signals.txt:214
msgid ""
"All signals are :class:`django.dispatch.Signal` instances. The "
"``providing_args`` is a list of the names of arguments the signal will "
"provide to listeners. This is purely documentational, however, as there is "
"nothing that checks that the signal actually provides these arguments to its"
" listeners."
msgstr "Tous les signaux sont des instances de :class:`django.dispatch.Signal`. Le paramètre ``providing_args`` est une liste de noms de paramètres nommés que le signal transmettra aux récepteurs. L'objectif est toutefois uniquement documentaire, car rien ne contrôle que le signal envoie vraiment ces paramètres aux récepteurs."

# 586453628a1f41b59896b04b0a31788c
#: ../../topics/signals.txt:219
msgid "For example:"
msgstr "Par exemple :"

# 61fbf9a9cfdf4aedaee7aa1c52c0121f
#: ../../topics/signals.txt:227
msgid ""
"This declares a ``pizza_done`` signal that will provide receivers with "
"``toppings`` and ``size`` arguments."
msgstr "Cet exemple déclare un signal ``pizza_done`` qui va informer ses récepteurs par les paramètres ``toppings`` et ``size``."

# 9357f01c6ec34e259f027eb58c975d7c
#: ../../topics/signals.txt:230
msgid ""
"Remember that you're allowed to change this list of arguments at any time, "
"so getting the API right on the first try isn't necessary."
msgstr "Souvenez-vous que vous êtes autorisé à modifier cette liste de paramètres à tout moment, il n'est donc pas nécessaire de trouver la bonne API du premier coup."

# 00499c9146d543319d423346794dac90
#: ../../topics/signals.txt:233
msgid "Sending signals"
msgstr "Envoi de signaux"

# 9b68fa467b2242d1bb995831db11b37e
#: ../../topics/signals.txt:235
msgid "There are two ways to send signals in Django."
msgstr "Il y a deux façons d'envoyer des signaux dans Django."

# 48ac3a3d72aa403091ec4cd6ea33320f
#: ../../topics/signals.txt:240
msgid ""
"To send a signal, call either :meth:`Signal.send` or "
":meth:`Signal.send_robust`. You must provide the ``sender`` argument, and "
"may provide as many other keyword arguments as you like."
msgstr "Pour envoyer un signal, appelez :meth:`Signal.send` ou :meth:`Signal.send_robust`. Vous devez indiquer le paramètre ``sender`` et vous pouvez ajouter autant de paramètres nommés que vous le souhaitez."

# adb8053c5aa54c5d866db549ad087b21
#: ../../topics/signals.txt:244
msgid "For example, here's how sending our ``pizza_done`` signal might look:"
msgstr "Par exemple, voici comment envoyer notre signal ``pizza_done``:"

# 75f24c834c214c89a74e9e9868a886bc
#: ../../topics/signals.txt:255
msgid ""
"Both ``send()`` and ``send_robust()`` return a list of tuple pairs "
"``[(receiver, response), ... ]``, representing the list of called receiver "
"functions and their response values."
msgstr "Aussi bien ``send()`` que ``send_robust()`` renvoient uns liste de paires de tuples ``[(récepteur, réponse), ... ]`` correspondant à la liste des fonctions réceptrices appelées et la valeur de leur réponse."

# b159ef94e3bb47fbbe29d8c010d63ccb
#: ../../topics/signals.txt:259
msgid ""
"``send()`` differs from ``send_robust()`` in how exceptions raised by "
"receiver functions are handled. ``send()`` does *not* catch any exceptions "
"raised by receivers; it simply allows errors to propagate. Thus not all "
"receivers may be notified of a signal in the face of an error."
msgstr "``send()`` diffère de ``send_robust()`` par la manière dont les exceptions générées par les fonctions réceptrices sont traitées. ``send()`` n'intercepte *aucune* exception générée par les récepteurs ; elle laisse simplement les erreurs se propager. Il est donc possible que certains récepteurs ne soient pas notifiés par le signal en cas d'erreur."

# e0bfd1614e0444d089d89dc6e62bea7e
#: ../../topics/signals.txt:264
msgid ""
"``send_robust()`` catches all errors derived from Python's ``Exception`` "
"class, and ensures all receivers are notified of the signal. If an error "
"occurs, the error instance is returned in the tuple pair for the receiver "
"that raised the error."
msgstr "``send_robust()`` intercepte toutes les erreurs héritant de la classe ``Exception`` de Python et s'assure que tous les récepteurs soient notifiés par le signal. Si une erreur survient, l'instance d'erreur est renvoyée dans le tuple correspondant au récepteur qui a généré l'erreur."

# 2c246ca96d4145ada8a8aeeeb3b06440
#: ../../topics/signals.txt:269
msgid "Disconnecting signals"
msgstr "Déconnexion des signaux"

# 207768c1d1b249d18f50d953e7977500
#: ../../topics/signals.txt:273
msgid ""
"To disconnect a receiver from a signal, call :meth:`Signal.disconnect`. The "
"arguments are as described in :meth:`.Signal.connect`."
msgstr "Pour déconnecter un récepteur d'un signal, appelez :meth:`Signal.disconnect`. Les paramètres sont identiques à ceux décrits pour :meth:`.Signal.connect`."

# a970b4eb384c4206a5a19f134c777a25
#: ../../topics/signals.txt:276
msgid ""
"The *receiver* argument indicates the registered receiver to disconnect. It "
"may be ``None`` if ``dispatch_uid`` is used to identify the receiver."
msgstr "Le paramètre *receiver* indique le récepteur inscrit qu'il s'agit de déconnecter. Il peut valoir ``None`` si ``dispatch_uid`` est utilisé pour identifier le récepteur."

# c80cbbb14b8042879317dde1ac9f659e
#: ../../topics/signing.txt:3
msgid "Cryptographic signing"
msgstr "Signatures cryptographiques"

# c97a4020c26c40ba86e86df3bdb43805
#: ../../topics/signing.txt:8
msgid ""
"The golden rule of Web application security is to never trust data from "
"untrusted sources. Sometimes it can be useful to pass data through an "
"untrusted medium. Cryptographically signed values can be passed through an "
"untrusted channel safe in the knowledge that any tampering will be detected."
msgstr "La règle d'or de la sécurité des applications Web est de ne jamais se fier à des données de provenance douteuse. Il peut parfois être pratique de transférer des données par un canal non sécurisé. Les valeurs signées cryptographiquement peuvent être transmises de manière fiable au travers d'un canal non sécurisé en sachant que toute modification de donnée sera détectée."

# 0f7dc42171bb4618b6c9453016086457
#: ../../topics/signing.txt:13
msgid ""
"Django provides both a low-level API for signing values and a high-level API"
" for setting and reading signed cookies, one of the most common uses of "
"signing in Web applications."
msgstr "Django offre à la fois une API de bas niveau pour la signature de valeurs et une API de haut niveau pour la génération et la lecture de cookies signés, l'un des usages les plus courants de la signature dans les applications Web."

# 1fb391af217743e5bf9f499877834f36
#: ../../topics/signing.txt:17
msgid "You may also find signing useful for the following:"
msgstr "La signature peut également être utile dans les situations suivantes :"

# 4f6edf1f69244ba8bd274c16f0e894f8
#: ../../topics/signing.txt:19
msgid ""
"Generating \"recover my account\" URLs for sending to users who have lost "
"their password."
msgstr "Génération d'URL de « récupération de compte » pour l'envoi à des utilisateurs qui ont perdu leur mot de passe."

# 506f2d2263fd4f539d306d518f0b5af4
#: ../../topics/signing.txt:22
msgid "Ensuring data stored in hidden form fields has not been tampered with."
msgstr "Garantie de non-altération des données stockées dans des champs de formulaire cachés."

# 5f69844bbe7342128785cec1bd70ee65
#: ../../topics/signing.txt:24
msgid ""
"Generating one-time secret URLs for allowing temporary access to a protected"
" resource, for example a downloadable file that a user has paid for."
msgstr "Génération d'URL à usage unique pour autoriser un accès temporaire à une ressource protégée, par exemple pour un fichier téléchargeable payé par un utilisateur."

# 7676a7e9e6ad476bb129be8537a3447a
#: ../../topics/signing.txt:29
msgid "Protecting the SECRET_KEY"
msgstr "Protection de SECRET_KEY"

# 4273b26299914917902cfb01a3c06312
#: ../../topics/signing.txt:31
msgid ""
"When you create a new Django project using :djadmin:`startproject`, the "
"``settings.py`` file is generated automatically and gets a random "
":setting:`SECRET_KEY` value. This value is the key to securing signed data "
"-- it is vital you keep this secure, or attackers could use it to generate "
"their own signed values."
msgstr "Lorsque vous créez un nouveau projet Django avec :djadmin:`startproject`, le fichier ``settings.py`` est généré automatiquement et contient une valeur aléatoire pour le réglage :setting:`SECRET_KEY`. Cette valeur est la clé de la sécurisation des données signées, il est donc essentiel de garder cette information secrète, faute de quoi des attaquants pourraient l'utiliser pour générer leurs propres valeurs signées."

# 2625c3ae7640415baa9e9b94a9ccd079
#: ../../topics/signing.txt:38
msgid "Using the low-level API"
msgstr "Utilisation de l'API de bas niveau"

# e01e4f4f3c8e4c98b62c8b0738e4ef6d
#: ../../topics/signing.txt:40
msgid ""
"Django's signing methods live in the ``django.core.signing`` module. To sign"
" a value, first instantiate a ``Signer`` instance::"
msgstr "Les méthodes de signature de Django se trouvent dans le module ``django.core.signing``. Pour signer une valeur, commencez par créer une instance de ``Signer``::"

# 5458db9cc7ad42028cd70bec1496d3e4
#: ../../topics/signing.txt:49
msgid ""
"The signature is appended to the end of the string, following the colon. You"
" can retrieve the original value using the ``unsign`` method::"
msgstr "La signature est collée à la suite de la chaîne de caractères, en utilisant les deux-points comme séparateur. Vous pouvez récupérer la valeur originale au moyen de la méthode ``unsign``::"

# 48ed7eeb80fd4469859a1a9c66cf80fa
#: ../../topics/signing.txt:56
msgid ""
"If the signature or value have been altered in any way, a "
"``django.core.signing.BadSignature`` exception will be raised::"
msgstr "Si la signature ou la valeur a été modifiée d'une manière ou d'une autre, une exception ``django.core.signing.BadSignature`` sera levée ::"

# 52e5d39c0cd440c38967019523f70f36
#: ../../topics/signing.txt:66
msgid ""
"By default, the ``Signer`` class uses the :setting:`SECRET_KEY` setting to "
"generate signatures. You can use a different secret by passing it to the "
"``Signer`` constructor::"
msgstr "Par défaut, la classe ``Signer`` utilise le réglage :setting:`SECRET_KEY` pour générer des signatures. Il est possible d'utiliser un clé secrète différente en la transmettant au constructeur de ``Signer``::"

# 0581f506c15141949e556f4244dbfe25
#: ../../topics/signing.txt:77
msgid ""
"Returns a signer which uses ``key`` to generate signatures and ``sep`` to "
"separate values. ``sep`` cannot be in the `URL safe base64 alphabet "
"<http://tools.ietf.org/html/rfc4648#section-5>`_.  This alphabet contains "
"alphanumeric characters, hyphens, and underscores."
msgstr "Renvoie un objet signataire utilisant ``key`` pour générer des signatures et ``sep`` pour séparer les valeurs. ``sep`` ne peut pas se trouver dans `l'alphabet base64 adapté aux URL <http://tools.ietf.org/html/rfc4648#section-5>`_. Cet alphabet contient les caractères alphanumériques, le tiret et le soulignement."

# 90c3e065cefa46e6a58fead8686a1bf1
#: ../../topics/signing.txt:83
msgid "Using the salt argument"
msgstr "Utilisation du paramètre ``salt``"

# bcdb58377d644e79b1d0bc1b94bca91a
#: ../../topics/signing.txt:85
msgid ""
"If you do not wish for every occurrence of a particular string to have the "
"same signature hash, you can use the optional ``salt`` argument to the "
"``Signer`` class. Using a salt will seed the signing hash function with both"
" the salt and your :setting:`SECRET_KEY`::"
msgstr "Si vous ne voulez pas que plusieurs occurrences d'une chaîne donnée aient toutes la même empreinte de signature, vous pouvez utiliser le paramètre facultatif ``salt`` de la classe ``Signer``. L'utilisation d'un sel (salt) combiné à la clé :setting:`SECRET_KEY` va nourrir et renforcer la fonction de hachage pour la signature."

# d168ea1eac7645e48df908fdf41167dd
#: ../../topics/signing.txt:99
msgid ""
"Using salt in this way puts the different signatures into different "
"namespaces.  A signature that comes from one namespace (a particular salt "
"value) cannot be used to validate the same plaintext string in a different "
"namespace that is using a different salt setting. The result is to prevent "
"an attacker from using a signed string generated in one place in the code as"
" input to another piece of code that is generating (and verifying) "
"signatures using a different salt."
msgstr "Un tel emploi du sel place les différentes signatures dans des espaces de noms différents. Une signature provenant d'un espace de noms (une valeur de sel particulière) ne peut pas être utilisée pour valider la même chaîne de texte dans un autre espace de noms utilisant une valeur de sel différente. Il en résulte qu'un attaquant ne peut pas utiliser une chaîne signée générée dans une partie du code comme point d'entrée pour une autre partie du code qui génère (et vérifie) les signatures en employant un sel différent."

# a211eedbb1e54f4ba50505560b9fed23
#: ../../topics/signing.txt:107
msgid ""
"Unlike your :setting:`SECRET_KEY`, your salt argument does not need to stay "
"secret."
msgstr "Au contraire de :setting:`SECRET_KEY`, le paramètre ``salt`` n'a pas besoin de rester secret."

# 119c1a83976a44a78cb2b5eb4e6b2d4d
#: ../../topics/signing.txt:111
msgid "Verifying timestamped values"
msgstr "Vérification de valeurs horodatées"

# 65fa8dfad6d64bd4a06f11473fc8fe1a
#: ../../topics/signing.txt:113
msgid ""
"``TimestampSigner`` is a subclass of :class:`~Signer` that appends a signed "
"timestamp to the value. This allows you to confirm that a signed value was "
"created within a specified period of time::"
msgstr "``TimestampSigner`` est une sous-classe de :class:`~Signer` qui ajoute un horodatage signé à la valeur. Cela permet de confirmer qu'une valeur signée a été créée dans un espace de temps défini ::"

# 4e7e7a36edc244e2a6cbae117fd1cb30
#: ../../topics/signing.txt:134
msgid "Sign ``value`` and append current timestamp to it."
msgstr "Signe la valeur ``value`` et lui ajoute l'horodatage actuel."

# 4c5d40de58624693a54b569ea60db8ab
#: ../../topics/signing.txt:138
msgid ""
"Checks if ``value`` was signed less than ``max_age`` seconds ago, otherwise "
"raises ``SignatureExpired``."
msgstr "Vérifie si la valeur ``value`` a été signée il y a moins de ``max_age`` secondes, sinon génère ``SignatureExpired``."

# 3321fb5943674002a05f0cdb934a6c99
#: ../../topics/signing.txt:142
msgid "Protecting complex data structures"
msgstr "Protection de structures de données complexes"

# ed04f75b1c704ad2ac6a52d00d97aa99
#: ../../topics/signing.txt:144
msgid ""
"If you wish to protect a list, tuple or dictionary you can do so using the "
"signing module's ``dumps`` and ``loads`` functions. These imitate Python's "
"pickle module, but use JSON serialization under the hood. JSON ensures that "
"even if your :setting:`SECRET_KEY` is stolen an attacker will not be able to"
" execute arbitrary commands by exploiting the pickle format.::"
msgstr "Si vous souhaitez protéger une liste, un tuple ou un dictionnaire, c'est réalisable en utilisant les fonctions ``dumps`` et ``loads`` du module de signature. Elles imitent le module pickle de Python, mais utilisent la sérialisation JSON en arrière-plan. Le format JSON assure que même quand la clé :setting:`SECRET_KEY` a été dérobée, un attaquant ne pourra pas provoquer l'exécution de code arbitraire en exploitant le format pickle ::"

# fc653b0ced104f288a3dfb87628ff295
#: ../../topics/signing.txt:159
msgid ""
"Returns URL-safe, sha1 signed base64 compressed JSON string. Serialized "
"object is signed using :class:`~TimestampSigner`."
msgstr "Renvoie une chaîne JSON utilisable dans une URL, signée en sha1 et compressée en base64. L'objet sérialisé est signé par :class:`~TimestampSigner`."

# 3856e838759642b28e9a652d434ba50d
#: ../../topics/signing.txt:164
msgid ""
"Reverse of ``dumps()``, raises ``BadSignature`` if signature fails. Checks "
"``max_age`` (in seconds) if given."
msgstr "Inverse de ``dumps()``, génère ``BadSignature`` si la vérification de la signature échoue. Vérifie ``max_age`` (en secondes) si ce paramètre est défini."

# a90cda40f99249ee9f4e55ff73f563aa
#: ../../topics/templates.txt:3
msgid "The Django template language"
msgstr "Le langage de gabarit de Django"

# 5ae87653cf8b4ec6b856588a124025b0
#: ../../topics/templates.txt:7
msgid ""
"This document explains the language syntax of the Django template system. If"
" you're looking for a more technical perspective on how it works and how to "
"extend it, see :doc:`/ref/templates/api`."
msgstr "Ce document présente la syntaxe du langage du système de gabarits de Django. Si vous recherchez une perspective plus technique sur son fonctionnement et sur la manière de l'étendre, consultez :doc:`/ref/templates/api`."

# efa36105f4454cfd88215547e6533628
#: ../../topics/templates.txt:11
msgid ""
"Django's template language is designed to strike a balance between power and"
" ease. It's designed to feel comfortable to those used to working with HTML."
" If you have any exposure to other text-based template languages, such as "
"Smarty_ or CheetahTemplate_, you should feel right at home with Django's "
"templates."
msgstr "Le langage de gabarit de Django est conçu comme un compromis entre puissance et simplicité. Il est conçu pour que les habitués au code HTML se sentent à l'aise. Si vous avez des connaissances d'autres langages de gabarit orientés texte, tels que Smarty_ ou CheetahTemplate_, vous n'allez pas être dépaysés avec les gabarits de Django."

# 63abe068dd734baca60b945cf7ac6450
#: ../../topics/templates.txt:18
msgid ""
"If you have a background in programming, or if you're used to languages "
"which mix programming code directly into HTML, you'll want to bear in mind "
"that the Django template system is not simply Python embedded into HTML. "
"This is by design: the template system is meant to express presentation, not"
" program logic."
msgstr "Si vous avez un arrière-plan de programmation ou que vous êtes habitué aux langages qui mélangent le code de programmation directement dans le code HTML, vous devrez garder à l'esprit que le système des gabarits de Django n'est pas simplement du code Python intégré dans du code HTML. C'est un concept volontaire : le système des gabarits est conçu pour exprimer de la présentation, et non pas de la logique de programmation."

# b6d0451647d54be8b664b1e202691027
#: ../../topics/templates.txt:24
msgid ""
"The Django template system provides tags which function similarly to some "
"programming constructs -- an :ttag:`if` tag for boolean tests, a :ttag:`for`"
" tag for looping, etc. -- but these are not simply executed as the "
"corresponding Python code, and the template system will not execute "
"arbitrary Python expressions. Only the tags, filters and syntax listed below"
" are supported by default (although you can add :doc:`your own extensions "
"</howto/custom-template-tags>` to the template language as needed)."
msgstr "Le système des gabarits de Django fournit des balises dont les fonctions sont semblables à certaines structures de programmation (une balise :ttag:`if` pour les tests booléens, une balise :ttag:`for` pour les boucles, etc.), mais celles-ci ne sont pas simplement exécutées comme le code Python correspondant ; le système des gabarits de Django n'exécute pas n'importe quelle expression Python. Seuls les balises, les filtres et la syntaxe présentés ci-dessous sont pris en charge par défaut (même si vous pouvez ajouter :doc:`vos propres extensions </howto/custom-template-tags>` au langage de gabarit selon vos besoins)."

# eeab453c30f04a86b58a22f1cf6dcac6
#: ../../topics/templates.txt:37
msgid "Templates"
msgstr "Gabarits"

# dda506cc297f444398d70d4641d2286f
#: ../../topics/templates.txt:41
msgid ""
"A template is simply a text file. It can generate any text-based format "
"(HTML, XML, CSV, etc.)."
msgstr "Un gabarit est un simple fichier texte. Il peut générer tout format basé sur du texte (HTML, XML, CSV, etc.)."

# 4932f57c1971429b8e5669af1f23ec84
#: ../../topics/templates.txt:44
msgid ""
"A template contains **variables**, which get replaced with values when the "
"template is evaluated, and **tags**, which control the logic of the "
"template."
msgstr "Un gabarit contient des **variables** qui sont remplacées par des valeurs lorsque le gabarit est évalué, ainsi que des **balises** qui contrôlent la logique du gabarit."

# aa26c6c158e244afa3ecdc397f19ba4b
#: ../../topics/templates.txt:47
msgid ""
"Below is a minimal template that illustrates a few basics. Each element will"
" be explained later in this document."
msgstr "Voici un gabarit minimal illustrant quelques principes de base. Chaque élément sera ensuite expliqué plus loin dans ce document."

# d18ec4cd41ef46199b31a5154debfd72
#: ../../topics/templates.txt:71
msgid ""
"Why use a text-based template instead of an XML-based one (like Zope's TAL)?"
" We wanted Django's template language to be usable for more than just "
"XML/HTML templates. At World Online, we use it for emails, JavaScript and "
"CSV. You can use the template language for any text-based format."
msgstr "Pourquoi utiliser des gabarits basés sur du texte plutôt qu'en XML (comme le langage TAL de Zope) ? Nous avons souhaité que le langage de gabarit de Django ne soit pas uniquement utilisable pour des gabarits XML/HTML. Chez World Online, nous l'avons utilisé pour des courriels, du JavaScript et du CSV. Vous pouvez utiliser le langage de gabarit pour tout format basé sur du texte."

# 859bc7e8bde2434a9549fa16892d4b62
#: ../../topics/templates.txt:77
msgid "Oh, and one more thing: Making humans edit XML is sadistic!"
msgstr "Oh, et encore une chose : forcer des êtres humains à éditer du XML est sadique !"

# 83f893ed6cda49f1829739c9498d7219
#: ../../topics/templates.txt:80
msgid "Variables"
msgstr "Variables"

# 61b3241d9d474fb4aa71cfbcae52e740
#: ../../topics/templates.txt:82
msgid ""
"Variables look like this: ``{{ variable }}``. When the template engine "
"encounters a variable, it evaluates that variable and replaces it with the "
"result. Variable names consist of any combination of alphanumeric characters"
" and the underscore (``\"_\"``). The dot (``\".\"``) also appears in "
"variable sections, although that has a special meaning, as indicated below. "
"Importantly, *you cannot have spaces or punctuation characters in variable "
"names.*"
msgstr "Les variables apparaissent comme ceci : ``{{ variable }}``. Lorsque le moteur de gabarit rencontre une variable, il l'évalue et la remplace par le résultat. Les noms de variables peuvent contenir tout caractère alphanumérique ainsi que le soulignement (``\"_\"``). Le point (``\".\"``) peut aussi faire partie du nom de variable, mais avec une signification particulière, comme nous l'expliquons ci-après. Il est important de relever que *les espaces et la ponctuation ne sont pas autorisés dans les noms de variables*."

# 0a58886418324e83b8b9714c8f793b08
#: ../../topics/templates.txt:90
msgid "Use a dot (``.``) to access attributes of a variable."
msgstr "Le point (``.``) est utilisé pour accéder aux attributs d'une variable."

# 956816fe7c0f4b05aa85414e899f692a
#: ../../topics/templates.txt:92
msgid "Behind the scenes"
msgstr "En coulisses"

# 57ccf5a25aed446ca45485680fbc002e
#: ../../topics/templates.txt:94
msgid ""
"Technically, when the template system encounters a dot, it tries the "
"following lookups, in this order:"
msgstr "Techniquement, lorsque le système de gabarits rencontre un point, il essaie les méthodes d'accès suivantes, dans l'ordre :"

# fbe28d13f9544c81ae4f277fadb8eeb7
#: ../../topics/templates.txt:97
msgid "Dictionary lookup"
msgstr "Consultation de dictionnaire"

# 44ed86cd21744f0085d7be47907d23b8
#: ../../topics/templates.txt:98
msgid "Attribute lookup"
msgstr "Consultation d'attribut"

# e36bc7958fa94c38809eb25ea494b00f
#: ../../topics/templates.txt:99
msgid "Method call"
msgstr "Appel de méthode"

# defb29a5686e4b97bf6b3979eb166433
#: ../../topics/templates.txt:100
msgid "List-index lookup"
msgstr "Consultation de liste indicée"

# 347458b74b6546389f99394f00dabe35
#: ../../topics/templates.txt:102
msgid ""
"This can cause some unexpected behavior with objects that override "
"dictionary lookup. For example, consider the following code snippet that "
"attempts to loop over a ``collections.defaultdict``::"
msgstr "Il peut en résulter un comportement inattendu avec des objets qui surchargent la consultation de dictionnaire. Par exemple, considérez l'extrait de code suivant qui essaie de faire une boucle sur un objet ``collections.defaultdict``::"

# 101a3dc7bfc34047beda9c6e93af97d5
#: ../../topics/templates.txt:110
msgid ""
"Because dictionary lookup happens first, that behavior kicks in and provides"
" a default value instead of using the intended ``.iteritems()`` method. In "
"this case, consider converting to a dictionary first."
msgstr "Comme la consultation de dictionnaire s'effectue en premier, c'est ce qui arrive ici et une valeur par défaut en résulte au lieu de la méthode ``.iteritems()`` attendue. Dans ce cas, il faut envisager de convertir l'objet en dictionnaire simple au préalable."

# bb76af03c4ea4b32a9bcf2ac6d70b41d
#: ../../topics/templates.txt:114
msgid ""
"In the above example, ``{{ section.title }}`` will be replaced with the "
"``title`` attribute of the ``section`` object."
msgstr "Dans l'exemple ci-dessus, ``{{ section.title }}`` sera remplacé par l'attribut ``title`` de l'objet ``section``."

# fc2880fc3dac4925a08b7bd14e9005ef
#: ../../topics/templates.txt:117
msgid ""
"If you use a variable that doesn't exist, the template system will insert "
"the value of the :setting:`TEMPLATE_STRING_IF_INVALID` setting, which is set"
" to ``''`` (the empty string) by default."
msgstr "Si vous appelez une variable qui n'existe pas, le système des gabarits insère la valeur du réglage :setting:`TEMPLATE_STRING_IF_INVALID`, qui vaut  ``''`` (chaîne vide) par défaut."

# 5461e971260b4e57a9546662c2c5aeac
#: ../../topics/templates.txt:121
msgid ""
"Note that \"bar\" in a template expression like ``{{ foo.bar }}`` will be "
"interpreted as a literal string and not using the value of the variable "
"\"bar\", if one exists in the template context."
msgstr "Notez que « bar » dans une expression de gabarit comme ``{{ foo.bar }}`` est interprété comme une chaîne littérale et même si une variable « bar » existe dans le contexte du gabarit, elle ne sera pas appelée."

# e326d4bf95bc4711af3d300c58f728a0
#: ../../topics/templates.txt:128
msgid "You can modify variables for display by using **filters**."
msgstr "Vous pouvez modifier l'affichage des variables en utilisant des **filtres**."

# 9116fb494b43403daa94b7785e7414d8
#: ../../topics/templates.txt:130
msgid ""
"Filters look like this: ``{{ name|lower }}``. This displays the value of the"
" ``{{ name }}`` variable after being filtered through the :tfilter:`lower` "
"filter, which converts text to lowercase. Use a pipe (``|``) to apply a "
"filter."
msgstr "Les filtres ressemblent à ceci : ``{{ nom|lower }}``. Ceci affiche la valeur de la variable ``{{ nom }}`` après avoir été filtrée par le filtre :tfilter:`lower` qui convertit le texte en minuscules. Utilisez la barre verticale (``|``) pour appliquer un filtre."

# 41f1aeeccfa84764b2b2997dadf61713
#: ../../topics/templates.txt:134
msgid ""
"Filters can be \"chained.\" The output of one filter is applied to the next."
" ``{{ text|escape|linebreaks }}`` is a common idiom for escaping text "
"contents, then converting line breaks to ``<p>`` tags."
msgstr "Les filtres peuvent s'enchaîner. Le résultat d'un filtre est appliqué au suivant. ``{{ text|escape|linebreaks }}`` est un idiome courant pour échapper du contenu textuel, puis convertir les sauts de ligne en balises ``<p>``."

# 29f7bbb8f1d74fd69411259e6ac6e241
#: ../../topics/templates.txt:138
msgid ""
"Some filters take arguments. A filter argument looks like this: ``{{ "
"bio|truncatewords:30 }}``. This will display the first 30 words of the "
"``bio`` variable."
msgstr "Certains filtres acceptent des paramètres. Un paramètre de filtre ressemble à ceci : ``{{ bio|truncatewords:30 }}``. Ceci affiche les 30 premiers mots de la variable ``bio``."

# 6e981ef5d45b428f935e0e8add38797e
#: ../../topics/templates.txt:142
msgid ""
"Filter arguments that contain spaces must be quoted; for example, to join a "
"list with commas and spaced you'd use ``{{ list|join:\", \" }}``."
msgstr "Les paramètres de filtre contenant des espaces doivent être placés entre guillemets ; par exemple, pour concaténer une liste en utilisant une virgule et une espace, il faudrait écrire ``{{ liste|join:\", \" }}``."

# 7d9c009dd2f84bb5ba66c039b3d0c9db
#: ../../topics/templates.txt:145
msgid ""
"Django provides about thirty built-in template filters. You can read all "
"about them in the :ref:`built-in filter reference <ref-templates-builtins-"
"filters>`. To give you a taste of what's available, here are some of the "
"more commonly used template filters:"
msgstr "Django fournit une trentaine de filtres de gabarit intégrés. Il sont tous documentés dans la :ref:`référence des filtres intégrés <ref-templates-builtins-filters>`. Pour vous donner une idée de ce qui est disponible, voici quelques-uns des filtres de gabarit les plus utilisés :"

# 10c5ac7d61d64f07bf861b0e02b542a5
#: ../../topics/templates.txt:159
msgid ":tfilter:`default`"
msgstr ":tfilter:`default`"

# f6e0e1c6ca2a4460bd701d5f7860a033
#: ../../topics/templates.txt:151
msgid ""
"If a variable is false or empty, use given default. Otherwise, use the value"
" of the variable"
msgstr "Si une variable contient la valeur faux ou est vide, ce filtre utilise la valeur par défaut indiquée. Sinon, il utilise la valeur de la variable."

# 82db9e930fb8414a8d713d07a43d950c
#: ../../topics/templates.txt:158
msgid ""
"If ``value`` isn't provided or is empty, the above will display "
"\"``nothing``\"."
msgstr "Si ``value`` n'est pas fournie ou qu'elle est vide, le code ci-dessus affiche \"``nothing``\"."

# 9201a2cf25bf48d3b22279e4f7753115
#: ../../topics/templates.txt:167
msgid ":tfilter:`length`"
msgstr ":tfilter:`length`"

# a592ad08006c41ce9cee921d3e5cf879
#: ../../topics/templates.txt:162
msgid ""
"Returns the length of the value. This works for both strings and lists; for "
"example::"
msgstr "Renvoie la longueur de la valeur. Cela fonctionne aussi bien pour du texte que des listes ; par exemple ::"

# a57669e5add54abe9d5f4bcbf03aa443
#: ../../topics/templates.txt:167
msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``4``."
msgstr "Si ``value`` vaut ``['a', 'b', 'c', 'd']``, le résultat sera ``4``."

# 335a0ea90bc949c1a292d53db5af0f59
#: ../../topics/templates.txt:175
msgid ":tfilter:`striptags`"
msgstr ":tfilter:`striptags`"

# 965cfbcddd024e58a0231d3801c045cc
#: ../../topics/templates.txt:170
msgid "Strips all [X]HTML tags. For example::"
msgstr "Élimine toutes les balises [X]HTML. Par exemple ::"

# 450a999762e24b3ea2efea0b2c8b6a1d
#: ../../topics/templates.txt:174
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"``,"
" the output will be ``\"Joel is a slug\"``."
msgstr "Si ``value`` vaut ``\"<b>Joël</b> <button>est</button> une <span>limace</span>\"``, le résultat sera ``\"Joël est une limace\"``."

# ee9fbf5fc0f441258d1a7b7fc1b18eb0
#: ../../topics/templates.txt:177
msgid ""
"Again, these are just a few examples; see the :ref:`built-in filter "
"reference <ref-templates-builtins-filters>` for the complete list."
msgstr "Ce n'était que quelques exemples ; voir la :ref:`référence des filtres intégrés <ref-templates-builtins-filters>` pour une liste complète."

# 080f72c3881540938436af8a97bfa33e
#: ../../topics/templates.txt:180
msgid ""
"You can also create your own custom template filters; see :doc:`/howto"
"/custom-template-tags`."
msgstr "Vous pouvez aussi créer vos propres filtres de gabarit ; voir :doc:`/howto/custom-template-tags`."

# 767aacc387a84cad8bc0f9696cbbfd9e
# 342531b3c4914fdd8001070ac7ac991e
#: ../../topics/templates.txt:185 ../../topics/templates.txt:251
msgid ""
"Django's admin interface can include a complete reference of all template "
"tags and filters available for a given site. See "
":doc:`/ref/contrib/admin/admindocs`."
msgstr "L'interface d'administration de Django peut inclure une référence complète de tous les filtres et balises de gabarit disponibles pour un site donné. Voir :doc:`/ref/contrib/admin/admindocs`."

# b0a53c1f4f7a4186be52714d6ec08253
#: ../../topics/templates.txt:190
msgid "Tags"
msgstr "Balises"

# 674e4bd49e724754b5fdab6275356c45
#: ../../topics/templates.txt:192
msgid ""
"Tags look like this: ``{% tag %}``. Tags are more complex than variables: "
"Some create text in the output, some control flow by performing loops or "
"logic, and some load external information into the template to be used by "
"later variables."
msgstr "Les balises (tags en anglais) ressemblent à ceci : ``{% tag %}``. Les balises sont plus complexes que les variables : certaines produisent du texte, d'autres contrôlent le flux en effectuant des boucles ou de la logique, et d'autres encore chargent des informations externes dans les gabarits pour que des variables puissent les utiliser ensuite."

# 03f65dea03694033ad4279f63cc10c2b
#: ../../topics/templates.txt:196
msgid ""
"Some tags require beginning and ending tags (i.e. ``{% tag %} ... tag "
"contents ... {% endtag %}``)."
msgstr "Certains balises nécessitent une balise ouvrante et une balise fermante (par ex. ``{% tag %} ... contenu de la balise ... {% endtag %}``)."

# dbe2197b871a4c5baab5560131c8e023
#: ../../topics/templates.txt:199
msgid ""
"Django ships with about two dozen built-in template tags. You can read all "
"about them in the :ref:`built-in tag reference <ref-templates-builtins-"
"tags>`. To give you a taste of what's available, here are some of the more "
"commonly used tags:"
msgstr "Django fournit une vingtaine de balises de gabarit intégrées. Elles sont toutes documentées dans la :ref:`référence des balises intégrées <ref-templates-builtins-tags>`. Pour vous donner une idée de ce qui est disponible, voici quelques-unes des balises de gabarit les plus utilisées :"

# a79b8bc0704d47018070dc0a4b064209
#: ../../topics/templates.txt:212
msgid ":ttag:`for`"
msgstr ":ttag:`for`"

# 2f41a054112345e4addfd8c90d389f80
#: ../../topics/templates.txt:205
msgid ""
"Loop over each item in an array.  For example, to display a list of athletes"
" provided in ``athlete_list``::"
msgstr "Boucle sur chaque élément d'une liste. Par exemple, pour afficher la liste des athlètes contenus dans ``athlete_list``::"

# 827b43aa00254f6fbbfb6be2e49b9157
#: ../../topics/templates.txt:237
msgid ":ttag:`if` and ``else``"
msgstr ":ttag:`if` et ``else``"

# c82a2fc58df64547bce4cc3cfb30d5b2
#: ../../topics/templates.txt:215
msgid ""
"Evaluates a variable, and if that variable is \"true\" the contents of the "
"block are displayed::"
msgstr "Évalue une variable, et si cette variable vaut ``True``, le contenu du bloc est affiché ::"

# 4d19f4be1b4a48cca6e4a204807a77b8
#: ../../topics/templates.txt:224
msgid ""
"In the above, if ``athlete_list`` is not empty, the number of athletes will "
"be displayed by the ``{{ athlete_list|length }}`` variable."
msgstr "Dans l'exemple ci-dessus, si ``athlete_list`` n'est pas vide, le nombre d'athlètes est affiché par la variable ``{{ athlete_list|length }}``."

# d368dfa0c5b24534bc3e6423f131721f
#: ../../topics/templates.txt:227
msgid "You can also use filters and various operators in the :ttag:`if` tag::"
msgstr "Vous pouvez également utiliser des filtres et différents opérateurs dans la balise :ttag:`if`::"

# 2d02f50c379e4eb08b582400ff37cb9e
#: ../../topics/templates.txt:235
msgid ""
"While the above example works, be aware that most template filters return "
"strings, so mathematical comparisons using filters will generally not work "
"as you expect. :tfilter:`length` is an exception."
msgstr "Même si l'exemple ci-dessus fonctionne, il faut savoir que la plupart des filtres de gabarit renvoient du texte, et que donc les comparaisons mathématiques impliquant des filtres fonctionnent rarement comme prévu. :tfilter:`length` est une exception."

# 2ee0ad18b2de4a359383f0bf78182b62
#: ../../topics/templates.txt:241
msgid ":ttag:`block` and :ttag:`extends`"
msgstr ":ttag:`block` et :ttag:`extends`"

# 608eea0d2fb2423fa7fe8df1db7c222c
#: ../../topics/templates.txt:240
msgid ""
"Set up `template inheritance`_ (see below), a powerful way of cutting down "
"on \"boilerplate\" in templates."
msgstr "Définit l'`héritage de gabarits`_ (voir ci-dessous), une manière puissante d'éliminer les contenus redondants au niveau des gabarits."

# 8178bad0f7224fb6963bd0db7475a6c4
#: ../../topics/templates.txt:243
msgid ""
"Again, the above is only a selection of the whole list; see the :ref:`built-"
"in tag reference <ref-templates-builtins-tags>` for the complete list."
msgstr "Les exemples ci-dessus ne sont qu'une sélection de la liste complète ; voir la :ref:`référence des balises intégrées <ref-templates-builtins-tags>` pour une liste complète."

# 1e4ad35d57f64164a0ba94387d123d01
#: ../../topics/templates.txt:246
msgid ""
"You can also create your own custom template tags; see :doc:`/howto/custom-"
"template-tags`."
msgstr "Vous pouvez aussi créer vos propres balises de gabarit ; voir :doc:`/howto/custom-template-tags`."

# 4b807218a38741738191a0e841e61c94
#: ../../topics/templates.txt:258
msgid "Comments"
msgstr "Commentaires"

# 3fd39f52c5524724a1a70899b36e7451
#: ../../topics/templates.txt:260
msgid ""
"To comment-out part of a line in a template, use the comment syntax: ``{# "
"#}``."
msgstr "Pour commenter une partie de ligne dans un gabarit, utilisez la syntaxe de commentaire : ``{# #}``."

# 4bc3db09b7d34898986811b76a752609
#: ../../topics/templates.txt:262
msgid "For example, this template would render as ``'hello'``::"
msgstr "Par exemple, ce gabarit produit le contenu ``'hello'``::"

# 951a5db04fbd44d69581383e177262db
#: ../../topics/templates.txt:266
msgid "A comment can contain any template code, invalid or not. For example::"
msgstr "Un commentaire peut contenir n'importe quel code de gabarit, valide ou non. Par exemple ::"

# 972a78dca8bb4e37a278501254154fd4
#: ../../topics/templates.txt:270
msgid ""
"This syntax can only be used for single-line comments (no newlines are "
"permitted between the ``{#`` and ``#}`` delimiters). If you need to comment "
"out a multiline portion of the template, see the :ttag:`comment` tag."
msgstr "Cette syntaxe n'est utilisable que pour les commentaires d'une seule ligne (aucun saut de ligne n'est autorisé entre les délimiteurs ``{#`` et ``#}``). Si vous avez besoin de mettre en commentaire plusieurs lignes d'un gabarit, référez-vous à la balise :ttag:`comment`."

# d79cde764224465e921fa7f78f6fb3fe
#: ../../topics/templates.txt:277
msgid "Template inheritance"
msgstr "Héritage de gabarits"

# 1a61b4053fca48b7851ea7303365e5dd
#: ../../topics/templates.txt:279
msgid ""
"The most powerful -- and thus the most complex -- part of Django's template "
"engine is template inheritance. Template inheritance allows you to build a "
"base \"skeleton\" template that contains all the common elements of your "
"site and defines **blocks** that child templates can override."
msgstr "La partie la plus puissante, mais aussi la plus complexe, du moteur de gabarits de Django est l'héritage des gabarits. Cet héritage permet de construire un gabarit « squelette » de base contenant tous les éléments communs de votre site et de définir des **blocs** que les gabarits enfants peuvent surcharger. "

# e11c5cf298744b028a7e1c01927a30ad
#: ../../topics/templates.txt:284
msgid ""
"It's easiest to understand template inheritance by starting with an "
"example::"
msgstr "Il sera plus facile de comprendre l'héritage des gabarits en commençant par un exemple ::"

# 8b381e40b70d4c0aa0c52f636e162431
#: ../../topics/templates.txt:309
msgid ""
"This template, which we'll call ``base.html``, defines a simple HTML "
"skeleton document that you might use for a simple two-column page. It's the "
"job of \"child\" templates to fill the empty blocks with content."
msgstr "Ce gabarit que nous appellerons ``base.html`` définit un squelette de document HTML simple qui pourrait être employé pour une page simple sur deux colonnes. C'est le travail des gabarits « enfants » de remplir les blocs vides avec du contenu."

# 09895ee29e094857aeff58254ee121ee
#: ../../topics/templates.txt:313
msgid ""
"In this example, the :ttag:`block` tag defines three blocks that child "
"templates can fill in. All the :ttag:`block` tag does is to tell the "
"template engine that a child template may override those portions of the "
"template."
msgstr "Dans cet exemple, la balise :ttag:`block` définit trois blocs que les gabarits enfants peuvent remplir. La balise :ttag:`block` ne fait que signaler au moteur de gabarits qu'un gabarit enfant peut surcharger ces portions du gabarit. "

# d730bfba1ef94305b2ce7040c692647f
#: ../../topics/templates.txt:317
msgid "A child template might look like this::"
msgstr "Un gabarit enfant pourrait ressembler à ceci ::"

# ec90e27f26084d6991354c5de7a6b5fd
#: ../../topics/templates.txt:330
msgid ""
"The :ttag:`extends` tag is the key here. It tells the template engine that "
"this template \"extends\" another template. When the template system "
"evaluates this template, first it locates the parent -- in this case, "
"\"base.html\"."
msgstr "La balise :ttag:`extends` est ici la clé. Elle indique au moteur de gabarits que ce gabarit « étend » un autre gabarit. Lorsque le moteur de gabarits l'évalue, il récupère d'abord le parent, dans ce cas « base.html »."

# 56c651df17bd4ec89a943c4aeb86a76b
#: ../../topics/templates.txt:334
msgid ""
"At that point, the template engine will notice the three :ttag:`block` tags "
"in ``base.html`` and replace those blocks with the contents of the child "
"template. Depending on the value of ``blog_entries``, the output might look "
"like::"
msgstr "À ce stade, le moteur de gabarits remarque les trois balises :ttag:`block` de ``base.html`` et remplace ces blocs par le contenu du gabarit enfant. En fonction de la valeur de ``blog_entries``, le résultat pourrait ressembler à ::"

# ec4e342cfc30461ebadc8b381272331d
#: ../../topics/templates.txt:364
msgid ""
"Note that since the child template didn't define the ``sidebar`` block, the "
"value from the parent template is used instead. Content within a ``{% block "
"%}`` tag in a parent template is always used as a fallback."
msgstr "Notez que comme le gabarit enfant n'a pas défini le bloc ``sidebar``, c'est la valeur provenant du gabarit parent qui est utilisée. C'est toujours le contenu de la balise ``{% block %}`` du gabarit parent qui est utilisé comme contenu par défaut."

# 0743ec72a2c24912859043321ea91c82
#: ../../topics/templates.txt:368
msgid ""
"You can use as many levels of inheritance as needed. One common way of using"
" inheritance is the following three-level approach:"
msgstr "Vous pouvez utiliser autant de niveaux d'héritage que nécessaire. Une façon courante d'utiliser l'héritage est l'approche à trois niveaux suivante :"

# 6bd3e38e3a104e71b02e1f7c46277c80
#: ../../topics/templates.txt:371
msgid ""
"Create a ``base.html`` template that holds the main look-and-feel of your "
"site."
msgstr "Créer un gabarit ``base.html`` contenant l'apparence principale du site."

# f133a45c1ff3495bb9a53d1eb2ae0d37
#: ../../topics/templates.txt:373
msgid ""
"Create a ``base_SECTIONNAME.html`` template for each \"section\" of your "
"site. For example, ``base_news.html``, ``base_sports.html``. These templates"
" all extend ``base.html`` and include section-specific styles/design."
msgstr "Créer un gabarit ``base_NOMSECTION.html`` pour chaque section du site. Par exemple, ``base_actualites.html``, ``base_sports.html``. Tous ces gabarits étendent ``base.html`` et contiennent le style et l'aspect spécifiques à la section."

# d2e7ec2ca3a048c9ab8598ea38276cc8
#: ../../topics/templates.txt:377
msgid ""
"Create individual templates for each type of page, such as a news article or"
" blog entry. These templates extend the appropriate section template."
msgstr "Créer des gabarits individuels pour chaque type de page, tel qu'un article d'actualité ou un article de blog. Ces gabarits étendent le gabarit de la section dans laquelle ils figurent."

# 6f8a678bfc5245b48547debacd1e1170
#: ../../topics/templates.txt:381
msgid ""
"This approach maximizes code reuse and makes it easy to add items to shared "
"content areas, such as section-wide navigation."
msgstr "Cette approche maximise la réutilisation de code et simplifie l'ajout d'éléments aux zones de contenu partagé, telle que la navigation propre à la section."

# 4b9069e8d07f481cbb5c973907681960
#: ../../topics/templates.txt:384
msgid "Here are some tips for working with inheritance:"
msgstr "Voici quelques astuces concernant l'héritage :"

# 76c267b8744146fab98ca8544be2813d
#: ../../topics/templates.txt:386
msgid ""
"If you use :ttag:`{% extends %}<extends>` in a template, it must be the "
"first template tag in that template. Template inheritance won't work, "
"otherwise."
msgstr "Si vous utilisez :ttag:`{% extends %}<extends>` dans un gabarit, cela doit être la première balise dans ce gabarit. Sinon, l'héritage des gabarits ne fonctionnera pas."

# 7bfece0307ad448c97ce7248be977f5e
#: ../../topics/templates.txt:389
msgid ""
"More :ttag:`{% block %}<block>` tags in your base templates are better. "
"Remember, child templates don't have to define all parent blocks, so you can"
" fill in reasonable defaults in a number of blocks, then only define the "
"ones you need later. It's better to have more hooks than fewer hooks."
msgstr "Ne soyez pas économe de balises :ttag:`{% block %}<block>` dans vos gabarits de base. Rappelez-vous que les gabarits enfants ne doivent pas redéfinir tous les blocs du parent, vous pouvez donc placer du contenu généraliste dans certains blocs et ne redéfinir que ce qui est nécessaire dans les gabarits enfants. Il est préférable d'avoir trop de points d'insertion que d'en manquer."

# 7cb1d72789f947aa870f1dc79933c5bc
#: ../../topics/templates.txt:394
msgid ""
"If you find yourself duplicating content in a number of templates, it "
"probably means you should move that content to a ``{% block %}`` in a parent"
" template."
msgstr "Si vous vous retrouvez à dupliquer du contenu dans plusieurs gabarits, cela signifie probablement que vous devriez placer ce contenu dans un ``{% block %}`` d'un gabarit parent."

# e95eeeeabd3b4045b0648921abaf6517
#: ../../topics/templates.txt:398
msgid ""
"If you need to get the content of the block from the parent template, the "
"``{{ block.super }}`` variable will do the trick. This is useful if you want"
" to add to the contents of a parent block instead of completely overriding "
"it. Data inserted using ``{{ block.super }}`` will not be automatically "
"escaped (see the `next section`_), since it was already escaped, if "
"necessary, in the parent template."
msgstr "Si vous avez besoin de reproduire le contenu du bloc du gabarit parent, la variable ``{{ block.super }}`` fera l'affaire. C'est utile lorsque vous voulez compléter le contenu d'un bloc parent plutôt que de l'écraser simplement. Les données insérées par ``{{ block.super }}`` ne sont pas échappées automatiquement (voir la `section suivante`_) puisqu'elles ont déjà été échappées dans le gabarit parent, si nécessaire."

# 7c187c466f734b55a1d7f401c58c535e
#: ../../topics/templates.txt:405
msgid ""
"For extra readability, you can optionally give a *name* to your ``{% "
"endblock %}`` tag. For example::"
msgstr "Pour une meilleure lisibilité, vous pouvez donner un *nom* à votre balise ``{% endblock %}``. Par exemple ::"

# 8c7f4e986f974265943ab637f95b0169
#: ../../topics/templates.txt:412
msgid ""
"In larger templates, this technique helps you see which ``{% block %}`` tags"
" are being closed."
msgstr "Dans les gros gabarits, cette technique permet de mieux voir quelle est la balise ``{% block %}`` que cette balise ferme."

# 30ff852574c44954a5b1cd1b8b9b7bfd
#: ../../topics/templates.txt:415
msgid ""
"Finally, note that you can't define multiple :ttag:`block` tags with the "
"same name in the same template. This limitation exists because a block tag "
"works in \"both\" directions. That is, a block tag doesn't just provide a "
"hole to fill -- it also defines the content that fills the hole in the "
"*parent*. If there were two similarly-named :ttag:`block` tags in a "
"template, that template's parent wouldn't know which one of the blocks' "
"content to use."
msgstr "Pour terminer, notez que vous ne pouvez pas définir plusieurs balises :ttag:`block` ayant le même nom dans le même gabarit. Cette restriction existe parce qu'une balise ``block`` fonctionne dans les « deux » sens. C'est-à-dire qu'une balise ``block`` ne fait pas que définir un vide à combler, elle définit aussi le contenu qui comble ce vide dans le *parent*. S'il y avait deux balises :ttag:`block` ayant le même nom dans un gabarit, le parent de ce gabarit ne saurait pas de quel bloc le contenu doit être pris en compte."

# 73e890c2e0f448d58fc5aa7dd179fd61
#: ../../topics/templates.txt:426
msgid "Automatic HTML escaping"
msgstr "Échappement HTML automatique"

# c01058115ba7471fa959ec5db5bf3b40
#: ../../topics/templates.txt:428
msgid ""
"When generating HTML from templates, there's always a risk that a variable "
"will include characters that affect the resulting HTML. For example, "
"consider this template fragment::"
msgstr "Lors de la production de HTML avec les gabarits, il y a toujours un risque qu'une variable inclue des caractères qui altèrent le HTML produit. Par exemple, considérez cet extrait de gabarit ::"

# 10d79a65ead1464caf2369e562c3ef06
#: ../../topics/templates.txt:434
msgid ""
"At first, this seems like a harmless way to display a user's name, but "
"consider what would happen if the user entered his name as this::"
msgstr "Au premier abord, cela semble une manière inoffensive d'afficher un nom d'utilisateur, mais imaginez ce qui se produit si l'utilisateur a saisi son nom comme ceci ::"

# 9882bff551be43f3b5e00b27823c1831
#: ../../topics/templates.txt:439
msgid "With this name value, the template would be rendered as::"
msgstr "Avec cette valeur pour le nom, le gabarit serait produit comme ceci ::"

# 0318daf20d054f0286e77ab196ec1f55
#: ../../topics/templates.txt:443
msgid "...which means the browser would pop-up a JavaScript alert box!"
msgstr "… ce qui signifie que le navigateur afficherait une fenêtre d'alerte JavaScript !"

# 24394ec4b23c4ccc871db1b98b321969
#: ../../topics/templates.txt:445
msgid "Similarly, what if the name contained a ``'<'`` symbol, like this?"
msgstr "De la même manière, que se passe-t-il si le nom contient un symbole ``'<'`` comme ceci ?"

# ef2d311c27b54901856d5ff1353abc0c
#: ../../topics/templates.txt:451
msgid "That would result in a rendered template like this::"
msgstr "Cela aboutit à l'affichage d'un résultat de gabarit comme ceci ::"

# 754b66c48d93491ca69dbc623c7bea07
#: ../../topics/templates.txt:455
msgid ""
"...which, in turn, would result in the remainder of the Web page being "
"bolded!"
msgstr "…ce qui ferait que tout le reste de la page Web serait affiché en gras !"

# 0cd8ae901af04e7ca0583a4fe68105cb
#: ../../topics/templates.txt:457
msgid ""
"Clearly, user-submitted data shouldn't be trusted blindly and inserted "
"directly into your Web pages, because a malicious user could use this kind "
"of hole to do potentially bad things. This type of security exploit is "
"called a `Cross Site Scripting`_ (XSS) attack."
msgstr "Clairement, il ne faut pas se fier aveuglément aux données envoyées par les utilisateurs en les insérant directement dans vos pages Web, car un utilisateur malveillant pourrait exploiter ce genre de faille dans une mauvaise perspective. Ce type de faille de sécurité est appelé une attaque `Cross Site Scripting`_ (XSS)."

# d8c5990a0a7e4881942811a9a193cf43
#: ../../topics/templates.txt:462
msgid "To avoid this problem, you have two options:"
msgstr "Pour éviter ce problème, vous avez deux options :"

# 28cd87aa8b1441ae8e8e5abf6b9bd334
#: ../../topics/templates.txt:464
msgid ""
"One, you can make sure to run each untrusted variable through the "
":tfilter:`escape` filter (documented below), which converts potentially "
"harmful HTML characters to unharmful ones. This was the default solution in "
"Django for its first few years, but the problem is that it puts the onus on "
"*you*, the developer / template author, to ensure you're escaping "
"everything. It's easy to forget to escape data."
msgstr "Premièrement, vous pouvez vous efforcer de faire passer ces variables non sécurisées par le filtre :tfilter:`escape` (documenté ci-dessous), qui convertit les caractères HTML potentiellement dangereux en caractères inoffensifs. C'est la solution par défaut choisie par Django dans ses premières années, mais le problème est que la pression est sur *vous*, développeur ou auteur de gabarit, qui devez vous assurer que tout soit bien échappé. Il est très vite fait d'oublier d'échapper des données."

# 809096f9fe344c84bca86ff39beb7a98
#: ../../topics/templates.txt:471
msgid ""
"Two, you can take advantage of Django's automatic HTML escaping. The "
"remainder of this section describes how auto-escaping works."
msgstr "Deuxièmement, vous pouvez profiter de l'échappement automatique de HTML que Django effectue. Le reste de cette section décrit le fonctionnement de l'échappement automatique."

# f1d3b641bf2b4d258881a9e260223105
#: ../../topics/templates.txt:474
msgid ""
"By default in Django, every template automatically escapes the output of "
"every variable tag. Specifically, these five characters are escaped:"
msgstr "Par défaut dans Django, chaque gabarit échappe automatiquement le résultat de chaque balise de variable. Plus précisément, ces cinq caractères sont échappés :"

# 14b42011bd564f359a27d97831ed1b6f
#: ../../topics/templates.txt:478
msgid "``<`` is converted to ``&lt;``"
msgstr "``<`` est converti en ``&lt;``"

# 3c8a4619e7e94e0fa4e22fbd13f74355
#: ../../topics/templates.txt:479
msgid "``>`` is converted to ``&gt;``"
msgstr "``>`` est converti en ``&gt;``"

# 3cadad5c01df4af89d8ae5c976103bac
#: ../../topics/templates.txt:480
msgid "``'`` (single quote) is converted to ``&#39;``"
msgstr "``'`` (apostrophe) est converti en ``&#39;``"

# c1a56809043448989a70caf33a3bfd1c
#: ../../topics/templates.txt:481
msgid "``\"`` (double quote) is converted to ``&quot;``"
msgstr "``\"`` (guillemet) est converti en ``&quot;``"

# aec5712aaa8d4b408f666d1078784b3e
#: ../../topics/templates.txt:482
msgid "``&`` is converted to ``&amp;``"
msgstr "``&`` est converti en ``&amp;``"

# 1d6a4775b47048fa92f1b337bb7954c3
#: ../../topics/templates.txt:484
msgid ""
"Again, we stress that this behavior is on by default. If you're using "
"Django's template system, you're protected."
msgstr "Nous répétons ici que ce comportement est actif par défaut. Si vous utilisez le système des gabarits de Django, vous êtes protégé."

# 28afc1be28c941988c3249d799e2eef9
#: ../../topics/templates.txt:490
msgid "How to turn it off"
msgstr "Comment désactiver l'échappement automatique"

# f5560268bde54d74a79d717f5ab33b37
#: ../../topics/templates.txt:492
msgid ""
"If you don't want data to be auto-escaped, on a per-site, per-template level"
" or per-variable level, you can turn it off in several ways."
msgstr "Si vous ne voulez pas que les données soient échappées automatiquement, au niveau d'un site, d'un gabarit ou d'une variable, vous pouvez le désactiver de plusieurs manières."

# c7270e9837684655962f0c924b47437c
#: ../../topics/templates.txt:495
msgid ""
"Why would you want to turn it off? Because sometimes, template variables "
"contain data that you *intend* to be rendered as raw HTML, in which case you"
" don't want their contents to be escaped. For example, you might store a "
"blob of HTML in your database and want to embed that directly into your "
"template. Or, you might be using Django's template system to produce text "
"that is *not* HTML -- like an email message, for instance."
msgstr "Pourquoi vouloir désactiver ce comportement ? Parce qu'il peut arriver parfois que des variables de gabarit contiennent des données que vous voulez vraiment afficher comme contenu HTML brut, auquel cas vous ne souhaitez pas que ces contenus soient échappés. Par exemple, vous stockez peut-être du code HTML dans votre base de données afin de l'intégrer tel quel dans un gabarit. Un autre exemple est quand vous voulez utiliser le système des gabarits de Django pour produire du texte *non* HTML, comme un message électronique."

# f385bd87d3344280b0ed8afa7ee9cb37
#: ../../topics/templates.txt:503
msgid "For individual variables"
msgstr "Pour des variables individuelles"

# a6898ba5f1dd4953a64ce1e2308ddda0
#: ../../topics/templates.txt:505
msgid ""
"To disable auto-escaping for an individual variable, use the :tfilter:`safe`"
" filter::"
msgstr "Pour désactiver l'échappement automatique pour une variable individuelle, utilisez le filtre :tfilter:`safe`::"

# 267b9206aa6d4a77b121a906033a3628
#: ../../topics/templates.txt:511
msgid ""
"Think of *safe* as shorthand for *safe from further escaping* or *can be "
"safely interpreted as HTML*. In this example, if ``data`` contains "
"``'<b>'``, the output will be::"
msgstr "``safe`` (sûr en anglais) peut être considéré comme un raccourci de *sûr de ne pas nécessiter d'échappement* ou *peut être interprété en HTML de manière sûre*. Dans cet exemple, si ``data`` contient ``'<b>'``, le résultat affiché sera ::"

# 8bad5ee3ddf5485e91c5a71182c52aef
#: ../../topics/templates.txt:519
msgid "For template blocks"
msgstr "Pour des blocs de gabarits"

# c975c39edffe40639ad4d095e379de81
#: ../../topics/templates.txt:521
msgid ""
"To control auto-escaping for a template, wrap the template (or just a "
"particular section of the template) in the :ttag:`autoescape` tag, like so::"
msgstr "Pour contrôler l'échappement automatique dans un gabarit, entourez le gabarit (ou seulement une portion du gabarit) par la balise :ttag:`autoescape`, comme ceci ::"

# 06ae04880f9b48e29a071778fbdf14f1
#: ../../topics/templates.txt:528
msgid ""
"The :ttag:`autoescape` tag takes either ``on`` or ``off`` as its argument. "
"At times, you might want to force auto-escaping when it would otherwise be "
"disabled. Here is an example template::"
msgstr "La balise :ttag:`autoescape` accepte ``on`` ou ``off`` comme paramètre. Il est parfois souhaitable de forcer l'échappement automatique dans un contexte où il est désactivé. Voici un exemple de gabarit ::"

# 82d7faf285474fc29d71823d1efa2ec3
#: ../../topics/templates.txt:543
msgid ""
"The auto-escaping tag passes its effect onto templates that extend the "
"current one as well as templates included via the :ttag:`include` tag, just "
"like all block tags. For example::"
msgstr "La balise d'échappement automatique transmet ses effets aux gabarits qui étendent le gabarit en cours ainsi qu'aux gabarits inclus par la balise :ttag:`include`, comme pour toutes les balises de bloc. Par exemple ::"

# 563a8633c11f42ef9cb0bd96c0508be4
#: ../../topics/templates.txt:562
msgid ""
"Because auto-escaping is turned off in the base template, it will also be "
"turned off in the child template, resulting in the following rendered HTML "
"when the ``greeting`` variable contains the string ``<b>Hello!</b>``::"
msgstr "Comme l'échappement automatique est désactivé dans le gabarit de base, il sera aussi désactivé dans le gabarit enfant, ce qui aboutit par exemple au contenu HTML affiché suivant lorsque la variable ``greeting`` contient le texte ``<b>Hello!</b>``::"

# c433ae55cf6f47d6a101db86742bfe96
#: ../../topics/templates.txt:570
msgid "Notes"
msgstr "Notes"

# 1f9fafaf0afa4133999d6f4a5b48d78b
#: ../../topics/templates.txt:572
msgid ""
"Generally, template authors don't need to worry about auto-escaping very "
"much. Developers on the Python side (people writing views and custom "
"filters) need to think about the cases in which data shouldn't be escaped, "
"and mark data appropriately, so things Just Work in the template."
msgstr "Généralement, les rédacteurs de gabarits n'ont pas besoin de se préoccuper de l'échappement automatique. Les développeurs du côté Python (ceux qui écrivent les vues et les filtres personnalisés) doivent réfléchir aux situations dans lesquelles les données ne devraient pas subir d'échappement et marquer les données en conséquence, afin que tout fonctionne comme prévu dans les gabarits."

# 2432e91142bd4c0baed814b4d31c491e
#: ../../topics/templates.txt:577
msgid ""
"If you're creating a template that might be used in situations where you're "
"not sure whether auto-escaping is enabled, then add an :tfilter:`escape` "
"filter to any variable that needs escaping. When auto-escaping is on, "
"there's no danger of the :tfilter:`escape` filter *double-escaping* data -- "
"the :tfilter:`escape` filter does not affect auto-escaped variables."
msgstr "Si vous créez un gabarit pouvant être utilisé dans des situations où vous n'êtes pas sûr si l'échappement automatique est actif, ajoutez le filtre :tfilter:`escape` à toute variable nécessitant l'échappement. Quand l'échappement automatique est actif, il n'y a pas de risque que que le filtre :tfilter:`escape` *échappe doublement* les données car celui-ci ne touche pas aux variables ayant déjà subi l'échappement automatique."

# 948849dc39a84c59a37f0dedc1599896
#: ../../topics/templates.txt:586
msgid "String literals and automatic escaping"
msgstr "Texte littéral et échappement automatique"

# fb26a170e3864182b0261a2a40f45673
#: ../../topics/templates.txt:588
msgid "As we mentioned earlier, filter arguments can be strings::"
msgstr "Comme mentionné précédemment, les paramètres de filtres peuvent être des chaînes de caractères ::"

# 767b90ebe14c48c290216fd080518091
#: ../../topics/templates.txt:592
msgid ""
"All string literals are inserted **without** any automatic escaping into the"
" template -- they act as if they were all passed through the :tfilter:`safe`"
" filter. The reasoning behind this is that the template author is in control"
" of what goes into the string literal, so they can make sure the text is "
"correctly escaped when the template is written."
msgstr "Tout texte littéral est inséré **sans** échappement automatique dans le gabarit, comme s'il était systématiquement passé par le filtre :tfilter:`safe`. La logique de ce comportement est que l'auteur du gabarit a le contrôle sur le contenu du texte, il peut donc s'assurer que le texte est correctement échappé au moment de la rédaction du gabarit."

# 08dcf01583cd453c84b964e9220b4e63
#: ../../topics/templates.txt:598
msgid "This means you would write ::"
msgstr "Cela signifie qu'il faut écrire ::"

# f03efc635155483dbfa8b2479fdb88e5
#: ../../topics/templates.txt:602
msgid "...rather than ::"
msgstr "…et non pas ::"

# bb12b75a4a28414595bd5f5797699a42
#: ../../topics/templates.txt:606
msgid ""
"This doesn't affect what happens to data coming from the variable itself. "
"The variable's contents are still automatically escaped, if necessary, "
"because they're beyond the control of the template author."
msgstr "Cela n'affecte pas les données provenant de la variable elle-même. Le contenu de la variable est toujours échappé automatiquement, si nécessaire, parce qu'il est hors du contrôle de l'auteur du gabarit."

# 5c539e490cc5468d904b346d82c6078b
#: ../../topics/templates.txt:613
msgid "Accessing method calls"
msgstr "Accès aux appels de méthodes"

# d134c42d4e4744289a4f4819b694ccb3
#: ../../topics/templates.txt:615
msgid ""
"Most method calls attached to objects are also available from within "
"templates. This means that templates have access to much more than just "
"class attributes (like field names) and variables passed in from views. For "
"example, the Django ORM provides the :ref:`\"entry_set\"<topics-db-queries-"
"related>` syntax for finding a collection of objects related on a foreign "
"key. Therefore, given a model called \"comment\" with a foreign key "
"relationship to a model called \"task\" you can loop through all comments "
"attached to a given task like this::"
msgstr "La plupart des appels de méthodes liées aux objets sont aussi disponibles depuis les gabarits. Cela signifie que les gabarits n'ont pas uniquement accès aux attributs de classe (comme les noms de champs) ou aux variables transmises depuis les vues. Par exemple, l'ORM de Django offre la syntaxe :ref:`\"entry_set\"<topics-db-queries-related>` pour récupérer une collection d'objets liés par une clé étrangère. Ainsi, étant donné un modèle « comment » avec une relation clé étrangère vers un modèle « task », vous pouvez effectuer une boucle sur tous les commentaires liés à une tâche donnée comme ceci ::"

# 316ea98309044904baf31bfccd19d306
#: ../../topics/templates.txt:627
msgid ""
"Similarly, :doc:`QuerySets</ref/models/querysets>` provide a ``count()`` "
"method to count the number of objects they contain. Therefore, you can "
"obtain a count of all comments related to the current task with::"
msgstr "De même, les objets :doc:`QuerySets</ref/models/querysets>` offrent une méthode ``count()`` pour compter le nombre d'objets qu'ils contiennent. Vous pouvons donc obtenir le nombre de tous les commentaires liés à la tâche actuelle avec ::"

# 7c6d699843fd48ed86283ecdb8c343e1
#: ../../topics/templates.txt:633
msgid ""
"And of course you can easily access methods you've explicitly defined on "
"your own models::"
msgstr "Et bien sûr vous pouvez facilement accéder aux méthodes que vous avez explicitement définies pour vos propres modèles ::"

# e1226d67ea5b4cb1bfd45a580d5dde51
#: ../../topics/templates.txt:644
msgid ""
"Because Django intentionally limits the amount of logic processing available"
" in the template language, it is not possible to pass arguments to method "
"calls accessed from within templates. Data should be calculated in views, "
"then passed to templates for display."
msgstr "Comme Django limite intentionnellement les traitements logiques possibles dans le langage de gabarit, il n'est pas possible de transmettre des paramètres aux appels de méthodes depuis les gabarits. Les données doivent être calculées dans les vues, puis transmises aux gabarits pour être affichées."

# 7de5548845ac4ba5aabb61e63c344497
#: ../../topics/templates.txt:652
msgid "Custom tag and filter libraries"
msgstr "Bibliothèques de balises et filtres personnalisés"

# c48ae32c5e654659bae12e04f155ddfa
#: ../../topics/templates.txt:654
msgid ""
"Certain applications provide custom tag and filter libraries. To access them"
" in a template, use the :ttag:`load` tag::"
msgstr "Certaines applications contiennent leurs propres bibliothèques de balises et de filtres. Pour y accéder à partir d'un gabarit, utilisez la balise :ttag:`load`::"

# 3cda7af11f4843daae54df953464b33b
#: ../../topics/templates.txt:661
msgid ""
"In the above, the :ttag:`load` tag loads the ``comments`` tag library, which"
" then makes the ``comment_form`` tag available for use. Consult the "
"documentation area in your admin to find the list of custom libraries in "
"your installation."
msgstr "Ci-dessus, la balise :ttag:`load` charge la bibliothèque de balises ``comments``, ce qui permet ensuite d'utiliser la balise ``comment_form`` dans le gabarit. Consultez la section de documentation de votre interface d'administration pour trouver la liste des bibliothèques personnalisées dans votre installation."

# c579cc9eb6bd4941bf12f50f5343d870
#: ../../topics/templates.txt:665
msgid ""
"The :ttag:`load` tag can take multiple library names, separated by spaces. "
"Example::"
msgstr "La balise :ttag:`load` accepte plusieurs noms de bibliothèques séparés par des espaces. Exemple ::"

# 57e83f2e5f9e431b96c2ff23decce22d
#: ../../topics/templates.txt:670
msgid ""
"See :doc:`/howto/custom-template-tags` for information on writing your own "
"custom template libraries."
msgstr "Consultez :doc:`/howto/custom-template-tags` pour obtenir des informations sur l'écriture de vos propres bibliothèques de gabarits."

# e55565823dc840c1aaec07e11e2210d1
#: ../../topics/templates.txt:674
msgid "Custom libraries and template inheritance"
msgstr "Bibliothèques personnalisées et héritage de gabarits"

# 5f2fc51320934eb5a0fae2a09733631d
#: ../../topics/templates.txt:676
msgid ""
"When you load a custom tag or filter library, the tags/filters are only made"
" available to the current template -- not any parent or child templates "
"along the template-inheritance path."
msgstr "Lorsque vous chargez une bibliothèque de balises ou de filtres, ces balises/filtres ne sont disponibles que pour le gabarit concerné, et pas pour les gabarits parents ou enfants dans la chaîne d'héritage des gabarits."

# a8495efba0ab4d6b829b627c340fba35
#: ../../topics/templates.txt:680
msgid ""
"For example, if a template ``foo.html`` has ``{% load comments %}``, a child"
" template (e.g., one that has ``{% extends \"foo.html\" %}``) will *not* "
"have access to the comments template tags and filters. The child template is"
" responsible for its own ``{% load comments %}``."
msgstr "Par exemple, si un gabarit ``foo.html`` contient ``{% load comments %}``, un gabarit enfant (c'est-à-dire un gabarit contenant ``{% extends \"foo.html\" %}``)  n'aura *pas* accès aux balises et filtres de gabarit de ``comments``. Le gabarit enfant est responsable de charger lui-même ``{% load comments %}``."

# f29fe3764e6045eb8a5f21293eec6dcf
#: ../../topics/templates.txt:685
msgid "This is a feature for the sake of maintainability and sanity."
msgstr "C'est un comportement volontaire pour une meilleure maintenance et propreté du code."

# 9967390c02d44377b7472984100e8719
#: ../../topics/testing/advanced.txt:3
msgid "Advanced testing topics"
msgstr ""

# dcd2e6e1218b479e94335f17641aeac6
#: ../../topics/testing/advanced.txt:6
msgid "The request factory"
msgstr ""

# 63ce0e9984284e77972f46d20dbf5e8b
#: ../../topics/testing/advanced.txt:12
msgid ""
"The :class:`~django.test.client.RequestFactory` shares the same API as the "
"test client. However, instead of behaving like a browser, the RequestFactory"
" provides a way to generate a request instance that can be used as the first"
" argument to any view. This means you can test a view function the same way "
"as you would test any other function -- as a black box, with exactly known "
"inputs, testing for specific outputs."
msgstr ""

# f829b0b44de54c39a2e6a712181c2ff3
#: ../../topics/testing/advanced.txt:19
msgid ""
"The API for the :class:`~django.test.client.RequestFactory` is a slightly "
"restricted subset of the test client API:"
msgstr ""

# 1cdf33631b584703a7da8465b636b88f
#: ../../topics/testing/advanced.txt:22
msgid ""
"It only has access to the HTTP methods :meth:`~Client.get()`, "
":meth:`~Client.post()`, :meth:`~Client.put()`, :meth:`~Client.delete()`, "
":meth:`~Client.head()` and :meth:`~Client.options()`."
msgstr ""

# d3e8ee1172d54348a42c6521f83b7fee
#: ../../topics/testing/advanced.txt:27
msgid ""
"These methods accept all the same arguments *except* for ``follows``. Since "
"this is just a factory for producing requests, it's up to you to handle the "
"response."
msgstr ""

# 41a9470c21f24c59ae692b1880a978bf
#: ../../topics/testing/advanced.txt:31
msgid ""
"It does not support middleware. Session and authentication attributes must "
"be supplied by the test itself if required for the view to function "
"properly."
msgstr ""

# 046a63b0b1ad4b989c1f065f764002dc
#: ../../topics/testing/advanced.txt:38
msgid "The following is a simple unit test using the request factory::"
msgstr ""

# d756075c095a4835bc616885a9f9436d
#: ../../topics/testing/advanced.txt:66
msgid "Tests and multiple databases"
msgstr ""

# b85af8039d4d45fbbe0d41af8acfccea
#: ../../topics/testing/advanced.txt:71
msgid "Testing master/slave configurations"
msgstr ""

# 7cd7b08fc9e54d29a57c6e92c57d8196
#: ../../topics/testing/advanced.txt:73
msgid ""
"If you're testing a multiple database configuration with master/slave "
"replication, this strategy of creating test databases poses a problem. When "
"the test databases are created, there won't be any replication, and as a "
"result, data created on the master won't be seen on the slave."
msgstr ""

# 0b27f0b7d43c4c39aab25e5f61eef289
#: ../../topics/testing/advanced.txt:79
msgid ""
"To compensate for this, Django allows you to define that a database is a "
"*test mirror*. Consider the following (simplified) example database "
"configuration::"
msgstr ""

# fb74e65266d347d2b82078d1cd5793ba
#: ../../topics/testing/advanced.txt:99
msgid ""
"In this setup, we have two database servers: ``dbmaster``, described by the "
"database alias ``default``, and ``dbslave`` described by the alias "
"``slave``. As you might expect, ``dbslave`` has been configured by the "
"database administrator as a read slave of ``dbmaster``, so in normal "
"activity, any write to ``default`` will appear on ``slave``."
msgstr ""

# 6f492fb6b14c49ef83b6dcb9716c1dfa
#: ../../topics/testing/advanced.txt:105
msgid ""
"If Django created two independent test databases, this would break any tests"
" that expected replication to occur. However, the ``slave`` database has "
"been configured as a test mirror (using the :setting:`TEST_MIRROR` setting),"
" indicating that under testing, ``slave`` should be treated as a mirror of "
"``default``."
msgstr ""

# 5265d029ce874b53a5944b8e3a08aee8
#: ../../topics/testing/advanced.txt:111
msgid ""
"When the test environment is configured, a test version of ``slave`` will "
"*not* be created. Instead the connection to ``slave`` will be redirected to "
"point at ``default``. As a result, writes to ``default`` will appear on "
"``slave`` -- but because they are actually the same database, not because "
"there is data replication between the two databases."
msgstr ""

# 859393b988b44ef78c50811fac841a15
#: ../../topics/testing/advanced.txt:121
msgid "Controlling creation order for test databases"
msgstr ""

# 9d7a383d214a4627addf1636e7a40b87
#: ../../topics/testing/advanced.txt:123
msgid ""
"By default, Django will assume all databases depend on the ``default`` "
"database and therefore always create the ``default`` database first. "
"However, no guarantees are made on the creation order of any other databases"
" in your test setup."
msgstr ""

# 5ae063227ef541b3ad1e94b8a8a71361
#: ../../topics/testing/advanced.txt:128
msgid ""
"If your database configuration requires a specific creation order, you can "
"specify the dependencies that exist using the :setting:`TEST_DEPENDENCIES` "
"setting. Consider the following (simplified) example database "
"configuration::"
msgstr ""

# 77c37e7c7f434222847a483e9e184cf2
#: ../../topics/testing/advanced.txt:156
msgid ""
"Under this configuration, the ``diamonds`` database will be created first, "
"as it is the only database alias without dependencies. The ``default`` and "
"``clubs`` alias will be created next (although the order of creation of this"
" pair is not guaranteed); then ``hearts``; and finally ``spades``."
msgstr ""

# f0dabc775510418d8b406702d55e1ccf
#: ../../topics/testing/advanced.txt:161
msgid ""
"If there are any circular dependencies in the :setting:`TEST_DEPENDENCIES` "
"definition, an ``ImproperlyConfigured`` exception will be raised."
msgstr ""

# 571a427d82e344ef92c11956d867d37c
#: ../../topics/testing/advanced.txt:166
msgid "Advanced features of ``TransactionTestCase``"
msgstr ""

# 412c4e773ba145619fc8dad8c23c7cc5
#: ../../topics/testing/advanced.txt:176
msgid ""
"This attribute is a private API. It may be changed or removed without a "
"deprecation period in the future, for instance to accomodate changes in "
"application loading."
msgstr ""

# 937014b2be2e43f8a85c4252bba0f3fc
#: ../../topics/testing/advanced.txt:180
msgid ""
"It's used to optimize Django's own test suite, which contains hundreds of "
"models but no relations between models in different applications."
msgstr ""

# 393fd604436a45ea9f87b14865be2fb2
#: ../../topics/testing/advanced.txt:183
msgid ""
"By default, ``available_apps`` is set to ``None``. After each test, Django "
"calls :djadmin:`flush` to reset the database state. This empties all tables "
"and emits the :data:`~django.db.models.signals.post_syncdb` signal, which "
"re-creates one content type and three permissions for each model. This "
"operation gets expensive proportionally to the number of models."
msgstr ""

# e355cfafd5c7498eafc1d5f65e5f166b
#: ../../topics/testing/advanced.txt:189
msgid ""
"Setting ``available_apps`` to a list of applications instructs Django to "
"behave as if only the models from these applications were available. The "
"behavior of ``TransactionTestCase`` changes as follows:"
msgstr ""

# 22bda13a53cb4065b95234b790b5ee4c
#: ../../topics/testing/advanced.txt:193
msgid ""
":data:`~django.db.models.signals.post_syncdb` is fired before each test to "
"create the content types and permissions for each model in available apps, "
"in case they're missing."
msgstr ""

# 2aa35f1c1578499d83be301cfe0217d3
#: ../../topics/testing/advanced.txt:196
msgid ""
"After each test, Django empties only tables corresponding to models in "
"available apps. However, at the database level, truncation may cascade to "
"related models in unavailable apps. Furthermore "
":data:`~django.db.models.signals.post_syncdb` isn't fired; it will be fired "
"by the next ``TransactionTestCase``, after the correct set of applications "
"is selected."
msgstr ""

# d37b0900b4bc4272b57ba514a5eb8e8a
#: ../../topics/testing/advanced.txt:203
msgid ""
"Since the database isn't fully flushed, if a test creates instances of "
"models not included in ``available_apps``, they will leak and they may cause"
" unrelated tests to fail. Be careful with tests that use sessions; the "
"default session engine stores them in the database."
msgstr ""

# 7181981bfa60413bb689eb654e7d5b7e
#: ../../topics/testing/advanced.txt:208
msgid ""
"Since :data:`~django.db.models.signals.post_syncdb` isn't emitted after "
"flushing the database, its state after a ``TransactionTestCase`` isn't the "
"same as after a ``TestCase``: it's missing the rows created by listeners to "
":data:`~django.db.models.signals.post_syncdb`. Considering the :ref:`order "
"in which tests are executed <order-of-tests>`, this isn't an issue, provided"
" either all ``TransactionTestCase`` in a given test suite declare "
"``available_apps``, or none of them."
msgstr ""

# a00e44e3b9ce43f39e0cdb08966ff65d
#: ../../topics/testing/advanced.txt:216
msgid "``available_apps`` is mandatory in Django's own test suite."
msgstr ""

# 0d70dc38f8974ed9b79bc29e314cb59a
#: ../../topics/testing/advanced.txt:222
msgid ""
"Setting ``reset_sequences = True`` on a ``TransactionTestCase`` will make "
"sure sequences are always reset before the test run::"
msgstr ""

# ebd7aea624374aee8f61b479736d8b58
#: ../../topics/testing/advanced.txt:233
msgid ""
"Unless you are explicitly testing primary keys sequence numbers, it is "
"recommended that you do not hard code primary key values in tests."
msgstr ""

# cf69851bd4cf49959c40a64c1c411197
#: ../../topics/testing/advanced.txt:236
msgid ""
"Using ``reset_sequences = True`` will slow down the test, since the primary "
"key reset is an relatively expensive database operation."
msgstr ""

# f7d9a06f750548fda60f913e4fb25e1e
#: ../../topics/testing/advanced.txt:240
msgid "Running tests outside the test runner"
msgstr ""

# d8cd5d04e8d94146bed1334b58db5716
#: ../../topics/testing/advanced.txt:242
msgid ""
"If you want to run tests outside of ``./manage.py test`` -- for example, "
"from a shell prompt -- you will need to set up the test environment first. "
"Django provides a convenience method to do this::"
msgstr ""

# d34e5f9c987742cb8a58fe383783fb7d
#: ../../topics/testing/advanced.txt:249
msgid ""
":func:`~django.test.utils.setup_test_environment` puts several Django "
"features into modes that allow for repeatable testing, but does not create "
"the test databases; "
":func:`django.test.runner.DiscoverRunner.setup_databases` takes care of "
"that."
msgstr ""

# 3d49856e3f5844729a86c53ac6e13265
#: ../../topics/testing/advanced.txt:254
msgid ""
"The call to :func:`~django.test.utils.setup_test_environment` is made "
"automatically as part of the setup of ``./manage.py test``. You only need to"
" manually invoke this method if you're not using running your tests via "
"Django's test runner."
msgstr ""

# 705f04cc00e045f99773586d9f43c741
#: ../../topics/testing/advanced.txt:262
msgid "Using different testing frameworks"
msgstr ""

# 34a32d9fb7c74b378de2a73b4aad94ab
#: ../../topics/testing/advanced.txt:264
msgid ""
"Clearly, :mod:`unittest` is not the only Python testing framework. While "
"Django doesn't provide explicit support for alternative frameworks, it does "
"provide a way to invoke tests constructed for an alternative framework as if"
" they were normal Django tests."
msgstr ""

# 995f1b224b3d4b33ba4d916009b6fbd9
#: ../../topics/testing/advanced.txt:269
msgid ""
"When you run ``./manage.py test``, Django looks at the "
":setting:`TEST_RUNNER` setting to determine what to do. By default, "
":setting:`TEST_RUNNER` points to ``'django.test.runner.DiscoverRunner'``. "
"This class defines the default Django testing behavior. This behavior "
"involves:"
msgstr ""

# 3a93d8e1a66341789da3946af51c549d
#: ../../topics/testing/advanced.txt:274
msgid "Performing global pre-test setup."
msgstr ""

# 73b15cd9304c4362928fa9e8e717c3a5
#: ../../topics/testing/advanced.txt:276
msgid ""
"Looking for tests in any file below the current directory whose name matches"
" the pattern ``test*.py``."
msgstr ""

# 4843a999346a461ea548c21d8d85918c
#: ../../topics/testing/advanced.txt:279
msgid "Creating the test databases."
msgstr ""

# b1154e96dcd54f4ebec07710866c1da1
#: ../../topics/testing/advanced.txt:281
msgid ""
"Running ``syncdb`` to install models and initial data into the test "
"databases."
msgstr ""

# c211b8bb3a7d453484c1e39599295948
#: ../../topics/testing/advanced.txt:284
msgid "Running the tests that were found."
msgstr ""

# b4782d201bdd4e8a9edb6edaf663acee
#: ../../topics/testing/advanced.txt:286
msgid "Destroying the test databases."
msgstr ""

# 5b196352a2a241a294bfed7422cc4443
#: ../../topics/testing/advanced.txt:288
msgid "Performing global post-test teardown."
msgstr ""

# bdbd22b7451d454ba544a18dc00d17c8
#: ../../topics/testing/advanced.txt:290
msgid ""
"If you define your own test runner class and point :setting:`TEST_RUNNER` at"
" that class, Django will execute your test runner whenever you run "
"``./manage.py test``. In this way, it is possible to use any test framework "
"that can be executed from Python code, or to modify the Django test "
"execution process to satisfy whatever testing requirements you may have."
msgstr ""

# 9f0c2446a411496dad907290ef1a62b7
#: ../../topics/testing/advanced.txt:299
msgid "Defining a test runner"
msgstr ""

# 77e60f1c9c0e4249a9d5cf25b4016b4d
#: ../../topics/testing/advanced.txt:305
msgid ""
"A test runner is a class defining a ``run_tests()`` method. Django ships "
"with a ``DiscoverRunner`` class that defines the default Django testing "
"behavior. This class defines the ``run_tests()`` entry point, plus a "
"selection of other methods that are used to by ``run_tests()`` to set up, "
"execute and tear down the test suite."
msgstr ""

# d1fe9de5d24541f18bef518177069292
#: ../../topics/testing/advanced.txt:313
msgid ""
"``DiscoverRunner`` will search for tests in any file matching ``pattern``."
msgstr ""

# c5dc0fd5d40a40d6804d15bbdce62523
#: ../../topics/testing/advanced.txt:315
msgid ""
"``top_level`` can be used to specify the directory containing your top-level"
" Python modules. Usually Django can figure this out automatically, so it's "
"not necessary to specify this option. If specified, it should generally be "
"the directory containing your ``manage.py`` file."
msgstr ""

# e68a510d05e34e44bc40e4a928c7f593
#: ../../topics/testing/advanced.txt:320
msgid ""
"``verbosity`` determines the amount of notification and debug information "
"that will be printed to the console; ``0`` is no output, ``1`` is normal "
"output, and ``2`` is verbose output."
msgstr ""

# 8a36cc5ed4584e899ae528914be9bf9d
#: ../../topics/testing/advanced.txt:324
msgid ""
"If ``interactive`` is ``True``, the test suite has permission to ask the "
"user for instructions when the test suite is executed. An example of this "
"behavior would be asking for permission to delete an existing test database."
" If ``interactive`` is ``False``, the test suite must be able to run without"
" any manual intervention."
msgstr ""

# f40e01394bb0482ab5ea12d9613f6889
#: ../../topics/testing/advanced.txt:330
msgid ""
"If ``failfast`` is ``True``, the test suite will stop running after the "
"first test failure is detected."
msgstr ""

# 0559b7d4de044f6fb38c7aba4277822b
#: ../../topics/testing/advanced.txt:333
msgid ""
"Django may, from time to time, extend the capabilities of the test runner by"
" adding new arguments. The ``**kwargs`` declaration allows for this "
"expansion. If you subclass ``DiscoverRunner`` or write your own test runner,"
" ensure it accepts ``**kwargs``."
msgstr ""

# 2335126870e0436caefed50dc222c7d1
#: ../../topics/testing/advanced.txt:338
msgid ""
"Your test runner may also define additional command-line options. If you add"
" an ``option_list`` attribute to a subclassed test runner, those options "
"will be added to the list of command-line options that the :djadmin:`test` "
"command can use."
msgstr ""

# 558b508bbb934b9b8e75632009231bc3
#: ../../topics/testing/advanced.txt:348
msgid ""
"This is the class that loads tests, whether from TestCases or modules or "
"otherwise and bundles them into test suites for the runner to execute. By "
"default it is set to ``unittest.defaultTestLoader``. You can override this "
"attribute if your tests are going to be loaded in unusual ways."
msgstr ""

# b05f7ae8d7154140975dfcd2ae9109ad
#: ../../topics/testing/advanced.txt:355
msgid ""
"This is the tuple of ``optparse`` options which will be fed into the "
"management command's ``OptionParser`` for parsing arguments. See the "
"documentation for Python's ``optparse`` module for more details."
msgstr ""

# 6132ae0e21e241dda6d3b06490a8dec2
#: ../../topics/testing/advanced.txt:364
msgid "Run the test suite."
msgstr ""

# 50bb46345b5046bfa94787c72c540eed
#: ../../topics/testing/advanced.txt:366
msgid ""
"``test_labels`` is a list of strings describing the tests to be run. A test "
"label can take one of four forms:"
msgstr ""

# f720197443d54c23a5785042c25a5e5f
#: ../../topics/testing/advanced.txt:369
msgid ""
"``path.to.test_module.TestCase.test_method`` -- Run a single test method in "
"a test case."
msgstr ""

# 1ded2a1964a943cb81a07721c8e0139f
#: ../../topics/testing/advanced.txt:371
msgid ""
"``path.to.test_module.TestCase`` -- Run all the test methods in a test case."
msgstr ""

# abed680e57e34e38b8abbbf9e161db60
#: ../../topics/testing/advanced.txt:373
msgid ""
"``path.to.module`` -- Search for and run all tests in the named Python "
"package or module."
msgstr ""

# 8a683f66a9a0459fbfa7d6d703b2d9e6
#: ../../topics/testing/advanced.txt:375
msgid ""
"``path/to/directory`` -- Search for and run all tests below the named "
"directory."
msgstr ""

# ebcf9dde23e0479aa3e56cdad8a3f45c
#: ../../topics/testing/advanced.txt:378
msgid ""
"If ``test_labels`` has a value of ``None``, the test runner will search for "
"tests in all files below the current directory whose names match its "
"``pattern`` (see above)."
msgstr ""

# a322419b05744c5693a619e58513b276
# 8fc3d19ba2c749afa9b9a7e5258f4e71
#: ../../topics/testing/advanced.txt:382 ../../topics/testing/advanced.txt:409
msgid ""
"``extra_tests`` is a list of extra ``TestCase`` instances to add to the "
"suite that is executed by the test runner. These extra tests are run in "
"addition to those discovered in the modules listed in ``test_labels``."
msgstr ""

# 5e0301911aa04d7cab71ad35d978d2e6
#: ../../topics/testing/advanced.txt:386
msgid "This method should return the number of tests that failed."
msgstr ""

# 7a7d728b1d4a4192ac17666a7164fc06
#: ../../topics/testing/advanced.txt:390
msgid ""
"Sets up the test environment by calling "
":func:`~django.test.utils.setup_test_environment` and setting "
":setting:`DEBUG` to ``False``."
msgstr ""

# bcd298576cdd4d119ad6d33ef40445cd
#: ../../topics/testing/advanced.txt:396
msgid "Constructs a test suite that matches the test labels provided."
msgstr ""

# ec2b6041c9e444c987ac4eea3b1fc47a
#: ../../topics/testing/advanced.txt:398
msgid ""
"``test_labels`` is a list of strings describing the tests to be run. A test "
"label can take one of three forms:"
msgstr ""

# bb0a7bdd22774db1966ae4c64818b9ae
#: ../../topics/testing/advanced.txt:401
msgid ""
"``app.TestCase.test_method`` -- Run a single test method in a test case."
msgstr ""

# 898023ba477848358eab805c13e1b1d1
#: ../../topics/testing/advanced.txt:403
msgid "``app.TestCase`` -- Run all the test methods in a test case."
msgstr ""

# 7b83fae885574258a2a89f5d0801911a
#: ../../topics/testing/advanced.txt:404
msgid "``app`` -- Search for and run all tests in the named application."
msgstr ""

# 5da01b11dd5d44d785ec36a00dd781c4
#: ../../topics/testing/advanced.txt:406
msgid ""
"If ``test_labels`` has a value of ``None``, the test runner should run "
"search for tests in all the applications in :setting:`INSTALLED_APPS`."
msgstr ""

# 0f27d0cce7644fd88df0b42977e216ee
#: ../../topics/testing/advanced.txt:413
msgid "Returns a ``TestSuite`` instance ready to be run."
msgstr ""

# c3d0c15e6fcf4f22a95a5f4922103924
#: ../../topics/testing/advanced.txt:417
msgid "Creates the test databases."
msgstr ""

# d2b5a646f2a4405a9c5f83cf80094580
#: ../../topics/testing/advanced.txt:419
msgid ""
"Returns a data structure that provides enough detail to undo the changes "
"that have been made. This data will be provided to the "
"``teardown_databases()`` function at the conclusion of testing."
msgstr ""

# 2ba5ae3385c249ad91872335e6b7ffcd
#: ../../topics/testing/advanced.txt:425
msgid "Runs the test suite."
msgstr ""

# 599fc3ea7bf74235b7b03188ddbaec3e
#: ../../topics/testing/advanced.txt:427
msgid "Returns the result produced by the running the test suite."
msgstr ""

# a93153b22a8f4e2fb53125293aa2c73b
#: ../../topics/testing/advanced.txt:431
msgid "Destroys the test databases, restoring pre-test conditions."
msgstr ""

# b30f9cb08705438e8596d480656debbe
#: ../../topics/testing/advanced.txt:433
msgid ""
"``old_config`` is a data structure defining the changes in the database "
"configuration that need to be reversed. It is the return value of the "
"``setup_databases()`` method."
msgstr ""

# 6bb6c3e202384c76a38c3c25a6e612ca
#: ../../topics/testing/advanced.txt:439
msgid "Restores the pre-test environment."
msgstr ""

# c5a91b7bd9f24bd8bf05070eb9ba13ff
#: ../../topics/testing/advanced.txt:443
msgid ""
"Computes and returns a return code based on a test suite, and the result "
"from that test suite."
msgstr ""

# b9313e81fd124b74b535f44e6986715c
#: ../../topics/testing/advanced.txt:448
msgid "Testing utilities"
msgstr ""

# fb5839d550e94c4ebff2070219c72b63
#: ../../topics/testing/advanced.txt:451
msgid "django.test.utils"
msgstr ""

# 278a35dc415747fa951275dcba2f2e49
#: ../../topics/testing/advanced.txt:456
msgid ""
"To assist in the creation of your own test runner, Django provides a number "
"of utility methods in the ``django.test.utils`` module."
msgstr ""

# a36d990fa04a487597069f87b4b71240
#: ../../topics/testing/advanced.txt:461
msgid ""
"Performs any global pre-test setup, such as the installing the "
"instrumentation of the template rendering system and setting up the dummy "
"email outbox."
msgstr ""

# 5eee4c232b9445f9bf87ecdceed58171
#: ../../topics/testing/advanced.txt:467
msgid ""
"Performs any global post-test teardown, such as removing the black magic "
"hooks into the template system and restoring normal email services."
msgstr ""

# 3282da4a6a5146c79c3a2a3087434933
#: ../../topics/testing/advanced.txt:472
msgid "django.db.connection.creation"
msgstr ""

# 3ddc4bd892f242b99648734c3472da4e
#: ../../topics/testing/advanced.txt:476
msgid ""
"The creation module of the database backend also provides some utilities "
"that can be useful during testing."
msgstr ""

# 8c59a426ea7145b1b9b7a74b4b7744f8
#: ../../topics/testing/advanced.txt:481
msgid "Creates a new test database and runs ``syncdb`` against it."
msgstr ""

# 09e34f1944704260a4eeae5055150cd9
#: ../../topics/testing/advanced.txt:483
msgid "``verbosity`` has the same behavior as in ``run_tests()``."
msgstr ""

# 4304357bd99448459bff2e4d57a97eab
#: ../../topics/testing/advanced.txt:485
msgid ""
"``autoclobber`` describes the behavior that will occur if a database with "
"the same name as the test database is discovered:"
msgstr ""

# a23ec3ae880342179c3abc63eb6631f9
#: ../../topics/testing/advanced.txt:488
msgid ""
"If ``autoclobber`` is ``False``, the user will be asked to approve "
"destroying the existing database. ``sys.exit`` is called if the user does "
"not approve."
msgstr ""

# 586c002a01894e7a8f5a1edddd3de03d
#: ../../topics/testing/advanced.txt:492
msgid ""
"If autoclobber is ``True``, the database will be destroyed without "
"consulting the user."
msgstr ""

# 9b5e53671eb546939149e98e4a13d404
#: ../../topics/testing/advanced.txt:495
msgid "Returns the name of the test database that it created."
msgstr ""

# 946532a8ccf94aef9111b83647586a23
#: ../../topics/testing/advanced.txt:497
msgid ""
"``create_test_db()`` has the side effect of modifying the value of "
":setting:`NAME` in :setting:`DATABASES` to match the name of the test "
"database."
msgstr ""

# d212952fa29a4316a6059a5caf5d4254
#: ../../topics/testing/advanced.txt:503
msgid ""
"Destroys the database whose name is the value of :setting:`NAME` in "
":setting:`DATABASES`, and sets :setting:`NAME` to the value of "
"``old_database_name``."
msgstr ""

# 6d25ab8e9663482793a738875196f081
#: ../../topics/testing/advanced.txt:507
msgid ""
"The ``verbosity`` argument has the same behavior as for "
":class:`~django.test.runner.DiscoverRunner`."
msgstr ""

# ea0fdb13a0144635b9b6975be7a5b853
#: ../../topics/testing/advanced.txt:513
msgid "Integration with coverage.py"
msgstr ""

# 9c3728a7390c4bf48e5b5a0206149c17
#: ../../topics/testing/advanced.txt:515
msgid ""
"Code coverage describes how much source code has been tested. It shows which"
" parts of your code are being exercised by tests and which are not. It's an "
"important part of testing applications, so it's strongly recommended to "
"check the coverage of your tests."
msgstr ""

# 6416354451504befb0d6c7dc242c3989
#: ../../topics/testing/advanced.txt:520
msgid ""
"Django can be easily integrated with `coverage.py`_, a tool for measuring "
"code coverage of Python programs. First, `install coverage.py`_. Next, run "
"the following from your project folder containing ``manage.py``::"
msgstr ""

# 63ada4a0753c437ab1ef7ebf81006b3b
#: ../../topics/testing/advanced.txt:526
msgid ""
"This runs your tests and collects coverage data of the executed files in "
"your project. You can see a report of this data by typing following "
"command::"
msgstr ""

# dbbc8ba94cbb466f9fd2eb733b2ea430
#: ../../topics/testing/advanced.txt:531
msgid ""
"Note that some Django code was executed while running tests, but it is not "
"listed here because of the ``source`` flag passed to the previous command."
msgstr ""

# c854da69eb63451ba373b9619427a8f4
#: ../../topics/testing/advanced.txt:534
msgid ""
"For more options like annotated HTML listings detailing missed lines, see "
"the `coverage.py`_ docs."
msgstr ""

# 529662640a974767a64cfd4db0accea8
#: ../../topics/testing/index.txt:3
msgid "Testing in Django"
msgstr ""

# fa2b458d9fea4973b9a52bc384958898
#: ../../topics/testing/index.txt:11
msgid ""
"Automated testing is an extremely useful bug-killing tool for the modern Web"
" developer. You can use a collection of tests -- a **test suite** -- to "
"solve, or avoid, a number of problems:"
msgstr ""

# 7b5b8a36b04745c6beaa09964c8e5015
#: ../../topics/testing/index.txt:15
msgid ""
"When you're writing new code, you can use tests to validate your code works "
"as expected."
msgstr ""

# 91d685e29bfd40f683d6fcd248cc6baa
#: ../../topics/testing/index.txt:18
msgid ""
"When you're refactoring or modifying old code, you can use tests to ensure "
"your changes haven't affected your application's behavior unexpectedly."
msgstr ""

# f966a51853cc43beac1a1284f0d655e0
#: ../../topics/testing/index.txt:22
msgid ""
"Testing a Web application is a complex task, because a Web application is "
"made of several layers of logic -- from HTTP-level request handling, to form"
" validation and processing, to template rendering. With Django's test-"
"execution framework and assorted utilities, you can simulate requests, "
"insert test data, inspect your application's output and generally verify "
"your code is doing what it should be doing."
msgstr ""

# 873f8bb036c641de831c6983ab95b78f
#: ../../topics/testing/index.txt:29
msgid "The best part is, it's really easy."
msgstr ""

# ab4d1af9119846fa9171d12260649e35
#: ../../topics/testing/index.txt:32
msgid "Where to go from here"
msgstr ""

# 8f3d96e381b7445caaca17d2bf9e76fa
#: ../../topics/testing/index.txt:34
msgid ""
"The preferred way to write tests in Django is using the :mod:`unittest` "
"module built in to the Python standard library. This is covered in detail in"
" the :doc:`overview` document."
msgstr ""

# 461c1c55de8f4b86960d98a3551b2dca
#: ../../topics/testing/index.txt:38
msgid ""
"You can also use any *other* Python test framework; Django provides an API "
"and tools for that kind of integration. They are described in the :ref"
":`other-testing-frameworks` section of :doc:`advanced`."
msgstr ""

# a343c03f2c1340afae78ca4dc0a66bee
#: ../../topics/testing/overview.txt:3
msgid "Testing Django applications"
msgstr ""

# 652111a1de4f4f88bf06ffcdac6b1bcd
#: ../../topics/testing/overview.txt:10
msgid ""
"The :doc:`testing tutorial </intro/tutorial05>` and the :doc:`advanced "
"testing topics </topics/testing/advanced>`."
msgstr ""

# 04063c4982174eefa4196bc73e77e6c9
#: ../../topics/testing/overview.txt:13
msgid ""
"This document is split into two primary sections. First, we explain how to "
"write tests with Django. Then, we explain how to run them."
msgstr ""

# c87ef523fd59417598ac7cfef24e1a7e
#: ../../topics/testing/overview.txt:17
msgid "Writing tests"
msgstr ""

# a602ea484c724b9fb4c8a5e5a95e2973
#: ../../topics/testing/overview.txt:19
msgid ""
"Django's unit tests use a Python standard library module: :mod:`unittest`. "
"This module defines tests using a class-based approach."
msgstr ""

# d184f62f40c044318d14443f2f3b1846
#: ../../topics/testing/overview.txt:22
msgid "unittest2"
msgstr ""

# ea509f3b4c6046eb80b471b947c309b5
#: ../../topics/testing/overview.txt:24
msgid ""
"Python 2.7 introduced some major changes to the ``unittest`` library, adding"
" some extremely useful features. To ensure that every Django project can "
"benefit from these new features, Django ships with a copy of unittest2_, a "
"copy of Python 2.7's ``unittest``, backported for Python 2.6 compatibility."
msgstr ""

# fcd537e071044a94ba69bc13049f3df1
#: ../../topics/testing/overview.txt:30
msgid ""
"To access this library, Django provides the ``django.utils.unittest`` module"
" alias. If you are using Python 2.7, or you have installed ``unittest2`` "
"locally, Django will map the alias to it. Otherwise, Django will use its own"
" bundled version of ``unittest2``."
msgstr ""

# 8433a79b1db64049a9905f56335ddc23
#: ../../topics/testing/overview.txt:35
msgid "To use this alias, simply use::"
msgstr ""

# a3eb8e6e88af4adabc4fce35519236b9
#: ../../topics/testing/overview.txt:39
msgid "wherever you would have historically used::"
msgstr ""

# 4cc3a82ab5f543359fca9412f4c22d65
#: ../../topics/testing/overview.txt:43
msgid ""
"If you want to continue to use the legacy ``unittest`` library, you can -- "
"you just won't get any of the nice new ``unittest2`` features."
msgstr ""

# 7bb87fbb16d34959b7955ebaf2f2d127
#: ../../topics/testing/overview.txt:48
msgid ""
"Here is an example which subclasses from :class:`django.test.TestCase`, "
"which is a subclass of :class:`unittest.TestCase` that runs each test inside"
" a transaction to provide isolation::"
msgstr ""

# a3b796a0ec8b441784982e692777f98f
#: ../../topics/testing/overview.txt:67
msgid ""
"When you :ref:`run your tests <running-tests>`, the default behavior of the "
"test utility is to find all the test cases (that is, subclasses of "
":class:`unittest.TestCase`) in any file whose name begins with ``test``, "
"automatically build a test suite out of those test cases, and run that "
"suite."
msgstr ""

# da2462f3d0f54d26ba3e2e0e06255200
#: ../../topics/testing/overview.txt:74
msgid ""
"Previously, Django's default test runner only discovered tests in "
"``tests.py`` and ``models.py`` files within a Python package listed in "
":setting:`INSTALLED_APPS`."
msgstr ""

# 73f49f4cc60d4aaaa2bbdabef2729ac6
#: ../../topics/testing/overview.txt:78
msgid "For more details about :mod:`unittest`, see the Python documentation."
msgstr ""

# 3abb4cb7d6274934a0b59fdd3b2505db
#: ../../topics/testing/overview.txt:82
msgid ""
"If your tests rely on database access such as creating or querying models, "
"be sure to create your test classes as subclasses of "
":class:`django.test.TestCase` rather than :class:`unittest.TestCase`."
msgstr ""

# 8fb980e85d29442dad6487ac25086a5e
#: ../../topics/testing/overview.txt:86
msgid ""
"Using :class:`unittest.TestCase` avoids the cost of running each test in a "
"transaction and flushing the database, but if your tests interact with the "
"database their behavior will vary based on the order that the test runner "
"executes them. This can lead to unit tests that pass when run in isolation "
"but fail when run in a suite."
msgstr ""

# f77c2ddeac404e9d9bd17baa2c06779c
#: ../../topics/testing/overview.txt:96
msgid "Running tests"
msgstr "Lancement des tests"

# dadc5df060e7433588b98eec847e16b4
#: ../../topics/testing/overview.txt:98
msgid ""
"Once you've written tests, run them using the :djadmin:`test` command of "
"your project's ``manage.py`` utility::"
msgstr ""

# 5adda91cde65422aa43f6d2833bd6557
#: ../../topics/testing/overview.txt:103
msgid ""
"Test discovery is based on the unittest module's :py:ref:`built-in test "
"discovery <unittest-test-discovery>`.  By default, this will discover tests "
"in any file named \"test*.py\" under the current working directory."
msgstr ""

# 59daa34e656c41fda006e7f199d00cf8
#: ../../topics/testing/overview.txt:107
msgid ""
"You can specify particular tests to run by supplying any number of \"test "
"labels\" to ``./manage.py test``. Each test label can be a full Python "
"dotted path to a package, module, ``TestCase`` subclass, or test method. For"
" instance::"
msgstr ""

# e3e1b7e030544625868fb7b08af877cd
#: ../../topics/testing/overview.txt:123
msgid ""
"You can also provide a path to a directory to discover tests below that "
"directory::"
msgstr ""

# 8a6fa6b69bb24b109ff52629a3ea655c
#: ../../topics/testing/overview.txt:128
msgid ""
"You can specify a custom filename pattern match using the ``-p`` (or "
"``--pattern``) option, if your test files are named differently from the "
"``test*.py`` pattern::"
msgstr ""

# 2b23a36a64994c369f0547e4ba55ef1d
#: ../../topics/testing/overview.txt:136
msgid ""
"Previously, test labels were in the form ``applabel``, "
"``applabel.TestCase``, or ``applabel.TestCase.test_method``, rather than "
"being true Python dotted paths, and tests could only be found within "
"``tests.py`` or ``models.py`` files within a Python package listed in "
":setting:`INSTALLED_APPS`. The ``--pattern`` option and file paths as test "
"labels are new in 1.6."
msgstr ""

# ca1fcc181110460fbe46c84fa2f44d43
#: ../../topics/testing/overview.txt:143
msgid ""
"If you press ``Ctrl-C`` while the tests are running, the test runner will "
"wait for the currently running test to complete and then exit gracefully. "
"During a graceful exit the test runner will output details of any test "
"failures, report on how many tests were run and how many errors and failures"
" were encountered, and destroy any test databases as usual. Thus pressing "
"``Ctrl-C`` can be very useful if you forget to pass the "
":djadminopt:`--failfast` option, notice that some tests are unexpectedly "
"failing, and want to get details on the failures without waiting for the "
"full test run to complete."
msgstr ""

# f9b49ff982504c1c9d2b32a4ad17af57
#: ../../topics/testing/overview.txt:152
msgid ""
"If you do not want to wait for the currently running test to finish, you can"
" press ``Ctrl-C`` a second time and the test run will halt immediately, but "
"not gracefully. No details of the tests run before the interruption will be "
"reported, and any test databases created by the run will not be destroyed."
msgstr ""

# 8ebafef447264e66b86d1f4fa188b903
#: ../../topics/testing/overview.txt:157
msgid "Test with warnings enabled"
msgstr ""

# e2d8d44ebb4a458b8e738b4d01a92f48
#: ../../topics/testing/overview.txt:159
msgid ""
"It's a good idea to run your tests with Python warnings enabled: ``python "
"-Wall manage.py test``. The ``-Wall`` flag tells Python to display "
"deprecation warnings. Django, like many other Python libraries, uses these "
"warnings to flag when features are going away. It also might flag areas in "
"your code that aren't strictly wrong but could benefit from a better "
"implementation."
msgstr ""

# d1128cc8221a4817920c4332a1be6ab9
#: ../../topics/testing/overview.txt:170
msgid "The test database"
msgstr ""

# ffcfe01cc9a444f78a53c8a133dbcd8e
#: ../../topics/testing/overview.txt:172
msgid ""
"Tests that require a database (namely, model tests) will not use your "
"\"real\" (production) database. Separate, blank databases are created for "
"the tests."
msgstr ""

# 90712b0e0b7c44cb9a4bd0b0d21bae5e
#: ../../topics/testing/overview.txt:175
msgid ""
"Regardless of whether the tests pass or fail, the test databases are "
"destroyed when all the tests have been executed."
msgstr ""

# 581348c19e744b4daee3f3ba2e28760a
#: ../../topics/testing/overview.txt:178
msgid ""
"By default the test databases get their names by prepending ``test_`` to the"
" value of the :setting:`NAME` settings for the databases defined in "
":setting:`DATABASES`. When using the SQLite database engine the tests will "
"by default use an in-memory database (i.e., the database will be created in "
"memory, bypassing the filesystem entirely!). If you want to use a different "
"database name, specify :setting:`TEST_NAME` in the dictionary for any given "
"database in :setting:`DATABASES`."
msgstr ""

# 67d2d585e7ae4e1290da0992d4b348c7
#: ../../topics/testing/overview.txt:187
msgid ""
"Aside from using a separate database, the test runner will otherwise use all"
" of the same database settings you have in your settings file: "
":setting:`ENGINE <DATABASE-ENGINE>`, :setting:`USER`, :setting:`HOST`, etc. "
"The test database is created by the user specified by :setting:`USER`, so "
"you'll need to make sure that the given user account has sufficient "
"privileges to create a new database on the system."
msgstr ""

# e6ccc686870b4c79a3110140c9c18550
#: ../../topics/testing/overview.txt:194
msgid ""
"For fine-grained control over the character encoding of your test database, "
"use the :setting:`TEST_CHARSET` option. If you're using MySQL, you can also "
"use the :setting:`TEST_COLLATION` option to control the particular collation"
" used by the test database. See the :doc:`settings documentation "
"</ref/settings>` for details of these advanced settings."
msgstr ""

# 5ce9ccca331b421b8e674b0daa2396d8
#: ../../topics/testing/overview.txt:201
msgid "Finding data from your production database when running tests?"
msgstr ""

# 0526a8d63a8944a090e1836ae8cbf2a0
#: ../../topics/testing/overview.txt:203
msgid ""
"If your code attempts to access the database when its modules are compiled, "
"this will occur *before* the test database is set up, with potentially "
"unexpected results. For example, if you have a database query in module-"
"level code and a real database exists, production data could pollute your "
"tests. *It is a bad idea to have such import-time database queries in your "
"code* anyway - rewrite your code so that it doesn't do this."
msgstr ""

# 095a5e42c8ad4504aba6250cec8d469f
#: ../../topics/testing/overview.txt:212
msgid ""
"The :ref:`advanced multi-db testing topics <topics-testing-advanced-"
"multidb>`."
msgstr ""

# a4ddc47aa5414e718853f0a8fd453ad8
#: ../../topics/testing/overview.txt:217
msgid "Order in which tests are executed"
msgstr ""

# e0bec4f08a8d4274a264fa4056c18abd
#: ../../topics/testing/overview.txt:219
msgid ""
"In order to guarantee that all ``TestCase`` code starts with a clean "
"database, the Django test runner reorders tests in the following way:"
msgstr ""

# 501f27d3401b427cb7e9e04b7b6d14ef
#: ../../topics/testing/overview.txt:222
msgid "All :class:`~django.test.TestCase` subclasses are run first."
msgstr ""

# 59c248be962943fc9fb93027f7e3b235
#: ../../topics/testing/overview.txt:224
msgid ""
"Then, all other unittests (including :class:`unittest.TestCase`, "
":class:`~django.test.SimpleTestCase` and "
":class:`~django.test.TransactionTestCase`) are run with no particular "
"ordering guaranteed nor enforced among them."
msgstr ""

# ee114dbc0a194ed38f11ed085d985e9b
#: ../../topics/testing/overview.txt:229
msgid ""
"Then any other tests (e.g. doctests) that may alter the database without "
"restoring it to its original state are run."
msgstr ""

# e78e6f96a96e4c85b0517c22060f5d53
#: ../../topics/testing/overview.txt:234
msgid ""
"Before Django 1.5, the only guarantee was that "
":class:`~django.test.TestCase` tests were always ran first, before any other"
" tests."
msgstr ""

# adc5a86d4e6d48a89d11f0b54e60305d
#: ../../topics/testing/overview.txt:240
msgid ""
"The new ordering of tests may reveal unexpected dependencies on test case "
"ordering. This is the case with doctests that relied on state left in the "
"database by a given :class:`~django.test.TransactionTestCase` test, they "
"must be updated to be able to run independently."
msgstr ""

# 5c1b4db965e44f338450d18964bdb4f2
#: ../../topics/testing/overview.txt:246
msgid "Other test conditions"
msgstr ""

# 171919cef627413dba299fe2c795ca2b
#: ../../topics/testing/overview.txt:248
msgid ""
"Regardless of the value of the :setting:`DEBUG` setting in your "
"configuration file, all Django tests run with :setting:`DEBUG`\\=False. This"
" is to ensure that the observed output of your code matches what will be "
"seen in a production setting."
msgstr ""

# cad2707bb5c047f9991ba67bcb61d42c
#: ../../topics/testing/overview.txt:253
msgid ""
"Caches are not cleared after each test, and running \"manage.py test "
"fooapp\" can insert data from the tests into the cache of a live system if "
"you run your tests in production because, unlike databases, a separate "
"\"test cache\" is not used. This behavior `may change`_ in the future."
msgstr ""

# 967a1192864d4d97b6ffe158e5b36133
#: ../../topics/testing/overview.txt:261
msgid "Understanding the test output"
msgstr ""

# d0dbb4c0b8ac45c7bd508315dd42bd1e
#: ../../topics/testing/overview.txt:263
msgid ""
"When you run your tests, you'll see a number of messages as the test runner "
"prepares itself. You can control the level of detail of these messages with "
"the ``verbosity`` option on the command line::"
msgstr ""

# bd25195350624efda96d17aac43e5d6a
#: ../../topics/testing/overview.txt:273
msgid ""
"This tells you that the test runner is creating a test database, as "
"described in the previous section."
msgstr ""

# e5b3b4ba8aad4059865691682f333f59
#: ../../topics/testing/overview.txt:276
msgid ""
"Once the test database has been created, Django will run your tests. If "
"everything goes well, you'll see something like this::"
msgstr ""

# ae2fb2214e6246b0b4931e06268955d6
#: ../../topics/testing/overview.txt:284
msgid ""
"If there are test failures, however, you'll see full details about which "
"tests failed::"
msgstr ""

# 5bc0d927963a4733b12eafb36028efa2
#: ../../topics/testing/overview.txt:300
msgid ""
"A full explanation of this error output is beyond the scope of this "
"document, but it's pretty intuitive. You can consult the documentation of "
"Python's :mod:`unittest` library for details."
msgstr ""

# efc30135d73947848ef211f25b5678ac
#: ../../topics/testing/overview.txt:304
msgid ""
"Note that the return code for the test-runner script is 1 for any number of "
"failed and erroneous tests. If all the tests pass, the return code is 0. "
"This feature is useful if you're using the test-runner script in a shell "
"script and need to test for success or failure at that level."
msgstr ""

# 927bc1a85ca94667b84209431739d012
#: ../../topics/testing/overview.txt:310
msgid "Speeding up the tests"
msgstr ""

# ff9ce4bfdcb2433b91390417a54a1766
#: ../../topics/testing/overview.txt:312
msgid ""
"In recent versions of Django, the default password hasher is rather slow by "
"design. If during your tests you are authenticating many users, you may want"
" to use a custom settings file and set the :setting:`PASSWORD_HASHERS` "
"setting to a faster hashing algorithm::"
msgstr ""

# 02347882d46d44f0a2f5366abddcf2b3
#: ../../topics/testing/overview.txt:321
msgid ""
"Don't forget to also include in :setting:`PASSWORD_HASHERS` any hashing "
"algorithm used in fixtures, if any."
msgstr ""

# c6e3717c59d9488b8e9edcb1d170e4e1
#: ../../topics/testing/overview.txt:325
msgid "Testing tools"
msgstr ""

# d09accaeaee44d8490ee9277a32e7845
#: ../../topics/testing/overview.txt:327
msgid ""
"Django provides a small set of tools that come in handy when writing tests."
msgstr ""

# ee2ff2c48a374b30a84cdb7f1a4d3ec6
#: ../../topics/testing/overview.txt:332
msgid "The test client"
msgstr ""

# 3209d8b552ab4f90b2e196b719120b62
#: ../../topics/testing/overview.txt:337
msgid ""
"The test client is a Python class that acts as a dummy Web browser, allowing"
" you to test your views and interact with your Django-powered application "
"programmatically."
msgstr ""

# 1cb3636ceecc4aeaa591288bb108a7b8
#: ../../topics/testing/overview.txt:341
msgid "Some of the things you can do with the test client are:"
msgstr ""

# 4fb1781aee9a49689d3e7b89cb160bcf
#: ../../topics/testing/overview.txt:343
msgid ""
"Simulate GET and POST requests on a URL and observe the response -- "
"everything from low-level HTTP (result headers and status codes) to page "
"content."
msgstr ""

# 586af7966b264b92b33d2d5aded6b0ed
#: ../../topics/testing/overview.txt:347
msgid ""
"See the chain of redirects (if any) and check the URL and status code at "
"each step."
msgstr ""

# 88c94923795a43ab9d28ffb2e2205fea
#: ../../topics/testing/overview.txt:350
msgid ""
"Test that a given request is rendered by a given Django template, with a "
"template context that contains certain values."
msgstr ""

# e7275c7349a24323bc85af0355d372d7
#: ../../topics/testing/overview.txt:353
msgid ""
"Note that the test client is not intended to be a replacement for Selenium_ "
"or other \"in-browser\" frameworks. Django's test client has a different "
"focus. In short:"
msgstr ""

# f7896b41eb0d498588de549dceafbead
#: ../../topics/testing/overview.txt:357
msgid ""
"Use Django's test client to establish that the correct template is being "
"rendered and that the template is passed the correct context data."
msgstr ""

# 0b3b5de404fa44dfa646e727de88beb7
#: ../../topics/testing/overview.txt:360
msgid ""
"Use in-browser frameworks like Selenium_ to test *rendered* HTML and the "
"*behavior* of Web pages, namely JavaScript functionality. Django also "
"provides special support for those frameworks; see the section on "
":class:`~django.test.LiveServerTestCase` for more details."
msgstr ""

# 8e66f2f1d2e04e20b38a76912a82c15e
#: ../../topics/testing/overview.txt:365
msgid ""
"A comprehensive test suite should use a combination of both test types."
msgstr ""

# d1bcf7a379524ce6be902aebe89a8f48
#: ../../topics/testing/overview.txt:368
msgid "Overview and a quick example"
msgstr ""

# 004b78cd5a694298af26a9c7dc6d2576
#: ../../topics/testing/overview.txt:370
msgid ""
"To use the test client, instantiate ``django.test.client.Client`` and "
"retrieve Web pages::"
msgstr ""

# a767a87188d2405bb388745271992024
#: ../../topics/testing/overview.txt:382
msgid ""
"As this example suggests, you can instantiate ``Client`` from within a "
"session of the Python interactive interpreter."
msgstr ""

# 78c8361a18aa43dda6eeb60bfea15fbd
#: ../../topics/testing/overview.txt:385
msgid "Note a few important things about how the test client works:"
msgstr ""

# 99fa7dd713534021b3e9cb0f9729192c
#: ../../topics/testing/overview.txt:387
msgid ""
"The test client does *not* require the Web server to be running. In fact, it"
" will run just fine with no Web server running at all! That's because it "
"avoids the overhead of HTTP and deals directly with the Django framework. "
"This helps make the unit tests run quickly."
msgstr ""

# 97314109bb1a43df940995f410a0aa66
#: ../../topics/testing/overview.txt:392
msgid ""
"When retrieving pages, remember to specify the *path* of the URL, not the "
"whole domain. For example, this is correct::"
msgstr ""

# 1f41f3ddbcf64ab4b4acd6a52b126593
#: ../../topics/testing/overview.txt:397
msgid "This is incorrect::"
msgstr ""

# 6345ada5530149df9da05451153f1830
#: ../../topics/testing/overview.txt:401
msgid ""
"The test client is not capable of retrieving Web pages that are not powered "
"by your Django project. If you need to retrieve other Web pages, use a "
"Python standard library module such as :mod:`urllib` or :mod:`urllib2`."
msgstr ""

# 29ff903825df4affa4f02cdf7f89dcb1
#: ../../topics/testing/overview.txt:406
msgid ""
"To resolve URLs, the test client uses whatever URLconf is pointed-to by your"
" :setting:`ROOT_URLCONF` setting."
msgstr ""

# 6b891116bd2f4733b2462a640073f9ac
#: ../../topics/testing/overview.txt:409
msgid ""
"Although the above example would work in the Python interactive interpreter,"
" some of the test client's functionality, notably the template-related "
"functionality, is only available *while tests are running*."
msgstr ""

# fc4437d6635d4192b3f61658f127c83d
#: ../../topics/testing/overview.txt:414
msgid ""
"The reason for this is that Django's test runner performs a bit of black "
"magic in order to determine which template was loaded by a given view. This "
"black magic (essentially a patching of Django's template system in memory) "
"only happens during test running."
msgstr ""

# 75c1c8275f064fd6b99c696fd32ed680
#: ../../topics/testing/overview.txt:419
msgid ""
"By default, the test client will disable any CSRF checks performed by your "
"site."
msgstr ""

# 990b3b1335aa4b03bdfba6d65be157ef
#: ../../topics/testing/overview.txt:422
msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks. To do "
"this, pass in the ``enforce_csrf_checks`` argument when you construct your "
"client::"
msgstr ""

# c250adfff27a41c9b3d8533aa8315d41
#: ../../topics/testing/overview.txt:432
msgid "Making requests"
msgstr ""

# 184345c6b8dd4f128438f859cb37b28f
#: ../../topics/testing/overview.txt:434
msgid "Use the ``django.test.client.Client`` class to make requests."
msgstr ""

# e0a64c95cf084ad783f75f57ac545fea
#: ../../topics/testing/overview.txt:438
msgid ""
"It requires no arguments at time of construction. However, you can use "
"keywords arguments to specify some default headers. For example, this will "
"send a ``User-Agent`` HTTP header in each request::"
msgstr ""

# e2a5d583a9804c40a0138c63bdcb8e81
#: ../../topics/testing/overview.txt:444
msgid ""
"The values from the ``extra`` keywords arguments passed to "
":meth:`~django.test.client.Client.get()`, "
":meth:`~django.test.client.Client.post()`, etc. have precedence over the "
"defaults passed to the class constructor."
msgstr ""

# e230c4a2aeae489694439c473641fc37
#: ../../topics/testing/overview.txt:449
msgid ""
"The ``enforce_csrf_checks`` argument can be used to test CSRF protection "
"(see above)."
msgstr ""

# d518753e5f48410e937bcdd33d928006
#: ../../topics/testing/overview.txt:452
msgid ""
"Once you have a ``Client`` instance, you can call any of the following "
"methods:"
msgstr ""

# 5bc93d6320db44a084a83a2146a667a3
#: ../../topics/testing/overview.txt:458
msgid ""
"Makes a GET request on the provided ``path`` and returns a ``Response`` "
"object, which is documented below."
msgstr ""

# bf9462d89a0a48de847480396665034c
#: ../../topics/testing/overview.txt:461
msgid ""
"The key-value pairs in the ``data`` dictionary are used to create a GET data"
" payload. For example::"
msgstr ""

# 19f4e90e47f84000968ea69a479c3a03
#: ../../topics/testing/overview.txt:467
msgid "...will result in the evaluation of a GET request equivalent to::"
msgstr ""

# 58ae1e8eeac24a4ab6cedb0b3f4dd2c3
#: ../../topics/testing/overview.txt:471
msgid ""
"The ``extra`` keyword arguments parameter can be used to specify headers to "
"be sent in the request. For example::"
msgstr ""

# ef5c7205854641919a1c4ffa005beec7
#: ../../topics/testing/overview.txt:478
msgid ""
"...will send the HTTP header ``HTTP_X_REQUESTED_WITH`` to the details view, "
"which is a good way to test code paths that use the "
":meth:`django.http.HttpRequest.is_ajax()` method."
msgstr ""

# 9d2c3c1c8a854b99b2064a16a690b202
#: ../../topics/testing/overview.txt:482
msgid "CGI specification"
msgstr ""

# e66affe96a254852b7281a1d45e88989
#: ../../topics/testing/overview.txt:484
msgid ""
"The headers sent via ``**extra`` should follow CGI_ specification. For "
"example, emulating a different \"Host\" header as sent in the HTTP request "
"from the browser to the server should be passed as ``HTTP_HOST``."
msgstr ""

# c50b5a5468a74ec4876e092f57ceb6f2
#: ../../topics/testing/overview.txt:491
msgid ""
"If you already have the GET arguments in URL-encoded form, you can use that "
"encoding instead of using the data argument. For example, the previous GET "
"request could also be posed as::"
msgstr ""

# ae73e7f74e3341c2938bbc4f22204f5c
#: ../../topics/testing/overview.txt:498
msgid ""
"If you provide a URL with both an encoded GET data and a data argument, the "
"data argument will take precedence."
msgstr ""

# ea0ade39e10f4918a77d0c1ba72c7313
# f0825bbf49dc4a649c174824f446ba0f
#: ../../topics/testing/overview.txt:501 ../../topics/testing/overview.txt:582
msgid ""
"If you set ``follow`` to ``True`` the client will follow any redirects and a"
" ``redirect_chain`` attribute will be set in the response object containing "
"tuples of the intermediate urls and status codes."
msgstr ""

# 3dac3425d8d04ef7a1a1acd0b6231130
#: ../../topics/testing/overview.txt:505
msgid ""
"If you had a URL ``/redirect_me/`` that redirected to ``/next/``, that "
"redirected to ``/final/``, this is what you'd see::"
msgstr ""

# 5f023940a40747ca8e82c98a241da227
#: ../../topics/testing/overview.txt:514
msgid ""
"Makes a POST request on the provided ``path`` and returns a ``Response`` "
"object, which is documented below."
msgstr ""

# fd9e72a5808f47ad9f6a92a09ebc8f25
#: ../../topics/testing/overview.txt:517
msgid ""
"The key-value pairs in the ``data`` dictionary are used to submit POST data."
" For example::"
msgstr ""

# 00f071e55cb14b62b2f4d826133f2e62
#: ../../topics/testing/overview.txt:523
msgid "...will result in the evaluation of a POST request to this URL::"
msgstr ""

# c3cd83b0680d418db1b169d729f3d5fd
#: ../../topics/testing/overview.txt:527
msgid "...with this POST data::"
msgstr ""

# 75dae98d1baf4353b3ab50ae11d013a0
#: ../../topics/testing/overview.txt:531
msgid ""
"If you provide ``content_type`` (e.g. :mimetype:`text/xml` for an XML "
"payload), the contents of ``data`` will be sent as-is in the POST request, "
"using ``content_type`` in the HTTP ``Content-Type`` header."
msgstr ""

# 665793780bf343c78bbbc673d7e6ad7c
#: ../../topics/testing/overview.txt:535
msgid ""
"If you don't provide a value for ``content_type``, the values in ``data`` "
"will be transmitted with a content type of :mimetype:`multipart/form-data`. "
"In this case, the key-value pairs in ``data`` will be encoded as a multipart"
" message and used to create the POST data payload."
msgstr ""

# 418d9e51e91e44ae9ec1eb304bd5799a
#: ../../topics/testing/overview.txt:541
msgid ""
"To submit multiple values for a given key -- for example, to specify the "
"selections for a ``<select multiple>`` -- provide the values as a list or "
"tuple for the required key. For example, this value of ``data`` would submit"
" three selected values for the field named ``choices``::"
msgstr ""

# 41492ecda6af44aab60281b22e5d5dfe
#: ../../topics/testing/overview.txt:548
msgid ""
"Submitting files is a special case. To POST a file, you need only provide "
"the file field name as a key, and a file handle to the file you wish to "
"upload as a value. For example::"
msgstr ""

# c141cb58a71e4fedbb312bec2282365e
#: ../../topics/testing/overview.txt:556
msgid ""
"(The name ``attachment`` here is not relevant; use whatever name your file-"
"processing code expects.)"
msgstr ""

# 9e6f6169666043c78f0cf73a1df811e7
#: ../../topics/testing/overview.txt:559
msgid ""
"Note that if you wish to use the same file handle for multiple ``post()`` "
"calls then you will need to manually reset the file pointer between posts. "
"The easiest way to do this is to manually close the file after it has been "
"provided to ``post()``, as demonstrated above."
msgstr ""

# e67f120d5ac3430bb85ac9a48645e4a7
#: ../../topics/testing/overview.txt:565
msgid ""
"You should also ensure that the file is opened in a way that allows the data"
" to be read. If your file contains binary data such as an image, this means "
"you will need to open the file in ``rb`` (read binary) mode."
msgstr ""

# dd4ec8e950244a59b96a5cd603c267ac
#: ../../topics/testing/overview.txt:570
msgid "The ``extra`` argument acts the same as for :meth:`Client.get`."
msgstr ""

# 51db98e8f10b45a7a4bc713f19a69160
#: ../../topics/testing/overview.txt:572
msgid ""
"If the URL you request with a POST contains encoded parameters, these "
"parameters will be made available in the request.GET data. For example, if "
"you were to make the request::"
msgstr ""

# 473c92a122bb471abe90fa801404224b
#: ../../topics/testing/overview.txt:578
msgid ""
"... the view handling this request could interrogate request.POST to "
"retrieve the username and password, and could interrogate request.GET to "
"determine if the user was a visitor."
msgstr ""

# f46afc18028d4121beaacb9edaab6d17
#: ../../topics/testing/overview.txt:588
msgid ""
"Makes a HEAD request on the provided ``path`` and returns a ``Response`` "
"object. This method works just like :meth:`Client.get`, including the "
"``follow`` and ``extra`` arguments, except it does not return a message "
"body."
msgstr ""

# 91f038a406404b9d9774f59e5ecdbf8c
#: ../../topics/testing/overview.txt:595
msgid ""
"Makes an OPTIONS request on the provided ``path`` and returns a ``Response``"
" object. Useful for testing RESTful interfaces."
msgstr ""

# 3e3949f0b8bf4c59bc8d98e725641648
# bf47f334c1524ef086da5e1450423e85
# 8f5ad95dca89411e9d67f1bef1706612
#: ../../topics/testing/overview.txt:598 ../../topics/testing/overview.txt:614
#: ../../topics/testing/overview.txt:638
msgid ""
"When ``data`` is provided, it is used as the request body, and a ``Content-"
"Type`` header is set to ``content_type``."
msgstr ""

# d4b913e7adff4111b95e7906b227d97b
#: ../../topics/testing/overview.txt:603
msgid ""
":meth:`Client.options` used to process ``data`` like :meth:`Client.get`."
msgstr ""

# 57a28f7c7f754416aaee9105d7c4b41d
# 0a4bf9b03e4049bc9fa0447c02c1fa11
# b85c412d038445c68ddcd5158446cb86
# 680f9743cbaa4ff1aed1c97c5e8bb6fd
#: ../../topics/testing/overview.txt:606 ../../topics/testing/overview.txt:622
#: ../../topics/testing/overview.txt:630 ../../topics/testing/overview.txt:646
msgid ""
"The ``follow`` and ``extra`` arguments act the same as for "
":meth:`Client.get`."
msgstr ""

# ac977d00f5dd47dba6e01ee2a627f9b2
#: ../../topics/testing/overview.txt:611
msgid ""
"Makes a PUT request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""

# 01a60cab3dae4066ae9fb3626696aa14
#: ../../topics/testing/overview.txt:619
msgid ":meth:`Client.put` used to process ``data`` like :meth:`Client.post`."
msgstr ""

# e83f51a0ea2f4e7aafed5b228306f4db
#: ../../topics/testing/overview.txt:627
msgid ""
"Makes a PATCH request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""

# 70b7bbf8a1644159bc06f9982ebe3186
#: ../../topics/testing/overview.txt:635
msgid ""
"Makes an DELETE request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""

# 1f7db762a1d448a58db04a300b95be9d
#: ../../topics/testing/overview.txt:643
msgid ""
":meth:`Client.delete` used to process ``data`` like :meth:`Client.get`."
msgstr ""

# 2aad58a403284a78ba08e9f91170ffb6
#: ../../topics/testing/overview.txt:652
msgid ""
"If your site uses Django's :doc:`authentication system</topics/auth/index>` "
"and you deal with logging in users, you can use the test client's "
"``login()`` method to simulate the effect of a user logging into the site."
msgstr ""

# 17ca8e0754d9434fa6b448497bcea9dd
#: ../../topics/testing/overview.txt:657
msgid ""
"After you call this method, the test client will have all the cookies and "
"session data required to pass any login-based tests that may form part of a "
"view."
msgstr ""

# d4583431782b4e95b230570a01586102
#: ../../topics/testing/overview.txt:661
msgid ""
"The format of the ``credentials`` argument depends on which "
":ref:`authentication backend <authentication-backends>` you're using (which "
"is configured by your :setting:`AUTHENTICATION_BACKENDS` setting). If you're"
" using the standard authentication backend provided by Django "
"(``ModelBackend``), ``credentials`` should be the user's username and "
"password, provided as keyword arguments::"
msgstr ""

# 892c3f1718f942ce8dabb5d9a85b9c4f
#: ../../topics/testing/overview.txt:673
msgid ""
"If you're using a different authentication backend, this method may require "
"different credentials. It requires whichever credentials are required by "
"your backend's ``authenticate()`` method."
msgstr ""

# 4d1b950c8ef34dbcb0f5c7153e41139d
#: ../../topics/testing/overview.txt:677
msgid ""
"``login()`` returns ``True`` if it the credentials were accepted and login "
"was successful."
msgstr ""

# 546218f5e39b4be199360c05e4551b79
#: ../../topics/testing/overview.txt:680
msgid ""
"Finally, you'll need to remember to create user accounts before you can use "
"this method. As we explained above, the test runner is executed using a test"
" database, which contains no users by default. As a result, user accounts "
"that are valid on your production site will not work under test conditions. "
"You'll need to create users as part of the test suite -- either manually "
"(using the Django model API) or with a test fixture. Remember that if you "
"want your test user to have a password, you can't set the user's password by"
" setting the password attribute directly -- you must use the "
":meth:`~django.contrib.auth.models.User.set_password()` function to store a "
"correctly hashed password. Alternatively, you can use the "
":meth:`~django.contrib.auth.models.UserManager.create_user` helper method to"
" create a new user with a correctly hashed password."
msgstr ""

# b9f99a18a1964a688302021656ac907f
#: ../../topics/testing/overview.txt:696
msgid ""
"If your site uses Django's :doc:`authentication system</topics/auth/index>`,"
" the ``logout()`` method can be used to simulate the effect of a user "
"logging out of your site."
msgstr ""

# 0c8d583eece64974a40ad473c216b5bc
#: ../../topics/testing/overview.txt:700
msgid ""
"After you call this method, the test client will have all the cookies and "
"session data cleared to defaults. Subsequent requests will appear to come "
"from an :class:`~django.contrib.auth.models.AnonymousUser`."
msgstr ""

# 7b9236a2b93d49e080f9d42a52611ddc
#: ../../topics/testing/overview.txt:705
msgid "Testing responses"
msgstr ""

# 68892bcf3f00494e823a7dd68a4abb8b
#: ../../topics/testing/overview.txt:707
msgid ""
"The ``get()`` and ``post()`` methods both return a ``Response`` object. This"
" ``Response`` object is *not* the same as the ``HttpResponse`` object "
"returned Django views; the test response object has some additional data "
"useful for test code to verify."
msgstr ""

# 4e9e77afab31435da9ef8d7b80991b24
#: ../../topics/testing/overview.txt:712
msgid "Specifically, a ``Response`` object has the following attributes:"
msgstr ""

# cf4edcfa6900478180f6559e56f242d7
#: ../../topics/testing/overview.txt:718
msgid ""
"The test client that was used to make the request that resulted in the "
"response."
msgstr ""

# c7f8de7b4be04405ac32a640a9060e41
#: ../../topics/testing/overview.txt:723
msgid ""
"The body of the response, as a string. This is the final page content as "
"rendered by the view, or any error message."
msgstr ""

# 464abeb701d242d49df8f826b10add99
#: ../../topics/testing/overview.txt:728
msgid ""
"The template ``Context`` instance that was used to render the template that "
"produced the response content."
msgstr ""

# e74c5ab40ce041b2b42d5fb13f64eb2b
#: ../../topics/testing/overview.txt:731
msgid ""
"If the rendered page used multiple templates, then ``context`` will be a "
"list of ``Context`` objects, in the order in which they were rendered."
msgstr ""

# d76c828ba893433ea65313780ae69628
#: ../../topics/testing/overview.txt:734
msgid ""
"Regardless of the number of templates used during rendering, you can "
"retrieve context values using the ``[]`` operator. For example, the context "
"variable ``name`` could be retrieved using::"
msgstr ""

# 19761128641a4dbdb4eb3fd5de5dcf89
#: ../../topics/testing/overview.txt:744
msgid "The request data that stimulated the response."
msgstr ""

# 447858ed8ded44f9ae0b3817536f3b8c
#: ../../topics/testing/overview.txt:748
msgid ""
"The HTTP status of the response, as an integer. See :rfc:`2616#section-10` "
"for a full list of HTTP status codes."
msgstr ""

# bf0d9abd95c84ad2a5153f92b5d43dcb
#: ../../topics/testing/overview.txt:753
msgid ""
"A list of ``Template`` instances used to render the final content, in the "
"order they were rendered. For each template in the list, use "
"``template.name`` to get the template's file name, if the template was "
"loaded from a file. (The name is a string such as ``'admin/index.html'``.)"
msgstr ""

# a6555e04228645289154af0765e5e84d
#: ../../topics/testing/overview.txt:759
msgid ""
"You can also use dictionary syntax on the response object to query the value"
" of any settings in the HTTP headers. For example, you could determine the "
"content type of a response using ``response['Content-Type']``."
msgstr ""

# 6380bbcdd7cd4669851744f855c8e59b
#: ../../topics/testing/overview.txt:766
msgid ""
"If you point the test client at a view that raises an exception, that "
"exception will be visible in the test case. You can then use a standard "
"``try ... except`` block or :meth:`~unittest.TestCase.assertRaises` to test "
"for exceptions."
msgstr ""

# 63322b5004bf426ebaf1baff68aa927a
#: ../../topics/testing/overview.txt:770
msgid ""
"The only exceptions that are not visible to the test client are ``Http404``,"
" ``PermissionDenied`` and ``SystemExit``. Django catches these exceptions "
"internally and converts them into the appropriate HTTP response codes. In "
"these cases, you can check ``response.status_code`` in your test."
msgstr ""

# c63721e4ffdb444e8a7c9f1727c36560
#: ../../topics/testing/overview.txt:776
msgid "Persistent state"
msgstr ""

# c97ccf120bd1431f85814257b3551747
#: ../../topics/testing/overview.txt:778
msgid ""
"The test client is stateful. If a response returns a cookie, then that "
"cookie will be stored in the test client and sent with all subsequent "
"``get()`` and ``post()`` requests."
msgstr ""

# 83f5c0d3c02740c5a9b88e02f2cbfe42
#: ../../topics/testing/overview.txt:782
msgid ""
"Expiration policies for these cookies are not followed. If you want a cookie"
" to expire, either delete it manually or create a new ``Client`` instance "
"(which will effectively delete all cookies)."
msgstr ""

# 9c636a6806c542f2946ebbce3a2cbdd9
#: ../../topics/testing/overview.txt:786
msgid ""
"A test client has two attributes that store persistent state information. "
"You can access these properties as part of a test condition."
msgstr ""

# e23e0c171d464c42bd7c582613929253
#: ../../topics/testing/overview.txt:791
msgid ""
"A Python :class:`~Cookie.SimpleCookie` object, containing the current values"
" of all the client cookies. See the documentation of the :mod:`Cookie` "
"module for more."
msgstr ""

# 27e5f2b6ebc741bc84574c29139b6545
#: ../../topics/testing/overview.txt:797
msgid ""
"A dictionary-like object containing session information. See the "
":doc:`session documentation</topics/http/sessions>` for full details."
msgstr ""

# 627d9e0e1cf1477c8ab8a58177a988cc
#: ../../topics/testing/overview.txt:800
msgid ""
"To modify the session and then save it, it must be stored in a variable "
"first (because a new ``SessionStore`` is created every time this property is"
" accessed)::"
msgstr ""

# 832fe9dee2a34f0cb6b86118d1e69434
#: ../../topics/testing/overview.txt:812
msgid "The following is a simple unit test using the test client::"
msgstr ""

# 88e793ce39704eba857d3a1243b5e73d
#: ../../topics/testing/overview.txt:834
msgid ":class:`django.test.client.RequestFactory`"
msgstr ""

# 0bbe583c4f9840b1bf654cde36834b4b
#: ../../topics/testing/overview.txt:839
msgid "Provided test case classes"
msgstr ""

# e242e0c3061047b7a8485865d2bdc404
#: ../../topics/testing/overview.txt:843
msgid ""
"Normal Python unit test classes extend a base class of "
":class:`unittest.TestCase`. Django provides a few extensions of this base "
"class:"
msgstr ""

# f352dfa1c53344588394091f679507b4
#: ../../topics/testing/overview.txt:853
msgid "Hierarchy of Django unit testing classes"
msgstr ""

# 6133daf8f36e4bd3b8106200d5f45667
#: ../../topics/testing/overview.txt:855
msgid ""
"Regardless of the version of Python you're using, if you've installed "
"``unittest2``, ``django.utils.unittest`` will point to that library."
msgstr ""

# 01a1cc3d8ada433e83e8791014e30360
#: ../../topics/testing/overview.txt:859
msgid "SimpleTestCase"
msgstr ""

# efa865ab5a8c4eff902016d6d70183ac
#: ../../topics/testing/overview.txt:863
msgid ""
"A thin subclass of :class:`unittest.TestCase`, it extends it with some basic"
" functionality like:"
msgstr ""

# 9034d55ac8c44e7e9e3af94b8e17a35d
#: ../../topics/testing/overview.txt:866
msgid "Saving and restoring the Python warning machinery state."
msgstr ""

# c87d71fa40374341a38f5f8a9b7e2758
#: ../../topics/testing/overview.txt:867
msgid "Some useful assertions like:"
msgstr ""

# 8e9ba86617764ee4ae6c42e024547381
#: ../../topics/testing/overview.txt:869
msgid ""
"Checking that a callable :meth:`raises a certain exception "
"<SimpleTestCase.assertRaisesMessage>`."
msgstr ""

# 4a0700763b994e3a96fc9d8c1611b227
#: ../../topics/testing/overview.txt:871
msgid ""
"Testing form field :meth:`rendering and error treatment "
"<SimpleTestCase.assertFieldOutput>`."
msgstr ""

# 09b0ecd844b148398f4ba4e2544789fb
#: ../../topics/testing/overview.txt:873
msgid ""
"Testing :meth:`HTML responses for the presence/lack of a given fragment "
"<SimpleTestCase.assertContains>`."
msgstr ""

# cf8f60a64b8e4017b82112e650a4e4ae
#: ../../topics/testing/overview.txt:875
msgid ""
"Verifying that a template :meth:`has/hasn't been used to generate a given "
"response content <SimpleTestCase.assertTemplateUsed>`."
msgstr ""

# e37234ad86e64e9faa37ad494fbd2d15
#: ../../topics/testing/overview.txt:877
msgid ""
"Verifying a HTTP :meth:`redirect <SimpleTestCase.assertRedirects>` is "
"performed by the app."
msgstr ""

# 287a7b05d3f3488db9a1cd93aa89ad02
#: ../../topics/testing/overview.txt:879
msgid ""
"Robustly testing two :meth:`HTML fragments <SimpleTestCase.assertHTMLEqual>`"
" for equality/inequality or :meth:`containment "
"<SimpleTestCase.assertInHTML>`."
msgstr ""

# 1080fd9c1d43453db0d04e0983b02820
#: ../../topics/testing/overview.txt:881
msgid ""
"Robustly testing two :meth:`XML fragments <SimpleTestCase.assertXMLEqual>` "
"for equality/inequality."
msgstr ""

# e15999b7622b4b33be9f0b8299c33556
#: ../../topics/testing/overview.txt:883
msgid ""
"Robustly testing two :meth:`JSON fragments <SimpleTestCase.assertJSONEqual>`"
" for equality."
msgstr ""

# 95be7ee4ac4e4c6d9f613576f6b7a699
#: ../../topics/testing/overview.txt:886
msgid ""
"The ability to run tests with :ref:`modified settings <overriding-"
"settings>`."
msgstr ""

# b0537caa96d24cc48d329b2d9d83c66c
#: ../../topics/testing/overview.txt:887
msgid ""
"Using the :attr:`~SimpleTestCase.client` "
":class:`~django.test.client.Client`."
msgstr ""

# 135b847cfb274d708fc8b5039b7865ef
#: ../../topics/testing/overview.txt:888
msgid "Custom test-time :attr:`URL maps <SimpleTestCase.urls>`."
msgstr ""

# 26fff53dab8941f59589645cbf83b6e0
#: ../../topics/testing/overview.txt:892
msgid ""
"The latter two features were moved from ``TransactionTestCase`` to "
"``SimpleTestCase`` in Django 1.6."
msgstr ""

# 5e9cf8a6904f476891abb4b82d70b641
#: ../../topics/testing/overview.txt:895
msgid ""
"If you need any of the other more complex and heavyweight Django-specific "
"features like:"
msgstr ""

# 5c0bbe793c9c440ea568f7664cfd29a5
#: ../../topics/testing/overview.txt:898
msgid "Testing or using the ORM."
msgstr ""

# c6f608e6fd754ef180df48bc08fccd04
#: ../../topics/testing/overview.txt:899
msgid "Database :attr:`~TransactionTestCase.fixtures`."
msgstr ""

# 38abbccfe5d84426893e1b85b87213b4
#: ../../topics/testing/overview.txt:900
msgid ""
"Test :ref:`skipping based on database backend features <skipping-tests>`."
msgstr ""

# 5dd41ba89f30488dbfcca3305328870e
#: ../../topics/testing/overview.txt:901
msgid ""
"The remaining specialized :meth:`assert* "
"<TransactionTestCase.assertQuerysetEqual>` methods."
msgstr ""

# da787f9e45614f658bb8a0aae60eae36
#: ../../topics/testing/overview.txt:904
msgid ""
"then you should use :class:`~django.test.TransactionTestCase` or "
":class:`~django.test.TestCase` instead."
msgstr ""

# 12d6a89fa83749f6919647463af55a5f
#: ../../topics/testing/overview.txt:907
msgid "``SimpleTestCase`` inherits from ``django.utils.unittest.TestCase``."
msgstr ""

# b5ef64c4c6a1458b8a0925a60aeb3d89
#: ../../topics/testing/overview.txt:910
msgid "TransactionTestCase"
msgstr ""

# c2daed5028ae46f3a37f392671decadc
#: ../../topics/testing/overview.txt:914
msgid ""
"Django's ``TestCase`` class (described below) makes use of database "
"transaction facilities to speed up the process of resetting the database to "
"a known state at the beginning of each test. A consequence of this, however,"
" is that the effects of transaction commit and rollback cannot be tested by "
"a Django ``TestCase`` class. If your test requires testing of such "
"transactional behavior, you should use a Django ``TransactionTestCase``."
msgstr ""

# 7914458e57914fc8b4cc79b44906ffc9
#: ../../topics/testing/overview.txt:921
msgid ""
"``TransactionTestCase`` and ``TestCase`` are identical except for the manner"
" in which the database is reset to a known state and the ability for test "
"code to test the effects of commit and rollback:"
msgstr ""

# aa2c62749a2149a6b6613a01e63c8ec8
#: ../../topics/testing/overview.txt:925
msgid ""
"A ``TransactionTestCase`` resets the database after the test runs by "
"truncating all tables. A ``TransactionTestCase`` may call commit and "
"rollback and observe the effects of these calls on the database."
msgstr ""

# 9e19ef0d7c894836a2a2bd7ecedba233
#: ../../topics/testing/overview.txt:929
msgid ""
"A ``TestCase``, on the other hand, does not truncate tables after a test. "
"Instead, it encloses the test code in a database transaction that is rolled "
"back at the end of the test. Both explicit commits like "
"``transaction.commit()`` and implicit ones that may be caused by "
"``transaction.atomic()`` are replaced with a ``nop`` operation. This "
"guarantees that the rollback at the end of the test restores the database to"
" its initial state."
msgstr ""

# 2a4316efb42a4fdcac07b35d2e77ead5
#: ../../topics/testing/overview.txt:937
msgid ""
"When running on a database that does not support rollback (e.g. MySQL with "
"the MyISAM storage engine), ``TestCase`` falls back to initializing the "
"database by truncating tables and reloading initial data."
msgstr ""

# 528a6cf0dd984cdf9e139a995861e1d7
#: ../../topics/testing/overview.txt:943
msgid ""
"While ``commit`` and ``rollback`` operations still *appear* to work when "
"used in ``TestCase``, no actual commit or rollback will be performed by the "
"database. This can cause your tests to pass or fail unexpectedly. Always use"
" ``TransactionTestCase`` when testing transactional behavior."
msgstr ""

# 097df42c11a340dc91169a8ac6d47cd9
#: ../../topics/testing/overview.txt:950
msgid ""
"Prior to 1.5, :class:`~django.test.TransactionTestCase` flushed the database"
" tables *before* each test. In Django 1.5, this is instead done *after* the "
"test has been run."
msgstr ""

# 7a6172bcb1b34414bca5e1ef6b2fdc16
#: ../../topics/testing/overview.txt:954
msgid ""
"When the flush took place before the test, it was guaranteed that primary "
"key values started at one in :class:`~django.test.TransactionTestCase` "
"tests."
msgstr ""

# 1edcffa9810e4c9194e1b2e20d18a601
#: ../../topics/testing/overview.txt:958
msgid ""
"Tests should not depend on this behavior, but for legacy tests that do, the "
":attr:`~TransactionTestCase.reset_sequences` attribute can be used until the"
" test has been properly updated."
msgstr ""

# b3a6205d0d9a4fada76da0318ca9d0f8
# bf565533e31844f8b568ab0d977cea33
#: ../../topics/testing/overview.txt:964 ../../topics/testing/overview.txt:994
msgid ""
"The order in which tests are run has changed. See `Order in which tests are "
"executed`_."
msgstr ""

# b9ba3da7b7d44c8983296edc74b7dff1
#: ../../topics/testing/overview.txt:967
msgid ""
"``TransactionTestCase`` inherits from :class:`~django.test.SimpleTestCase`."
msgstr ""

# 9182e82ec546467f9236f782fe2e1354
#: ../../topics/testing/overview.txt:970
msgid "TestCase"
msgstr ""

# 13650bf090564628a775815f7291b7c4
#: ../../topics/testing/overview.txt:974
msgid ""
"This class provides some additional capabilities that can be useful for "
"testing Web sites."
msgstr ""

# 588f5f4cd9ac4898b07cf3ae246565d0
#: ../../topics/testing/overview.txt:977
msgid ""
"Converting a normal :class:`unittest.TestCase` to a Django :class:`TestCase`"
" is easy: Just change the base class of your test from "
"``'unittest.TestCase'`` to ``'django.test.TestCase'``. All of the standard "
"Python unit test functionality will continue to be available, but it will be"
" augmented with some useful additions, including:"
msgstr ""

# 48aace0061264b98ad70b26119423f88
#: ../../topics/testing/overview.txt:983
msgid "Automatic loading of fixtures."
msgstr ""

# a5ca39524bd743739e6b90a96299097a
#: ../../topics/testing/overview.txt:985
msgid "Wraps each test in a transaction."
msgstr ""

# 141d9fec9c644ab5be845a780950a19c
#: ../../topics/testing/overview.txt:987
msgid "Creates a TestClient instance."
msgstr ""

# 7a12ba42ea8148f4a263375bc4a68a28
#: ../../topics/testing/overview.txt:989
msgid ""
"Django-specific assertions for testing for things like redirection and form "
"errors."
msgstr ""

# 0cbf631c001c4266946f122cbeeba565
#: ../../topics/testing/overview.txt:997
msgid "``TestCase`` inherits from :class:`~django.test.TransactionTestCase`."
msgstr ""

# 55fe7581f89442e7b0ec4cdf036e9947
#: ../../topics/testing/overview.txt:1002
msgid "LiveServerTestCase"
msgstr ""

# 2959737f954e4f77b52cb14dc4cad06b
#: ../../topics/testing/overview.txt:1006
msgid ""
"``LiveServerTestCase`` does basically the same as "
":class:`~django.test.TransactionTestCase` with one extra feature: it "
"launches a live Django server in the background on setup, and shuts it down "
"on teardown. This allows the use of automated test clients other than the "
":ref:`Django dummy client <test-client>` such as, for example, the Selenium_"
" client, to execute a series of functional tests inside a browser and "
"simulate a real user's actions."
msgstr ""

# cf89e92e6e7643a9ba39a8cae61d7d12
#: ../../topics/testing/overview.txt:1014
msgid ""
"By default the live server's address is ``'localhost:8081'`` and the full "
"URL can be accessed during the tests with ``self.live_server_url``. If you'd"
" like to change the default address (in the case, for example, where the "
"8081 port is already taken) then you may pass a different one to the "
":djadmin:`test` command via the :djadminopt:`--liveserver` option, for "
"example:"
msgstr ""

# 02628f13a7994c0b955e6c37c008364a
#: ../../topics/testing/overview.txt:1024
msgid ""
"Another way of changing the default server address is by setting the "
"`DJANGO_LIVE_TEST_SERVER_ADDRESS` environment variable somewhere in your "
"code (for example, in a :ref:`custom test runner<topics-testing-"
"test_runner>`):"
msgstr ""

# e687b44230b04331ba9646c2a86cc811
#: ../../topics/testing/overview.txt:1033
msgid ""
"In the case where the tests are run by multiple processes in parallel (for "
"example, in the context of several simultaneous `continuous integration`_ "
"builds), the processes will compete for the same address, and therefore your"
" tests might randomly fail with an \"Address already in use\" error. To "
"avoid this problem, you can pass a comma-separated list of ports or ranges "
"of ports (at least as many as the number of potential parallel processes). "
"For example:"
msgstr ""

# 8cef05f3333547ffbdb4b372ed9cb10b
#: ../../topics/testing/overview.txt:1044
msgid ""
"Then, during test execution, each new live test server will try every "
"specified port until it finds one that is free and takes it."
msgstr ""

# 5815c888b42e4eca83722c19b16a1ed9
#: ../../topics/testing/overview.txt:1049
msgid ""
"To demonstrate how to use ``LiveServerTestCase``, let's write a simple "
"Selenium test. First of all, you need to install the `selenium package`_ "
"into your Python path:"
msgstr ""

# d9045cc43c6d40ed8d48c362a7ee4181
#: ../../topics/testing/overview.txt:1057
msgid ""
"Then, add a ``LiveServerTestCase``-based test to your app's tests module "
"(for example: ``myapp/tests.py``). The code for this test may look as "
"follows:"
msgstr ""

# 7d72de7993ff40688a6d4e7a001e406e
#: ../../topics/testing/overview.txt:1086
msgid "Finally, you may run the test as follows:"
msgstr ""

# 183ca4f0194e461e92146ff88004da95
#: ../../topics/testing/overview.txt:1092
msgid ""
"This example will automatically open Firefox then go to the login page, "
"enter the credentials and press the \"Log in\" button. Selenium offers other"
" drivers in case you do not have Firefox installed or wish to use another "
"browser. The example above is just a tiny fraction of what the Selenium "
"client can do; check out the `full reference`_ for more details."
msgstr ""

# 5623bbcfaff54dbcbb2e948b9e362ef8
#: ../../topics/testing/overview.txt:1105
msgid ""
"``LiveServerTestCase`` makes use of the :doc:`staticfiles contrib app "
"</howto/static-files/index>` so you'll need to have your project configured "
"accordingly (in particular by setting :setting:`STATIC_URL`)."
msgstr ""

# c10caa6548694fb4b80ccbc3c889bdc7
#: ../../topics/testing/overview.txt:1111
msgid ""
"When using an in-memory SQLite database to run the tests, the same database "
"connection will be shared by two threads in parallel: the thread in which "
"the live server is run and the thread in which the test case is run. It's "
"important to prevent simultaneous database queries via this shared "
"connection by the two threads, as that may sometimes randomly cause the "
"tests to fail. So you need to ensure that the two threads don't access the "
"database at the same time. In particular, this means that in some cases (for"
" example, just after clicking a link or submitting a form), you might need "
"to check that a response is received by Selenium and that the next page is "
"loaded before proceeding with further test execution. Do this, for example, "
"by making Selenium wait until the ``<body>`` HTML tag is found in the "
"response (requires Selenium > 2.13):"
msgstr ""

# cba64fea7f8646abb607a91cadc0ff03
#: ../../topics/testing/overview.txt:1135
msgid ""
"The tricky thing here is that there's really no such thing as a \"page "
"load,\" especially in modern Web apps that generate HTML dynamically after "
"the server generates the initial document. So, simply checking for the "
"presence of ``<body>`` in the response might not necessarily be appropriate "
"for all use cases. Please refer to the `Selenium FAQ`_ and `Selenium "
"documentation`_ for more information."
msgstr ""

# 27ac201215e6475fad77630e79fdc45c
#: ../../topics/testing/overview.txt:1146
msgid "Test cases features"
msgstr ""

# c55cc06622a54b6899239d702d508c00
#: ../../topics/testing/overview.txt:1149
msgid "Default test client"
msgstr ""

# 70415658b1074761a9c34b72606e1356
#: ../../topics/testing/overview.txt:1153
msgid ""
"Every test case in a ``django.test.*TestCase`` instance has access to an "
"instance of a Django test client. This client can be accessed as "
"``self.client``. This client is recreated for each test, so you don't have "
"to worry about state (such as cookies) carrying over from one test to "
"another."
msgstr ""

# 790c772462da4a039f10b2a1ba50592f
#: ../../topics/testing/overview.txt:1158
msgid "This means, instead of instantiating a ``Client`` in each test::"
msgstr ""

# d6eaca1a63d3443599ff679ac4cd40fd
#: ../../topics/testing/overview.txt:1174
msgid "...you can just refer to ``self.client``, like so::"
msgstr ""

# 34bd779b9b4944478b9dd491c8d651b1
#: ../../topics/testing/overview.txt:1188
msgid "Customizing the test client"
msgstr ""

# 3d4440f178e74e08b8bf3d09c1d0dc5c
#: ../../topics/testing/overview.txt:1192
msgid ""
"If you want to use a different ``Client`` class (for example, a subclass "
"with customized behavior), use the :attr:`~SimpleTestCase.client_class` "
"class attribute::"
msgstr ""

# f9df5a23467d4054b4c7da8cad7092ab
#: ../../topics/testing/overview.txt:1212
msgid "Fixture loading"
msgstr ""

# c0ddb53d053c4456a69a80b67dede686
#: ../../topics/testing/overview.txt:1216
msgid ""
"A test case for a database-backed Web site isn't much use if there isn't any"
" data in the database. To make it easy to put test data into the database, "
"Django's custom ``TransactionTestCase`` class provides a way of loading "
"**fixtures**."
msgstr ""

# db2c47ef247e4f5ca9cc78209268dc81
#: ../../topics/testing/overview.txt:1221
msgid ""
"A fixture is a collection of data that Django knows how to import into a "
"database. For example, if your site has user accounts, you might set up a "
"fixture of fake user accounts in order to populate your database during "
"tests."
msgstr ""

# 53b395e16c044437aa5358fc6c38ac02
#: ../../topics/testing/overview.txt:1225
msgid ""
"The most straightforward way of creating a fixture is to use the "
":djadmin:`manage.py dumpdata <dumpdata>` command. This assumes you already "
"have some data in your database. See the :djadmin:`dumpdata "
"documentation<dumpdata>` for more details."
msgstr ""

# 52e2bab217724f49a96b94dc666ea00a
#: ../../topics/testing/overview.txt:1232
msgid ""
"If you've ever run :djadmin:`manage.py syncdb<syncdb>`, you've already used "
"a fixture without even knowing it! When you call :djadmin:`syncdb` in the "
"database for the first time, Django installs a fixture called "
"``initial_data``. This gives you a way of populating a new database with any"
" initial data, such as a default set of categories."
msgstr ""

# 99ccb7a022d943d5a58045c87fdc0d57
#: ../../topics/testing/overview.txt:1239
msgid ""
"Fixtures with other names can always be installed manually using the "
":djadmin:`manage.py loaddata<loaddata>` command."
msgstr ""

# 4cd41257002c4416bdd779f8354b529e
#: ../../topics/testing/overview.txt:1242
msgid "Initial SQL data and testing"
msgstr "Données SQL initiales et tests"

# 0f7705b9fd5447deb906e16fd8887cf4
#: ../../topics/testing/overview.txt:1244
msgid ""
"Django provides a second way to insert initial data into models -- the "
":ref:`custom SQL hook <initial-sql>`. However, this technique *cannot* be "
"used to provide initial data for testing purposes. Django's test framework "
"flushes the contents of the test database after each test; as a result, any "
"data added using the custom SQL hook will be lost."
msgstr ""

# b699e718c03045e587a3c644619c091b
#: ../../topics/testing/overview.txt:1251
msgid ""
"Once you've created a fixture and placed it in a ``fixtures`` directory in "
"one of your :setting:`INSTALLED_APPS`, you can use it in your unit tests by "
"specifying a ``fixtures`` class attribute on your "
":class:`django.test.TestCase` subclass::"
msgstr ""

# d09aa261b94c4afd97d4ca50e8207deb
#: ../../topics/testing/overview.txt:1270
msgid "Here's specifically what will happen:"
msgstr ""

# abb1f014343644d49bfa1bba251efc13
#: ../../topics/testing/overview.txt:1272
msgid ""
"At the start of each test case, before ``setUp()`` is run, Django will flush"
" the database, returning the database to the state it was in directly after "
":djadmin:`syncdb` was called."
msgstr ""

# 77d8ac18feae4b3d8df2b2f811a4ace3
#: ../../topics/testing/overview.txt:1276
msgid ""
"Then, all the named fixtures are installed. In this example, Django will "
"install any JSON fixture named ``mammals``, followed by any fixture named "
"``birds``. See the :djadmin:`loaddata` documentation for more details on "
"defining and installing fixtures."
msgstr ""

# 2a80655ea94447fb8c2b76a3b2aa8e9a
#: ../../topics/testing/overview.txt:1281
msgid ""
"This flush/load procedure is repeated for each test in the test case, so you"
" can be certain that the outcome of a test will not be affected by another "
"test, or by the order of test execution."
msgstr ""

# 8259e142dfea49dc952d3f78f22433c2
#: ../../topics/testing/overview.txt:1285
msgid ""
"By default, fixtures are only loaded into the ``default`` database. If you "
"are using multiple databases and set :attr:`multi_db=True "
"<TransactionTestCase.multi_db>`, fixtures will be loaded into all databases."
msgstr "Par défaut, les instantanés ne sont chargés que dans la base de données ``default``. Si vous utilisez plusieurs bases de données et que vous définissez :attr:`multi_db=True <TransactionTestCase.multi_db>`, les instantanés seront chargés dans toutes les bases de données."

# e3066f1d582a4db999dee1adc38a0f2a
#: ../../topics/testing/overview.txt:1290
msgid "URLconf configuration"
msgstr ""

# 599a5a26e66f48aa8ebb50667ef52146
#: ../../topics/testing/overview.txt:1294
msgid ""
"If your application provides views, you may want to include tests that use "
"the test client to exercise those views. However, an end user is free to "
"deploy the views in your application at any URL of their choosing. This "
"means that your tests can't rely upon the fact that your views will be "
"available at a particular URL."
msgstr ""

# 7ee11e0fda5f4e6088a1b37a688d9962
#: ../../topics/testing/overview.txt:1300
msgid ""
"In order to provide a reliable URL space for your test, "
"``django.test.*TestCase`` classes provide the ability to customize the "
"URLconf configuration for the duration of the execution of a test suite. If "
"your ``*TestCase`` instance defines an ``urls`` attribute, the ``*TestCase``"
" will use the value of that attribute as the :setting:`ROOT_URLCONF` for the"
" duration of that test."
msgstr ""

# 579deff290bb4d7f8125d1aa141addab
#: ../../topics/testing/overview.txt:1318
msgid ""
"This test case will use the contents of ``myapp.test_urls`` as the URLconf "
"for the duration of the test case."
msgstr ""

# a3c482e17622421d8221c14d14ae4bf2
#: ../../topics/testing/overview.txt:1324
msgid "Multi-database support"
msgstr ""

# 1f88fcf9b1d441748d5eaf2887ec163e
#: ../../topics/testing/overview.txt:1328
msgid ""
"Django sets up a test database corresponding to every database that is "
"defined in the :setting:`DATABASES` definition in your settings file. "
"However, a big part of the time taken to run a Django TestCase is consumed "
"by the call to ``flush`` that ensures that you have a clean database at the "
"start of each test run. If you have multiple databases, multiple flushes are"
" required (one for each database), which can be a time consuming activity --"
" especially if your tests don't need to test multi-database activity."
msgstr ""

# 72864204c2b9418d9479196e511d5975
#: ../../topics/testing/overview.txt:1337
msgid ""
"As an optimization, Django only flushes the ``default`` database at the "
"start of each test run. If your setup contains multiple databases, and you "
"have a test that requires every database to be clean, you can use the "
"``multi_db`` attribute on the test suite to request a full flush."
msgstr ""

# ddf53a04dc31439abb7071ad7b9d1f7d
#: ../../topics/testing/overview.txt:1351
msgid ""
"This test case will flush *all* the test databases before running "
"``testIndexPageView``."
msgstr ""

# f660c20b4ce34d08a480feceafdc6789
#: ../../topics/testing/overview.txt:1354
msgid ""
"The ``multi_db`` flag also affects into which databases the "
"attr:`TransactionTestCase.fixtures` are loaded. By default (when "
"``multi_db=False``), fixtures are only loaded into the ``default`` database."
" If ``multi_db=True``, fixtures are loaded into all databases."
msgstr ""

# c74e0200de4e483bbca07fd6374282ea
#: ../../topics/testing/overview.txt:1362
msgid "Overriding settings"
msgstr ""

# 6512e677671947e3b6afe0d34fb001c4
#: ../../topics/testing/overview.txt:1366
msgid ""
"For testing purposes it's often useful to change a setting temporarily and "
"revert to the original value after running the testing code. For this use "
"case Django provides a standard Python context manager (see :pep:`343`) "
":meth:`~django.test.SimpleTestCase.settings`, which can be used like this::"
msgstr ""

# 9c08637c06a64d8ab19a5b5ea08f8021
#: ../../topics/testing/overview.txt:1386
msgid ""
"This example will override the :setting:`LOGIN_URL` setting for the code in "
"the ``with`` block and reset its value to the previous state afterwards."
msgstr ""

# f1ab8e67c310492e8b1ec802ff1ef075
#: ../../topics/testing/overview.txt:1393
msgid ""
"In case you want to override a setting for just one test method or even the "
"whole :class:`~django.test.TestCase` class, Django provides the "
":func:`~django.test.utils.override_settings` decorator (see :pep:`318`). "
"It's used like this::"
msgstr ""

# 1543a3b6666a4b069fdd3a83f7579cbe
#: ../../topics/testing/overview.txt:1408
msgid "The decorator can also be applied to test case classes::"
msgstr ""

# 696517f9e4934e3e8858a173588e5ad7
#: ../../topics/testing/overview.txt:1422
msgid ""
"When given a class, the decorator modifies the class directly and returns "
"it; it doesn't create and return a modified copy of it.  So if you try to "
"tweak the above example to assign the return value to a different name than "
"``LoginTestCase``, you may be surprised to find that the original "
"``LoginTestCase`` is still equally affected by the decorator."
msgstr ""

# f4b8959e809948dab4e44ebfcc6a7df4
#: ../../topics/testing/overview.txt:1429
msgid ""
"You can also simulate the absence of a setting by deleting it after settings"
" have been overriden, like this::"
msgstr ""

# 4ae048f25d4e4d61ac2a7990af9ca7d7
#: ../../topics/testing/overview.txt:1437
msgid ""
"When overriding settings, make sure to handle the cases in which your app's "
"code uses a cache or similar feature that retains state even if the setting "
"is changed. Django provides the :data:`django.test.signals.setting_changed` "
"signal that lets you register callbacks to clean up and otherwise reset "
"state when settings are changed."
msgstr ""

# 28f0490791504d8b9c40a438f32b9adf
#: ../../topics/testing/overview.txt:1443
msgid "Django itself uses this signal to reset various data:"
msgstr ""

# 3e074c7babec4731a1e9af5bd89820ea
#: ../../topics/testing/overview.txt:1446
msgid "Overriden settings"
msgstr ""

# 79a7df992f934896bbf144bb50051e64
#: ../../topics/testing/overview.txt:1446
msgid "Data reset"
msgstr ""

# 880a2405869b43448bfdb51823edeb4c
#: ../../topics/testing/overview.txt:1448
msgid "USE_TZ, TIME_ZONE"
msgstr ""

# 874478ae9905491498ed20ac3226edb2
#: ../../topics/testing/overview.txt:1448
msgid "Databases timezone"
msgstr ""

# 30d614096e2843088cf3782435308625
#: ../../topics/testing/overview.txt:1449
msgid "TEMPLATE_CONTEXT_PROCESSORS"
msgstr "TEMPLATE_CONTEXT_PROCESSORS"

# ca9a3ab4f9cc4ef6be539243905db399
#: ../../topics/testing/overview.txt:1449
msgid "Context processors cache"
msgstr ""

# d04ca2f559914e77b2b99f2cd93ead6f
#: ../../topics/testing/overview.txt:1450
msgid "TEMPLATE_LOADERS"
msgstr "TEMPLATE_LOADERS"

# 501b948ab7014d888e47354f53c243c4
#: ../../topics/testing/overview.txt:1450
msgid "Template loaders cache"
msgstr ""

# 3fd1e20cdeb741329b46b33983edf640
#: ../../topics/testing/overview.txt:1451
msgid "SERIALIZATION_MODULES"
msgstr "SERIALIZATION_MODULES"

# 14049732f2b44c479ed0801b3229fbcf
#: ../../topics/testing/overview.txt:1451
msgid "Serializers cache"
msgstr ""

# 697f86bda6594e9fb51c0b3fdf80169d
#: ../../topics/testing/overview.txt:1452
msgid "LOCALE_PATHS, LANGUAGE_CODE"
msgstr ""

# 8d5ea9c4090748ebb52a0d278e136787
#: ../../topics/testing/overview.txt:1452
msgid "Default translation and loaded translations"
msgstr ""

# 9c2ffa62e4164ddf895671a9486d41f2
#: ../../topics/testing/overview.txt:1453
msgid "MEDIA_ROOT, DEFAULT_FILE_STORAGE"
msgstr ""

# 50566d1ac0e649db99e7b4ade18f41eb
#: ../../topics/testing/overview.txt:1453
msgid "Default file storage"
msgstr ""

# 5f52d7311be34870a885db244af703cf
#: ../../topics/testing/overview.txt:1457
msgid "Emptying the test outbox"
msgstr ""

# 4bf190e767914254b23ff3a59a2a6f8c
#: ../../topics/testing/overview.txt:1459
msgid ""
"If you use any of Django's custom ``TestCase`` classes, the test runner will"
" clear the contents of the test email outbox at the start of each test case."
msgstr ""

# d163e167ec9641c6875d92802ddaa0ba
#: ../../topics/testing/overview.txt:1462
msgid ""
"For more detail on email services during tests, see `Email services`_ below."
msgstr ""

# 25e4093397aa450b97d5ffd88dbc26e5
#: ../../topics/testing/overview.txt:1467
msgid "Assertions"
msgstr ""

# 357827efcf7b46f6a0dce7bf5d36dde2
#: ../../topics/testing/overview.txt:1471
msgid ""
"As Python's normal :class:`unittest.TestCase` class implements assertion "
"methods such as :meth:`~unittest.TestCase.assertTrue` and "
":meth:`~unittest.TestCase.assertEqual`, Django's custom :class:`TestCase` "
"class provides a number of custom assertion methods that are useful for "
"testing Web applications:"
msgstr ""

# 43bd508b55424d6fb67ee33354b229fa
#: ../../topics/testing/overview.txt:1477
msgid ""
"The failure messages given by most of these assertion methods can be "
"customized with the ``msg_prefix`` argument. This string will be prefixed to"
" any failure message generated by the assertion. This allows you to provide "
"additional details that may help you to identify the location and cause of "
"an failure in your test suite."
msgstr ""

# 790db4da8d1748d8b4a6d5c9a8e89dea
#: ../../topics/testing/overview.txt:1485
msgid ""
"Asserts that execution of callable ``callable_obj`` raised the "
"``expected_exception`` exception and that such exception has an "
"``expected_message`` representation. Any other outcome is reported as a "
"failure. Similar to unittest's :meth:`~unittest.TestCase.assertRaisesRegexp`"
" with the difference that ``expected_message`` isn't a regular expression."
msgstr ""

# e4d2c05c452a49ba955b3259c4945f5b
#: ../../topics/testing/overview.txt:1493
msgid "Asserts that a form field behaves correctly with various inputs."
msgstr ""

# e4f1fe50874b44838f2030f5df4e1ce0
#: ../../topics/testing/overview.txt:1495
msgid "the class of the field to be tested."
msgstr ""

# 51cd5a2bcee443cbab212066ef130760
#: ../../topics/testing/overview.txt:1496
msgid "a dictionary mapping valid inputs to their expected cleaned values."
msgstr ""

# 09a0cad353414660b08ece70c00d3d9b
#: ../../topics/testing/overview.txt:1498
msgid ""
"a dictionary mapping invalid inputs to one or more raised error messages."
msgstr ""

# 76f5a5f1524c4282923e7a0e0fc7eb73
#: ../../topics/testing/overview.txt:1500
msgid "the args passed to instantiate the field."
msgstr ""

# 8479bda6d0fa4b0ea2c912fe062907e0
#: ../../topics/testing/overview.txt:1501
msgid "the kwargs passed to instantiate the field."
msgstr ""

# 2771b1a906e841e9afecd65f78917e30
#: ../../topics/testing/overview.txt:1502
msgid "the expected clean output for inputs in ``empty_values``."
msgstr ""

# c425bc99a93b46ff82303845cb0552fe
#: ../../topics/testing/overview.txt:1504
msgid ""
"For example, the following code tests that an ``EmailField`` accepts "
"\"a@a.com\" as a valid email address, but rejects \"aaa\" with a reasonable "
"error message::"
msgstr ""

# 5c3702adad9d4275b3c539f3daa9c204
#: ../../topics/testing/overview.txt:1512
msgid ""
"Asserts that a field on a form raises the provided list of errors when "
"rendered on the form."
msgstr ""

# b362ebf3a46b48dda2015a0754edb371
#: ../../topics/testing/overview.txt:1515
msgid ""
"``form`` is the name the ``Form`` instance was given in the template "
"context."
msgstr ""

# afd77238a71a43adb3ac71a9387f2728
# 0459dfa780934663b120671d3908cc23
#: ../../topics/testing/overview.txt:1518
#: ../../topics/testing/overview.txt:1539
msgid ""
"``field`` is the name of the field on the form to check. If ``field`` has a "
"value of ``None``, non-field errors (errors you can access via "
"``form.non_field_errors()``) will be checked."
msgstr ""

# ba2b486120c54f518ec0f2918cc8ef30
# 34e4719304594640a0f3c33f94f2b48c
#: ../../topics/testing/overview.txt:1522
#: ../../topics/testing/overview.txt:1543
msgid ""
"``errors`` is an error string, or a list of error strings, that are expected"
" as a result of form validation."
msgstr ""

# ae821b230e874a1198941626301859ec
#: ../../topics/testing/overview.txt:1529
msgid ""
"Asserts that the ``formset`` raises the provided list of errors when "
"rendered."
msgstr "Confirme que ``formset`` génère la liste d'erreurs fournie lorsqu'il est affiché."

# 0a9ebd1ec16d447d92a41e68c3bf92e1
#: ../../topics/testing/overview.txt:1532
msgid ""
"``formset`` is the name the ``Formset`` instance was given in the template "
"context."
msgstr "``formset`` est le nom de l'instance ``Formset`` dans le contexte de gabarit."

# b2b6267e6abc49859072f7376b2b89fb
#: ../../topics/testing/overview.txt:1535
msgid ""
"``form_index`` is the number of the form within the ``Formset``.  If "
"``form_index`` has a value of ``None``, non-form errors (errors you can "
"access via ``formset.non_form_errors()``) will be checked."
msgstr "``form_index`` est le numéro du formulaire dans ``Formset``. Si ``form_index`` possède la valeur ``None``, ce sont les erreurs non liées aux formulaires (accessibles via ``formset.non_form_errors()``) qui seront vérifiées."

# d9e6278d6eec4b259be0b922a8dd3f13
#: ../../topics/testing/overview.txt:1548
msgid ""
"Asserts that a ``Response`` instance produced the given ``status_code`` and "
"that ``text`` appears in the content of the response. If ``count`` is "
"provided, ``text`` must occur exactly ``count`` times in the response."
msgstr ""

# 5c92dd83ad6341d1b814c6750aaeeb45
# 3c36dbd8f91b42e7813b8765e60d700e
#: ../../topics/testing/overview.txt:1552
#: ../../topics/testing/overview.txt:1563
msgid ""
"Set ``html`` to ``True`` to handle ``text`` as HTML. The comparison with the"
" response content will be based on HTML semantics instead of character-by-"
"character equality. Whitespace is ignored in most cases, attribute ordering "
"is not significant. See :meth:`~SimpleTestCase.assertHTMLEqual` for more "
"details."
msgstr ""

# 9e1837d5be8545f0bb239197547684e7
#: ../../topics/testing/overview.txt:1560
msgid ""
"Asserts that a ``Response`` instance produced the given ``status_code`` and "
"that ``text`` does not appears in the content of the response."
msgstr ""

# 03e3496a9c304d3580dbc1e1ef0a2581
#: ../../topics/testing/overview.txt:1571
msgid ""
"Asserts that the template with the given name was used in rendering the "
"response."
msgstr ""

# 47917c2909294dba84d49c58dd4d29e6
#: ../../topics/testing/overview.txt:1574
msgid "The name is a string such as ``'admin/index.html'``."
msgstr ""

# 8bb7737a88ea4f579fcff43a70fbabab
#: ../../topics/testing/overview.txt:1576
msgid "You can use this as a context manager, like this::"
msgstr ""

# c47b1498357c4b08a7e0b35da3b3be06
#: ../../topics/testing/overview.txt:1585
msgid ""
"Asserts that the template with the given name was *not* used in rendering "
"the response."
msgstr ""

# 03d75fecd9ef406f8147c7344d1c4de7
#: ../../topics/testing/overview.txt:1588
msgid ""
"You can use this as a context manager in the same way as "
":meth:`~SimpleTestCase.assertTemplateUsed`."
msgstr "Vous pouvez l'utiliser comme un gestionnaire de contexte de la même façon qu'avec :meth:`~SimpleTestCase.assertTemplateUsed`."

# f050f06fe9264f719cd49726414a784c
#: ../../topics/testing/overview.txt:1593
msgid ""
"Asserts that the response return a ``status_code`` redirect status, it "
"redirected to ``expected_url`` (including any GET data), and the final page "
"was received with ``target_status_code``."
msgstr ""

# d6c73d5d06ac4e03ad572f24b96f8955
#: ../../topics/testing/overview.txt:1597
msgid ""
"If your request used the ``follow`` argument, the ``expected_url`` and "
"``target_status_code`` will be the url and status code for the final point "
"of the redirect chain."
msgstr ""

# f949dddbf68c47969348b6731c40158b
#: ../../topics/testing/overview.txt:1603
msgid ""
"Asserts that the strings ``html1`` and ``html2`` are equal. The comparison "
"is based on HTML semantics. The comparison takes following things into "
"account:"
msgstr ""

# bb225ab831234daebcfa519689603d1a
#: ../../topics/testing/overview.txt:1607
msgid "Whitespace before and after HTML tags is ignored."
msgstr ""

# 9ebce55dcfe74c43a1f12a8f79715ec0
#: ../../topics/testing/overview.txt:1608
msgid "All types of whitespace are considered equivalent."
msgstr ""

# 7a3dbffe861e4816a6eca8ce3b9c48d3
#: ../../topics/testing/overview.txt:1609
msgid ""
"All open tags are closed implicitly, e.g. when a surrounding tag is closed "
"or the HTML document ends."
msgstr ""

# 4a9c02994a97409d80c0deaf52b68649
#: ../../topics/testing/overview.txt:1611
msgid "Empty tags are equivalent to their self-closing version."
msgstr ""

# d278b5db62764423b8ebc26267be606b
#: ../../topics/testing/overview.txt:1612
msgid "The ordering of attributes of an HTML element is not significant."
msgstr ""

# 75903cd3d758421ea9fd544a5e6c9f4b
#: ../../topics/testing/overview.txt:1613
msgid ""
"Attributes without an argument are equal to attributes that equal in name "
"and value (see the examples)."
msgstr ""

# 823b1dc583464abcb0e655b9309c473d
#: ../../topics/testing/overview.txt:1616
msgid ""
"The following examples are valid tests and don't raise any "
"``AssertionError``::"
msgstr ""

# 6e04f8720f494300a7798d55acfd753b
# 5e6abea1eb0f45da9c7a7eb0af0b5c11
#: ../../topics/testing/overview.txt:1627
#: ../../topics/testing/overview.txt:1638
msgid ""
"``html1`` and ``html2`` must be valid HTML. An ``AssertionError`` will be "
"raised if one of them cannot be parsed."
msgstr ""

# 2d6edca2e1574787adc4bf9ecba299e6
# 76a0659967054e9cae1f7fe2150986ca
# 7287029471014078ace10a34e5b5ec3d
# b879d5b4cc4d4bc2aa742402ac6aea22
# 4f4d2ffea4784ee1b91c0c9376341207
#: ../../topics/testing/overview.txt:1630
#: ../../topics/testing/overview.txt:1641
#: ../../topics/testing/overview.txt:1654
#: ../../topics/testing/overview.txt:1664
#: ../../topics/testing/overview.txt:1686
msgid "Output in case of error can be customized with the ``msg`` argument."
msgstr "L'affichage en cas d'erreur peut être personnalisé avec le paramètre ``msg``."

# 937d939f671342f8974e1b15a336d42c
#: ../../topics/testing/overview.txt:1634
msgid ""
"Asserts that the strings ``html1`` and ``html2`` are *not* equal. The "
"comparison is based on HTML semantics. See "
":meth:`~SimpleTestCase.assertHTMLEqual` for details."
msgstr ""

# 658454604c264b66a8c08bf1a7e7672c
#: ../../topics/testing/overview.txt:1647
msgid ""
"Asserts that the strings ``xml1`` and ``xml2`` are equal. The comparison is "
"based on XML semantics. Similarily to "
":meth:`~SimpleTestCase.assertHTMLEqual`, the comparison is made on parsed "
"content, hence only semantic differences are considered, not syntax "
"differences. When unvalid XML is passed in any parameter, an "
"``AssertionError`` is always raised, even if both string are identical."
msgstr ""

# e1a8adfbfa634c71a442c352c489a101
#: ../../topics/testing/overview.txt:1660
msgid ""
"Asserts that the strings ``xml1`` and ``xml2`` are *not* equal. The "
"comparison is based on XML semantics. See "
":meth:`~SimpleTestCase.assertXMLEqual` for details."
msgstr ""

# 3cfa635f3c8845668a52203e3cde2492
#: ../../topics/testing/overview.txt:1670
msgid ""
"Asserts that the HTML fragment ``needle`` is contained in the ``haystack`` "
"one."
msgstr "Confirme que le fragment HTML ``needle`` est contenu dans le contenu ``haystack``."

# 75c7dd7d96284489ac227e1af4752568
#: ../../topics/testing/overview.txt:1672
msgid ""
"If the ``count`` integer argument is specified, then additionally the number"
" of ``needle`` occurrences will be strictly verified."
msgstr "Si le paramètre nombre entier ``count`` est indiqué, un contrôle supplémentaire est effectué que le nombre d'occurrences de ``needle`` correspond à ``count``."

# 6166a620416a4248b9ed6a437e38bc2f
#: ../../topics/testing/overview.txt:1675
msgid ""
"Whitespace in most cases is ignored, and attribute ordering is not "
"significant. The passed-in arguments must be valid HTML."
msgstr "Dans la plupart des cas, les blancs sont ignorés et l'ordre des attributs n'est pas pris en compte. Les paramètres transmis doivent être du code HTML valide."

# 5eae32b1864c4eed8e4de0346c9697ea
#: ../../topics/testing/overview.txt:1682
msgid ""
"Asserts that the JSON fragments ``raw`` and ``expected_data`` are equal. "
"Usual JSON non-significant whitespace rules apply as the heavyweight is "
"delegated to the :mod:`json` library."
msgstr "Confirme que les fragments JSON ``raw`` et ``expected_data`` sont égaux. Les règles habituelles de JSON concernant les blancs non significatifs s'appliquent, car le gros du travail est confié à la bibliothèque :mod:`json`."

# 5485713e01b64274b62f35b51520b3c6
#: ../../topics/testing/overview.txt:1690
msgid ""
"Asserts that a queryset ``qs`` returns a particular list of values "
"``values``."
msgstr ""

# 42d9d5537f0b440b9a34acef2a561833
#: ../../topics/testing/overview.txt:1692
msgid ""
"The comparison of the contents of ``qs`` and ``values`` is performed using "
"the function ``transform``; by default, this means that the ``repr()`` of "
"each value is compared. Any other callable can be used if ``repr()`` doesn't"
" provide a unique or helpful comparison."
msgstr ""

# 77038da07fb04e5fac51c3ae217e0e8a
#: ../../topics/testing/overview.txt:1697
msgid ""
"By default, the comparison is also ordering dependent. If ``qs`` doesn't "
"provide an implicit ordering, you can set the ``ordered`` parameter to "
"``False``, which turns the comparison into a Python set comparison."
msgstr ""

# f749867a38fd479281eb75d4363473fb
#: ../../topics/testing/overview.txt:1703
msgid ""
"The method now checks for undefined order and raises ``ValueError`` if "
"undefined order is spotted. The ordering is seen as undefined if the given "
"``qs`` isn't ordered and the comparison is against more than one ordered "
"values."
msgstr "La méthode vérifie maintenant si l'ordre est indéfini et génère une exception ``ValueError`` le cas échéant. L'ordre de tri est considéré comme indéfini si le paramètre ``qs`` n'est pas trié et que la comparaison se fait avec plus d'une valeur triée."

# 17304573f08a4c74a7e9a20fc45d46bf
#: ../../topics/testing/overview.txt:1710
msgid ""
"Asserts that when ``func`` is called with ``*args`` and ``**kwargs`` that "
"``num`` database queries are executed."
msgstr ""

# 2ea05c795f1c4d36ada301918516c3c7
#: ../../topics/testing/overview.txt:1713
msgid ""
"If a ``\"using\"`` key is present in ``kwargs`` it is used as the database "
"alias for which to check the number of queries.  If you wish to call a "
"function with a ``using`` parameter you can do it by wrapping the call with "
"a ``lambda`` to add an extra parameter::"
msgstr ""

# 9ea128047e594d0abc6a3253c002135e
#: ../../topics/testing/overview.txt:1720
msgid "You can also use this as a context manager::"
msgstr ""

# 793948a3521b43b8af87a1790b0ac689
#: ../../topics/testing/overview.txt:1729
msgid "Email services"
msgstr ""

# ae50bff6152a486a99e795d3ede6d4be
#: ../../topics/testing/overview.txt:1731
msgid ""
"If any of your Django views send email using :doc:`Django's email "
"functionality </topics/email>`, you probably don't want to send email each "
"time you run a test using that view. For this reason, Django's test runner "
"automatically redirects all Django-sent email to a dummy outbox. This lets "
"you test every aspect of sending email -- from the number of messages sent "
"to the contents of each message -- without actually sending the messages."
msgstr ""

# 0ee02786236d42afa1876a6ef497daa5
#: ../../topics/testing/overview.txt:1738
msgid ""
"The test runner accomplishes this by transparently replacing the normal "
"email backend with a testing backend. (Don't worry -- this has no effect on "
"any other email senders outside of Django, such as your machine's mail "
"server, if you're running one.)"
msgstr ""

# f40beae9269c4a2aa38f4ece4584dcd9
#: ../../topics/testing/overview.txt:1747
msgid ""
"During test running, each outgoing email is saved in "
"``django.core.mail.outbox``. This is a simple list of all "
":class:`~django.core.mail.EmailMessage` instances that have been sent. The "
"``outbox`` attribute is a special attribute that is created *only* when the "
"``locmem`` email backend is used. It doesn't normally exist as part of the "
":mod:`django.core.mail` module and you can't import it directly. The code "
"below shows how to access this attribute correctly."
msgstr ""

# 4b10bf01627b4c0a8909d2e54a3f6917
#: ../../topics/testing/overview.txt:1755
msgid ""
"Here's an example test that examines ``django.core.mail.outbox`` for length "
"and contents::"
msgstr ""

# 0580bbc12b994c6bb16d3eed527ffb77
#: ../../topics/testing/overview.txt:1774
msgid ""
"As noted :ref:`previously <emptying-test-outbox>`, the test outbox is "
"emptied at the start of every test in a Django ``*TestCase``. To empty the "
"outbox manually, assign the empty list to ``mail.outbox``::"
msgstr "Comme noté :ref:`précédemment <emptying-test-outbox>`, la boîte de messagerie de test est vidée au début de chaque test des classes Django ``*TestCase``. Pour vider la boîte manuellement, attribuez une liste vide à ``mail.outbox``::"

# 7b5eb44ee66d4356926eafe301bd1d48
#: ../../topics/testing/overview.txt:1786
msgid "Skipping tests"
msgstr ""

# 38a2d287d6914726995687b4696d2dd3
#: ../../topics/testing/overview.txt:1790
msgid ""
"The unittest library provides the :func:`@skipIf <unittest.skipIf>` and "
":func:`@skipUnless <unittest.skipUnless>` decorators to allow you to skip "
"tests if you know ahead of time that those tests are going to fail under "
"certain conditions."
msgstr ""

# 4358ec50be724e468ebc2d566b255333
#: ../../topics/testing/overview.txt:1795
msgid ""
"For example, if your test requires a particular optional library in order to"
" succeed, you could decorate the test case with :func:`@skipIf "
"<unittest.skipIf>`. Then, the test runner will report that the test wasn't "
"executed and why, instead of failing the test or omitting the test "
"altogether."
msgstr ""

# 9cd2315637f94d40a36b9d9b04c1fd1a
#: ../../topics/testing/overview.txt:1800
msgid ""
"To supplement these test skipping behaviors, Django provides two additional "
"skip decorators. Instead of testing a generic boolean, these decorators "
"check the capabilities of the database, and skip the test if the database "
"doesn't support a specific named feature."
msgstr ""

# 29ed67edd0a14a9083e431ac94e1ee59
#: ../../topics/testing/overview.txt:1805
msgid ""
"The decorators use a string identifier to describe database features. This "
"string corresponds to attributes of the database connection features class. "
"See ``django.db.backends.BaseDatabaseFeatures`` class for a full list of "
"database features that can be used as a basis for skipping tests."
msgstr ""

# e2f7731978c743a39c5ebab159da3e05
#: ../../topics/testing/overview.txt:1813
msgid "Skip the decorated test if the named database feature is supported."
msgstr ""

# 8f39004823164767980a132c586085a3
#: ../../topics/testing/overview.txt:1815
msgid ""
"For example, the following test will not be executed if the database "
"supports transactions (e.g., it would *not* run under PostgreSQL, but it "
"would under MySQL with MyISAM tables)::"
msgstr ""

# ed4aab5b2abc4834bf151bb2f31a2b92
#: ../../topics/testing/overview.txt:1826
msgid ""
"Skip the decorated test if the named database feature is *not* supported."
msgstr ""

# ed1a8694e5f34214b80ae7da8275a33e
#: ../../topics/testing/overview.txt:1829
msgid ""
"For example, the following test will only be executed if the database "
"supports transactions (e.g., it would run under PostgreSQL, but *not* under "
"MySQL with MyISAM tables)::"
msgstr ""
