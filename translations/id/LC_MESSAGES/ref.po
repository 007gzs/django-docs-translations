# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Fery Setiawan <gembelweb@gmail.com>, 2015-2017
# Sutrisno Efendi <kangfend@gmail.com>, 2017
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-02 09:23-0500\n"
"PO-Revision-Date: 2017-08-03 14:56+0000\n"
"Last-Translator: Fery Setiawan <gembelweb@gmail.com>\n"
"Language-Team: Indonesian (http://www.transifex.com/django/django-docs/"
"language/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Applications"
msgstr "Aplikasi"

msgid ""
"Django contains a registry of installed applications that stores "
"configuration and provides introspection. It also maintains a list of "
"available :doc:`models </topics/db/models>`."
msgstr ""
"Django mengandung sebuah registrar dari aplikasi terpasang yang menyimpan "
"konfigurasi dan menyediakan introspeksi. Dia juga merawat daftar dari "
"ketersediaan :doc:`models </topics/db/models>`."

msgid ""
"This registry is simply called :attr:`~django.apps.apps` and it's available "
"in :mod:`django.apps`::"
msgstr ""
"Registrar ini hanya disebut :attr:`~django.apps.apps` dan tersedia di :mod:"
"`django.apps`::"

msgid "Projects and applications"
msgstr "Proyek dan aplikasi"

msgid ""
"The term **project** describes a Django web application. The project Python "
"package is defined primarily by a settings module, but it usually contains "
"other things. For example, when you run  ``django-admin startproject "
"mysite`` you'll get a ``mysite`` project directory that contains a "
"``mysite`` Python package with ``settings.py``, ``urls.py``, and ``wsgi."
"py``. The project package is often extended to include things like fixtures, "
"CSS, and templates which aren't tied to a particular application."
msgstr ""
"Istilah **proyek** menggambarkan sebuah aplikasi Django. Proyek paket Python "
"ditentukan terutama dengan mengatur modul, tetapi biasanya mengandung hal "
"lain. Sebagai contoh, ketika anda menjalankan ``django-admin startproject "
"mysite`` anda akan mendapatkan sebuah direktori proyek ``mysite`` yang "
"mengandung sebuah paket Python ``mysite`` dengan ``settings.py``, ``urls."
"py``, dan ``wsgi.py``. Paket proyek sering diperluas untuk disertakan untuk "
"menyertakan hal-hal seperti perbaikan, CSS, dan cetakan yang tidak diikat ke "
"aplikasi tertentu."

msgid ""
"A **project's root directory** (the one that contains ``manage.py``) is "
"usually the container for all of a project's applications which aren't "
"installed separately."
msgstr ""
"Sebuah **direktori akar proyek** (satu yang mengandung ``manage.py``) "
"biasanya mengandung semua aplikasi proyek yang tidak dipasang secara "
"terpisah."

msgid ""
"The term **application** describes a Python package that provides some set "
"of features. Applications :doc:`may be reused </intro/reusable-apps/>` in "
"various projects."
msgstr ""
"Istilah **aplikasi** menggambarkan paket Python yang menyediakan beberapa "
"kumpulan fitur. Aplikasi :doc:`may be reused </intro/reusable-apps/>` di "
"beragam proyek."

msgid ""
"Applications include some combination of models, views, templates, template "
"tags, static files, URLs, middleware, etc. They're generally wired into "
"projects with the :setting:`INSTALLED_APPS` setting and optionally with "
"other mechanisms such as URLconfs, the :setting:`MIDDLEWARE` setting, or "
"template inheritance."
msgstr ""
"Aplikasi menyertakan beberapa kombinasi model, tampilan, cetakan, etiket "
"cetakan, berkas tetap, URL, middleware, dll. Mereka umumnya diikat kedalam "
"proyek dengan pengaturan :setting:`INSTALLED_APPS` dan secara pilihan dengan "
"mekanisme lain seperti URLconf, pengaturan :setting:`MIDDLEWARE`, atau "
"warisan cetakan."

msgid ""
"It is important to understand that a Django application is just a set of "
"code that interacts with various parts of the framework. There's no such "
"thing as an ``Application`` object. However, there's a few places where "
"Django needs to interact with installed applications, mainly for "
"configuration and also for introspection. That's why the application "
"registry maintains metadata in an :class:`~django.apps.AppConfig` instance "
"for each installed application."
msgstr ""
"Sangat penting untuk dimengerti bahwa aplikasi Django hanyalah kumpulan kode "
"yang saling mempengaruhi dengan beragam bagian dari kerangka. Tidak ada "
"sesuatu seperti obyek ``Aplikasi``. Bagaimanapun, terdapat sedikit tempat "
"dimana Django butuh saling mempengaruhi dengan aplikasi terpasang, terutama "
"untuk konfigurasi dan juga untuk introspeksi. Itu mengapa registrar aplikasi "
"merawat metadata dalam sebuah instance :class:`~django.apps.AppConfig` untuk "
"setiap aplikasi terpasang."

msgid ""
"There's no restriction that a project package can't also be considered an "
"application and have models, etc. (which would require adding it to :setting:"
"`INSTALLED_APPS`)."
msgstr ""
"Tidak ada batasan bahwa sebuah paket proyek tidak dapat dianggap sebuah "
"aplikasi dan mempunyai model, dll. (yang akan butuh menambahkannya ke :"
"setting:`INSTALLED_APPS`)."

msgid "Configuring applications"
msgstr "Konfigurasi aplikasi"

msgid ""
"To configure an application, subclass :class:`~django.apps.AppConfig` and "
"put the dotted path to that subclass in :setting:`INSTALLED_APPS`."
msgstr ""
"Untuk mengkonfigurasi sebuah aplikasi, subkelas :class:`~django.apps."
"AppConfig` dan menaruh jalur titik ke subkelas tersebut dalam :setting:"
"`INSTALLED_APPS`."

msgid ""
"When :setting:`INSTALLED_APPS` simply contains the dotted path to an "
"application module, Django checks for a ``default_app_config`` variable in "
"that module."
msgstr ""
"Ketika :setting:`INSTALLED_APPS` sederhana mengandung jalur titik ke modul "
"aplikasi, Django memeriksa untuk variabel ``default_app_config`` di modul "
"tersebut."

msgid ""
"If it's defined, it's the dotted path to the :class:`~django.apps.AppConfig` "
"subclass for that application."
msgstr ""
"Jika dia ditentukan, jalur bertitik ke subkelas :class:`~django.apps."
"AppConfig` untuk aplikasi tersebut."

msgid ""
"If there is no ``default_app_config``, Django uses the base :class:`~django."
"apps.AppConfig` class."
msgstr ""
"Jika tidak ada ``default_app_config``, Django menggunakan kelas dasar :class:"
"`~django.apps.AppConfig`."

msgid ""
"``default_app_config`` allows applications that predate Django 1.7 such as "
"``django.contrib.admin`` to opt-in to :class:`~django.apps.AppConfig` "
"features without requiring users to update their :setting:`INSTALLED_APPS`."
msgstr ""
"``default_app_config`` mengizinkan aplikasi yang mendahului Django 1.7 "
"seperti `django.contrib.admin`` untuk memasukkan ke fitur :class:`~django."
"apps.AppConfig` tanpa membutuhkan pengguna memperbaharui :setting:"
"`INSTALLED_APPS` mereka."

msgid ""
"New applications should avoid ``default_app_config``. Instead they should "
"require the dotted path to the appropriate :class:`~django.apps.AppConfig` "
"subclass to be configured explicitly in :setting:`INSTALLED_APPS`."
msgstr ""
"Aplikasi baru harus menghindari ``default_app_config``. Sebagai gantinya "
"mereka harus butuh jalur bertitik ke subkelas :class:`~django.apps."
"AppConfig` sesuai untuk di konfigurasi secara eksplisit di :setting:"
"`INSTALLED_APPS`."

msgid "For application authors"
msgstr "Untuk pengarang aplikasi"

msgid ""
"If you're creating a pluggable app called \"Rock ’n’ roll\", here's how you "
"would provide a proper name for the admin::"
msgstr ""
"Jika anda membuat sebuah aplikasi dapat dipasang dipanggil \"Rock ’n’ roll"
"\", ini adalah bagaimana anda akan menyediakan sebuah nama pantas untuk "
"admin::"

msgid ""
"You can make your application load this :class:`~django.apps.AppConfig` "
"subclass by default as follows::"
msgstr ""
"Anda dapat membuat aplikasi anda memuat subkelas ini :class:`~django.apps."
"AppConfig` subclass secara awal sebagai berikut::"

msgid ""
"That will cause ``RockNRollConfig`` to be used when :setting:"
"`INSTALLED_APPS` just contains ``'rock_n_roll'``. This allows you to make "
"use of :class:`~django.apps.AppConfig` features without requiring your users "
"to update their :setting:`INSTALLED_APPS` setting. Besides this use case, "
"it's best to avoid using ``default_app_config`` and instead specify the app "
"config class in :setting:`INSTALLED_APPS` as described next."
msgstr ""
"Itu akan menyebabkan ``RockNRollConfig`` untuk digunakan ketika :setting:"
"`INSTALLED_APPS` hanya mengandung ``'rock_n_roll'``. Ini mengizinkan anda "
"untuk membuat penggunaan dari fitur :class:`~django.apps.AppConfig` tanpa "
"membutuhkan pengguna anda untuk memperbaharui pengaturan :setting:"
"`INSTALLED_APPS` mereka. Disamping ini menggunakan kasus, adalah terbaik "
"untuk menghindari menggunakan ``default_app_config`` dan sebagai gantinya "
"menentukan kelas konfigurasi aplikasi di :setting:`INSTALLED_APPS` sebagai "
"digambarkan selanjutnya."

msgid ""
"Of course, you can also tell your users to put ``'rock_n_roll.apps."
"RockNRollConfig'`` in their :setting:`INSTALLED_APPS` setting. You can even "
"provide several different :class:`~django.apps.AppConfig` subclasses with "
"different behaviors and allow your users to choose one via their :setting:"
"`INSTALLED_APPS` setting."
msgstr ""
"Tentu saja, anda dapa juga mengatakan pengguna anda untuk menaruh "
"``'rock_n_roll.apps.RockNRollConfig'`` di pengaturan :setting:"
"`INSTALLED_APPS` mereka. Anda dapat bahkan menyediakan beberapa perbedaan "
"subkelas :class:`~django.apps.AppConfig` dengan kebiasaan berbeda dan "
"mengizinkan pengguna anda untuk memilih sati melalui pengaturan :setting:"
"`INSTALLED_APPS` mereka. "

msgid ""
"The recommended convention is to put the configuration class in a submodule "
"of the application called ``apps``. However, this isn't enforced by Django."
msgstr ""
"Ketentuan yang dianjurkan adalah menaruh kelas konfigurasi di submodul dari "
"aplikasi dipanggil ``apps``. Bagaimanapun, ini tidak akan dipaksakan oleh "
"Django."

msgid ""
"You must include the :attr:`~django.apps.AppConfig.name` attribute for "
"Django to determine which application this configuration applies to. You can "
"define any attributes documented in the :class:`~django.apps.AppConfig` API "
"reference."
msgstr ""
"Anda harus menyertakan atribut :attr:`~django.apps.AppConfig.name` untuk "
"Django untuk menentukan aplikasi mana konfigurasi ini berlaku. Anda dapat "
"menentukan atribut apapun didokumentasikan di acuan API  :class:`~django."
"apps.AppConfig`."

msgid ""
"If your code imports the application registry in an application's ``__init__."
"py``, the name ``apps`` will clash with the ``apps`` submodule. The best "
"practice is to move that code to a submodule and import it. A workaround is "
"to import the registry under a different name::"
msgstr ""
"Jika kode mengimpor registrar aplikasi di ``__init__.py`` aplikasi, nama "
"``apps`` akan bentrok dengan submodul ``apps``. Praktik terbaik adalah "
"memindahkan kode tersebut ke submodul dan mengimpornya. Sebuah solusi adalah "
"mengimpor registrar dibawah nama berbeda::"

msgid "For application users"
msgstr "Untuk pengguna aplikasi"

msgid ""
"If you're using \"Rock ’n’ roll\" in a project called ``anthology``, but you "
"want it to show up as \"Jazz Manouche\" instead, you can provide your own "
"configuration::"
msgstr ""
"Jika anda menggunakan \"Rock ’n’ roll\" dalam proyek disebut ``anthology``, "
"tetapi anda ingin menampilkan \"Jazz Manouche\", anda dapat menyediakan "
"konfigurasi anda sendiri::"

msgid ""
"Again, defining project-specific configuration classes in a submodule called "
"``apps`` is a convention, not a requirement."
msgstr ""
"Lagi, menentukan kelas konfigurasi proyek-khusus di submodul dipanggil "
"``apps`` adalah sebuah ketentuan, bukan sebuah persyaratan."

msgid "Application configuration"
msgstr "Konfigurasi aplikasi"

msgid ""
"Application configuration objects store metadata for an application. Some "
"attributes can be configured in :class:`~django.apps.AppConfig` subclasses. "
"Others are set by Django and read-only."
msgstr ""
"Konfigurasi aplikasi obyek menyimpan metadata untuk sebuah aplikasi. "
"Beberapa atribut dapat dikonfigurasikan di subkelas :class:`~django.apps."
"AppConfig`. Lainnya disetel oleh Django dan hanya-baca."

msgid "Configurable attributes"
msgstr "Atribut dapat dikonfigurasi"

msgid "Full Python path to the application, e.g. ``'django.contrib.admin'``."
msgstr ""
"Jalur Phyton penuh ke aplikasi, sebagai contoh ``'django.contrib.admin'``."

msgid ""
"This attribute defines which application the configuration applies to. It "
"must be set in all :class:`~django.apps.AppConfig` subclasses."
msgstr ""
"Atribut ini menentukan konfigurasi aplikasi mana yang berlaku. DIa harus "
"disetel di semua subkelas :class:`~django.apps.AppConfig`."

msgid "It must be unique across a Django project."
msgstr "Dia harus unik terhadap proyek Django."

msgid "Short name for the application, e.g. ``'admin'``"
msgstr "Nama pendek untuk aplikasi, sebagai contoh ``'admin'``"

msgid ""
"This attribute allows relabeling an application when two applications have "
"conflicting labels. It defaults to the last component of ``name``. It should "
"be a valid Python identifier."
msgstr ""
"Atribut ini mengizinkan melabel kembali sebuah aplikasi ketika dua aplikasi "
"mempunyai label bertentangan. Awal dia ke komponen terakhir dari ``name``. "
"Dia harus penciri Python yang sah."

msgid "Human-readable name for the application, e.g. \"Administration\"."
msgstr ""
"Nama dapat dibaca manusia untuk aplikasi, sebagai contoh \"Administrasi\"."

msgid "This attribute defaults to ``label.title()``."
msgstr "Atribut awal ke ``label.title()``."

msgid ""
"Filesystem path to the application directory, e.g. ``'/usr/lib/python3.4/"
"dist-packages/django/contrib/admin'``."
msgstr ""
"Jalur sistem berkas pada direktori aplikasi, sebagai contoh ``'/usr/lib/"
"python3.4/dist-packages/django/contrib/admin'``."

msgid ""
"In most cases, Django can automatically detect and set this, but you can "
"also provide an explicit override as a class attribute on your :class:"
"`~django.apps.AppConfig` subclass. In a few situations this is required; for "
"instance if the app package is a `namespace package`_ with multiple paths."
msgstr ""
"Dalam banyak kasus, Django dapat otomatis mengenali dan mengatur ini, tetapi "
"anda dapat juga menyediakan menimpa eksplisit sebagai atribut kelas di "
"subkelas :class:`~django.apps.AppConfig` anda. Dalam beberapa situasi ini "
"diwajibkan; sebagai contoh jika paket aplikasi adalah `namespace package`_ "
"dengan banyak jalur."

msgid "Read-only attributes"
msgstr "Atribut hanya-baca"

msgid ""
"Root module for the application, e.g. ``<module 'django.contrib.admin' from "
"'django/contrib/admin/__init__.pyc'>``."
msgstr ""
"Modul akar untuk aplikasi, sebagai contoh ``<module 'django.contrib.admin' "
"from 'django/contrib/admin/__init__.pyc'>``."

msgid ""
"Module containing the models, e.g. ``<module 'django.contrib.admin.models' "
"from 'django/contrib/admin/models.pyc'>``."
msgstr ""
"Modul mengandung model, sebagai contoh ``<module 'django.contrib.admin."
"models' from 'django/contrib/admin/models.pyc'>``."

msgid ""
"It may be ``None`` if the application doesn't contain a ``models`` module. "
"Note that the database related signals such as :data:`~django.db.models."
"signals.pre_migrate` and :data:`~django.db.models.signals.post_migrate` are "
"only emitted for applications that have a ``models`` module."
msgstr ""
"Itu mungkin ``None`` jika aplikasi tidak mengandung sebuah modul ``models``. "
"Catat bahwa basisdata terkait sinyal seperti :data:`~django.db.models."
"signals.pre_migrate` dan :data:`~django.db.models.signals.post_migrate` "
"hanya dimunculkan untuk aplikasi yang mempunyai sebuah modul ``models``"

msgid "Methods"
msgstr "Cara"

msgid ""
"Returns an iterable of :class:`~django.db.models.Model` classes for this "
"application."
msgstr ""
"Mengembalikan kelas :class:`~django.db.models.Model` berulang untuk aplikasi "
"ini."

msgid "Requires the app registry to be fully populated."
msgstr "Membutuhkan aplikasi registrar untuk sepenuhnya dikumpulkan."

msgid ""
"Returns the :class:`~django.db.models.Model` with the given ``model_name``. "
"``model_name`` is case-insensitive."
msgstr ""
"Mengembalikan :class:`~django.db.models.Model` dengan ``model_name`` "
"diberikan.  ``model_name`` adalah tidak sensitif. "

msgid "Raises :exc:`LookupError` if no such model exists in this application."
msgstr ""
"Memunculkan :exc:`LookupError` jika tidak ada model yang ada dalam aplikasi "
"ini."

msgid ""
"Requires the app registry to be fully populated unless the ``require_ready`` "
"argument is set to ``False``. ``require_ready`` behaves exactly as in :meth:"
"`apps.get_model()`."
msgstr ""
"Membutuhkan aplikasi regristrar untuk sepenuhnya dikumpulkan meskipun "
"argumen ``require_ready`` disetel menjadi ``False``. ``require_ready`` "
"berperilaku tepat seperti dalam :meth:`apps.get_model()`."

msgid "The ``require_ready`` keyword argument was added."
msgstr "Argumen kata kunci ``require_ready`` telah ditambahkan."

msgid ""
"Subclasses can override this method to perform initialization tasks such as "
"registering signals. It is called as soon as the registry is fully populated."
msgstr ""
"Subkelas dapat menimpa metode ini untuk melakukan tugas inisialisasi seperti "
"mendaftarkan sinyal. Dia dipanggil segera ketika registrar dikumpulkan penuh."

msgid ""
"Although you can't import models at the module-level where :class:`~django."
"apps.AppConfig` classes are defined, you can import them in ``ready()``, "
"using either an ``import`` statement or :meth:`~AppConfig.get_model`."
msgstr ""
"Meskipun anda tidak dapat mengimpor pada tingkat-modul dimana kelas-kelas :"
"class:`~django.apps.AppConfig` ditentukan, anda dapat mengimpor ``ready()``, "
"menggunakan antara pernyataan ``import`` atau :meth:`~AppConfig.get_model`."

msgid ""
"If you're registering :mod:`model signals <django.db.models.signals>`, you "
"can refer to the sender by its string label instead of using the model class "
"itself."
msgstr ""
"Jika anda sedang mendaftarkan :mod:`model signals <django.db.models."
"signals>`, anda dapat mengacu pada pengirim berdasarkan label deretan "
"karakter nya daripada menggunakan kelas model itu sendiri."

msgid "Example::"
msgstr "Contoh::"

msgid ""
"Although you can access model classes as described above, avoid interacting "
"with the database in your :meth:`ready()` implementation. This includes "
"model methods that execute queries (:meth:`~django.db.models.Model.save()`, :"
"meth:`~django.db.models.Model.delete()`, manager methods etc.), and also raw "
"SQL queries via ``django.db.connection``. Your :meth:`ready()` method will "
"run during startup of every management command. For example, even though the "
"test database configuration is separate from the production settings, "
"``manage.py test`` would still execute some queries against your "
"**production** database!"
msgstr ""
"Meskipun anda dapat mengakses kelas-kelas model seperti yang digambarkan "
"dibawah, hindari berinteraksi dengan basisdata dalam penerapan :meth:"
"`ready()` anda. Ini termasuk cara model yang mengerjakan permintaan (:meth:"
"`~django.db.models.Model.save()`, :meth:`~django.db.models.Model.delete()`, "
"manager methods etc.), dan juga permintaan SQL mentah melalui cara ``django."
"db.connection``. Your :meth:`ready()` akan jalan selama permulaan dari stiap "
"perintah pengelolaan. Sebagai contoh, meskipun konfigurasi basis data "
"percobaan terpisah dari pengaturan produksi, ``manage.py test`` masih dapat "
"mengerjakan beberapa permintaan terhadap basisdata **produksi** anda!"

msgid ""
"In the usual initialization process, the ``ready`` method is only called "
"once by Django. But in some corner cases, particularly in tests which are "
"fiddling with installed applications, ``ready`` might be called more than "
"once. In that case, either write idempotent methods, or put a flag on your "
"``AppConfig`` classes to prevent re-running code which should be executed "
"exactly one time."
msgstr ""
"Dalam pengolahan inisialisasi biasa, cara ``ready`` hanya dipanggil sekali "
"oleh Django. Tetapi dalam kasus-kasus terpojok, khususnya dalam percobaan "
"yang remeh dengan aplikasi terpasang, ``ready`` mngkin dipanggil lebih dari "
"sekali. Dalam kasus tersebut, antara menulis cara idempoten, atau menaruh "
"sebuah bendera pada kelas-kelas ``AppConfig`` anda untuk mencegah "
"menjalankan kembali kode yang seharusnya dikerjakan tepatnya satu waktu."

msgid "Namespace packages as apps (Python 3.3+)"
msgstr "Paket namespace sebagai aplikasi (Python 3.3+)"

msgid ""
"Python versions 3.3 and later support Python packages without an ``__init__."
"py`` file. These packages are known as \"namespace packages\" and may be "
"spread across multiple directories at different locations on ``sys.path`` "
"(see :pep:`420`)."
msgstr ""
"Phyton versi 3.3 dan kemudian mendukung paket Phyton tanpa berkas ``__init__."
"py``. Paket ini dikenal sebagai \"paket namespace\" dan mungkin tersebar "
"terhadap banyak direktori pada tempat berbeda di ``sys.path`` (lihat :pep:"
"`420`)."

msgid ""
"Django applications require a single base filesystem path where Django "
"(depending on configuration) will search for templates, static assets, etc. "
"Thus, namespace packages may only be Django applications if one of the "
"following is true:"
msgstr ""
"Aplikasi Django membutuhkan sebuah jalus sistem berkas berbasis tunggal "
"dimana Django (tergantung pada konfigurasi) akan mencari cetakan, aset "
"tetap, dll. Hingga, paket namespace mungkin hanya aplikasi Django jika satu "
"dari hal berikut adalah benar:"

msgid ""
"The namespace package actually has only a single location (i.e. is not "
"spread across more than one directory.)"
msgstr ""
"Paket namespace sebenarnya mempunyai hanya tempat tunggal (yaitu tidak "
"tersebar terhadap lebih dari satu direktori.)"

msgid ""
"The :class:`~django.apps.AppConfig` class used to configure the application "
"has a :attr:`~django.apps.AppConfig.path` class attribute, which is the "
"absolute directory path Django will use as the single base path for the "
"application."
msgstr ""
"Kelas :class:`~django.apps.AppConfig` digunakan untuk mengkonfigurasikan "
"aplikasi yang mempunyai atribut kelas :attr:`~django.apps.AppConfig.path`, "
"yang merupakan jalur direktori mutlak Django akan digunakan sebagai jalur "
"dasar tunggal untuk aplikasi."

msgid ""
"If neither of these conditions is met, Django will raise :exc:`~django.core."
"exceptions.ImproperlyConfigured`."
msgstr ""
"Jika tidak satupun dari kondisi ini bertemu, Django akan memunculkan :exc:"
"`~django.core.exceptions.ImproperlyConfigured`."

msgid "Application registry"
msgstr "Registrar aplikasi"

msgid ""
"The application registry provides the following public API. Methods that "
"aren't listed below are considered private and may change without notice."
msgstr ""
"Registrar aplikasi menyediakan API umum berikut. Cara yang tidak ada di "
"daftar dibawah ini  dianggap pribadi dan mungkin berubah tanpa pemberitahuan."

msgid ""
"Boolean attribute that is set to ``True`` after the registry is fully "
"populated and all :meth:`AppConfig.ready` methods are called."
msgstr ""
"Atribut Boolean yang disetel ke ``True`` setelah registrar sepenuhnya "
"dikumpulkan dan semua cara :meth:`AppConfig.ready` dipanggil."

msgid "Returns an iterable of :class:`~django.apps.AppConfig` instances."
msgstr "Mengembalikan instance berulang dari  :class:`~django.apps.AppConfig`."

msgid ""
"Returns an :class:`~django.apps.AppConfig` for the application with the "
"given ``app_label``. Raises :exc:`LookupError` if no such application exists."
msgstr ""
"Mengembalikan sebuah :class:`~django.apps.AppConfig` untuk aplikasi dengan "
"``app_label``. yang diberikan. Memunculkan :exc:`LookupError` jika tidak ada "
"aplikasi."

msgid ""
"Checks whether an application with the given name exists in the registry. "
"``app_name`` is the full name of the app, e.g. ``'django.contrib.admin'``."
msgstr ""
"Memeriksa apakah aplikasi dengan nama diberikan anda di registrar. "
"``app_name`` adalah nama penuh dari aplikasi, sebagai contoh ``'django."
"contrib.admin'``."

msgid ""
"Returns the :class:`~django.db.models.Model` with the given ``app_label`` "
"and ``model_name``. As a shortcut, this method also accepts a single "
"argument in the form ``app_label.model_name``. ``model_name`` is case-"
"insensitive."
msgstr ""
"Mengembalikan :class:`~django.db.models.Model` dengan ``app_label`` yang "
"diberikan dan ``model_name``. Sebagai sebuah jalan pintas, metode ini juga "
"menerima argumen tunggal dalam bentuk ``app_label.model_name``. "
"``model_name`` kasus-tidak peka."

msgid ""
"Raises :exc:`LookupError` if no such application or model exists. Raises :"
"exc:`ValueError` when called with a single argument that doesn't contain "
"exactly one dot."
msgstr ""
"Memunculkan :exc:`LookupError` jika tidak seperti aplikasi atau model ada. "
"Memunculkan :exc:`ValueError` ketika dipanggil dengan argumen tunggal yang "
"tidak mengandung satu titik."

msgid ""
"Requires the app registry to be fully populated unless the ``require_ready`` "
"argument is set to ``False``."
msgstr ""
"Membutuhkan aplikasi regristrar untuk sepenuhnya dikumpulkan meskipun "
"argumen ``require_ready`` disetel menjadi ``False``."

msgid ""
"Setting ``require_ready`` to ``False`` allows looking up models :ref:`while "
"the app registry is being populated <app-loading-process>`, specifically "
"during the second phase where it imports models. Then ``get_model()`` has "
"the same effect as importing the model. The main use case is to configure "
"model classes with settings, such as :setting:`AUTH_USER_MODEL`."
msgstr ""
"Mengatur ``require_ready`` menjadi ``False`` mengizinkan pencarian model :"
"ref:`while the app registry is being populated <app-loading-process>`, "
"khususnya selama tahap kedua dimana itu mengimpor model. Kemudian "
"``get_model()`` mempunyai pengaruh sama ketika mengimpor model. Kasus "
"penggunaan utama adalah mengkonfigurasi kelas-kelas model dengan pengaturan, "
"seperti :setting:`AUTH_USER_MODEL`."

msgid ""
"When ``require_ready`` is ``False``, ``get_model()`` returns a model class "
"that may not be fully functional (reverse accessors may be missing, for "
"example) until the app registry is fully populated. For this reason, it's "
"best to leave ``require_ready`` to the default value of ``True`` whenever "
"possible."
msgstr ""
"Ketika ``require_ready`` adalah ``False``, ``get_model()`` mengembalikan "
"sebuah kelas model yang mungkin tidak sepenuhnya berfungsi (accessor balikan "
"mungkin hilang, sebagai contoh) sampai aplikasi regristrar sepenuhnya "
"dikumpulkan. Untuk alasan ini, itu adalah terbaik untuk membiarkan "
"``require_ready`` ke nilai awalan dari ``True`` kapanpun memungkinkan."

msgid "Initialization process"
msgstr "Inisialisasi pengolahan"

msgid "How applications are loaded"
msgstr "Bagaimana aplikasi dimuat"

msgid ""
"When Django starts, :func:`django.setup()` is responsible for populating the "
"application registry."
msgstr ""
"Ketika Django mulai, :func:`django.setup()` bertanggung jawab untuk "
"mengumpulkan registrar aplikasi."

msgid "Configures Django by:"
msgstr "Konfigurasi Django oleh:"

msgid "Loading the settings."
msgstr "Memuat pengaturan."

msgid "Setting up logging."
msgstr "Mengatur pencatatan."

msgid ""
"If ``set_prefix`` is True, setting the URL resolver script prefix to :"
"setting:`FORCE_SCRIPT_NAME` if defined, or ``/`` otherwise."
msgstr ""
"Jika ``set_prefix`` adalah True, pengaturan awalan tulisan penyelesai URL "
"ke :setting:`FORCE_SCRIPT_NAME` jika ditentukan, atau jika tidak ``/``."

msgid "Initializing the application registry."
msgstr "Memulai registrar aplikasi"

msgid "The ability to set the URL resolver script prefix is new."
msgstr "Kemampuan menyetel awalan tulisan penyelesai URL adalah baru."

msgid "This function is called automatically:"
msgstr "Fungsi ini dipanggil otomatis:"

msgid "When running an HTTP server via Django's WSGI support."
msgstr "Ketika menjalankan peladen HTTP melalui dukungan WSGI Django."

msgid "When invoking a management command."
msgstr "Ketika meminta perintah pengelolaan."

msgid ""
"It must be called explicitly in other cases, for instance in plain Python "
"scripts."
msgstr ""
"Dia harus dipanggil secara tersirat di kasus lain, sebagai contoh di tulisan "
"Phyton."

msgid ""
"The application registry is initialized in three stages. At each stage, "
"Django processes all applications in the order of :setting:`INSTALLED_APPS`."
msgstr ""
"Registrar aplikasi dimulai dalam tiga tingkatan, Pada setiap tingkatan, "
"Django mengolah semua aplikasi berdasarkan dari  :setting:`INSTALLED_APPS`."

msgid "First Django imports each item in :setting:`INSTALLED_APPS`."
msgstr "Django pertama mengimpor setiap barang di :setting:`INSTALLED_APPS`."

msgid ""
"If it's an application configuration class, Django imports the root package "
"of the application, defined by its :attr:`~AppConfig.name` attribute. If "
"it's a Python package, Django creates a default application configuration."
msgstr ""
"Jika itu sebuah kelas konfigurasi aplikasi, Django impor paket akar dari "
"aplikasi, ditentukan oleh atribut :attr:`~AppConfig.name` nya. Jika itu "
"adalah sebuah paket Python, Django membuat konfigurasi aplikasi awal."

msgid "*At this stage, your code shouldn't import any models!*"
msgstr "*Pada tingkatan ini, kode anda jangan mengimpor model apapun!*"

msgid ""
"In other words, your applications' root packages and the modules that define "
"your application configuration classes shouldn't import any models, even "
"indirectly."
msgstr ""
"Dengan kata lain, paket akar aplikasi anda dan modul yang menentukan kelas-"
"kelas konfigurasi aplikasi anda jangan impor model apapun, bahkan secara "
"tidak langsung."

msgid ""
"Strictly speaking, Django allows importing models once their application "
"configuration is loaded. However, in order to avoid needless constraints on "
"the order of :setting:`INSTALLED_APPS`, it's strongly recommended not import "
"any models at this stage."
msgstr ""
"Sesungguhnya, Django mengizinkan mengimpor model sekali konfigurasi aplikasi "
"mereka dimuat. Bagaimanapun, agar menghindari kendala yang tidak perlu pada "
"urutan :setting:`INSTALLED_APPS`, sangat dianjurkan tidak mengimpor model "
"apapun pada tingkatan ini."

msgid ""
"Once this stage completes, APIs that operate on application configurations "
"such as :meth:`~apps.get_app_config()` become usable."
msgstr ""
"Sekali tingkatan ini lengkap, API yang menjalankan konfigurasi aplikasi "
"seperti :meth:`~apps.get_app_config()` menjadi tidak berguna."

msgid ""
"Then Django attempts to import the ``models`` submodule of each application, "
"if there is one."
msgstr ""
"Kemudian Django berusaha mengimpor submodul ``model`` dari setiap aplikasi, "
"jika memang ada."

msgid ""
"You must define or import all models in your application's ``models.py`` or "
"``models/__init__.py``. Otherwise, the application registry may not be fully "
"populated at this point, which could cause the ORM to malfunction."
msgstr ""
"Anda harus menentukan atau mengimpor semua model di aplikasi ``models.py`` "
"anda atau ``models/__init__.py``. Sebaliknya, registri aplikasi mungkin "
"tidak dikumpulkan penuh pada titik ini, yang dapat menyebabkan ORM tidak "
"berfungsi."

msgid ""
"Once this stage completes, APIs that operate on models such as :meth:`~apps."
"get_model()` become usable."
msgstr ""
"Ketika tingkatan ini lengkap, API yang bekerja di model seperti :meth:`~apps."
"get_model()` menjadi dapat digunakan."

msgid ""
"Finally Django runs the :meth:`~AppConfig.ready()` method of each "
"application configuration."
msgstr ""
"Akhirnya Django menjalankan cara :meth:`~AppConfig.ready()` dari setiap "
"konfigurasi aplikasi."

msgid "Troubleshooting"
msgstr "Menyelesaikan masalah"

msgid ""
"Here are some common problems that you may encounter during initialization:"
msgstr "Disini beberapa masalah umum yang mungkin muncul selama inisialisasi:"

msgid ""
":class:`~django.core.exceptions.AppRegistryNotReady`: This happens when "
"importing an application configuration or a models module triggers code that "
"depends on the app registry."
msgstr ""
":class:`~django.core.exceptions.AppRegistryNotReady`: Ini terjadi ketika "
"mengimpor sebuah konfigurasi aplikasi atau sebuah kode pemicu modul model "
"yang bergantung di registri aplikasi."

msgid ""
"For example, :func:`~django.utils.translation.ugettext()` uses the app "
"registry to look up translation catalogs in applications. To translate at "
"import time, you need :func:`~django.utils.translation.ugettext_lazy()` "
"instead. (Using :func:`~django.utils.translation.ugettext()` would be a bug, "
"because the translation would happen at import time, rather than at each "
"request depending on the active language.)"
msgstr ""
"Sebagai contoh, :func:`~django.utils.translation.ugettext()` menggunakan "
"registrar aplikasi untuk mencari katalog terjemahan di aplikasi. Untuk "
"menterjemah pada waktu impor, anda butuh :func:`~django.utils.translation."
"ugettext_lazy()`. (menggunakan :func:`~django.utils.translation.ugettext()` "
"akan menjadi kesalahan, karena terjemahan akan terjadi pada waktu impor, "
"daripada setiap permintaan tergantung pada bahasa aktif.)"

msgid ""
"Executing database queries with the ORM at import time in models modules "
"will also trigger this exception. The ORM cannot function properly until all "
"models are available."
msgstr ""
"Menjalankan permintaan basisdata dengan ORM pada waktu impor dalam modul "
"model juga akan memicu pengecualian ini. ORM tidak dapat berfungsi dengan "
"benar sampai semua model tersedia."

msgid ""
"This exception also happens if you forget to call :func:`django.setup()` in "
"a standalone Python script."
msgstr ""
"Pengecualian ini juga terjadi jika anda lupa memanggil :func:`django."
"setup()` di tulisan berdiri sendiri."

msgid ""
"``ImportError: cannot import name ...`` This happens if the import sequence "
"ends up in a loop."
msgstr ""
"``ImportError: tidak dapat impor nama ...`` Ini terjadi jika urutan impor "
"berakhir dalam perulangan."

msgid ""
"To eliminate such problems, you should minimize dependencies between your "
"models modules and do as little work as possible at import time. To avoid "
"executing code at import time, you can move it into a function and cache its "
"results. The code will be executed when you first need its results. This "
"concept is known as \"lazy evaluation\"."
msgstr ""
"Untuk mengurangi permasalahan tersebut, anda harus mengecilkan "
"ketergantungan diantara model anda dan melakukan sedikit pekerjaan sebisa "
"mungkin pada waktu impor. Untuk menghindari penjalanan kode pada waktu "
"impor, anda dapat memindahkannya dan menembolok hasilnya. Kode akan "
"dikerjakan ketika anda pertama butuh hasilnya. Konsep ini dikenal sebagai "
"\"lazy evaluation\"."

msgid ""
"``django.contrib.admin`` automatically performs autodiscovery of ``admin`` "
"modules in installed applications. To prevent it, change your :setting:"
"`INSTALLED_APPS` to contain ``'django.contrib.admin.apps."
"SimpleAdminConfig'`` instead of ``'django.contrib.admin'``."
msgstr ""
" ``django.contrib.admin`` otomatis melakukan pencarian dari modul ``admin`` "
"dalam aplikasi terpasang. Untuk mencegahnya, rubah :setting:`INSTALLED_APPS` "
"anda untuk mengandung ``'django.contrib.admin.apps.SimpleAdminConfig'`` "
"daripada ``'django.contrib.admin'``."

msgid "System check framework"
msgstr "Kerangka pemeriksaan sistem"

msgid ""
"The system check framework is a set of static checks for validating Django "
"projects. It detects common problems and provides hints for how to fix them. "
"The framework is extensible so you can easily add your own checks."
msgstr ""
"Kerangka sistem pemeriksaan adalah kumpulan dari pemeriksaan tetap untuk "
"memeriksa kebenaran proyek Django. Dia menemukan masalah umum dan "
"menyediakan petunjuk untuk bagaimana memperbaiki mereka. Kerangka ini dapat "
"diperpanjang sehingga anda dapat dengan mudah menambahkan pemeriksaan anda "
"sendiri."

msgid ""
"For details on how to add your own checks and integrate them with Django's "
"system checks, see the :doc:`System check topic guide </topics/checks>`."
msgstr ""
"Untuk rincian bagaimana anda menambahkan pemeriksaan sendiri dan menyatukan "
"mereka ke dalam pemeriksaan sistem Django, lihat :doc:`System check topic "
"guide </topics/checks>`."

msgid "API reference"
msgstr "Acuan API"

msgid "``CheckMessage``"
msgstr "``CheckMessage``"

msgid ""
"The warnings and errors raised by system checks must be instances of "
"``CheckMessage``. An instance encapsulates a single reportable error or "
"warning. It also provides context and hints applicable to the message, and a "
"unique identifier that is used for filtering purposes."
msgstr ""
"Peringatan dan kesalahan dimunculkan oleh sistem pemeriksaan harus contoh "
"dari ``CheckMessage``. Sebuah instance merangkum kesalahan atau peringatan "
"dapat dilaporkan tunggal. Dia juga menyediakan konteks dan petunjuk yang "
"berlaku pada pesan, dan penciri unik yang digunakan untuk tujuan penyaringan."

msgid "Constructor arguments are:"
msgstr "Argumen pembangun adalah:"

msgid "``level``"
msgstr "``level``"

msgid ""
"The severity of the message. Use one of the predefined values: ``DEBUG``, "
"``INFO``, ``WARNING``, ``ERROR``, ``CRITICAL``. If the level is greater or "
"equal to ``ERROR``, then Django will prevent management commands from "
"executing. Messages with level lower than ``ERROR`` (i.e. warnings) are "
"reported to the console, but can be silenced."
msgstr ""
"Kesederhanaan dari pesan. Gunakan satu dari nilai-nilai yang sudah "
"ditentukan: ``DEBUG``, ``INFO``, ``WARNING``, ``ERROR``, ``CRITICAL``. Jika "
"tingkatan lebih hebat atau sama dengan ``ERROR``, kemudian Django akan "
"mencegah perintah pengelolaan dari menjalankan. Pesan-pesan dengan tingkatan "
"lebih rendah dari ``ERROR`` (yaitu peringatan) dilaporkan ke konsol, tetapi "
"dapat disenyapkan."

msgid "``msg``"
msgstr "``msg``"

msgid ""
"A short (less than 80 characters) string describing the problem. The string "
"should *not* contain newlines."
msgstr ""
"Deretan kalimat (kurang dari 80 karakter) pendek menggambarkan masalah. "
"Deretan kalimat seharusnya *tidak* mengandung baris baru."

msgid "``hint``"
msgstr "``hint``"

msgid ""
"A single-line string providing a hint for fixing the problem. If no hint can "
"be provided, or the hint is self-evident from the error message, the hint "
"can be omitted, or a value of ``None`` can be used."
msgstr ""
"Deretan karakter baris-tunggal menyediakan petunjuk untuk memperbaiki "
"masalah. Jika tidak ada petunjuk disediakan, atau petunjuk adalah terbukti-"
"sendiri dari pesan kesalahan, petunjuk dapat diabaikan, atau nilai dari "
"``None`` dapat digunakan."

msgid "``obj``"
msgstr "``obj``"

msgid ""
"Optional. An object providing context for the message (for example, the "
"model where the problem was discovered). The object should be a model, "
"field, or manager or any other object that defines ``__str__`` method (on "
"Python 2 you need to define ``__unicode__`` method). The method is used "
"while reporting all messages and its result precedes the message."
msgstr ""
"Pilihan. Sebuah obyek menyediakan konteks untuk pesan (sebagai contoh, model "
"dimana masalah ditemukan). Obyek harus menjadi model, bidang, atau pengelola "
"atau obyek lain apapun yang menentukan cara ``__str__`` (pada Python 2 anda "
"butuh menentukan cara ``__unicode__``). Cara digunakan selagi melaporkan "
"semua pesan dan hasilnya mendahului pesan."

msgid "``id``"
msgstr "``id``"

msgid ""
"Optional string. A unique identifier for the issue. Identifiers should "
"follow the pattern ``applabel.X001``, where ``X`` is one of the letters "
"``CEWID``, indicating the message severity (``C`` for criticals, ``E`` for "
"errors and so). The number can be allocated by the application, but should "
"be unique within that application."
msgstr ""
"Deretan karakter pilihan. Sebuah penciri unik untuk masalah. Penciri harus "
"mengikuti pola ``applabel.X001``, dimana ``X`` adalah satu dari huruf "
"``CEWID``, menunjukkan kesederhanaan pesan (``C`` for kritis, ``E`` untuk "
"kesalahan dan sebagainya). Angka dapat dialokasikan dengan aplikasi, tetapi "
"harus unik dalam aplikasi itu."

msgid ""
"There are subclasses to make creating messages with common levels easier. "
"When using them you can omit the ``level`` argument because it is implied by "
"the class name."
msgstr ""
"Ada subkelas-subkelas untuk membuat pesan dengan tingkatan umum lebih mudah. "
"Ketika menggunakan mereka anda dapat megnabaikan argumen ``level`` karena "
"dia disisipkan oleh nama kelas."

msgid "Builtin tags"
msgstr "Etiket siap pakai"

msgid "Django's system checks are organized using the following tags:"
msgstr "Sistem pemeriksaan Django diorganisasikan menggunakan etiket berikut:"

msgid "``admin``: Checks of any admin site declarations."
msgstr "``admin``: Memeriksa pernyataan situs admin apapun."

msgid "``caches``: Checks cache related configuration."
msgstr "``caches``: Memeriksa penyimpanan konfigurasi terkait."

msgid "``compatibility``: Flags potential problems with version upgrades."
msgstr "``compatibility``: Masalah potensial tanda dengan versi ditingkatkan."

msgid ""
"``database``: Checks database-related configuration issues. Database checks "
"are not run by default because they do more than static code analysis as "
"regular checks do. They are only run by the :djadmin:`migrate` command or if "
"you specify the ``database`` tag when calling the :djadmin:`check` command."
msgstr ""
"``database``: Memeriksa masalah-masalah konfigurasi terkait-basisdata. "
"Pemeriksaan basisdata tidak berjalan secara awal karena mereka melakukan "
"lebih dar analisa kode tetap seperti pemeriksaan biasa lakukan. Mereka hanya "
"berjalan oleh perintah :djadmin:`migrate` atau jika anda menentukan etiket "
"``database`` ketika memanggil perintah :djadmin:`check`."

msgid "``models``: Checks of model, field, and manager definitions."
msgstr ""
"``models``: Memeriksa bidang model, bidang, dan pengertian pengelolaan."

msgid "``security``: Checks security related configuration."
msgstr "``security``: Memeriksa keamanan konfigurasi terkait."

msgid "``signals``: Checks on signal declarations and handler registrations."
msgstr ""
"``signals``: Memeriksa pada pernyataan sinyal dan penangan pendaftaran."

msgid "``templates``: Checks template related configuration."
msgstr "``templates``: Memeriksa cetakan konfigurasi terkait."

msgid "``urls``: Checks URL configuration."
msgstr "``urls``: Memeriksa konfigurasi URL."

msgid "Some checks may be registered with multiple tags."
msgstr "Beberapa pemeriksaan mungkin didaftarkan dengan banyak etiket."

msgid "Core system checks"
msgstr "Memeriksa sistem inti"

msgid "Backwards compatibility"
msgstr "Kesesuaian kebelakang"

msgid ""
"The following checks are performed to warn the user of any potential "
"problems that might occur as a result of a version upgrade."
msgstr ""
"Pemeriksaan berikut dilakukan untuk memperingati pengguna dari setiap "
"kemungkinan masalah yang mungkin muncul sebagai sebuah hasil dari versi "
"peningkatan."

msgid ""
"**1_6.W001**: Some project unit tests may not execute as expected. *This "
"check was removed in Django 1.8 due to false positives*."
msgstr ""
"**1_6.W001**: Beberapa deretan satuan proyek mungkin tidak dikerjakan sesuai "
"harapan. *Pemeriksaan ini telah dipindahkan di Django 1.8 karena menjadi "
"salah positof*."

msgid ""
"**1_6.W002**: ``BooleanField`` does not have a default value. *This check "
"was removed in Django 1.8 due to false positives*."
msgstr ""
"**1_6.W002**: ``BooleanField`` tidak mempunyai nilai awal. *Pemeriksaan ini "
"dipindahkan di Django 1.8 karena positif salah*."

msgid ""
"**1_7.W001**:  Django 1.7 changed the global defaults for the "
"``MIDDLEWARE_CLASSES.`` ``django.contrib.sessions.middleware."
"SessionMiddleware``, ``django.contrib.auth.middleware."
"AuthenticationMiddleware``, and ``django.contrib.messages.middleware."
"MessageMiddleware`` were removed from the defaults. If your project needs "
"these middleware then you should configure this setting. *This check was "
"removed in Django 1.9*."
msgstr ""
"**1_7.W001**: Django 1.7 merubah awal global untuk ``MIDDLEWARE_CLASSES.`` "
"``django.contrib.sessions.middleware.SessionMiddleware``, ``django.contrib."
"auth.middleware.AuthenticationMiddleware``, dan ``django.contrib.messages."
"middleware.MessageMiddleware`` dipindahkan dari awal. Jika proyek anda butuh "
"middleware ini lalu anda harus mengkonfigurasi pengaturan ini. *Pemeriksaan "
"ini dipindahkan di Django 1.9*."

msgid ""
"**1_8.W001**: The standalone ``TEMPLATE_*`` settings were deprecated in "
"Django 1.8 and the :setting:`TEMPLATES` dictionary takes precedence. You "
"must put the values of the following settings into your defaults "
"``TEMPLATES`` dict: ``TEMPLATE_DIRS``, ``TEMPLATE_CONTEXT_PROCESSORS``, "
"``TEMPLATE_DEBUG``, ``TEMPLATE_LOADERS``, ``TEMPLATE_STRING_IF_INVALID``."
msgstr ""
"**1_8.W001**: Pengaturan ``TEMPLATE_*`` berdiri sendiri telah diusangkan di "
"Django 1.8 dan kamus :setting:`TEMPLATES` mengambil hak lebih tinggi. Anda "
"harus menaruh nilai-nilai dari pengaturan berikut kedalam ``TEMPLATES`` "
"kamus: ``TEMPLATE_DIRS``, ``TEMPLATE_CONTEXT_PROCESSORS``, "
"``TEMPLATE_DEBUG``, ``TEMPLATE_LOADERS``, ``TEMPLATE_STRING_IF_INVALID``."

msgid ""
"**1_10.W001**: The ``MIDDLEWARE_CLASSES`` setting is deprecated in Django "
"1.10  and the :setting:`MIDDLEWARE` setting takes precedence. Since you've "
"set ``MIDDLEWARE``, the value of ``MIDDLEWARE_CLASSES`` is ignored."
msgstr ""
"**1_10.W001**: Pengaturan ``MIDDLEWARE_CLASSES`` diusangkan di Django 1.10 "
"dan pengaturan :setting:`MIDDLEWARE` mengambil hak lebih tinggi. Sejak anda "
"telah menyetel ``MIDDLEWARE``, nilai dari ``MIDDLEWARE_CLASSES`` diabaikan. "

msgid "Caches"
msgstr "Tembolok"

msgid ""
"The following checks verify that your :setting:`CACHES` setting is correctly "
"configured:"
msgstr ""
"Pemeriksaan berikut memeriksa bahwa pengaturan :setting:`CACHES` anda dengan "
"benar dikonfigurasi:"

msgid ""
"**caches.E001**: You must define a ``'default'`` cache in your :setting:"
"`CACHES` setting."
msgstr ""
"**caches.E001**: Anda harus menentukan sebuah penyimpanan ``'default'`` di "
"pengaturan :setting:`CACHES`."

msgid "Database"
msgstr "Basisdata"

msgid "MySQL"
msgstr "MySQL"

msgid "If you're using MySQL, the following checks will be performed:"
msgstr ""
"Jika anda sedang menggunakan MySQL, pemeriksaan berikut akan dilakukan:"

msgid ""
"**mysql.E001**: MySQL does not allow unique ``CharField``\\s to have a "
"``max_length`` > 255."
msgstr ""
"**mysql.E001**: MySQL tidak mengizinkan ``CharField``\\s unik mempunyai "
"``max_length`` > 255."

msgid ""
"**mysql.W002**: MySQL Strict Mode is not set for database connection "
"'<alias>'. See also :ref:`mysql-sql-mode`."
msgstr ""
"**mysql.W002**: MySQL Strict Mode tidak disetel untuk hubungan basisdata "
"'<alias>'. Lihat juga :ref:`mysql-sql-mode`."

msgid "Model fields"
msgstr "Bidang-bidang model"

msgid "**fields.E001**: Field names must not end with an underscore."
msgstr "**fields.E001**: Nama bidang tidak boleh berakhir dengan garis bawah."

msgid "**fields.E002**: Field names must not contain ``\"__\"``."
msgstr "**fields.E002**: Nama bidang tidak harus mengandung ``\"__\"``."

msgid ""
"**fields.E003**: ``pk`` is a reserved word that cannot be used as a field "
"name."
msgstr ""
"**fields.E003**: ``pk`` adalah kata terpesan yang tidak dapat digunakan "
"sebagai nama bidang."

msgid ""
"**fields.E004**: ``choices`` must be an iterable (e.g., a list or tuple)."
msgstr ""
"**fields.E004**: ``choices`` harus dapat berulang (sebagai contoh, daftar "
"atau tuple)."

msgid ""
"**fields.E005**: ``choices`` must be an iterable returning ``(actual value, "
"human readable name)`` tuples."
msgstr ""
"**fields.E005**: ``choices`` harus dapat berulang mengembalikan tuple "
"``(nilai sebenarnya, nama yang dapat dibaca manusia)``."

msgid "**fields.E006**: ``db_index`` must be ``None``, ``True`` or ``False``."
msgstr ""
"**fields.E006**: ``db_index`` harus berupa ``None``, ``True`` atau ``False``."

msgid "**fields.E007**: Primary keys must not have ``null=True``."
msgstr "**fields.E007**: Primary key tidak harus mempunyai ``null=True``."

msgid "**fields.E100**: ``AutoField``\\s must set primary_key=True."
msgstr "**fields.E100**: ``AutoField harus disetel primary_key=True."

msgid "**fields.E110**: ``BooleanField``\\s do not accept null values."
msgstr "**fields.E110**: ``BooleanField`` tidak menerima nilai-nilai null."

msgid ""
"**fields.E120**: ``CharField``\\s must define a ``max_length`` attribute."
msgstr ""
"**fields.E120**: ``CharField`` harus menentukan atribut ``max_length``."

msgid "**fields.E121**: ``max_length`` must be a positive integer."
msgstr "**fields.E121**: ``max_length`` harus integer positif."

msgid ""
"**fields.W122**: ``max_length`` is ignored when used with ``IntegerField``."
msgstr ""
"**fields.W122**: ``max_length`` diabaikan ketika digunakan dengan "
"``IntegerField``."

msgid ""
"**fields.E130**: ``DecimalField``\\s must define a ``decimal_places`` "
"attribute."
msgstr ""
"**fields.E130**: ``DecimalField`` harus ditentukan atribut "
"``decimal_places``."

msgid "**fields.E131**: ``decimal_places`` must be a non-negative integer."
msgstr ""
"**fields.E131**: ``decimal_places`` harus berupa integer bukan-negatif."

msgid ""
"**fields.E132**: ``DecimalField``\\s must define a ``max_digits`` attribute."
msgstr ""
"**fields.E132**: ``DecimalField`` harus ditentukan atribut ``max_digits``."

msgid "**fields.E133**: ``max_digits`` must be a non-negative integer."
msgstr "**fields.E133**: ``max_digits`` harus berupa integer bukan-negatif."

msgid ""
"**fields.E134**: ``max_digits`` must be greater or equal to "
"``decimal_places``."
msgstr ""
"**fields.E134**: ``max_digits`` harus lebih besar atau sama dengan "
"``decimal_places``."

msgid ""
"**fields.E140**: ``FilePathField``\\s must have either ``allow_files`` or "
"``allow_folders`` set to True."
msgstr ""
"**fields.E140**: ``FilePathField`` harus mempunyai salah satu "
"``allow_files`` atau ``allow_folders`` disetel ke True."

msgid ""
"**fields.E150**: ``GenericIPAddressField``\\s cannot accept blank values if "
"null values are not allowed, as blank values are stored as nulls."
msgstr ""
"**fields.E150**: ``GenericIPAddressField`` tidak dapat menerima nilai-nilai "
"kosong jika nilai-nilai null tidak diijinkan, sebagai nilai-nilai kosong "
"disimpan sebagai null."

msgid ""
"**fields.E160**: The options ``auto_now``, ``auto_now_add``, and ``default`` "
"are mutually exclusive. Only one of these options may be present."
msgstr ""
"**fields.E160**: Pilihan ``auto_now``, ``auto_now_add``, dan ``default`` "
"saling eksklusif. Hanya satu dari pilihan-pilihan ini mungkin dihadirkan."

msgid "**fields.W161**: Fixed default value provided."
msgstr "**fields.W161**: Nilai awal tetap disediakan."

msgid ""
"**fields.E900**: ``IPAddressField`` has been removed except for support in "
"historical migrations."
msgstr ""
"**fields.E900**: ``IPAddressField`` telah dipindahkan kecuali untuk dukungan "
"dalam riwayat perpindahan."

msgid ""
"**fields.W900**: ``IPAddressField`` has been deprecated. Support for it "
"(except in historical migrations) will be removed in Django 1.9. *This check "
"appeared in Django 1.7 and 1.8*."
msgstr ""
"*fields.W900**: ``IPAddressField`` telah diusangkan. Dukung untuk dia "
"(kecuali dalam riwayat perpindahan) akan dipindahkan di Django 1.9. "
"*Pemeriksaan ini muncul di Django 1.7 and 1.8*."

msgid ""
"**fields.W901**: ``CommaSeparatedIntegerField`` has been deprecated. Support "
"for it (except in historical migrations) will be removed in Django 2.0."
msgstr ""
"**fields.W901**: ``CommaSeparatedIntegerField`` telah diusangkan. Dukungan "
"untuknya (kecuali di perpindahan bersejarah) akan dipindahkan di Django 2.0."

msgid "File fields"
msgstr "Bidang-bidang berkas"

msgid ""
"**fields.E200**: ``unique`` is not a valid argument for a ``FileField``. "
"*This check is removed in Django 1.11*."
msgstr ""
"**fields.E200**: ``unique`` bukan argumen sah untuk ``FileField``. "
"*Pemeriksaan ini dipindahkan dalam Django 1.11*."

msgid ""
"**fields.E201**: ``primary_key`` is not a valid argument for a ``FileField``."
msgstr ""
"**fields.E201**: ``primary_key`` bukan argumen sah untuk ``FileField``."

msgid ""
"**fields.E202**: ``FileField``’s ``upload_to`` argument must be a relative "
"path, not an absolute path."
msgstr ""
"**fields.E202**: Argumen ``upload_to`` ``FileField``harus berupa jalur "
"bergantung, bukan jalur mutlak."

msgid ""
"**fields.E210**: Cannot use ``ImageField`` because Pillow is not installed."
msgstr ""
"**fields.E210**: Tidak dapat menggunakan ``ImageField`` karena Pillow tidak "
"dipasang."

msgid "Related fields"
msgstr "Bidang-bidang terhubung"

msgid ""
"**fields.E300**: Field defines a relation with model ``<model>``, which is "
"either not installed, or is abstract."
msgstr ""
"**fields.E300**: Bidang menentukan hubungan dengan model ``<model>``, yang "
"salah satu tidak dipasang atau abstrak."

msgid ""
"**fields.E301**: Field defines a relation with the model ``<model>`` which "
"has been swapped out."
msgstr ""
"**fields.E301**: Bidang menentukan hubungan dengan model ``<model>`` yang "
"telah ditukar.\t"

msgid ""
"**fields.E302**: Accessor for field ``<field name>`` clashes with field "
"``<field name>``."
msgstr ""
"**fields.E302**: Accessor untuk bidang ``<field name>`` bentrok dengan "
"bidang ``<field name>``."

msgid ""
"**fields.E303**: Reverse query name for field ``<field name>`` clashes with "
"field ``<field name>``."
msgstr ""
"**fields.E303**: Membalikkan permintaan nama untuk bidang ``<field name>`` "
"bentrok dengan bidang ``<field name>``."

msgid ""
"**fields.E304**: Field name ``<field name>`` clashes with accessor for "
"``<field name>``."
msgstr ""
"**fields.E304**: Nama bidang ``<field name>`` bentrok dengan accessor untuk "
"``<field name>``."

msgid ""
"**fields.E305**: Field name ``<field name>`` clashes with reverse query name "
"for ``<field name>``."
msgstr ""
"**fields.E305**: Nama bidang ``<field name>`` bentrok dengan nama "
"membalikkan permintaan untuk ``<field name>``."

msgid ""
"**fields.E306**: Related name must be a valid Python identifier or end with "
"a ``'+'``."
msgstr ""
"**fields.E306**: Nama terhubung harus penciri Python sah atau diakhiri "
"dengan sebuah ``'+'``."

msgid ""
"**fields.E307**: The field ``<app label>.<model>.<field name>`` was declared "
"with a lazy reference to ``<app label>.<model>``, but app ``<app label>`` "
"isn't installed or doesn't provide model ``<model>``."
msgstr ""
"**fields.E307**: Bidang ``<app label>.<model>.<field name>`` telah "
"dinyatakan dengan acuan lazy ke ``<app label>.<model>``, tetapi aplikasi "
"``<app label>`` tidak terpasang atau tidak menyediakan model ``<model>``."

msgid ""
"**fields.E308**: Reverse query name ``<related query name>`` must not end "
"with an underscore."
msgstr ""
"**fields.E308**: Nama permintaan kebalikan ``1`` jangan berakhir dengan "
"garis bawah."

msgid ""
"**fields.E309**: Reverse query name ``<related query name>`` must not "
"contain ``'__'``."
msgstr ""
"**fields.E309**: Nama permintaan kebalikan ``1`` jangan mengandung ``'__'``."

msgid ""
"**fields.E310**: No subset of the fields ``<field1>``, ``<field2>``, ... on "
"model ``<model>`` is unique. Add ``unique=True`` on any of those fields or "
"add at least a subset of them to a unique_together constraint."
msgstr ""
"**fields.E310**: Bukan bagian dari bidang-bidang ``<field1>``, "
"``<field2>``, ... pada model ``<model>`` adalah unik. Tambah ``unique=True`` "
"pada setiap dari bidang-bidang tersebut atau menambah setidaknya sebuah "
"bagian dari mereka ke batasan unique_together."

msgid ""
"**fields.E311**: ``<model>`` must set ``unique=True`` because it is "
"referenced by a ``ForeignKey``."
msgstr ""
"**fields.E311**: ``<model>`` harus menyetel ``unique=True`` karena itu "
"adalah dihubungkan oleh ``ForeignKey``."

msgid ""
"**fields.E312**: The ``to_field`` ``<field name>`` doesn't exist on the "
"related model ``<app label>.<model>``."
msgstr ""
"**fields.E312**: ``to_field`` ``1`` tidak ada pada model terkait ``2.3``."

msgid ""
"**fields.E320**: Field specifies ``on_delete=SET_NULL``, but cannot be null."
msgstr ""
"**fields.E320**: Bidang menentukan ``on_delete=SET_NULL``, tetapi tidak "
"dapat berupa null."

msgid ""
"**fields.E321**: The field specifies ``on_delete=SET_DEFAULT``, but has no "
"default value."
msgstr ""
"**fields.E321**: Bidang menentukan ``on_delete=SET_DEFAULT``, tetapi tidak "
"mempunyai nilai awal."

msgid "**fields.E330**: ``ManyToManyField``\\s cannot be unique."
msgstr "**fields.E330**: ``ManyToManyField`` tidak dapat unik."

msgid ""
"**fields.E331**: Field specifies a many-to-many relation through model "
"``<model>``, which has not been installed."
msgstr ""
"**fields.E331**: Bidang menentukan hubungan many-to-many melalui model "
"``<model>``, yang belum dipasang."

msgid ""
"**fields.E332**: Many-to-many fields with intermediate tables must not be "
"symmetrical."
msgstr ""
"**fields.E332**: Bidang many-to-many dengan tabel pertengahan harus tidak "
"simetris."

msgid ""
"**fields.E333**: The model is used as an intermediate model by ``<model>``, "
"but it has more than two foreign keys to ``<model>``, which is ambiguous. "
"You must specify which two foreign keys Django should use via the "
"``through_fields`` keyword argument."
msgstr ""
"**fields.E333**: Model digunakan sebagai model menengah oleh ``<model>``, "
"tetapi itu mempunyai lebih dari dua foreign key pada ``<model>``, yang "
"memiliki dua makna. Anda harus menentukan dua foreign key Django yang mana "
"harus digunakan melalui argumen kata kunci ``through_fields``."

msgid ""
"**fields.E334**: The model is used as an intermediate model by ``<model>``, "
"but it has more than one foreign key from ``<model>``, which is ambiguous. "
"You must specify which foreign key Django should use via the "
"``through_fields`` keyword argument."
msgstr ""
"**fields.E334**: Model digunakan sebagai model menengah oleh ``<model>``, "
"tetapi itu mempunyai lebih dari satu foreign key pada ``<model>``, yang "
"memiliki dua makna. Anda harus menentukan foreign key Django mana yang harus "
"digunakan melalui argumen kata kunci ``through_fields``."

msgid ""
"**fields.E335**: The model is used as an intermediate model by ``<model>``, "
"but it has more than one foreign key to ``<model>``, which is ambiguous. You "
"must specify which foreign key Django should use via the ``through_fields`` "
"keyword argument."
msgstr ""
"**fields.E335**: Model digunakan sebagai model menengah oleh ``<model>``, "
"tetapi itu mempunyai lebih dari satu foreign key pada ``<model>``, yang "
"memiliki dua makna. Anda harus menentukan foreign key Django mana yang harus "
"digunakan melalui argumen kata kunci ``through_fields``."

msgid ""
"**fields.E336**: The model is used as an intermediary model by ``<model>``, "
"but it does not have foreign key to ``<model>`` or ``<model>``."
msgstr ""
"**fields.E336**: Model digunakan sebagai model menengah oleh ``<model>``, "
"tetapi itu tidak mempunyai foreign key pada ``<model>`` or ``<model>``."

msgid ""
"**fields.E337**: Field specifies ``through_fields`` but does not provide the "
"names of the two link fields that should be used for the relation through "
"``<model>``."
msgstr ""
"**fields.E337**: Bidang menentukan ``through_fields`` tetapi tidak "
"menyediakan nama-nama dari dua bidang kaitan yang harus digunakan untuk "
"hubungan ``<model>``."

msgid ""
"**fields.E338**: The intermediary model ``<through model>`` has no field "
"``<field name>``."
msgstr ""
"**fields.E338**: Model perantara ``<through model>`` tidak mempunyai bidang "
"``<field name>``."

msgid ""
"**fields.E339**: ``<model>.<field name>`` is not a foreign key to "
"``<model>``."
msgstr ""
"**fields.E339**: ``<model>.<field name>`` bukan foreign key pada ``<model>``."

msgid ""
"**fields.E340**: The field's intermediary table ``<table name>`` clashes "
"with the table name of ``<model>``/``<model>.<field name>``."
msgstr ""
"**fields.E340**: Bidang tabel menengah ``1`` tabrakan dengan nama tabel dari "
"``2``/``3.4``."

msgid "**fields.W340**: ``null`` has no effect on ``ManyToManyField``."
msgstr ""
"**fields.W340**: ``null`` tidak mempunyai efek pada ``ManyToManyField``."

msgid "**fields.W341**: ``ManyToManyField`` does not support ``validators``."
msgstr "**fields.W341**: ``ManyToManyField`` tidak mendukung ``validators``."

msgid ""
"**fields.W342**: Setting ``unique=True`` on a ``ForeignKey`` has the same "
"effect as using a ``OneToOneField``."
msgstr ""
"**fields.W342**: Mengatur ``unique=True`` pada ``ForeignKey`` mempunyai efek "
"sama ketika menggunakan ``OneToOneField``."

msgid ""
"**fields.W343**: ``limit_choices_to`` has no effect on ``ManyToManyField`` "
"with a ``through`` model."
msgstr ""
"**fields.W343**: ``limit_choices_to`` tidak mempunyai pengaruh pada "
"``ManyToManyField`` dengan model ``through``."

msgid "Models"
msgstr "Model"

msgid ""
"**models.E001**: ``<swappable>`` is not of the form ``app_label.app_name``."
msgstr ""
"**models.E001**: ``<swappable>`` bukan dari formulir ``app_label.app_name``."

msgid ""
"**models.E002**: ``<SETTING>`` references ``<model>``, which has not been "
"installed, or is abstract."
msgstr ""
"**models.E002**: ``<SETTING>`` acuan ``<model>``, yang belum dipasang, atau "
"abstrak."

msgid ""
"**models.E003**: The model has two many-to-many relations through the "
"intermediate model ``<app_label>.<model>``."
msgstr ""
"**models.E003**: Model mempunyai hubungan many-to-many melalui model "
"menengah ``<app_label>.<model>``."

msgid ""
"**models.E004**: ``id`` can only be used as a field name if the field also "
"sets ``primary_key=True``."
msgstr ""
"**models.E004**: ``id`` dapat hanya digunakan sebagai nama bidang jika "
"bidang juga disetel ``primary_key=True``."

msgid ""
"**models.E005**: The field ``<field name>`` from parent model ``<model>`` "
"clashes with the field ``<field name>`` from parent model ``<model>``."
msgstr ""
"**models.E005**: Bidang  ``<field name>`` dari model induk ``<model>`` "
"bentrok dengan bidang  ``<field name>`` dari model induk ``<model>``."

msgid ""
"**models.E006**: The field clashes with the field ``<field name>`` from "
"model ``<model>``."
msgstr ""
"**models.E006**: Bidang bentrok dengan bidang ``<field name>`` dari model "
"``<model>``."

msgid ""
"**models.E007**: Field ``<field name>`` has column name ``<column name>`` "
"that is used by another field."
msgstr ""
"**models.E007**: Field ``<field name>`` mempunyai nama kolom ``<column "
"name>`` yang digunakan oleh bidang lain."

msgid "**models.E008**: ``index_together`` must be a list or tuple."
msgstr "**models.E008**: ``index_together`` harus berupa daftar atau tuple."

msgid ""
"**models.E009**: All ``index_together`` elements must be lists or tuples."
msgstr ""
"**models.E009**: Semua unsur ``index_together`` harus berupa daftar atau "
"tuple."

msgid "**models.E010**: ``unique_together`` must be a list or tuple."
msgstr "**models.E010**: ``unique_together`` harus berupa daftar atau tuple."

msgid ""
"**models.E011**: All ``unique_together`` elements must be lists or tuples."
msgstr ""
"**models.E011**: Semua unsur ``unique_together`` harus berupa daftar atau "
"tuple."

msgid ""
"**models.E012**: ``index_together/unique_together`` refers to the non-"
"existent field ``<field name>``."
msgstr ""
"**models.E012**: ``index_together/unique_together`` mengacu pada bidang "
"tidak ada ``<field name>``."

msgid ""
"**models.E013**: ``index_together/unique_together`` refers to a "
"``ManyToManyField`` ``<field name>``, but ``ManyToManyField``\\s are not "
"supported for that option."
msgstr ""
"**models.E013**: ``index_together/unique_together`` mengacu pada "
"``ManyToManyField`` ``<field name>``, tetapi ``ManyToManyField`` tidak "
"didukung untuk pilihan itu."

msgid ""
"**models.E014**: ``ordering`` must be a tuple or list (even if you want to "
"order by only one field)."
msgstr ""
"**models.E014**: ``ordering`` harus berupa tuple atau daftar (bahkan jika "
"anda ingin memesan hanya satu bidang)."

msgid ""
"**models.E015**: ``ordering`` refers to the non-existent field ``<field "
"name>``."
msgstr ""
"**models.E015**: ``ordering`` mengacu pada bidang tidak ada ``<field name>``."

msgid ""
"**models.E016**: ``index_together/unique_together`` refers to field "
"``<field_name>`` which is not local to model ``<model>``."
msgstr ""
"**models.E016**: ``index_together/unique_together`` mengacu pada bidang "
"``<field_name>`` yang bukan lokal ke model ``<model>``."

msgid "**models.E017**: Proxy model ``<model>`` contains model fields."
msgstr ""
"**models.E017**: Model proxy ``<model>`` mengandung bidang-bidang model."

msgid ""
"**models.E018**: Autogenerated column name too long for field ``<field>``. "
"Maximum length is ``<maximum length>`` for database ``<alias>``."
msgstr ""
"**models.E018**: Nama kolom otomatis dibangkitkan terlalu panjang untuk "
"bidang  ``<field>``. Panjang maksimum adalah ``<maximum length>`` untuk "
"basisdata ``<alias>``."

msgid ""
"**models.E019**: Autogenerated column name too long for M2M field ``<M2M "
"field>``. Maximum length is ``<maximum length>`` for database ``<alias>``."
msgstr ""
"**models.E019**: Nama kolom otomatis dibangkitkan terlalu panjang untuk "
"bidang M2M ``<M2M field>``. Panjang maksimum adalah ``<maximum length>`` "
"untuk basisdata ``<alias>``."

msgid ""
"**models.E020**: The ``<model>.check()`` class method is currently "
"overridden."
msgstr ""
"**models.E020**: Cara kelas ``<model>.check()`` saat ini dikesampingkan."

msgid ""
"**models.E021**: ``ordering`` and ``order_with_respect_to`` cannot be used "
"together."
msgstr ""
"**models.E021**: ``ordering`` dan ``order_with_respect_to`` tidak dapat "
"digunakan bersama-sama."

msgid ""
"**models.E022**: ``<function>`` contains a lazy reference to ``<app label>."
"<model>``, but app ``<app label>`` isn't installed or doesn't provide model "
"``<model>``."
msgstr ""
"**models.E022**: ``<function>`` mengandung acuan lazy pada ``<app label>."
"<model>``, tetapi aplikasi ``<app label>`` tidak dipasang atau tidak "
"menyediakan model ``<model>``.  "

msgid ""
"**models.E023**: The model name ``<model>`` cannot start or end with an "
"underscore as it collides with the query lookup syntax."
msgstr ""
"**models.E023**: Nama model ``1`` tidak dapat mulai atau berakhir dengan "
"sebuah garis bawah ketika itu bertabrakan dengan sintaksis penacrian "
"permintaan."

msgid ""
"**models.E024**: The model name ``<model>`` cannot contain double "
"underscores as it collides with the query lookup syntax."
msgstr ""
"**models.E024**: Nama model ``1`` tidak dapat mengandung garis bawah ganda "
"ketika itu bertabrakan dengan sintaksis pencarian permintaan."

msgid "Security"
msgstr "Keamanan"

msgid ""
"The security checks do not make your site secure. They do not audit code, do "
"intrusion detection, or do anything particularly complex. Rather, they help "
"perform an automated, low-hanging-fruit checklist. They help you remember "
"the simple things that improve your site's security."
msgstr ""
"Pemeriksaan keamanan tidak membuat situs anda aman. Mereka tidak memeriksa "
"kode, melalui pengenalan gangguan, atau melakukan apapun khususnya yang "
"rumit. Tentu saja, mereka membantu melakukan sebuah otomatis, daftar centang "
"yang mudah dijangkau. Mereka membantu anda mengingat hal-hal sederhana yang "
"meningkatkan keamanan situs anda."

msgid ""
"Some of these checks may not be appropriate for your particular deployment "
"configuration. For instance, if you do your HTTP to HTTPS redirection in a "
"load balancer, it'd be irritating to be constantly warned about not having "
"enabled :setting:`SECURE_SSL_REDIRECT`. Use :setting:"
"`SILENCED_SYSTEM_CHECKS` to silence unneeded checks."
msgstr ""
"Beberapa pemeriksaan ini mungkin tidak sesuai untuk konfigurasi penyebaran "
"tertentu anda. Sebagai contoh, jika anda melakukan pengalihan HTTP ke HTTPS "
"anda dalam sebuah  penyeimbang beban, itu akan menjengkelkan terus-menerus "
"diperingati mengenai tidak memiliki :setting:`SECURE_SSL_REDIRECT` diadakan. "
"Gunakan :setting:`SILENCED_SYSTEM_CHECKS` untuk mendiamkan pemeriksaan yang "
"tidak dibutuhkan"

msgid ""
"The following checks are run if you use the :option:`check --deploy` option:"
msgstr ""
"Pemeriksaan berikut berjalan jika anda menggunakan pilihan :option:`check --"
"deploy`:"

msgid ""
"**security.W001**: You do not have :class:`django.middleware.security."
"SecurityMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES` so the :setting:`SECURE_HSTS_SECONDS`, :setting:"
"`SECURE_CONTENT_TYPE_NOSNIFF`, :setting:`SECURE_BROWSER_XSS_FILTER`, and :"
"setting:`SECURE_SSL_REDIRECT` settings will have no effect."
msgstr ""
"**security.W001**: Anda tidak mempunyai :class:`django.middleware.security."
"SecurityMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES` jadi pengaturan :setting:`SECURE_HSTS_SECONDS`, :"
"setting:`SECURE_CONTENT_TYPE_NOSNIFF`, :setting:`SECURE_BROWSER_XSS_FILTER`, "
"dan :setting:`SECURE_SSL_REDIRECT`tidak akan mempunyai pengaruh."

msgid ""
"**security.W002**: You do not have :class:`django.middleware.clickjacking."
"XFrameOptionsMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES`, so your pages will not be served with an ``'x-frame-"
"options'`` header. Unless there is a good reason for your site to be served "
"in a frame, you should consider enabling this header to help prevent "
"clickjacking attacks."
msgstr ""
"**security.W002**: Anda tidak mempunyai :class:`django.middleware."
"clickjacking.XFrameOptionsMiddleware` di :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES` anda, jadi halaman anda tidak akan dilayani dengan "
"sebuah kepala ``'x-frame-options'``. Meskipun ada alasan bagus untuk situs "
"anda dilayani dalam sebuah kerangka, anda harus mempertimbangkan mengadakan "
"kepala ini untuk membantu mencegah serangan clickjacking."

msgid ""
"**security.W003**: You don't appear to be using Django's built-in cross-site "
"request forgery protection via the middleware (:class:`django.middleware."
"csrf.CsrfViewMiddleware` is not in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES`). Enabling the middleware is the safest approach to "
"ensure you don't leave any holes."
msgstr ""
"**security.W003**: Anda tidak tampak menggunakan perlindungan pemalsuan "
"permintaan lintas-situs siap pakai Django melalui middleware (:class:`django."
"middleware.csrf.CsrfViewMiddleware` tidak di :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES` anda). Mengadakan middleware adalah pendekatan teraman "
"untuk memastikan anda tidak meninggalkan lubang apapun. "

msgid ""
"**security.W004**: You have not set a value for the :setting:"
"`SECURE_HSTS_SECONDS` setting. If your entire site is served only over SSL, "
"you may want to consider setting a value and enabling :ref:`HTTP Strict "
"Transport Security <http-strict-transport-security>`. Be sure to read the "
"documentation first; enabling HSTS carelessly can cause serious, "
"irreversible problems."
msgstr ""
"**security.W004**: Anda belum menyetel sebuah nilai untuk pengaturan :"
"setting:`SECURE_HSTS_SECONDS`. Jika keseluruhan situs anda hanya terhadap "
"SSL, anda mungkin ingin mempertimbangkan pengaturan sebuah nilai dan "
"mengadakan :ref:`HTTP Strict Transport Security <http-strict-transport-"
"security>`. Pastikan membaca dokumentasi dahulu; mengadakan HSTS tanpa "
"bertanggung jawab dapat menyebabkan serius, masalah tidak dapat diubah."

msgid ""
"**security.W005**: You have not set the :setting:"
"`SECURE_HSTS_INCLUDE_SUBDOMAINS` setting to ``True``. Without this, your "
"site is potentially vulnerable to attack via an insecure connection to a "
"subdomain. Only set this to ``True`` if you are certain that all subdomains "
"of your domain should be served exclusively via SSL."
msgstr ""
"**security.W005**: Anda belum menyetel pengaturan :setting:"
"`SECURE_HSTS_INCLUDE_SUBDOMAINS` menjadi ``True``. Tanpa ini, situs anda "
"berpotensi rentan pada serangan melalui hubungan tidak aman ke subranah. "
"Hanya setel ini menjadi ``True`` jika anda yakin bajwa semua subranah dari "
"ranah anda harus dilayani secara khusus melalui SSL. "

msgid ""
"**security.W006**: Your :setting:`SECURE_CONTENT_TYPE_NOSNIFF` setting is "
"not set to ``True``, so your pages will not be served with an ``'x-content-"
"type-options: nosniff'`` header. You should consider enabling this header to "
"prevent the browser from identifying content types incorrectly."
msgstr ""
"**security.W006**: Pengaturan :setting:`SECURE_CONTENT_TYPE_NOSNIFF` anda "
"tidak disetel menjadi ``True``, jadi halaman anda tidak akan dilayani dengan "
"kepala ``'x-content-type-options: nosniff'``. Anda harus mempertimbangkan "
"mengadakan kepala ini untuk mencegah peramban dari menciri jenis isi secara "
"tidak benar."

msgid ""
"**security.W007**: Your :setting:`SECURE_BROWSER_XSS_FILTER` setting is not "
"set to ``True``, so your pages will not be served with an ``'x-xss-"
"protection: 1; mode=block'`` header. You should consider enabling this "
"header to activate the browser's XSS filtering and help prevent XSS attacks."
msgstr ""
"**security.W007**: Pengaturan :setting:`SECURE_BROWSER_XSS_FILTER` anda "
"disetel menjadi ``True``, jadi halaman anda tidak akan dilayani dengan "
"kepala ``'x-xss-protection: 1; mode=block'``. Anda harus mempertimbangkan "
"mengadakan kepala ini untuk mengaktifkan penyaringan XSS peramban dan "
"membantu mencegah serangan XSS."

msgid ""
"**security.W008**: Your :setting:`SECURE_SSL_REDIRECT` setting is not set to "
"``True``. Unless your site should be available over both SSL and non-SSL "
"connections, you may want to either set this setting to ``True`` or "
"configure a load balancer or reverse-proxy server  to redirect all "
"connections to HTTPS."
msgstr ""
"**security.W008**: Pengaturan :setting:`SECURE_SSL_REDIRECT` anda tidak "
"disetel menjadi ``True``. Meskipun situs anda harus tersedia terhadap kedua "
"hubungan SSL dan bukan-SSL, anda mungkin ingin antara menyetel pengaturan "
"ini menjadi ``True`` atau konfigurasi sebuah penyeimbang muatan atau peladen "
"membalikkan-proxy ke mengalihkan semua hubungan pada HTTPS."

msgid ""
"**security.W009**: Your :setting:`SECRET_KEY` has less than 50 characters or "
"less than 5 unique characters. Please generate a long and random "
"``SECRET_KEY``, otherwise many of Django's security-critical features will "
"be vulnerable to attack."
msgstr ""
"**security.W009**: :setting:`SECRET_KEY` anda mempunyai kurang dari 50 "
"karakter atau kurang dari 5 karakter unik. Harap bangkitkan sebuah "
"``SECRET_KEY`` panjang dan acak, jika tidak banyak dari fitur-fitur kritis-"
"keamanan Django akan rentan pada serangan."

msgid ""
"**security.W010**: You have :mod:`django.contrib.sessions` in your :setting:"
"`INSTALLED_APPS` but you have not set :setting:`SESSION_COOKIE_SECURE` to "
"``True``. Using a secure-only session cookie makes it more difficult for "
"network traffic sniffers to hijack user sessions."
msgstr ""
"**security.W010**: Anda memiliki :mod:`django.contrib.sessions` di :setting:"
"`INSTALLED_APPS` anda tetapi anda belum menyetel :setting:"
"`SESSION_COOKIE_SECURE` menjadi ``True``. Menggunakan kue sesi hanya-aman "
"membuatnya lebih sulit untuk lalu lintas jaringan sapu tangan untuk membajak "
"sesi pengguna."

msgid ""
"**security.W011**: You have :class:`django.contrib.sessions.middleware."
"SessionMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES`, but you have not set :setting:`SESSION_COOKIE_SECURE` "
"to ``True``. Using a secure-only session cookie makes it more difficult for "
"network traffic sniffers to hijack user sessions."
msgstr ""
"**security.W011**: Anda mempunyai :class:`django.contrib.sessions.middleware."
"SessionMiddleware` di :setting:`MIDDLEWARE`/:setting:`MIDDLEWARE_CLASSES` "
"anda, tetapi anda belum menyetel :setting:`SESSION_COOKIE_SECURE` menjadi "
"``True``. Menggunakan kue sesi hanya-aman membuatnya lebih sulit untuk lalu "
"lintas jaringan sapu tangan untuk membajak sesi pengguna.  "

msgid ""
"**security.W012**: :setting:`SESSION_COOKIE_SECURE` is not set to ``True``. "
"Using a secure-only session cookie makes it more difficult for network "
"traffic sniffers to hijack user sessions."
msgstr ""
"**security.W012**: :setting:`SESSION_COOKIE_SECURE` tidak disetel menjadi "
"``True``. Menggunakan kue sesi hanya-aman membuatnya lebih sulit untuk lalu "
"lintas jaringan sapu tangan untuk membajak sesi pengguna."

msgid ""
"**security.W013**: You have :mod:`django.contrib.sessions` in your :setting:"
"`INSTALLED_APPS`, but you have not set :setting:`SESSION_COOKIE_HTTPONLY` to "
"``True``. Using an ``HttpOnly`` session cookie makes it more difficult for "
"cross-site scripting attacks to hijack user sessions."
msgstr ""
"**security.W013**: Anda memiliki :mod:`django.contrib.sessions` di :setting:"
"`INSTALLED_APPS` anda, tetapi anda belum menyetel :setting:"
"`SESSION_COOKIE_HTTPONLY` menjadi ``True``. Menggunakan kue sesi "
"``HttpOnly``  membuatnya lebih sulit untuk serangan penulisan lintas-situs "
"untuk membajak sesi pengguna."

msgid ""
"**security.W014**: You have :class:`django.contrib.sessions.middleware."
"SessionMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES`, but you have not set :setting:"
"`SESSION_COOKIE_HTTPONLY` to ``True``. Using an ``HttpOnly`` session cookie "
"makes it more difficult for cross-site scripting attacks to hijack user "
"sessions."
msgstr ""
"**security.W014**: Anda mempunyai :class:`django.contrib.sessions.middleware."
"SessionMiddleware` di :setting:`MIDDLEWARE`/:setting:`MIDDLEWARE_CLASSES` "
"anda, tetapi anda belum menyetel :setting:`SESSION_COOKIE_HTTPONLY` menjadi "
"``True``. Menggunakan kue sesi  ``HttpOnly`` membuatnya lebih sulit untuk "
"serangan penulisan lintas-situs untuk membajak sesi pengguna.  "

msgid ""
"**security.W015**: :setting:`SESSION_COOKIE_HTTPONLY` is not set to "
"``True``. Using an ``HttpOnly`` session cookie makes it more difficult for "
"cross-site scripting attacks to hijack user sessions."
msgstr ""
"**security.W015**: :setting:`SESSION_COOKIE_HTTPONLY` tidak disetel menjadi "
"``True``. Menggunakan kue sesi ``HttpOnly`` membuatnya lebih sulit untuk "
"serangan penulisan lintas-situs untuk membajak sesi pengguna."

msgid ""
"**security.W016**: :setting:`CSRF_COOKIE_SECURE` is not set to ``True``. "
"Using a secure-only CSRF cookie makes it more difficult for network traffic "
"sniffers to steal the CSRF token."
msgstr ""
"**security.W016**: :setting:`CSRF_COOKIE_SECURE` tidak disetel menjadi "
"``True``. Menggunakan kue CSRF hanya-aman membuatnya lebih sulit untuk lalu "
"lintas jaringan sapu tangan untuk mencuri token CSRF."

msgid ""
"**security.W017**: :setting:`CSRF_COOKIE_HTTPONLY` is not set to ``True``. "
"Using an ``HttpOnly`` CSRF cookie makes it more difficult for cross-site "
"scripting attacks to steal the CSRF token. *This check is removed in Django "
"1.11 as the* :setting:`CSRF_COOKIE_HTTPONLY` *setting offers no pratical "
"benefit.*"
msgstr ""
"**security.W017**: :setting:`CSRF_COOKIE_HTTPONLY` tidak disetel menjadi "
"``True``. Menggunakan sebuah kue CSRF ``HttpOnly`` membuatnya lebih sulit "
"untuk serangan cross-site scripting untuk mencuri token CSRF *Pemeriksaan "
"ini dipindahkan dalam Django 1.11 ketika* pengaturan :setting:"
"`CSRF_COOKIE_HTTPONLY` * tidak menawarkan keuntungan berguna.*"

msgid ""
"**security.W018**: You should not have :setting:`DEBUG` set to ``True`` in "
"deployment."
msgstr ""
"*security.W018**: Anda harus mempunyai :setting:`DEBUG` disetel ke ``True`` "
"dalam menyebarkan."

msgid ""
"**security.W019**: You have :class:`django.middleware.clickjacking."
"XFrameOptionsMiddleware` in your :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES`, but :setting:`X_FRAME_OPTIONS` is not set to "
"``'DENY'``. The default is ``'SAMEORIGIN'``, but unless there is a good "
"reason for your site to serve other parts of itself in a frame, you should "
"change it to ``'DENY'``."
msgstr ""
"**security.W019**: Anda mempunyai :class:`django.middleware.clickjacking."
"XFrameOptionsMiddleware` di :setting:`MIDDLEWARE`/:setting:"
"`MIDDLEWARE_CLASSES` anda, tetapi :setting:`X_FRAME_OPTIONS` tidak disetel "
"menjadi ``'DENY'``. Awalan adalah ``'SAMEORIGIN'``, tetapi meskipun ada "
"alasan bagus untuk situs anda untuk melayani bagian lain dari itu sendiri "
"dalam sebuah kerangka, anda harus merubah itu menjadi ``'DENY'``."

msgid ""
"**security.W020**: :setting:`ALLOWED_HOSTS` must not be empty in deployment."
msgstr ""
"**security.W020**: :setting:`ALLOWED_HOSTS` harus tidak kosong dalam "
"menyebarkan."

msgid ""
"**security.W021**: You have not set the :setting:`SECURE_HSTS_PRELOAD` "
"setting to ``True``. Without this, your site cannot be submitted to the "
"browser preload list."
msgstr ""
"**security.W021**: Anda belum menyetel pengaturan :setting:"
"`SECURE_HSTS_PRELOAD` menjadi ``True``. Tanpa ini, situs anda tidak dapat "
"diajukan ke daftar pramuat peramban. "

msgid "Signals"
msgstr "Sinyal"

msgid ""
"**signals.E001**: ``<handler>`` was connected to the ``<signal>`` signal "
"with a lazy reference to the sender ``<app label>.<model>``, but app ``<app "
"label>`` isn't installed or doesn't provide model ``<model>``."
msgstr ""
"**signals.E001**: ``<handler>`` telah terhubung ke sinyal ``<signal>`` "
"dengan acuan lazy ke pengirim ``<app label>.<model>``, tetapi aplikasi "
"``<app label>`` tidak terpasang atau tidak menyediakan model ``<model>``."

msgid "Templates"
msgstr "Templat"

msgid ""
"The following checks verify that your :setting:`TEMPLATES` setting is "
"correctly configured:"
msgstr ""
"Pemeriksaan berikut memeriksa bahwa pengaturan :setting:`TEMPLATES` anda "
"dengan benar dikonfigurasi:"

msgid ""
"**templates.E001**: You have ``'APP_DIRS': True`` in your :setting:"
"`TEMPLATES` but also specify ``'loaders'`` in ``OPTIONS``. Either remove "
"``APP_DIRS`` or remove the ``'loaders'`` option."
msgstr ""
"**templates.E001**: Anda mempunyai ``'APP_DIRS': True`` di :setting:"
"`TEMPLATES` anda tetapi juga menentukan ``'loaders'`` di ``OPTIONS``. Antara "
"memindahkan ``APP_DIRS`` atau memindahkan pilihan ``'loaders'``. "

msgid ""
"**templates.E002**: ``string_if_invalid`` in :setting:`TEMPLATES` :setting:"
"`OPTIONS <TEMPLATES-OPTIONS>` must be a string but got: ``{value}`` (``{type}"
"``)."
msgstr ""
"**templates.E002**: ``string_if_invalid`` di setting:`TEMPLATES` :setting:"
"`OPTIONS <TEMPLATES-OPTIONS>` harus berupa string tetapi mendapatkan: "
"``{value}`` (``{type}``)."

msgid "URLs"
msgstr "URL"

msgid "The following checks are performed on your URL configuration:"
msgstr "Pemeriksaan berikut dilakukan di konfigurasi URL anda:"

msgid ""
"**urls.W001**: Your URL pattern ``<pattern>`` uses :func:`~django.conf.urls."
"include` with a ``regex`` ending with a ``$``. Remove the dollar from the "
"``regex`` to avoid problems including URLs."
msgstr ""
"**urls.W001**: Corak ``<pattern>`` URL anda menggunakan :func:`~django.conf."
"urls.include` dengan sebuah ``regex`` berakhir dengan sebuah ``$``. "
"Pindahkan dolar dari ``regex`` untuk menghindari masalah-masalah termasuk "
"URL."

msgid ""
"**urls.W002**: Your URL pattern ``<pattern>`` has a ``regex`` beginning with "
"a ``/``. Remove this slash as it is unnecessary. If this pattern is targeted "
"in an :func:`~django.conf.urls.include`, ensure the :func:`~django.conf.urls."
"include` pattern has a trailing ``/``."
msgstr ""
"**urls.W002**: Corak ``<pattern>`` URL anda mempunyai ``regex`` diawali "
"dengan sebuah ``/``. Pindahkan garis miring ini ketika itu tidak dibutuhkan. "
"Jika corak ini adalah disasar di sebuah :func:`~django.conf.urls.include`, "
"pastikan corak :func:`~django.conf.urls.include` mempunyai buntutan ``/``.   "

msgid ""
"**urls.W003**: Your URL pattern ``<pattern>`` has a ``name`` including a ``:"
"``. Remove the colon, to avoid ambiguous namespace references."
msgstr ""
"**urls.W003**: Corak ``<pattern>`` URL mempunyai ``name`` termasuk sebuah ``:"
"``. Pindahkan titik dua, untuk menghindari dua arti acuan namespace."

msgid ""
"**urls.E004**: Your URL pattern ``<pattern>`` is invalid. Ensure that "
"``urlpatterns`` is a list of :func:`~django.conf.urls.url()` instances."
msgstr ""
"**urls.E004**: Corak ``<pattern>`` URL anda tidak sah. Pastikan bahwa "
"``urlpatterns`` adalah sebuah daftar dari instance :func:`~django.conf.urls."
"url()`."

msgid ""
"**urls.W005**: URL namespace ``<namespace>`` isn't unique. You may not be "
"able to reverse all URLs in this namespace."
msgstr ""
"**urls.W005**: namespace URL ``1`` tidak unik. Anda mungkin tidak dapat "
"membalikkan semua URL dalam namespace ini."

msgid ""
"**urls.E006**: The :setting:`MEDIA_URL`/ :setting:`STATIC_URL` setting must "
"end with a slash."
msgstr ""
"**urls.E006**: pengaturan :setting:`MEDIA_URL`/ :setting:`STATIC_URL` harus "
"berakhir dengan sebuah garis miring."

msgid "``contrib`` app checks"
msgstr "Pemeriksaan aplikasi ``contrib``"

msgid "``admin``"
msgstr "``admin``"

msgid "Admin checks are all performed as part of the ``admin`` tag."
msgstr ""
"Admin memeriksa semua yang dilakukan sebagai bagian dari etiket ``admin``. "

msgid ""
"The following checks are performed on any :class:`~django.contrib.admin."
"ModelAdmin` (or subclass) that is registered with the admin site:"
msgstr ""
"Pemeriksaan berikut dilakukan pada setiap :class:`~django.contrib.admin."
"ModelAdmin` (atau subkelas) yang terdaftar dengan situs admin:"

msgid "**admin.E001**: The value of ``raw_id_fields`` must be a list or tuple."
msgstr ""
"**admin.E001**: Nilai dari ``raw_id_fields`` harus berupa daftar atau tuple."

msgid ""
"**admin.E002**: The value of ``raw_id_fields[n]`` refers to ``<field "
"name>``, which is not an attribute of ``<model>``."
msgstr ""
"**admin.E002**: Nilai dari ``raw_id_fields[n]`` mengacu pada ``<field "
"name>``, yang bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E003**: The value of ``raw_id_fields[n]`` must be a foreign key or a "
"many-to-many field."
msgstr ""
"**admin.E003**: Nilai dari ``raw_id_fields[n]`` harus foreign key atau "
"bidang many-to-many."

msgid "**admin.E004**: The value of ``fields`` must be a list or tuple."
msgstr ""
"**admin.E004**: Nilai-nilai dari ``fields`` harus berupa daftar atau tuple."

msgid "**admin.E005**: Both ``fieldsets`` and ``fields`` are specified."
msgstr "**admin.E005**: kedua ``fieldsets`` dan ``fields`` ditentukan."

msgid "**admin.E006**: The value of ``fields`` contains duplicate field(s)."
msgstr "**admin.E006**: Nilai dari ``fields`` mengandung bidang ganda."

msgid "**admin.E007**: The value of ``fieldsets`` must be a list or tuple."
msgstr ""
"**admin.E007**: Nilai dari ``fieldsets`` harus berupa daftar atau tuple."

msgid "**admin.E008**: The value of ``fieldsets[n]`` must be a list or tuple."
msgstr ""
"**admin.E008**: Nilai dari ``fieldsets[n]`` harus berupa daftar atau tuple."

msgid "**admin.E009**: The value of ``fieldsets[n]`` must be of length 2."
msgstr "**admin.E009**: Nilai dari ``fieldsets[n]`` harus panjang 2."

msgid "**admin.E010**: The value of ``fieldsets[n][1]`` must be a dictionary."
msgstr "**admin.E010**: Nilai dari ``fieldsets[n][1]`` harus berupa kamus."

msgid ""
"**admin.E011**: The value of ``fieldsets[n][1]`` must contain the key "
"``fields``."
msgstr ""
"**admin.E011**: Nilai dari ``fieldsets[n][1]`` harus mengandung kunci "
"``fields``."

msgid "**admin.E012**: There are duplicate field(s) in ``fieldsets[n][1]``."
msgstr "**admin.E012**: Ada bidang ganda dalam ``fieldsets[n][1]``."

msgid ""
"**admin.E013**: ``fields[n]/fieldsets[n][m]`` cannot include the "
"``ManyToManyField`` ``<field name>``, because that field manually specifies "
"a relationship model."
msgstr ""
"**admin.E013**: ``fields[n]/fieldsets[n][m]`` tidak dapat menyertakan "
"``<field name>`` ``ManyToManyField``, karena bidang itu secara manual "
"menentukan sebuah hubungan model."

msgid "**admin.E014**: The value of ``exclude`` must be a list or tuple."
msgstr "**admin.E014**: Nilai dari ``exclude`` harus berupa daftar atau tuple."

msgid "**admin.E015**: The value of ``exclude`` contains duplicate field(s)."
msgstr "**admin.E015**: Nilai dari ``exclude`` mengandung bidang ganda."

msgid ""
"**admin.E016**: The value of ``form`` must inherit from ``BaseModelForm``."
msgstr ""
"**admin.E016**: Nilai dari ``form`` harus warisan dari ``BaseModelForm``."

msgid ""
"**admin.E017**: The value of ``filter_vertical`` must be a list or tuple."
msgstr ""
"**admin.E017**: Nilai dari ``filter_vertical`` harus berupa daftar atau "
"tuple."

msgid ""
"**admin.E018**: The value of ``filter_horizontal`` must be a list or tuple."
msgstr ""
"**admin.E018**: Nilai-nilai dari ``filter_horizontal`` harus berupa daftar "
"atau tuple."

msgid ""
"**admin.E019**: The value of ``filter_vertical[n]/filter_vertical[n]`` "
"refers to ``<field name>``, which is not an attribute of ``<model>``."
msgstr ""
"**admin.E019**: Nilai dari ``filter_vertical[n]/filter_vertical[n]`` mengacu "
"pada ``<field name>``, yang bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E020**: The value of ``filter_vertical[n]/filter_vertical[n]`` must "
"be a many-to-many field."
msgstr ""
"**admin.E020**: Nilai dari ``filter_vertical[n]/filter_vertical[n]`` harus "
"berupa bidang many-to-many."

msgid "**admin.E021**: The value of ``radio_fields`` must be a dictionary."
msgstr "**admin.E021**: Nilai dari ``radio_fields`` harus berupa kamus."

msgid ""
"**admin.E022**: The value of ``radio_fields`` refers to ``<field name>``, "
"which is not an attribute of ``<model>``."
msgstr ""
"**admin.E022**: Nilai dari ``radio_fields`` mengacu pada ``<field name>``, "
"yang bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E023**: The value of ``radio_fields`` refers to ``<field name>``, "
"which is not a ``ForeignKey``, and does not have a ``choices`` definition."
msgstr ""
"**admin.E023**: Nilai dari ``radio_fields`` mengacu pada ``<field name>``, "
"yang bukan ``ForeignKey``, dan tidak mempunyai pengertian ``choices``."

msgid ""
"**admin.E024**: The value of ``radio_fields[<field name>]`` must be either "
"``admin.HORIZONTAL`` or ``admin.VERTICAL``."
msgstr ""
"**admin.E024**: Nilai dari ``radio_fields[<field name>]`` harus berupa "
"``admin.HORIZONTAL`` atau ``admin.VERTICAL``."

msgid ""
"**admin.E025**: The value of ``view_on_site`` must be either a callable or a "
"boolean value."
msgstr ""
"**admin.E025**: Nilai dari ``view_on_site`` harus berupa callable atau nilai "
"boolean."

msgid ""
"**admin.E026**: The value of ``prepopulated_fields`` must be a dictionary."
msgstr "**admin.E026**: Nilai dari ``prepopulated_fields`` harus berupa kamus."

msgid ""
"**admin.E027**: The value of ``prepopulated_fields`` refers to ``<field "
"name>``, which is not an attribute of ``<model>``."
msgstr ""
"**admin.E027**: Nilai dari ``prepopulated_fields`` mengacu pada ``<field "
"name>``, yang bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E028**: The value of ``prepopulated_fields`` refers to ``<field "
"name>``, which must not be a ``DateTimeField``, a ``ForeignKey``, a "
"``OneToOneField``, or a ``ManyToManyField`` field."
msgstr ""
"**admin.E028**: Nilai dari ``prepopulated_fields`` mengacu pada ``<field "
"name>``, yang harus tidak berupa sebuah bidang ``DateTimeField``, "
"``ForeignKey``, ``OneToOneField``, atau ``ManyToManyField``."

msgid ""
"**admin.E029**: The value of ``prepopulated_fields[<field name>]`` must be a "
"list or tuple."
msgstr ""
"**admin.E029**: Nilai dari ``prepopulated_fields[<field name>]`` harus "
"berupa daftar atau tuple."

msgid ""
"**admin.E030**: The value of ``prepopulated_fields`` refers to ``<field "
"name>``, which is not an attribute of ``<model>``."
msgstr ""
"**admin.E030**: Nilai dari ``prepopulated_fields`` mengacu pada ``<field "
"name>``, yang bukan sebuah atribut dari ``<model>``."

msgid "**admin.E031**: The value of ``ordering`` must be a list or tuple."
msgstr ""
"**admin.E031**: Nilai dari ``ordering`` harus berupa daftar atau tuple."

msgid ""
"**admin.E032**: The value of ``ordering`` has the random ordering marker ``?"
"``, but contains other fields as well."
msgstr ""
"**admin.E032**: Nilai dari ``ordering`` mempunyai pembuat urutan acak ``?``, "
"tetapi mengandung bidang lain juga."

msgid ""
"**admin.E033**: The value of ``ordering`` refers to ``<field name>``, which "
"is not an attribute of ``<model>``."
msgstr ""
"**admin.E033**: Nilai dari ``ordering`` mengacu pada ``<field name>``, yang "
"bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E034**: The value of ``readonly_fields`` must be a list or tuple."
msgstr ""
"**admin.E034**: Nilai dari ``readonly_fields`` harus berupa sebuah daftar "
"atau tuple. "

msgid ""
"**admin.E035**: The value of ``readonly_fields[n]`` is not a callable, an "
"attribute of ``<ModelAdmin class>``, or an attribute of ``<model>``."
msgstr ""
"**admin.E035**: Nilai dari ``readonly_fields[n]`` adalah tidak callable, "
"sebuah atribut dari ``<ModelAdmin class>``, atau sebuah atribut dari "
"``<model>``."

msgid "``ModelAdmin``"
msgstr "``ModelAdmin``"

msgid ""
"The following checks are performed on any :class:`~django.contrib.admin."
"ModelAdmin` that is registered with the admin site:"
msgstr ""
"Pemeriksaan berikut dilakukan di setiap :class:`~django.contrib.admin."
"ModelAdmin` yang terdaftar dengan situs admin:"

msgid "**admin.E101**: The value of ``save_as`` must be a boolean."
msgstr "**admin.E101**: Nilai dari ``save_as`` harus boolean."

msgid "**admin.E102**: The value of ``save_on_top`` must be a boolean."
msgstr "**admin.E102**: Nilai dari ``save_on_top`` harus boolean."

msgid "**admin.E103**: The value of ``inlines`` must be a list or tuple."
msgstr ""
"**admin.E103**: Nilai dari ``inlines`` harus berupa sebuahd daftar atau "
"tuple."

msgid ""
"**admin.E104**: ``<InlineModelAdmin class>`` must inherit from "
"``InlineModelAdmin``."
msgstr ""
"**admin.E104**: ``<InlineModelAdmin class>`` harus mewarisi dari "
"``InlineModelAdmin``."

msgid ""
"**admin.E105**: ``<InlineModelAdmin class>`` must have a ``model`` attribute."
msgstr ""
"**admin.E105**: ``<InlineModelAdmin class>`` harus mempunyai atribut "
"``model``."

msgid ""
"**admin.E106**: The value of ``<InlineModelAdmin class>.model`` must be a "
"``Model``."
msgstr ""
"**admin.E106**: Nilai dari ``<InlineModelAdmin class>.model`` harus berupa "
"``Model``."

msgid "**admin.E107**: The value of ``list_display`` must be a list or tuple."
msgstr ""
"**admin.E107**: Nilai dari ``list_display`` harus berupa daftar atau tuple."

msgid ""
"**admin.E108**: The value of ``list_display[n]`` refers to ``<label>``, "
"which is not a callable, an attribute of ``<ModelAdmin class>``, or an "
"attribute or method on ``<model>``."
msgstr ""
"**admin.E108**: Nilai dari ``list_display[n]`` merujuk pada``<label>``, yang "
"merupakan bukan callable, sebuah atribut dari ``<ModelAdmin class>``, atau "
"sebuah atribut atau metode di ``<model>``."

msgid ""
"**admin.E109**: The value of ``list_display[n]`` must not be a "
"``ManyToManyField`` field."
msgstr ""
"**admin.E109**: Nilai dari ``list_display[n]`` harus tidak berupa bidang "
"``ManyToManyField``. "

msgid ""
"**admin.E110**: The value of ``list_display_links`` must be a list, a tuple, "
"or ``None``."
msgstr ""
"**admin.E110**: Nilai dari ``list_display_links`` harus berupa daftar, tuple "
"atau ``None``."

msgid ""
"**admin.E111**: The value of ``list_display_links[n]`` refers to "
"``<label>``, which is not defined in ``list_display``."
msgstr ""
"**admin.E111**: Nilai dari ``list_display_links[n]`` mengacu pada "
"``<label>``, yang tidak ditentukan di ``list_display``."

msgid "**admin.E112**: The value of ``list_filter`` must be a list or tuple."
msgstr ""
"**admin.E112**: Nilai dari ``list_filter`` harus berupa daftar atau tuple."

msgid ""
"**admin.E113**: The value of ``list_filter[n]`` must inherit from "
"``ListFilter``."
msgstr ""
"**admin.E113**: Nilai dari ``list_filter[n]`` harus warisan dari "
"``ListFilter``."

msgid ""
"**admin.E114**: The value of ``list_filter[n]`` must not inherit from "
"``FieldListFilter``."
msgstr ""
"**admin.E114**: Nilai dari ``list_filter[n]`` harus bukan warisan dari "
"``FieldListFilter``."

msgid ""
"**admin.E115**: The value of ``list_filter[n][1]`` must inherit from "
"``FieldListFilter``."
msgstr ""
"**admin.E115**: Nilai dari ``list_filter[n][1]`` harus warisan dari "
"``FieldListFilter``."

msgid ""
"**admin.E116**: The value of ``list_filter[n]`` refers to ``<label>``, which "
"does not refer to a Field."
msgstr ""
"**admin.E116**: Nilai dari ``list_filter[n]`` mengacu pada ``<label>``, yang "
"bukan mengacu pada sebuah Bidang."

msgid ""
"**admin.E117**: The value of ``list_select_related`` must be a boolean, "
"tuple or list."
msgstr ""
"**admin.E117**: Nilai dari ``list_select_related`` harus berupa boolean, "
"tuple atau daftar."

msgid "**admin.E118**: The value of ``list_per_page`` must be an integer."
msgstr "**admin.E118**: Nilai dari ``list_per_page`` harus berupa integer."

msgid "**admin.E119**: The value of ``list_max_show_all`` must be an integer."
msgstr "**admin.E119**: Nilai dari ``list_max_show_all`` harus berupa integer."

msgid "**admin.E120**: The value of ``list_editable`` must be a list or tuple."
msgstr ""
"**admin.E120**: Nilai dari ``list_editable`` harus berupa sebuah daftar atau "
"tuple."

msgid ""
"**admin.E121**: The value of ``list_editable[n]`` refers to ``<label>``, "
"which is not an attribute of ``<model>``."
msgstr ""
"**admin.E121**: Nilai dari ``list_editable[n]`` mengacu pada ``<field "
"label>``, yang bukan sebuah atribut dari ``<model>``."

msgid ""
"**admin.E122**: The value of ``list_editable[n]`` refers to ``<label>``, "
"which is not contained in ``list_display``."
msgstr ""
"**admin.E122**: Nilai dari ``list_editable[n]`` mengacu pada ``<label>``, "
"yang tidak berisi di ``list_display``."

msgid ""
"**admin.E123**: The value of ``list_editable[n]`` cannot be in both "
"``list_editable`` and ``list_display_links``."
msgstr ""
"**admin.E123**: Nilai dari ``list_editable[n]`` tidak dapat di kedua "
"``list_editable`` dan ``list_display_links``."

msgid ""
"**admin.E124**: The value of ``list_editable[n]`` refers to the first field "
"in ``list_display`` (``<label>``), which cannot be used unless "
"``list_display_links`` is set."
msgstr ""
"**admin.E124**: Nilai dari ``list_editable[n]`` mengacu pada bidang pertama "
"di ``list_display`` (``<label>``), yang tidak dapat digunakan meskipun "
"``list_display_links`` disetel."

msgid ""
"**admin.E125**: The value of ``list_editable[n]`` refers to ``<field "
"name>``, which is not editable through the admin."
msgstr ""
"**admin.E125**: Nilai dari ``list_editable[n]`` mengacu pada ``<field "
"name>``, yang tidak dapat disunting melalui admin."

msgid "**admin.E126**: The value of ``search_fields`` must be a list or tuple."
msgstr ""
"**admin.E126**: Nilai dari ``search_fields`` harus berupa sebuah daftar atau "
"tuple."

msgid ""
"**admin.E127**: The value of ``date_hierarchy`` refers to ``<field name>``, "
"which does not refer to a Field."
msgstr ""
"**admin.E127**: Nilai dari ``date_hierarchy`` mengacu pada ``<field name>``, "
"yang tidak mengacu ke sebuah Bidang."

msgid ""
"**admin.E128**: The value of ``date_hierarchy`` must be a ``DateField`` or "
"``DateTimeField``."
msgstr ""
"**admin.E128**: Nilai dari ``date_hierarchy`` harus berupa ``DateField`` "
"atau ``DateTimeField``."

msgid "``InlineModelAdmin``"
msgstr "``InlineModelAdmin``"

msgid ""
"The following checks are performed on any :class:`~django.contrib.admin."
"InlineModelAdmin` that is registered as an inline on a :class:`~django."
"contrib.admin.ModelAdmin`."
msgstr ""
"Pemeriksaan berikut dilakukan pada setiap :class:`~django.contrib.admin."
"InlineModelAdmin` yang didaftarkan sebagai sebaris pada :class:`~django."
"contrib.admin.ModelAdmin`."

msgid ""
"**admin.E201**: Cannot exclude the field ``<field name>``, because it is the "
"foreign key to the parent model ``<app_label>.<model>``."
msgstr ""
"**admin.E201**: Tidak dapat mengeluarkan bidang ``<field name>``, karena itu "
"adalah foreign key pada model induk ``<app_label>.<model>``."

msgid ""
"**admin.E202**: ``<model>`` has no ``ForeignKey`` to ``<parent model>``./ "
"``<model>`` has more than one ``ForeignKey`` to ``<parent model>``."
msgstr ""
"**admin.E202**: ``<model>`` tidak mempunyai ``ForeignKey`` pada ``<parent "
"model>``./ ``<model>`` mempunyai lebih dari satu ``ForeignKey`` pada "
"``<parent model>``."

msgid "**admin.E203**: The value of ``extra`` must be an integer."
msgstr "**admin.E203**: Nilai dari ``extra`` harus berupa integer."

msgid "**admin.E204**: The value of ``max_num`` must be an integer."
msgstr "**admin.E204**: Nilai ``max_num`` harus berupa integer."

msgid "**admin.E205**: The value of ``min_num`` must be an integer."
msgstr "**admin.E205**: Nilai ``min_num`` harus berupa integer."

msgid ""
"**admin.E206**: The value of ``formset`` must inherit from "
"``BaseModelFormSet``."
msgstr ""
"**admin.E206**: Nilai dari ``formset`` harus warisan dari "
"``BaseModelFormSet``."

msgid "``GenericInlineModelAdmin``"
msgstr "``GenericInlineModelAdmin``"

msgid ""
"The following checks are performed on any :class:`~django.contrib."
"contenttypes.admin.GenericInlineModelAdmin` that is registered as an inline "
"on a :class:`~django.contrib.admin.ModelAdmin`."
msgstr ""
"Pemeriksaan berikut dilakukan pada setiap :class:`~django.contrib.admin."
"GenericInlineModelAdmin` yang didaftarkan sebagai berderet pada :class:"
"`~django.contrib.admin.ModelAdmin`."

msgid ""
"**admin.E301**: ``'ct_field'`` references ``<label>``, which is not a field "
"on ``<model>``."
msgstr ""
"**admin.E301**: ``'ct_field'`` acuan ``<label>``, yang bukan bidang di "
"``<model>``."

msgid ""
"**admin.E302**: ``'ct_fk_field'`` references ``<label>``, which is not a "
"field on ``<model>``."
msgstr ""
"**admin.E302**: ``'ct_fk_field'`` acuan ``<label>``, yang bukan bidang pada "
"``<model>``."

msgid "**admin.E303**: ``<model>`` has no ``GenericForeignKey``."
msgstr "**admin.E303**: ``<model>`` tidak mempunyai ``GenericForeignKey``."

msgid ""
"**admin.E304**: ``<model>`` has no ``GenericForeignKey`` using content type "
"field ``<field name>`` and object ID field ``<field name>``."
msgstr ""
"**admin.E304**: ``<model>`` tidak mempunyai ``GenericForeignKey`` "
"menggunakan ``<field name>`` bidang jenis isi dan ``<field name>`` bidang ID "
"obyek. "

msgid "``AdminSite``"
msgstr "``AdminSite``"

msgid ""
"The following checks are performed on the default :class:`~django.contrib."
"admin.AdminSite`:"
msgstr ""
"Pemeriksaan berikut dilakukan pada awalan :class:`~django.contrib.admin."
"AdminSite`:"

msgid ""
"**admin.E401**: :mod:`django.contrib.contenttypes` must be in :setting:"
"`INSTALLED_APPS` in order to use the admin application."
msgstr ""
"**admin.E401**: :mod:`django.contrib.contenttypes` harus di :setting:"
"`INSTALLED_APPS` untuk menggunakan aplikasi admin."

msgid ""
"**admin.E402**: :mod:`django.contrib.auth.context_processors.auth` must be "
"in :setting:`TEMPLATES` in order to use the admin application."
msgstr ""
"**admin.E402**: :mod:`django.contrib.auth.context_processors.auth` harus di :"
"setting:`TEMPLATES` untuk menggunakan aplikasi admin."

msgid "``auth``"
msgstr "``auth``"

msgid "**auth.E001**: ``REQUIRED_FIELDS`` must be a list or tuple."
msgstr "**auth.E001**: ``REQUIRED_FIELDS`` harus berupa daftar atau rekaman."

msgid ""
"**auth.E002**: The field named as the ``USERNAME_FIELD`` for a custom user "
"model must not be included in ``REQUIRED_FIELDS``."
msgstr ""
"**auth.E002**: Bidang bernama sebagai ``USERNAME_FIELD`` untuk model "
"pengguna penyesuaian harus tidak disertakan di ``REQUIRED_FIELDS``."

msgid ""
"**auth.E003**: ``<field>`` must be unique because it is named as the "
"``USERNAME_FIELD``."
msgstr ""
"**auth.E003**: ``<field>`` harus unik karena itu dinamai sebagai "
"``USERNAME_FIELD``."

msgid ""
"**auth.W004**: ``<field>`` is named as the ``USERNAME_FIELD``, but it is not "
"unique."
msgstr ""
"**auth.W004**: ``<field>`` dinamai sebagai ``USERNAME_FIELD``, tetapi itu "
"tidak unik."

msgid ""
"**auth.E005**: The permission codenamed ``<codename>`` clashes with a "
"builtin permission for model ``<model>``."
msgstr ""
"**auth.E005**: Nama kode perizinan ``<codename>`` bentrok dengan perizinan "
"siap pakai untuk model ``<model>``."

msgid ""
"**auth.E006**: The permission codenamed ``<codename>`` is duplicated for "
"model ``<model>``."
msgstr ""
"**auth.E006**: Nama kode perizinan ``<codename>`` digunakan untuk model "
"``<model>``."

msgid ""
"**auth.E007**: The :attr:`verbose_name <django.db.models.Options."
"verbose_name>` of model ``<model>`` must be at most 244 characters for its "
"builtin permission names to be at most 255 characters."
msgstr ""
"**auth.E007**: :attr:`verbose_name <django.db.models.Options.verbose_name>` "
"dari model ``<model>`` harus berupa paling banyak 244 karakter untuk nama-"
"nama perizinan siap pakainya menjadi paling banyak 255 karakter."

msgid ""
"**auth.E008**: The permission named ``<name>`` of model ``<model>`` is "
"longer than 255 characters."
msgstr ""
"**auth.E008**: Perizinan bernama ``<name>`` dari model ``<model>`` tidak "
"lebih panjang dari 255 karakter."

msgid ""
"**auth.C009**: ``<User model>.is_anonymous`` must be an attribute or "
"property rather than a method. Ignoring this is a security issue as "
"anonymous users will be treated as authenticated!"
msgstr ""
"**auth.C009**: ``<User model>.is_anonymous`` harus berupa sebuah atribut "
"atau sifat daripada sebuah metode. Mengabaikan ini adalah masalah keamanan "
"ketika pengguna anonim akan diperlakukan sebagai terotentifikasi!"

msgid ""
"**auth.C010**: ``<User model>.is_authenticated`` must be an attribute or "
"property rather than a method. Ignoring this is a security issue as "
"anonymous users will be treated as authenticated!"
msgstr ""
"**auth.C010**: ``<User model>.is_authenticated`` harus berupa sebuah atribut "
"atau sifat daripada sebuah metode. Mengabaikan ini adalah masalah keamanan "
"ketika pengguna anonim akan diperlakukan sebagai terotentifikasi!"

msgid "``contenttypes``"
msgstr "``contenttypes``"

msgid ""
"The following checks are performed when a model contains a :class:`~django."
"contrib.contenttypes.fields.GenericForeignKey` or :class:`~django.contrib."
"contenttypes.fields.GenericRelation`:"
msgstr ""
"Pemeriksaan berikut dilakukan ketika sebuah model mengandung sebuah :class:"
"`~django.contrib.contenttypes.fields.GenericForeignKey` atau :class:`~django."
"contrib.contenttypes.fields.GenericRelation`:"

msgid ""
"**contenttypes.E001**: The ``GenericForeignKey`` object ID references the "
"non-existent field ``<field>``."
msgstr ""
"**contenttypes.E001**: ID obyek mengacu field ``<field>`` yang tidak-ada."

msgid ""
"**contenttypes.E002**: The ``GenericForeignKey`` content type references the "
"non-existent field ``<field>``."
msgstr ""
"**contenttypes.E002**: Jenis isi ``GenericForeignKey`` mengacu field "
"``<field>`` yang tidak-ada."

msgid "**contenttypes.E003**: ``<field>`` is not a ``ForeignKey``."
msgstr "**contenttypes.E003**: ``<field>`` bukan ``ForeignKey``."

msgid ""
"**contenttypes.E004**: ``<field>`` is not a ``ForeignKey`` to ``contenttypes."
"ContentType``."
msgstr ""
"**contenttypes.E004**: ``<field>`` bukan ``ForeignKey`` pada ``contenttypes."
"ContentType``."

msgid "``sites``"
msgstr "``sites``"

msgid ""
"The following checks are performed on any model using a :class:`~django."
"contrib.sites.managers.CurrentSiteManager`:"
msgstr ""
"Pemeriksaan berikut dilakukan pada setiap model menggunakan :class:`~django."
"contrib.sites.managers.CurrentSiteManager`:"

msgid ""
"**sites.E001**: ``CurrentSiteManager`` could not find a field named ``<field "
"name>``."
msgstr ""
"**sites.E001**: ``CurrentSiteManager`` tidak dapat menemukan sebuah bidang "
"dinamai ``<field name>``."

msgid ""
"**sites.E002**: ``CurrentSiteManager`` cannot use ``<field>`` as it is not a "
"foreign key or a many-to-many field."
msgstr ""
"**sites.E002**: ``CurrentSiteManager`` tidak dapat menggunakan ``<field>`` "
"karena itu adalah bukan foreign key atau bidang many-to-many."

msgid "Base views"
msgstr "Tampilan dasar"

msgid ""
"The following three classes provide much of the functionality needed to "
"create Django views. You may think of them as *parent* views, which can be "
"used by themselves or inherited from. They may not provide all the "
"capabilities required for projects, in which case there are Mixins and "
"Generic class-based views."
msgstr ""
"Tiga Kelas-kelas berikut menyediakan lebih banyak kegunaan dibutuhkan untuk "
"membuat tampilan Django. Anda mungkin berpikir dari mereka sebagai tampilan "
"*induk*, yang dapat digunakan mereka sendiri atau diwarisi dari. Mereka "
"mungkin tidak menyediakan semua kemampuan  diwajibkan oleh proyek, dalam hal "
"ini ada tampilan Mixin dan Generic berdasarkan-kelas."

msgid ""
"Many of Django's built-in class-based views inherit from other class-based "
"views or various mixins. Because this inheritance chain is very important, "
"the ancestor classes are  documented under the section title of **Ancestors "
"(MRO)**. MRO is an acronym for Method Resolution Order."
msgstr ""
"Banyak tampilan berdasarkan-kelas siap-pakai Django dari tampilan "
"berdasarkan-kelas lain atau beragam mixin. Karena rantai pewarisan ini "
"sangat penting, kelas-kelas leluhur didokumentasikan dibawah judul dari "
"**Ancestors (MRO)**. MRO adalah sebuah singkatan untuk Method Resolution "
"Order."

msgid "``View``"
msgstr "``View``"

msgid ""
"The master class-based base view. All other class-based views inherit from "
"this base class. It isn't strictly a generic view and thus can also be "
"imported from ``django.views``."
msgstr ""
"Tampilan dasar berdasarkan-kelas master. Semua tampilan berdasarkan-kelas "
"lainnya mewarisi dari kelas dasar. Itu tidak mengetatkan tampilan umum dan "
"demikian juga dapat diimpor dari ``django.views``. "

msgid "The ability to import from ``django.views`` was added."
msgstr "Kemampuan untuk mengimpor ``django.views`` telah ditambahkan."

msgid "**Method Flowchart**"
msgstr "**Metode Diagram alir**"

msgid ":meth:`dispatch()`"
msgstr ":meth:`dispatch()`"

msgid ":meth:`http_method_not_allowed()`"
msgstr ":meth:`http_method_not_allowed()`"

msgid ":meth:`options()`"
msgstr ":meth:`options()`"

msgid "**Example views.py**::"
msgstr "**Contoh views.py**::"

msgid "**Example urls.py**::"
msgstr "**Contoh urls.py**::"

msgid "**Attributes**"
msgstr "**Atribut**"

msgid "The list of HTTP method names that this view will accept."
msgstr "Daftar dari nama-nama metode HTTP yang tampilan ini akan diterima."

msgid "Default::"
msgstr "Awal::"

msgid "**Methods**"
msgstr "**Cara**"

msgid "Returns a callable view that takes a request and returns a response::"
msgstr ""
"Mengembalikan sebuah tampilan callable yang mengambil permintaan dan "
"mengembalikan tanggapan::"

msgid ""
"The returned view has ``view_class`` and ``view_initkwargs`` attributes."
msgstr ""
"Tampilan kembalian mempunyai atribut ``view_class`` dan ``view_initkwargs``."

msgid ""
"When the view is called during the request/response cycle, the :class:"
"`~django.http.HttpRequest` is assigned to the view's ``request`` attribute. "
"Any positional and/or keyword arguments :ref:`captured from the URL pattern "
"<how-django-processes-a-request>` are assigned to the ``args`` and "
"``kwargs`` attributes, respectively. Then :meth:`dispatch` is called."
msgstr ""
"Ketika tampilan dipanggil selama siklus permintaan/tanggapan, :class:"
"`~django.http.HttpRequest` diberikan ke tampilan atribut ``request``. "
"Penempatan apapun dan/atau argumen kata kunci :ref:`captured from the URL "
"pattern 1` diberikan ke atribut ``args`` dan ``kwargs``, masing-masing. "
"Kemudian :meth:`dispatch` dipanggil."

msgid ""
"The ``view`` part of the view -- the method that accepts a ``request`` "
"argument plus arguments, and returns a HTTP response."
msgstr ""
"BAgian ``view`` dari tampilan -- metode yang menerima sebuah argumen "
"``request`` ditambah argumen dan mengembalikan sebuah tanggapan HTTP."

msgid ""
"The default implementation will inspect the HTTP method and attempt to "
"delegate to a method that matches the HTTP method; a ``GET`` will be "
"delegated to ``get()``, a ``POST`` to ``post()``, and so on."
msgstr ""
"Penerapan awalan akan memeriksa metode HTTP dan berusaha untuk menugaskan "
"pada sebuah metode yang cocok dengan metode HTTP; sebuah ``GET`` akan "
"ditugaskan ke ``get()``, sebuah ``POST`` ke ``post()``, dan sebagainya."

msgid ""
"By default, a ``HEAD`` request will be delegated to ``get()``. If you need "
"to handle ``HEAD`` requests in a different way than ``GET``, you can "
"override the ``head()`` method. See :ref:`supporting-other-http-methods` for "
"an example."
msgstr ""
"Berdasarkan awalan. permintaan ``HEAD`` akan ditugaskan pada ``get()``. Jika "
"anda butuh menangani permintaan ``HEAD`` di cara berbeda daripada ``GET``, "
"anda dapat menimpa metode ``head()``. Lihat :ref:`supporting-other-http-"
"methods` untuk contoh."

msgid ""
"If the view was called with a HTTP method it doesn't support, this method is "
"called instead."
msgstr ""
"Jika tampilan dipanggil dengan sebuah metode HTTP yang itu tidak mendukung, "
"metode ini dipanggil sebagai gantinya."

msgid ""
"The default implementation returns ``HttpResponseNotAllowed`` with a list of "
"allowed methods in plain text."
msgstr ""
"Penerapan awalan mengembalikan ``HttpResponseNotAllowed`` dengan sebuah "
"daftar dari metode yang diizinkan dalam teks polos."

msgid ""
"Handles responding to requests for the OPTIONS HTTP verb. Returns a response "
"with the ``Allow`` header containing a list of the view's allowed HTTP "
"method names."
msgstr ""
"Menangani tanggapan pada permintaan untuk verb OPTIONS HTTP. Mengembalikan "
"sebuah tanggapan dengan kepala ``Allow`` mengandung sebuah daftar dari "
"tampilan diizinkan nama-nama metode HTTP."

msgid "``TemplateView``"
msgstr "``TemplateView``"

msgid ""
"Renders a given template, with the context containing parameters captured in "
"the URL."
msgstr ""
"Membangun cetakan yang diberikan, dengan konteks mengandung parameter "
"ditangkap di URL."

msgid "**Ancestors (MRO)**"
msgstr "**Ancestors (MRO)**"

msgid "This view inherits methods and attributes from the following views:"
msgstr "Tampilan ini mewarisi metode dan atribut dari tampilan berikut:"

msgid ":class:`django.views.generic.base.TemplateResponseMixin`"
msgstr ":class:`django.views.generic.base.TemplateResponseMixin`"

msgid ":class:`django.views.generic.base.ContextMixin`"
msgstr ":class:`django.views.generic.base.ContextMixin`"

msgid ":class:`django.views.generic.base.View`"
msgstr ":class:`django.views.generic.base.View`"

msgid ":meth:`~django.views.generic.base.View.dispatch()`"
msgstr ":meth:`~django.views.generic.base.View.dispatch()`"

msgid ":meth:`~django.views.generic.base.View.http_method_not_allowed()`"
msgstr ":meth:`~django.views.generic.base.View.http_method_not_allowed()`"

msgid ":meth:`~django.views.generic.base.ContextMixin.get_context_data()`"
msgstr ":meth:`~django.views.generic.base.ContextMixin.get_context_data()`"

msgid "**Context**"
msgstr "**Konteks**"

msgid ""
"Populated (through :class:`~django.views.generic.base.ContextMixin`) with "
"the keyword arguments captured from the URL pattern that served the view."
msgstr ""
"Dikumpulkan (melalui :class:`~django.views.generic.base.ContextMixin`) "
"dengan argumen kata kunci ditangkap dari corak URL yang melayani tampilan."

msgid "``RedirectView``"
msgstr "``RedirectView``"

msgid "Redirects to a given URL."
msgstr "Pengalihan ke URL yang diberikan."

msgid ""
"The given URL may contain dictionary-style string formatting, which will be "
"interpolated against the parameters captured in the URL. Because keyword "
"interpolation is *always* done (even if no arguments are passed in), any ``"
"\"%\"`` characters in the URL must be written as ``\"%%\"`` so that Python "
"will convert them to a single percent sign on output."
msgstr ""
"URL yang diberikan mungkin memberikan pembentukan string gaya-kamus, yang "
"akan disisipkan terhadap parameter ditangkap di URL. Karena penyisipan kata "
"kunci adalah *selalu* selesai (bahkan jika tidak ada argumen dilewatkan), "
"setiap karakter ``\"%\"`` di URL harus ditulis sebagai ``\"%%\"`` sehingga "
"Python akan merubah mereka ke tanda persen tunggal pada keluaran."

msgid ""
"If the given URL is ``None``, Django will return an ``HttpResponseGone`` "
"(410)."
msgstr ""
"Jika URL diberikan adalah ``None``, Django akan mengembalikan sebuah "
"``HttpResponseGone`` (410). "

msgid "This view inherits methods and attributes from the following view:"
msgstr ""
"Tampilan ini mewarisi metode dan atribut dari tampilan-tampilan berikut:"

msgid ":meth:`get_redirect_url()`"
msgstr ":meth:`get_redirect_url()`"

msgid ""
"The URL to redirect to, as a string. Or ``None`` to raise a 410 (Gone) HTTP "
"error."
msgstr ""
"URL untuk dialihkan, sebagai deretan kalimat. Atau ``None`` untuk "
"memunculkan kesalahan HTTP 410 (Pergi). "

msgid ""
"The name of the URL pattern to redirect to. Reversing will be done using the "
"same args and kwargs as are passed in for this view."
msgstr ""
"Nama dari corak URL untuk dialihkan. Membalikkan akan selesai menggunakan "
"args dan kwargs sama dilewatkan untuk tampilan ini."

msgid ""
"Whether the redirect should be permanent. The only difference here is the "
"HTTP status code returned. If ``True``, then the redirect will use status "
"code 301. If ``False``, then the redirect will use status code 302. By "
"default, ``permanent`` is ``False``."
msgstr ""
"Apakah pengalihan harus tetap. Satu-satunya perbedaan disini adalah kode "
"status HTTP dikembalikan. Jika ``True``, kemudian pengalihan akan "
"menggunakan kode status 301. Jika ``False``, kemudian pengalihan akan "
"menggunakan kode status 302. Secara awalan, ``permanent`` adalah ``False``."

msgid ""
"Whether to pass along the GET query string to the new location. If ``True``, "
"then the query string is appended to the URL. If ``False``, then the query "
"string is discarded. By default, ``query_string`` is ``False``."
msgstr ""
"Apakah dilewatkan bersama string permintaan GET ke tempat baru. Jika "
"``True``, kemudian string permintaan ditambahkan ke URL. Jika ``False``, "
"kemudian string permintaan dibuang. Secara awalan, ``query_string`` adalah "
"``False``."

msgid "Constructs the target URL for redirection."
msgstr "Membangun URL sasaran untuk pengalihan."

msgid ""
"The default implementation uses :attr:`url` as a starting string and "
"performs expansion of ``%`` named parameters in that string using the named "
"groups captured in the URL."
msgstr ""
"Penerapan awal menggunakan :attr:`url` sebagai deretan karakter permulaan "
"dan melakukan perluasan dari ``%`` parameter dinamai di deretan karakter itu "
"menggunakan kelompok dinamai diambil di URL."

msgid ""
"If :attr:`url` is not set, ``get_redirect_url()`` tries to reverse the :attr:"
"`pattern_name` using what was captured in the URL (both named and unnamed "
"groups are used)."
msgstr ""
"Jika :attr:`url` tidak disetel, ``get_redirect_url()`` mencoba membalikkan :"
"attr:`pattern_name` menggunakan apa yang telah ditangkap di URL (kedua "
"kelompok bernama dan tidak bernama digunakan)."

msgid ""
"If requested by :attr:`query_string`, it will also append the query string "
"to the generated URL. Subclasses may implement any behavior they wish, as "
"long as the method returns a redirect-ready URL string."
msgstr ""
"Jika diminta oleh :attr:`query_string`, itu akan juga menambahkan string "
"permintaan ke URL yang dibangkitkan. Subkelas-subkelas mungkin menerapkan "
"perilaku apapun mereka inginkan, selama metode mengambalikan string URL siap-"
"pengalihan."

msgid "Class-based generic views - flattened index"
msgstr "Tampilan umum berdasarkan-kelas - meratakan indeks"

msgid ""
"This index provides an alternate organization of the reference documentation "
"for class-based views. For each view, the effective attributes and methods "
"from the class tree are represented under that view. For the reference "
"documentation organized by the class which defines the behavior, see :doc:"
"`Class-based views</ref/class-based-views/index>`."
msgstr ""
"Indeks ini menyediakan organisasi pengganti dari acuan dokumentasi untuk "
"tampilan berdasarkan-kelas. Untuk setiap tampilan, atribut efektif dan "
"metode dari pohon kelas adalah diwakili dbawah tampilan itu. Untuk acuan "
"dokumentasi diatur oleh kelas yang menentukan perilaku, lihat :doc:`Class-"
"based views</ref/class-based-views/index>`."

msgid ""
"`Classy Class-Based Views <https://ccbv.co.uk/>`_ provides a nice interface "
"to navigate the class hierarchy of the built-in class-based views."
msgstr ""
"`Classy Class-Based Views <https://ccbv.co.uk/>`_ menyediakan antarmua yang "
"bagus untuk mengemudikan hirarki kelas dari tampilan berdasarkan-kelas siap-"
"pakai."

msgid "Simple generic views"
msgstr "Tampilan umum sederhana"

msgid "**Attributes** (with optional accessor):"
msgstr "**Atribut** (dengan pilihan tambahan):"

msgid ":attr:`~django.views.generic.base.View.http_method_names`"
msgstr ":attr:`~django.views.generic.base.View.http_method_names`"

msgid ":meth:`~django.views.generic.base.View.as_view`"
msgstr ":meth:`~django.views.generic.base.View.as_view`"

msgid ":meth:`~django.views.generic.base.View.dispatch`"
msgstr ":meth:`~django.views.generic.base.View.dispatch`"

msgid "``head()``"
msgstr "``head()``"

msgid ":meth:`~django.views.generic.base.View.http_method_not_allowed`"
msgstr ":meth:`~django.views.generic.base.View.http_method_not_allowed`"

msgid ":attr:`~django.views.generic.base.TemplateResponseMixin.content_type`"
msgstr ":attr:`~django.views.generic.base.TemplateResponseMixin.content_type`"

msgid ""
":attr:`~django.views.generic.base.TemplateResponseMixin.response_class` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`]"
msgstr ""
":attr:`~django.views.generic.base.TemplateResponseMixin.response_class` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`]"

msgid ""
":attr:`~django.views.generic.base.TemplateResponseMixin.template_engine`"
msgstr ""
":attr:`~django.views.generic.base.TemplateResponseMixin.template_engine`"

msgid ""
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names`]"
msgstr ""
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names`]"

msgid "``get()``"
msgstr "``get()``"

msgid ":meth:`~django.views.generic.base.ContextMixin.get_context_data`"
msgstr ":meth:`~django.views.generic.base.ContextMixin.get_context_data`"

msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`"
msgstr ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`"

msgid ":attr:`~django.views.generic.base.RedirectView.pattern_name`"
msgstr ":attr:`~django.views.generic.base.RedirectView.pattern_name`"

msgid ":attr:`~django.views.generic.base.RedirectView.permanent`"
msgstr ":attr:`~django.views.generic.base.RedirectView.permanent`"

msgid ":attr:`~django.views.generic.base.RedirectView.query_string`"
msgstr ":attr:`~django.views.generic.base.RedirectView.query_string`"

msgid ""
":attr:`~django.views.generic.base.RedirectView.url` [:meth:`~django.views."
"generic.base.RedirectView.get_redirect_url`]"
msgstr ""
":attr:`~django.views.generic.base.RedirectView.url` [:meth:`~django.views."
"generic.base.RedirectView.get_redirect_url`]"

msgid "``delete()``"
msgstr "``delete()``"

msgid "``options()``"
msgstr "``options()``"

msgid "``post()``"
msgstr "``post()``"

msgid "``put()``"
msgstr "``put()``"

msgid "Detail Views"
msgstr "Rincian Tampilan"

msgid "``DetailView``"
msgstr "``DetailView``"

msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name`]"
msgstr ""
":attr:`~django.views.generic.detail.SingleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name`]"

msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.model`"
msgstr ":attr:`~django.views.generic.detail.SingleObjectMixin.model`"

msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.pk_url_kwarg`"
msgstr ":attr:`~django.views.generic.detail.SingleObjectMixin.pk_url_kwarg`"

msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.queryset` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_queryset`]"
msgstr ""
":attr:`~django.views.generic.detail.SingleObjectMixin.queryset` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_queryset`]"

msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.slug_field` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_slug_field`]"
msgstr ""
":attr:`~django.views.generic.detail.SingleObjectMixin.slug_field` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_slug_field`]"

msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.slug_url_kwarg`"
msgstr ":attr:`~django.views.generic.detail.SingleObjectMixin.slug_url_kwarg`"

msgid ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_field`"
msgstr ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_field`"

msgid ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_suffix`"
msgstr ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_suffix`"

msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data`"
msgstr ""
":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data`"

msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object`"
msgstr ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object`"

msgid "List Views"
msgstr "Tampilan Daftar"

msgid "``ListView``"
msgstr "``ListView``"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.allow_empty` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_allow_empty`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.allow_empty` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_allow_empty`]"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name`]"

msgid ":attr:`~django.views.generic.list.MultipleObjectMixin.model`"
msgstr ":attr:`~django.views.generic.list.MultipleObjectMixin.model`"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.ordering` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_ordering`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.ordering` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_ordering`]"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.paginate_by` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_paginate_by`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.paginate_by` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_paginate_by`]"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.paginate_orphans` [:"
"meth:`~django.views.generic.list.MultipleObjectMixin.get_paginate_orphans`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.paginate_orphans` [:"
"meth:`~django.views.generic.list.MultipleObjectMixin.get_paginate_orphans`]"

msgid ":attr:`~django.views.generic.list.MultipleObjectMixin.paginator_class`"
msgstr ":attr:`~django.views.generic.list.MultipleObjectMixin.paginator_class`"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.queryset` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_queryset`]"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectMixin.queryset` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_queryset`]"

msgid ""
":attr:`~django.views.generic.list.MultipleObjectTemplateResponseMixin."
"template_name_suffix`"
msgstr ""
":attr:`~django.views.generic.list.MultipleObjectTemplateResponseMixin."
"template_name_suffix`"

msgid ":meth:`~django.views.generic.list.BaseListView.get`"
msgstr ":meth:`~django.views.generic.list.BaseListView.get`"

msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data`"
msgstr ""
":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data`"

msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_paginator`"
msgstr ":meth:`~django.views.generic.list.MultipleObjectMixin.get_paginator`"

msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`"
msgstr ""
":meth:`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`"

msgid "Editing views"
msgstr "Menyunting tampilan"

msgid "``FormView``"
msgstr "``FormView``"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.form_class` [:meth:`~django."
"views.generic.edit.FormMixin.get_form_class`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.form_class` [:meth:`~django."
"views.generic.edit.FormMixin.get_form_class`]"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.initial` [:meth:`~django.views."
"generic.edit.FormMixin.get_initial`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.initial` [:meth:`~django.views."
"generic.edit.FormMixin.get_initial`]"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.prefix` [:meth:`~django.views."
"generic.edit.FormMixin.get_prefix`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.prefix` [:meth:`~django.views."
"generic.edit.FormMixin.get_prefix`]"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.success_url` [:meth:`~django."
"views.generic.edit.FormMixin.get_success_url`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.success_url` [:meth:`~django."
"views.generic.edit.FormMixin.get_success_url`]"

msgid ":meth:`~django.views.generic.edit.FormMixin.form_invalid`"
msgstr ":meth:`~django.views.generic.edit.FormMixin.form_invalid`"

msgid ":meth:`~django.views.generic.edit.FormMixin.form_valid`"
msgstr ":meth:`~django.views.generic.edit.FormMixin.form_valid`"

msgid ":meth:`~django.views.generic.edit.ProcessFormView.get`"
msgstr ":meth:`~django.views.generic.edit.ProcessFormView.get`"

msgid ":meth:`~django.views.generic.edit.FormMixin.get_context_data`"
msgstr ":meth:`~django.views.generic.edit.FormMixin.get_context_data`"

msgid ":meth:`~django.views.generic.edit.FormMixin.get_form`"
msgstr ":meth:`~django.views.generic.edit.FormMixin.get_form`"

msgid ":meth:`~django.views.generic.edit.FormMixin.get_form_kwargs`"
msgstr ":meth:`~django.views.generic.edit.FormMixin.get_form_kwargs`"

msgid ":meth:`~django.views.generic.edit.ProcessFormView.post`"
msgstr ":meth:`~django.views.generic.edit.ProcessFormView.post`"

msgid ":meth:`~django.views.generic.edit.ProcessFormView.put`"
msgstr ":meth:`~django.views.generic.edit.ProcessFormView.put`"

msgid "``CreateView``"
msgstr "``CreateView``"

msgid ":attr:`~django.views.generic.edit.ModelFormMixin.fields`"
msgstr ":attr:`~django.views.generic.edit.ModelFormMixin.fields`"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.form_class` [:meth:`~django."
"views.generic.edit.ModelFormMixin.get_form_class`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.form_class` [:meth:`~django."
"views.generic.edit.ModelFormMixin.get_form_class`]"

msgid ""
":attr:`~django.views.generic.edit.FormMixin.success_url` [:meth:`~django."
"views.generic.edit.ModelFormMixin.get_success_url`]"
msgstr ""
":attr:`~django.views.generic.edit.FormMixin.success_url` [:meth:`~django."
"views.generic.edit.ModelFormMixin.get_success_url`]"

msgid ":meth:`~django.views.generic.edit.ModelFormMixin.form_valid`"
msgstr ":meth:`~django.views.generic.edit.ModelFormMixin.form_valid`"

msgid ":meth:`~django.views.generic.edit.ModelFormMixin.get_form_kwargs`"
msgstr ":meth:`~django.views.generic.edit.ModelFormMixin.get_form_kwargs`"

msgid "``UpdateView``"
msgstr "``UpdateView``"

msgid "``DeleteView``"
msgstr "``DeleteView``"

msgid ""
":attr:`~django.views.generic.edit.DeletionMixin.success_url` [:meth:`~django."
"views.generic.edit.DeletionMixin.get_success_url`]"
msgstr ""
":attr:`~django.views.generic.edit.DeletionMixin.success_url` [:meth:`~django."
"views.generic.edit.DeletionMixin.get_success_url`]"

msgid "Date-based views"
msgstr "Tampilan bedasarkan-tanggal"

msgid "``ArchiveIndexView``"
msgstr "``ArchiveIndexView``"

msgid ""
":attr:`~django.views.generic.dates.DateMixin.allow_future` [:meth:`~django."
"views.generic.dates.DateMixin.get_allow_future`]"
msgstr ""
":attr:`~django.views.generic.dates.DateMixin.allow_future` [:meth:`~django."
"views.generic.dates.DateMixin.get_allow_future`]"

msgid ""
":attr:`~django.views.generic.dates.DateMixin.date_field` [:meth:`~django."
"views.generic.dates.DateMixin.get_date_field`]"
msgstr ""
":attr:`~django.views.generic.dates.DateMixin.date_field` [:meth:`~django."
"views.generic.dates.DateMixin.get_date_field`]"

msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_date_list`"
msgstr ":meth:`~django.views.generic.dates.BaseDateListView.get_date_list`"

msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_dated_items`"
msgstr ":meth:`~django.views.generic.dates.BaseDateListView.get_dated_items`"

msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_dated_queryset`"
msgstr ""
":meth:`~django.views.generic.dates.BaseDateListView.get_dated_queryset`"

msgid "``YearArchiveView``"
msgstr "``YearArchiveView``"

msgid ""
":attr:`~django.views.generic.dates.YearArchiveView.make_object_list` [:meth:"
"`~django.views.generic.dates.YearArchiveView.get_make_object_list`]"
msgstr ""
":attr:`~django.views.generic.dates.YearArchiveView.make_object_list` [:meth:"
"`~django.views.generic.dates.YearArchiveView.get_make_object_list`]"

msgid ""
":attr:`~django.views.generic.dates.YearMixin.year` [:meth:`~django.views."
"generic.dates.YearMixin.get_year`]"
msgstr ""
":attr:`~django.views.generic.dates.YearMixin.year` [:meth:`~django.views."
"generic.dates.YearMixin.get_year`]"

msgid ""
":attr:`~django.views.generic.dates.YearMixin.year_format` [:meth:`~django."
"views.generic.dates.YearMixin.get_year_format`]"
msgstr ""
":attr:`~django.views.generic.dates.YearMixin.year_format` [:meth:`~django."
"views.generic.dates.YearMixin.get_year_format`]"

msgid "``MonthArchiveView``"
msgstr "``MonthArchiveView``"

msgid ""
":attr:`~django.views.generic.dates.MonthMixin.month` [:meth:`~django.views."
"generic.dates.MonthMixin.get_month`]"
msgstr ""
":attr:`~django.views.generic.dates.MonthMixin.month` [:meth:`~django.views."
"generic.dates.MonthMixin.get_month`]"

msgid ""
":attr:`~django.views.generic.dates.MonthMixin.month_format` [:meth:`~django."
"views.generic.dates.MonthMixin.get_month_format`]"
msgstr ""
":attr:`~django.views.generic.dates.MonthMixin.month_format` [:meth:`~django."
"views.generic.dates.MonthMixin.get_month_format`]"

msgid ":meth:`~django.views.generic.dates.MonthMixin.get_next_month`"
msgstr ":meth:`~django.views.generic.dates.MonthMixin.get_next_month`"

msgid ":meth:`~django.views.generic.dates.MonthMixin.get_previous_month`"
msgstr ":meth:`~django.views.generic.dates.MonthMixin.get_previous_month`"

msgid "``WeekArchiveView``"
msgstr "``WeekArchiveView``"

msgid ""
":attr:`~django.views.generic.dates.WeekMixin.week` [:meth:`~django.views."
"generic.dates.WeekMixin.get_week`]"
msgstr ""
":attr:`~django.views.generic.dates.WeekMixin.week` [:meth:`~django.views."
"generic.dates.WeekMixin.get_week`]"

msgid ""
":attr:`~django.views.generic.dates.WeekMixin.week_format` [:meth:`~django."
"views.generic.dates.WeekMixin.get_week_format`]"
msgstr ""
":attr:`~django.views.generic.dates.WeekMixin.week_format` [:meth:`~django."
"views.generic.dates.WeekMixin.get_week_format`]"

msgid "``DayArchiveView``"
msgstr "``DayArchiveView``"

msgid ""
":attr:`~django.views.generic.dates.DayMixin.day` [:meth:`~django.views."
"generic.dates.DayMixin.get_day`]"
msgstr ""
":attr:`~django.views.generic.dates.DayMixin.day` [:meth:`~django.views."
"generic.dates.DayMixin.get_day`]"

msgid ""
":attr:`~django.views.generic.dates.DayMixin.day_format` [:meth:`~django."
"views.generic.dates.DayMixin.get_day_format`]"
msgstr ""
":attr:`~django.views.generic.dates.DayMixin.day_format` [:meth:`~django."
"views.generic.dates.DayMixin.get_day_format`]"

msgid ":meth:`~django.views.generic.dates.DayMixin.get_next_day`"
msgstr ":meth:`~django.views.generic.dates.DayMixin.get_next_day`"

msgid ":meth:`~django.views.generic.dates.DayMixin.get_previous_day`"
msgstr ":meth:`~django.views.generic.dates.DayMixin.get_previous_day`"

msgid "``TodayArchiveView``"
msgstr "``TodayArchiveView``"

msgid "``DateDetailView``"
msgstr "``DateDetailView``"

msgid "Generic date views"
msgstr "Generic date views"

msgid ""
"Date-based generic views, provided in :mod:`django.views.generic.dates`, are "
"views for displaying drilldown pages for date-based data."
msgstr ""
"Tampilan umum berdasarkan-tanggal, disediakan di :mod:`django.views.generic."
"dates`, adalah tampilan untuk menampilkan halaman-halaman penelusuran untuk "
"data berdasarkan-tanggal."

msgid ""
"Some of the examples on this page assume that an ``Article`` model has been "
"defined as follows in ``myapp/models.py``::"
msgstr ""
"Beberapa dari contoh-contoh pada halaman ini menganggap bahwa sebuah model "
"``Article`` telah ditentukan sebagai berikut di ``myapp/models.py``::"

msgid ""
"A top-level index page showing the \"latest\" objects, by date. Objects with "
"a date in the *future* are not included unless you set ``allow_future`` to "
"``True``."
msgstr ""
"Halaman indeks tingkat-atas menampilkan obyek \"latest\", berdasarkan "
"tanggal. Obyek dengan sebuah tanggal di *future* tidak disertakan meskipun "
"anda menyetel ``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.list.MultipleObjectTemplateResponseMixin`"
msgstr ":class:`django.views.generic.list.MultipleObjectTemplateResponseMixin`"

msgid ":class:`django.views.generic.dates.BaseArchiveIndexView`"
msgstr ":class:`django.views.generic.dates.BaseArchiveIndexView`"

msgid ":class:`django.views.generic.dates.BaseDateListView`"
msgstr ":class:`django.views.generic.dates.BaseDateListView`"

msgid ":class:`django.views.generic.list.MultipleObjectMixin`"
msgstr ":class:`django.views.generic.list.MultipleObjectMixin`"

msgid ":class:`django.views.generic.dates.DateMixin`"
msgstr ":class:`django.views.generic.dates.DateMixin`"

msgid ""
"In addition to the context provided by :class:`django.views.generic.list."
"MultipleObjectMixin` (via :class:`django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""
"Sebagai tambahan pada konteks disediakan oleh :class:`django.views.generic."
"list.MultipleObjectMixin` (melalui :class:`django.views.generic.dates."
"BaseDateListView`), konteks cetakan akan menjadi:"

msgid ""
"``date_list``: A :meth:`QuerySet <django.db.models.query.QuerySet.dates>` "
"object containing all years that have objects available according to "
"``queryset``, represented as :class:`datetime.datetime` objects, in "
"descending order."
msgstr ""
"``date_list``: Sebuah obyek :meth:`QuerySet <django.db.models.query.QuerySet."
"dates>` mengandung semua tahun yang mempunyai obyek-obyek tersedia menurut "
"pada ``queryset``, diwakili sebagai obyek :class:`datetime.datetime`, dalam "
"urutan menurun."

msgid "**Notes**"
msgstr "**Catatan**"

msgid "Uses a default ``context_object_name`` of ``latest``."
msgstr "Menggunakan ``context_object_name`` awal dari ``latest``."

msgid "Uses a default ``template_name_suffix`` of ``_archive``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive``."

msgid ""
"Defaults to providing ``date_list`` by year, but this can be altered to "
"month or day using the attribute ``date_list_period``. This also applies to "
"all subclass views."
msgstr ""
"Awalan untuk menyediakan ``date_list`` berdasarkan tahun, tetapi ini dapat "
"dirubah menjadi bulan atau hari menggunakan atribut ``date_list_period``. "
"Ini juga memberlakukan ke semua tampilan subkelas."

msgid "**Example myapp/urls.py**::"
msgstr "**Contoh myapp/urls.py**::"

msgid "**Example myapp/article_archive.html**:"
msgstr "**Contoh myapp/article_archive.html**:"

msgid "This will output all articles."
msgstr "Ini akan mengeluarkan semua artikel."

msgid ""
"A yearly archive page showing all available months in a given year. Objects "
"with a date in the *future* are not displayed unless you set "
"``allow_future`` to ``True``."
msgstr ""
"Halaman arsip tahunan menampilkan semua bulan tersedia di tahun yang "
"diberikan. Obyek-obyek dengan tanggal *future* tidak ditampilkan meskipun "
"anda menyetel ``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.dates.BaseYearArchiveView`"
msgstr ":class:`django.views.generic.dates.BaseYearArchiveView`"

msgid ":class:`django.views.generic.dates.YearMixin`"
msgstr ":class:`django.views.generic.dates.YearMixin`"

msgid ""
"A boolean specifying whether to retrieve the full list of objects for this "
"year and pass those to the template. If ``True``, the list of objects will "
"be made available to the context. If ``False``, the ``None`` queryset will "
"be used as the object list. By default, this is ``False``."
msgstr ""
"Sebuah boolean menentukan apakah mengambil daftar penuh dari obyek-obyek "
"untuk tahun ini dan melewatkan itu ke cetakan. Jika ``True``, daftar dari "
"obyek-obyek akan dibuat tersedia ke konteks. Jika ``False``, queryset "
"``None`` akan digunakan sebagai daftar obyek. Secara awalan, ini adalah "
"``False``."

msgid ""
"Determine if an object list will be returned as part of the context. "
"Returns :attr:`~YearArchiveView.make_object_list` by default."
msgstr ""
"Menentukan jika sebuah daftar obyek akan dikembalikan sebagai bagian dari "
"konteks. Mengembalikan :attr:`~YearArchiveView.make_object_list` secara "
"awalan."

msgid ""
"``date_list``: A :meth:`QuerySet <django.db.models.query.QuerySet.dates>` "
"object containing all months that have objects available according to "
"``queryset``, represented as :class:`datetime.datetime` objects, in "
"ascending order."
msgstr ""
"``date_list``: Sebuah obyek :meth:`QuerySet <django.db.models.query.QuerySet."
"dates>` mengandung semua bulan yang mempunyai obyek-obyek tersedia menurut "
"pada ``queryset``, diwakili sebagai obyek :class:`datetime.datetime`, dalam "
"urutan menaik."

msgid "``year``: A :class:`~datetime.date` object representing the given year."
msgstr ""
"``year``: Sebuah obyek :class:`~datetime.date` mewakili tahun yang diberikan."

msgid ""
"``next_year``: A :class:`~datetime.date` object representing the first day "
"of the next year, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""
"``next_year``: Sebuah obyek :class:`~datetime.date` mewakili hari pertama "
"dari tahun selanjutnya menurut  :attr:`~BaseDateListView.allow_empty` dan :"
"attr:`~DateMixin.allow_future`."

msgid ""
"``previous_year``: A :class:`~datetime.date` object representing the first "
"day of the previous year, according to :attr:`~BaseDateListView.allow_empty` "
"and :attr:`~DateMixin.allow_future`."
msgstr ""
"``previous_year``: Sebuah obyek :class:`~datetime.date` mewakili hari "
"pertama dari tahun sebelumnya, menurut :attr:`~BaseDateListView.allow_empty` "
"dan :attr:`~DateMixin.allow_future`."

msgid "Uses a default ``template_name_suffix`` of ``_archive_year``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive_year``."

msgid "**Example myapp/views.py**::"
msgstr "**Contoh myapp/views.py**::"

msgid "**Example myapp/article_archive_year.html**:"
msgstr "**Contoh myapp/article_archive_year.html**:"

msgid ""
"A monthly archive page showing all objects in a given month. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""
"Halaman arsip tahunan menampilkan semua obyek di tahun yang diberikan. Obyek-"
"obyek dengan tanggal *future* tidak ditampilkan meskipun anda menyetel "
"``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.dates.BaseMonthArchiveView`"
msgstr ":class:`django.views.generic.dates.BaseMonthArchiveView`"

msgid ":class:`django.views.generic.dates.MonthMixin`"
msgstr ":class:`django.views.generic.dates.MonthMixin`"

msgid ""
"In addition to the context provided by :class:`~django.views.generic.list."
"MultipleObjectMixin` (via :class:`~django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""
"Sebagai tambahan pada konteks disediakan oleh :class:`~django.views.generic."
"list.MultipleObjectMixin`  (melalui :class:`django.views.generic.dates."
"BaseDateListView`), konteks cetakan akan menjadi:"

msgid ""
"``date_list``: A :meth:`QuerySet <django.db.models.query.QuerySet.dates>` "
"object containing all days that have objects available in the given month, "
"according to ``queryset``, represented as :class:`datetime.datetime` "
"objects, in ascending order."
msgstr ""
"``date_list``: Sebuah obyek :meth:`QuerySet <django.db.models.query.QuerySet."
"dates>` mengandung semua hari yang mempunyai obyek-obyek tersedia di bulan "
"yang diberikan,  menurut pada ``queryset``, diwakili sebagai obyek :class:"
"`datetime.datetime`, dalam urutan menaik."

msgid ""
"``month``: A :class:`~datetime.date` object representing the given month."
msgstr ""
"``month``: Sebuah obyek :class:`~datetime.date` mewakili bulanyang diberikan."

msgid ""
"``next_month``: A :class:`~datetime.date` object representing the first day "
"of the next month, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""
"``next_month``: Sebuah obyek :class:`~datetime.date` mewakili hari pertama "
"dari bulan selanjutnya menurut  :attr:`~BaseDateListView.allow_empty` dan :"
"attr:`~DateMixin.allow_future`."

msgid ""
"``previous_month``: A :class:`~datetime.date` object representing the first "
"day of the previous month, according to :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"``previous_month``: Sebuah obyek :class:`~datetime.date` mewakili hari "
"pertama dari bulan sebelumnya, menurut :attr:`~BaseDateListView.allow_empty` "
"dan :attr:`~DateMixin.allow_future`."

msgid "Uses a default ``template_name_suffix`` of ``_archive_month``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive_month``."

msgid "**Example myapp/article_archive_month.html**:"
msgstr "**Contoh myapp/article_archive_month.html**:"

msgid ""
"A weekly archive page showing all objects in a given week. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""
"Halaman arsip tahunan menampilkan semua obyek di minggu yang diberikan. "
"Obyek-obyek dengan tanggal *future* tidak ditampilkan meskipun anda menyetel "
"``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.dates.BaseWeekArchiveView`"
msgstr ":class:`django.views.generic.dates.BaseWeekArchiveView`"

msgid ":class:`django.views.generic.dates.WeekMixin`"
msgstr ":class:`django.views.generic.dates.WeekMixin`"

msgid ""
"``week``: A :class:`~datetime.date` object representing the first day of the "
"given week."
msgstr ""
"``week``: Sebuah obyek :class:`~datetime.date` mewakili hari pertama dari "
"minggu yang diberikan."

msgid ""
"``next_week``: A :class:`~datetime.date` object representing the first day "
"of the next week, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""
"``next_week``: Sebuah obyek :class:`~datetime.date` mewakili hari pertama "
"dari minggu selanjutnya menurut  :attr:`~BaseDateListView.allow_empty` dan :"
"attr:`~DateMixin.allow_future`."

msgid ""
"``previous_week``: A :class:`~datetime.date` object representing the first "
"day of the previous week, according to :attr:`~BaseDateListView.allow_empty` "
"and :attr:`~DateMixin.allow_future`."
msgstr ""
"``previous_week``: Sebuah obyek :class:`~datetime.date` mewakili hari "
"pertama dari minggu sebelumnya, menurut :attr:`~BaseDateListView."
"allow_empty` dan :attr:`~DateMixin.allow_future`."

msgid "Uses a default ``template_name_suffix`` of ``_archive_week``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive_week``."

msgid ""
"The ``week_format`` attribute is a :func:`~time.strptime` format string used "
"to parse the week number. The following values are supported:"
msgstr ""
"Atribut ``week_format`` adalah sebuah bentuk string :func:`~time.strptime` "
"digunakan untuk mengurai nomor minggu. Nilai-nilai berikut adalah didukung:"

msgid ""
"``'%U'``: Based on the United States week system where the week begins on "
"Sunday. This is the default value."
msgstr ""
"``'%U'``: Berdasarkan pada sistem minggu Amerika Serikat dimana minggu "
"dimulai pada hari Minggu. Ini adalah nilai awalan."

msgid ""
"``'%W'``: Similar to ``'%U'``, except it assumes that the week begins on "
"Monday. This is not the same as the ISO 8601 week number."
msgstr ""
"``'%W'``: Mirip pada ``'%U'``, kecuali itu menganggap bahwa minggu dimulai "
"pada hari Senin. Ini tidak sama seperti nomor minggu ISO 8601."

msgid "**Example myapp/article_archive_week.html**:"
msgstr "**Contoh myapp/article_archive_week.html**:"

msgid ""
"In this example, you are outputting the week number. Keep in mind that week "
"numbers computed by the :tfilter:`date` template filter with the ``'W'`` "
"format character are not always the same as those computed by :func:`~time."
"strftime` and :func:`~time.strptime` with the ``'%W'`` format string. For "
"year 2015, for example, week numbers output by :tfilter:`date` are higher by "
"one compared to those output by :func:`~time.strftime`. There isn't an "
"equivalent for the ``'%U'`` :func:`~time.strftime` format string in :tfilter:"
"`date`. Therefore, you should avoid using :tfilter:`date` to generate URLs "
"for ``WeekArchiveView``."
msgstr ""
"Di contoh ini, anda mengeluarkan nomor minggu. Harap diingat bahwa nomor "
"minggu dihitung oleh penyaring cetakan :tfilter:`date` dengan karakter "
"bentuk ``'W'`` tidak selalu sama ketika itu dihitung oleh :func:`~time."
"strftime` dan :func:`~time.strptime` dengan string bentuk :func:`~time."
"strptime`. untuk tahun 2015, sebagai keluaran contoh nomor minggu oleh :"
"tfilter:`date` adalah lebih tinggi oleh satu dibandingkan ke keluarannya "
"oleh :func:`~time.strftime`. Tidak ada setara untuk string bentuk `'%U'`` :"
"func:`~time.strftime` di :tfilter:`date`. Karena itu, anda harus menghindari "
"menggunakan :tfilter:`date` untuk membangkitkan URL untuk "
"``WeekArchiveView``."

msgid ""
"A day archive page showing all objects in a given day. Days in the future "
"throw a 404 error, regardless of whether any objects exist for future days, "
"unless you set ``allow_future`` to ``True``."
msgstr ""
"Halaman arsip tahunan menampilkan semua obyek di hari yang diberikan. Hari-"
"hari d masa depan melemparkan sebuah kesalahan 404, terlepas dari apapun "
"setiap obyek ada untuk hari akan datang, meskipun anda menyetel "
"``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.dates.BaseDayArchiveView`"
msgstr ":class:`django.views.generic.dates.BaseDayArchiveView`"

msgid ":class:`django.views.generic.dates.DayMixin`"
msgstr ":class:`django.views.generic.dates.DayMixin`"

msgid "``day``: A :class:`~datetime.date` object representing the given day."
msgstr "``day``: Sebuah obyek :class:`~datetime.date` mewakili hari diberikan."

msgid ""
"``next_day``: A :class:`~datetime.date` object representing the next day, "
"according to :attr:`~BaseDateListView.allow_empty` and :attr:`~DateMixin."
"allow_future`."
msgstr ""
"``next_day``: Sebuah obyek :class:`~datetime.date` mewakili hari "
"selanjutnya, menurut  :attr:`~BaseDateListView.allow_empty` dan :attr:"
"`~DateMixin.allow_future`."

msgid ""
"``previous_day``: A :class:`~datetime.date` object representing the previous "
"day, according to :attr:`~BaseDateListView.allow_empty` and :attr:"
"`~DateMixin.allow_future`."
msgstr ""
"``previous_day``: Sebuah obyek :class:`~datetime.date` mewakili hari "
"sebelumnya, menurut  :attr:`~BaseDateListView.allow_empty` dan :attr:"
"`~DateMixin.allow_future`."

msgid "Uses a default ``template_name_suffix`` of ``_archive_day``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive_day``."

msgid "**Example myapp/article_archive_day.html**:"
msgstr "**Contoh myapp/article_archive_day.html**:"

msgid ""
"A day archive page showing all objects for *today*. This is exactly the same "
"as :class:`django.views.generic.dates.DayArchiveView`, except today's date "
"is used instead of the ``year``/``month``/``day`` arguments."
msgstr ""
"Halaman arsip hari menampilkan semua obyek untuk *today*. Ini sebenarnya "
"sama seperti :class:`django.views.generic.dates.DayArchiveView`, kecuali "
"tanggal hari ini digunakan daripada argumen ``year``/``month``/``day``."

msgid ":class:`django.views.generic.dates.BaseTodayArchiveView`"
msgstr ":class:`django.views.generic.dates.BaseTodayArchiveView`"

msgid "Uses a default ``template_name_suffix`` of ``_archive_today``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_archive_today``."

msgid "Where is the example template for ``TodayArchiveView``?"
msgstr "Dimana contoh cetakan untuk ``TodayArchiveView``?"

msgid ""
"This view uses by default the same template as the :class:`~DayArchiveView`, "
"which is in the previous example. If you need a different template, set the "
"``template_name`` attribute to be the name of the new template."
msgstr ""
"Tampilan ini menggunakan secara awal cetakan sama seperti :class:"
"`~DayArchiveView`, yang mana di contoh sebelumnya. Jika anda butuh cetakan "
"berbeda, setel atribut ``template_name`` menjadi nama dari cetakan baru."

msgid ""
"A page representing an individual object. If the object has a date value in "
"the future, the view will throw a 404 error by default, unless you set "
"``allow_future`` to ``True``."
msgstr ""
"Sebuah halaman mewakili obyek perseorangan. Jika obyek mempunyai nilai "
"tanggal di masa depan, tampilan akan melempar sebuah kesalahan 404 secara "
"awalan, meskipun anda menyetel ``allow_future`` menjadi ``True``."

msgid ":class:`django.views.generic.detail.SingleObjectTemplateResponseMixin`"
msgstr ":class:`django.views.generic.detail.SingleObjectTemplateResponseMixin`"

msgid ":class:`django.views.generic.dates.BaseDateDetailView`"
msgstr ":class:`django.views.generic.dates.BaseDateDetailView`"

msgid "``django.views.generic.detail.BaseDetailView``"
msgstr "``django.views.generic.detail.BaseDetailView``"

msgid ":class:`django.views.generic.detail.SingleObjectMixin`"
msgstr ":class:`django.views.generic.detail.SingleObjectMixin`"

msgid ""
"Includes the single object associated with the ``model`` specified in the "
"``DateDetailView``."
msgstr ""
"Disertakan obyek tunggal terkait dengan ``model`` ditentukan di "
"``DateDetailView``."

msgid "Uses a default ``template_name_suffix`` of ``_detail``."
msgstr "Menggunakan ``template_name_suffix`` awal dari ``_detail``."

msgid "**Example myapp/article_detail.html**:"
msgstr "**Contoh myapp/article_detail.html**:"

msgid ""
"All of the generic views listed above have matching ``Base`` views that only "
"differ in that they do not include the :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin` (for the archive views) or :class:"
"`~django.views.generic.detail.SingleObjectTemplateResponseMixin` (for the :"
"class:`DateDetailView`):"
msgstr ""
"Semua dari tampilan umum didaftarkan diatas telah mencocokkan tampilan "
"``Base`` yang hanya berbeda di itu mereka tidak menyertakan :class:`~django."
"views.generic.list.MultipleObjectTemplateResponseMixin` (untuk tampilan "
"arsip) atau :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin` (untuk :class:`DateDetailView`):"

msgid "Generic display views"
msgstr "Tampilan memperlihatkan umum"

msgid ""
"The two following generic class-based views are designed to display data. On "
"many projects they are typically the most commonly used views."
msgstr ""
"Dua tampilan berdasarkan-kelas umum berikut dirancang untuk menampilkan "
"data. pada banyak proyek mereka khususnya paling umum menggunakan tampilan."

msgid ""
"While this view is executing, ``self.object`` will contain the object that "
"the view is operating upon."
msgstr ""
"Selagi tampilan ini dikerjakan, ``self.object`` akan mengandung obyek yang "
"tampilan beroperasi pada."

msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names()`"
msgstr ""
":meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names()`"

msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_slug_field()`"
msgstr ""
":meth:`~django.views.generic.detail.SingleObjectMixin.get_slug_field()`"

msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_queryset()`"
msgstr ":meth:`~django.views.generic.detail.SingleObjectMixin.get_queryset()`"

msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object()`"
msgstr ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object()`"

msgid ""
":meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name()`"
msgstr ""
":meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name()`"

msgid ""
":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data()`"
msgstr ""
":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data()`"

msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"
msgstr ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"

msgid "A page representing a list of objects."
msgstr "Sebuah halaman yang mewakili daftar dari obyek."

msgid ""
"While this view is executing, ``self.object_list`` will contain the list of "
"objects (usually, but not necessarily a queryset) that the view is operating "
"upon."
msgstr ""
"Hak administrator diwajibkan untuk mengerjakan perintah ini. Untuk melakukan "
"ini, klik-kanan pada :download:`geodjango_setup.bat` dan pilih :"
"menuselection:`Run as administrator`. Anda butuh keluar dan masuk kembali "
"untuk pengaturan mengambil pengaruh."

msgid ":class:`django.views.generic.list.BaseListView`"
msgstr ":class:`django.views.generic.list.BaseListView`"

msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset()`"
msgstr ":meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset()`"

msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name()`"
msgstr ""
":meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name()`"

msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data()`"
msgstr ""
":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data()`"

msgid "**Example myapp/article_list.html**:"
msgstr "**Contoh myapp/article_list.html**:"

msgid ""
"A base view for displaying a list of objects. It is not intended to be used "
"directly, but rather as a parent class of the :class:`django.views.generic."
"list.ListView` or other views representing lists of objects."
msgstr ""
"Sebuah tampilan dasar untuk memperlihatkan daftar obyek. Itu tidak dimaksud "
"digunakan secara langsung, tetapi lebih sebagai sebuah kelas induk dari :"
"class:`django.views.generic.list.ListView` atau tampilan lain mewakili "
"daftar obyek-obyek."

msgid ""
"Adds ``object_list`` to the context. If :attr:`~django.views.generic.list."
"MultipleObjectMixin.allow_empty` is True then display an empty list. If :"
"attr:`~django.views.generic.list.MultipleObjectMixin.allow_empty` is False "
"then raise a 404 error."
msgstr ""
"Tambah ``object_list`` ke konteks. Jika :attr:`~django.views.generic.list."
"MultipleObjectMixin.allow_empty` adalah True kemudian perlihatkan sebuah "
"daftar kosong. Jika :attr:`~django.views.generic.list.MultipleObjectMixin."
"allow_empty` adalah False kemudian memunculkan sebuah kesalahan 404."

msgid "Generic editing views"
msgstr "Tampilan penyuntingan umum"

msgid ""
"The following views are described on this page and provide a foundation for "
"editing content:"
msgstr ""
"Tampilan berikut digambarkan pada halaman ini dan menyediakan sebuah dasar "
"untuk menyunting isi:"

msgid ":class:`django.views.generic.edit.FormView`"
msgstr ":class:`django.views.generic.edit.FormView`"

msgid ":class:`django.views.generic.edit.CreateView`"
msgstr ":class:`django.views.generic.edit.CreateView`"

msgid ":class:`django.views.generic.edit.UpdateView`"
msgstr ":class:`django.views.generic.edit.UpdateView`"

msgid ":class:`django.views.generic.edit.DeleteView`"
msgstr ":class:`django.views.generic.edit.DeleteView`"

msgid ""
"Some of the examples on this page assume that an ``Author`` model has been "
"defined as follows in ``myapp/models.py``::"
msgstr ""
"Beberapa dari contoh-contoh pada halaman ini menganggap bahwa sebuah model "
"``Author`` telah ditentukan sebagai berikut di ``myapp/models.py``::"

msgid ""
"A view that displays a form. On error, redisplays the form with validation "
"errors; on success, redirects to a new URL."
msgstr ""
"Sebuah tampilan yang memperlihatkan sebuah formulir. Pada kesalahan, "
"memperlihatkan kembali formulir dengan pengesahan kesalahan; pada pengalihan "
"sukses ke URL baru."

msgid "``django.views.generic.edit.BaseFormView``"
msgstr "``django.views.generic.edit.BaseFormView``"

msgid ":class:`django.views.generic.edit.FormMixin`"
msgstr ":class:`django.views.generic.edit.FormMixin`"

msgid ":class:`django.views.generic.edit.ProcessFormView`"
msgstr ":class:`django.views.generic.edit.ProcessFormView`"

msgid "**Example myapp/forms.py**::"
msgstr "**Contoh myapp/forms.py**::"

msgid "**Example myapp/contact.html**:"
msgstr "**Contoh myapp/contact.html**:"

msgid ""
"A view that displays a form for creating an object, redisplaying the form "
"with validation errors (if there are any) and saving the object."
msgstr ""
"Sebuah tampilan yang menampilkan sebuah formulir untuk membuat sebuah obyek, "
"memperlihatkan kembali formulir dengan pengesahan kesalahan (jika ada) dan "
"menyimpan obyek."

msgid "``django.views.generic.edit.BaseCreateView``"
msgstr "``django.views.generic.edit.BaseCreateView``"

msgid ":class:`django.views.generic.edit.ModelFormMixin`"
msgstr ":class:`django.views.generic.edit.ModelFormMixin`"

msgid ""
"The ``CreateView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_form'``. For example, changing this "
"attribute to ``'_create_form'`` for a view creating objects for the example "
"``Author`` model would cause the default ``template_name`` to be ``'myapp/"
"author_create_form.html'``."
msgstr ""
"Halaman ``CreateView`` diperlihatkan ke permintaan ``GET`` menggunakan "
"``template_name_suffix`` dari ``'_form'``. Sebagai contoh, merubah atribut "
"ini pada ``'_create_form'`` untuk sebuah tampilan membuat obyek-obyek untuk "
"contoh model ``Author`` akan menyebabkan awalan ``template_name`` menjadi "
"``'myapp/author_create_form.html'``."

msgid ""
"When using ``CreateView`` you have access to ``self.object``, which is the "
"object being created. If the object hasn't been created yet, the value will "
"be ``None``."
msgstr ""
"Ketika menggunakan ``CreateView`` anda mempunyai akses ke ``self.object``, "
"yaitu obyek sedang dibuat. Jika obyek belum dibuat, nilai akan menjadi "
"``None``."

msgid "**Example myapp/author_form.html**:"
msgstr "**Contoh myapp/author_form.html**:"

msgid ""
"A view that displays a form for editing an existing object, redisplaying the "
"form with validation errors (if there are any) and saving changes to the "
"object. This uses a form automatically generated from the object's model "
"class (unless a form class is manually specified)."
msgstr ""
"Sebuah tampilan yang memperlihatkan sebuah formulir untuk menyunting sebuah "
"obyek yang ada, memperlihatkan kembali formulir dengan pengesahan kesalahan "
"(jika ada) dan menyimpan perubahan ke obyek. Ini menggunakan sebuah formulir "
"secara otomatis dibangkitkan dari kelas model obyek (meskipun sebuah kelas "
"formulir secara manual ditentukan)."

msgid "``django.views.generic.edit.BaseUpdateView``"
msgstr "``django.views.generic.edit.BaseUpdateView``"

msgid ""
"The ``UpdateView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_form'``. For example, changing this "
"attribute to ``'_update_form'`` for a view updating objects for the example "
"``Author`` model would cause the default ``template_name`` to be ``'myapp/"
"author_update_form.html'``."
msgstr ""
"Halaman ``UpdateView`` diperlihatkan ke permintaan ``GET`` menggunakan "
"``template_name_suffix`` dari ``'_form'``. Sebagai contoh, merubah atribut "
"ini pada ``'_update_form'`` untuk sebuah tampilan membuat obyek-obyek untuk "
"contoh model ``Author`` akan menyebabkan awalan ``template_name`` menjadi "
"``'myapp/author_update_form.html'``."

msgid ""
"When using ``UpdateView`` you have access to ``self.object``, which is the "
"object being updated."
msgstr ""
"Ketika menggunakan ``UpdateView`` anda mempunyai akses ke ``self.object``, "
"yaitu obyek sedang diperbaharui."

msgid "**Example myapp/author_update_form.html**:"
msgstr "**Contoh myapp/author_update_form.html**:"

msgid ""
"A view that displays a confirmation page and deletes an existing object. The "
"given object will only be deleted if the request method is ``POST``. If this "
"view is fetched via ``GET``, it will display a confirmation page that should "
"contain a form that POSTs to the same URL."
msgstr ""
"Sebuah tampilan yang memperlihatkan sebuah halaman penegasan dan menghapus "
"obyek yang ada. Obyek yang diberikan akan hanya dihapus jika metode "
"permintaan adalah ``POST``. Jika tampilan ini diambil melalui ``GET``, itu "
"akan memperlihatkan sebuah halaman penegasan yang harus mengandung sebuah "
"formulir yang POST ke URL sama."

msgid "``django.views.generic.edit.BaseDeleteView``"
msgstr "``django.views.generic.edit.BaseDeleteView``"

msgid ":class:`django.views.generic.edit.DeletionMixin`"
msgstr ":class:`django.views.generic.edit.DeletionMixin`"

msgid ""
"The ``DeleteView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_confirm_delete'``. For example, changing "
"this attribute to ``'_check_delete'`` for a view deleting objects for the "
"example ``Author`` model would cause the default ``template_name`` to be "
"``'myapp/author_check_delete.html'``."
msgstr ""
"Halaman ``DeleteView`` diperlihatkan ke permintaan ``GET`` menggunakan "
"``template_name_suffix`` dari ``'_confirm_delete'``. Sebagai contoh, merubah "
"atribut ini pada ``'_check_delete'`` untuk sebuah tampilan membuat obyek-"
"obyek untuk contoh model ``Author`` akan menyebabkan awalan "
"``template_name`` menjadi ``'myapp/author_check_delete.html'``."

msgid "**Example myapp/author_confirm_delete.html**:"
msgstr "**Contoh myapp/author_confirm_delete.html**:"

msgid "Built-in class-based views API"
msgstr "API tampilan berdasarkan-kelas siap-pakai"

msgid ""
"Class-based views API reference. For introductory material, see the :doc:`/"
"topics/class-based-views/index` topic guide."
msgstr ""
"Acuan API tampilan berdasarkan-kelas. Untuk bahan perkenalan, lihat panduan "
"topik  :doc:`/topics/class-based-views/index`."

msgid "Specification"
msgstr "Spesifikasi"

msgid ""
"Each request served by a class-based view has an independent state; "
"therefore, it is safe to store state variables on the instance (i.e., ``self."
"foo = 3`` is a thread-safe operation)."
msgstr ""
"Setiap permintaan dilayani oleh tampilan berbasis-kelas mempunyai keadaan "
"berdiri sendiri; karena itu, itu aman menyimpan variabel keadaan pada "
"instance (yaitu, ``self.foo = 3`` adalah  pekerjaan benang-aman)."

msgid ""
"A class-based view is deployed into a URL pattern using the :meth:`~django."
"views.generic.base.View.as_view()` classmethod::"
msgstr ""
"Sebuah tampilan berdasarkan-kelas disebarkan kedalam corak URL menggunakan "
"metodekelas :meth:`~django.views.generic.base.View.as_view()`:: "

msgid "Thread safety with view arguments"
msgstr "Thread keamanan dengan argumen tampilan"

msgid ""
"Arguments passed to a view are shared between every instance of a view. This "
"means that you shouldn't use a list, dictionary, or any other mutable object "
"as an argument to a view. If you do and the shared object is modified, the "
"actions of one user visiting your view could have an effect on subsequent "
"users visiting the same view."
msgstr ""
"Argumen-argumen dilewatkan ke tampilan adalah dibagi diantara setiap "
"instance dari tampilan. Ini berarti bahwa anda jangan menggunakan daftar, "
"kamus, atau obyek berubah-ubah lain apapun sebagai sebuah argumen pada "
"tampilan. Jika anda melakukan dan berbagi obyek dirubah, tindakan dari satu "
"pengguna mengunjungi tampilan anda dapat mempunyai sebuah pengaruh pada "
"pengguna berikut mengunjungi tampilan sama."

msgid ""
"Arguments passed into :meth:`~django.views.generic.base.View.as_view()` will "
"be assigned onto the instance that is used to service a request. Using the "
"previous example, this means that every request on ``MyView`` is able to use "
"``self.size``. Arguments must correspond to attributes that already exist on "
"the class (return ``True`` on a ``hasattr`` check)."
msgstr ""
"Argumen dilewatkan kedalam :meth:`~django.views.generic.base.View.as_view()` "
"akan diberikan ke atas instance yang digunakan untuk melayani sebuah "
"permintaan. Menggunakan contoh sebelumnya, ini berarti bahwa setiap "
"permintaan pada ``MyView`` dapat menggunakan ``self.size``. Argumen-argumen "
"harus berhubungan ke atribut-atribut yang sudah ada pada kelas "
"(mengembalikan ``True`` pada pemeriksaan ``hasattr``)."

msgid "Base vs Generic views"
msgstr "Tampilan Dasar vs Umum"

msgid ""
"Base class-based views can be thought of as *parent* views, which can be "
"used by themselves or inherited from. They may not provide all the "
"capabilities required for projects, in which case there are Mixins which "
"extend what base views can do."
msgstr ""
"Dasar tampilan berdasarkan-kelas dapat dianggap sebagai tampilan *parent*, "
"yang dapat digunakan oleh mereka sendiri atau diwariskan dari. Mereka "
"mungkin tidak menyediakan semua kemampuan diwajibkan untuk proyek, dalam hal "
"ini ada Mixin yang memperpanjang tampilan dasar apa dapat lakukan."

msgid ""
"Django’s generic views are built off of those base views, and were developed "
"as a shortcut for common usage patterns such as displaying the details of an "
"object. They take certain common idioms and patterns found in view "
"development and abstract them so that you can quickly write common views of "
"data without having to repeat yourself."
msgstr ""
"Tampilan umum Django adalah untuk mengembangkan dari tampilan dasar "
"tersebut, dan kami kembangkan sebagai sebuah jalan pintas untuk corak "
"penggunaan umum seperti memperlihatkan rincian dari sebuah obyek. Mereka "
"mengambil dialek dan corak umum tertentu ditemukan di tampilan pengembangan "
"dan abstrak mereka sehingga anda dapat dengan cepat menulis tampilan umum "
"dari data tanpa harus mengulangi anda sendiri."

msgid ""
"Most generic views require the ``queryset`` key, which is a ``QuerySet`` "
"instance; see :doc:`/topics/db/queries` for more information about "
"``QuerySet`` objects."
msgstr ""
"Kebanyakan tampilan umum membutuhkan kunci ``queryset``, yang adalah "
"instance ``QuerySet``; lihat :doc:`/topics/db/queries` untuk informasi lebih "
"tentang obyek ``QuerySet``."

msgid "Class-based views mixins"
msgstr "Mixin tampilan berdasarkan-kelas"

msgid ""
"Class-based views API reference. For introductory material, see :doc:`/"
"topics/class-based-views/mixins`."
msgstr ""
"Acuan API tampilan berdasarkan-kelas. Untuk bahan perkenalan, lihat :doc:`/"
"topics/class-based-views/mixins`."

msgid "Date-based mixins"
msgstr "Mixin berdasarkan-tanggal"

msgid ""
"All the date formatting attributes in these mixins use :func:`~time."
"strftime` format characters. Do not try to use the format characters from "
"the :ttag:`now` template tag as they are not compatible."
msgstr ""
"Semua atribut pembentukan tanggal di mixin ini menggunakan karakter bentuk :"
"func:`~time.strftime`. Jangan mencoba menggunakan karakter bentuk dari "
"etiket cetakan :ttag:`now` karena mereka tidak cocok."

msgid "``YearMixin``"
msgstr "``YearMixin``"

msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"year component of a date."
msgstr ""
"Sebuah mixin yang dapat digunakan mengambil dan menyediakan informasi "
"mengurai untuk komponen tahun dari tanggal."

msgid "**Methods and Attributes**"
msgstr "**Cara dan Atribut**"

msgid ""
"The :func:`~time.strftime` format to use when parsing the year. By default, "
"this is ``'%Y'``."
msgstr ""
"Bentuk :func:`~time.strftime` digunakan ketika mengurai tahun. Secara awal, "
"ini adalah ``'%Y'``."

msgid ""
"**Optional** The value for the year, as a string. By default, set to "
"``None``, which means the year will be determined using other means."
msgstr ""
"**Pilihan** Nilai untuk tahun, sebagai deretan kalimat. Secara awal, disetel "
"ke ``None``, yang berarti tahun akan ditentukan menggunakan cara lain."

msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the year. "
"Returns :attr:`~YearMixin.year_format` by default."
msgstr ""
"Mengembalikan bentuk :func:`~time.strftime` untuk digunakan ketika mengurai "
"tahun. Mengembalikan :attr:`~YearMixin.year_format` secara awalan."

msgid ""
"Returns the year for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""
"Mengembalikan tahun untuk dimana tampilan ini akan menampilkan data, sebagai "
"deretan kalimat. Coba sumber berikut, dalam urutan:"

msgid "The value of the :attr:`YearMixin.year` attribute."
msgstr "Nilai dari atribut :attr:`YearMixin.year`."

msgid "The value of the ``year`` argument captured in the URL pattern."
msgstr "Nilai dari argumen ``year`` ditangkap di corak URL."

msgid "The value of the ``year`` ``GET`` query argument."
msgstr "Nilai dari argumen permintaan ``GET`` ``year``."

msgid "Raises a 404 if no valid year specification can be found."
msgstr "Memunculkan 404 jika spesifikasi tahun tidak sah ditemukan."

msgid ""
"Returns a date object containing the first day of the year after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari tahun setelah "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid ""
"Returns a date object containing the first day of the year before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari tahun setelah "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid "``MonthMixin``"
msgstr "``MonthMixin``"

msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"month component of a date."
msgstr ""
"Sebuah mixin yang dapat digunakan mengambil dan menyediakan informasi "
"mengurai untuk komponen bulan dari tanggal."

msgid ""
"The :func:`~time.strftime` format to use when parsing the month. By default, "
"this is ``'%b'``."
msgstr ""
"Bentuk :func:`~time.strftime` untuk digunakan ketika mengurai bulan. Secara "
"awalan, ini adalah ``'%b'``."

msgid ""
"**Optional** The value for the month, as a string. By default, set to "
"``None``, which means the month will be determined using other means."
msgstr ""
"**Pilihan** Nilai dari bulan, sebagai deretan kalimat. Secara awal, disetel "
"ke ``None``, yang berarti bulan akan ditentukan menggunakan cara lain."

msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the month. "
"Returns :attr:`~MonthMixin.month_format` by default."
msgstr ""
"Mengembalikan bentuk :func:`~time.strftime` untuk digunakan ketika mengurai "
"bulan. Mengembalikan :attr:`~MonthMixin.month_format` secara awalan."

msgid ""
"Returns the month for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""
"Mengembalikan bulan untuk dimana tampilan ini akan menampilkan data, sebagai "
"deretan kalimat. Coba sumber berikut, dalam urutan:"

msgid "The value of the :attr:`MonthMixin.month` attribute."
msgstr "Nilai dari atribut :attr:`MonthMixin.month`."

msgid "The value of the ``month`` argument captured in the URL pattern."
msgstr "Nilai dari argumen ``month`` ditangkap di corak URL."

msgid "The value of the ``month`` ``GET`` query argument."
msgstr "Nilai dari argumen permintaan ``GET`` ``month``."

msgid "Raises a 404 if no valid month specification can be found."
msgstr "Memunculkan 404 jika spesifikasi bulan tidak sah ditemukan."

msgid ""
"Returns a date object containing the first day of the month after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari bulan setelah "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid ""
"Returns a date object containing the first day of the month before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari bulan sebelum "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid "``DayMixin``"
msgstr "``DayMixin``"

msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"day component of a date."
msgstr ""
"Sebuah mixin yang dapat digunakan mengambil dan menyediakan informasi "
"mengurai untuk komponen hari dari tanggal."

msgid ""
"The :func:`~time.strftime` format to use when parsing the day. By default, "
"this is ``'%d'``."
msgstr ""
"Bentuk :func:`~time.strftime` digunakan ketika mengurai tahun. Secara awal, "
"ini adalah ``'%d'``."

msgid ""
"**Optional** The value for the day, as a string. By default, set to "
"``None``, which means the day will be determined using other means."
msgstr ""
"**Pilihan** Nilai dari hari, sebagai deretan kalimat. Secara awal, disetel "
"ke``None``, yang berarti hari akan ditentukan menggunakan cara lain."

msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the day. "
"Returns :attr:`~DayMixin.day_format` by default."
msgstr ""
"Mengembalikan bentuk :func:`~time.strftime` untuk digunakan ketika mengurai "
"hari. Mengembalikan :attr:`~DayMixin.day_format` secara awalan."

msgid ""
"Returns the day for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""
"Mengembalikan hari untuk dimana tampilan ini akan menampilkan data, sebagai "
"deretan kalimat. Coba sumber berikut, dalam urutan:"

msgid "The value of the :attr:`DayMixin.day` attribute."
msgstr "Nilai dari atribut :attr:`DayMixin.day`."

msgid "The value of the ``day`` argument captured in the URL pattern."
msgstr "Nilai dari argumen ``day`` ditangkap di corak URL."

msgid "The value of the ``day`` ``GET`` query argument."
msgstr "Nilai dari argumen permintaan ``GET`` ``day``."

msgid "Raises a 404 if no valid day specification can be found."
msgstr "Memunculkan 404 jika spesifikasi hari tidak sah ditemukan."

msgid ""
"Returns a date object containing the next valid day after the date provided. "
"This function can also return ``None`` or raise an :class:`~django.http."
"Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari sah selanjutnya setelah tanggal "
"disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau memunculkan "
"pengecualian :class:`~django.http.Http404`, tergantung pada nilai dari :attr:"
"`~BaseDateListView.allow_empty` dan :attr:`~DateMixin.allow_future`."

msgid ""
"Returns a date object containing the previous valid day. This function can "
"also return ``None`` or raise an :class:`~django.http.Http404` exception, "
"depending on the values of :attr:`~BaseDateListView.allow_empty` and :attr:"
"`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari sah sebelumnya. Fungsi ini dapat "
"juga mengembalikan ``None`` atau memunculkan pengecualian :class:`~django."
"http.Http404`, tergantung pada nilai dari :attr:`~BaseDateListView."
"allow_empty` dan :attr:`~DateMixin.allow_future`."

msgid "``WeekMixin``"
msgstr "``WeekMixin``"

msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"week component of a date."
msgstr ""
"Sebuah mixin yang dapat digunakan mengambil dan menyediakan informasi "
"mengurai untuk komponen minggu dari tanggal."

msgid ""
"The :func:`~time.strftime` format to use when parsing the week. By default, "
"this is ``'%U'``, which means the week starts on Sunday. Set it to ``'%W'`` "
"if your week starts on Monday."
msgstr ""
"Bentuk :func:`~time.strftime` digunakan ketika mengurai minggu. Secara awal, "
"ini adalah ``'%U'``, yang berarti minggu mulai pada hari Minggu. Setel itu "
"menjadi ``'%W'`` jika minggu anda mulai pada hari Senin."

msgid ""
"**Optional** The value for the week, as a string. By default, set to "
"``None``, which means the week will be determined using other means."
msgstr ""
"**Pilihan** Nilai dari minggu, sebagai deretan kalimat. Secara awal, disetel "
"ke``None``, yang berarti minggu akan ditentukan menggunakan cara lain."

msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the week. "
"Returns :attr:`~WeekMixin.week_format` by default."
msgstr ""
"Mengembalikan bentuk :func:`~time.strftime` untuk digunakan ketika mengurai "
"minggu. Mengembalikan :attr:`~WeekMixin.week_format` secara awalan."

msgid ""
"Returns the week for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""
"Mengembalikan minggu untuk dimana tampilan ini akan menampilkan data, "
"sebagai deretan kalimat. Coba sumber berikut, dalam urutan:"

msgid "The value of the :attr:`WeekMixin.week` attribute."
msgstr "Nilai dari atribut :attr:`WeekMixin.week`."

msgid "The value of the ``week`` argument captured in the URL pattern"
msgstr "Nilai dari argumen ``week`` ditangkap di corak URL."

msgid "The value of the ``week`` ``GET`` query argument."
msgstr "Nilai dari argumen permintaan ``GET`` ``week``."

msgid "Raises a 404 if no valid week specification can be found."
msgstr "Memunculkan 404 jika spesifikasi minggu tidak sah ditemukan."

msgid ""
"Returns a date object containing the first day of the week after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari minggu setelah "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid ""
"Returns a date object containing the first day of the week before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""
"Mengembalikan obyek tanggal mengandung hari pertama dari minggu setelah "
"tanggal disediakan. Fungsi ini dapat juga mengembalikan ``None`` atau "
"memunculkan pengecualian :class:`~django.http.Http404`, tergantung pada "
"nilai dari :attr:`~BaseDateListView.allow_empty` dan :attr:`~DateMixin."
"allow_future`."

msgid "``DateMixin``"
msgstr "``DateMixin``"

msgid "A mixin class providing common behavior for all date-based views."
msgstr ""
"Sebuah kelas mixin menyediakan perilaku umum untuk semua tampilan "
"berdasarkan-tanggal."

msgid ""
"The name of the ``DateField`` or ``DateTimeField`` in the ``QuerySet``’s "
"model that the date-based archive should use to determine the list of "
"objects to display on the page."
msgstr ""
"Nama dari ``DateField`` atau ``DateTimeField`` di model ``QuerySet`` yang "
"arsip berdasarkan-tanggal harus digunakan untuk menentukan daftar dari obyek "
"untuk diperlihatkan pada halaman."

msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled and "
"``date_field`` is a ``DateTimeField``, dates are assumed to be in the "
"current time zone. Otherwise, the queryset could include objects from the "
"previous or the next day in the end user's time zone."
msgstr ""
"Ketika :doc:`time zone support </topics/i18n/timezones>` diadakan dan "
"``date_field`` adalah sebuah ``DateTimeField``, tanggal dianggap menjadi di "
"zona waktu saat ini. Jika tidak, queryset dapat menyertakan obyek-obyek dari "
"sebelum atau hari selanjutnya di akhir zona waktu pengguna."

msgid ""
"In this situation, if you have implemented per-user time zone selection, the "
"same URL may show a different set of objects, depending on the end user's "
"time zone. To avoid this, you should use a ``DateField`` as the "
"``date_field`` attribute."
msgstr ""
"Di keadaan ini, jika anda telah menerapkan pemilihan zona waktu per-"
"pengguna, URL sama mungkin menampilkan kumpulan berbeda dari obyek-obyek, "
"tergantung pada zona waktu pengguna akhir. Untuk menghindari ini, anda harus "
"menggunakan ``DateField`` sebagai atribut ``date_field``."

msgid ""
"A boolean specifying whether to include \"future\" objects on this page, "
"where \"future\" means objects in which the field specified in "
"``date_field`` is greater than the current date/time. By default, this is "
"``False``."
msgstr ""
"Sebuah boolean menentukan apakah menyertakan obyek-obyek \"future\" pada "
"halaman ini, dimana \"future\" berarti obyek-obyek dimana bidang ditentukan "
"di ``date_field`` adalah lebih besar dari tanggal/waktu saat ini. Secara "
"awalan, ini adalah ``False``."

msgid ""
"Returns the name of the field that contains the date data that this view "
"will operate on. Returns :attr:`~DateMixin.date_field` by default."
msgstr ""
"Mengembalikan nama dari bidang yang mengandung data tanggal yang tampilan "
"ini akan berjalan. Mengembalikan :attr:`~DateMixin.date_field` secara awalan."

msgid ""
"Determine whether to include \"future\" objects on this page, where \"future"
"\" means objects in which the field specified in ``date_field`` is greater "
"than the current date/time. Returns :attr:`~DateMixin.allow_future` by "
"default."
msgstr ""
"Menentukan apakah menyertakan obyek-obyek \"future\" pada halaman ini, "
"dimana \"future\" berarti obyek-obyek dimana bidang ditentukan di "
"``date_field`` adalah lebih besar dari tanggal/waktu saat ini. "
"Mengembalikan :attr:`~DateMixin.allow_future` secara awalan."

msgid "``BaseDateListView``"
msgstr "``BaseDateListView``"

msgid ""
"A base class that provides common behavior for all date-based views. There "
"won't normally be a reason to instantiate :class:`~django.views.generic."
"dates.BaseDateListView`; instantiate one of the subclasses instead."
msgstr ""
"Sebuah kelas dasar yang menyediakan perilaku umum untuk semua tampilan "
"berdasarkan-tanggal. Biasanya tidak akanmenjadi sebuah alasan untuk "
"menginstasiasi :class:`~django.views.generic.dates.BaseDateListView`; "
"instasiasi satu dari subkelas-subkelas sebagai gantinya."

msgid ""
"While this view (and its subclasses) are executing, ``self.object_list`` "
"will contain the list of objects that the view is operating upon, and ``self."
"date_list`` will contain the list of dates for which data is available."
msgstr ""
"Selagi tampilan ini (dan subkelasnya) dikerjakan, ``self.object_list`` akan "
"mengandung daftar dari obyek-obyek yang tampilan adalah beroperasi, dan "
"``self.date_list`` akan mengandung daftar dari tanggal yang data tersedia."

msgid "**Mixins**"
msgstr "**Mixins**"

msgid ":class:`~django.views.generic.dates.DateMixin`"
msgstr ":class:`~django.views.generic.dates.DateMixin`"

msgid ":class:`~django.views.generic.list.MultipleObjectMixin`"
msgstr ":class:`~django.views.generic.list.MultipleObjectMixin`"

msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``True`` and no objects are available, the view will "
"display an empty page instead of raising a 404."
msgstr ""
"Sebuah boolean menentukan apakah memperlihatkan halaman jika tidak ada obyek "
"tersedia. Jika ini adalah ``True`` dan tidak ada obyek tersedia, tampilan "
"akan meemperlihatkan sebuah halaman kosong daripada memunculkan sebuah 404."

msgid ""
"This is identical to :attr:`django.views.generic.list.MultipleObjectMixin."
"allow_empty`, except for the default value, which is ``False``."
msgstr ""
"Ini mirip pada :attr:`django.views.generic.list.MultipleObjectMixin."
"allow_empty`, kecuali untuk nilai awalan, yaitu ``False``."

msgid ""
"**Optional** A string defining the aggregation period for ``date_list``. It "
"must be one of ``'year'`` (default), ``'month'``, or ``'day'``."
msgstr ""
"**Pilihan** String menentukan masa pengumpulan untuk ``date_list``. Itu "
"harus berupa satu dari ``'year'`` (awalan), ``'month'``, atau ``'day'``."

msgid ""
"Returns a 3-tuple containing (``date_list``, ``object_list``, "
"``extra_context``)."
msgstr ""
"Mengembalikan 3-tuple mengandung (``date_list``, ``object_list``, "
"``extra_context``)."

msgid ""
"``date_list`` is the list of dates for which data is available. "
"``object_list`` is the list of objects. ``extra_context`` is a dictionary of "
"context data that will be added to any context data provided by the :class:"
"`~django.views.generic.list.MultipleObjectMixin`."
msgstr ""
"``date_list`` adalah daftar tanggal yang data tersedia. ``object_list`` "
"adalah daftar dari obyek. ``extra_context`` adalah sebuah kamus dari konteks "
"data yang akan ditambahkan ke konteks data apapun disediakan oleh :class:"
"`~django.views.generic.list.MultipleObjectMixin`."

msgid ""
"Returns a queryset, filtered using the query arguments defined by "
"``lookup``. Enforces any restrictions on the queryset, such as "
"``allow_empty`` and ``allow_future``."
msgstr ""
"Mengembalikan sebuah queryset, disaring menggunakan argumen permintaan "
"ditentukan oleh ``lookup``. Memaksa larangan apapun pada queryset, seperti "
"``allow_empty`` dan ``allow_future``."

msgid ""
"Returns the aggregation period for ``date_list``. Returns :attr:"
"`~BaseDateListView.date_list_period` by default."
msgstr ""
"Mengembalikan masa pengumpulan untuk ``date_list``. Mengembalikan :attr:"
"`~BaseDateListView.date_list_period` secara awalan."

msgid ""
"Returns the list of dates of type ``date_type`` for which ``queryset`` "
"contains entries. For example, ``get_date_list(qs, 'year')`` will return the "
"list of years for which ``qs`` has entries. If ``date_type`` isn't provided, "
"the result of :meth:`~BaseDateListView.get_date_list_period` is used. "
"``date_type`` and ``ordering`` are simply passed to :meth:`QuerySet."
"dates()<django.db.models.query.QuerySet.dates>`."
msgstr ""
"Mengembalikan daftar dari tanggal dari jenis ``date_type`` yang ``queryset`` "
"mengandung masukan. Sebagai contoh, ``get_date_list(qs, 'year')`` akan "
"mengembalikan daftar tahun yang ``qs`` telah masukkan. Jika ``date_type`` "
"tidak disediakan, hasil dari :meth:`~BaseDateListView.get_date_list_period` "
"digunakan. ``date_type`` dan ``ordering`` cukup dilewatkan ke :meth:"
"`QuerySet.dates()<django.db.models.query.QuerySet.dates>`."

msgid "Editing mixins"
msgstr "Menyunting mixin"

msgid "The following mixins are used to construct Django's editing views:"
msgstr "Mixin berikut digunakan untuk membangun tampilan penyuntingan Django:"

msgid ""
"Examples of how these are combined into editing views can be found at the "
"documentation on :doc:`/ref/class-based-views/generic-editing`."
msgstr ""
"Contoh-contoh dari bagaimana ini dipadukan kedalam tampilan menyunting dapat "
"ditemukan pada dokumentasi di :doc:`/ref/class-based-views/generic-editing`."

msgid "``FormMixin``"
msgstr "``FormMixin``"

msgid ""
"A mixin class that provides facilities for creating and displaying forms."
msgstr ""
"Sebuah kelas mixin yang menyediakan fasilitas-fasilitas untuk membuat dan "
"memperlihatkan formulir"

msgid "A dictionary containing initial data for the form."
msgstr "Sebuah kamus mengandung data inisial untuk formulir."

msgid "The form class to instantiate."
msgstr "Kelas formulir untuk instasiasi"

msgid "The URL to redirect to when the form is successfully processed."
msgstr "URL untuk pengalihan ketika formulir berhasil diolah."

msgid "The :attr:`~django.forms.Form.prefix` for the generated form."
msgstr ":attr:`~django.forms.Form.prefix` untuk membangkitkan formulir."

msgid ""
"Retrieve initial data for the form. By default, returns a copy of :attr:"
"`~django.views.generic.edit.FormMixin.initial`."
msgstr ""
"Mengambil data inisial untuk formulir. Secara awalan, mengembalikan salinan "
"dari :attr:`~django.views.generic.edit.FormMixin.initial`."

msgid "Retrieve the form class to instantiate. By default :attr:`.form_class`."
msgstr ""
"Mengambil kelas formulir untuk instasiasi. Secara awalan :attr:`.form_class`."

msgid ""
"Instantiate an instance of ``form_class`` using :meth:`~django.views.generic."
"edit.FormMixin.get_form_kwargs`. If ``form_class`` isn't provided :meth:"
"`get_form_class` will be used."
msgstr ""
"Instansiasi sebuah instance dari ``form_class`` menggunakan :meth:`~django."
"views.generic.edit.FormMixin.get_form_kwargs`. Jika ``form_class``tidak "
"disediakan :meth:`get_form_class` akan digunakan."

msgid "Build the keyword arguments required to instantiate the form."
msgstr "Membangun argumen kata kunci diwajibkan untuk instasiasi formulir."

msgid ""
"The ``initial`` argument is set to :meth:`.get_initial`. If the request is a "
"``POST`` or ``PUT``, the request data (``request.POST`` and ``request."
"FILES``) will also be provided."
msgstr ""
"Argumen ``initial`` disetel menjadi :meth:`.get_initial`. Jika permintaan "
"adalah ``POST`` atau ``PUT``, data permintaan (``request.POST`` dan "
"``request.FILES``) akan juga disediakan."

msgid ""
"Determine the :attr:`~django.forms.Form.prefix` for the generated form. "
"Returns :attr:`~django.views.generic.edit.FormMixin.prefix` by default."
msgstr ""
"Menentukan :attr:`~django.forms.Form.prefix` untuk formulir dibangkitkan. "
"Mengembalikan :attr:`~django.views.generic.edit.FormMixin.prefix` secara "
"awalan."

msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`~django.views.generic.edit.FormMixin.success_url` by default."
msgstr ""
"Menentukan URL untuk pengalihkan ketika formulir adalah berhasil disahkan. "
"Mengembalikan :attr:`~django.views.generic.edit.FormMixin.success_url` "
"secara awalan."

msgid ""
"Redirects to :meth:`~django.views.generic.edit.FormMixin.get_success_url`."
msgstr ""
"Dialihkan ke :meth:`~django.views.generic.edit.FormMixin.get_success_url`."

msgid "Renders a response, providing the invalid form as context."
msgstr ""
"Membangun sebuah tanggapan, menyediakan formulir tidak sah sebagai konteks."

msgid ""
"Calls :meth:`get_form` and adds the result to the context data with the name "
"'form'."
msgstr ""
"Memanggil :meth:`get_form` dan menambahkan hasil ke data konteks dengan nama "
"'form'."

msgid "``ModelFormMixin``"
msgstr "``ModelFormMixin``"

msgid ""
"A form mixin that works on ``ModelForms``, rather than a standalone form."
msgstr ""
"Sebuah mixin formulir yang bekerja pada ``ModelForms``, daripada formulir "
"berdiri sendiri."

msgid ""
"Since this is a subclass of :class:`~django.views.generic.detail."
"SingleObjectMixin`, instances of this mixin have access to the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.model` and :attr:`~django."
"views.generic.detail.SingleObjectMixin.queryset` attributes, describing the "
"type of object that the ``ModelForm`` is manipulating."
msgstr ""
"Sejak ini adalah subkelas dari :class:`~django.views.generic.detail."
"SingleObjectMixin`, instance dari mixin ini mempunyai akses ke atribut :attr:"
"`~django.views.generic.detail.SingleObjectMixin.model` dan :attr:`~django."
"views.generic.detail.SingleObjectMixin.queryset`, menggambarkan jenis dari "
"obyek yang ``ModelForm`` dimanipulasi."

msgid ""
"If you specify both the :attr:`~django.views.generic.edit.ModelFormMixin."
"fields` and :attr:`~django.views.generic.edit.FormMixin.form_class` "
"attributes, an :exc:`~django.core.exceptions.ImproperlyConfigured` exception "
"will be raised."
msgstr ""
"Jika anda menentukan kedua atribut :attr:`~django.views.generic.edit."
"ModelFormMixin.fields` dan :attr:`~django.views.generic.edit.FormMixin."
"form_class`, sebuah pengecualian :exc:`~django.core.exceptions."
"ImproperlyConfigured` akan dimunculkan."

msgid ""
"A model class. Can be explicitly provided, otherwise will be determined by "
"examining ``self.object`` or :attr:`~django.views.generic.detail."
"SingleObjectMixin.queryset`."
msgstr ""
"Sebuah kelas model. Dapat secara jelas disediakan, jika tidak akan "
"ditentukan dengan menguji ``self.object`` atau :attr:`~django.views.generic."
"detail.SingleObjectMixin.queryset`."

msgid ""
"A list of names of fields. This is interpreted the same way as the ``Meta."
"fields`` attribute of :class:`~django.forms.ModelForm`."
msgstr ""
"Sebuah daftar nama-nama dari bidang-bidang. Ini ditafsirkan cara yang sama "
"seperti atribut ``Meta.fields`` dari :class:`~django.forms.ModelForm`."

msgid ""
"This is a required attribute if you are generating the form class "
"automatically (e.g. using ``model``). Omitting this attribute will result in "
"an :exc:`~django.core.exceptions.ImproperlyConfigured` exception."
msgstr ""
"Ini adalah atribut wajib jika anda sedang membangkitkan kelas formulir "
"secara otomatis (sebagai contoh menggunakan ``model``). Menghilangkan "
"atribut ini akan menghasilkan dalam sebuah pengecualian :exc:`~django.core."
"exceptions.ImproperlyConfigured`."

msgid ""
"``success_url`` may contain dictionary string formatting, which will be "
"interpolated against the object's field attributes. For example, you could "
"use ``success_url=\"/polls/{slug}/\"`` to redirect to a URL composed out of "
"the ``slug`` field on a model."
msgstr ""
"``success_url`` mungkin mengandung pembentukan string kamus, yang akan "
"disisipkan terhadap atribut bidang obyek. Sebagai contoh, anda dapat "
"menggunakan ``success_url=\"/polls/{slug}/\"`` untuk mengalihkan ke sebuah "
"URL disusun dari bidang ``slug`` pada sebuah model."

msgid ""
"Retrieve the form class to instantiate. If :attr:`~django.views.generic.edit."
"FormMixin.form_class` is provided, that class will be used. Otherwise, a "
"``ModelForm`` will be instantiated using the model associated with the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.queryset`, or with the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.model`, depending on which "
"attribute is provided."
msgstr ""
"Mengambil dari kelas formulir untuk menginstasiasi. Jika :attr:`~django."
"views.generic.edit.FormMixin.form_class` disediakan, kelas itu akan "
"digunakan. Jika tidak, sebuah ``ModelForm`` akan diinstasiasikan menggunakan "
"model terhubung dengan :attr:`~django.views.generic.detail.SingleObjectMixin."
"queryset`, atau dengan :attr:`~django.views.generic.detail.SingleObjectMixin."
"model`, tergantung pada atribut mana yang disediakan."

msgid ""
"Add the current instance (``self.object``) to the standard :meth:`~django."
"views.generic.edit.FormMixin.get_form_kwargs`."
msgstr ""
"Tambah instance saat ini (``self.object``) ke :meth:`~django.views.generic."
"edit.FormMixin.get_form_kwargs` standar."

msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`django.views.generic.edit.ModelFormMixin.success_url` if it "
"is provided; otherwise, attempts to use the ``get_absolute_url()`` of the "
"object."
msgstr ""
"Menentukan URL untuk pengalihkan ketika formulir adalah berhasil disahkan. "
"Mengembalikan :attr:`~django.views.generic.edit.ModelFormMixin.success_url` "
"jika itu disediakan; jika tidak berusaha menggunakan ``get_absolute_url()`` "
"dari obyek. "

msgid ""
"Saves the form instance, sets the current object for the view, and redirects "
"to :meth:`~django.views.generic.edit.FormMixin.get_success_url`."
msgstr ""
"Simpan formulir instance, setel onyek saat ini untuk tampilan, dan alihkan "
"ke :meth:`~django.views.generic.edit.FormMixin.get_success_url`."

msgid "``ProcessFormView``"
msgstr "``ProcessFormView``"

msgid "A mixin that provides basic HTTP GET and POST workflow."
msgstr "Sebuah mixin yang menyediakan alir kerja HTTP GET dan POST dasar."

msgid ""
"This is named 'ProcessFormView' and inherits directly from :class:`django."
"views.generic.base.View`, but breaks if used independently, so it is more of "
"a mixin."
msgstr ""
"Ini adalah bernama 'ProcessFormView' dan mewarisi langsung dari :class:"
"`django.views.generic.base.View`, tetapi memotong jika digunakan secara "
"berdiri sendiri, jadi itu lebih dari sebuah mixin."

msgid "**Extends**"
msgstr "**Perpanjang**"

msgid ""
"Renders a response using a context created with :meth:`~django.views.generic."
"edit.FormMixin.get_context_data`."
msgstr ""
"Membangun sebuah tanggapan menggunakan konteks dibuat dengan :meth:`~django."
"views.generic.edit.FormMixin.get_context_data`."

msgid ""
"Constructs a form, checks the form for validity, and handles it accordingly."
msgstr ""
"Pembangunan sebuah formulir, periksa formulir untuk keabsahan, dan menangani "
"itu sesuai dengan itu."

msgid ""
"The ``PUT`` action is also handled and just passes all parameters through "
"to :meth:`post`."
msgstr ""
"Tindakan``PUT`` juga menangani dan hanya melewatkan semua parameter melalui :"
"meth:`post`."

msgid "``DeletionMixin``"
msgstr "``DeletionMixin``"

msgid "Enables handling of the ``DELETE`` http action."
msgstr "Mengadakan menangani dari tindakan http ``DELETE``."

msgid ""
"The url to redirect to when the nominated object has been successfully "
"deleted."
msgstr "URL untuk pengalihan ketika obyek ditunjuk telah berhasil dihapus."

msgid ""
"``success_url`` may contain dictionary string formatting, which will be "
"interpolated against the object's field attributes. For example, you could "
"use ``success_url=\"/parent/{parent_id}/\"`` to redirect to a URL composed "
"out of the ``parent_id`` field on a model."
msgstr ""
"``success_url`` mungkin mengandung pembentukan string kamus, yang akan "
"disisipkan terhadap atribut bidang obyek. Sebagai contoh, anda dapat "
"menggunakan ``success_url=\"/parent/{parent_id}/\"`` untuk mengalihkan ke "
"sebuah URL disusun dari bidang ``parent_id`` pada sebuah model."

msgid ""
"Returns the url to redirect to when the nominated object has been "
"successfully deleted. Returns :attr:`~django.views.generic.edit."
"DeletionMixin.success_url` by default."
msgstr ""
"Menentukan url untuk pengalihkan ketikaketika obyek yang dicalonkan berhasil "
"dihapus. Mengembalikan :attr:`~django.views.generic.edit.DeletionMixin."
"success_url` secara awalan."

msgid "Multiple object mixins"
msgstr "Banyak obyek mixin"

msgid "``MultipleObjectMixin``"
msgstr "``MultipleObjectMixin``"

msgid "A mixin that can be used to display a list of objects."
msgstr "Sebuah mixin yang dapat digunakan memperlihatkan daftar dari obyek."

msgid ""
"If ``paginate_by`` is specified, Django will paginate the results returned "
"by this. You can specify the page number in the URL in one of two ways:"
msgstr ""
"Jika ``paginate_by`` ditentukan, Django akan memberikan nomor hasil "
"dikembalikan oleh ini. Anda dapat menentukan nomor halaman di URL di satu "
"atau dua cara:"

msgid ""
"Use the ``page`` parameter in the URLconf. For example, this is what your "
"URLconf might look like::"
msgstr ""
"Gunakan parameter ``page`` di URLconf. Sebagai contoh, ini adalah apa "
"URLconf anda mungkin terlihat seperti::"

msgid ""
"Pass the page number via the ``page`` query-string parameter. For example, a "
"URL would look like this::"
msgstr ""
"Lewatkan nomor halaman melalui parameter string-permintaan ``page``. Sebagai "
"contoh, sebuah URL akan terlihat seperti ini::"

msgid ""
"These values and lists are 1-based, not 0-based, so the first page would be "
"represented as page ``1``."
msgstr ""
"Nilai-nilai ini dan daftar adalah berdasarkan-1, bukan berdasarkan-0, jadi "
"halaman pertama akan diwakili sebagai halaman ``1``."

msgid ""
"For more on pagination, read the :doc:`pagination documentation </topics/"
"pagination>`."
msgstr ""
"Untuk lebih pada pemberian nomor, baca :doc:`pagination documentation </"
"topics/pagination>`."

msgid ""
"As a special case, you are also permitted to use ``last`` as a value for "
"``page``::"
msgstr ""
"Seperti kasus khusus, anda juga diizinkan menggunakan ``last`` sebagai "
"sebuah nilai untuk ``page``::"

msgid ""
"This allows you to access the final page of results without first having to "
"determine how many pages there are."
msgstr ""
"Ini mengizinkan anda mengakses halaman akhir dari hasil tanpa pertama harus "
"menentukan seberapa banyak halaman ada."

msgid ""
"Note that ``page`` *must* be either a valid page number or the value "
"``last``; any other value for ``page`` will result in a 404 error."
msgstr ""
"Catat bahwa ``page`` *harus* antara nomor halaman sah atau nilai ``last``; "
"nilai lain apapun untuk ``page`` akan menghasilkan di kesalahan 404."

msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``False`` and no objects are available, the view will "
"raise a 404 instead of displaying an empty page. By default, this is "
"``True``."
msgstr ""
"Sebuah boolean menentukan apakah memperlihatkan halaman jika tidak ada obyek "
"tersedia. Jika ini adalah ``False`` dan tidak ada obyek tersedia, tampilan "
"akan memunculkan  sebuah 404 daripada memperlihatkan sebuah halaman kosong. "
"Secara awalan, ini adalah ``True``."

msgid ""
"The model that this view will display data for. Specifying ``model = Foo`` "
"is effectively the same as specifying ``queryset = Foo.objects.all()``, "
"where ``objects`` stands for ``Foo``’s :ref:`default manager <default-"
"managers>`."
msgstr ""
"Model yang tampilan ini akan menampilkan data. Menentukan ``model = Foo`` "
"secara efektif sama seperti menentukan ``queryset = Foo.objects.all()``, "
"dimana ``objects`` berdiri untuk :ref:`default manager <default-managers>` "
"``Foo``."

msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of "
"``queryset`` supersedes the value provided for :attr:`model`."
msgstr ""
"Sebuah ``QuerySet`` yang mewakili obyek-obyek. Jika disediakan, nilai dari "
"``queryset`` menggantikan nilai disediakan untuk :attr:`model`."

msgid ""
"``queryset`` is a class attribute with a *mutable* value so care must be "
"taken when using it directly. Before using it, either call its :meth:"
"`~django.db.models.query.QuerySet.all` method or retrieve it with :meth:"
"`get_queryset` which takes care of the cloning behind the scenes."
msgstr ""
"``queryset`` adalah sebuah atribut kelas dengan nilai *berubah-ubah* "
"sehingga perawatan harus diambil ketika menggunakan itu secara langsung. "
"Sebelum menggunakan itu, antara memanggil metode :meth:`~django.db.models."
"query.QuerySet.all` nya atau mengambil itu dengan :meth:`get_queryset` yang "
"merawat dari kloning dibelakang layar."

msgid ""
"A string or list of strings specifying the ordering to apply to the "
"``queryset``. Valid values are the same as those for :meth:`~django.db."
"models.query.QuerySet.order_by`."
msgstr ""
"Sebuah string atau daftar dari string menentukan urutan untuk memberlakukan "
"ke ``queryset``. Nilai-nilai sah adalah sama seperti itu untuk :meth:"
"`~django.db.models.query.QuerySet.order_by`."

msgid ""
"An integer specifying how many objects should be displayed per page. If this "
"is given, the view will paginate objects with ``paginate_by`` objects per "
"page. The view will expect either a ``page`` query string parameter (via "
"``request.GET``) or a ``page`` variable specified in the URLconf."
msgstr ""
"Sebuah integer menentukan seberapa banyak obyek-obyek harus diperlihatkan "
"per halaman. Jika ini diberikan, tampilan akan memberikan nomor obyek-obyek "
"dengan ``paginate_by`` obyek-obyek per halaman. Tampilan akan mengharapkan "
"antara sebuah parameter string permintaan ``page`` (melalui ``request.GET``) "
"atau sebuah variabel ``page`` ditentukan di URLconf."

msgid ""
"An integer specifying the number of \"overflow\" objects the last page can "
"contain. This extends the :attr:`paginate_by` limit on the last page by up "
"to ``paginate_orphans``, in order to keep the last page from having a very "
"small number of objects."
msgstr ""
"Sebuah integer menentukan nomor dari obyek-obyek \"overflow\" halaman "
"terakhir dapat diisi. Ini memperpanjang :attr:`paginate_by` batasan pada "
"halaman terakhir sampai pada ``paginate_orphans``, untuk menjaga halaman "
"terakhir dari memiliki sangat kecil nomor dari obyek-obyek. "

msgid ""
"A string specifying the name to use for the page parameter. The view will "
"expect this parameter to be available either as a query string parameter "
"(via ``request.GET``) or as a kwarg variable specified in the URLconf. "
"Defaults to ``page``."
msgstr ""
"Sebuah string menentukan nama digunakan untuk parameter halaman. Tampilan "
"akan mengharapkan parameter ini untuk tersedia antara sebagai sebuah "
"parameter string permintaan (melalui ``request.GET``) atau sebagai sebuah "
"variabel kwarg ditentukan di URLconf. Awalan ke ``page``."

msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`get_paginator`."
msgstr ""
"Kelas penomoran digunakan untuk menomorkan halaman. Secara awalan, :class:"
"`django.core.paginator.Paginator` digunakan. Jika penyesuaian kelas "
"penomoran tidak mempunyai antarmuka pembangun sama seperti :class:`django."
"core.paginator.Paginator`, anda akan juga butuh menyediakan sebuah penerapan "
"untuk :meth:`get_paginator`."

msgid "Designates the name of the variable to use in the context."
msgstr "Menandakan nama dari variabel untuk digunakan di konteks."

msgid ""
"Get the list of items for this view. This must be an iterable and may be a "
"queryset (in which queryset-specific behavior will be enabled)."
msgstr ""
"Dapatkan daftar dari barang-barang untuk tampilan ini. Ini harus berupa "
"sebuah perulangan dan mungkin sebuah queryset (dimana perilaku queryset-"
"tertentu akan diadakan)."

msgid ""
"Returns a string (or iterable of strings) that defines the ordering that "
"will be applied to the ``queryset``."
msgstr ""
"Mengembalikan sebuah string (atau perulangan dari string) yang menentukan "
"urutan yang akan diberlakukan ke ``queryset``."

msgid "Returns :attr:`ordering` by default."
msgstr "Mengembalikan :attr:`ordering` secara awalan."

msgid ""
"Returns a 4-tuple containing (``paginator``, ``page``, ``object_list``, "
"``is_paginated``)."
msgstr ""
"Mengembalikan 4-tuple mengandung (``paginator``, ``page``, ``object_list``, "
"``is_paginated``)."

msgid ""
"Constructed by paginating ``queryset`` into pages of size ``page_size``. If "
"the request contains a ``page`` argument, either as a captured URL argument "
"or as a GET argument, ``object_list`` will correspond to the objects from "
"that page."
msgstr ""
"DIbangun dengan menomori ``queryset`` kedalam halaman dari ukuran "
"``page_size``. Jika permintaan mengandung sebuah argumen ``page``, antara "
"sebagau URL tertangkap atau sebagai argumen GET, ``object_list`` akan "
"berhubungan ke obyek-obyek dari halaman itu."

msgid ""
"Returns the number of items to paginate by, or ``None`` for no pagination. "
"By default this simply returns the value of :attr:`paginate_by`."
msgstr ""
"Mengembalikan sejumlah barang-barang untuk menomorkan, atau ``None`` untuk "
"tidak penomoran. Secara awalan ini cukup mengembalikan nilai dari :attr:"
"`paginate_by`."

msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator_class`."
msgstr ""
"Mengembalikan sebuah instance dari penomor digunakan untuk tampilan ini. "
"Secara awalan, instasiasi sebuah instance dari :attr:`paginator_class`."

msgid ""
"An integer specifying the number of \"overflow\" objects the last page can "
"contain. By default this simply returns the value of :attr:"
"`paginate_orphans`."
msgstr ""
"Sebuah integer menentukan sejumlah obyek-obyek \"overflow\" halaman terakhir "
"dapat diisi. Secara awalan ini cukup mengembalikan nilai dari :attr:"
"`paginate_orphans`."

msgid ""
"Return a boolean specifying whether to display the page if no objects are "
"available. If this method returns ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``True``."
msgstr ""
"Mengembalikan sebuah boolean menentukan apakah memperlihatkan halaman jika "
"tidak ada obyek tersedia. Jika metode ini mengembalikan ``False`` dan tidak "
"ada obyek tersedia, tampilan akan memunculkan  sebuah 404 daripada "
"memperlihatkan sebuah halaman kosong. Secara awalan, ini adalah ``True``."

msgid ""
"Return the context variable name that will be used to contain the list of "
"data that this view is manipulating. If ``object_list`` is a queryset of "
"Django objects and :attr:`context_object_name` is not set, the context name "
"will be the ``model_name`` of the model that the queryset is composed from, "
"with postfix ``'_list'`` appended. For example, the model ``Article`` would "
"have a context object named ``article_list``."
msgstr ""
"Mengembalikan nama variabel konteks yang akan digunakan mewadahi daftar data "
"yang tampilan ini dimanipulasi. Jika ``object_list`` adalah sebuah queryset "
"dari obyek-obyek Django dan :attr:`context_object_name` tidak disetel, nama "
"konteks akan menjadi ``model_name`` dari the model yang queryset disusun "
"dari, dengan postfix ``'_list'`` ditambahkan. Sebagai contoh, model "
"``Article`` akan mempunyai sebuah obyek konteks bernama ``article_list``."

msgid "Returns context data for displaying the list of objects."
msgstr "Mengembalikan data konteks untuk memperlihatkan daftar dari obyek."

msgid ""
"``object_list``: The list of objects that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object_list``."
msgstr ""
"``object_list``: Daftar dari obyek-obyek yang tampilan ini diperlihatkan. "
"Jika ``context_object_name`` ditentukan, variabel itu akan juga disetel di "
"konteks, dengan nilai sama seperti ``object_list``."

msgid ""
"``is_paginated``: A boolean representing whether the results are paginated. "
"Specifically, this is set to ``False`` if no page size has been specified, "
"or if the available objects do not span multiple pages."
msgstr ""
"``is_paginated``: Sebuah boolean mewakili apakah hasil dinomorkan. "
"Khususnya, ini disetel menjadi ``False`` jika tidak ada ukuran halaman telah "
"ditentukan, atau jika obyek-obyek tersedia tidak menjangkau banyak halaman."

msgid ""
"``paginator``: An instance of :class:`django.core.paginator.Paginator`. If "
"the page is not paginated, this context variable will be ``None``."
msgstr ""
"``paginator``: Sebuah instance dari :class:`django.core.paginator."
"Paginator`. Jika halaman tidak dinomorkan, variabel konteks ini akan menjadi "
"``None``."

msgid ""
"``page_obj``: An instance of :class:`django.core.paginator.Page`. If the "
"page is not paginated, this context variable will be ``None``."
msgstr ""
"``page_obj``: Sebuah instance dari :class:`django.core.paginator.Page`. Jika "
"halaman tidak dinomorkan, variabel konteks ini akan menjadi ``None``."

msgid "``MultipleObjectTemplateResponseMixin``"
msgstr "``MultipleObjectTemplateResponseMixin``"

msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a list of object instances. Requires that the view it is mixed "
"with provides ``self.object_list``, the list of object instances that the "
"view is operating on. ``self.object_list`` may be, but is not required to "
"be, a :class:`~django.db.models.query.QuerySet`."
msgstr ""
"Sebuah kelas mixin yang melakukan membangun tanggapan berdasarkan-cetakan "
"untuk tampilan yang beroperasi diatas daftar dari instance obyek. Diwajibkan "
"bahwa tampilan itu campurkan dengan ``self.object_list`` tersedia, daftar "
"dari instance obyek yang tampilan beroperasi. ``self.object_list`` mungkin, "
"tetapi tidak diwajibkan menjadi, sebuah :class:`~django.db.models.query."
"QuerySet`."

msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ":class:`~django.views.generic.base.TemplateResponseMixin`"

msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_list``."
msgstr ""
"Akhiran ditambahkan ke calon nama cetakan dibangkitkan-otomatis. Awalan "
"akhiran adalah ``_list``."

msgid "Returns a list of candidate template names. Returns the following list:"
msgstr ""
"Mengembalikan daftar dari calon nama-nama cetakan. Mengembalikan daftar "
"berikut:"

msgid "the value of ``template_name`` on the view (if provided)"
msgstr "nilai dari ``template_name`` pada tampilan (jika disediakan)"

msgid "``<app_label>/<model_name><template_name_suffix>.html``"
msgstr "``<app_label>/<model_name><template_name_suffix>.html``"

msgid "Simple mixins"
msgstr "Mixin sederhana"

msgid "``ContextMixin``"
msgstr "``ContextMixin``"

msgid ""
"Returns a dictionary representing the template context. The keyword "
"arguments provided will make up the returned context. Example usage::"
msgstr ""
"Mengembalikan sebuah kamus mewakili konteks cetakan. Argumen kata kunci "
"disediakan akan melengkapi konteks dikembalikan. Contoh penggunaan:"

msgid ""
"The template context of all class-based generic views include a ``view`` "
"variable that points to the ``View`` instance."
msgstr ""
"Konteks cetakan dari semua tampilan umum berdasarkan-kelas menyertakan "
"sebuah variabel ``view`` pada instance ``View``."

msgid "Use ``alters_data`` where appropriate"
msgstr "Gunakan ``alters_data`` dimana sesuai"

msgid ""
"Note that having the view instance in the template context may expose "
"potentially hazardous methods to template authors.  To prevent methods like "
"this from being called in the template, set ``alters_data=True`` on those "
"methods.  For more information, read the documentation on :ref:`rendering a "
"template context <alters-data-description>`."
msgstr ""
"Catat bahwa memiliki instance tampilan di konteks cetakan mungkin menyingkap "
"potensi metode berbahaya pada cetakan penulis. Untuk mencegah metode seperti "
"ini dari menjadi dipanggil di cetakan, setel ``alters_data=True`` pada "
"metode tersebut. Untuk informasi lebih, baca dokumentasi pada :ref:"
"`rendering a template context <alters-data-description>`."

msgid "``TemplateResponseMixin``"
msgstr "``TemplateResponseMixin``"

msgid ""
"Provides a mechanism to construct a :class:`~django.template.response."
"TemplateResponse`, given suitable context. The template to use is "
"configurable and can be further customized by subclasses."
msgstr ""
"Menyediakan sebuah mekanisme membangun sebuah :class:`~django.template."
"response.TemplateResponse`, konteks cocok yang diberikan. Cetakan untuk "
"digunakan adalah dapat dikonfigurasi dan dapat lebih jau disesuaiakan oleh "
"subkelas-subkelas."

msgid ""
"The full name of a template to use as defined by a string. Not defining a "
"``template_name`` will raise a :class:`django.core.exceptions."
"ImproperlyConfigured` exception."
msgstr ""
"Nama penuh dari sebuah cetakan untuk menggunakan seperti ditentukan oleh "
"sebuah string. Tidak menentukan sebuah ``template_name`` akan memunculkan "
"sebuah pengecualian :class:`django.core.exceptions.ImproperlyConfigured`."

msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template. ``template_engine`` is passed as the ``using`` keyword "
"argument to ``response_class``. Default is ``None``, which tells Django to "
"search for the template in all configured engines."
msgstr ""
":setting:`NAME <TEMPLATES-NAME>` dari mesin cetakan untuk digunakan untuk "
"memuat cetakan. ``template_engine`` dilewatkan sebagai argumen kata kunci "
"``using`` pada ``response_class``. Awalan adalah ``None``, yang memberitahu "
"Django untuk mencari cetakan di semua mesin yang dikonfigurasikan."

msgid ""
"The response class to be returned by ``render_to_response`` method. Default "
"is :class:`TemplateResponse <django.template.response.TemplateResponse>`. "
"The template and context of ``TemplateResponse`` instances can be altered "
"later (e.g. in :ref:`template response middleware <template-response-"
"middleware>`)."
msgstr ""
"Kelas tanggapan untuk dikembalikan oleh metode ``render_to_response``. "
"Awalan adalah :class:`TemplateResponse <django.template.response."
"TemplateResponse>`. Cetakan dan konteks dari instance ``TemplateResponse`` "
"dapat dirubah kemudian (sebagai contoh di :ref:`template response middleware "
"<template-response-middleware>`)."

msgid ""
"If you need custom template loading or custom context object instantiation, "
"create a ``TemplateResponse`` subclass and assign it to ``response_class``."
msgstr ""
"Jika anda butuh menyesuaikan memuat cetakan atau menyesuaikan instansiasi "
"obyek konteks, buat sebuah subkelas ``TemplateResponse`` dan berikan itu ke "
"``response_class``."

msgid ""
"The content type to use for the response. ``content_type`` is passed as a "
"keyword argument to ``response_class``. Default is ``None`` -- meaning that "
"Django uses :setting:`DEFAULT_CONTENT_TYPE`."
msgstr ""
"Jenis konteks untuk digunakan untuk tanggapan. ``content_type`` dilewatkan "
"sebagai argumen kata kunci pada ``response_class``. Awalan adalah ``None`` "
"-- berarti bahwa Django menggunakan :setting:`DEFAULT_CONTENT_TYPE`."

msgid "Returns a ``self.response_class`` instance."
msgstr "Mengembalikan instance ``self.response_class``."

msgid ""
"If any keyword arguments are provided, they will be passed to the "
"constructor of the response class."
msgstr ""
"Jika argumen kata kunci apapun disediakan, mereka akan dilewatkan ke "
"pembangun dari kelas tanggapan."

msgid ""
"Calls :meth:`get_template_names()` to obtain the list of template names that "
"will be searched looking for an existent template."
msgstr ""
"Memanggil :meth:`get_template_names()` untuk mendapatkan daftar dari nama-"
"nama cetakan yang akan dicari cari sebuah cetakan yang ada."

msgid ""
"Returns a list of template names to search for when rendering the template. "
"The first template that is found will be used."
msgstr ""
"Mengembalikan daftar dari nama-nama cetakan untuk dicari ketika membangun "
"cetakan. Cetakan pertama yang ditemukan akan digunakan."

msgid ""
"If :attr:`template_name` is specified, the default implementation will "
"return a list containing :attr:`template_name` (if it is specified)."
msgstr ""
"Jika :attr:`template_name` ditentukan, penerapan awalan akan mengembalikan "
"sebuah daftar mengandung :attr:`template_name`(jika itu ditentukan)."

msgid "Single object mixins"
msgstr "Mixin obyek tunggal"

msgid "``SingleObjectMixin``"
msgstr "``SingleObjectMixin``"

msgid ""
"Provides a mechanism for looking up an object associated with the current "
"HTTP request."
msgstr ""
"Menyediakan sebuah mekanisme untuk mencari sebuah obyek terkait dengan "
"permintaan HTTP saat ini."

msgid ""
"The name of the field on the model that contains the slug. By default, "
"``slug_field`` is ``'slug'``."
msgstr ""
"Nama dari bidang pada model yang mengandung keong. Secara awalan, "
"``slug_field`` adalah ``'slug'``."

msgid ""
"The name of the URLConf keyword argument that contains the slug. By default, "
"``slug_url_kwarg`` is ``'slug'``."
msgstr ""
"Nama dari argumen kata kunci URLConf yang mengandung keong. Secara awalan, "
"``slug_url_kwarg`` adalah ``'slug'``."

msgid ""
"The name of the URLConf keyword argument that contains the primary key. By "
"default, ``pk_url_kwarg`` is ``'pk'``."
msgstr ""
"Nama dari argumen kata kunci URLConf yang mengandung primary key. Secara "
"awalan, ``pk_url_kwarg`` adalah ``'pk'``."

msgid ""
"If ``True``, causes :meth:`get_object()` to perform its lookup using both "
"the primary key and the slug. Defaults to ``False``."
msgstr ""
"Jika ``True``, menyebabkan :meth:`get_object()` melakukan pencariannya "
"menggunakan kedua primay key dan keong. Awalan menjadi ``False``."

msgid ""
"This attribute can help mitigate `insecure direct object reference`_ "
"attacks. When applications allow access to individual objects by a "
"sequential primary key, an attacker could brute-force guess all URLs; "
"thereby obtaining a list of all objects in the application. If users with "
"access to individual objects should be prevented from obtaining this list, "
"setting ``query_pk_and_slug`` to ``True`` will help prevent the guessing of "
"URLs as each URL will require two correct, non-sequential arguments. Simply "
"using a unique slug may serve the same purpose, but this scheme allows you "
"to have non-unique slugs."
msgstr ""
"Atribut ini dapat membantu mengatasi serangan `insecure direct object "
"reference`_. Ketika aplikasi mengizinkan akses ke obyek-obyek pribadi dengan "
"primay key berurutan, seorang penyerang dapat menebak brute-force semua URL; "
"dengan demikian mendapatkan semua daftar dari semua obyek-obyek di aplikasi. "
"Jika pengguna dengan akses ke obyek-obyek pribadi harus dicegah dari "
"mendapatkan daftar ini, pengaturan ``query_pk_and_slug`` menjadi ``True`` "
"akan membantu mencegah menebak URL setiap URL akan membutuhkan dua benar, "
"argumen bukan-berurutan. Cukup menggunakan sebuah keong unik mungkin "
"melayani tujuan yang sama, tetapi skema ini mengizinkan anda memiliki keong "
"bukan-unik."

msgid ""
"Returns the single object that this view will display. If ``queryset`` is "
"provided, that queryset will be used as the source of objects; otherwise, :"
"meth:`get_queryset` will be used. ``get_object()`` looks for a :attr:"
"`pk_url_kwarg` argument in the arguments to the view; if this argument is "
"found, this method performs a primary-key based lookup using that value. If "
"this argument is not found, it looks for a :attr:`slug_url_kwarg` argument, "
"and performs a slug lookup using the :attr:`slug_field`."
msgstr ""
"Mengembalikan obyek tunggal yang tampilan ini akan diperlihatkan. Jika "
"``queryset`` disediakan, queryset itu akan digunakan sebagai sumber dari "
"obyek-obyek; jika tidak, :meth:`get_queryset` akan digunakan. "
"``get_object()`` mencari sebuah argumen :attr:`pk_url_kwarg` di argumen pada "
"tampilan; jika argumen ini ditemukan, metode ini melakukan sebuah pencarian "
"berdasarkan primary-key menggunakan nilai itu. Jika argumen ini tidak "
"ditemukan, itu mencari sebuah argumen :attr:`slug_url_kwarg`, dan melakukan "
"pencarian keong menggunakan :attr:`slug_field`."

msgid ""
"When :attr:`query_pk_and_slug` is ``True``, ``get_object()`` will perform "
"its lookup using both the primary key and the slug."
msgstr ""
"Ketika :attr:`query_pk_and_slug` adalah ``True``, ``get_object()`` akan "
"melakukan pencariannya menggunakan kedua primary key dan keong."

msgid ""
"Returns the queryset that will be used to retrieve the object that this view "
"will display. By default, :meth:`get_queryset` returns the value of the :"
"attr:`queryset` attribute if it is set, otherwise it constructs a :class:"
"`~django.db.models.query.QuerySet` by calling the ``all()`` method on the :"
"attr:`model` attribute's default manager."
msgstr ""
"Mengembalikan queryset yang akan digunakan mengambil obyek yang tampilan ini "
"akan diperlihatkan. Secara awalan, :meth:`get_queryset` mengembalikan nilai "
"dari atribut :attr:`queryset` jika itu disetel, jika tidak itu membangun "
"sebuah :class:`~django.db.models.query.QuerySet` dengan memanggil metode "
"``all()`` pada pengelola awalan atribut :attr:`model`."

msgid ""
"Return the context variable name that will be used to contain the data that "
"this view is manipulating. If :attr:`context_object_name` is not set, the "
"context name will be constructed from the ``model_name`` of the model that "
"the queryset is composed from. For example, the model ``Article`` would have "
"context object named ``'article'``."
msgstr ""
"Mengembalikan nama variabel konteks yang akan digunakan mewadahi daftar data "
"yang tampilan ini dimanipulasi. Jika :attr:`context_object_name` tidak "
"disetel, nama konteks akan dibangun dari ``model_name`` dari the model yang "
"queryset disusun dari. Sebagai contoh, model ``Article`` akan mempunyai "
"sebuah obyek konteks bernama ``article``."

msgid "Returns context data for displaying the object."
msgstr "Mengembalikan data konteks untuk menampilkan obyek."

msgid ""
"The base implementation of this method requires that the ``self.object`` "
"attribute be set by the view (even if ``None``). Be sure to do this if you "
"are using this mixin without one of the built-in views that does so."
msgstr ""
"Penerapan dasar dari metode ini membutuhkan bahwa atribut ``self.object`` "
"disetel oleh tampilan (bahkan jika ``None``). Pastikan melakukan ini jika "
"anda sedang menggunakan mixin ini tanpa satu dari tampilan siap-pakai yang "
"melakukan begitu."

msgid "It returns a dictionary with these contents:"
msgstr "Itu mengembalikan sebuah kamus dengan isi ini:"

msgid "``object``: The object that this view is displaying (``self.object``)."
msgstr "``object``: Obyek dimana tampilan ini diperlihatkan (``self.object``)."

msgid ""
"``context_object_name``: ``self.object`` will also be stored under the name "
"returned by :meth:`get_context_object_name`, which defaults to the "
"lowercased version of the model name."
msgstr ""
"``context_object_name``: ``self.object`` juga akan disimpan dibawah nama "
"dikembalikan oleh :meth:`get_context_object_name`, yang awalan ke versi "
"huruf kecil dari nama model."

msgid "Context variables override values from template context processors"
msgstr "Variabel konteks menimpa nilai-nilai dari pengolah konteks cetakan"

msgid ""
"Any variables from :meth:`get_context_data` take precedence over context "
"variables from :ref:`context processors <subclassing-context-"
"requestcontext>`. For example, if your view sets the :attr:`model` attribute "
"to :class:`~django.contrib.auth.models.User`, the default context object "
"name of ``user`` would override the ``user`` variable from the :func:`django."
"contrib.auth.context_processors.auth` context processor. Use :meth:"
"`get_context_object_name` to avoid a clash."
msgstr ""
"Tiap variabel dari :meth:`get_context_data` mengambil hak lebih tinggi "
"terhadap variabel konteks dari :ref:`context processors <subclassing-context-"
"requestcontext>`. Sebagai contoh, jika tampilan anda menyetel atribut :attr:"
"`model` pada  :class:`~django.contrib.auth.models.User`, awalan nama obyek "
"konteks dari ``user`` akan menimpa variabel ``user`` dari pengolah konteks :"
"func:`django.contrib.auth.context_processors.auth`. Gunakan :meth:"
"`get_context_object_name` untuk menghindari tabrakan."

msgid ""
"Returns the name of a slug field to be used to look up by slug. By default "
"this simply returns the value of :attr:`slug_field`."
msgstr ""
"Mengembalikan nama dari bidang keong untuk digunakan mencari oleh keong. "
"Secara awalan ini cukup mengembalikan nilai dari :attr:`slug_field`."

msgid "``SingleObjectTemplateResponseMixin``"
msgstr "``SingleObjectTemplateResponseMixin``"

msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a single object instance. Requires that the view it is mixed "
"with provides ``self.object``, the object instance that the view is "
"operating on. ``self.object`` will usually be, but is not required to be, an "
"instance of a Django model. It may be ``None`` if the view is in the process "
"of constructing a new instance."
msgstr ""
"Sebuah kelas mixin yang melakukan pembangunan tanggapan berdasarkan-cetakan "
"untuk tampilan yang beroperasi diatas instance obyek tunggal. Membutuhkan "
"bahwa tampila itu dicampur dengan menyediakan ``self.object``, instance "
"obyek yang tampilan beroperasi. ``self.object`` akan biasanya, tetapi itu "
"tidak diwajibkan, sebuah instance dari model Django. Itu mungkin ``None`` "
"jika tampilan di pengolahan dari membangun instance baru."

msgid ""
"The field on the current object instance that can be used to determine the "
"name of a candidate template. If either ``template_name_field`` itself or "
"the value of the ``template_name_field`` on the current object instance is "
"``None``, the object will not be used for a candidate template name."
msgstr ""
"Bidang pada instance obyek saat ini yang dapat digunakan untuk menentukan "
"nama dari calon cetakan. Jika antara ``template_name_field`` itu sendiri "
"atau nilai dari ``template_name_field`` pada instance obyek saat ini adalah "
"``None``, obyek tidak akan digunakan untuk calon nama cetakan."

msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_detail``."
msgstr ""
"Akhiran ditambahkan ke calon nama cetakan dibangkitkan-otomatis. Awalan "
"akhiran adalah ``_detail``."

msgid ""
"the contents of the ``template_name_field`` field on the object instance "
"that the view is operating upon (if available)"
msgstr ""
"isi dari bidang ``template_name_field`` pada instance obyek yang tampilan "
"sedang beroperasi diatas (jika tersedia)"

msgid "Clickjacking Protection"
msgstr "Perlindungan clickjacking"

msgid ""
"The clickjacking middleware and decorators provide easy-to-use protection "
"against `clickjacking`_.  This type of attack occurs when a malicious site "
"tricks a user into clicking on a concealed element of another site which "
"they have loaded in a hidden frame or iframe."
msgstr ""
"Middleware clickjacking dan penghias menyediakan perlindungan mudah-"
"digunakan terhadap `clickjacking`_. Serangan jenis ini muncul ketika sebuah "
"situs berbahaya memperdaya pengguna mengklik pada unsur tersembunyi dari "
"situ selain yang mereka telah muat di kerangka tersembunyi atau iframe."

msgid "An example of clickjacking"
msgstr "Sebuah contoh dari clickjacking"

msgid ""
"Suppose an online store has a page where a logged in user can click \"Buy Now"
"\" to purchase an item. A user has chosen to stay logged into the store all "
"the time for convenience. An attacker site might create an \"I Like Ponies\" "
"button on one of their own pages, and load the store's page in a transparent "
"iframe such that the \"Buy Now\" button is invisibly overlaid on the \"I "
"Like Ponies\" button. If the user visits the attacker's site, clicking \"I "
"Like Ponies\" will cause an inadvertent click on the \"Buy Now\" button and "
"an unknowing purchase of the item."
msgstr ""
"Andaikan sebuah toko daring mempunyai sebuah halaman dimana pengguna masuk "
"dapat mengklik \"Buy Now\" untuk membeli sebuah barang. Seorang pengguna "
"telah memilih untuk tetap masuk kedalam toko sepanjang waktu untuk "
"kenyamanan. Seorang penyerang situs mungkin membuat sebuah tombol \"I Like "
"Ponies\" pada satu dari halaman mereka sendiri, dan memuat halaman toko di "
"iframe transparan sehingga tombol \"Buy Now\" tidak terlihat melapisi pada "
"tombol \"I Like Ponies\". Jika pengguna mengunjungi situ spenyerang, "
"mengklik \"I Like Ponies\" akan menyebabkan klik tidak sengaja pada tombol "
"\"Buy Now\" dan pembelian tidak diketahui dari barang."

msgid "Preventing clickjacking"
msgstr "Mencegah clickjacking"

msgid ""
"Modern browsers honor the `X-Frame-Options`_ HTTP header that indicates "
"whether or not a resource is allowed to load within a frame or iframe. If "
"the response contains the header with a value of ``SAMEORIGIN`` then the "
"browser will only load the resource in a frame if the request originated "
"from the same site. If the header is set to ``DENY`` then the browser will "
"block the resource from loading in a frame no matter which site made the "
"request."
msgstr ""
"Permban modern menghargai kepala HTTP `X-Frame-Options`_ yang menunjukkan "
"apakah atau tidak sumber daya diizinkan memuat dalam sebuah kerangka atau "
"iframe. Jika tanggapan mengandung kepala dengan sebuah nilai dari "
"``SAMEORIGIN`` kemudian peramban akan hanya memuat sumber daya di sebuah "
"ekrangka jika permintaan berasal dari situ sama. Jika kepala disetel menjadi "
"``DENY`` kemudian peramban akan memblok sumber daya dari memuat dalam sebuah "
"kerangka tidak peduli situs mana membuat permintaan."

msgid ""
"Django provides a few simple ways to include this header in responses from "
"your site:"
msgstr ""
"Django menyediakan sedikit cara mudah untuk menyertakan kepala ini dalam "
"tanggapan dari situs anda:"

msgid "A simple middleware that sets the header in all responses."
msgstr "Sebuah middleware sederhana yang menyetel kepala di semua tanggapan."

msgid ""
"A set of view decorators that can be used to override the middleware or to "
"only set the header for certain views."
msgstr ""
"Sekumpulan dari penghias tampilan yang dapat digunakan untuk menimpa "
"middleware atau untuk hanya menyetel kepala untuk tampilan tertentu."

msgid ""
"The ``X-Frame-Options`` HTTP header will only be set by the middleware or "
"view decorators if it is not already present in the response."
msgstr ""
"Kepala HTTP ``X-Frame-Options`` akan hanya disetel dengan middleware atau "
"penghias tampilan jika itu belum hadir di tanggapan."

msgid "How to use it"
msgstr "Bagaimana menggunakannya"

msgid "Setting ``X-Frame-Options`` for all responses"
msgstr "Megnatur ``X-Frame-Options`` untuk semua tanggapan"

msgid ""
"To set the same ``X-Frame-Options`` value for all responses in your site, "
"put ``'django.middleware.clickjacking.XFrameOptionsMiddleware'`` to :setting:"
"`MIDDLEWARE`::"
msgstr ""
"Untuk menyetel nilai ``X-Frame-Options`` untuk semua tanggapan di situs "
"anda, taruh ``'django.middleware.clickjacking.XFrameOptionsMiddleware'`` "
"pada :setting:`MIDDLEWARE`::"

msgid ""
"This middleware is enabled in the settings file generated by :djadmin:"
"`startproject`."
msgstr ""
"Middleware diadakan di berkas pengaturan dibangkitkan oleh :djadmin:"
"`startproject`."

msgid ""
"By default, the middleware will set the ``X-Frame-Options`` header to "
"``SAMEORIGIN`` for every outgoing ``HttpResponse``. If you want ``DENY`` "
"instead, set the :setting:`X_FRAME_OPTIONS` setting::"
msgstr ""
"Secara awalan, middleware akan menyetel kepala ``X-Frame-Options`` ke "
"``SAMEORIGIN`` untuk setiap keluaran ``HttpResponse``. Jika anda ingin "
"``DENY`` sebagai gantinya, setel pengaturan :setting:`X_FRAME_OPTIONS`::"

msgid ""
"When using the middleware there may be some views where you do **not** want "
"the ``X-Frame-Options`` header set. For those cases, you can use a view "
"decorator that tells the middleware not to set the header::"
msgstr ""
"Ketika menggunakan middleware ada mungkin beberapa tampilan dimana dan "
"*tidak* ingin menyetel kepala ``X-Frame-Options``. Untuk kasus-kasus "
"tersebut, anda dapat menggunakan sebuah tampilan penghias yang memeribtahu "
"middleware tidak menyetel kepala::"

msgid "Setting ``X-Frame-Options`` per view"
msgstr "Mengatur ``X-Frame-Options`` per tampilan"

msgid ""
"To set the ``X-Frame-Options`` header on a per view basis, Django provides "
"these decorators::"
msgstr ""
"Untuk menyetel kepala ``X-Frame-Options`` pada dasar pertampilan, Django "
"menyediakan penghias ini::"

msgid ""
"Note that you can use the decorators in conjunction with the middleware. Use "
"of a decorator overrides the middleware."
msgstr ""
"Catat bahwa anda dapat menggunakan penghias di penghubungan dengan "
"middleware. Gunakan penghias menimpa middleware."

msgid "Limitations"
msgstr "Batasan"

msgid ""
"The ``X-Frame-Options`` header will only protect against clickjacking in a "
"modern browser. Older browsers will quietly ignore the header and need "
"`other clickjacking prevention techniques`_."
msgstr ""
"Kepala ``X-Frame-Options`` akan hanya melindungi terhadap clickjacking di "
"peramban modern. Peramban terlama akan secara diam mengabaikan kepala dan "
"butuh `other clickjacking prevention techniques`_."

msgid "Browsers that support ``X-Frame-Options``"
msgstr "Peramban yang mendukung ``X-Frame-Options``"

msgid "Internet Explorer 8+"
msgstr "Internet Explorer 8+"

msgid "Firefox 3.6.9+"
msgstr "Firefox 3.6.9+"

msgid "Opera 10.5+"
msgstr "Opera 10.5+"

msgid "Safari 4+"
msgstr "Safari 4+"

msgid "Chrome 4.1+"
msgstr "Chrome 4.1+"

msgid "See also"
msgstr "Lihat juga"

msgid "A `complete list`_ of browsers supporting ``X-Frame-Options``."
msgstr "Sebuah `complete list`_ dari peramban mendukung ``X-Frame-Options``"

msgid "Admin actions"
msgstr "Tindakan admin"

msgid ""
"The basic workflow of Django's admin is, in a nutshell, \"select an object, "
"then change it.\" This works well for a majority of use cases. However, if "
"you need to make the same change to many objects at once, this workflow can "
"be quite tedious."
msgstr ""
"Alir kerja dasar dari admin Django adalah, dalam kulit kacang, \"pilih "
"sebuah obyek, kemudian rubah itu.\" Ini bekerja baik untuk kebanyakan "
"penggunaan kasus. Bagaimanapun, jika anda butuh perubahan sama ke banyak "
"obyek sekali waktu, alir kerja ini bisa sangat membosankan."

msgid ""
"In these cases, Django's admin lets you write and register \"actions\" -- "
"simple functions that get called with a list of objects selected on the "
"change list page."
msgstr ""
"Di kasus-kasus ini, admin Django membiarkan anda menulis dan mendaftar "
"\"actions\" -- fungsi sederhana yang dipanggil dengan daftar dari obyek-"
"obyek terpilih pada halaman daftar rubah."

msgid ""
"If you look at any change list in the admin, you'll see this feature in "
"action; Django ships with a \"delete selected objects\" action available to "
"all models. For example, here's the user module from Django's built-in :mod:"
"`django.contrib.auth` app:"
msgstr ""
"Jika anda mencari daftar perubahan apapun di admin, anda akan melihat fitur "
"ini di tindakan; Django dikirim dengan tindakan \"menghapus obyek terpilih\" "
"tersedia untuk semua model. Sebagai contoh, ini adalah modul pengguna dari "
"aplikasi :mod:`django.contrib.auth` pasang-tetap Django :"

msgid ""
"The \"delete selected objects\" action uses :meth:`QuerySet.delete() <django."
"db.models.query.QuerySet.delete>` for efficiency reasons, which has an "
"important caveat: your model's ``delete()`` method will not be called."
msgstr ""
"Tindakan \"hapus obyek-obyek terpilih\" menggunakan :meth:`QuerySet.delete() "
"<django.db.models.query.QuerySet.delete>` untuk alasan efesiensi, yang "
"mempunyai surat keberatan yang penting: metode ``delete()`` model anda tidak "
"akan dipanggil."

msgid ""
"If you wish to override this behavior, simply write a custom action which "
"accomplishes deletion in your preferred manner -- for example, by calling "
"``Model.delete()`` for each of the selected items."
msgstr ""
"Jika anda berharap untuk menimpa perilaku ini, cukup tulis sebuah tindakan "
"penyesuaian yang menyelesaikan penghapus di cara yang dipilih -- sebagai "
"contoh, dengan memanggil ``Model.delete()`` untuk setiap dari barang "
"terpilih."

msgid ""
"For more background on bulk deletion, see the documentation on :ref:`object "
"deletion <topics-db-queries-delete>`."
msgstr ""
"Untuk latar belakang lebih pada penghapusan jumlah besar, lihat dokumentasi "
"pada :ref:`object deletion <topics-db-queries-delete>`."

msgid "Read on to find out how to add your own actions to this list."
msgstr ""
"Baca untuk menemukan bagaimana menambah tindakan anda sendiri ke daftar ini."

msgid "Writing actions"
msgstr "Menulis tindakan"

msgid "The easiest way to explain actions is by example, so let's dive in."
msgstr ""
"Cara mudah untukmenjelaskan tindakan adalah dengan contoh, jadi mari kita "
"selami. "

msgid ""
"A common use case for admin actions is the bulk updating of a model. Imagine "
"a simple news application with an ``Article`` model::"
msgstr ""
"Penggunaan kasus umum untuk tindakan admin adalah memperbaharui dalam jumlah "
"besar dari sebuah model. Bayangkan aplikasi berita sederhana dengan model "
"``Article``::"

msgid ""
"A common task we might perform with a model like this is to update an "
"article's status from \"draft\" to \"published\". We could easily do this in "
"the admin one article at a time, but if we wanted to bulk-publish a group of "
"articles, it'd be tedious. So, let's write an action that lets us change an "
"article's status to \"published.\""
msgstr ""
"Tugas utama kami mungkin lakukan dengan sebuah model seperti ini adalah "
"memperbaharui sebuah keadaan article dari \"draft\" menjadi \"published\". "
"Kami dapat dengan mudah melakukan ini di admin satu artikel pada sekali "
"waktu, tetapi jika kami ingin menerbitkan-jumlah besar kelompok dari "
"artikel, itu akan membosankan. Jadi, mari kita menulis sebuah tindakan yang "
"membuat kita merubah sebuah keadaan artikel menjadi \"published.\""

msgid "Writing action functions"
msgstr "Menulis fungsi tindakan"

msgid ""
"First, we'll need to write a function that gets called when the action is "
"triggered from the admin. Action functions are just regular functions that "
"take three arguments:"
msgstr ""
"Pertama, kami akan butuh menulis sebuah fungsi yang dipanggil ketika "
"tindakan dipicu dari admin. Tindakan berbagi fungsi hanya fungsi biasa yang "
"mengambil tiga argumen:"

msgid "The current :class:`ModelAdmin`"
msgstr ":class:`ModelAdmin` saat ini"

msgid "An :class:`~django.http.HttpRequest` representing the current request,"
msgstr "Sebuah :class:`~django.http.HttpRequest` mewakili permintaan saat ini,"

msgid ""
"A :class:`~django.db.models.query.QuerySet` containing the set of objects "
"selected by the user."
msgstr ""
"Sebuah :class:`~django.db.models.query.QuerySet` mengandung sekumpulan dari "
"obyek-obyek terpilih oleh pengguna."

msgid ""
"Our publish-these-articles function won't need the :class:`ModelAdmin` or "
"the request object, but we will use the queryset::"
msgstr ""
"Fungsi terbitan-artikel-ini kami tidak butuh :class:`ModelAdmin` atau obyek "
"permintaan, tetapi kami akan menggunakan queryset::"

msgid ""
"For the best performance, we're using the queryset's :ref:`update method "
"<topics-db-queries-update>`. Other types of actions might need to deal with "
"each object individually; in these cases we'd just iterate over the "
"queryset::"
msgstr ""
"Untuk penampilan terbaik, kami sedang menggunakan :ref:`update method "
"<topics-db-queries-update>` queryset. Jenis-jenis lain dari tindakan mungkin "
"butuh berurusan dengan setiap obyek pribadi; di kasus-kasus ini kami hanya "
"cukup berulang terhadap queryset::"

msgid ""
"That's actually all there is to writing an action! However, we'll take one "
"more optional-but-useful step and give the action a \"nice\" title in the "
"admin. By default, this action would appear in the action list as \"Make "
"published\" -- the function name, with underscores replaced by spaces. "
"That's fine, but we can provide a better, more human-friendly name by giving "
"the ``make_published`` function a ``short_description`` attribute::"
msgstr ""
"Itu benar-benar semuanya ada adalah menulis sebuah tindakan! Bagaimanapun, "
"kami akan mengambil satu atau lebih langkah pilihan-tetapi-berguna dan "
"memberikan tindakan sebuah judul \"nice\" dalam admin. Secara awalan, "
"tindakan ini akan muncul dalam daftar tindakan sebagai \"Make published\" -- "
"nama fungsi, dengan garis bawah diganti oleh ruang. Tidak apa-apa, tetai "
"kami dapat menyediakan lebih baik, nama lebih ramah-manusia dengan "
"memberikan fungsi `make_published`` sebuah atribut ``short_description``::"

msgid ""
"This might look familiar; the admin's ``list_display`` option uses the same "
"technique to provide human-readable descriptions for callback functions "
"registered there, too."
msgstr ""
"Ini mungkin terlihat akrab; pilihan ``list_display`` admin menggunakan "
"teknik sama untuk menyediakan gambaran dapat dibaca-manusia untuk fungsi "
"callback terdaftar disana, juga."

msgid "Adding actions to the :class:`ModelAdmin`"
msgstr "Menambahkan tindakan pada :class:`ModelAdmin`"

msgid ""
"Next, we'll need to inform our :class:`ModelAdmin` of the action. This works "
"just like any other configuration option. So, the complete ``admin.py`` with "
"the action and its registration would look like::"
msgstr ""
"Selanjutnya, kami akan butuh menginformasikan :class:`ModelAdmin` kami dari "
"tindakan. Ini bekerja seperti piliha konfigurasi lain apapun. Jadi, ``admin."
"py`` lengkap dengan tindakan dan pendaftarannya akan terlihat seperti::"

msgid ""
"That code will give us an admin change list that looks something like this:"
msgstr ""
"Kode akan memberikan kami sebuah daftar rubah admin yang terlihat sesuatu "
"seperti ini:"

msgid ""
"That's really all there is to it! If you're itching to write your own "
"actions, you now know enough to get started. The rest of this document just "
"covers more advanced techniques."
msgstr ""
"Itu benar-benar semua yang ada untuk itu! Jika anda sedang gatal menulis "
"tindakan anda sendiri, anda sekarang cukup mengetahui untuk memulai. Sisanya "
"dari dokumen ini hanya mencangkup teknik-teknik lebih lanjut."

msgid "Handling errors in actions"
msgstr "Penanganan kesalahan di tindakan"

msgid ""
"If there are foreseeable error conditions that may occur while running your "
"action, you should gracefully inform the user of the problem. This means "
"handling exceptions and using :meth:`django.contrib.admin.ModelAdmin."
"message_user` to display a user friendly description of the problem in the "
"response."
msgstr ""
"Jika ada kondisi kesalahan mendatang yang mungkin muncul selagi menjalankan "
"tindakan anda, anda harus anggun menginformasikan pengguna dari masalah. Ini "
"berarti menangani pengecualian dan menggunakan :meth:`django.contrib.admin."
"ModelAdmin.message_user` untuk memperlihatkan gambaran yang ramah pengguna "
"dari masalah di tanggapan."

msgid "Advanced action techniques"
msgstr "Teknik-teknik tindakan lanjutan"

msgid ""
"There's a couple of extra options and possibilities you can exploit for more "
"advanced options."
msgstr ""
"Ada sepasang pilihan tambahan dan kemungkinan anda dapat menggunakan lebih "
"pilihan  lanjutan"

msgid "Actions as :class:`ModelAdmin` methods"
msgstr "Tindakan sebagai metode :class:`ModelAdmin`"

msgid ""
"The example above shows the ``make_published`` action defined as a simple "
"function. That's perfectly fine, but it's not perfect from a code design "
"point of view: since the action is tightly coupled to the ``Article`` "
"object, it makes sense to hook the action to the ``ArticleAdmin`` object "
"itself."
msgstr ""
"Contoh diatas menunjukkan tindakan ``make_published`` ditentukan sebagai "
"sebuah fungsi sederhana. Itu sangat baik, tetapi itu tidak sempurna dari "
"titik rancangan kode dari tampilan: sejak tindakan erat digabungkan ke obyek "
"``Article``, itu masuk akal mengkaitkan tindakan ke obyek ``ArticleAdmin`` "
"itu sendiri."

msgid "That's easy enough to do::"
msgstr "Itu cukup mudah melakukan::"

msgid ""
"Notice first that we've moved ``make_published`` into a method and renamed "
"the ``modeladmin`` parameter to ``self``, and second that we've now put the "
"string ``'make_published'`` in ``actions`` instead of a direct function "
"reference. This tells the :class:`ModelAdmin` to look up the action as a "
"method."
msgstr ""
"Perhatikan pertama yang kami telah pindahkan ``make_published`` kedalam "
"metode dan dinamai kembali parameter ``modeladmin`` pada ``self``, dan kedua "
"kami telah sekarang menaruh string ``'make_published'`` dalam ``actions`` "
"daripada acuan fungsi langsung. Ini mengatakan :class:`ModelAdmin` untuk "
"mencari tindakan sebagai sebuah metode."

msgid ""
"Defining actions as methods gives the action more straightforward, idiomatic "
"access to the :class:`ModelAdmin` itself, allowing the action to call any of "
"the methods provided by the admin."
msgstr ""
"Menentukan tindakan sebagai metode memberikan tindakan lebih mudah, akses "
"idiomatis ke :class:`ModelAdmin` itu sendiri, mengizinkan tindakan memanggil "
"metode apapun disediakan oleh admin."

msgid ""
"For example, we can use ``self`` to flash a message to the user informing "
"her that the action was successful::"
msgstr ""
"Sebagai contoh, kami dapat menggunakan ``self`` pada sebuah pesan sekejab ke "
"pengguna menginformasikan dia bahwa tindakan telah berhasil::"

msgid ""
"This make the action match what the admin itself does after successfully "
"performing an action:"
msgstr ""
"Ini membuat tindakan cocok apa yang admin itu sendiri lakukan setelah "
"berhasil melakukan sebuah tindakan:"

msgid "Actions that provide intermediate pages"
msgstr "Tindakan yang menyediakan halaman menengah"

msgid ""
"By default, after an action is performed the user is simply redirected back "
"to the original change list page. However, some actions, especially more "
"complex ones, will need to return intermediate pages. For example, the built-"
"in delete action asks for confirmation before deleting the selected objects."
msgstr ""
"Secara awalan, setelah sebuah tindakan dilakukan pengguna cukup mengalihkan "
"kembali kehalaman  daftar rubah asli. Bagaimanapun, beberapa tindakan, "
"khususnya satu lebih rumit, akan butuh mengembalikan halaman menengah. "
"Sebagai contoh, tindakan hapus siap-pakai meminta untuk penegasan sebelum "
"menghapus obyek-obyek terpilih"

msgid ""
"To provide an intermediary page, simply return an :class:`~django.http."
"HttpResponse` (or subclass) from your action. For example, you might write a "
"simple export function that uses Django's :doc:`serialization functions </"
"topics/serialization>` to dump some selected objects as JSON::"
msgstr ""
"Untuk menyediakan sebuah halaman menengah, cukup kembalikan sebuah :class:"
"`~django.http.HttpResponse` (atau subkelas) dari tindakan anda. Sebagai "
"contoh, anda mungkin menulis sebuah fungsi ekspor sederhana yang "
"menggunakan :doc:`serialization functions </topics/serialization>` Django "
"unutk membuang beberapa obyek-obyek terpilih sebagai JSON::"

msgid ""
"Generally, something like the above isn't considered a great idea. Most of "
"the time, the best practice will be to return an :class:`~django.http."
"HttpResponseRedirect` and redirect the user to a view you've written, "
"passing the list of selected objects in the GET query string. This allows "
"you to provide complex interaction logic on the intermediary pages. For "
"example, if you wanted to provide a more complete export function, you'd "
"want to let the user choose a format, and possibly a list of fields to "
"include in the export. The best thing to do would be to write a small action "
"that simply redirects to your custom export view::"
msgstr ""
"Umumnya, sesuatu seperti diatas tidak dianggap ide yang hebat. Kebanyakan "
"dari waktu, praktik terbaik akan mengembalikan sebuah :class:`~django.http."
"HttpResponseRedirect` dan pengalihan pengguna ke sebuah tamilan anda telah "
"tulis, melewatkan daftar dari obyek-obyek terpilih di string permintaan GET. "
"Ini mengizinkan anda menyediakan logika interaksi rumit pada halaman "
"penengah. Sebagai contoh, jika anda ingin menyediakan fungsi ekspor lebih "
"rumit, anda ingin membiarkan penggua memilih bentuk, dan kemungkinan daftar "
"dari bidang-bidang untuk disertakan di export. Hal terbaik untuk melakukan "
"adalah menulis tindakan kecil yang cukup mengalihkan tampilan ekspor "
"penyesuaian anda::"

msgid ""
"As you can see, the action is the simple part; all the complex logic would "
"belong in your export view. This would need to deal with objects of any "
"type, hence the business with the ``ContentType``."
msgstr ""
"Seperti anda dapat lihat, tindakan adalah bagian sederhana; semua logika "
"rumit akan milik di tampilan ekspor anda. Ini akan butuh berurusan dengan "
"obyek-obyek dari jenis apapun, dengan demikian bisnis dengan ``ContentType``."

msgid "Writing this view is left as an exercise to the reader."
msgstr "Meunlis tampilan ini adalah sisa dari sebuah latihan ke pembaca."

msgid "Making actions available site-wide"
msgstr "Membuat tindakan tersedia lebar-situs"

msgid ""
"Some actions are best if they're made available to *any* object in the admin "
"site -- the export action defined above would be a good candidate. You can "
"make an action globally available using :meth:`AdminSite.add_action()`. For "
"example::"
msgstr ""
"Beberapa tindakan adalah terbaik jika mereka membuat tersedia pada *setiap* "
"obyek di situs admin -- tindakan ekspor ditentukan diatas akan menjadi calon "
"bagus. Anda dapat membuat sebuah tindakan secara global tersedia "
"menggunakan :meth:`AdminSite.add_action()`. Sebagai contoh::"

msgid ""
"This makes the ``export_selected_objects`` action globally available as an "
"action named \"export_selected_objects\". You can explicitly give the action "
"a name -- good if you later want to programmatically :ref:`remove the action "
"<disabling-admin-actions>` -- by passing a second argument to :meth:"
"`AdminSite.add_action()`::"
msgstr ""
"Ini membuat tindakan ``export_selected_objects`` secara global tersedia "
"sebagai sebuah tindakan bernama \"export_selected_objects\". Anda dapat "
"dengan jelas memberikan tindakan sebuah nama -- bagus jika anda kemudian "
"ingin secara program :ref:`remove the action <disabling-admin-actions>` -- "
"dengan melewatkan argumen kedua ke :meth:`AdminSite.add_action()`::"

msgid "Disabling actions"
msgstr "Meniadakan tindakan"

msgid ""
"Sometimes you need to disable certain actions -- especially those :ref:"
"`registered site-wide <adminsite-actions>` -- for particular objects. "
"There's a few ways you can disable actions:"
msgstr ""
"Terkadang anda butuh meniadakan beberapa tindakan -- khususnya itu :ref:"
"`registered site-wide <adminsite-actions>` -- untuk obyek-obyek tertentu. "
"Ada sedikit cara anda dapat meniadakan tindakan:"

msgid "Disabling a site-wide action"
msgstr "Meniadakan tindakan lebar-situs"

msgid ""
"If you need to disable a :ref:`site-wide action <adminsite-actions>` you can "
"call :meth:`AdminSite.disable_action()`."
msgstr ""
"Jika anda butuh meniadakan sebuah :ref:`site-wide action <adminsite-"
"actions>` anda dapat memanggil :meth:`AdminSite.disable_action()`."

msgid ""
"For example, you can use this method to remove the built-in \"delete "
"selected objects\" action::"
msgstr ""
"Sebagai contoh, anda dapat menggunakan metode ini memindahkan tindakan "
"\"delete selected objects\" siap-pakai::"

msgid ""
"Once you've done the above, that action will no longer be available site-"
"wide."
msgstr ""
"Sekali anda telah melakukan diatas, tindakan itu akan tidak lagi tersedia "
"lebar-situs."

msgid ""
"If, however, you need to re-enable a globally-disabled action for one "
"particular model, simply list it explicitly in your ``ModelAdmin.actions`` "
"list::"
msgstr ""
"Jika, bagaimanapun, anda butuh mengadakan kembali tindakan ditiadakan-global "
"untuk satu model tertentu, cukup daftar itu dengan jelas di daftar "
"``ModelAdmin.actions`` anda::"

msgid "Disabling all actions for a particular :class:`ModelAdmin`"
msgstr "Meniadakan semua tindakan untuk :class:`ModelAdmin` tertentu"

msgid ""
"If you want *no* bulk actions available for a given :class:`ModelAdmin`, "
"simply set :attr:`ModelAdmin.actions` to ``None``::"
msgstr ""
"Jika anda ingin *tidak* tindakan dalam jumlah besar tersedia untuk :class:"
"`ModelAdmin` yang diberikan, cukup setel :attr:`ModelAdmin.actions` menjadi "
"``None``:: "

msgid ""
"This tells the :class:`ModelAdmin` to not display or allow any actions, "
"including any :ref:`site-wide actions <adminsite-actions>`."
msgstr ""
"Ini memberitahu :class:`ModelAdmin` untuk tidak memperlihatkan atau "
"mengizinkan tindakan apapun, termasuk :ref:`site-wide actions <adminsite-"
"actions>` apapun."

msgid "Conditionally enabling or disabling actions"
msgstr "Tindakan mengadakan dan meniadakan bersyarat"

msgid ""
"Finally, you can conditionally enable or disable actions on a per-request "
"(and hence per-user basis) by overriding :meth:`ModelAdmin.get_actions`."
msgstr ""
"Akhirnya, anda dapat secara kondisional mengadakan atau meniadakan tindakan-"
"tindakan pada sebuah per-permintaan (dan karenanya berdasarkan per-pengguna) "
"dengan mengutamakan :meth:`ModelAdmin.get_actions`."

msgid ""
"This returns a dictionary of actions allowed. The keys are action names, and "
"the values are ``(function, name, short_description)`` tuples."
msgstr ""
"Ini mengembalikan sebuah kamus dari tindakan diizinkan. Kunci-kunci adalah "
"nama-nama tindkan, dan nilai-nilai adalah tuple ``(function, name, "
"short_description)``."

msgid ""
"Most of the time you'll use this method to conditionally remove actions from "
"the list gathered by the superclass. For example, if I only wanted users "
"whose names begin with 'J' to be able to delete objects in bulk, I could do "
"the following::"
msgstr ""
"Kebanyakan waktu anda akan menggunakan metode ini secara kondisional "
"memintahkan tindakan-tindakan dari daftar dikumpulkan oleh superkelas. "
"Sebagai contoh, jika Saya hanya menginginkan pengguna-pengguna yang nama-"
"namanya dimulai dengan 'J' untuk dapat menghapus obyek-obyek dalam jumlah "
"besar, Saya dapat melakukan berikut::"

msgid "The Django admin documentation generator"
msgstr "Pembangkit dokumentasi admin Django"

msgid ""
"Django's :mod:`~django.contrib.admindocs` app pulls documentation from the "
"docstrings of models, views, template tags, and template filters for any app "
"in :setting:`INSTALLED_APPS` and makes that documentation available from "
"the :mod:`Django admin <django.contrib.admin>`."
msgstr ""
"Aplikasi :mod:`~django.contrib.admindocs` Django menarik dokumentasi dari "
"docstring dari model, tampilan etiket cetakan, dan penyaring cetakan untuk "
"aplikasi apapun di :setting:`INSTALLED_APPS` dan membuat dokumentasi itu "
"tersedia dari :mod:`Django admin <django.contrib.admin>`. "

msgid "Overview"
msgstr "Ikhtisar"

msgid ""
"To activate the :mod:`~django.contrib.admindocs`, you will need to do the "
"following:"
msgstr ""
"Untuk mengaktifkan :mod:`~django.contrib.admindocs`, anda akan butuh "
"melakukan berikut:"

msgid "Add :mod:`django.contrib.admindocs` to your :setting:`INSTALLED_APPS`."
msgstr ""
"Tambah :mod:`django.contrib.admindocs` ke :setting:`INSTALLED_APPS` anda."

msgid ""
"Add ``url(r'^admin/doc/', include('django.contrib.admindocs.urls'))`` to "
"your ``urlpatterns``. Make sure it's included *before* the ``r'^admin/'`` "
"entry, so that requests to ``/admin/doc/`` don't get handled by the latter "
"entry."
msgstr ""
"Tambah ``url(r'^admin/doc/', include('django.contrib.admindocs.urls'))`` ke "
"``urlpatterns`` anda. Pastikan itu disertakan *sebelum* masukan "
"``r'^admin/'``, sehingga permintaan itu pada  ``/admin/doc/`` tidak "
"ditangani oleh masukan terakhir."

msgid "Install the docutils Python module (http://docutils.sf.net/)."
msgstr "Pasang modul Python docutils (http://docutils.sf.net/)."

msgid ""
"**Optional:** Using the admindocs bookmarklets requires ``django.contrib."
"admindocs.middleware.XViewMiddleware`` to be installed."
msgstr ""
"**Pilihan:** Menggunakan Bookmark admindoc membutuhkan ``django.contrib."
"admindocs.middleware.XViewMiddleware`` untuk dipasang."

msgid ""
"Once those steps are complete, you can start browsing the documentation by "
"going to your admin interface and clicking the \"Documentation\" link in the "
"upper right of the page."
msgstr ""
"Sekali langkah-langkah tersebut lengkap, anda dapat mulai menjelajah "
"dokumentasi dengan pergi ke antarmuka admin anda dan mengklik tautan "
"\"Documentation\" di atas kanan halaman."

msgid "Documentation helpers"
msgstr "Dokumentasi pembantu"

msgid ""
"The following special markup can be used in your docstrings to easily create "
"hyperlinks to other components:"
msgstr ""
"Markah khusus beikur dapat digunakan di docstring anda untuk dengan mudah "
"membuat hyperlink ke komponen lain:"

msgid "Django Component"
msgstr "Komponen Django"

msgid "reStructuredText roles"
msgstr "Peran reStructuredText"

msgid "``:model:`app_label.ModelName```"
msgstr "``:model:`app_label.ModelName```"

msgid "Views"
msgstr "View"

msgid "``:view:`app_label.view_name```"
msgstr "``:view:`app_label.view_name```"

msgid "Template tags"
msgstr "Tag templat"

msgid "``:tag:`tagname```"
msgstr "``:tag:`tagname```"

msgid "Template filters"
msgstr "Filter templat"

msgid "``:filter:`filtername```"
msgstr "``:filter:`filtername```"

msgid "``:template:`path/to/template.html```"
msgstr "``:template:`path/to/template.html```"

msgid "Model reference"
msgstr "Acuan model"

msgid ""
"The **models** section of the ``admindocs`` page describes each model in the "
"system along with all the fields and methods available on it. Relationships "
"to other models appear as hyperlinks. Descriptions are pulled from "
"``help_text`` attributes on fields or from docstrings on model methods."
msgstr ""
"Bagian **model** dari halaman admindoc menggambarkan setiap model di sistem "
"bersama dengan semua bidang dan metode tersedia pada itu. Hubungan ke model "
"lain muncul sebagaihyperlink. Gambaran ditarik dari atribut ``help_text`` "
"pada bidang atau dari docstring pada metode model."

msgid "A model with useful documentation might look like this::"
msgstr "Sebuah model dengan dokumentasi berguna mungkin terlihat seperti ini::"

msgid "View reference"
msgstr "Lihat acuan"

msgid ""
"Each URL in your site has a separate entry in the ``admindocs`` page, and "
"clicking on a given URL will show you the corresponding view. Helpful things "
"you can document in your view function docstrings include:"
msgstr ""
"Setiap URL di situs anda mempunyai masukan terpisah di halaman "
"``admindocs``, dan mengklik pada URL yang diberikan akan menunjukkan anda "
"tampilan berhubungan. Hal-hal membantu anda dapat dokumentasikan di "
"docstring fungsi tampilan anda termasuk:"

msgid "A short description of what the view does."
msgstr "Sebuah gambaran singkat dari apa yang tampilan lakukan."

msgid ""
"The **context**, or a list of variables available in the view's template."
msgstr "**konteks**, atau daftar dari variabel tersedia di cetakan tampilan."

msgid "The name of the template or templates that are used for that view."
msgstr ""
"Nama dari cetakan atau cetakan-cetakan yang digunakan untuk tampilan itu."

msgid "For example::"
msgstr "Sebagai contoh::"

msgid "Template tags and filters reference"
msgstr "Etiket cetakan dan acuan saringan"

msgid ""
"The **tags** and **filters** ``admindocs`` sections describe all the tags "
"and filters that come with Django (in fact, the :ref:`built-in tag reference "
"<ref-templates-builtins-tags>` and :ref:`built-in filter reference <ref-"
"templates-builtins-filters>` documentation come directly from those pages). "
"Any tags or filters that you create or are added by a third-party app will "
"show up in these sections as well."
msgstr ""
"Bagian ``admindocs`` **etiket** and **penyaring** menggambarkan semua etiket "
"dan penyaring yang datang dengan Django (faktanya, dokumentasi :ref:`built-"
"in tag reference <ref-templates-builtins-tags>` dan :ref:`built-in filter "
"reference <ref-templates-builtins-filters>` datang langsung dari halaman-"
"halaman tersebut). Etiket atau penyaring apapun yang anda buat atau "
"ditambahkan oleh aplikasi pihak-ketiga akan tampil di bagian-bgian ini juga."

msgid "Template reference"
msgstr "Acuan cetakan"

msgid ""
"While ``admindocs`` does not include a place to document templates by "
"themselves, if you use the ``:template:`path/to/template.html``` syntax in a "
"docstring the resulting page will verify the path of that template with "
"Django's :ref:`template loaders <template-loaders>`. This can be a handy way "
"to check if the specified template exists and to show where on the "
"filesystem that template is stored."
msgstr ""
"Selagi ``admindocs`` tidak menyertakan tempat untuk cetakan dokumen oleh "
"mereka sendiri, jika anda menggunakan sintaksis ``:template:`path/to/"
"template.html``` di sebuah docstring halaman hasil akan memeriksa jalur dari "
"cetakan itu dengan :ref:`template loaders <template-loaders>` Django. Ini "
"dapat menjadi cara mudah memeriksa jika cetakan ditentukan ada dan untuk "
"menunjukkan dimana pada sistem berkas cetakan itu disimpan."

msgid "Included Bookmarklets"
msgstr "Disertakan Bookmarklet"

msgid "One bookmarklet is available from the ``admindocs`` page:"
msgstr "Satu bookmarklet tersedia dari halaman ``admindocs``:"

msgid "Documentation for this page"
msgstr "Dokumentasi untuk laman ini"

msgid ""
"Jumps you from any page to the documentation for the view that generates "
"that page."
msgstr ""
"Buka dari laman apa saja ke laman dokumentasi untuk view yang menghasilkan "
"laman tersebut."

msgid ""
"Using this bookmarklet requires that ``XViewMiddleware`` is installed and "
"that you are logged into the :mod:`Django admin <django.contrib.admin>` as "
"a :class:`~django.contrib.auth.models.User` with :attr:`~django.contrib.auth."
"models.User.is_staff` set to ``True``."
msgstr ""
"Menggunakan bookmark ini mewajibkan bahwa ``XViewMiddleware`` dipasang dan "
"bahwa anda masuk kedalam :mod:`Django admin <django.contrib.admin>` sebagai "
"sebuah :class:`~django.contrib.auth.models.User` dengan :attr:`~django."
"contrib.auth.models.User.is_staff` disetel menjadi ``True``."

msgid "The Django admin site"
msgstr "Situs admin Django"

msgid ""
"One of the most powerful parts of Django is the automatic admin interface. "
"It reads metadata from your models to provide a quick, model-centric "
"interface where trusted users can manage content on your site. The admin's "
"recommended use is limited to an organization's internal management tool. "
"It's not intended for building your entire front end around."
msgstr ""
"Satu dari bagian yang paling berkuasa dari Django adalah antarmuka admin "
"otomatis. Itu membaca metadata dari model anda untuk menyediakan cepat, "
"antarmuka terpusat-model dimana pengguna dipercaya dapat mengelola isi pada "
"situs anda. Dianjurkan admin menggunakan batasannya ke sebuah alat pengelola "
"internal organisasi. Itu tidak dimaksudkan untuk membangun keseluruhan front "
"end disekeliling."

msgid ""
"The admin has many hooks for customization, but beware of trying to use "
"those hooks exclusively. If you need to provide a more process-centric "
"interface that abstracts away the implementation details of database tables "
"and fields, then it's probably time to write your own views."
msgstr ""
"Admin mempunyai banyak kaitan untuk penyesuaian, tetapi hati-hati dari "
"mencoba menggunakan kaitan tersebut secara khusus. Jika anda butuh "
"menyediakan antarmuka pengolahan-terpusat yang memisahkan rincian penerapan "
"dari tabel-tabel dan bidang-bidang basisdata, kemudian itu mungkin waktu "
"utuk menulis tampilan anda sendiri."

msgid ""
"In this document we discuss how to activate, use, and customize Django's "
"admin interface."
msgstr ""
"Di dokumen ini kami mengobrol bagaimana mengaktifkan pengguna, menggunakan, "
"dan menyesuaikan antarmuka admin Django."

msgid ""
"The admin is enabled in the default project template used by :djadmin:"
"`startproject`."
msgstr ""
"Admin diadakan di cetakan proyek awalan digunakan oleh :djadmin:"
"`startproject`."

msgid "For reference, here are the requirements:"
msgstr "Untuk acuan, ini adalah persyaratan:"

msgid ""
"Add ``'django.contrib.admin'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Tambah ``'django.contrib.admin'`` ke pengaturan :setting:`INSTALLED_APPS` "
"anda."

msgid ""
"The admin has four dependencies - :mod:`django.contrib.auth`, :mod:`django."
"contrib.contenttypes`, :mod:`django.contrib.messages` and :mod:`django."
"contrib.sessions`.  If these applications are not in your :setting:"
"`INSTALLED_APPS` list, add them."
msgstr ""
"Admin mempunyai empat ketergantungan - :mod:`django.contrib.auth`, :mod:"
"`django.contrib.contenttypes`, :mod:`django.contrib.messages` dan :mod:"
"`django.contrib.sessions`. Jika aplikasi ini tidak di daftar :setting:"
"`INSTALLED_APPS` anda, tambah mereka."

msgid ""
"Add ``django.contrib.auth.context_processors.auth`` and ``django.contrib."
"messages.context_processors.messages`` to the ``'context_processors'`` "
"option of the ``DjangoTemplates`` backend defined in your :setting:"
"`TEMPLATES` as well as :class:`django.contrib.auth.middleware."
"AuthenticationMiddleware` and :class:`django.contrib.messages.middleware."
"MessageMiddleware` to :setting:`MIDDLEWARE`. These are all active by "
"default, so you only need to do this if you've manually tweaked the settings."
msgstr ""
"Tambah ``django.contrib.auth.context_processors.auth`` dan ``django.contrib."
"messages.context_processors.messages`` pada pilihan ``'context_processors'`` "
"dari backend ``DjangoTemplates`` ditentukan di :setting:`TEMPLATES` anda "
"sama halnya :class:`django.contrib.auth.middleware.AuthenticationMiddleware` "
"dan :class:`django.contrib.messages.middleware.MessageMiddleware` pada :"
"setting:`MIDDLEWARE`. Ini semua aktif secara awalan, jadi anda hanya butuh "
"melakukan ini jika anda telah secara manual merubah pengaturan."

msgid ""
"Determine which of your application's models should be editable in the admin "
"interface."
msgstr ""
"Tentukan yang mana dari model aplikasi anda harus disunting di antarmuka "
"admin."

msgid ""
"For each of those models, optionally create a ``ModelAdmin`` class that "
"encapsulates the customized admin functionality and options for that "
"particular model."
msgstr ""
"Untuk setiap dari model-model tersebut, pilihan buat sebuah kelas "
"``ModelAdmin`` yang membungkus disesuaikan fungsionalitas admin dan pilihan "
"untuk model tertentu itu."

msgid ""
"Instantiate an ``AdminSite`` and tell it about each of your models and "
"``ModelAdmin`` classes."
msgstr ""
"Instansiasi sebuah ``AdminSite`` dan memberitahu itu tentang setiap dari "
"model anda dan kelas-kelas ``ModelAdmin``."

msgid "Hook the ``AdminSite`` instance into your URLconf."
msgstr "Mengkaitkan instance ``AdminSite`` kedalam URLconf anda."

msgid ""
"After you've taken these steps, you'll be able to use your Django admin site "
"by visiting the URL you hooked it into (``/admin/``, by default). If you "
"need to create a user to login with, you can use the :djadmin:"
"`createsuperuser` command."
msgstr ""
"Setelah anda mengambil langkah-langkah ini, anda akan dapat menggunakan "
"situs admin Django anda dengan mengunjungi URL anda tautkan itu kedalam (``/"
"admin/``, secara awalan). Jika anda butuh membuat seorang pengguna untuk "
"masuk, anda dapat menggunakan perintah :djadmin:`createsuperuser`. "

msgid "Other topics"
msgstr "Topik lainnya"

msgid ""
"For information about serving the static files (images, JavaScript, and CSS) "
"associated with the admin in production, see :ref:`serving-files`."
msgstr ""
"Untuk informasi tentang melayani berkas-berkas tetap (gambar, JavaScript, "
"dan CSS) terhubung dengan admin di produksi, lihat :ref:`serving-files`."

msgid "Having problems?  Try :doc:`/faq/admin`."
msgstr "Mempunyai masalah? Coba :doc:`/faq/admin`."

msgid "``ModelAdmin`` objects"
msgstr "Obyek ``ModelAdmin``"

msgid ""
"The ``ModelAdmin`` class is the representation of a model in the admin "
"interface. Usually, these are stored in a file named ``admin.py`` in your "
"application. Let's take a look at a very simple example of the "
"``ModelAdmin``::"
msgstr ""
"Kelas ``ModelAdmin`` adalah perwakilan dari sebuah model di antarmuka admin. "
"Biasanya, ini disimpan di berkas bernama ``admin.py`` di aplikasi anda. Mari "
"kita melihat consoh sangat sederhana dari ``ModelAdmin``::"

msgid "Do you need a ``ModelAdmin`` object at all?"
msgstr "Apakah anda butuh sebuah obyek ``ModelAdmin`` sama sekali?"

msgid ""
"In the preceding example, the ``ModelAdmin`` class doesn't define any custom "
"values (yet). As a result, the default admin interface will be provided. If "
"you are happy with the default admin interface, you don't need to define a "
"``ModelAdmin`` object at all -- you can register the model class without "
"providing a ``ModelAdmin`` description. The preceding example could be "
"simplified to::"
msgstr ""
"Di contoh terdahulu, kelas ``ModelAdmin`` tidak menentukan nilai-nilai "
"penyesuaian apapun (pun). Sebagai hasil, awalan antarmuka admin akan "
"disediakan. Jika anda senang dengan awalan antarmuka admin, anda tidak butuh "
"menentukan sebuah obyek ``ModelAdmin`` sama sekali -- anda dapat mendafta "
"kelas model tanpa menyediakan sebuah gambaran ``ModelAdmin``. Contoh "
"terdahulu dapat disederhanakan menjadi::"

msgid "The ``register`` decorator"
msgstr "Penghias ``register``"

msgid "There is also a decorator for registering your ``ModelAdmin`` classes::"
msgstr ""
"Ada juga sebuah penghias untuk mendaftarkan kelas-kelas ``ModelAdmin`` anda::"

msgid ""
"It is given one or more model classes to register with the ``ModelAdmin`` "
"and an optional keyword argument ``site`` if you are not using the default "
"``AdminSite``::"
msgstr ""
"Itu diberika satu atau lebih kelas-kelas model untuk mendaftar dengan "
"``ModelAdmin`` dan sebuah argumen kata kunci pilihan ``site`` jika anda "
"tidak menggunakan awalan ``AdminSite``::"

msgid ""
"You can't use this decorator if you have to reference your model admin class "
"in its ``__init__()`` method, e.g. ``super(PersonAdmin, self)."
"__init__(*args, **kwargs)``. If you are using Python 3 and don't have to "
"worry about supporting Python 2, you can use ``super().__init__(*args, "
"**kwargs)`` . Otherwise, you'll have to use ``admin.site.register()`` "
"instead of this decorator."
msgstr ""
"Anda tidak dapat menggunakan penghias ini jika anda harus mengacukan kelas "
"admin model anda di metode ``__init__()`` nya, sebagai contoh "
"``super(PersonAdmin, self).__init__(*args, **kwargs)``. Jika anda sedang "
"menggunakan Python 3 dan tidak perlu khawatir tentang mendukung Python 2, "
"anda dapat menggunakan ``super().__init__(*args, **kwargs)`` . Jika tidak, "
"anda akan harus menggunakan ``admin.site.register()`` daripada penghias ini."

msgid "Discovery of admin files"
msgstr "Penemuan dari berkas admin"

msgid ""
"When you put ``'django.contrib.admin'`` in your :setting:`INSTALLED_APPS` "
"setting, Django automatically looks for an ``admin`` module in each "
"application and imports it."
msgstr ""
"Ketika anda menaruh ``'django.contrib.admin'`` di pengaturan :setting:"
"`INSTALLED_APPS` anda, Django secara otomatis mencari modul ``admin`` di "
"setiap aplikasi dan mengimpor itu."

msgid ""
"This is the default :class:`~django.apps.AppConfig` class for the admin. It "
"calls :func:`~django.contrib.admin.autodiscover()` when Django starts."
msgstr ""
"Ini adalah awalan kelas :class:`~django.apps.AppConfig` untuk admin. Itu "
"memanggil :func:`~django.contrib.admin.autodiscover()` ketika Django mulai."

msgid ""
"This class works like :class:`~django.contrib.admin.apps.AdminConfig`, "
"except it doesn't call :func:`~django.contrib.admin.autodiscover()`."
msgstr ""
"Kelas ini bekerja seperti :class:`~django.contrib.admin.apps.AdminConfig`, "
"kecuali itu tidak memanggil :func:`~django.contrib.admin.autodiscover()`."

msgid ""
"This function attempts to import an ``admin`` module in each installed "
"application. Such modules are expected to register models with the admin."
msgstr ""
"Fungsi ini berusaha mengimpor sebuah modul ``admin`` di setiap aplikasi "
"terpasang. Modul-modul itu diharapkan mendaftar model dengan admin."

msgid ""
"Typically you won't need to call this function directly as :class:`~django."
"contrib.admin.apps.AdminConfig` calls it when Django starts."
msgstr ""
"Secara khusus anda tidak butuh memanggil fungsi ini secara langsung sebagai :"
"class:`~django.contrib.admin.apps.AdminConfig` memanggilnya ketika Django "
"mulai."

msgid ""
"If you are using a custom ``AdminSite``, it is common to import all of the "
"``ModelAdmin`` subclasses into your code and register them to the custom "
"``AdminSite``. In that case, in order to disable auto-discovery, you should "
"put ``'django.contrib.admin.apps.SimpleAdminConfig'`` instead of ``'django."
"contrib.admin'`` in your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Jika anda sedang menggunakan sebuah penyesuaian ``AdminSite``, itu adalah "
"umum mengimpor semua dari subkelas ``ModelAdmin`` kedalam kode anda dan "
"mendaftarkan mereka ke penyesuaian ``AdminSite``. Dalam hal itu, untuk "
"meniadakan penemuan-otomatis, anda harus menaruh ``'django.contrib.admin."
"apps.SimpleAdminConfig'`` sebagai gantinya ``'django.contrib.admin'`` di "
"pengaturan :setting:`INSTALLED_APPS` anda."

msgid "``ModelAdmin`` options"
msgstr "Pilihan ``ModelAdmin``"

msgid ""
"The ``ModelAdmin`` is very flexible. It has several options for dealing with "
"customizing the interface. All options are defined on the ``ModelAdmin`` "
"subclass::"
msgstr ""
"``ModelAdmin`` sangat fleksibel. Itu mempunyai beberapa pilihan untuk "
"berurusan dengan menyesuaikan antarmuka. Semua pilihan ditentukan pada "
"subkelas ``ModelAdmin``::"

msgid ""
"A list of actions to make available on the change list page. See :doc:`/ref/"
"contrib/admin/actions` for details."
msgstr ""
"Sebuah daftar tindakan untuk membuat tersedia pada halaman daftar perubahan. "
"Lihat :doc:`/ref/contrib/admin/actions` untuk rincian."

msgid ""
"Controls where on the page the actions bar appears. By default, the admin "
"changelist displays actions at the top of the page (``actions_on_top = True; "
"actions_on_bottom = False``)."
msgstr ""
"Kendalikan dimana pada halaman batang tindakan muncul. Secara awalan daftar "
"rubah admin memperlihatkan tindakan pada atas dari halaman (``actions_on_top "
"= True; actions_on_bottom = False``)."

msgid ""
"Controls whether a selection counter is displayed next to the action "
"dropdown. By default, the admin changelist will display it "
"(``actions_selection_counter = True``)."
msgstr ""
"Kendalikan apakah sebuah penghitung pemilihan ditampilkan dekat tindakan "
"dropdown. Secara awalan, daftar tubadh admin akan memperlihatkan itu "
"(``actions_selection_counter = True``)."

msgid ""
"Set ``date_hierarchy`` to the name of a ``DateField`` or ``DateTimeField`` "
"in your model, and the change list page will include a date-based drilldown "
"navigation by that field."
msgstr ""
"Setel ``date_hierarchy`` pada nama dari ``DateField`` atau ``DateTimeField`` "
"di model anda, dan halaman daftar rubah akan menyertakan navigasi "
"penelusuran berdasarkan-tanggal oleh bidang itu."

msgid ""
"You can also specify a field on a related model using the ``__`` lookup, for "
"example::"
msgstr ""
"Anda dapat juga menentukan sebuah bidang pada model terkait menggunakan "
"pencarian ``__``, sebagai contoh::"

msgid ""
"This will intelligently populate itself based on available data, e.g. if all "
"the dates are in one month, it'll show the day-level drill-down only."
msgstr ""
"Ini akan secara cerdas mengumpulkan itu sendiri berdasarkan pada tanggal "
"tersedia, sebagai contoh jika semua tanggal berada di satu bulan, itu akan "
"menampilkan hanya penelesuran tingkat-hari."

msgid "The ability to reference fields on related models was added."
msgstr ""
"Kemampuan untuk mengacukan bidang-bidang pada model-model terkait telah "
"ditambahkan."

msgid ""
"``date_hierarchy`` uses :meth:`QuerySet.datetimes() <django.db.models.query."
"QuerySet.datetimes>` internally. Please refer to its documentation for some "
"caveats when time zone support is enabled (:setting:`USE_TZ = True "
"<USE_TZ>`)."
msgstr ""
"``date_hierarchy`` menggunakan :meth:`QuerySet.datetimes() <django.db.models."
"query.QuerySet.datetimes>` secara internal. Harap mengacu ke dokumentasinya "
"untuk beberapa peringatan ketika dukungan zona waktu diadakan (:setting:"
"`USE_TZ = True <USE_TZ>`)."

msgid ""
"This attribute overrides the default display value for record's fields that "
"are empty (``None``, empty string, etc.). The default value is ``-`` (a "
"dash). For example::"
msgstr ""
"Atribut ini menimpa nilai pertunjukan awalan untuk bidang rekaman yang "
"kosong (``None``, string kosong, dll). Nilai awalan ``-`` (sebuah tanda "
"garis). Sebagai contoh::"

msgid ""
"You can also override ``empty_value_display`` for all admin pages with :attr:"
"`AdminSite.empty_value_display`, or for specific fields like this::"
msgstr ""
"Anda dapat juga menimpa ``empty_value_display`` untuk semua halaman admin "
"dengan :attr:`AdminSite.empty_value_display`, atau bidang-bidang tertentu "
"seperti ini::"

msgid ""
"This attribute, if given, should be a list of field names to exclude from "
"the form."
msgstr ""
"Atribut ini, jika diberikan, harus berupa daftar dari nama-nama bidang untuk "
"mengeluarkan dari formulir."

msgid "For example, let's consider the following model::"
msgstr "Sebagai contoh, mari kita pertimbangkan model berikut::"

msgid ""
"If you want a form for the ``Author`` model that includes only the ``name`` "
"and ``title`` fields, you would specify ``fields`` or ``exclude`` like this::"
msgstr ""
"Jika anda ingin sebuah formulit untuk model ``Author`` yang menyertakan "
"hanya bidang ``name`` dan ``title``, anda akan menentukan ``fields`` atau "
"``exclude`` seperti ini::"

msgid ""
"Since the Author model only has three fields, ``name``, ``title``, and "
"``birth_date``, the forms resulting from the above declarations will contain "
"exactly the same fields."
msgstr ""
"Sejak model Author hanya mempunyai tiga bidang, ``name``, ``title``, dan "
"``birth_date``, formulir dihasilkan dari pernyataan diatas akan mengandung "
"bidang-bidang sama persis."

msgid ""
"Use the ``fields`` option to make simple layout changes in the forms on the "
"\"add\" and \"change\" pages such as showing only a subset of available "
"fields, modifying their order, or grouping them into rows. For example, you "
"could define a simpler version of the admin form for the :class:`django."
"contrib.flatpages.models.FlatPage` model as follows::"
msgstr ""
"Gunakan pilihan ``fields`` untuk membuat perubahan tata letak sederhana di "
"formulir pada halaman \"add\" dan \"change\" seperti menunjukkan hanya "
"subhimpunan dari bidang-bidang tersedia, merubah urutan mereka, atau "
"mengelompokkan mereka kedalam baris. Sebagai contoh, anda dapat menentukan "
"versi sederhana dari formulir admin untuk model :class:`django.contrib."
"flatpages.models.FlatPage` seperi berikut::"

msgid ""
"In the above example, only the fields ``url``, ``title`` and ``content`` "
"will be displayed, sequentially, in the form. ``fields`` can contain values "
"defined in :attr:`ModelAdmin.readonly_fields` to be displayed as read-only."
msgstr ""
"Di contoh diatas, hanya bidang-bidang ``url``, ``title`` dan ``content`` "
"akan diperlihatkan, berurutan, di formulir. ``fields`` dapat mengandung "
"nilai-nilai ditentukan di :attr:`ModelAdmin.readonly_fields` untuk "
"diperlihatkan sebagai hanya-baca."

msgid ""
"For more complex layout needs, see the :attr:`~ModelAdmin.fieldsets` option."
msgstr ""
"Untuk kebutuhan tata letak lebih rumit, lihat pilihan :attr:`~ModelAdmin."
"fieldsets`."

msgid ""
"The ``fields`` option, unlike :attr:`~ModelAdmin.list_display`, may only "
"contain names of fields on the model or the form specified by :attr:"
"`~ModelAdmin.form`. It may contain callables only if they are listed in :"
"attr:`~ModelAdmin.readonly_fields`."
msgstr ""
"Pilihan ``fields``, tidak seperti :attr:`~ModelAdmin.list_display`, mungkin "
"hanya mengandung nama-nama bidang pada model atau formulir ditentukan oleh :"
"attr:`~ModelAdmin.form`. Itu mungkin mengandung hanya callable jika mereka "
"berada didaftar di :attr:`~ModelAdmin.readonly_fields`."

msgid ""
"To display multiple fields on the same line, wrap those fields in their own "
"tuple. In this example, the ``url`` and ``title`` fields will display on the "
"same line and the ``content`` field will be displayed below them on its own "
"line::"
msgstr ""
"Untuk memperlihatkan banyak bidang pada baris yang sama, bungkus bidang-"
"bidang tersebut di tuple mereka sendiri. Di contoh ini, bidang ``url`` dan "
"``title`` akan diperlihatkan di baris sama dan bidang ``content`` akan "
"diperlihatkan dibawah mereka pada baris nya sendiri::"

msgid "Note"
msgstr "Catatan"

msgid ""
"This ``fields`` option should not be confused with the ``fields`` dictionary "
"key that is within the :attr:`~ModelAdmin.fieldsets` option, as described in "
"the next section."
msgstr ""
"Pilihan ``fields`` ini tidak harus membingungkan dengan kunci kamus "
"``fields`` yaitu dalam pilihan :attr:`~ModelAdmin.fieldsets`, seperti "
"digambarkan di bagian selanjutnya."

msgid ""
"If neither ``fields`` nor :attr:`~ModelAdmin.fieldsets` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""
"Jika tidak ada pilihan ``fields`` maupun :attr:`~ModelAdmin.fieldsets` "
"hadir, Django akan mengawalkan ke menampilkan setiap bidang yang bukan "
"sebuah ``AutoField`` dan mempunyai ``editable=True``, dalam fieldset "
"tunggal, di urutan sama seperti bidang-bidang ditentukan di model "

msgid ""
"Set ``fieldsets`` to control the layout of admin \"add\" and \"change\" "
"pages."
msgstr ""
"Setel ``fieldsets`` utuk mengendalikan tata letak dari halaman \"add\" dan "
"\"change\" admin."

msgid ""
"``fieldsets`` is a list of two-tuples, in which each two-tuple represents a "
"``<fieldset>`` on the admin form page. (A ``<fieldset>`` is a \"section\" of "
"the form.)"
msgstr ""
"``fieldsets`` adalah daftar dari dua-tuple, yang setiap dua-tuple mewakili "
"sebuah ``<fieldset>`` pada halaman formulir admin. (Sebuah ``<fieldset>`` "
"adalah sebuah \"section\" dari formulir.)"

msgid ""
"The two-tuples are in the format ``(name, field_options)``, where ``name`` "
"is a string representing the title of the fieldset and ``field_options`` is "
"a dictionary of information about the fieldset, including a list of fields "
"to be displayed in it."
msgstr ""
"Dua-tuple dalam bentuk ``(name, field_options)``, dimana ``name`` adalah "
"sebuah string mewakili juful dari fieldset dan ``field_options`` adalah "
"sebuah kamus dari informasi tentang fieldset, termasuk daftar dari bidang-"
"bidang untuk ditampilkan di itu."

msgid ""
"A full example, taken from the :class:`django.contrib.flatpages.models."
"FlatPage` model::"
msgstr ""
"Sebuah contoh penuh, diambil dari model :class:`django.contrib.flatpages."
"models.FlatPage` :: "

msgid "This results in an admin page that looks like:"
msgstr "Hasil dalam halaman admin yang kelihatan seperti:"

msgid ""
"If neither ``fieldsets`` nor :attr:`~ModelAdmin.fields` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""
"Jika tidak ada pilihan ``fieldsets`` maupun :attr:`~ModelAdmin.fields` "
"hadir, Django akan mengawalkan ke menampilkan setiap bidang yang bukan "
"sebuah ``AutoField`` dan mempunyai ``editable=True``, dalam fieldset "
"tunggal, di urutan sama seperti bidang-bidang ditentukan di model "

msgid "The ``field_options`` dictionary can have the following keys:"
msgstr "Kamus ``field_options`` dapat mempunyai kunci berikut:"

msgid "``fields``"
msgstr "``fields``"

msgid ""
"A tuple of field names to display in this fieldset. This key is required."
msgstr ""
"Sebuah tuple dari nama-nama bidang untuk ditampilkan di fieldset ini. Kunci "
"ini diwajibkan."

msgid ""
"As with the :attr:`~ModelAdmin.fields` option, to display multiple fields on "
"the same line, wrap those fields in their own tuple. In this example, the "
"``first_name`` and ``last_name`` fields will display on the same line::"
msgstr ""
"Seperti pilihan :attr:`~ModelAdmin.fields`, untuk memperlihatkan banyak "
"bidang pada baris sama, membungkus bidang tersebut di tuple mereka sendiri. "
"Dalam contoh ini, bidang ``first_name`` dan ``last_name`` memperlihatkan "
"pada baris sama::"

msgid ""
"``fields`` can contain values defined in :attr:`~ModelAdmin.readonly_fields` "
"to be displayed as read-only."
msgstr ""
"``fields`` dapat mengandung nilai-nilai ditentukan di :attr:`~ModelAdmin."
"readonly_fields` untuk ditampilkan sebagai hanya-baca."

msgid ""
"If you add the name of a callable to ``fields``, the same rule applies as "
"with the :attr:`~ModelAdmin.fields` option: the callable must be listed in :"
"attr:`~ModelAdmin.readonly_fields`."
msgstr ""
"Jika anda menambah nama dari callable ke ``fields``, aturan sama berlaku "
"seperti pilihan :attr:`~ModelAdmin.fields`: callable harus sidaftar di :attr:"
"`~ModelAdmin.readonly_fields`."

msgid "``classes``"
msgstr "``classes``"

msgid "A list or tuple containing extra CSS classes to apply to the fieldset."
msgstr ""
"Sebuah daftar atau tuple mengandung kelas-kelas CSS tambahan untuk berlaku "
"pada fieldset."

msgid ""
"Two useful classes defined by the default admin site stylesheet are "
"``collapse`` and ``wide``. Fieldsets with the ``collapse`` style will be "
"initially collapsed in the admin and replaced with a small \"click to expand"
"\" link. Fieldsets with the ``wide`` style will be given extra horizontal "
"space."
msgstr ""
"Dua kelas beguna ditentukan oleh awalan stylesheet situs admin adalah "
"``collapse`` and ``wide``. Fieldset dengan gaya ``collapse`` akan "
"diinisialisasi runtuh di admin dan diganti dengan sebuah tautan \"klik untuk "
"memperluas\" kecil. Fieldset dengan gaya ``wide`` akan diberikan ruang "
"mendatar tambahan."

msgid "``description``"
msgstr "``description``"

msgid ""
"A string of optional extra text to be displayed at the top of each fieldset, "
"under the heading of the fieldset. This string is not rendered for :class:"
"`~django.contrib.admin.TabularInline` due to its layout."
msgstr ""
"Sebuah string dari teks tambahan pilihan untuk diperlihatkan pada atas dari "
"setiap fieldset, dibawah kepala dari fieldset. String ini tidak dibangun "
"untuk :class:`~django.contrib.admin.TabularInline` disebabkan oleh tata "
"letaknya."

msgid ""
"Note that this value is *not* HTML-escaped when it's displayed in the admin "
"interface. This lets you include HTML if you so desire. Alternatively you "
"can use plain text and ``django.utils.html.escape()`` to escape any HTML "
"special characters."
msgstr ""
"Catat bahwa nilai ini *bukan* pelolosan-HTML ketika itu diperlihatkan dalam "
"antarmuka admin. Ini membuat anda menyertakan HTML jika anda inginkan. Cara "
"lain anda dapat menggunakan teks polos dan ``django.utils.html.escape()`` "
"untuk meloloskan karakter khusus HTML apapun."

msgid ""
"By default, a :class:`~django.db.models.ManyToManyField` is displayed in the "
"admin site with a ``<select multiple>``. However, multiple-select boxes can "
"be difficult to use when selecting many items. Adding a :class:`~django.db."
"models.ManyToManyField` to this list will instead use a nifty unobtrusive "
"JavaScript \"filter\" interface that allows searching within the options. "
"The unselected and selected options appear in two boxes side by side. See :"
"attr:`~ModelAdmin.filter_vertical` to use a vertical interface."
msgstr ""
"Secara awalan, sebuah :class:`~django.db.models.ManyToManyField` "
"diperlihatkan di situs admin dengan ``<select multiple>``. Bagaimanapun, "
"kotak pilihan-banyak dapat sulit digunakan ketika memilih banyak barang. "
"Menambahkan sebuah :class:`~django.db.models.ManyToManyField` ke daftar ini "
"malahan akan menggunakan antarmuka \"filter\" JavaScript tidak mengganggu "
"yang mengizinkan pencarian dalam pilihan. Pilihan tidak terpilih atau "
"terpilih muncul di dua kotak bersebelahan. Lihat :attr:`~ModelAdmin."
"filter_vertical` untuk menggunakan antarmuka tegak lurus."

msgid ""
"Same as :attr:`~ModelAdmin.filter_horizontal`, but uses a vertical display "
"of the filter interface with the box of unselected options appearing above "
"the box of selected options."
msgstr ""
"Sama seperti :attr:`~ModelAdmin.filter_horizontal`, tetapi menggunakan "
"tampilan tegak lurus dari antarmuka penyaring dengan kotak dari piliha tidak "
"dipilih muncul diatas dari pilihan terpilih."

msgid ""
"By default a ``ModelForm`` is dynamically created for your model. It is used "
"to create the form presented on both the add/change pages. You can easily "
"provide your own ``ModelForm`` to override any default form behavior on the "
"add/change pages. Alternatively, you can customize the default form rather "
"than specifying an entirely new one by using the :meth:`ModelAdmin.get_form` "
"method."
msgstr ""
"Secara awalan sebuah ``ModelForm`` secara dinamis dibuat untuk model anda. "
"Itu digunakan untuk membuat formulir dihadirkan pada kedua halaman tambah/"
"rubah. Anda dapat dengan mudah menyediakan ``ModelForm`` anda sendiri untuk "
"menimpa awalan perilaku formulir apapun pada halaman tambah/rubah. Kalau "
"tidak, anda dapat menyesuaikan awalan formulir daripada menentukan "
"keseluruhan satu yang baru menggunakan metode :meth:`ModelAdmin.get_form`."

msgid "For an example see the section :ref:`admin-custom-validation`."
msgstr "Untuk sebuah contoh lihat bagian :ref:`admin-custom-validation`."

msgid ""
"If you define the ``Meta.model`` attribute on a :class:`~django.forms."
"ModelForm`, you must also define the ``Meta.fields`` attribute (or the "
"``Meta.exclude`` attribute). However, since the admin has its own way of "
"defining fields, the ``Meta.fields`` attribute will be ignored."
msgstr ""
"Jika anda menentukan atribut ``Meta.model`` pada sebuah :class:`~django."
"forms.ModelForm`, anda harus juga menentukan atribut ``Meta.fields`` (atau "
"atribut ``Meta.exclude``). Bagaimanapun, sejak admin mempunyai caranya "
"sendiri dari menentukan bidang-bidang, atribut ``Meta.fields`` akan "
"diabaikan."

msgid ""
"If the ``ModelForm`` is only going to be used for the admin, the easiest "
"solution is to omit the ``Meta.model`` attribute, since ``ModelAdmin`` will "
"provide the correct model to use. Alternatively, you can set ``fields = []`` "
"in the ``Meta`` class to satisfy the validation on the ``ModelForm``."
msgstr ""
"Jika ``ModelForm`` hanya akan digunakan untuk admin, pemecahan termudah "
"adalah mengilangkan atribut ``Meta.model``, sejak ``ModelAdmin`` akan "
"menyediakan model benar untuk digunakan. Kalau tidak, anda dapat menyetel "
"``fields = []`` di kelas ``Meta`` untuk memuaskan pengesahan pada "
"``ModelForm``."

msgid ""
"If your ``ModelForm`` and ``ModelAdmin`` both define an ``exclude`` option "
"then ``ModelAdmin`` takes precedence::"
msgstr ""
"Jika ``ModelForm`` dan ``ModelAdmin`` kedua menentukan sebuah pilihan "
"``exclude`` kemudian ``ModelAdmin`` mengambil mendahului::"

msgid ""
"In the above example, the \"age\" field will be excluded but the \"name\" "
"field will be included in the generated form."
msgstr ""
"Dalam contoh diatas, bidang \"age\" akan tidak disertakan tetapi bidang "
"\"name: akan disertakan di formulir dibangkitkan."

msgid ""
"This provides a quick-and-dirty way to override some of the :class:`~django."
"forms.Field` options for use in the admin. ``formfield_overrides`` is a "
"dictionary mapping a field class to a dict of arguments to pass to the field "
"at construction time."
msgstr ""
"Ini menyediakan cara cepat-dan-kotor untuk menimpa beberapa pilihan :class:"
"`~django.forms.Field` untuk digunakan di admin. ``formfield_overrides`` "
"adalah sebuah kamus memetakan sebuah kelas bidang pada kamus dari argumen "
"untuk melewatkan ke bidang pada waktu pembangunan."

msgid ""
"Since that's a bit abstract, let's look at a concrete example. The most "
"common use of ``formfield_overrides`` is to add a custom widget for a "
"certain type of field. So, imagine we've written a ``RichTextEditorWidget`` "
"that we'd like to use for large text fields instead of the default "
"``<textarea>``. Here's how we'd do that::"
msgstr ""
"Sejak itu sedikit abstrak, mari kita lihat contoh nyata. Penggunaan paling "
"umum dari ``formfield_overrides`` ada;ah menambahkan sebuah widget "
"penyesuaian untuk jenis tertentu dari bidang. Jadi, bayangkan kami telah "
"menulis sebuah ``RichTextEditorWidget`` yang ingin untuk digunakan untuk "
"bidang teks besar daripada awalan ``<textarea>``. Ini adalah bagaimana kami "
"melakukannya::"

msgid ""
"Note that the key in the dictionary is the actual field class, *not* a "
"string. The value is another dictionary; these arguments will be passed to "
"the form field's ``__init__()`` method. See :doc:`/ref/forms/api` for "
"details."
msgstr ""
"Catat bahwa kunci di kamus adalah kelas bidang sebenarnya, *bukan* sebuah "
"string. Nilai adalah kamus lain; argumen ini akan dilewatkan ke metode "
"``__init__()`` bidang formulir. Lihat :doc:`/ref/forms/api` untuk rincian."

msgid ""
"If you want to use a custom widget with a relation field (i.e. :class:"
"`~django.db.models.ForeignKey` or :class:`~django.db.models."
"ManyToManyField`), make sure you haven't included that field's name in "
"``raw_id_fields`` or ``radio_fields``."
msgstr ""
"Jika anda ingin menggukana sebuah penyesuaian widget dengan sebuah hubungan "
"bidang (yaitu:class:`~django.db.models.ForeignKey` atau :class:`~django.db."
"models.ManyToManyField`), pastikan anda belum menyertakan nama bidang itu di "
"``raw_id_fields`` atau ``radio_fields``."

msgid ""
"``formfield_overrides`` won't let you change the widget on relation fields "
"that have ``raw_id_fields`` or ``radio_fields`` set. That's because "
"``raw_id_fields`` and ``radio_fields`` imply custom widgets of their own."
msgstr ""
"`formfield_overrides`` tidak akan membiarkan anda merubah widget pada bidang "
"hubungan yang mempunyai kumpulan ``raw_id_fields`` atau ``radio_fields``. "
"Itu karena ``raw_id_fields`` dan ``radio_fields`` mengartikan penyesuaian "
"widget dari mereka sendiri."

msgid ""
"See :class:`InlineModelAdmin` objects below as well as :meth:`ModelAdmin."
"get_formsets_with_inlines`."
msgstr ""
"Lihat :class:`InlineModelAdmin` objects below as well as :meth:`ModelAdmin."
"get_formsets_with_inlines`."

msgid ""
"Set ``list_display`` to control which fields are displayed on the change "
"list page of the admin."
msgstr ""
"Set ``list_display`` untuk mengendalikan bidang-bidang mana yang ditampilkan "
"pada halaman daftar rubah dari admin."

msgid ""
"If you don't set ``list_display``, the admin site will display a single "
"column that displays the ``__str__()`` (``__unicode__()`` on Python 2) "
"representation of each object."
msgstr ""
"Jika anda tidak menyetel ``list_display``, situs admin akan menampilkan "
"kolom tunggal yang menampilkan ``__str__()`` (``__unicode__()`` on Python 2) "
"perwakilan dari setiap obyek."

msgid "You have four possible values that can be used in ``list_display``:"
msgstr ""
"Anda mempunyai empat nilai kemungkinan yang dapat digunakan dalam "
"``list_display``:"

msgid "A field of the model. For example::"
msgstr "Sebuah bidang dari model. Sebagai contoh::"

msgid ""
"A callable that accepts one parameter for the model instance. For example::"
msgstr ""
"Sebuah callable yang menerima satu parameter untuk instance model. Sebagai "
"contoh::"

msgid ""
"A string representing an attribute on the ``ModelAdmin``. This behaves same "
"as the callable. For example::"
msgstr ""
"Deretan karakter mewakilkan sebuah atribut pada ``ModelAdmin``. Ini "
"berperilaku sama sebagai callable. Sebagai contoh::"

msgid ""
"A string representing an attribute on the model. This behaves almost the "
"same as the callable, but ``self`` in this context is the model instance. "
"Here's a full model example::"
msgstr ""
"Deretan karakter mewakilkan sebuah atribut pada model. Ini berperilaku "
"hampir sama sebagai callable, tetapi ``self`` di konteks ini adalah instance "
"model. Ini adalah contoh model penuh::"

msgid "A few special cases to note about ``list_display``:"
msgstr "Sedikit kasus khusus untuk dicatat tentang ``list_display``:"

msgid ""
"If the field is a ``ForeignKey``, Django will display the ``__str__()`` "
"(``__unicode__()`` on Python 2) of the related object."
msgstr ""
"Jika bidang adalah sebuah ``ForeignKey``, Django akan menampilkan "
"``__str__()`` (``__unicode__()`` pada Pyhton 2) dari obyek terkait."

msgid ""
"``ManyToManyField`` fields aren't supported, because that would entail "
"executing a separate SQL statement for each row in the table. If you want to "
"do this nonetheless, give your model a custom method, and add that method's "
"name to ``list_display``. (See below for more on custom methods in "
"``list_display``.)"
msgstr ""
"Bidang-bidang ``ManyToManyField`` tidak didukung, karena akan memerlukan "
"mengerjakan pernyataan SQL terpisah untuk setiap baris di tabel. Jika anda "
"ingin melakukan ini meskipun begitu, berikan model anda sebuah metode "
"penyesuaian, dan tambah nama metode ke ``list_display``. (Lihat dibawah "
"untuk lebih pada metode penyesuaian di ``list_display``.)"

msgid ""
"If the field is a ``BooleanField`` or ``NullBooleanField``, Django will "
"display a pretty \"on\" or \"off\" icon instead of ``True`` or ``False``."
msgstr ""
"Jika bidang adalah sebuah ``BooleanField`` atau ``NullBooleanField``, Django "
"akan menampilkan ikon \"on\" atau \"off\" cantik daripada ``True`` atau "
"``False``."

msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable, "
"Django will HTML-escape the output by default. To escape user input and "
"allow your own unescaped tags, use :func:`~django.utils.html.format_html`."
msgstr ""
"Jika deretan karakter yang diberikan adalah metode dari model, "
"``ModelAdmin`` atau callable, Django akan meloloskan-HTML keluaran secara "
"awalan. Untuk meloloskan masukan pengguna dan mengizinkan etiket tidak "
"meloloskan anda sendiri, gunakan :func:`~django.utils.html.format_html`."

msgid "Here's a full example model::"
msgstr "Ini adalah sebuah contoh penuh model::"

msgid ""
"In older versions, you could add an ``allow_tags`` attribute to the method "
"to prevent auto-escaping. This attribute is deprecated as it's safer to use :"
"func:`~django.utils.html.format_html`, :func:`~django.utils.html."
"format_html_join`, or :func:`~django.utils.safestring.mark_safe` instead."
msgstr ""
"Di versi terlama, anda dapat menambah sebuah atribut ``allow_tags`` pada "
"metode untuk mencegah pelolosan-otomatis. Atribut ini diusangkan ketika itu "
"adalah lebih aman menggunakan :func:`~django.utils.html.format_html`, :func:"
"`~django.utils.html.format_html_join`, atau :func:`~django.utils.safestring."
"mark_safe`."

msgid ""
"As some examples have already demonstrated, when using a callable, a model "
"method, or a ``ModelAdmin`` method, you can customize the column's title by "
"adding a ``short_description`` attribute to the callable."
msgstr ""
"Ketika beberapa contoh telah ditunjukkan, ketika menggunakan callable, "
"metode model, atau metode ``ModelAdmin``, anda dapat menyesuaikan judul "
"kolom dengan menambahkan sebuah atribut ``short_description`` pada callable."

msgid ""
"If the value of a field is ``None``, an empty string, or an iterable without "
"elements, Django will display ``-`` (a dash). You can override this with :"
"attr:`AdminSite.empty_value_display`::"
msgstr ""
"Jika nilai dari sebuah bidang adalah ``None``, sebuah string kosong, atau "
"sebuah perulangan tanpa unsur-unsur, Django akan menampilkan `-`` (tanda "
"garis). Anda dapat menimpa ini dengan :attr:`AdminSite.empty_value_display`::"

msgid "You can also use :attr:`ModelAdmin.empty_value_display`::"
msgstr "Anda juga dapat menggunakan :attr:`ModelAdmin.empty_value_display`::"

msgid "Or on a field level::"
msgstr "Atau pada tingkat bidang::"

msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable "
"that returns True or False Django will display a pretty \"on\" or \"off\" "
"icon if you give the method a ``boolean`` attribute whose value is ``True``."
msgstr ""
" Jika deretan karakter diberikan adalah metode dari model, ``ModelAdmin`` "
"atau callable yang mengembalikan True atau False Django akan menampilkan "
"ikon bagus \"on\" atau \"off\" jika anda memberikan metode atribut "
"``boolean`` yang nilainya adalah ``True``."

msgid ""
"The ``__str__()`` (``__unicode__()`` on Python 2) method is just as valid in "
"``list_display`` as any other model method, so it's perfectly OK to do this::"
msgstr ""
"Metode `__str__()`` (``__unicode__()`` pada Python 2) hanya sah di "
"``list_display`` seperti metode model lain apapun, jadi itu adalah sempurna "
"OKE melakukan ini::"

msgid ""
"Usually, elements of ``list_display`` that aren't actual database fields "
"can't be used in sorting (because Django does all the sorting at the "
"database level)."
msgstr ""
"Biasanya, unsur-unsur dari ``list_display`` yang bukan bidang basisdata "
"sebenarnya tidak dapat digunakan dalam mengurutkan (karena Django melakukan "
"semua pengurutan pada tingkat basisdata)."

msgid ""
"However, if an element of ``list_display`` represents a certain database "
"field, you can indicate this fact by setting the ``admin_order_field`` "
"attribute of the item."
msgstr ""
"Bagaimanapun, jika sebuah unsur dari ``list_display`` mewakili bidang "
"basisdata tertentu, anda dapat menunjukkan fakta ini dengan mengatur atribut "
"``admin_order_field`` dari barang."

msgid ""
"The above will tell Django to order by the ``first_name`` field when trying "
"to sort by ``colored_first_name`` in the admin."
msgstr ""
"Diatas akan mengatakan Django untuk mengurutkan berdasarkan bidang "
"``first_name`` ketika mencoba mengurutkan berdasarkan ``colored_first_name`` "
"di admin."

msgid ""
"To indicate descending order with ``admin_order_field`` you can use a hyphen "
"prefix on the field name. Using the above example, this would look like::"
msgstr ""
"Untuk menunjukkan urutan menurun dengan ``admin_order_field`` anda dapat "
"menggunakan awalan tanda penghubung pada nama bidang. Menggunakan contoh "
"diatas, ini akan kelihatan seperti::"

msgid ""
"``admin_order_field`` supports query lookups to sort by values on related "
"models. This example includes an \"author first name\" column in the list "
"display and allows sorting it by first name::"
msgstr ""
"``admin_order_field`` mendukung permintaan pencarian untuk mengurutkan "
"berdasarkan nilai pada hubungan terkait. Contoh ini termasuk sebuah kolom "
"\"author first name\" di daftar tampilan dan mengizinkan mengurutkan itu "
"dengan nama pertama::"

msgid ""
"Elements of ``list_display`` can also be properties. Please note however, "
"that due to the way properties work in Python, setting ``short_description`` "
"on a property is only possible when using the ``property()`` function and "
"**not** with the ``@property`` decorator."
msgstr ""
"Unsur-unsur dari ``list_display`` dapat juga berupa sifat. Harap catat "
"bagaimanapun, bahwa kerena cara sifat bekerja di Python, pengaturan "
"``short_description`` pada sebuah sifat hanya memungkinkan ketika "
"menggunakan fungsi ``property()`` dan **tidak** dengan  penghias "
"``@property``."

msgid ""
"The field names in ``list_display`` will also appear as CSS classes in the "
"HTML output, in the form of ``column-<field_name>`` on each ``<th>`` "
"element. This can be used to set column widths in a CSS file for example."
msgstr ""
"Nama-nama bidang di ``list_display`` akan juga muncul sebagai kelas-kelas "
"CSS di keluaran HTML, di formulir dari ``column-<field_name>`` pada setiap "
"unsur ``<th>``. Ini dapat digunakan menyetel lebar kolom di sebuah berkas "
"CSS sebagai contoh."

msgid ""
"Django will try to interpret every element of ``list_display`` in this order:"
msgstr ""
"Django akan mencoba mentafsirkan setiap unsur dari ``list_display`` di "
"urutan ini:"

msgid "A field of the model."
msgstr "Bidang dari model."

msgid "A callable."
msgstr "Callable"

msgid "A string representing a ``ModelAdmin`` attribute."
msgstr "Sebuah string mewakili sebuah atribut ``ModelAdmin``."

msgid "A string representing a model attribute."
msgstr "Sebuah string mewakili sebuah atribut model."

msgid ""
"For example if you have ``first_name`` as a model field and as a "
"``ModelAdmin`` attribute, the model field will be used."
msgstr ""
"Sebagai contoh jika anda mempunyai \"first name\" sebagai model bidang dan "
"sebagai atribut  ``ModelAdmin``, bidang model akan digunakan."

msgid ""
"Use ``list_display_links`` to control if and which fields in :attr:"
"`list_display` should be linked to the \"change\" page for an object."
msgstr ""
"Gunakan ``list_display_links`` untuk mengendalikan jika dan bidang-bidang "
"mana di :attr:`list_display` harus di tautkan ke halaman \"change\" untuk "
"sebuah obyek."

msgid ""
"By default, the change list page will link the first column -- the first "
"field specified in ``list_display`` -- to the change page for each item. But "
"``list_display_links`` lets you change this:"
msgstr ""
"Secara awalan, halaman daftar rubah akan mengkaitkan kolom pertama -- bidang "
"pertama ditentukan di ``list_display`` -- ke halaman perubahan untuk setiap "
"barang. Tetapi ``list_display_links`` membiarkan anda merubah ini:"

msgid "Set it to ``None`` to get no links at all."
msgstr "Sete itu menjadi ``None`` untuk tidak mendapatkan tautan sama sekali."

msgid ""
"Set it to a list or tuple of fields (in the same format as ``list_display``) "
"whose columns you want converted to links."
msgstr ""
"Set itu menjadi daftar atau tuple dari bidang (di bentuk sama seperti "
"``list_display``) yang kolomnya anda ingin rubah menjadi tautan."

msgid ""
"You can specify one or many fields. As long as the fields appear in "
"``list_display``, Django doesn't care how many (or how few) fields are "
"linked. The only requirement is that if you want to use "
"``list_display_links`` in this fashion, you must define ``list_display``."
msgstr ""
"Anda dapat menentukan satu atau banyak bidang. Selama bidang-bidang muncul "
"di ``list_display``, Django tidak peduli seberapa banyak (seberapa sedikit) "
"bidang-bidang ditautkan. Persyaratan satu-satunya adalah bahwa jika anda "
"ingin menggunakan ``list_display_links`` dengan cara ini, anda harus "
"menentukan ``list_display``."

msgid ""
"In this example, the ``first_name`` and ``last_name`` fields will be linked "
"on the change list page::"
msgstr ""
"Di contoh ini, bidang ``first_name`` dan ``last_name`` akan dikaitkan pada "
"halaman daftar rubah::"

msgid "In this example, the change list page grid will have no links::"
msgstr ""
"Di contoh ini, jaring halaman daftar rubah tidak akan mempunyai tautan::"

msgid ""
"Set ``list_editable`` to a list of field names on the model which will allow "
"editing on the change list page. That is, fields listed in ``list_editable`` "
"will be displayed as form widgets on the change list page, allowing users to "
"edit and save multiple rows at once."
msgstr ""
"Setel ``list_editable`` ke sebuah daftar nama-nama bidang pada model yang "
"akan mengizinkan menyunting pada halaman daftar rubah. yaitu, bidang-bidang "
"terdaftar di ``list_editable`` akan diperlihatkan sebagai formulir widget "
"pada halaman daftar rubah, mengizinkan pengguna menyunting dan menyimpan "
"banyak baris sekaligus."

msgid ""
"``list_editable`` interacts with a couple of other options in particular "
"ways; you should note the following rules:"
msgstr ""
"``list_editable`` berinteraksi dengan sepasang dari pilihan lain di cara "
"tertentu; anda harus mencatat peraturan-peraturan berikut:"

msgid ""
"Any field in ``list_editable`` must also be in ``list_display``. You can't "
"edit a field that's not displayed!"
msgstr ""
"Bidang apapun di ``list_editable`` harus juga berada di ``list_display``. "
"Anda tidak dapat menyunting sebuah bidang yang tidak diperlihatkan!"

msgid ""
"The same field can't be listed in both ``list_editable`` and "
"``list_display_links`` -- a field can't be both a form and a link."
msgstr ""
"Bidang sama tidak dapat didaftarkan di kedua ``list_editable`` dan "
"``list_display_links`` -- sebuah bidang tidak dapat keduanya sebuah formulir "
"dan sebuah tautan."

msgid "You'll get a validation error if either of these rules are broken."
msgstr ""
"Anda akan mendapatkan sebuah kesalahan pengesahan jika antara peraturan-"
"peraturan ini rusak."

msgid ""
"Set ``list_filter`` to activate filters in the right sidebar of the change "
"list page of the admin, as illustrated in the following screenshot:"
msgstr ""
"Setel ``list_filter`` untuk mengaktifkan penyaring di batang sisi kanan dari "
"halaman daftar rubah dari admin, seperti digambarkan di tangkapan layar "
"berikut:"

msgid ""
"``list_filter`` should be a list or tuple of elements, where each element "
"should be of one of the following types:"
msgstr ""
"``list_filter`` harus berupa sebuah daftar atau tuple dari unsur, dimana "
"setiap unsur harus berupa satu dari jenis-jenis berikut:"

msgid ""
"a field name, where the specified field should be either a ``BooleanField``, "
"``CharField``, ``DateField``, ``DateTimeField``, ``IntegerField``, "
"``ForeignKey`` or ``ManyToManyField``, for example::"
msgstr ""
"sebuah nama bidang, dimana bidang ditentukan harus berupa antara "
"``BooleanField``, ``CharField``, ``DateField``, ``DateTimeField``, "
"``IntegerField``, ``ForeignKey`` atau ``ManyToManyField``, sebagai contoh::"

msgid ""
"Field names in ``list_filter`` can also span relations using the ``__`` "
"lookup, for example::"
msgstr ""
"Nama-nama bidang di ``list_filter`` dapat juga menjangkau hubungan "
"menggunakan pencarian ``__``, sebagai contoh::"

msgid ""
"a class inheriting from ``django.contrib.admin.SimpleListFilter``, which you "
"need to provide the ``title`` and ``parameter_name`` attributes to and "
"override the ``lookups`` and ``queryset`` methods, e.g.::"
msgstr ""
"sebuah kelas mewarisi dari ``django.contrib.admin.SimpleListFilter``, yang "
"anda butuh menyediakan atribut ``title`` dan ``parameter_name`` dan menimpa "
"metode ``lookups`` dan ``queryset``, sebagai contoh:: "

msgid ""
"As a convenience, the ``HttpRequest`` object is passed to the ``lookups`` "
"and ``queryset`` methods, for example::"
msgstr ""
"Sebagai kenyamanan, obyek ``HttpRequest`` dilewatkan ke metode ``lookups`` "
"dan ``queryset``, sebagai contoh::"

msgid ""
"Also as a convenience, the ``ModelAdmin`` object is passed to the "
"``lookups`` method, for example if you want to base the lookups on the "
"available data::"
msgstr ""
"Juga sebagai sebuah kenyamanan, obyek ``ModelAdmin`` dilewatkan ke metode "
"``lookups``, sebagai contoh jika anda ingin mendasarkan pencarian pada data "
"tersedia::"

msgid ""
"a tuple, where the first element is a field name and the second element is a "
"class inheriting from ``django.contrib.admin.FieldListFilter``, for example::"
msgstr ""
"sebuah tuple, dimana unsur pertama adalah nama bidang dan unsur kedua adalah "
"kelas diwarisi dari ``django.contrib.admin.FieldListFilter``, sebagai "
"contoh::"

msgid ""
"You can limit the choices of a related model to the objects involved in that "
"relation using ``RelatedOnlyFieldListFilter``::"
msgstr ""
"Anda dapat membatasi pilihan dari model terkait pada obyek-obyek terlibat di "
"hubungan itu menggunakan ``RelatedOnlyFieldListFilter``::"

msgid ""
"Assuming ``author`` is a ``ForeignKey`` to a ``User`` model, this will limit "
"the ``list_filter`` choices to the users who have written a book instead of "
"listing all users."
msgstr ""
"Mengganggap ``author`` adalah ``ForeignKey`` pada model ``User``, ini akan "
"membatasi pilihan ``list_filter`` pada pengguna yang telah menulis sebuah "
"buku daripada mendaftarkan semua pengguna."

msgid ""
"The ``FieldListFilter`` API is considered internal and might be changed."
msgstr "API ``FieldListFilter`` dianggap internal dan mungkin berubah."

msgid ""
"List filter's typically appear only if the filter has more than one choice. "
"A filter's ``has_output()`` method controls whether or not it appears."
msgstr ""
"Daftar penyaring khususnya muncul hanya jika penyaring mempunyai lebih dari "
"satu pilihan. Sebuah metode ``has_output()`` penyaring mengendalikan apakah "
"atau tidak itu muncul."

msgid ""
"It is possible to specify a custom template for rendering a list filter::"
msgstr ""
"Itu memungkinkan menentukan penyesuaian cetakan untuk membangun daftar "
"penyaring::"

msgid ""
"See the default template provided by Django (``admin/filter.html``) for a "
"concrete example."
msgstr ""
"Lihat cetakan awalan disediakan oleh Django (``admin/filter.html``) untuk "
"contoh nyata."

msgid ""
"Set ``list_max_show_all`` to control how many items can appear on a \"Show "
"all\" admin change list page. The admin will display a \"Show all\" link on "
"the change list only if the total result count is less than or equal to this "
"setting. By default, this is set to ``200``."
msgstr ""
"Setel ``list_max_show_all`` untuk mengendalikan seberapa banyak barang dapat "
"muncul pada halaman daftar rubah admin \"Show all\". Admin akan "
"memperlihatkan sebuah tautan \"Show all\" pada daftar rubah hanya jika "
"jumlah hasil perhitungan kurang dari atau sama pada pengaturan ini. Secara "
"awalan, ini disetel menjadi ``200``."

msgid ""
"Set ``list_per_page`` to control how many items appear on each paginated "
"admin change list page. By default, this is set to ``100``."
msgstr ""
"Setel ``list_per_page`` untuk mengendalikan seberapa banyak barang akan "
"muncul pada setiap penomoran halaman daftar rubah admin. Secara awalan, ini "
"disetel menjadi ``100``."

msgid ""
"Set ``list_select_related`` to tell Django to use :meth:`~django.db.models."
"query.QuerySet.select_related` in retrieving the list of objects on the "
"admin change list page. This can save you a bunch of database queries."
msgstr ""
"Setel ``list_select_related`` untuk memberitahu Django menggunakan :meth:"
"`~django.db.models.query.QuerySet.select_related` dalam mengambil daftar "
"dari obyek-obyek pada halaman daftar rubah admin. Ini dapat menghemat anda "
"sekelompok dari permintaan basisdata."

msgid ""
"The value should be either a boolean, a list or a tuple. Default is "
"``False``."
msgstr ""
"Nilai harus antara sebuah boolean, sebuah daftar atau sebuah tuple. Awalan "
"adalah ``False``."

msgid ""
"When value is ``True``, ``select_related()`` will always be called. When "
"value is set to ``False``, Django will look at ``list_display`` and call "
"``select_related()`` if any ``ForeignKey`` is present."
msgstr ""
"Ketika nilai adalah ``True``, ``select_related()`` akan selalu dipanggil. "
"Ketika nilai disetel menjadi ``False``, Django akan mencari ``list_display`` "
"dan memanggil ``select_related()`` jika ``ForeignKey`` apapun hadir."

msgid ""
"If you need more fine-grained control, use a tuple (or list) as value for "
"``list_select_related``. Empty tuple will prevent Django from calling "
"``select_related`` at all. Any other tuple will be passed directly to "
"``select_related`` as parameters. For example::"
msgstr ""
"Jika anda butuh lebih kendali berjaring-halus, gunakan sebuah tuple (atau "
"daftar) sebagai nilai untuk ``list_select_related``. Tuple kosong akan "
"mencegah Django dari memanggil ``select_related`` sama sekali. Tuple lain "
"apapun akan dilewatkan secara langsung ke ``select_related`` sebagai "
"parameter. Sebagai contoh::"

msgid "will call ``select_related('author', 'category')``."
msgstr "akan memanggil ``select_related('author', 'category')``."

msgid ""
"If you need to specify a dynamic value based on the request, you can "
"implement a :meth:`~ModelAdmin.get_list_select_related` method."
msgstr ""
"Jika anda butuh menentukan nilai dinamis berdasarkan pada permintaan, anda "
"dapat menerapkan cara :meth:`~ModelAdmin.get_list_select_related`."

msgid ""
"Set ``ordering`` to specify how lists of objects should be ordered in the "
"Django admin views. This should be a list or tuple in the same format as a "
"model's :attr:`~django.db.models.Options.ordering` parameter."
msgstr ""
"Setel ``ordering`` untuk menentukan bagaimana daftar dari obyek-obyek harus "
"diurutkan di tampilan admin Django. Ini harus berupa sebuah daftar atau "
"tuple di bentuk sama seperti parameter :attr:`~django.db.models.Options."
"ordering` model."

msgid ""
"If this isn't provided, the Django admin will use the model's default "
"ordering."
msgstr ""
"Jika ini tidak disediakan, admin Django akan menggunakan pengurutan awalan "
"model."

msgid ""
"If you need to specify a dynamic order (for example depending on user or "
"language) you can implement a :meth:`~ModelAdmin.get_ordering` method."
msgstr ""
"Jika anda butuh menentukan urutan dinamis (sebagai contoh bergantung pada "
"pengguna atau bahasa) anda dapat menerapkan sebuah metode :meth:`~ModelAdmin."
"get_ordering`."

msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`ModelAdmin.get_paginator`."
msgstr ""
"Kelas penomoran digunakan untuk menomorkan halaman. Secara awalan, :class:"
"`django.core.paginator.Paginator` digunakan. Jika penyesuaian kelas "
"penomoran tidak mempunyai antarmuka pembangun sama seperti :class:`django."
"core.paginator.Paginator`, anda akan juga butuh menyediakan sebuah penerapan "
"untuk :meth:`ModelAdmin.get_paginator`."

msgid ""
"Set ``prepopulated_fields`` to a dictionary mapping field names to the "
"fields it should prepopulate from::"
msgstr ""
"Setel ``prepopulated_fields`` pada nama-nama bidang pemetaan kamus ke bidang-"
"bidang itu harus mengisi dimuka dari::"

msgid ""
"When set, the given fields will use a bit of JavaScript to populate from the "
"fields assigned. The main use for this functionality is to automatically "
"generate the value for ``SlugField`` fields from one or more other fields. "
"The generated value is produced by concatenating the values of the source "
"fields, and then by transforming that result into a valid slug (e.g. "
"substituting dashes for spaces)."
msgstr ""
"Ketika disetel, bidang-bdiang yang diberikan akan menggunakan sedikit "
"JavaScript untuk mengumpulkan dari bidang-bdiang yang ditugaskan. Penggunaan "
"utama untuk fungsionalitas ini adalah untuk secara otomatis membangkitkan "
"nilai untuk bidang-bidang ``SlugField`` dari satu atau lebih bidang-bidang. "
"Nilai yang dibangkitkan dihasilkan oleh penggabungan nilai-nilai dari bidang-"
"bidang sumber, dan kemudian dengan merubah hasil itu menjadi sebuah keong "
"sah (sebagai contoh mengganti tanda garis untuk ruang)."

msgid ""
"``prepopulated_fields`` doesn't accept ``DateTimeField``, ``ForeignKey``, "
"``OneToOneField``, and ``ManyToManyField`` fields."
msgstr ""
"``prepopulated_fields`` tidak menerima bidang-bidang  ``DateTimeField``, "
"``ForeignKey``, ``OneToOneField``, dan ``ManyToManyField``."

msgid ""
"The admin now preserves filters on the list view after creating, editing or "
"deleting an object. You can restore the previous behavior of clearing "
"filters by setting this attribute to ``False``."
msgstr ""
"Admin sekarang menjaga penyaring pada daftar tampilan setelah membuat, "
"menyunting atau menghapus sebuah obyek. Anda dapat menyimpan kembali "
"perilaku sebelumnya dari membersihkan penyaring dengan mengatur atribut ini "
"menjadi ``False``."

msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey`` or have ``choices`` set. If a field is present in "
"``radio_fields``, Django will use a radio-button interface instead. Assuming "
"``group`` is a ``ForeignKey`` on the ``Person`` model::"
msgstr ""
"Secara awalan, admin Django menggunakan antarmuka kotak-pilih (<select>) "
"untuk bidang-bidang adalah ``ForeignKey`` atau mempunyai ``choices`` "
"disetel. Jika sebuah bidang hadir di ``radio_fields``, Django akan "
"menggunakan antarmuka tombl-radio sebagai gantinya. Menganggap ``group`` "
"adalah sebuah ``ForeignKey`` pada model ``Person``::"

msgid ""
"You have the choice of using ``HORIZONTAL`` or ``VERTICAL`` from the "
"``django.contrib.admin`` module."
msgstr ""
"Anda mempunyai pilihan dari menggunakan ``HORIZONTAL`` atau ``VERTICAL`` "
"dari modul ``django.contrib.admin``."

msgid ""
"Don't include a field in ``radio_fields`` unless it's a ``ForeignKey`` or "
"has ``choices`` set."
msgstr ""
"Jangan menyertakan sebuah bidang dalam ``radio_fields`` meskipun dia adalah "
"``ForeignKey`` atau mempunyai kumpulan ``choices``."

msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey``. Sometimes you don't want to incur the overhead of "
"having to select all the related instances to display in the drop-down."
msgstr ""
"Secara awalan, admin Django menggunakan antarmuka kotak-pilih (<select>) "
"untuk bidang-bidang adalah ``ForeignKey``. Terkadang anda tidak ingin "
"mendatangkan atas dari memiliki untuk memilih semua instance terkait untuk "
"memperlihatkan di drop-down."

msgid ""
"``raw_id_fields`` is a list of fields you would like to change into an "
"``Input`` widget for either a ``ForeignKey`` or ``ManyToManyField``::"
msgstr ""
"``raw_id_fields`` adalah sebuah daftar dari bidang anda ingin rubah menjadi "
"widget ``input`` untuk antara sebuah ``ForeignKey`` atau "
"``ManyToManyField``::"

msgid ""
"The ``raw_id_fields`` ``Input`` widget should contain a primary key if the "
"field is a ``ForeignKey`` or a comma separated list of values if the field "
"is a ``ManyToManyField``.  The ``raw_id_fields`` widget shows a magnifying "
"glass button next to the field which allows users to search for and select a "
"value:"
msgstr ""
"Widget ``Input`` ``raw_id_fields`` harus mengandung sebuah primary key jika "
"bidang adalah sebuah ``ForeignKey`` atau sebuah dipisahkan koma daftar dari "
"nilai-nilai jika bidng adalah ``ManyToManyField``. Widget ``raw_id_fields`` "
"menunjukkan tombol kaca pembesar dekat pada bidang yang mengizinkan pengguna "
"mencari dan memilih sebuah nilai:"

msgid ""
"By default the admin shows all fields as editable. Any fields in this option "
"(which should be a ``list`` or ``tuple``) will display its data as-is and "
"non-editable; they are also excluded from the :class:`~django.forms."
"ModelForm` used for creating and editing. Note that when specifying :attr:"
"`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` the read-only fields "
"must be present to be shown (they are ignored otherwise)."
msgstr ""
"Secara awalan admin menunjukkan semua bidang sebagai dapat disunting. Bidang-"
"bidang apapun di pilihan ini (yang harus berupa sebuah ``list`` atau "
"``tuple``) akan menampilkan data dengan-adanya dan bukan-dapat disunting; "
"mereka juga dikeluarkan dari :class:`~django.forms.ModelForm` digunakan "
"untuk membuat dan menyunting. catat bahwa ketika menentukan :attr:"
"`ModelAdmin.fields` atau :attr:`ModelAdmin.fieldsets` bidang-bidang hanya-"
"baca harus hadir untuk ditunjukkan (mereka diabaikan sebaliknya)."

msgid ""
"If ``readonly_fields`` is used without defining explicit ordering through :"
"attr:`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` they will be added "
"last after all editable fields."
msgstr ""
"Jika ``readonly_fields`` digunakan tanpa menentukan urutan jelas melalui :"
"attr:`ModelAdmin.fields` atau :attr:`ModelAdmin.fieldsets` mereka akan "
"ditambahkan setelah semua bidang dapat disunting."

msgid ""
"A read-only field can not only display data from a model's field, it can "
"also display the output of a model's method or a method of the "
"``ModelAdmin`` class itself. This is very similar to the way :attr:"
"`ModelAdmin.list_display` behaves. This provides an easy way to use the "
"admin interface to provide feedback on the status of the objects being "
"edited, for example::"
msgstr ""
"Sebuah bidang hanya-baca tidak hanya dapat menampilkan data dari bidang "
"model, itu juga dapat memperlihatkan keluaran dari metode model atau metode "
"dari kelas ``ModelAdmin`` itu sendiri. Ini sangat mirip pada cara perilaku :"
"attr:`ModelAdmin.list_display`. ini menyediakan sebuah cara mudah untuk "
"menggunakan antarmuka admin untuk menyediakan umpan balik pada keadaan dari "
"obyek-obyek sedang disunting, sebagai contoh::"

msgid ""
"Set ``save_as`` to enable a \"save as new\" feature on admin change forms."
msgstr ""
"Setel ``save_as`` untuk mengadakan sebuah fitur \"save as new\" pada "
"formulir rubah admin."

msgid ""
"Normally, objects have three save options: \"Save\", \"Save and continue "
"editing\", and \"Save and add another\". If ``save_as`` is ``True``, \"Save "
"and add another\" will be replaced by a \"Save as new\" button that creates "
"a new object (with a new ID) rather than updating the existing object."
msgstr ""
"Biasanya, obyek-obyek mempunyai tiga pilihan simpan: \"Save\", \"Save and "
"continue editing\", dan \"Save and add another\". Jika ``save_as`` adalah "
"``True``, \"Save and add another\" akan diganti oleh sebuah tombol \"Save as "
"new\" yang membuat sebuah obyek baru (dengan sebuah ID baru) daripada "
"memperbaharui obyek yang ada."

msgid "By default, ``save_as`` is set to ``False``."
msgstr "Secara awal, ``save_as`` disetel ke ``False``."

msgid ""
"When :attr:`save_as=True <save_as>`, the default redirect after saving the "
"new object is to the change view for that object. If you set "
"``save_as_continue=False``, the redirect will be to the changelist view."
msgstr ""
"Ketika :attr:`save_as=True <save_as>`, awalan pengalihan setelah menyimpan "
"obyek baru adalah merubah tampilan untuk obyek itu. Jika anda menyetel "
"``save_as_continue=False``, pengalihan akan ke tampilan daftar rubah."

msgid "By default, ``save_as_continue`` is set to ``True``."
msgstr "Secara awal, ``save_as_continue`` disetel menjadi ``False``."

msgid ""
"Set ``save_on_top`` to add save buttons across the top of your admin change "
"forms."
msgstr ""
"Setel ``save_on_top`` untuk menambah tombol simpan lintas atas dari formulir "
"rubah admin anda."

msgid ""
"Normally, the save buttons appear only at the bottom of the forms. If you "
"set ``save_on_top``, the buttons will appear both on the top and the bottom."
msgstr ""
"Biasanya, tombol simpan muncul hanya pada bawah dari formulir. Jika anda "
"menyetel ``save_on_top``, tombol-tombol akan muncul kedua pada atas dan "
"bawah."

msgid "By default, ``save_on_top`` is set to ``False``."
msgstr "Secara awal, ``save_on_top`` disetel ke ``False``."

msgid ""
"Set ``search_fields`` to enable a search box on the admin change list page. "
"This should be set to a list of field names that will be searched whenever "
"somebody submits a search query in that text box."
msgstr ""
"Setel ``search_fields`` untuk mengadakan sebah kotak pencarian pada halaman "
"daftar rubah admin. Ini harus disetel ke sebuah daftar dari nama-nama bidang "
"yang akan dicari kapanpun seseorang mengajukan permintaan pencarian di kotak "
"teks itu."

msgid ""
"These fields should be some kind of text field, such as ``CharField`` or "
"``TextField``. You can also perform a related lookup on a ``ForeignKey`` or "
"``ManyToManyField`` with the lookup API \"follow\" notation::"
msgstr ""
"Bidang-bidang ini harus ada semacam bidang teks, seperti ``CharField`` atau "
"``TextField``. Anda dapat juga melakukan pencarian terkait pada sebuah "
"``ForeignKey`` atau ``ManyToManyField`` catatan \"follow\" dengan API "
"pencarian::"

msgid ""
"For example, if you have a blog entry with an author, the following "
"definition would enable searching blog entries by the email address of the "
"author::"
msgstr ""
"Sebagai contoh, jika anda mempunyai sebuah masukan blog dengan sebuah "
"penulis, pengertian berikut akan mengadakan pencarian masukan blog "
"berdasarkan alamat surel dari penulis. "

msgid ""
"When somebody does a search in the admin search box, Django splits the "
"search query into words and returns all objects that contain each of the "
"words, case insensitive, where each word must be in at least one of "
"``search_fields``. For example, if ``search_fields`` is set to "
"``['first_name', 'last_name']`` and a user searches for ``john lennon``, "
"Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""
"Ketika seseorang melakukan sebuah pencarian di kotak pencarian admin, Django "
"membagi permintaan pencarian menjadi kata-kata dan mengembalikan semua obyek "
"yang mengandung setiap kata-kata, huruf tidak sensitif, dimana setiap kata "
"harus setidaknya satu dari ``search_fields``. Sebagai contoh, jika "
"``search_fields`` disetel menjadi ``['first_name', 'last_name']`` dan "
"pengguna mencari ``john lennon``, Django akan melakukan setara dari kalusa "
"``WHERE`` SQL ini::"

msgid ""
"For faster and/or more restrictive searches, prefix the field name with an "
"operator:"
msgstr ""
"Untuk tercepat dan/atau pencarian lebih ketak, awalan nama bidang dengan "
"sebuah penghubung:"

msgid "``^``"
msgstr "``^``"

msgid ""
"Use the '^' operator to match starting at the beginning of the field. For "
"example, if ``search_fields`` is set to ``['^first_name', '^last_name']`` "
"and a user searches for ``john lennon``, Django will do the equivalent of "
"this SQL ``WHERE`` clause::"
msgstr ""
"Gunakan penghubung '^' untuk mencocokkan permulaan pada awalan dari bidang. "
"Sebagai contoh jika ``search_fields`` disetel menjadi ``['^first_name', "
"'^last_name']`` dan pengguna mencari untuk ``john lennon``, Django akan "
"melakukan setara dari klausa ``WHERE`` SQL ini::"

msgid ""
"This query is more efficient than the normal ``'%john%'`` query, because the "
"database only needs to check the beginning of a column's data, rather than "
"seeking through the entire column's data. Plus, if the column has an index "
"on it, some databases may be able to use the index for this query, even "
"though it's a ``LIKE`` query."
msgstr ""
"Permintaan ini lebih efesien daripada permintaan ``'%john%'`` biasa, karena "
"basisdata hanya butuh memeriksa permulaan dari sebuah data kolom, daripada "
"mencari melalui keseluruhan data kolom. Ditambah, jika kolom mempunyai "
"sebuah indeks pada nya, beberapa basisdata mungkin dapat menggunakan indeks "
"untuk permintaan ini, meskipun itu adalah sebuah permintaan ``LIKE``."

msgid "``=``"
msgstr "``=``"

msgid ""
"Use the '=' operator for case-insensitive exact matching. For example, if "
"``search_fields`` is set to ``['=first_name', '=last_name']`` and a user "
"searches for ``john lennon``, Django will do the equivalent of this SQL "
"``WHERE`` clause::"
msgstr ""
"Gunakan penghubung '=' untuk pencocokan tepat kasus-tidak sensitif. Sebagai "
"contoh jika ``search_fields`` disetel menjadi ```['=first_name', "
"'=last_name']`` dan pengguna mencari untuk ``john lennon``, Django akan "
"melakukan setara dari klausa ``WHERE`` SQL ini::"

msgid ""
"Note that the query input is split by spaces, so, following this example, "
"it's currently not possible to search for all records in which "
"``first_name`` is exactly ``'john winston'`` (containing a space)."
msgstr ""
"Catat bahwa masukan permintaan dipisah oleh ruang, jadi, ikuti contoh ini, "
"itu saat ini tidak memungkinkan mencari semua rekaman yang ``first_name`` "
"adalah persis ``'john winston'`` (mengandung sebuah ruang)."

msgid "``@``"
msgstr "``@``"

msgid ""
"Using the '@' operator to perform a full text match. This is like the "
"default search method but uses an index. Currently this is only available "
"for MySQL."
msgstr ""
"Menggunakan penghubung '@' untuk melakukan pencocokan teks penuh. Ini "
"seperti metode pencarian awalan tetapi menggunakan sebuah indeks. Saat ini "
"ini hanya tersedia untuk MySQL."

msgid ""
"If you need to customize search you can use :meth:`ModelAdmin."
"get_search_results` to provide additional or alternate search behavior."
msgstr ""
"Jika anda butuh menyesuaikan pencarian anda dapat menggunakan :meth:"
"`ModelAdmin.get_search_results` untuk menyediakan tambahan atau pengganti "
"perilaku pencarian."

msgid ""
"Set ``show_full_result_count`` to control whether the full count of objects "
"should be displayed on a filtered admin page (e.g. ``99 results (103 "
"total)``). If this option is set to ``False``, a text like ``99 results "
"(Show all)`` is displayed instead."
msgstr ""
"Setel ``show_full_result_count`` untuk mengendalikan apakah perhitungan "
"penuh dari obyek harus ditampilkan pada halaman admin disaring (sebagai "
"contoh ``99 hasil (jumlah 103)``). Jika pilihan ini disetel menjadi "
"``False``, sebuah teks seperti ``99 hasil (Tampilkan semua)`` ditampilkan "
"sebagai gantinya."

msgid ""
"The default of ``show_full_result_count=True`` generates a query to perform "
"a full count on the table which can be expensive if the table contains a "
"large number of rows."
msgstr ""
"Awalan dari ``show_full_result_count=True`` membangkitkan sebuah permintaan "
"untuk melakukan perhitungan penuh pada tabel yang dapat mahal jika isi tabel "
"mengandung sejumlah nomor dari baris."

msgid ""
"Set ``view_on_site`` to control whether or not to display the \"View on site"
"\" link. This link should bring you to a URL where you can display the saved "
"object."
msgstr ""
"Setel ``view_on_site`` untuk mengendalikan apakah atau tidak ditampilkan "
"tautan \"View on site\". Tautan ini harus membawa anda ke URL dimana anda "
"dapat menampilkan obyek tersimpan."

msgid ""
"This value can be either a boolean flag or a callable. If ``True`` (the "
"default), the object's :meth:`~django.db.models.Model.get_absolute_url` "
"method will be used to generate the url."
msgstr ""
"Nilai ini dapat berupa baik bendera boolean atau callable. Jika ``True`` "
"(awalan), metode obyek :meth:`~django.db.models.Model.get_absolute_url` akan "
"digunakan untuk membangkitkan url."

msgid ""
"If your model has a :meth:`~django.db.models.Model.get_absolute_url` method "
"but you don't want the \"View on site\" button to appear, you only need to "
"set ``view_on_site`` to ``False``::"
msgstr ""
"Jika model anda mempunyai metode :meth:`~django.db.models.Model."
"get_absolute_url` tetapi anda tidak ingin tombol \"View on site\" muncul, "
"anda hanya butuh mensetel ``view_on_site`` menjadi ``False``::"

msgid ""
"In case it is a callable, it accepts the model instance as a parameter. For "
"example::"
msgstr ""
"Di kasus itu adalah callable, itu menerima instance model sebagai parameter. "
"Sebagi contoh::"

msgid "Custom template options"
msgstr "Penyesuaian pilihan cetakan"

msgid ""
"The :ref:`admin-overriding-templates` section describes how to override or "
"extend the default admin templates.  Use the following options to override "
"the default templates used by the :class:`ModelAdmin` views:"
msgstr ""
"Bagian :ref:`admin-overriding-templates` menggambarkan bagaimana menimpa "
"atau memperpanjang awalan cetakan admin. Gunakan pilihan berikut untuk "
"mengesampingkan cetakan awalan digunakan oleh tampilan :class:`ModelAdmin`: "

msgid "Path to a custom template, used by :meth:`add_view`."
msgstr "Jalur pada cetakan penyesuaian, digunakan oleh :meth:`add_view`."

msgid "Path to a custom template, used by :meth:`change_view`."
msgstr "Jalur untuk cetakan penyesuaian, digunakan oleh :meth:`change_view`."

msgid "Path to a custom template, used by :meth:`changelist_view`."
msgstr ""
"Jalur pada cetakan penyesuaian, digunakan oleh :meth:`changelist_view`."

msgid ""
"Path to a custom template, used by :meth:`delete_view` for displaying a "
"confirmation page when deleting one or more objects."
msgstr ""
"Jalur pada cetakan penyesuaian, digunakan oleh :meth:`delete_view` untuk "
"menampilkan halaman penegasan ketika menghapus satu atau lebih obyek."

msgid ""
"Path to a custom template, used by the ``delete_selected`` action method for "
"displaying a confirmation page when deleting one or more objects. See the :"
"doc:`actions documentation</ref/contrib/admin/actions>`."
msgstr ""
"Jalur pada cetakan penyesuaian, digunakan oleh tindakan ``delete_selected`` "
"untuk memperlihatkan halaman penegasan ketika menghapus satu atau lebih "
"obyek. Lihat :doc:`actions documentation</ref/contrib/admin/actions>`."

msgid "Path to a custom template, used by :meth:`history_view`."
msgstr "Jalur pada cetakan penyesuaian, digunakan oleh :meth:`history_view`."

msgid ""
"Path to a custom template, used by :meth:`response_add`, :meth:"
"`response_change`, and :meth:`response_delete`."
msgstr ""
"Jalur pada cetakan penyesuaian, digunakan oleh :meth:`response_add`, :meth:"
"`response_change`, dan :meth:`response_delete`."

msgid "``ModelAdmin`` methods"
msgstr "Cara ``ModelAdmin``"

msgid ""
"When overriding :meth:`ModelAdmin.save_model` and :meth:`ModelAdmin."
"delete_model`, your code must save/delete the object. They aren't meant for "
"veto purposes, rather they allow you to perform extra operations."
msgstr ""
"Ketika menimpa :meth:`ModelAdmin.save_model` dan :meth:`ModelAdmin."
"delete_model`, kode anda harus simpan/hapus obyek. Mereka tidak berarti "
"untuk tujuan melarang, daripada mereka mengizinkan anda melakukan tindakan "
"tambahan."

msgid ""
"The ``save_model`` method is given the ``HttpRequest``, a model instance, a "
"``ModelForm`` instance, and a boolean value based on whether it is adding or "
"changing the object. Overriding this method allows doing pre- or post-save "
"operations. Call ``super().save_model()`` to save the object using :meth:`."
"Model.save`."
msgstr ""
"Metode ``save_model`` memberikan ``HttpRequest``, sebuah instance model, "
"sebuah instance ``ModelForm``, dan sebuah nilai boolean berdasarkan pada "
"apakah itu sedang menambahkan atau merubah obyek. Menimpa metode ini "
"mengizinkan melakukan tindakan pra- atau menempatkan-simpan. Memanggil "
"``super().save_model()`` untuk menyimpan obyek menggunakan :meth:`.Model."
"save`."

msgid "For example to attach ``request.user`` to the object prior to saving::"
msgstr ""
"Sebagai contoh untuk melampirkan ``request.user`` pada obyek sebelum "
"menyimpannya::"

msgid ""
"The ``delete_model`` method is given the ``HttpRequest`` and a model "
"instance. Overriding this method allows doing pre- or post-delete "
"operations. Call ``super().delete_model()`` to delete the object using :meth:"
"`.Model.delete`."
msgstr ""
"Metode ``delete_model`` diberikan ``HttpRequest`` dan sebuah instance model. "
"Mengesampingkan metode ini mengizinkan melakukan tindakan menghapus pra- "
"atau pasca-. Panggil ``super().delete_model()`` untuk menghapus obyek "
"menggunakan :meth:`.Model.delete`."

msgid ""
"The ``save_formset`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance and a boolean value based on whether it is adding or "
"changing the parent object."
msgstr ""
"Metode ``save_formset`` memberikan ``HttpRequest``, instance ``ModelForm`` "
"induk dan nilai boolean berdasarkan pada apakah itu sedang menambahkan atau "
"merubah obyek induk."

msgid ""
"For example, to attach ``request.user`` to each changed formset model "
"instance::"
msgstr ""
"Sebagai contoh, untuk melampirkan ``request.user`` pada setiap instance "
"model formset dirubah::"

msgid "See also :ref:`saving-objects-in-the-formset`."
msgstr "Lihat juga :ref:`saving-objects-in-the-formset`."

msgid ""
"The ``get_ordering`` method takes a ``request`` as parameter and is expected "
"to return a ``list`` or ``tuple`` for ordering similar to the :attr:"
"`ordering` attribute. For example::"
msgstr ""
"Metode ``get_ordering`` mengambil ``request`` sebagai parameter dan "
"diharapkan mengembalikan sebuah ``list`` atau ``tuple`` untuk mengurutkan "
"mirip pada atribut :attr:`ordering`. Sebagai contoh::"

msgid ""
"The ``get_search_results`` method modifies the list of objects displayed "
"into those that match the provided search term. It accepts the request, a "
"queryset that applies the current filters, and the user-provided search "
"term. It returns a tuple containing a queryset modified to implement the "
"search, and a boolean indicating if the results may contain duplicates."
msgstr ""
"Metode ``get_search_results`` merubah daftar dari obyek-obyek diperlihatkan "
"kedalam itu yang cocok istilah pencarian disediakan. Itu menerima "
"permintaan, sebuah queryset yang memberlakukan penyaring saat ini, dan "
"istilah pencarian disediakan-pengguna. Itu mengembalikan sebuah tuple "
"mengandung sebuah queryset dirubah untuk menerapkan pencarian, dan sebuah "
"boolean mengindikasikan jika hasil mungkin mengandung ganda."

msgid ""
"The default implementation searches the fields named in :attr:`ModelAdmin."
"search_fields`."
msgstr ""
"Pencarian penerapan awalan bidang-bidang bernama di :attr:`ModelAdmin."
"search_fields`."

msgid ""
"This method may be overridden with your own custom search method. For "
"example, you might wish to search by an integer field, or use an external "
"tool such as Solr or Haystack. You must establish if the queryset changes "
"implemented by your search method may introduce duplicates into the results, "
"and return ``True`` in the second element of the return value."
msgstr ""
"Metode ini mungkin dikesampingkan dengan metode pencarian penyesuaian anda "
"sendiri. Sebagai contoh, anda mungkin berharap mencari sebuah bidang "
"integer, atau gunakan alat tambahan seperti Solr atau Haystack. Anda harus "
"membangun jika perubahan queryset diterapkan dengan metode pencarian anda "
"mungkin memperkenalkan ganda kedalam hasil, dan mengembalikan ``True`` di "
"unsur kedua dari nilai kembalian."

msgid "For example, to search by ``name`` and ``age``, you could use::"
msgstr ""
"Sebagai contoh, untuk mencari ``name`` dan ``age``, anda dapat menggunakan::"

msgid ""
"This implementation is more efficient than ``search_fields = ('name', "
"'=age')`` which results in a string comparison for the numeric field, for "
"example ``... OR UPPER(\"polls_choice\".\"votes\"::text) = UPPER('4')`` on "
"PostgreSQL."
msgstr ""
"Penerapan ini lebih efesien dari ``search_fields = ('name', '=age')`` yang "
"menghasilkan dalam sebuah perbandingan string untuk bidang numerik, sebagai "
"contoh ``... OR UPPER(\"polls_choice\".\"votes\"::text) = UPPER('4')`` pada "
"PostgreSQL."

msgid ""
"The ``save_related`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance, the list of inline formsets and a boolean value "
"based on whether the parent is being added or changed. Here you can do any "
"pre- or post-save operations for objects related to the parent. Note that at "
"this point the parent object and its form have already been saved."
msgstr ""
"Metode ``save_related`` memberikan ``HttpRequest``, sebuah instance "
"``ModelForm`` induk, daftar dari formset berderet dan sebuah nilai boolean "
"berdasarkan pada apakah induk sedang ditambahkan atau dirubah. Disini anda "
"dapat melakukan tindakan pra- atau pasca- untuk obyek-obyek terkait ke "
"induk. Catat bahwa pada titik ini obyek induk dan formulirnya telah disimpan."

msgid ""
"The ``get_readonly_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``list`` or ``tuple`` of field names that will be displayed as read-only, "
"as described above in the :attr:`ModelAdmin.readonly_fields` section."
msgstr ""
"Metode ``get_readonly_fields`` memberikan ``HttpRequest`` dan ``obj`` sedang "
"disunting atau ``None`` pada sebuah formulir tambah) dan diharapkan "
"mengembalikan sebuah ``list`` (atau ``tuple`` dari nama-nama bidang yang "
"akan diperlihatkan sebagai hanya-baca, seperti digambarkan diatas di bagian :"
"attr:`ModelAdmin.readonly_fields`."

msgid ""
"The ``get_prepopulated_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``dictionary``, as described above in the :attr:`ModelAdmin."
"prepopulated_fields` section."
msgstr ""
"Metode ``get_prepopulated_fields`` memberikan ``HttpRequest`` dan ``obj`` "
"sedang disunting (atau ``None`` pada sebuah formulir tambah) dan diharapkan "
"untuk mengembalikan sebuah ``dictionary``, seperti digambarkan diatas di "
"bagian :attr:`ModelAdmin.prepopulated_fields`."

msgid ""
"The ``get_list_display`` method is given the ``HttpRequest`` and is expected "
"to return a ``list`` or ``tuple`` of field names that will be displayed on "
"the changelist view as described above in the :attr:`ModelAdmin."
"list_display` section."
msgstr ""
"Metode ``get_list_display`` memberikan ``HttpRequest`` dan diharapkan "
"mengembalikan sebuah ``list`` atau ``tuple`` dari nama-nama bidang yang akan "
"diperlihatkan pada tampilan daftar rubah seperti digambarkan diatas di "
"bagian :attr:`ModelAdmin.list_display`. "

msgid ""
"The ``get_list_display_links`` method is given the ``HttpRequest`` and the "
"``list`` or ``tuple`` returned by :meth:`ModelAdmin.get_list_display`. It is "
"expected to return either ``None`` or a ``list`` or ``tuple`` of field names "
"on the changelist that will be linked to the change view, as described in "
"the :attr:`ModelAdmin.list_display_links` section."
msgstr ""
"Metode ``get_list_display_links`` memberikan ``HttpRequest`` dan ``list`` "
"atau ``tuple`` dikembalikan oleh :meth:`ModelAdmin.get_list_display`. Itu "
"diharapkan mengembalikan antara ``None`` atau sebuah ``list`` atau ``tuple`` "
"dari nama-nama bidang pada daftar rubah yang akan ditautkan ke tampilan "
"rubah, seperti digambarkan di bagian :attr:`ModelAdmin.list_display_links`. "

msgid ""
"The ``get_exclude`` method is given the ``HttpRequest`` and the ``obj`` "
"being edited (or ``None`` on an add form) and is expected to return a list "
"of fields, as described in :attr:`ModelAdmin.exclude`."
msgstr ""
"Metode ``get_exclude`` memberikan ``HttpRequest`` dan ``obj`` sedang "
"disunting (atau ``None`` pada sebuah formulir tambah) dan diharapkan untuk "
"mengembalikan sebuah daftar dari bidang-bidang, seperti digambarkan diatas "
"di bagian :attr:`ModelAdmin.exclude`."

msgid ""
"The ``get_fields`` method is given the ``HttpRequest`` and the ``obj`` being "
"edited (or ``None`` on an add form) and is expected to return a list of "
"fields, as described above in the :attr:`ModelAdmin.fields` section."
msgstr ""
"Metode ``get_fields`` memberikan ``HttpRequest`` dan ``obj`` sedang "
"disunting (atau ``None`` pada sebuah formulir tambah) dan diharapkan untuk "
"mengembalikan sebuah daftar dari bidang-bidang, seperti digambarkan diatas "
"di bagian :attr:`ModelAdmin.fields`."

msgid ""
"The ``get_fieldsets`` method is given the ``HttpRequest`` and the ``obj`` "
"being edited (or ``None`` on an add form) and is expected to return a list "
"of two-tuples, in which each two-tuple represents a ``<fieldset>`` on the "
"admin form page, as described above in the :attr:`ModelAdmin.fieldsets` "
"section."
msgstr ""
"Metode ``get_fieldsets`` memberikan ``HttpRequest`` dan ``obj`` sedang "
"disunting atau ``None`` pada sebuah formulir tambah) dan diharapkan "
"mengembalikan sebuah daftar dari dua-tuple, dimana setiap dua-tuple mewakili "
"sebuah ``<fieldset>`` pada halaman formulir admin, seperti digambarkan "
"diatas di bagian :attr:`ModelAdmin.fieldsets`."

msgid ""
"The ``get_list_filter`` method is given the ``HttpRequest`` and is expected "
"to return the same kind of sequence type as for the :attr:`~ModelAdmin."
"list_filter` attribute."
msgstr ""
"Metode ``get_list_filter`` memberikan ``HttpRequest`` dan diharapkan "
"mengembalikan jenis yang sama dari urutan jenis seperti untuk atribut :attr:"
"`~ModelAdmin.list_filter`."

msgid ""
"The ``get_list_select_related`` method is given the ``HttpRequest`` and "
"should return a boolean or list as :attr:`ModelAdmin.list_select_related` "
"does."
msgstr ""
"Metode ``get_list_select_related`` memberikan ``HttpRequest`` dan harus "
"mengembalikan sebuah boolean atau daftar seperti :attr:`ModelAdmin."
"list_select_related` lakukan."

msgid ""
"The ``get_search_fields`` method is given the ``HttpRequest`` and is "
"expected to return the same kind of sequence type as for the :attr:"
"`~ModelAdmin.search_fields` attribute."
msgstr ""
"Metode ``get_search_fields`` memberikan ``HttpRequest`` dan diharapkan "
"mengembalikan jenis yang sama dari urutan jenis seperti untuk atribut :attr:"
"`~ModelAdmin.search_fields`."

msgid ""
"The ``get_inline_instances`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``list`` or ``tuple`` of :class:`~django.contrib.admin.InlineModelAdmin` "
"objects, as described below in the :class:`~django.contrib.admin."
"InlineModelAdmin` section. For example, the following would return inlines "
"without the default filtering based on add, change, and delete permissions::"
msgstr ""
"Metode ``get_inline_instances`` memberikan ``HttpRequest`` dan ``obj`` "
"sedang disunting (atau ``None`` pada sebuah formulir tambah) dan diharapkan "
"mengembalikan sebuah ``list`` atau ``tuple`` dari obyek :class:`~django."
"contrib.admin.InlineModelAdmin`, seperti digambarkan dibawah di bagian :"
"class:`~django.contrib.admin.InlineModelAdmin`. Sebagai contoh, berikut akan "
"mengembalikan berderet tanpa awalan penyaringan berdasarkan pada perizinan "
"tambah, rubah, dan hapus::"

msgid ""
"If you override this method, make sure that the returned inlines are "
"instances of the classes defined in :attr:`inlines` or you might encounter a "
"\"Bad Request\" error when adding related objects."
msgstr ""
"Jika anda mengutamakan metode ini, pastikan bahwa berderet dikembalikan "
"adalah instance dari kelas-kelas ditentukan di :attr:`inlines` atau anda "
"mungkin menghadapi kesalahan \"Bad Request\" ketika menambahkan obyek-obyek "
"terkait."

msgid ""
"The ``get_urls`` method on a ``ModelAdmin`` returns the URLs to be used for "
"that ModelAdmin in the same way as a URLconf.  Therefore you can extend them "
"as documented in :doc:`/topics/http/urls`::"
msgstr ""
"Metode ``get_urls`` pada sebuah ``ModelAdmin`` mengembalikan URL untuk "
"digunakan untuk ModelAdmin itu di cara yang sama seperti sebuah URLconf. "
"Karena itu anda dapat memperpanjang mereka seperti didokumentasikan di :doc:"
"`/topics/http/urls`::"

msgid ""
"If you want to use the admin layout, extend from ``admin/base_site.html``:"
msgstr ""
"Jika anda ingin menggunakan tata letak admin, perpanjang dari ``admin/"
"base_site.html``:"

msgid ""
"Notice that the custom patterns are included *before* the regular admin "
"URLs: the admin URL patterns are very permissive and will match nearly "
"anything, so you'll usually want to prepend your custom URLs to the built-in "
"ones."
msgstr ""
"Perhatikan bahwa pola penyesuaian disertakan *sebelum* URL admin biasa: pola "
"URL admin  adalah sangat membolehkan dan akan cocok hampir apapun, jadi anda "
"akan biasanya ingin menambahkan URL penyesuaian anda pada satu di siap-"
"pakai. "

msgid ""
"In this example, ``my_view`` will be accessed at ``/admin/myapp/mymodel/"
"my_view/`` (assuming the admin URLs are included at ``/admin/``.)"
msgstr ""
"Di contoj ini, ``my_view`` akan diakses pada ``/admin/myapp/mymodel/my_view/"
"`` (menganggap URL admin disertakan pada ``/admin/``.)"

msgid ""
"However, the ``self.my_view`` function registered above suffers from two "
"problems:"
msgstr ""
"Bagaimanapun, fungsi ``self.my_view`` terdaftar diatas menderita dari dua "
"masalah:"

msgid ""
"It will *not* perform any permission checks, so it will be accessible to the "
"general public."
msgstr ""
"Itu *tidak* akan melakukan pemeriksaan perizinan apapun, jadi itu akan dapat "
"diakses unutk masyarakat umum. "

msgid ""
"It will *not* provide any header details to prevent caching. This means if "
"the page retrieves data from the database, and caching middleware is active, "
"the page could show outdated information."
msgstr ""
"Itu *tidak* akan menyediakan rincian kepala apapun untuk mencegah "
"penyimpanan sementara. Ini berarti jika halaman mengambil data dari "
"basisdata, dan middleware penyimpanan sementara aktid, halaman dapat "
"menampilkan informasi usang."

msgid ""
"Since this is usually not what you want, Django provides a convenience "
"wrapper to check permissions and mark the view as non-cacheable. This "
"wrapper is ``AdminSite.admin_view()`` (i.e. ``self.admin_site.admin_view`` "
"inside a ``ModelAdmin`` instance); use it like so::"
msgstr ""
"Sejak ini biasanya bukan apa anda inginkan, Django menyediakan pembungkus "
"kenyamanan untuk memeriksa perizinan dan menandai tampilan sebagai bukan-"
"cacheable. pembungkus ini adalah ``AdminSite.admin_view()`` (i.e. ``self."
"admin_site.admin_view`` didalam sebuah instance ``ModelAdmin``); gunakan itu "
"seperti begitu::"

msgid "Notice the wrapped view in the fifth line above::"
msgstr "Perhatikan tampilan dibungkus di baris kelima diatas:"

msgid ""
"This wrapping will protect ``self.my_view`` from unauthorized access and "
"will apply the :func:`django.views.decorators.cache.never_cache` decorator "
"to make sure it is not cached if the cache middleware is active."
msgstr ""
"Pembungkus ini akan melindungi ``self.my_view`` dari akses tidak "
"terotorisasi dan akan memberlakukan penghias :func:`django.views.decorators."
"cache.never_cache` untuk memastikan itu tidak disimpan sementara jika "
"middleware cache aktif."

msgid ""
"If the page is cacheable, but you still want the permission check to be "
"performed, you can pass a ``cacheable=True`` argument to ``AdminSite."
"admin_view()``::"
msgstr ""
"Jika halaman adalah cacheable, tetapi anda masih ingin pemeriksaan perizinan "
"dilakukan, anda dapat melewatkan sebuah argumen ``cacheable=True`` pada "
"``AdminSite.admin_view()``::"

msgid ""
"``ModelAdmin`` views have ``model_admin`` attributes. Other ``AdminSite`` "
"views have ``admin_site`` attributes."
msgstr ""
"Tampilan ``ModelAdmin`` mempunyai atribut ``model_admin``. Selain tampilan "
"``AdminSite`` mempunyai atribut ``admin_site``."

msgid ""
"Returns a :class:`~django.forms.ModelForm` class for use in the admin add "
"and change views, see :meth:`add_view` and :meth:`change_view`."
msgstr ""
"Mengembalikan sebuah kelas :class:`~django.forms.ModelForm` untuk digunakan "
"di tampilan tambah dan rubah admin, lihat :meth:`add_view` dan :meth:"
"`change_view`."

msgid ""
"The base implementation uses :func:`~django.forms.models.modelform_factory` "
"to subclass :attr:`~form`, modified by attributes such as :attr:`~fields` "
"and :attr:`~exclude`. So, for example, if you wanted to offer additional "
"fields to superusers, you could swap in a different base form like so::"
msgstr ""
"Penerapan dasar menggunakan :func:`~django.forms.models.modelform_factory` "
"pada subkelas :attr:`~form`, dirubah oleh atribut seperti  :attr:`~fields` "
"dan :attr:`~exclude`. Jadi, sebagai contoh, jika anda ingin menawarkan "
"tambahan bidang-bidang le superuser, anda dapat menukar formulir dasar "
"berbeda seperi begitu::"

msgid ""
"You may also simply return a custom :class:`~django.forms.ModelForm` class "
"directly."
msgstr ""
"Anda mungkin juga hanya mengembalikan kelas :class:`~django.forms.ModelForm` "
"penyesuaian langsung."

msgid ""
"Yields (``FormSet``, :class:`InlineModelAdmin`) pairs for use in admin add "
"and change views."
msgstr ""
"Menghasilkan (``FormSet``, :class:`InlineModelAdmin`) pasangan untuk "
"digunakan di tampilan tambah dan rubah admin."

msgid ""
"For example if you wanted to display a particular inline only in the change "
"view, you could override ``get_formsets_with_inlines`` as follows::"
msgstr ""
"Sebagai contoh jika anda ingin memperlihatkan hanya berderet tertentu di "
"tampilan rubah, anda dapat menimpa ``get_formsets_with_inlines`` sebagai "
"berikut::"

msgid ""
"The ``formfield_for_foreignkey`` method on a ``ModelAdmin`` allows you to "
"override the default formfield for a foreign keys field. For example, to "
"return a subset of objects for this foreign key field based on the user::"
msgstr ""
"Metode ``formfield_for_foreignkey`` pada sebuah ``ModelAdmin`` mengizinkan "
"anda menimpa formfield awalan untuk bidang foreign key. Sebagai contoh, "
"untuk mengembalikan bagian dari obyek-obyek untuk bidang foreign key ini "
"berdasarkan pada pengguna::"

msgid ""
"This uses the ``HttpRequest`` instance to filter the ``Car`` foreign key "
"field to only display the cars owned by the ``User`` instance."
msgstr ""
"Penggunaan ini instance ``HttpRequest`` untuk menyaring bidang foreign key "
"``Car`` ke hanya meperlihatkan mobil dimiliki oleh instance ``User``."

msgid ""
"Like the ``formfield_for_foreignkey`` method, the "
"``formfield_for_manytomany`` method can be overridden to change the default "
"formfield for a many to many field. For example, if an owner can own "
"multiple cars and cars can belong to multiple owners -- a many to many "
"relationship -- you could filter the ``Car`` foreign key field to only "
"display the cars owned by the ``User``::"
msgstr ""
"Seperti metode ``formfield_for_foreignkey``, metode "
"``formfield_for_manytomany`` dapat dikesampingkan untuk merubah formfield "
"awalan untuk bidang many to many. Sebagai contoh, jika seorang pemilik dapat "
"memiliki banyak mobil dan mobil dapat dimiliki banyak pemilik -- hubungan "
"many to many -- anda dapat penyaring bidang foreign key ``Car`` pada hanya "
"memperlihatkan pemilik mobil berdasarkan ``User``::"

msgid ""
"Like the ``formfield_for_foreignkey`` and ``formfield_for_manytomany`` "
"methods, the ``formfield_for_choice_field`` method can be overridden to "
"change the default formfield for a field that has declared choices. For "
"example, if the choices available to a superuser should be different than "
"those available to regular staff, you could proceed as follows::"
msgstr ""
"Seperti metode ``formfield_for_foreignkey`` dan "
"``formfield_for_manytomany``, metode ``formfield_for_choice_field`` dapat "
"ditimpa untuk merubah formfield awalan untuk sebuah bidang yang telah "
"menyatakan pilihan. Sebagai contoh, jika pilihan tersedia pada superuser "
"harus berbeda dari tersebut tersedia pada staf biasa, anda dapat meneruskan "
"sebagai berikut::"

msgid ""
"Any ``choices`` attribute set on the formfield will be limited to the form "
"field only. If the corresponding field on the model has choices set, the "
"choices provided to the form must be a valid subset of those choices, "
"otherwise the form submission will fail with a :exc:`~django.core.exceptions."
"ValidationError` when the model itself is validated before saving."
msgstr ""
"Setiap kumpulan atribut ``choices`` pada formfield akan dibatasi pada hanya "
"bidang formulir. Jika bidang berhubungan pada model mempunyai kumpulan "
"pilihan, pilihan-pilihan akan disediakan pada formulir harus berupa "
"subkumpulan sah dari pilihan-pilihan tersebut, sebaliknya pengajuan formulir "
"akan gagal dengan sebuah :exc:`~django.core.exceptions.ValidationError` "
"ketika model itu sendiri disahkan sebelum disimpan."

msgid ""
"Returns the ``Changelist`` class to be used for listing. By default, "
"``django.contrib.admin.views.main.ChangeList`` is used. By inheriting this "
"class you can change the behavior of the listing."
msgstr ""
"Mengembalikan kelas ``Changelist`` untuk digunakan untuk pendaftaran. Secara "
"awalan, ``django.contrib.admin.views.main.ChangeList`` digunakan. Dengan "
"mewarisi kelas ini anda dapat merubah perilaku dari pendaftaran."

msgid ""
"Returns a :class:`~django.forms.ModelForm` class for use in the ``Formset`` "
"on the changelist page. To use a custom form, for example::"
msgstr ""
"Mengembalikan sebuah kelas :class:`~django.forms.ModelForm` untuk digunakan "
"di  ``Formset`` pada halaman daftar rubah. Untuk menggunakan formulir "
"penyesuaian, sebagai contoh::"

msgid ""
"If you define the ``Meta.model`` attribute on a :class:`~django.forms."
"ModelForm`, you must also define the ``Meta.fields`` attribute (or the "
"``Meta.exclude`` attribute). However, ``ModelAdmin`` ignores this value, "
"overriding it with the :attr:`ModelAdmin.list_editable` attribute. The "
"easiest solution is to omit the ``Meta.model`` attribute, since "
"``ModelAdmin`` will provide the correct model to use."
msgstr ""
"Jika anda menentukan atribut ``Meta.model`` pada sebuah :class:`~django."
"forms.ModelForm`, anda harus juga menentukan atribut ``Meta.fields`` (atau "
"atribut ``Meta.exclude``). Bagaimanapun, ``ModelAdmin`` mengabaikan nilai "
"ini, menimpa itu dengan atribut :attr:`ModelAdmin.list_editable`. Pemecahan "
"paling mudah adalah menghilangkan atribut ``Meta.model``, sejak "
"``ModelAdmin`` akan menyediakan model benar untuk digunakan."

msgid ""
"Returns a :ref:`ModelFormSet <model-formsets>` class for use on the "
"changelist page if :attr:`~ModelAdmin.list_editable` is used. To use a "
"custom formset, for example::"
msgstr ""
"Mengembalikan sebuah kelas :ref:`ModelFormSet <model-formsets>` untuk "
"digunakan pada halaman daftar rubah jika :attr:`~ModelAdmin.list_editable` "
"digunakan. Untuk menggunakan formset penyesuaian, sebagai contoh::"

msgid ""
"Should return ``True`` if adding an object is permitted, ``False`` otherwise."
msgstr ""
"Harus mengembalikan ``True`` jika menambahkan sebuah obyek diizinkan, "
"``False`` sebaliknya."

msgid ""
"Should return ``True`` if editing obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"editing of objects of this type is permitted in general (e.g., ``False`` "
"will be interpreted as meaning that the current user is not permitted to "
"edit any object of this type)."
msgstr ""
"Harus mengembalikan ``True`` jika menyunting obyek diizinkan, ``False`` "
"sebaliknya. Jika obyek adalah ``None``, harus mengembalikan ``True`` atau "
"``False`` untuk menandakan apakah menyunting obyek dari jenis ini diizinkan "
"secara umum (sebagai contoh, ``False`` akan ditafsirkan sebagai arti bahwa "
"pengguna tidak diizinkan menyunting obyek apapun dari jenis ini)."

msgid ""
"Should return ``True`` if deleting obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"deleting objects of this type is permitted in general (e.g., ``False`` will "
"be interpreted as meaning that the current user is not permitted to delete "
"any object of this type)."
msgstr ""
"Harus mengembalikan ``True`` jika menghapus obyek diizinkan, ``False`` "
"sebaliknya. Jika obyek adalah ``None``, harus mengembalikan ``True`` atau "
"``False`` untuk menandakan apakah menghapus obyek dari jenis ini diizinkan "
"secara umum (sebagai contoh, ``False`` akan ditafsirkan sebagai arti bahwa "
"pengguna saat ini tidak diizinkan menghapus obyek apapun dari jenis ini)."

msgid ""
"Should return ``True`` if displaying the module on the admin index page and "
"accessing the module's index page is permitted, ``False`` otherwise. Uses :"
"meth:`User.has_module_perms() <django.contrib.auth.models.User."
"has_module_perms>` by default. Overriding it does not restrict access to the "
"add, change or delete views, :meth:`~ModelAdmin.has_add_permission`, :meth:"
"`~ModelAdmin.has_change_permission`, and :meth:`~ModelAdmin."
"has_delete_permission` should be used for that."
msgstr ""
"Harus mengembalikan ``True`` jika memperlihatkan modul pada halaman indeks "
"admin dan mengakses halaman indeks admin diizinkan, ``False`` sebaliknya. "
"Gunakan :meth:`User.has_module_perms() <django.contrib.auth.models.User."
"has_module_perms>` secara awalan. Mengutamakan itu tidak membatasi akses "
"untuk menambah, merubah atau menghapus tampilan, :meth:`~ModelAdmin."
"has_add_permission`, :meth:`~ModelAdmin.has_change_permission`, dan :meth:"
"`~ModelAdmin.has_delete_permission` harus digunakan untuk itu."

msgid ""
"The ``get_queryset`` method on a ``ModelAdmin`` returns a :class:`~django.db."
"models.query.QuerySet` of all model instances that can be edited by the "
"admin site. One use case for overriding this method is to show objects owned "
"by the logged-in user::"
msgstr ""
"Metode ``get_queryset`` pada sebuah ``ModelAdmin`` mengembalikan sebuah :"
"class:`~django.db.models.query.QuerySet` dari semua instance model yang "
"dapat disunting oleh situs admin. Satu kasus penggunaan dari mengutamakan "
"metode ini adalah menunjukkan obyek-obyek dimiliki oleh pengguna masuk::"

msgid ""
"Sends a message to the user using the :mod:`django.contrib.messages` "
"backend.  See the :ref:`custom ModelAdmin example <custom-admin-action>`."
msgstr ""
"Mengirim sebuah pesan ke pengguna menggunakan backend :mod:`django.contrib."
"messages`. Lihat :ref:`custom ModelAdmin example <custom-admin-action>`."

msgid ""
"Keyword arguments allow you to change the message level, add extra CSS tags, "
"or fail silently if the ``contrib.messages`` framework is not installed. "
"These keyword arguments match those for :func:`django.contrib.messages."
"add_message`, see that function's documentation for more details. One "
"difference is that the level may be passed as a string label in addition to "
"integer/constant."
msgstr ""
"Argumen kata kunci mengizinkan anda merubah tingkatan pesan, menambah "
"tambahan etiket CSS, atau gagal secara diam jika kerangka kerja ``contrib."
"messages`` tidak dipasang. Argumen kata kunci ini cocok dengan untuk :func:"
"`django.contrib.messages.add_message`, lihat dokumentasi fungsi itu untuk "
"lebih rinci. Satu perbedaan adalah bahwa tingkatan mungkin dilewatkan "
"sebagai label string sebagai tambahan pada integer/ketetapan."

msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator`."
msgstr ""
"Mengembalikan sebuah instance dari penomor digunakan untuk tampilan ini. "
"Secara awalan, instasiasi sebuah instance dari :attr:`paginator`."

msgid ""
"Determines the :class:`~django.http.HttpResponse` for the :meth:`add_view` "
"stage."
msgstr ""
"Menentukan tahap the :class:`~django.http.HttpResponse` for the :meth:"
"`add_view`."

msgid ""
"``response_add`` is called after the admin form is submitted and just after "
"the object and all the related instances have been created and saved. You "
"can override it to change the default behavior after the object has been "
"created."
msgstr ""
"``response_add`` dipanggil setelah formulir admin diajukan dan hanya setelah "
"obyek dan semua instances terkait telah dibuat dan disimpan. Anda dapat "
"menimpanya untuk merubah perilaku awalan setelah obyek telah dibuat."

msgid ""
"Determines the :class:`~django.http.HttpResponse` for the :meth:"
"`change_view` stage."
msgstr ""
"Menentukan tahap :class:`~django.http.HttpResponse` for the :meth:"
"`change_view`."

msgid ""
"``response_change`` is called after the admin form is submitted and just "
"after the object and all the related instances have been saved. You can "
"override it to change the default behavior after the object has been changed."
msgstr ""
"``response_change`` dipanggil setelah formulir admin diajukan dan hanya "
"setelah obyek dan semua instances terkait telah disimpan. Anda dapat "
"menimpanya untuk merubah perilaku awalan setelah obyek telah dirubah."

msgid ""
"Determines the :class:`~django.http.HttpResponse` for the :meth:"
"`delete_view` stage."
msgstr ""
"Menentukan :class:`~django.http.HttpResponse` untuk tahap :meth:"
"`delete_view`."

msgid ""
"``response_delete`` is called after the object has been deleted. You can "
"override it to change the default behavior after the object has been deleted."
msgstr ""
"``response_delete`` dipanggil setelah obyek telah dihapus. Anda dapat "
"menimpa ini untuk merubah kebiasaan awal setelah obyek telah dihapus."

msgid "``obj_display`` is a string with the name of the deleted object."
msgstr "``obj_display`` adalah sebuah string dengan nama dari obyek terhapus."

msgid ""
"``obj_id`` is the serialized identifier used to retrieve the object to be "
"deleted."
msgstr ""
"``obj_id`` adalah penciri serial digunakan untuk mengambil obyek untuk "
"dihapus."

msgid ""
"A hook for the initial data on admin change forms. By default, fields are "
"given initial values from ``GET`` parameters. For instance, ``?"
"name=initial_value`` will set the ``name`` field's initial value to be "
"``initial_value``."
msgstr ""
"Sebuah kaitan untuk data inisial pada formulir rubah admin. Secara awalan, "
"bidang-bidang diberikan nilai-nilai inisial dari parameter ``GET``. Sebagai "
"contoh, ``?name=initial_value`` akan menyetel nilai inisial bidang ``name`` "
"menjadi ``initial_value``."

msgid ""
"This method should return a dictionary in the form ``{'fieldname': "
"'fieldval'}``::"
msgstr ""
"Metode ini harus mengembalikan sebuah kamus di formulir ``{'fieldname': "
"'fieldval'}``::"

msgid "Other methods"
msgstr "Cara lain"

msgid "Django view for the model instance addition page. See note below."
msgstr ""
"Tampilan Django untuk halaman tambahan instance model. Lihat catatan dibawah."

msgid "Django view for the model instance editing page. See note below."
msgstr ""
"Tampilan Django untuk halaman suntingan instance model. Lihat catatan "
"dibawah."

msgid ""
"Django view for the model instances change list/actions page. See note below."
msgstr ""
"Tampilan Django untuk halaman daftar rubah/tindakan instance model. Lihat "
"catatan dibawah."

msgid ""
"Django view for the model instance(s) deletion confirmation page. See note "
"below."
msgstr ""
"Tampilan Django untuk halaman penegasan penghapusn instance model. Lihat "
"catatan dibawah."

msgid ""
"Django view for the page that shows the modification history for a given "
"model instance."
msgstr ""
"Tampilan Django untuk halaman yang menampilan riwayat perubahan untuk "
"instance model diberikan."

msgid ""
"Unlike the hook-type ``ModelAdmin`` methods detailed in the previous "
"section, these five methods are in reality designed to be invoked as Django "
"views from the admin application URL dispatching handler to render the pages "
"that deal with model instances CRUD operations. As a result, completely "
"overriding these methods will significantly change the behavior of the admin "
"application."
msgstr ""
"Tidak seperti jenis-kait metode ``ModelAdmin`` dirinci di bagian sebelumnya, "
"lima metode ini yang pada kenyataannya dirancang untuk dipanggil sebagai "
"tampilan Django dari URL aplikasi admin mengirim penangan untuk membangun "
"halaman-halaman yang berhubungan dengan tindakan CRUD instance-instance "
"model. Sebagai sebuah hasil, slengkapnya mengutamakan metode ini akan secara "
"signifikan merubah perilaku admin aplikasi admin."

msgid ""
"One common reason for overriding these methods is to augment the context "
"data that is provided to the template that renders the view. In the "
"following example, the change view is overridden so that the rendered "
"template is provided some extra mapping data that would not otherwise be "
"available::"
msgstr ""
"Satu alasan umum untuk mengutamakan metode ini adalah menambah data konteks "
"yang disediakan ke cetakan yang membangun tampilan. Di contoh berikut, "
"tamppilan rubah ditimpa sehingga cetakan dibangun menyediakan beberapa data "
"pemetaan tambahan yang tidak akan sebaliknya menjadi tersedia::"

msgid ""
"These views return :class:`~django.template.response.TemplateResponse` "
"instances which allow you to easily customize the response data before "
"rendering. For more details, see the :doc:`TemplateResponse documentation </"
"ref/template-response>`."
msgstr ""
"Tampilan ini mengembalikan instance :class:`~django.template.response."
"TemplateResponse` yang mengizinkan anda dengan mudah menyesuaikan data "
"tanggapan sebelum membangun. Untuk rincian lebih, lihat :doc:"
"`TemplateResponse documentation </ref/template-response>`."

msgid "``ModelAdmin`` asset definitions"
msgstr "Pengertian aset ``ModelAdmin``"

msgid ""
"There are times where you would like add a bit of CSS and/or JavaScript to "
"the add/change views. This can be accomplished by using a ``Media`` inner "
"class on your ``ModelAdmin``::"
msgstr ""
"Ada waktu dimana anda akan menambahkan sedikit CSS dan/atay JavaScript pada "
"tampilan tambah/rubah. Ini dapat dicapai dengan menggunakan kelas ``Media`` "
"sebelah dalam pada ``ModelAdmin`` anda::"

msgid ""
"The :doc:`staticfiles app </ref/contrib/staticfiles>` prepends :setting:"
"`STATIC_URL` (or :setting:`MEDIA_URL` if :setting:`STATIC_URL` is ``None``) "
"to any asset paths. The same rules apply as :ref:`regular asset definitions "
"on forms <form-asset-paths>`."
msgstr ""
":doc:`staticfiles app </ref/contrib/staticfiles>` menambahkan :setting:"
"`STATIC_URL` (atau :setting:`MEDIA_URL` jika :setting:`STATIC_URL` adalah "
"``None``) pada jalur aset apapun. Peraturan sama berlaku seperti :ref:"
"`regular asset definitions on forms <form-asset-paths>`."

msgid "jQuery"
msgstr "jQuery"

msgid "Django admin JavaScript makes use of the `jQuery`_ library."
msgstr "JavaScript admin Django memanfaatkan pustaka `jQuery`_"

msgid ""
"To avoid conflicts with user-supplied scripts or libraries, Django's jQuery "
"(version 2.2.3) is namespaced as ``django.jQuery``. If you want to use "
"jQuery in your own admin JavaScript without including a second copy, you can "
"use the ``django.jQuery`` object on changelist and add/edit views."
msgstr ""
"Untuk menghindari pertentangan dengan tulisan dipasok-pengguna atau pustaka, "
"jQuery (versi 2.2.3) Django adalah namespace sebagai ``django.jQuery``. Jika "
"anda ingin menggunakan jQuery di JavaScript admin anda sendiri tanpa "
"menyertakan salinan kedua, anda dapat menggunakan obyek ``django.jQuery`` "
"pada daftar rubah dan tampilan tambah/rubah."

msgid "The embedded jQuery was upgraded from 2.1.4 to 2.2.3."
msgstr "jQuery tertanam telah ditingkatkan dari 2.1.4 menjadi 2.2.3."

msgid ""
"The :class:`ModelAdmin` class requires jQuery by default, so there is no "
"need to add jQuery to your ``ModelAdmin``’s list of media resources unless "
"you have a specific need. For example, if you require the jQuery library to "
"be in the global namespace (for example when using third-party jQuery "
"plugins) or if you need a newer version of jQuery, you will have to include "
"your own copy."
msgstr ""
"Kelas :class:`ModelAdmin` membutuhkan jQuery secara awalan, jadi tidak butuh "
"menambahkan jQuery ke daftar ``ModelAdmin`` anda dari sumber daya media "
"meskipun anda mempunyai kebutuhan khusus. Sebagai contoh, jika anda "
"membutuhkan pustaka jQuery menjadi di namespace global (sebagai contoh "
"ketika menggunakan plugin jQuery pihak-ketiga) atau jika anda butuh versi "
"terbaru dari jQuery, anda akan harus menyertakan salinan anda sendiri."

msgid ""
"Django provides both uncompressed and 'minified' versions of jQuery, as "
"``jquery.js`` and ``jquery.min.js`` respectively."
msgstr ""
"Django menyediakan kedua versi tidak dipadatkan dan 'dikecilkan' dari "
"jQuery, sebagai masing-masing ``jquery.js`` dan ``jquery.min.js``."

msgid ""
":class:`ModelAdmin` and :class:`InlineModelAdmin` have a ``media`` property "
"that returns a list of ``Media`` objects which store paths to the JavaScript "
"files for the forms and/or formsets. If :setting:`DEBUG` is ``True`` it will "
"return the uncompressed versions of the various JavaScript files, including "
"``jquery.js``; if not, it will return the 'minified' versions."
msgstr ""
":class:`ModelAdmin` dan :class:`InlineModelAdmin` mempunyai sebuah sifat "
"``media`` yang mengembalikan sebuah daftar dari obyek ``Media`` yang "
"menyimpan jalur pada berkas-berkas JavaScript untuk formulir dan/atau "
"formset. Jika :setting:`DEBUG` adalah ``True`` itu akan mengembalikan versi "
"tidak terpampat dari beragam berkas-berkas JavaScript, termasuk ``jquery."
"js``; jika tidak, itu akan mengembalikan versi 'minified'."

msgid "Adding custom validation to the admin"
msgstr "Menambahkan pengesahan penyesuaian pada admin"

msgid ""
"Adding custom validation of data in the admin is quite easy. The automatic "
"admin interface reuses :mod:`django.forms`, and the ``ModelAdmin`` class "
"gives you the ability define your own form::"
msgstr ""
"Menambahkan penyesuaian pengesahan dari data di admin adalah sangat mudah. "
"Antarmuka admin otomatis menggunakan kembali :mod:`django.forms`, dan kelas "
"``ModelAdmin`` memberikan anda kemampuan menentukan formulir anda sendiri::"

msgid ""
"``MyArticleAdminForm`` can be defined anywhere as long as you import where "
"needed. Now within your form you can add your own custom validation for any "
"field::"
msgstr ""
"``MyArticleAdminForm`` dapat ditentukan dimanapun selama anda mengimpor "
"ketika diperlukan. Sekarang dalam formulir anda anda dapat menambah "
"penyesuaian pengesahan milik anda sendiri untuk bidang apapun::"

msgid ""
"It is important you use a ``ModelForm`` here otherwise things can break. See "
"the :doc:`forms </ref/forms/index>` documentation on :doc:`custom validation "
"</ref/forms/validation>` and, more specifically, the :ref:`model form "
"validation notes <overriding-modelform-clean-method>` for more information."
msgstr ""
"Itu adalah penting anda menggunakan sebuah ``ModelForm`` disini sebaliknya "
"hal-hal dapat rusak. Lihat dokuementasi :doc:`forms </ref/forms/index>` "
"pada :doc:`custom validation </ref/forms/validation>` dan, lebih khusus, :"
"ref:`model form validation notes <overriding-modelform-clean-method>` untuk "
"informasi lebih. "

msgid "``InlineModelAdmin`` objects"
msgstr "Obyek ``InlineModelAdmin``"

msgid ""
"The admin interface has the ability to edit models on the same page as a "
"parent model. These are called inlines. Suppose you have these two models::"
msgstr ""
"Antarmuka admin mempunyai kemampuan menyunting model-model pada halaman sama "
"sebagai model induk. Ini adalah dipanggil berderet. Andaikan anda mempunyai "
"kedua model ini::"

msgid ""
"You can edit the books authored by an author on the author page. You add "
"inlines to a model by specifying them in a ``ModelAdmin.inlines``::"
msgstr ""
"Anda dapat menyunting buku-buku ditulis oleh seorang penulis pada halaman "
"penulis. Anda tambah berderet pada sebuah model dengan menentukan mereka di "
"sebuah ``ModelAdmin.inlines``::"

msgid "Django provides two subclasses of ``InlineModelAdmin`` and they are:"
msgstr ""
"Django menyediakan dua subkelas dari ``InlineModelAdmin`` dan mereka adalah: "

msgid ":class:`~django.contrib.admin.TabularInline`"
msgstr ":class:`~django.contrib.admin.TabularInline`"

msgid ":class:`~django.contrib.admin.StackedInline`"
msgstr ":class:`~django.contrib.admin.StackedInline`"

msgid ""
"The difference between these two is merely the template used to render them."
msgstr ""
"Perbedaan diantara kedua ini adalah hanya cetakan digunakan untuk membangun "
"mereka."

msgid "``InlineModelAdmin`` options"
msgstr "Pilihan ``InlineModelAdmin``"

msgid ""
"``InlineModelAdmin`` shares many of the same features as ``ModelAdmin``, and "
"adds some of its own (the shared features are actually defined in the "
"``BaseModelAdmin`` superclass). The shared features are:"
msgstr ""
"``InlineModelAdmin`` berbagi banyak dari fitur-fitur sama seperti "
"``ModelAdmin``, dan menambahkan beberapa dari miliknya (fitur-fitur dibagi "
"sebenarnya ditentukan di superkelas ``BaseModelAdmin``). Fitur-fitur dibagi "
"adalah: "

msgid ":attr:`~InlineModelAdmin.form`"
msgstr ":attr:`~InlineModelAdmin.form`"

msgid ":attr:`~ModelAdmin.fieldsets`"
msgstr ":attr:`~ModelAdmin.fieldsets`"

msgid ":attr:`~ModelAdmin.fields`"
msgstr ":attr:`~ModelAdmin.fields`"

msgid ":attr:`~ModelAdmin.formfield_overrides`"
msgstr ":attr:`~ModelAdmin.formfield_overrides`"

msgid ":attr:`~ModelAdmin.exclude`"
msgstr ":attr:`~ModelAdmin.exclude`"

msgid ":attr:`~ModelAdmin.filter_horizontal`"
msgstr ":attr:`~ModelAdmin.filter_horizontal`"

msgid ":attr:`~ModelAdmin.filter_vertical`"
msgstr ":attr:`~ModelAdmin.filter_vertical`"

msgid ":attr:`~ModelAdmin.ordering`"
msgstr ":attr:`~ModelAdmin.ordering`"

msgid ":attr:`~ModelAdmin.prepopulated_fields`"
msgstr ":attr:`~ModelAdmin.prepopulated_fields`"

msgid ":meth:`~ModelAdmin.get_queryset`"
msgstr ":meth:`~ModelAdmin.get_queryset`"

msgid ":attr:`~ModelAdmin.radio_fields`"
msgstr ":attr:`~ModelAdmin.radio_fields`"

msgid ":attr:`~ModelAdmin.readonly_fields`"
msgstr ":attr:`~ModelAdmin.readonly_fields`"

msgid ":attr:`~InlineModelAdmin.raw_id_fields`"
msgstr ":attr:`~InlineModelAdmin.raw_id_fields`"

msgid ":meth:`~ModelAdmin.formfield_for_choice_field`"
msgstr ":meth:`~ModelAdmin.formfield_for_choice_field`"

msgid ":meth:`~ModelAdmin.formfield_for_foreignkey`"
msgstr ":meth:`~ModelAdmin.formfield_for_foreignkey`"

msgid ":meth:`~ModelAdmin.formfield_for_manytomany`"
msgstr ":meth:`~ModelAdmin.formfield_for_manytomany`"

msgid ":meth:`~ModelAdmin.has_add_permission`"
msgstr ":meth:`~ModelAdmin.has_add_permission`"

msgid ":meth:`~ModelAdmin.has_change_permission`"
msgstr ":meth:`~ModelAdmin.has_change_permission`"

msgid ":meth:`~ModelAdmin.has_delete_permission`"
msgstr ":meth:`~ModelAdmin.has_delete_permission`"

msgid ":meth:`~ModelAdmin.has_module_permission`"
msgstr ":meth:`~ModelAdmin.has_module_permission`"

msgid "The ``InlineModelAdmin`` class adds:"
msgstr "Kelas ``InlineModelAdmin`` menambahkan:"

msgid "The model which the inline is using. This is required."
msgstr "Model yang di berderet sedang menggunakan. Ini adalah diwajibkan."

msgid ""
"The name of the foreign key on the model. In most cases this will be dealt "
"with automatically, but ``fk_name`` must be specified explicitly if there "
"are more than one foreign key to the same parent model."
msgstr ""
"Nama dari foreign key pada model. Di kebanyakan kasus ini akan ditangani "
"dengan otomatis, tetapi ``fk_name`` harus ditentukan secara jelas jika ada "
"lebih dari satu foreign key pada model induk yang sama."

msgid ""
"This defaults to :class:`~django.forms.models.BaseInlineFormSet`. Using your "
"own formset can give you many possibilities of customization. Inlines are "
"built around :ref:`model formsets <model-formsets>`."
msgstr ""
"Ini awalan pada :class:`~django.forms.models.BaseInlineFormSet`. Menggunakan "
"formset anda sendiri dapat memberikan anda banyak kemungkinan dari "
"penyesuaian. Berderet  adalah dibangun sekitar :ref:`model formsets <model-"
"formsets>`."

msgid ""
"The value for ``form`` defaults to ``ModelForm``. This is what is passed "
"through to :func:`~django.forms.models.inlineformset_factory` when creating "
"the formset for this inline."
msgstr ""
"NIlai untuk awalan ``form`` pada ``ModelForm``. Ini adalah apa yang "
"dilewatkan melalui :func:`~django.forms.models.inlineformset_factory` ketika "
"membuat formset untuk berderet ini."

msgid ""
"When writing custom validation for ``InlineModelAdmin`` forms, be cautious "
"of writing validation that relies on features of the parent model. If the "
"parent model fails to validate, it may be left in an inconsistent state as "
"described in the warning in :ref:`validation-on-modelform`."
msgstr ""
"Ketika menulis pengesahan penyesuaian untuk formulir ``InlineModelAdmin``, "
"waspada dari menulis pengesahan yang bergantung pada fitur-fitur dari model "
"induk. Jika model induk gagal mensahkan, itu mungkin ditinggal di keadaan "
"yang tidak konsisten seperti digambarkan di peringatan di :ref:`validation-"
"on-modelform`."

msgid ""
"A list or tuple containing extra CSS classes to apply to the fieldset that "
"is rendered for the inlines. Defaults to ``None``. As with classes "
"configured in :attr:`~ModelAdmin.fieldsets`, inlines with a ``collapse`` "
"class will be initially collapsed and their header will have a small \"show"
"\" link."
msgstr ""
"Sebuah daftar atau tuple mengandung kelas-kelas CSS tambahan pada fieldset "
"yang dibangun untuk berderet. Awalan pada ``None``. Ketika dengan kelas-"
"kelas dikonfigurasikan di :attr:`~ModelAdmin.fieldsets`, berderet dengan "
"sebuah kelas ``collapse`` akan diinisialisasikan diruntuhkan dan kepala "
"mereka akan mempunyai tautan \"show\" kecil."

msgid ""
"This controls the number of extra forms the formset will display in addition "
"to the initial forms. See the :doc:`formsets documentation </topics/forms/"
"formsets>` for more information."
msgstr ""
"Ini mengendalikan sejumlah formulir tambahan formset akan diperlihatkan "
"sebagai tambahan pada formulir inisial. Lihat :doc:`formsets documentation </"
"topics/forms/formsets>` untuk informasi lebih."

msgid ""
"For users with JavaScript-enabled browsers, an \"Add another\" link is "
"provided to enable any number of additional inlines to be added in addition "
"to those provided as a result of the ``extra`` argument."
msgstr ""
"Untuk pengguna dengan peramban diadakan-JavaScript, sebuah tautan \"Add "
"another\" disediakan untuk mengadakan nomor apapun dari berderet tambahan "
"untuk ditambahkan ke itu yang disediakan sebagai sebuah hasil dari argumen "
"``extra``."

msgid ""
"The dynamic link will not appear if the number of currently displayed forms "
"exceeds ``max_num``, or if the user does not have JavaScript enabled."
msgstr ""
"Tautan dinamis tidak akan muncul jika nomor dari formulir diperlihatkan saat "
"ini melebihi ``max_num``, atau jika pengguna tidak mempunyai JavaScript "
"diadakan."

msgid ""
":meth:`InlineModelAdmin.get_extra` also allows you to customize the number "
"of extra forms."
msgstr ""
":meth:`InlineModelAdmin.get_extra` juga mengizinkan anda menyesuaikan "
"sejumlah formulir tambahan."

msgid ""
"This controls the maximum number of forms to show in the inline. This "
"doesn't directly correlate to the number of objects, but can if the value is "
"small enough. See :ref:`model-formsets-max-num` for more information."
msgstr ""
"Ini mengendalikan nomor minimal dari formulir untuk menunjukkan di berderet. "
"Ini tidak secara langsung menghubungankan ke nomor dari obyek, tetapi dapat "
"jika nilai cukup kecil. Lihat :ref:`model-formsets-max-num` untuk informasi "
"lebih."

msgid ""
":meth:`InlineModelAdmin.get_max_num` also allows you to customize the "
"maximum number of extra forms."
msgstr ""
":meth:`InlineModelAdmin.get_max_num` juga mengizinkan anda menyesuaikan "
"nomor maksimal dari formulir tambahan."

msgid ""
"This controls the minimum number of forms to show in the inline. See :func:"
"`~django.forms.models.modelformset_factory` for more information."
msgstr ""
"Ini mengendalikan nomor minimal dari formulir untuk menunjukkan di berderet. "
"Lihat :func:`~django.forms.models.modelformset_factory` untuk informasi "
"lebih."

msgid ""
":meth:`InlineModelAdmin.get_min_num` also allows you to customize the "
"minimum number of displayed forms."
msgstr ""
":meth:`InlineModelAdmin.get_min_num` juga mengizinkan anda menyesuaikan "
"nomor minimal dari formulir ditampilkan."

msgid "The template used to render the inline on the page."
msgstr "Cetakan digunakan untuk membangun berderet pada halaman."

msgid ""
"An override to the ``verbose_name`` found in the model's inner ``Meta`` "
"class."
msgstr ""
"Sebuah penimpaan pada ``verbose_name`` ditemukan di kelas ``Meta`` sebelah "
"dalam model."

msgid ""
"An override to the ``verbose_name_plural`` found in the model's inner "
"``Meta`` class."
msgstr ""
"Sebuah penimpaan pada ``verbose_name_plural`` ditemukan di kelas ``Meta`` "
"sebelah dalam model."

msgid ""
"Specifies whether or not inline objects can be deleted in the inline. "
"Defaults to ``True``."
msgstr ""
"Menentukan apakah atau tidak obyek berderet dapat dihapus di berderet. "
"Awalan menjadi ``True``."

msgid ""
"Specifies whether or not inline objects that can be changed in the admin "
"have a link to the change form. Defaults to ``False``."
msgstr ""
"Menentukan apakah atau tidak obyek berderet dapat dirubah di admin mempunyai "
"sebuah tautan ke formulir rubah. Awalan menjadi ``False``."

msgid ""
"Returns a :class:`~django.forms.models.BaseInlineFormSet` class for use in "
"admin add/change views. See the example for :class:`ModelAdmin."
"get_formsets_with_inlines`."
msgstr ""
"Mengembalikan sebuah kelas :class:`~django.forms.models.BaseInlineFormSet` "
"untuk digunakan di tampilan tambah/rubah admin. Lihat contoh untuk :class:"
"`ModelAdmin.get_formsets_with_inlines`."

msgid ""
"Returns the number of extra inline forms to use. By default, returns the :"
"attr:`InlineModelAdmin.extra` attribute."
msgstr ""
"Mengembalikan sejumlah formulir berderet tambahan untuk digunakan. Secara "
"awalan, mengembalikan atribut :attr:`InlineModelAdmin.extra` "

msgid ""
"Override this method to programmatically determine the number of extra "
"inline forms. For example, this may be based on the model instance (passed "
"as the keyword argument ``obj``)::"
msgstr ""
"Timpa metode ini untuk secara program menentukan nomor dari formulir "
"berderet tambahan. Sebagai contoh, ini mungkin berdasarkan pada instance "
"model (dilewatkan sebagai argumen kata kunci ``obj``)::"

msgid ""
"Returns the maximum number of extra inline forms to use. By default, returns "
"the :attr:`InlineModelAdmin.max_num` attribute."
msgstr ""
"Mengembalikan nomor maksimal dari formulir berderet tambahan untuk "
"digunakan. Secara awalan, mengembalikan atribut :attr:`InlineModelAdmin."
"max_num`."

msgid ""
"Override this method to programmatically determine the maximum number of "
"inline forms. For example, this may be based on the model instance (passed "
"as the keyword argument ``obj``)::"
msgstr ""
"Timpa metode ini untuk secara program menentukan nomor maksimal dari "
"formulir berderet tambahan. Sebagai contoh, ini mungkin berdasarkan pada "
"instance model (dilewatkan sebagai argumen kata kunci ``obj``)::"

msgid ""
"Returns the minimum number of inline forms to use. By default, returns the :"
"attr:`InlineModelAdmin.min_num` attribute."
msgstr ""
"Mengembalikan nomor minimal dari formulir berderet untuk digunakan. Secara "
"awalan, mengembalikan atribut :attr:`InlineModelAdmin.min_num`."

msgid ""
"Override this method to programmatically determine the minimum number of "
"inline forms. For example, this may be based on the model instance (passed "
"as the keyword argument ``obj``)."
msgstr ""
"Timpa metode ini untuk secara program menentukan nomor minimal dari formulir "
"berderet tambahan. Sebagai contoh, ini mungkin berdasarkan pada instance "
"model (dilewatkan sebagai argumen kata kunci ``obj``)::"

msgid ""
"Working with a model with two or more foreign keys to the same parent model"
msgstr ""
"Bekerja dengan sebuah model dengan dua atau lebih foreign key pada model "
"induk yang sama."

msgid ""
"It is sometimes possible to have more than one foreign key to the same "
"model. Take this model for instance::"
msgstr ""
"Itu terkadang memungkinkan memiliki lebih dari satu foreign key pada model "
"yang sama. Ambil model ini sebagai contoh::"

msgid ""
"If you wanted to display an inline on the ``Person`` admin add/change pages "
"you need to explicitly define the foreign key since it is unable to do so "
"automatically::"
msgstr ""
"Jika anda ingin memperlihatkan sebuah berderet pada halaman tambah/rubah "
"admin ``Person`` anda butuh secara jelas menentukan foreign key sejak itu "
"tidak dapat melakukannya otomatis::"

msgid "Working with many-to-many models"
msgstr "Bekerja dengan model banyak-ke-banyak"

msgid ""
"By default, admin widgets for many-to-many relations will be displayed on "
"whichever model contains the actual reference to the :class:`~django.db."
"models.ManyToManyField`. Depending on your ``ModelAdmin`` definition, each "
"many-to-many field in your model will be represented by a standard HTML "
"``<select multiple>``, a horizontal or vertical filter, or a "
"``raw_id_admin`` widget. However, it is also possible to replace these "
"widgets with inlines."
msgstr ""
"Secara awalan, widget admin untuk hubungan many-to-many akan diperlihatkan "
"pada model manapun mengandung acuan sebenarnya pada :class:`~django.db."
"models.ManyToManyField`. Tergantung pada pengertian ``ModelAdmin`` anda, "
"setiap bidang many-to-many di model anda akan diwakili oleh HTML standar "
"``<select multiple>``, penyaring mendatar atau tegak lurus, atau sebuah "
"widget ``raw_id_admin``, Bagaimanapun, itu juga memungkinkan mengganti "
"widget-widget ini dengan berderet."

msgid "Suppose we have the following models::"
msgstr "Misalkan kita memiliki model berikut::"

msgid ""
"If you want to display many-to-many relations using an inline, you can do so "
"by defining an ``InlineModelAdmin`` object for the relationship::"
msgstr ""
"Jika anda ingin memperlihatkan hubungan many-yo-many menggunakan sebuah "
"berderet, anda dapat melakukan juga dengan menentukan sebuah obyek "
"``InlineModelAdmin`` untuk hubungan::"

msgid "There are two features worth noting in this example."
msgstr "Ada dua fitur perlu dicatat di contoh ini."

msgid ""
"Firstly - the ``MembershipInline`` class references ``Group.members."
"through``. The ``through`` attribute is a reference to the model that "
"manages the many-to-many relation. This model is automatically created by "
"Django when you define a many-to-many field."
msgstr ""
"Pertama-tama - kelas ``MembershipInline`` mengacu ``Group.members.through``. "
"Atribut ``through`` adalah sebuah acuan pada model yang mengelola hubungan "
"many-to-many. Model ini secara otomatis dibuat oleh Django ketika anda "
"menentukan bidang many-to-many."

msgid ""
"Secondly, the ``GroupAdmin`` must manually exclude the ``members`` field. "
"Django displays an admin widget for a many-to-many field on the model that "
"defines the relation (in this case, ``Group``). If you want to use an inline "
"model to represent the many-to-many relationship, you must tell Django's "
"admin to *not* display this widget - otherwise you will end up with two "
"widgets on your admin page for managing the relation."
msgstr ""
"Kedua, ``GroupAdmin`` harus secara manual mengeluarkan bidang ``members``. "
"Django menampilkan sebuah widget admin untuk bidang many-to-many pada model "
"yang menentukan hubungan (di kasus ini, ``Group``). Jika anda ingin "
"menggunakan sebuah model berderet untuk mewakili hubungan many-to-many, anda "
"harus memberitahu admin Django *tidak* memperlihatkan widget ini - "
"sebaliknya anda akan berakhir dengan dua widget pada halaman admin anda "
"untuk mengelola hubungan."

msgid ""
"Note that when using this technique the :data:`~django.db.models.signals."
"m2m_changed` signals aren't triggered. This is because as far as the admin "
"is concerned, ``through`` is just a model with two foreign key fields rather "
"than a many-to-many relation."
msgstr ""
"Catat bahwa ketika menggunakan teknik ini sinyal :data:`~django.db.models."
"signals.m2m_changed` tidak dipicu. Ini adalah karena sejauh admin yang "
"bersangkutan, ``through`` hanya sebuah model dengan dua bidang foreign key "
"daripada hubungan many-to-many."

msgid ""
"In all other respects, the ``InlineModelAdmin`` is exactly the same as any "
"other. You can customize the appearance using any of the normal "
"``ModelAdmin`` properties."
msgstr ""
"Dalam semua hal lainnya, ``InlineModelAdmin`` persisnya sama seperti "
"lainnya. Anda dapat menyesuaikan penampilan menggunakan apapun dari sifat-"
"sifat ``ModelAdmin`` biasa."

msgid "Working with many-to-many intermediary models"
msgstr "Bekerja dengan model perantara many-to-many"

msgid ""
"When you specify an intermediary model using the ``through`` argument to a :"
"class:`~django.db.models.ManyToManyField`, the admin will not display a "
"widget by default. This is because each instance of that intermediary model "
"requires more information than could be displayed in a single widget, and "
"the layout required for multiple widgets will vary depending on the "
"intermediate model."
msgstr ""
"Ketika anda menentukan sebuah model perantara menggunakan argumen "
"``through`` pada sebuah :class:`~django.db.models.ManyToManyField`, admin "
"tidak akan menampilkan sebuah widget secara awalan. Ini karena setiap "
"instance dari model perantara membutuhkan lebih informasi dari dapat "
"diperlihatkan dalam sebuah widget tunggal, dan tata letak dibutuhkan untuk "
"widget banyak akan beragam bergantung pada model perantara."

msgid ""
"However, we still want to be able to edit that information inline. "
"Fortunately, this is easy to do with inline admin models. Suppose we have "
"the following models::"
msgstr ""
"Bagaimanapun, kami masing ingin dapat menyunting informasi itu sebaris. "
"Sayangnya, ini mudah melakukan dengan model admin. Seharusnya kami memiliki "
"model-model berikut::"

msgid ""
"The first step in displaying this intermediate model in the admin is to "
"define an inline class for the ``Membership`` model::"
msgstr ""
"Langkah pertama dalam memperlihatkan model perantara ini di admin adalah "
"menentukan sebuah kelas berderet untuk model ``Membership``::"

msgid ""
"This simple example uses the default ``InlineModelAdmin`` values for the "
"``Membership`` model, and limits the extra add forms to one. This could be "
"customized using any of the options available to ``InlineModelAdmin`` "
"classes."
msgstr ""
"Contoh-contoh sederhana ini menggunakan nilai-nilai ``InlineModelAdmin`` "
"awalan untuk model ``Membership``, dan membatasi formulir tambah tambahan "
"menjadi satu. Ini dapat berupa penyesuaian menggunakan salah satu pilihan "
"tersedia pada kelas-kelas ``InlineModelAdmin``."

msgid "Now create admin views for the ``Person`` and ``Group`` models::"
msgstr "Sekarang membuat tampilan admin untuk model ``Person`` dan ``Group``::"

msgid ""
"Finally, register your ``Person`` and ``Group`` models with the admin site::"
msgstr "Akhirnya, daftar model ``Person`` dan ``Group`` dengan situs admin::"

msgid ""
"Now your admin site is set up to edit ``Membership`` objects inline from "
"either the ``Person`` or the ``Group`` detail pages."
msgstr ""
"Sekarang situs admin anda dipersiapkan untuk menyunting obyek-obyek "
"``Membership`` berderet dari antara ``Person`` atau ``Group`` di halaman "
"rincian."

msgid "Using generic relations as an inline"
msgstr "Menggunakan hubungan umum sebagai sebuah berderet"

msgid ""
"It is possible to use an inline with generically related objects. Let's say "
"you have the following models::"
msgstr ""
"Itu memungkinkan menggunakan sebuah berderet dengan umum obyek terkait. Mari "
"kita katakan anda memiliki model-model berikut::"

msgid ""
"If you want to allow editing and creating an ``Image`` instance on the "
"``Product``, add/change views you can use :class:`~django.contrib."
"contenttypes.admin.GenericTabularInline` or :class:`~django.contrib."
"contenttypes.admin.GenericStackedInline` (both subclasses of :class:`~django."
"contrib.contenttypes.admin.GenericInlineModelAdmin`) provided by :mod:"
"`~django.contrib.contenttypes.admin`. They implement tabular and stacked "
"visual layouts for the forms representing the inline objects, respectively, "
"just like their non-generic counterparts. They behave just like any other "
"inline. In your ``admin.py`` for this example app::"
msgstr ""
"Jika anda ingin menyunting dan membuat sebuah instance ``Image`` pada "
"``Product``, tampilan tambah/rubah anda dapat menggunakan :class:`~django."
"contrib.contenttypes.admin.GenericTabularInline` atau :class:`~django."
"contrib.contenttypes.admin.GenericStackedInline` (kedua subkelas-subkelas "
"dari :class:`~django.contrib.contenttypes.admin.GenericInlineModelAdmin`) "
"disediakan oleh :mod:`~django.contrib.contenttypes.admin`. Mereka menerapkan "
"tata letak penampakan datar dan bertumpuk untuk formulir mewakili obyek "
"berderet, masing-masing, seperti pasangan bukan-umum mereka. Mereka "
"berperilaku seperti berderet lainnya. Di ``admin.py`` anda untuk contoh "
"aplikasi ini::"

msgid ""
"See the :doc:`contenttypes documentation </ref/contrib/contenttypes>` for "
"more specific information."
msgstr ""
"Lihat :doc:`contenttypes documentation </ref/contrib/contenttypes>` untuk "
"informasi lebih spesifik."

msgid "Overriding admin templates"
msgstr "Menimpa cetakan admin"

msgid ""
"It is relatively easy to override many of the templates which the admin "
"module uses to generate the various pages of an admin site. You can even "
"override a few of these templates for a specific app, or a specific model."
msgstr ""
"Itu relatif mudah menimpa banyak dari cetakan yang modul admn gunakan untuk "
"membangkitkan beragam halaman dari sebuah situs admin. Anda dapat bahkan "
"menimpa sedikit dari cetakan-cetakan ini untuk aplikasi tertentu, atau model "
"tertentu."

msgid "Set up your projects admin template directories"
msgstr "Setel direktori cetakan admin proyek"

msgid ""
"The admin template files are located in the ``contrib/admin/templates/"
"admin`` directory."
msgstr ""
"Berkas-berkas cetakan admin ditempatkan di direktori ``contrib/admin/"
"templates/admin``."

msgid ""
"In order to override one or more of them, first create an ``admin`` "
"directory in your project's ``templates`` directory. This can be any of the "
"directories you specified in the :setting:`DIRS <TEMPLATES-DIRS>` option of "
"the ``DjangoTemplates`` backend in the :setting:`TEMPLATES` setting. If you "
"have customized the ``'loaders'`` option, be sure ``'django.template.loaders."
"filesystem.Loader'`` appears before ``'django.template.loaders."
"app_directories.Loader'`` so that your custom templates will be found by the "
"template loading system before those that are included with :mod:`django."
"contrib.admin`."
msgstr ""
"Untuk menimpa satu atau lebih mereka, pertama buat sebuah direktori "
"``admin`` dalam direktori ``templates`` proyek anda. Ini dapat berupa apapun "
"dari direktori anda tentukan dalam pilihan :setting:`DIRS <TEMPLATES-DIRS>` "
"dari backend ``DjangoTemplates`` dalam pengaturan :setting:`TEMPLATES`. Jika "
"anda telah menyesuaikan pilihan ``'loaders'``, pastikan ``'django.template."
"loaders.filesystem.Loader'`` muncul sebelum ``'django.template.loaders."
"app_directories.Loader'`` sehingga cetakan penyesuaian anda akan ditemukan "
"oleh sistem pemuat cetakan sebelum mereka yang disertakan dengan :mod:"
"`django.contrib.admin`."

msgid ""
"Within this ``admin`` directory, create sub-directories named after your "
"app. Within these app subdirectories create sub-directories named after your "
"models. Note, that the admin app will lowercase the model name when looking "
"for the directory, so make sure you name the directory in all lowercase if "
"you are going to run your app on a case-sensitive filesystem."
msgstr ""
"Dalam direktori ``admin`` ini, buat sub-direktori diberi nama setelah "
"aplikasi anda. Dalam subdirektori aplikasi ini buat sub-direktori dinamai "
"setelah model anda. Catat, bahwa aplikasi admin akan menghuruf kecilkan nama "
"model ketika mencari direktori, jadi pastikan anda memberi nama direktori "
"dalam semua huruf kecil jika anda akan menjalankan aplikasi anda pada sistem "
"berkas kasus-sensitif."

msgid ""
"To override an admin template for a specific app, copy and edit the template "
"from the ``django/contrib/admin/templates/admin`` directory, and save it to "
"one of the directories you just created."
msgstr ""
"Untuk menimpa sebuah cetakan admin untuk aplikasi tertentu, salin dan "
"sunting cetakan dari direktori ``django/contrib/admin/templates/admin``, dan "
"simpan itu ke satu dari direktori anda baru buat."

msgid ""
"For example, if we wanted to add a tool to the change list view for all the "
"models in an app named ``my_app``, we would copy ``contrib/admin/templates/"
"admin/change_list.html`` to the ``templates/admin/my_app/`` directory of our "
"project, and make any necessary changes."
msgstr ""
"Sebagai contoh, jika kami ingin menambah sebuah alat pada tampilan daftar "
"rubah untuk semua model-model dalam sebuah aplikasi bernama ``my_app``, kami "
"akan menyalin ``contrib/admin/templates/admin/change_list.html`` ke "
"direktori ``templates/admin/my_app/`` dari proyek kami, dan membuat apapun "
"perubahan dibutuhkan."

msgid ""
"If we wanted to add a tool to the change list view for only a specific model "
"named 'Page', we would copy that same file to the ``templates/admin/my_app/"
"page`` directory of our project."
msgstr ""
"Jika kami ingin menambah sebuah alat pada tampilan daftar rubah untuk hanya "
"model tertentu bernama 'Page', kami akan menyalin berkas sama itu ke "
"direktori ``templates/admin/my_app/page`` dari proyek kami."

msgid "Overriding vs. replacing an admin template"
msgstr "Menimpa lawan mengganti cetakan admin"

msgid ""
"Because of the modular design of the admin templates, it is usually neither "
"necessary nor advisable to replace an entire template. It is almost always "
"better to override only the section of the template which you need to change."
msgstr ""
"Karena rancangan modular dari cetakan-cetakan admin, itu biasanya tidak "
"perlu dan tidak dianjurkan untuk mengganti keseluruhan cetakan. Itu adalah "
"hampir selalu lebih baik menimpa hanya bagian dari cetakan yang anda butuh "
"dirubah."

msgid ""
"To continue the example above, we want to add a new link next to the "
"``History`` tool for the ``Page`` model. After looking at ``change_form."
"html`` we determine that we only need to override the ``object-tools-items`` "
"block. Therefore here is our new ``change_form.html`` :"
msgstr ""
"Untuk melanjutkan contoh diatas, kami ingin menambah sebuah tautan baru "
"dekat pada alat ``History`` untuk model ``Page``. Setelah mencari di "
"``change_form.html`` kami menentukan bahwa kami hanya butuh menimpa blok "
"``object-tools-items``, Oleh karena itu disini adalah ``change_form.html`` "
"baru kami :"

msgid ""
"And that's it! If we placed this file in the ``templates/admin/my_app`` "
"directory, our link would appear on the change form for all models within "
"my_app."
msgstr ""
"Dan itu dia! Jika kami menempatkan berkas ini di direktori ``templates/admin/"
"my_app``, tautan kami akan muncul pada formulir rubah untuk semua model "
"dalam my_app."

msgid "Templates which may be overridden per app or model"
msgstr "Cetakan-cetakan yang mungkin menimpa per aplikasi atau model"

msgid ""
"Not every template in ``contrib/admin/templates/admin`` may be overridden "
"per app or per model. The following can:"
msgstr ""
"Tidak setiap cetakan di ``contrib/admin/templates/admin`` mungkin ditimpa "
"per aplikasi atau per model. Berikut dapat:"

msgid "``app_index.html``"
msgstr "``app_index.html``"

msgid "``change_form.html``"
msgstr "``change_form.html``"

msgid "``change_list.html``"
msgstr "``change_list.html``"

msgid "``delete_confirmation.html``"
msgstr "``delete_confirmation.html``"

msgid "``object_history.html``"
msgstr "``object_history.html``"

msgid "``popup_response.html``"
msgstr "``popup_response.html``"

msgid "The ability to override the ``popup_response.html`` template was added."
msgstr "Kemampuan menimpa cetakan ``popup_response.html`` telah ditambahkan."

msgid ""
"For those templates that cannot be overridden in this way, you may still "
"override them for your entire project. Just place the new version in your "
"``templates/admin`` directory. This is particularly useful to create custom "
"404 and 500 pages."
msgstr ""
"Untuk cetakan tersebut yang tidak dapat ditimpa di cara ini, anda mungkin "
"masih menimpa mereka untuk keseluruhan proyek anda. Cukup tempatkan versi "
"baru di direktori ``templates/admin`` anda. Ini terutama berguna untuk "
"membuat penyesuaian halaman 404 dan 500."

msgid ""
"Some of the admin templates, such as ``change_list_results.html`` are used "
"to render custom inclusion tags. These may be overridden, but in such cases "
"you are probably better off creating your own version of the tag in question "
"and giving it a different name. That way you can use it selectively."
msgstr ""
"Beberapa dari cetakan-cetakan admin, seperti ``change_list_results.html`` "
"digunakan untuk membangun etiket penyertaaan penyesuaian. Ini mungkin "
"ditimpa, tetapi dalam kasus-kasus seprti itu anda mungkin lebih baik membuat "
"versi anda sendiri dari etiket dalam pertanyaan dan memberikan itu sebuah "
"nama berbeda. Cara itu anda dapat menggunakannya selektif."

msgid "Root and login templates"
msgstr "Cetakan akar dan masuk"

msgid ""
"If you wish to change the index, login or logout templates, you are better "
"off creating your own ``AdminSite`` instance (see below), and changing the :"
"attr:`AdminSite.index_template` , :attr:`AdminSite.login_template` or :attr:"
"`AdminSite.logout_template` properties."
msgstr ""
"Jika anda berharap merubah cetakan indeks, masuk atau keluar, anda lebih "
"baik membuat instance ``AdminSite`` anda sendiri (lihat dibawah), dan "
"merubah sifat-sifat :attr:`AdminSite.index_template` , :attr:`AdminSite."
"login_template` atau :attr:`AdminSite.logout_template`."

msgid "``AdminSite`` objects"
msgstr "Obyek ``AdminSite``"

msgid ""
"A Django administrative site is represented by an instance of ``django."
"contrib.admin.sites.AdminSite``; by default, an instance of this class is "
"created as ``django.contrib.admin.site`` and you can register your models "
"and ``ModelAdmin`` instances with it."
msgstr ""
"Sebuah situs administratif Django diwakili oleh sebuah instance dari "
"``django.contrib.admin.sites.AdminSite``; secara awalan, sebuah instance "
"dari kelas ini dibuat sebagai ``django.contrib.admin.site`` dan anda dapat "
"mendaftar model-model anda dan instance-instance ``ModelAdmin`` dengan itu."

msgid ""
"When constructing an instance of an ``AdminSite``, you can provide a unique "
"instance name using the ``name`` argument to the constructor. This instance "
"name is used to identify the instance, especially when :ref:`reversing admin "
"URLs <admin-reverse-urls>`. If no instance name is provided, a default "
"instance name of ``admin`` will be used. See :ref:`customizing-adminsite` "
"for an example of customizing the :class:`AdminSite` class."
msgstr ""
"Ketika mendirikan sebuah instance dari sebuah ``AdminSite``, anda dapat "
"menyediakan sebuah nama instance unik menggunakan argumen ``name`` pada "
"pembangun. Nama instance ini digunakan untuk mencirikan instance, khususnya "
"ketika :ref:`reversing admin URLs <admin-reverse-urls>`. Jika tidak ada nama "
"instance disediakan, sebuah nama instace awalan dari ``admin`` akan "
"digunakan. Lihat :ref:`customizing-adminsite` untuk sebuah contoh dari "
"menyesuaikan kelas :class:`AdminSite`."

msgid "``AdminSite`` attributes"
msgstr "Atribut ``AdminSite``"

msgid ""
"Templates can override or extend base admin templates as described in :ref:"
"`admin-overriding-templates`."
msgstr ""
"Cetakan dapat dikesampingkan atau diperpanjang berdasarkan cetakan admin "
"seperti digambarkan di :ref:`admin-overriding-templates`."

msgid ""
"The text to put at the top of each admin page, as an ``<h1>`` (a string). By "
"default, this is \"Django administration\"."
msgstr ""
"Teks untuk ditaruh di atas dari setiap halaman index admin, sebagai sebuah "
"``<h1>`` (sebuah string). Secara awalan, ini adalah \"Administrasi Django\"."

msgid ""
"The text to put at the end of each admin page's ``<title>`` (a string). By "
"default, this is \"Django site admin\"."
msgstr ""
"Teks untuk ditaruh pada akhir dari setiap ``<title>`` halaman admin (sebuah "
"string). Secara awalan, ini adalah \"Situs admin Django\"."

msgid ""
"The URL for the \"View site\" link at the top of each admin page. By "
"default, ``site_url`` is ``/``. Set it to ``None`` to remove the link."
msgstr ""
"URL untuk tautan \"View site\" pada atas dari setiap halaman admin. Secara "
"awalan, ``site_url`` adalah ``/``. Setel itu menjadi ``None`` untuk "
"memindahkan tautan"

msgid ""
"For sites running on a subpath, the :meth:`each_context` method checks if "
"the current request has ``request.META['SCRIPT_NAME']`` set and uses that "
"value if ``site_url`` isn't set to something other than ``/``."
msgstr ""
"Untuk situs-situs berjalan pada subjalur, metode :meth:`each_context` "
"memeriksa jika permintaan saat ini mempunyai kumpulan ``request."
"META['SCRIPT_NAME']`` dan menggunakan nilai itu jika ``site_url``tidak "
"menyetel ke sesuatu selain dari ``/``."

msgid ""
"The ``SCRIPT_NAME`` support described in the previous paragraph was added."
msgstr ""
"Dukungan ``SCRIPT_NAME`` digambarkan di paragraf sebelumnya telah "
"ditambahkan."

msgid ""
"The text to put at the top of the admin index page (a string). By default, "
"this is \"Site administration\"."
msgstr ""
"Teks untuk ditaruh di atas dari halaman index admin (deretan karakter). "
"Secara awalan, ini adalah \"Administrasi Situs\"."

msgid ""
"Path to a custom template that will be used by the admin site main index "
"view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan indeks "
"utama situs admin."

msgid ""
"Path to a custom template that will be used by the admin site app index view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan indeks "
"aplikasi situs admin."

msgid ""
"The string to use for displaying empty values in the admin site's change "
"list. Defaults to a dash. The value can also be overridden on a per "
"``ModelAdmin`` basis and on a custom field within a ``ModelAdmin`` by "
"setting an ``empty_value_display`` attribute on the field. See :attr:"
"`ModelAdmin.empty_value_display` for examples."
msgstr ""
"Deretan karakter yang digunakan untuk menampilkan nilai kosong di daftar "
"perubahan situs admin. Awalan pada sebuah garis. Nilai dapat juga ditimpa "
"pada dasar per ``ModelAdmin`` dan pada bidang penyesuaian dalam "
"``ModelAdmin`` dengan mengatur sebuah atribut ``empty_value_display`` pada "
"bidang. Lihat :attr:`ModelAdmin.empty_value_display` sebagai contoh."

msgid ""
"Path to a custom template that will be used by the admin site login view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan masuk situs "
"admin."

msgid ""
"Subclass of :class:`~django.contrib.auth.forms.AuthenticationForm` that will "
"be used by the admin site login view."
msgstr ""
"Subkelas dari :class:`~django.contrib.auth.forms.AuthenticationForm` yang "
"akan digunakan oleh tampilan masuk situs admin."

msgid ""
"Path to a custom template that will be used by the admin site logout view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan keluar "
"situs admin."

msgid ""
"Path to a custom template that will be used by the admin site password "
"change view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan merubah "
"sandi situs admin."

msgid ""
"Path to a custom template that will be used by the admin site password "
"change done view."
msgstr ""
"Jalur pada cetakan penyesuaian yang akan digunakan oleh tampilan selesai "
"merubah sandi situs admin."

msgid "``AdminSite`` methods"
msgstr "Cara ``AdminSite``"

msgid ""
"Returns a dictionary of variables to put in the template context for every "
"page in the admin site."
msgstr ""
"Dikembalikan sebuah kamus dari variabel-variabel untuk menaruh di konteks "
"cetakan untuk setiap halaman di situs admin."

msgid "Includes the following variables and values by default:"
msgstr "Menyertakan variabel-variabel berikut dan nilai-nilai secara awalan:"

msgid "``site_header``: :attr:`AdminSite.site_header`"
msgstr "``site_header``: :attr:`AdminSite.site_header`"

msgid "``site_title``: :attr:`AdminSite.site_title`"
msgstr "``site_title``: :attr:`AdminSite.site_title`"

msgid "``site_url``: :attr:`AdminSite.site_url`"
msgstr "``site_url``: :attr:`AdminSite.site_url`"

msgid "``has_permission``: :meth:`AdminSite.has_permission`"
msgstr "``has_permission``: :meth:`AdminSite.has_permission`"

msgid ""
"``available_apps``: a list of applications from the :doc:`application "
"registry </ref/applications/>` available for the current user. Each entry in "
"the list is a dict representing an application with the following keys:"
msgstr ""
"``available_apps``: sebuah daftar aplikasi dari :doc:`application registry </"
"ref/applications/>` tersedia untuk pengguna saat ini. Setiap masukan dalam "
"daftar adalah sebuah kamus mewakili sebuah aplikasi dengan kunci berikut:"

msgid "``app_label``: the application label"
msgstr "``app_label``: label aplikasi"

msgid "``app_url``: the URL of the application index in the admin"
msgstr "``app_url``: URL dari indeks aplikasi di admin"

msgid ""
"``has_module_perms``: a boolean indicating if displaying and accessing of "
"the module's index page is permitted for the current user"
msgstr ""
"``has_module_perms``: sebuah boolean mengindikasikan jika menampilkan dan "
"mengakses dari halaman indeks modul diizinkan untuk pengguna saat ini"

msgid "``models``: a list of the models available in the application"
msgstr "``models``: sebuah daftar dari model tersedia di aplikasi"

msgid "Each model is a dict with the following keys:"
msgstr "Setiap model adalah kamus dengan kunci-kunci berikut:"

msgid "``object_name``: class name of the model"
msgstr "``object_name``: nama kelas dari model"

msgid "``name``: plural name of the model"
msgstr "``name``: nama jamak dari model"

msgid ""
"``perms``: a ``dict`` tracking ``add``, ``change``, and ``delete`` "
"permissions"
msgstr ""
"``perms``: sebuah ``dict`` melacak perizinan ``add``, ``change``, dan "
"``delete``"

msgid "``admin_url``: admin changelist URL for the model"
msgstr "``admin_url``: URL daftar rubah admin untuk model"

msgid "``add_url``: admin URL to add a new model instance"
msgstr "``add_url``: URL admin untuk menambah instance model baru"

msgid ""
"Returns ``True`` if the user for the given ``HttpRequest`` has permission to "
"view at least one page in the admin site. Defaults to requiring both :attr:"
"`User.is_active <django.contrib.auth.models.User.is_active>` and :attr:`User."
"is_staff <django.contrib.auth.models.User.is_staff>` to be ``True``."
msgstr ""
"Mengembalikan ``True`` jika pengguna untuk ``HttpRequest`` yang diberikan "
"mempunyai perizinan untuk melihat setidaknya satu halaman dalam situs admin. "
"Awalan mewajibkan kedua :attr:`User.is_active <django.contrib.auth.models."
"User.is_active>` dan :attr:`User.is_staff <django.contrib.auth.models.User."
"is_staff>` menjadi ``True``."

msgid ""
"Registers the given model class (or iterable of classes) with the given "
"``admin_class``. ``admin_class`` defaults to :class:`~django.contrib.admin."
"ModelAdmin` (the default admin options). If keyword arguments are given -- e."
"g. ``list_display`` -- they'll be applied as options to the admin class."
msgstr ""
"Mendaftarkan kelas model yang diberikan (atau kelas-kelas berulang) dengan "
"``admin_class`` yang diberikan. Awalan ``admin_class`` pada :class:`~django."
"contrib.admin.ModelAdmin` (pilihan admin awalan). Jika argumen kata kunci "
"diberikan -- sebagai contoh ``list_display`` -- mereka akan diberlakukan "
"sebagai pilihan pada kelas admin."

msgid ""
"Raises :class:`~django.core.exceptions.ImproperlyConfigured` if a model is "
"abstract. and ``django.contrib.admin.sites.AlreadyRegistered`` if a model is "
"already registered."
msgstr ""
"Memunculkan :class:`~django.core.exceptions.ImproperlyConfigured` jika "
"sebuah model adalah abstrak, dan ``django.contrib.admin.sites."
"AlreadyRegistered`` jika sebuah model sudah terdaftar."

msgid "Hooking ``AdminSite`` instances into your URLconf"
msgstr "Mengkaitkan instance ``AdminSite`` kedalam URLconf anda"

msgid ""
"The last step in setting up the Django admin is to hook your ``AdminSite`` "
"instance into your URLconf. Do this by pointing a given URL at the "
"``AdminSite.urls`` method. It is not necessary to use :func:`~django.conf."
"urls.include()`."
msgstr ""
"Langkah terakhir di pengaturan admin Django adalah mengaitkan instance "
"``AdminSite`` anda kedalam URLconf anda. Lakukan ini dengan menunjuk URL "
"yang diberikan pada metode ``AdminSite.urls``. Itu tidak diperlukan "
"menggunakan :func:`~django.conf.urls.include()`."

msgid ""
"In this example, we register the default ``AdminSite`` instance ``django."
"contrib.admin.site`` at the URL ``/admin/`` ::"
msgstr ""
"Di contoh ini, kami mendaftarkan instance ``AdminSite`` awalan ``django."
"contrib.admin.site`` pada URL ``/admin/`` ::"

msgid "Customizing the :class:`AdminSite` class"
msgstr "Menyesuaikan kelas :class:`AdminSite`."

msgid ""
"If you'd like to set up your own admin site with custom behavior, you're "
"free to subclass ``AdminSite`` and override or add anything you like. Then, "
"simply create an instance of your ``AdminSite`` subclass (the same way you'd "
"instantiate any other Python class) and register your models and "
"``ModelAdmin`` subclasses with it instead of with the default site. Finally, "
"update :file:`myproject/urls.py` to reference your :class:`AdminSite` "
"subclass."
msgstr ""
"Jika anda suka menyetel situs admin anda sendiri dengan penyesuaian "
"perilaku, anda bebas untuk mensubkelaskan ``AdminSite`` dan menimpa atau "
"menambah apapun anda sukai. Kemudian, cukup buat sebuah instance dari "
"subkelas ``AdminSite`` anda (cara sama anda menginstasiasikan kelas Python "
"lain) dan mendaftarkan model anda dan subkelas ``ModelAdmin`` dengan itu "
"daripada dengan situs awalan. Akhirnya, perbaharui :file:`myproject/urls.py` "
"untuk mengacu ke subkelas :class:`AdminSite` anda. "

msgid ""
"Note that you may not want autodiscovery of ``admin`` modules when using "
"your own ``AdminSite`` instance since you will likely be importing all the "
"per-app ``admin`` modules in your ``myproject.admin`` module. This means you "
"need to put ``'django.contrib.admin.apps.SimpleAdminConfig'`` instead of "
"``'django.contrib.admin'`` in your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Catat bahwa anda tidak mungkin ingin penemuan otomatis dari modul-modul "
"``admin`` ketika menggunakan instance ``AdminSite`` anda sendiri sejak anda "
"akan mengimpor semua per-aplikasi modul-modul ``admin`` dalam modul "
"``myproject.admin`` anda. Ini berarti anda butuh menaruh ``'django.contrib."
"admin.apps.SimpleAdminConfig'`` daripada ``'django.contrib.admin'`` dalam "
"pengaturan :setting:`INSTALLED_APPS` anda."

msgid "Multiple admin sites in the same URLconf"
msgstr "Banyak situs admin di URLconf yang sama"

msgid ""
"It's easy to create multiple instances of the admin site on the same Django-"
"powered website. Just create multiple instances of ``AdminSite`` and root "
"each one at a different URL."
msgstr ""
"Itu sangat mudah membuat banyak instance dari situs admin pada situs "
"jaringan sama dipersembahkan-Django. Cukup buat banyak instance dari "
"``AdminSite`` dan akar setiap satu pada URL berbeda."

msgid ""
"In this example, the URLs ``/basic-admin/`` and ``/advanced-admin/`` feature "
"separate versions of the admin site -- using the ``AdminSite`` instances "
"``myproject.admin.basic_site`` and ``myproject.admin.advanced_site``, "
"respectively::"
msgstr ""
"Dalam contoh ini, URL fitur ``/basic-admin/`` and ``/advanced-admin/`` versi "
"terpisah dari situs admin -- menggunakan instance-instance ``AdminSite`` "
"``myproject.admin.basic_site`` dan ``myproject.admin.advanced_site``, masing-"
"masing::"

msgid ""
"``AdminSite`` instances take a single argument to their constructor, their "
"name, which can be anything you like. This argument becomes the prefix to "
"the URL names for the purposes of :ref:`reversing them<admin-reverse-urls>`. "
"This is only necessary if you are using more than one ``AdminSite``."
msgstr ""
"Instance ``AdminSite`` mengambil argumen tunggal pada pembangun mereka, nama "
"mereka, yang dapat apapun anda suka. Argumen ini menjadi awalan pada nama-"
"nama URL untuk tujuan dari :ref:`reversing them<admin-reverse-urls>`. Ini "
"hanya dibutuhkan jika anda sedang menggunakan lebih dari satu ``AdminSite``."

msgid "Adding views to admin sites"
msgstr "Menambahkan tampilan ke situs admin"

msgid ""
"Just like :class:`ModelAdmin`, :class:`AdminSite` provides a :meth:`~django."
"contrib.admin.ModelAdmin.get_urls()` method that can be overridden to define "
"additional views for the site. To add a new view to your admin site, extend "
"the base :meth:`~django.contrib.admin.ModelAdmin.get_urls()` method to "
"include a pattern for your new view."
msgstr ""
"Seperti :class:`ModelAdmin`, :class:`AdminSite` menyediakan sebuah metode :"
"meth:`~django.contrib.admin.ModelAdmin.get_urls()` yang dapat ditimpa untuk "
"menentukan tambahan tampilan untuk situs. Untuk menambah sebuah tampilan "
"baru ke situs admin anda, perpanjang metode :meth:`~django.contrib.admin."
"ModelAdmin.get_urls()` dasar untuk menyertakan sebuah pola untuk tampilan "
"baru anda."

msgid ""
"Any view you render that uses the admin templates, or extends the base admin "
"template, should set ``request.current_app`` before rendering the template. "
"It should be set to either ``self.name`` if your view is on an ``AdminSite`` "
"or ``self.admin_site.name`` if your view is on a ``ModelAdmin``."
msgstr ""
"Tampian apapun anda bangun yang menggunakan cetakan admin, atau perpankang "
"cetakan admin dasar, harus menyetel ``request.current_app`` sebelum "
"membangun cetakan. Itu harus disetel antara ``self.name`` jika tampilan anda "
"pada sebuah ``AdminSite`` atau ``self.admin_site.name`` jika tampilan anda "
"pada sebuah ``ModelAdmin``."

msgid "Adding a password reset feature"
msgstr "Menambahkan fitur penyetelan kembali sandi"

msgid ""
"You can add a password reset feature to the admin site by adding a few lines "
"to your URLconf. Specifically, add these four patterns::"
msgstr ""
"Anda dapat menambah sebuah fitur penyetelan kembali sandi pada situs admin "
"dengan menambahkan beberapa baris pada URLconf anda. Khususnya, tambah "
"tambahkan empat pola ini::"

msgid ""
"(This assumes you've added the admin at ``admin/`` and requires that you put "
"the URLs starting with ``^admin/`` before the line that includes the admin "
"app itself)."
msgstr ""
"(Ini menganggap anda telah menambahkan admin pada ``admin/`` dan diwajibkan "
"bahwa anda menaruh URL dimulai dengan ``^admin/`` sebelum baris yang "
"menyertakan aplikasi admin itu sendiri)."

msgid ""
"The presence of the ``admin_password_reset`` named URL will cause a "
"\"forgotten your password?\" link to appear on the default admin log-in page "
"under the password box."
msgstr ""
"Kehadiran dari URL bernama ``admin_password_reset`` akan menyebabkan sebuah "
"tautan \"forgotten your password?\" muncul pada halaman masuk admin awalan "
"dibawah kotak sandi."

msgid "``LogEntry`` objects"
msgstr "Obyek ``LogEntry``"

msgid ""
"The ``LogEntry`` class tracks additions, changes, and deletions of objects "
"done through the admin interface."
msgstr ""
"Kelas ``LogEntry`` melacak penambahan, perubahan, penghapusan dari obyek "
"melalui antarmuka admin."

msgid "``LogEntry`` attributes"
msgstr "Atribut ``LogEntry``"

msgid "The date and time of the action."
msgstr "Tanggal dan waktu dari tindakan."

msgid ""
"The user (an :setting:`AUTH_USER_MODEL` instance) who performed the action."
msgstr ""
"Pengguna (sebuah instance  :setting:`AUTH_USER_MODEL`) yang melakukan "
"tindakan."

msgid ""
"The :class:`~django.contrib.contenttypes.models.ContentType` of the modified "
"object."
msgstr ""
":class:`~django.contrib.contenttypes.models.ContentType` dari obyek dirubah."

msgid "The textual representation of the modified object's primary key."
msgstr "Perwakilan tekstual dari primary key obyek yang telah dirubah."

msgid "The object`s ``repr()`` after the modification."
msgstr "``repr()`` obyek setelah perubahan."

msgid "The type of action logged: ``ADDITION``, ``CHANGE``, ``DELETION``."
msgstr "Jenis dari tindakan dicatat: ``ADDITION``, ``CHANGE``, ``DELETION``."

msgid "For example, to get a list of all additions done through the admin::"
msgstr ""
"Sebagai contoh, untuk mendapatkan daftar dari semua tambahan selesai melalui "
"admin::"

msgid ""
"The detailed description of the modification. In the case of an edit, for "
"example, the message contains a list of the edited fields. The Django admin "
"site formats this content as a JSON structure, so that :meth:"
"`get_change_message` can recompose a message translated in the current user "
"language. Custom code might set this as a plain string though. You are "
"advised to use the :meth:`get_change_message` method to retrieve this value "
"instead of accessing it directly."
msgstr ""
"Gambaran rincian dari perubahan. Dalam kasus sebuah penyuntingan, sebagai "
"contoh, pesan mengandung daftar dari bidang-bidang terseunting. Situs admin "
"Django membentuk isi ini sebagai struktur JSON, sehingga :meth:"
"`get_change_message` mengubah komposisi sebuah pesan diterjemahkan dalam "
"bahasa pengguna saat ini. Penyesuaian kode mungkin menyetel ini sebagai "
"string polos. Anda disarankan menggunakan metode :meth:`get_change_message` "
"untuk mengambil nilai ini daripada mengakses itu langsung."

msgid ""
"Previously, this attribute was always a plain string. It is now JSON-"
"structured so that the message can be translated in the current user "
"language. Old messages are untouched."
msgstr ""
"Sebelumnya, atribut ini selalu string polos. Itu sekarang berbentuk-JSON "
"sehingga pesan dapat diterjemahkan di bahasa pengguna saat ini. Pesan-pesan "
"lama tidak tersentuh."

msgid "``LogEntry`` methods"
msgstr "Cara ``LogEntry``"

msgid "A shortcut that returns the referenced object."
msgstr "Sebuah jalan pintas yang mengembalikan obyek diacukan."

msgid ""
"Formats and translates :attr:`change_message` into the current user "
"language. Messages created before Django 1.10 will always be displayed in "
"the language in which they were logged."
msgstr ""
"Bentuk dan terjemahkan :attr:`change_message` kedalam bahasa pengguna saat "
"ini. Pesan-pesan dibuat sebelum Django 1.10 akan selalu diperlihatkan dalam "
"bahasa yang mereka telah masuk."

msgid "Reversing admin URLs"
msgstr "Membalikkan URL admin"

msgid ""
"When an :class:`AdminSite` is deployed, the views provided by that site are "
"accessible using Django's :ref:`URL reversing system <naming-url-patterns>`."
msgstr ""
"Ketika :class:`AdminSite` disebarkan, tampilan disediakan oleh situs itu "
"dapat diakses menggunakan :ref:`URL reversing system <naming-url-patterns>` "
"Django."

msgid "The :class:`AdminSite` provides the following named URL patterns:"
msgstr ":class:`AdminSite` menyediakan corak URL bernama berikut:"

msgid "Page"
msgstr "Halaman"

msgid "URL name"
msgstr "Nama URL"

msgid "Parameters"
msgstr "Parameter"

msgid "Index"
msgstr "Indeks"

msgid "``index``"
msgstr "``indeks``"

msgid "Login"
msgstr "Masuk"

msgid "``login``"
msgstr "``login``"

msgid "Logout"
msgstr "Keluar"

msgid "``logout``"
msgstr "``keluar``"

msgid "Password change"
msgstr "Ubah sandi"

msgid "``password_change``"
msgstr "``password_change``"

msgid "Password change done"
msgstr "Merubah sandi selesai"

msgid "``password_change_done``"
msgstr "``password_change_done``"

msgid "i18n JavaScript"
msgstr "i18n JavaScript"

msgid "``jsi18n``"
msgstr "``jsi18n``"

msgid "Application index page"
msgstr "Halaman indeks aplikasi"

msgid "``app_list``"
msgstr "``app_list``"

msgid "``app_label``"
msgstr "``app_label``"

msgid "Redirect to object's page"
msgstr "Pengalihan ke halaman obyek"

msgid "``view_on_site``"
msgstr "``view_on_site``"

msgid "``content_type_id``, ``object_id``"
msgstr "``content_type_id``, ``object_id``"

msgid ""
"Each :class:`ModelAdmin` instance provides an additional set of named URLs:"
msgstr ""
"Setiap instance :class:`ModelAdmin` menyediakan sebuah tambahan sekumpulan "
"dari URL bernama:"

msgid "Changelist"
msgstr "Daftar rubah"

msgid "``{{ app_label }}_{{ model_name }}_changelist``"
msgstr "``{{ app_label }}_{{ model_name }}_changelist``"

msgid "Add"
msgstr "Tambah"

msgid "``{{ app_label }}_{{ model_name }}_add``"
msgstr "``{{ app_label }}_{{ model_name }}_add``"

msgid "History"
msgstr "Riwayat"

msgid "``{{ app_label }}_{{ model_name }}_history``"
msgstr "``{{ app_label }}_{{ model_name }}_history``"

msgid "``object_id``"
msgstr "``object_id``"

msgid "Delete"
msgstr "Hapus"

msgid "``{{ app_label }}_{{ model_name }}_delete``"
msgstr "``{{ app_label }}_{{ model_name }}_delete``"

msgid "Change"
msgstr "Ubah"

msgid "``{{ app_label }}_{{ model_name }}_change``"
msgstr "``{{ app_label }}_{{ model_name }}_change``"

msgid "The ``UserAdmin`` provides a named URL:"
msgstr "``UserAdmin`` menyediakan sebuah URL bernama:"

msgid "``auth_user_password_change``"
msgstr "``auth_user_password_change``"

msgid "``user_id``"
msgstr "``user_id``"

msgid ""
"These named URLs are registered with the application namespace ``admin``, "
"and with an instance namespace corresponding to the name of the Site "
"instance."
msgstr ""
"URL bernama ini didaftarkan dengan namespace aplikasi ``admin``, dan dengan "
"sebuah namespace instance berhubungan pada nama dari instance Site."

msgid ""
"So - if you wanted to get a reference to the Change view for a particular "
"``Choice`` object (from the polls application) in the default admin, you "
"would call::"
msgstr ""
"Jadi - jika anda ingin mendapatkan acuan pada tampilan Change untuk obyek "
"``Choice`` tertentu (dari aplikasi jejak pendapat) dalam admin awalan, anda "
"akan memanggil::"

msgid ""
"This will find the first registered instance of the admin application "
"(whatever the instance name), and resolve to the view for changing ``poll."
"Choice`` instances in that instance."
msgstr ""
"Ini akan menemukan instance terdaftar pertama dari aplikasi admin (apapun "
"nama instance), dan memutuskan untuk tampilan untuk merubah instance ``poll."
"Choice`` dalam instance itu."

msgid ""
"If you want to find a URL in a specific admin instance, provide the name of "
"that instance as a ``current_app`` hint to the reverse call. For example, if "
"you specifically wanted the admin view from the admin instance named "
"``custom``, you would need to call::"
msgstr ""
"Jika anda inginmenemukan sebuah URL dalam instance admin tertentu, sediakan "
"nama dari instance itu sebagai sebuah petunjuk ``current_app`` untuk "
"membalikkan panggilan. Sebagai contoh, jika anda khususnya ingin tampilan "
"admin dari instance admin bernama ``custom``, anda akan butuh memanggil::"

msgid ""
"For more details, see the documentation on :ref:`reversing namespaced URLs "
"<topics-http-reversing-url-namespaces>`."
msgstr ""
"Untuk rincian lebih, lihat dokumentasi pada :ref:`reversing namespaced URLs "
"<topics-http-reversing-url-namespaces>`."

msgid ""
"To allow easier reversing of the admin urls in templates, Django provides an "
"``admin_urlname`` filter which takes an action as argument:"
msgstr ""
"Untuk mengizinkan membalikan paling mudah dari url-url admin dalam cetakan, "
"Django menyediakan penyaring ``admin_urlname`` yang mengambil sebuah "
"tindakan sebagai argumen:"

msgid ""
"The action in the examples above match the last part of the URL names for :"
"class:`ModelAdmin` instances described above. The ``opts`` variable can be "
"any object which has an ``app_label`` and ``model_name`` attributes and is "
"usually supplied by the admin views for the current model."
msgstr ""
"Tindakan dalam contoh-contoh diatas mencocokan bagian terakhir dari nama-"
"nama URL untuk instance-instance :class:`ModelAdmin` digambarkan diatas. "
"Variabel 11opts`` dapat berupa obyek-obyek apapun yang mempunyai sebuah "
"atribut ``app_label`` dan ``model_name`` dan biasanya dipasok oleh tampilan-"
"tampilan admin untuk model saat ini."

msgid "The ``staff_member_required`` decorator"
msgstr "Penghias ``staff_member_required``"

msgid ""
"This decorator is used on the admin views that require authorization. A view "
"decorated with this function will having the following behavior:"
msgstr ""
"Penghias digunakan pada tmapilan-tampilan admin yang membutuhkan otorisasi. "
"Sebuah tampilan dihiasi dengan fungsi ini akan memiliki perilaku berikut:"

msgid ""
"If the user is logged in, is a staff member (``User.is_staff=True``), and is "
"active (``User.is_active=True``), execute the view normally."
msgstr ""
"Jika pengguna masuk, adalah anggota staf (``User.is_staff=True``), dan aktif "
"(``User.is_active=True``), kerjakan tampilan secara biasa."

msgid ""
"Otherwise, the request will be redirected to the URL specified by the "
"``login_url`` parameter, with the originally requested path in a query "
"string variable specified by ``redirect_field_name``. For example: ``/admin/"
"login/?next=/admin/polls/question/3/``."
msgstr ""
"Sebaliknya, permintaan akan dialihkan ke URL ditentukan oleh parameter "
"``login_url``, dengan jalur aslinya diminta dalam sebuah variabel string "
"permintaan ditentukan oleh ``redirect_field_name``. Sebagai contoh: ``/admin/"
"login/?next=/admin/polls/question/3/``."

msgid "Example usage::"
msgstr "Contoh penggunaan:"

msgid "JavaScript customizations in the admin"
msgstr "Penyesuaian JavaScript di admin"

msgid "Inline form events"
msgstr "Peristiwa-peristiwa formulir berderet"

msgid ""
"You may want to execute some JavaScript when an inline form is added or "
"removed in the admin change form. The ``formset:added`` and ``formset:"
"removed`` jQuery events allow this. The event handler is passed three "
"arguments:"
msgstr ""
"Anda ingin mengerjakan beberapa JavaScript ketika sebuah formulir berderet "
"ditambahkan atau dipindahkan di formulir rubah admin. Event jQuery ``formset:"
"added`` dan ``formset:removed`` mengizinkan ini. penangan event melewatkan "
"tiga argumen:"

msgid "``event`` is the ``jQuery`` event."
msgstr "``event`` adalah peristiwa jQuery."

msgid "``$row`` is the newly added (or removed) row."
msgstr "``$row`` adalah baris baru ditambahkan (atau dipindahkan)."

msgid "``formsetName`` is the formset the row belongs to."
msgstr "``formsetName`` adalah ``formsetName`` baris milik."

msgid ""
"The event is fired using the :ref:`django.jQuery namespace <contrib-admin-"
"jquery>`."
msgstr ""
"Peristiwa dinyalakan menggunakan :ref:`django.jQuery namespace <contrib-"
"admin-jquery>`."

msgid ""
"In your custom ``change_form.html`` template, extend the "
"``admin_change_form_document_ready`` block and add the event listener code:"
msgstr ""
"Dalam cetakan ``change_form.html`` penyesuaian anda, perpanjang blok "
"``admin_change_form_document_ready`` dan tambah kode pendengar kejadian:"

msgid "Two points to keep in mind:"
msgstr "Dua poin untuk diingat:"

msgid ""
"The JavaScript code must go in a template block if you are inheriting "
"``admin/change_form.html`` or it won't be rendered in the final HTML."
msgstr ""
"Kode JavaScript harus berada di blok cetakan jika anda mewarisi ``admin/"
"change_form.html`` atau itu tidak akan dibangun dalam HTML akhir."

msgid ""
"``{{ block.super }}`` is added because Django's "
"``admin_change_form_document_ready`` block contains JavaScript code to "
"handle various operations in the change form and we need that to be rendered "
"too."
msgstr ""
"``{{ block.super }}`` ditambahkan karena blok "
"``admin_change_form_document_ready`` Django mengandung kode JavaScript untuk "
"mengangani beragam tindakan dalam formulir rubah dan kami butuh itu dibangun "
"juga."

msgid ""
"Sometimes you'll need to work with ``jQuery`` plugins that are not "
"registered in the ``django.jQuery`` namespace. To do that, simply change how "
"the code listens for events. Instead of wrapping the listener in the "
"``django.jQuery`` namespace, just listen to the event triggered from there. "
"For example:"
msgstr ""
"Terkadang anda akan butuh bekerja dengan tanaman ``jQuery`` yang tidak "
"terdaftar dalam namespace ``django.jQuery``. Untuk melakukan itu, cukup "
"rubah bagaimana kode mendengarkan untuk peristiwa-peristiwa. Daripada "
"membungkus pendengar dalam namespace ``django.jQuery``, cukup mendengar pada "
"peristiwa dipicu dari sana. Sebagai contoh:"

msgid "``django.contrib.auth``"
msgstr "``django.contrib.auth``"

msgid ""
"This document provides API reference material for the components of Django's "
"authentication system. For more details on the usage of these components or "
"how to customize authentication and authorization see the :doc:"
"`authentication topic guide </topics/auth/index>`."
msgstr ""
"Dokumen ini menyediakan bahan acuan API untuk komponen-komponen dari sistem "
"otentifikasi Django. Untuk rincian lebih pada penggunaan dari komponen-"
"komponen ini atau bagaimana menyesuaikan autentifikasi dan otorisasi lihat :"
"doc:`authentication topic guide </topics/auth/index>`."

msgid "``User`` model"
msgstr "Model ``User``"

msgid "Fields"
msgstr "Bidang"

msgid ""
":class:`~django.contrib.auth.models.User` objects have the following fields:"
msgstr ""
"Obyek :class:`~django.contrib.auth.models.User` mempunyai bidang berikut:"

msgid ""
"Required. 150 characters or fewer. Usernames may contain alphanumeric, "
"``_``, ``@``, ``+``, ``.`` and ``-`` characters."
msgstr ""
"Diwajibkan. 150 karakter atau lebih sedikit. Nama pengguna dapat mengandung "
"alfanumerik, ``_``, ``@``, ``+``, ``.`` dan ``-`` karakter."

msgid ""
"The ``max_length`` should be sufficient for many use cases. If you need a "
"longer length, please use a :ref:`custom user model <specifying-custom-user-"
"model>`. If you use MySQL with the ``utf8mb4`` encoding (recommended for "
"proper Unicode support), specify at most ``max_length=191`` because MySQL "
"can only create unique indexes with 191 characters in that case by default."
msgstr ""
"``max_length`` harus cukup untuk banyak penggunaan kasus. Jika anda butuh "
"panjang lebih, harap gunakan :ref:`custom user model <specifying-custom-user-"
"model>`. Jika anda menggunakan MySQL dengan penyandian ``utf8mb4`` "
"(dianjurkan untuk dukungan Unicode sesuai), tentukan kebanyakan "
"``max_length=191`` karena MySQL hanya dapat membuat unik indeks dengan 192 "
"karakter dalam kasus itu secara awalan."

msgid "Usernames and Unicode"
msgstr "Nama pengguna dan Unicode"

msgid ""
"Django originally accepted only ASCII letters and numbers in usernames. "
"Although it wasn't a deliberate choice, Unicode characters have always been "
"accepted when using Python 3. Django 1.10 officially added Unicode support "
"in usernames, keeping the ASCII-only behavior on Python 2, with the option "
"to customize the behavior using :attr:`.User.username_validator`."
msgstr ""
"Django aslinya menerima hanya hurud ASCII dan angka dalam nama pengguna. "
"Meskipun itu bukanlah pilihan disengaja. Karakter unicode selalu diterima "
"ketika menggunakan Python 3. Django 1.10 secara resmi menambah dukungan "
"Unicode dalam nama pengguna, menjaga perilaku hanya-ASCII pada Python 2, "
"dengan pilihan untuk menyesuaikan perilaku menggunakan :attr:`.User."
"username_validator`."

msgid "The ``max_length`` increased from 30 to 150 characters."
msgstr "``max_length`` meningkat dari 30 menjadi 150 karakter."

msgid ""
"Optional (:attr:`blank=True <django.db.models.Field.blank>`). 30 characters "
"or fewer."
msgstr ""
"Pilihan (:attr:`blank=True <django.db.models.Field.blank>`). 30 karakter "
"atau sedikit."

msgid ""
"Optional (:attr:`blank=True <django.db.models.Field.blank>`). Email address."
msgstr ""
"Pilihan (:attr:`blank=True <django.db.models.Field.blank>`). Alamat surel."

msgid ""
"Required. A hash of, and metadata about, the password. (Django doesn't store "
"the raw password.) Raw passwords can be arbitrarily long and can contain any "
"character. See the :doc:`password documentation </topics/auth/passwords>`."
msgstr ""
"Diwajibkan. Sebuah campuran dari, dan metadata tentang, sandi. (Django tidak "
"menyimpan sandi mentah.) Sandi mentah dapat berubah-ubah lama dan dapat "
"mengandung karakter apapun. Lihat :doc:`password documentation </topics/auth/"
"passwords>`."

msgid "Many-to-many relationship to :class:`~django.contrib.auth.models.Group`"
msgstr ""
"Hubungan banyak-ke-banyak ke :class:`~django.contrib.auth.models.Group`"

msgid ""
"Many-to-many relationship to :class:`~django.contrib.auth.models.Permission`"
msgstr ""
"Hubungan banyak-ke-banyak ke :class:`~django.contrib.auth.models.Permission`"

msgid "Boolean. Designates whether this user can access the admin site."
msgstr "Boolean. Menandai apakah pengguna ini dapat mengakses situs admin."

msgid ""
"Boolean. Designates whether this user account should be considered active. "
"We recommend that you set this flag to ``False`` instead of deleting "
"accounts; that way, if your applications have any foreign keys to users, the "
"foreign keys won't break."
msgstr ""
"Boolean. Menunjukkan apakah akun pengguna ini harus dianggap aktif. Kami "
"menganjurkan bahwa anda menyetel bendera ini menjadi ``False`` daripada "
"menghapus akun-akun; cara itu, jika aplikasi anda mempunyai foreign key "
"apapun ke pengguna, foreign key tidak akan rusak."

msgid ""
"This doesn't necessarily control whether or not the user can log in. "
"Authentication backends aren't required to check for the ``is_active`` flag "
"but the default backend (:class:`~django.contrib.auth.backends."
"ModelBackend`) and the :class:`~django.contrib.auth.backends."
"RemoteUserBackend` do. You can use :class:`~django.contrib.auth.backends."
"AllowAllUsersModelBackend` or :class:`~django.contrib.auth.backends."
"AllowAllUsersRemoteUserBackend` if you want to allow inactive users to "
"login. In this case, you'll also want to customize the :class:`~django."
"contrib.auth.forms.AuthenticationForm` used by the :class:`~django.contrib."
"auth.views.LoginView` as it rejects inactive users. Be aware that the "
"permission-checking methods such as :meth:`~django.contrib.auth.models.User."
"has_perm` and the authentication in the Django admin all return ``False`` "
"for inactive users."
msgstr ""
"Ini tidak diperlukan mengendalikan apakah atau bukan pengguna dapat masuk. "
"Backend autentifikasi tidak diwajibkan untuk memeriksa untuk tanda "
"``is_active`` tetapi backend awalan (:class:`~django.contrib.auth.backends."
"ModelBackend`) dan :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"melakukannya. Anda dapat menggunakan class:`~django.contrib.auth.backends."
"AllowAllUsersModelBackend` atau :class:`~django.contrib.auth.backends."
"AllowAllUsersRemoteUserBackend` jika anda ingin mengizinkan pengguna tidak "
"aktif untuk masuk. Dalam kasus ini, anda akan juga ingin menyesuaikan :class:"
"`~django.contrib.auth.forms.AuthenticationForm` digunakan oleh :class:"
"`~django.contrib.auth.views.LoginView` ketika itu menolak pengguna tidak "
"aktif. Waspada bahwa metode pemeriksaan-perizinan seperti :meth:`~django."
"contrib.auth.models.User.has_perm` dan autentifikasi dalam admin Django "
"semua mengembalikan ``False`` untuk pengguna tidak aktif."

msgid ""
"In older versions, :class:`~django.contrib.auth.backends.ModelBackend` and :"
"class:`~django.contrib.auth.backends.RemoteUserBackend` allowed inactive "
"users to authenticate."
msgstr ""
"Dalam versi terlama, :class:`~django.contrib.auth.backends.ModelBackend` "
"dan :class:`~django.contrib.auth.backends.RemoteUserBackend` mengizinkan "
"pengguna tidak aktif untuk di autentifikasi."

msgid ""
"Boolean. Designates that this user has all permissions without explicitly "
"assigning them."
msgstr ""
"Boolean. Menunjuk bahwa pengguna ini mempunyai semua perizinan tanpa secara "
"jelas menetapkan mereka."

msgid "A datetime of the user's last login."
msgstr "Tanggalwaktu dari masuk terakhir pengguna."

msgid ""
"A datetime designating when the account was created. Is set to the current "
"date/time by default when the account is created."
msgstr ""
"Sebuah datetime menunjukkan ketika akun telah dibuat. Adalah disetel ke "
"tanggal/waktu saat ini secara awalan ketika akun dibuat."

msgid "Attributes"
msgstr "Atribut"

msgid ""
"Read-only attribute which is always ``True`` (as opposed to ``AnonymousUser."
"is_authenticated`` which is always ``False``). This is a way to tell if the "
"user has been authenticated. This does not imply any permissions and doesn't "
"check if the user is active or has a valid session. Even though normally you "
"will check this attribute on ``request.user`` to find out whether it has "
"been populated by the :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware` (representing the currently logged-in user), you "
"should know this attribute is ``True`` for any :class:`~models.User` "
"instance."
msgstr ""
"Atribut hanya-baca yang selalu ``True`` (sebagai lawan ``AnonymousUser."
"is_authenticated`` yang selalu ``False``). Ini adalah cara untuk memberitahu "
"jika pengguna telah diotentifikasi. Ini tidak berarti perizinan apapun dan "
"tidak memeriksa jika pengguna adalah aktif atau mempunyai sesi sah. Meskipun "
"secara biasa anda akan memeriksa atribut ini pada ``request.user`` untuk "
"menemukan apakah itu telah dikumpulkan oleh :class:`~django.contrib.auth."
"middleware.AuthenticationMiddleware` (mewakili pengguna masuk saat ini), "
"anda harus mengetahui atribut ini adalah ``True`` untuk tiap instance :class:"
"`~models.User`."

msgid ""
"In older versions, this was a method. Backwards-compatibility support for "
"using it as a method will be removed in Django 2.0."
msgstr ""
"Di versi terlama, ini adalah metode . Dukungan kesesuaian kebelakang "
"mendukung untuk menggunakannya sebagai cara akan dipindahkan di Django 2.0."

msgid "Don't use the ``is`` operator for comparisons!"
msgstr "Jangan gunakan penghubung ``is`` untuk perbandingan!"

msgid ""
"To allow the ``is_authenticated`` and ``is_anonymous`` attributes to also "
"work as methods, the attributes are  ``CallableBool`` objects. Thus, until "
"the deprecation period ends in Django 2.0, you can't compare these "
"properties using the ``is`` operator. That is, ``request.user."
"is_authenticated is True`` always evaluate to ``False``."
msgstr ""
"Untukmengizinkan atribut ``is_authenticated`` dan ``is_anonymous`` untuk "
"juga bekerja seperti metode, atribut adalah obyek ``CallableBool``. Dengan "
"demikian, sampai masa pengusangan berakhir di Django 2.0, anda tidak dapat "
"membandingkan sifat ini menggunakan penghubung ``is``. Yaitu, ``request.user."
"is_authenticated adalah True`` selalu  bernilai ``False``."

msgid ""
"Read-only attribute which is always ``False``. This is a way of "
"differentiating :class:`~models.User` and :class:`~models.AnonymousUser` "
"objects. Generally, you should prefer using :attr:`~django.contrib.auth."
"models.User.is_authenticated` to this attribute."
msgstr ""
"Atribut hanya-baca yaitu selalu ``False``. Ini adalah jalan untuk membedakan "
"obyek :class:`~models.User` and :class:`~models.AnonymousUser`. Umumnya, "
"anda harus memilih menggunakan :attr:`~django.contrib.auth.models.User."
"is_authenticated` pada atribut ini."

msgid ""
"Points to a validator instance used to validate usernames. Defaults to :"
"class:`validators.UnicodeUsernameValidator` on Python 3 and :class:"
"`validators.ASCIIUsernameValidator` on Python 2."
msgstr ""
"Menunjuk pada instance pengesah untuk mensahkan nama pengguna. Awalan :class:"
"`validators.UnicodeUsernameValidator` pada Python 3 dan :class:`validators."
"ASCIIUsernameValidator` pada Python 2."

msgid ""
"To change the default username validator, you can subclass the ``User`` "
"model and set this attribute to a different validator instance. For example, "
"to use ASCII usernames on Python 3::"
msgstr ""
"Untuk merubah pengesah nama pengguna awalan, anda dapat mensubkelaskan model "
"``User`` dan menyetel atribut ini pada instance pengesah berbeda. Sebagai "
"contoh, untuk menggunakannama pengguna ASCII pada Python 3::"

msgid ""
"Returns the username for the user. Since the ``User`` model can be swapped "
"out, you should use this method instead of referencing the username "
"attribute directly."
msgstr ""
"Mengembalikan nama pengguna untuk pengguna. Sejak model ``User`` dapat "
"bertukar, anda haus menggunakan metode ini daripada mengacu atribut nama "
"pengguna secara langsung."

msgid ""
"Returns the :attr:`~django.contrib.auth.models.User.first_name` plus the :"
"attr:`~django.contrib.auth.models.User.last_name`, with a space in between."
msgstr ""
"Mengembalikan :attr:`~django.contrib.auth.models.User.first_name` ditambah :"
"attr:`~django.contrib.auth.models.User.last_name`, dengan spasi diantaranya."

msgid "Returns the :attr:`~django.contrib.auth.models.User.first_name`."
msgstr "Mengembalikan :attr:`~django.contrib.auth.models.User.first_name`."

msgid ""
"Sets the user's password to the given raw string, taking care of the "
"password hashing. Doesn't save the :class:`~django.contrib.auth.models.User` "
"object."
msgstr ""
"Setel sandi pengguna ke string mentah yang diberikan, merawat campuran "
"sandi. Tidak menyimpan obyek :class:`~django.contrib.auth.models.User`."

msgid ""
"When the ``raw_password`` is ``None``, the password will be set to an "
"unusable password, as if :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` were used."
msgstr ""
"Ketika ``raw_password`` adalah ``None``, sandi akan disetel menjadi sebuah "
"sandi tidak berguna, seperti jika :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` digunakan."

msgid ""
"Returns ``True`` if the given raw string is the correct password for the "
"user. (This takes care of the password hashing in making the comparison.)"
msgstr ""
"Mengembalikan ``True`` jika deretan karakter mentah yang diberikan adalah "
"sandi benar untuk pengguna. (Ini merawat hash sandi dalam membuat "
"perbandingan.)"

msgid ""
"Marks the user as having no password set.  This isn't the same as having a "
"blank string for a password. :meth:`~django.contrib.auth.models.User."
"check_password()` for this user will never return ``True``. Doesn't save "
"the :class:`~django.contrib.auth.models.User` object."
msgstr ""
"Tandai pengguna sebagai tidak mempunyai sandi tidak disetel. Ini tidak sama "
"seperti memiliki string kosong untuk sebuah sandi. :meth:`~django.contrib."
"auth.models.User.check_password()` untuk pengguna ini tidak akan pernah "
"mengembalikan ``True``. Tidak menyimpan obyek :class:`~django.contrib.auth."
"models.User`."

msgid ""
"You may need this if authentication for your application takes place against "
"an existing external source such as an LDAP directory."
msgstr ""
"Anda mungkin butuh ini jika otentifikasi untuk aplikasi anda memakan tempat "
"terhadap sumber luar yang ada seperti pelipat LDAP."

msgid ""
"Returns ``False`` if :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` has been called for this user."
msgstr ""
"Mengembalikan ``False`` jika :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` telah dipanggil untuk pengguna ini."

msgid ""
"Returns a set of permission strings that the user has, through their groups."
msgstr ""
"Mengembalikan deretan karakter kumpulan perizinan yang pengguna punyai, "
"melalui kelompok mreka."

msgid ""
"If ``obj`` is passed in, only returns the group permissions for this "
"specific object."
msgstr ""
"Jika ``obj`` diloloskan, hanya mengembalikan perizinan kelompok untuk obyek "
"tertentu ini."

msgid ""
"Returns a set of permission strings that the user has, both through group "
"and user permissions."
msgstr ""
"Mengembalikan sekumpulan deretan karakter perizinan yang pengguna punyai, "
"kedua melalui perizinan kelompok dan pengguna."

msgid ""
"If ``obj`` is passed in, only returns the permissions for this specific "
"object."
msgstr ""
"Jika ``obj`` diloloskan. hanya mengembalikan perizinan untuk obyek tertentu "
"ini."

msgid ""
"Returns ``True`` if the user has the specified permission, where perm is in "
"the format ``\"<app label>.<permission codename>\"``. (see documentation on :"
"ref:`permissions <topic-authorization>`). If the user is inactive, this "
"method will always return ``False``."
msgstr ""
"Mengembalikan ``True`` jika pengguna mempunyai perizinan tertentu, dimana "
"perm dalam bentuk ``\"<app label>.<permission codename>\"`` (lihat "
"dokumentasi pada :ref:`permissions <topic-authorization>`). Jika pengguna "
"tidak aktif, metode ini akan selalu mengembalikan ``False``."

msgid ""
"If ``obj`` is passed in, this method won't check for a permission for the "
"model, but for this specific object."
msgstr ""
"Jika ``obj`` diloloskan, metode ini tidak akan memeriksa untuk sebuah "
"perizinan untuk model, tetapi untuk obyek tertentu ini."

msgid ""
"Returns ``True`` if the user has each of the specified permissions, where "
"each perm is in the format ``\"<app label>.<permission codename>\"``. If the "
"user is inactive, this method will always return ``False``."
msgstr ""
"Mengembalikan ``True`` jika pengguna mempunyai setiap perizinan tertentu, "
"dimana setiap perizinan dalam bentuk ``\"<app label>.<permission codename>"
"\"``. Jika pengguna tidak aktif, metode ini akan selalu mengembalikan "
"``False``."

msgid ""
"If ``obj`` is passed in, this method won't check for permissions for the "
"model, but for the specific object."
msgstr ""
"Jika ``obj`` diloloskan, metode ini tidak akan memeriksa untuk perizinan-"
"perizinan untuk model, tetapi untuk obyek tertentu."

msgid ""
"Returns ``True`` if the user has any permissions in the given package (the "
"Django app label). If the user is inactive, this method will always return "
"``False``."
msgstr ""
"Mengembalikan ``True`` jika pengguna mempunyai perizinan apapun di paket "
"yang diberikan (label aplikasi Django). Jika pengguna tidak aktif, metode "
"ini akan selalu mengembalikan ``False``."

msgid ""
"Sends an email to the user. If ``from_email`` is ``None``, Django uses the :"
"setting:`DEFAULT_FROM_EMAIL`. Any ``**kwargs`` are passed to the underlying :"
"meth:`~django.core.mail.send_mail()` call."
msgstr ""
"Mengirim sebuah surel ke pengguna. Jika ``from_email`` adalah ``None``, "
"Django menggunakan :setting:`DEFAULT_FROM_EMAIL`. ``**kwargs`` apapun "
"dilewatkan ke panggilan :meth:`~django.core.mail.send_mail()` pokok"

msgid "Manager methods"
msgstr "Pengelola metode"

msgid ""
"The :class:`~django.contrib.auth.models.User` model has a custom manager "
"that has the following helper methods (in addition to the methods provided "
"by :class:`~django.contrib.auth.models.BaseUserManager`):"
msgstr ""
"Model :class:`~django.contrib.auth.models.User` mempunyai pengelola "
"penyesuaian yang mempunyai metode pembantu berikut (sebagai tambahan pada "
"metode disediakan oleh :class:`~django.contrib.auth.models.BaseUserManager`):"

msgid "Creates, saves and returns a :class:`~django.contrib.auth.models.User`."
msgstr ""
"Buat, simpan dan mengembalikan :class:`~django.contrib.auth.models.User`."

msgid ""
"The :attr:`~django.contrib.auth.models.User.username` and :attr:`~django."
"contrib.auth.models.User.password` are set as given. The domain portion of :"
"attr:`~django.contrib.auth.models.User.email` is automatically converted to "
"lowercase, and the returned :class:`~django.contrib.auth.models.User` object "
"will have :attr:`~django.contrib.auth.models.User.is_active` set to ``True``."
msgstr ""
":attr:`~django.contrib.auth.models.User.username` dan :attr:`~django.contrib."
"auth.models.User.password` disetel sesuai yang diberikan. Bagian ranah dari :"
"attr:`~django.contrib.auth.models.User.email` adalah otomatis mengubah ke "
"huruf kecil, dan mengembalikan obyek :class:`~django.contrib.auth.models."
"User` akan menyetel :attr:`~django.contrib.auth.models.User.is_active` ke "
"``True``."

msgid ""
"If no password is provided, :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` will be called."
msgstr ""
"Jika tidak ada sandi disediakan, :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` akan dipanggil."

msgid ""
"The ``extra_fields`` keyword arguments are passed through to the :class:"
"`~django.contrib.auth.models.User`’s ``__init__`` method to allow setting "
"arbitrary fields on a :ref:`custom user model <auth-custom-user>`."
msgstr ""
"Argumen kata kunci ``extra_fields`` dilewatkan melalui metode :class:"
"`~django.contrib.auth.models.User`’s ``__init__`` untuk mengizinkan mengatur "
"bidang yang berubah-ubah pada :ref:`custom user model <auth-custom-user>`."

msgid ""
"See :ref:`Creating users <topics-auth-creating-users>` for example usage."
msgstr ""
"Lihat :ref:`Membuat pengguna <topics-auth-creating-users>` sebagai contoh "
"penggunaan."

msgid ""
"Same as :meth:`create_user`, but sets :attr:`~models.User.is_staff` and :"
"attr:`~models.User.is_superuser` to ``True``."
msgstr ""
"Sama seperti :meth:`create_user`, but sets :attr:`~models.User.is_staff` "
"dan :attr:`~models.User.is_superuser` menjadi ``True``."

msgid "``AnonymousUser`` object"
msgstr "Obyek ``AnonymousUser``"

msgid ""
":class:`django.contrib.auth.models.AnonymousUser` is a class that implements "
"the :class:`django.contrib.auth.models.User` interface, with these "
"differences:"
msgstr ""
":class:`django.contrib.auth.models.AnonymousUser` adalah kelas yang "
"menerapkan antarmuka :class:`django.contrib.auth.models.User`, dengan "
"perbedaan ini:"

msgid ":ref:`id <automatic-primary-key-fields>` is always ``None``."
msgstr ":ref:`id <automatic-primary-key-fields>` selalu ``None``."

msgid ""
":attr:`~django.contrib.auth.models.User.username` is always the empty string."
msgstr ""
":attr:`~django.contrib.auth.models.User.username` adalah selalu string "
"kosong."

msgid ""
":meth:`~django.contrib.auth.models.User.get_username()` always returns the "
"empty string."
msgstr ""
":meth:`~django.contrib.auth.models.User.get_username()` selalu mengembalikan "
"deretan kalimat kosong."

msgid ""
":attr:`~django.contrib.auth.models.User.is_anonymous` is ``True`` instead of "
"``False``."
msgstr ""
":attr:`~django.contrib.auth.models.User.is_anonymous` adalah ``True`` "
"daripada ``False``."

msgid ""
":attr:`~django.contrib.auth.models.User.is_authenticated` is ``False`` "
"instead of ``True``."
msgstr ""
":attr:`~django.contrib.auth.models.User.is_authenticated` adalah ``False`` "
"daripada ``True``."

msgid ""
":attr:`~django.contrib.auth.models.User.is_staff` and :attr:`~django.contrib."
"auth.models.User.is_superuser` are always ``False``."
msgstr ""
":attr:`~django.contrib.auth.models.User.is_staff` dan :attr:`~django.contrib."
"auth.models.User.is_superuser` adalah selalu ``False``."

msgid ":attr:`~django.contrib.auth.models.User.is_active` is always ``False``."
msgstr ""
":attr:`~django.contrib.auth.models.User.is_active` adalah selalu ``False``. "

msgid ""
":attr:`~django.contrib.auth.models.User.groups` and :attr:`~django.contrib."
"auth.models.User.user_permissions` are always empty."
msgstr ""
":attr:`~django.contrib.auth.models.User.groups` dan :attr:`~django.contrib."
"auth.models.User.user_permissions` adalah selalu kosong."

msgid ""
":meth:`~django.contrib.auth.models.User.set_password()`, :meth:`~django."
"contrib.auth.models.User.check_password()`, :meth:`~django.db.models.Model."
"save` and :meth:`~django.db.models.Model.delete()` raise :exc:"
"`NotImplementedError`."
msgstr ""
":meth:`~django.contrib.auth.models.User.set_password()`, :meth:`~django."
"contrib.auth.models.User.check_password()`, :meth:`~django.db.models.Model."
"save` dan :meth:`~django.db.models.Model.delete()` memunculkan :exc:"
"`NotImplementedError`."

msgid ""
"In practice, you probably won't need to use :class:`~django.contrib.auth."
"models.AnonymousUser` objects on your own, but they're used by Web requests, "
"as explained in the next section."
msgstr ""
"Dalam penerapannya, anda mungkin tidak butuh menggunakan obyek :class:"
"`~django.contrib.auth.models.AnonymousUser` anda sendiri, tetapi mereka "
"digunakan oleh permintaan Jaringan, seperti yang dijelaskan di bagian "
"selanjutnya."

msgid "``Permission`` model"
msgstr "Model ``Permission``"

msgid ""
":class:`~django.contrib.auth.models.Permission` objects have the following "
"fields:"
msgstr ""
"Obyek :class:`~django.contrib.auth.models.Permission` mempunyai bidang "
"berikut:"

msgid "Required. 255 characters or fewer. Example: ``'Can vote'``."
msgstr "Dibutuhkan. 255 karakter atau sedikit. Contoh: ``'Can vote'``."

msgid ""
"Required. A reference to the ``django_content_type`` database table, which "
"contains a record for each installed model."
msgstr ""
"Dibutuhkan. Mengacu ke tabel basisdata ``django_content_type``, yang "
"mengandung sebuah rekaman untuk setiap model terpasang."

msgid "Required. 100 characters or fewer. Example: ``'can_vote'``."
msgstr "Dibutuhkan. 100 karakter atau sedikit. Contoh: ``'can_vote'``."

msgid ""
":class:`~django.contrib.auth.models.Permission` objects have the standard "
"data-access methods like any other :doc:`Django model </ref/models/"
"instances>`."
msgstr ""
"Obyek :class:`~django.contrib.auth.models.Permission` mempunyai standar cara "
"akses-data seperti lainnya :doc:`Django model </ref/models/instances>`."

msgid "``Group`` model"
msgstr "Model ``Group``"

msgid ""
":class:`~django.contrib.auth.models.Group` objects have the following fields:"
msgstr ""
"Obyek :class:`~django.contrib.auth.models.Group` mempunyai bidang berikut:"

msgid ""
"Required. 80 characters or fewer. Any characters are permitted. Example: "
"``'Awesome Users'``."
msgstr ""
"Dibutuhkan. 80 karakter atau sedikit. Karakter apapun diizinkan. Contoh: "
"``'Awesome Users'``. "

msgid "Many-to-many field to :class:`~django.contrib.auth.models.Permission`::"
msgstr ""
"Bidang banyak-ke-banyak ke :class:`~django.contrib.auth.models.Permission`:: "

msgid "Validators"
msgstr "Pengesah"

msgid ""
"A field validator allowing only ASCII letters and numbers, in addition to "
"``@``, ``.``, ``+``, ``-``, and ``_``. The default validator for ``User."
"username`` on Python 2."
msgstr ""
"Pengesah bidang mengizinkan hanya huruf ASCII dan angka, sebagai tambahan "
"pada ``@``, ``.``, ``+``, ``-``, and ``_``. Pengesah awalan untuk ``User."
"username`` pada Python 2."

msgid ""
"A field validator allowing Unicode characters, in addition to ``@``, ``.``, "
"``+``, ``-``, and ``_``. The default validator for ``User.username`` on "
"Python 3."
msgstr ""
"Pengesah bidang mengizinkan karakter Unicode, sebagai tambahan pada ``@``, "
"``.``, ``+``, ``-``, and ``_``. Pengesah awalan untuk ``User.username`` pada "
"Python 3.  "

msgid "Login and logout signals"
msgstr "Sinyal masuk dan keluar"

msgid ""
"The auth framework uses the following :doc:`signals </topics/signals>` that "
"can be used for notification when a user logs in or out."
msgstr ""
"Kerangka kerja autentifikasi menggunakan :doc:`signals </topics/signals>` "
"berikut yang dapat digunakan untuk pemberitahuan ketika pengguna masuk atau "
"keluar."

msgid "Sent when a user logs in successfully."
msgstr "Terkirim ketika pengguna berhasil masuk."

msgid "Arguments sent with this signal:"
msgstr "Argumen dikirim dengan dinyal ini:"

msgid "``sender``"
msgstr "``sender``"

msgid "The class of the user that just logged in."
msgstr "Kelas pengguna yang baru masuk."

msgid "``request``"
msgstr "``request``"

msgid "The current :class:`~django.http.HttpRequest` instance."
msgstr "Instance :class:`~django.http.HttpRequest` saat ini."

msgid "``user``"
msgstr "``user``"

msgid "The user instance that just logged in."
msgstr "Instance pengguna yang baru masuk."

msgid "Sent when the logout method is called."
msgstr "Dikirim ketika metode keluar dipanggil."

msgid ""
"As above: the class of the user that just logged out or ``None`` if the user "
"was not authenticated."
msgstr ""
"Seperti diatas: kelas dari pengguna yang baru keluar atau ``None`` jika "
"pengguna tidak terautentifikasi."

msgid ""
"The user instance that just logged out or ``None`` if the user was not "
"authenticated."
msgstr ""
"Antarmuka pengguna yang baru keluar atau ``None`` jika pengguna tidak "
"terautentifikasi."

msgid "Sent when the user failed to login successfully"
msgstr "Terkirim ketika pengguna gagal berhasil masuk"

msgid "The name of the module used for authentication."
msgstr "Nama modul digunakan untuk pengecekan keaslian."

msgid "``credentials``"
msgstr "``credentials``"

msgid ""
"A dictionary of keyword arguments containing the user credentials that were "
"passed to :func:`~django.contrib.auth.authenticate()` or your own custom "
"authentication backend. Credentials matching a set of 'sensitive' patterns, "
"(including password) will not be sent in the clear as part of the signal."
msgstr ""
"Sebuah kamus dari argumen kata kunci mengandung mandat pengguna yang "
"dilewatkan ke :func:`~django.contrib.auth.authenticate()` atau backend "
"autentifikasi penyesuaian anda. Mandat mencocokkan sekumpulan dari pola "
"'sensitive', (termasuk sandi) tidak akan dikirim dalam kejelasan sebagai "
"bagian dari sinyal."

msgid ""
"The :class:`~django.http.HttpRequest` object, if one was provided to :func:"
"`~django.contrib.auth.authenticate`."
msgstr ""
"Obyek :class:`~django.http.HttpRequest`, jika satu telah disediakan pada :"
"func:`~django.contrib.auth.authenticate`."

msgid "The ``request`` argument was added."
msgstr "Argumen ``request`` te;ah ditambahkan."

msgid "Authentication backends"
msgstr "Backend pembuktian keaslian"

msgid ""
"This section details the authentication backends that come with Django. For "
"information on how to use them and how to write your own authentication "
"backends, see the :ref:`Other authentication sources section <authentication-"
"backends>` of the :doc:`User authentication guide </topics/auth/index>`."
msgstr ""
"Bagian ini merinci backend autentifikasi yang datang dengan Django. Untuk "
"informasi pada bagaimana menggunakan mereka dan bagaimana menulis backend "
"autentifikasi anda sendiri, lihat  :ref:`Other authentication sources "
"section 1` of the :doc:`User authentication guide 2`. "

msgid "Available authentication backends"
msgstr "Tersedia backend autentifikasi"

msgid ""
"The following backends are available in :mod:`django.contrib.auth.backends`:"
msgstr "Backend berikut tersedia di :mod:`django.contrib.auth.backends`:"

msgid ""
"This is the default authentication backend used by Django.  It authenticates "
"using credentials consisting of a user identifier and password.  For "
"Django's default user model, the user identifier is the username, for custom "
"user models it is the field specified by USERNAME_FIELD (see :doc:"
"`Customizing Users and authentication </topics/auth/customizing>`)."
msgstr ""
"Ini adalah backend autentifikasi awalan digunakan oleh Django. Itu "
"mengautentifikasi menggunakan mandat terdiri dari sebuah penciri pengguna "
"dan sandi. Untuk model user Django, penciri pengguna adalah nama pengguna, "
"untuk model user penyesuaian itu adalah bidang ditentukan oleh "
"USERNAME_FIELD (lihat :doc:`Customizing Users and authentication 1`)."

msgid ""
"It also handles the default permissions model as defined for :class:`~django."
"contrib.auth.models.User` and :class:`~django.contrib.auth.models."
"PermissionsMixin`."
msgstr ""
"Itu juga menangangi model perizinan awalan seperti ditentukan untuk :class:"
"`~django.contrib.auth.models.User` dan :class:`~django.contrib.auth.models."
"PermissionsMixin`."

msgid ""
":meth:`has_perm`, :meth:`get_all_permissions`, :meth:`get_user_permissions`, "
"and :meth:`get_group_permissions` allow an object to be passed as a "
"parameter for object-specific permissions, but this backend does not "
"implement them other than returning an empty set of permissions if ``obj is "
"not None``."
msgstr ""
":meth:`has_perm`, :meth:`get_all_permissions`, :meth:`get_user_permissions`, "
"dan :meth:`get_group_permissions` mengizinkan sebuah obyek untuk dilewatkan "
"sebagai sebuah parameter untuk perizinan khusus-obyek, tetapi backend ini "
"tidak menerapkan mereka selain dari mengembalikan sebuah kumpulan kosong "
"dari perizinan jika ``obj is not None``."

msgid ""
"Tries to authenticate ``username`` with ``password`` by calling :meth:`User."
"check_password <django.contrib.auth.models.User.check_password>`. If no "
"``username`` is provided, it tries to fetch a username from ``kwargs`` using "
"the key :attr:`CustomUser.USERNAME_FIELD <django.contrib.auth.models."
"CustomUser.USERNAME_FIELD>`. Returns an authenticated user or ``None``."
msgstr ""
"Mencoba untuk mengautentifikasi ``username`` dengan ``password`` dengan "
"memanggil :meth:`User.check_password <django.contrib.auth.models.User."
"check_password>`. Jika tidak ada ``username`` disediakan, itu mencoba "
"mengambil sebuah nama pengguna dari ``kwargs`` menggunakan kunci :attr:"
"`CustomUser.USERNAME_FIELD <django.contrib.auth.models.CustomUser."
"USERNAME_FIELD>`. Mengembalikan sebuah pengguna terautentifikasi atau "
"``None``."

msgid ""
"``request`` is an :class:`~django.http.HttpRequest` and may be ``None`` if "
"it wasn't provided to :func:`~django.contrib.auth.authenticate` (which "
"passes it on to the backend)."
msgstr ""
"``request`` adalah sebuah :class:`~django.http.HttpRequest` dan mungkin "
"berupa ``None`` jika itu tidak disediakan pada :func:`~django.contrib.auth."
"authenticate` (yang melewatkan itu ke backend)."

msgid ""
"Returns the set of permission strings the ``user_obj`` has from their own "
"user permissions. Returns an empty set if :attr:`~django.contrib.auth.models."
"AbstractBaseUser.is_anonymous` or :attr:`~django.contrib.auth.models."
"CustomUser.is_active` is ``False``."
msgstr ""
"Mengembalikan kumpulan dari string perizinan ``user_obj`` miliki dari "
"perizinan pengguna mereka sendiri. Mengembalikan sebuah kumpulan kosong "
"jika :attr:`~django.contrib.auth.models.AbstractBaseUser.is_anonymous` atau :"
"attr:`~django.contrib.auth.models.CustomUser.is_active` adalah ``False``.  "

msgid ""
"Returns the set of permission strings the ``user_obj`` has from the "
"permissions of the groups they belong. Returns an empty set if :attr:"
"`~django.contrib.auth.models.AbstractBaseUser.is_anonymous` or :attr:"
"`~django.contrib.auth.models.CustomUser.is_active`  is ``False``."
msgstr ""
"Mengembalikan sekumpulan perizinan string ``user_obj`` miliki dari perizinan "
"dari kelompok mereka miliki. Mengembalikan sebuah kumpulan kosong jika :attr:"
"`~django.contrib.auth.models.AbstractBaseUser.is_anonymous` atau :attr:"
"`~django.contrib.auth.models.CustomUser.is_active` adalah ``False``."

msgid ""
"Returns the set of permission strings the ``user_obj`` has, including both "
"user permissions and group permissions. Returns an empty set if :attr:"
"`~django.contrib.auth.models.AbstractBaseUser.is_anonymous` or :attr:"
"`~django.contrib.auth.models.CustomUser.is_active` is ``False``."
msgstr ""
"Mengembalikan kumpulan dari string perizinan ``user_obj`` miliki, termasuk "
"kedua perizinan pengguna dan perizinan kelompok. Mengembalikan sebuah "
"kumpulan kosong jika :attr:`~django.contrib.auth.models.AbstractBaseUser."
"is_anonymous` atau :attr:`~django.contrib.auth.models.CustomUser.is_active` "
"adalah ``False``.  "

msgid ""
"Uses :meth:`get_all_permissions` to check if ``user_obj`` has the permission "
"string ``perm``. Returns ``False`` if the user is not :attr:`~django.contrib."
"auth.models.CustomUser.is_active`."
msgstr ""
"Gunakan :meth:`get_all_permissions` untuk memeriksa jika ``user_obj`` "
"mempunyai string perizinan ``perm``. Mengembalikan ``False`` jika pengguna "
"tidak :attr:`~django.contrib.auth.models.CustomUser.is_active`."

msgid ""
"Returns whether the ``user_obj`` has any permissions on the app "
"``app_label``."
msgstr ""
"Mengembalikan apakah ``user_obj`` mempunyai perizinan apapun pada "
"``app_label`` aplikasi."

msgid ""
"Returns whether the user is allowed to authenticate. To match the behavior "
"of :class:`~django.contrib.auth.forms.AuthenticationForm` which :meth:"
"`prohibits inactive users from logging in <django.contrib.auth.forms."
"AuthenticationForm.confirm_login_allowed>`, this method returns ``False`` "
"for users with :attr:`is_active=False <django.contrib.auth.models.User."
"is_active>`. Custom user models that don't have an :attr:`~django.contrib."
"auth.models.CustomUser.is_active` field are allowed."
msgstr ""
"Mengembalikan apakah pengguna diizinkan mengautentifikasi. Untuk mencocokkan "
"perilaku dari :class:`~django.contrib.auth.forms.AuthenticationForm` yang :"
"meth:`prohibits inactive users from logging in <django.contrib.auth.forms."
"AuthenticationForm.confirm_login_allowed>`, metode ini mengembalikan "
"``False`` untuk pengguna dengan :attr:`is_active=False <django.contrib.auth."
"models.User.is_active>`. Penyesuaian model user yang tidak mempunyai sebuah "
"bidang :attr:`~django.contrib.auth.models.CustomUser.is_active` diizinkan."

msgid ""
"Same as :class:`ModelBackend` except that it doesn't reject inactive users "
"because :meth:`~ModelBackend.user_can_authenticate` always returns ``True``."
msgstr ""
"Sama seperti :class:`ModelBackend` kecuali bahwa itu menolak pengguna tidak "
"aktif karena :meth:`~ModelBackend.user_can_authenticate` selalu "
"mengembalikan ``True``."

msgid ""
"When using this backend, you'll likely want to customize the :class:`~django."
"contrib.auth.forms.AuthenticationForm` used by the :class:`~django.contrib."
"auth.views.LoginView` by overriding the :meth:`~django.contrib.auth.forms."
"AuthenticationForm.confirm_login_allowed` method as it rejects inactive "
"users."
msgstr ""
"Ketika menggunakan backend, anda akan ingin menyesuaikan :class:`~django."
"contrib.auth.forms.AuthenticationForm` digunakan oleh tampilan :func:"
"`~django.contrib.auth.views.LoginView` dengan menimpa metode :meth:`~django."
"contrib.auth.forms.AuthenticationForm.confirm_login_allowed` ketika itu "
"menolak pengguna tidak aktif."

msgid ""
"Use this backend to take advantage of external-to-Django-handled "
"authentication.  It authenticates using usernames passed in :attr:`request."
"META['REMOTE_USER'] <django.http.HttpRequest.META>`.  See the :doc:"
"`Authenticating against REMOTE_USER </howto/auth-remote-user>` documentation."
msgstr ""
"Gunakan backend ini untuk mengambil keuntungan dari autentifikasi external-"
"to-Django-handled. Itu mengautentifikasi menggunakan nama pengguna "
"dilewatkan dalam :attr:`request.META['REMOTE_USER'] <django.http.HttpRequest."
"META>`. Lihat dokumentasi  :doc:`Authenticating against REMOTE_USER 1`."

msgid ""
"If you need more control, you can create your own authentication backend "
"that inherits from this class and override these attributes or methods:"
msgstr ""
"Jika anda butuh lebih kendali, anda dapat membuat backend autentifikasi "
"sendiri yang mewarisi dari kelas ini dan menimpa atribut ini atau metode:"

msgid ""
"``True`` or ``False``. Determines whether or not a user object is created if "
"not already in the database  Defaults to ``True``."
msgstr ""
"``True`` atau ``False``. Menentukan apakah atau tidak obyek pengguna dibuat "
"jika belum di basisdata Awalan menjadi ``True``."

msgid ""
"The username passed as ``remote_user`` is considered trusted. This method "
"simply returns the user object with the given username, creating a new user "
"object if :attr:`~RemoteUserBackend.create_unknown_user` is ``True``."
msgstr ""
"Nama pengguna melewatkan sebuah ``remote_user`` dianggap dipercaya. Metode "
"ini cukup mengembalikan obyek user dengan nama pengguna yang diberikan, "
"membuat obyek user baru jika :attr:`~RemoteUserBackend.create_unknown_user` "
"adalah ``True``."

msgid ""
"Returns ``None`` if :attr:`~RemoteUserBackend.create_unknown_user` is "
"``False`` and a ``User`` object with the given username is not found in the "
"database."
msgstr ""
"Mengembalikan ``None`` jika :attr:`~RemoteUserBackend.create_unknown_user` "
"adalah ``False`` dan obyek ``User`` dengan nama pengguna yang diberikan "
"tidak ditemukan dalam basisdata."

msgid ""
"Performs any cleaning on the ``username`` (e.g. stripping LDAP DN "
"information) prior to using it to get or create a user object. Returns the "
"cleaned username."
msgstr ""
"Melakukan pembersihan apapun pada ``username`` (sebagai contoh melucuti "
"informasi LDAP DN) sebelum menggunakan itu untuk mendapatkan atau membuat "
"sebuah obyek user. Mengembalikan nama pengguna dibersihkan."

msgid ""
"Configures a newly created user.  This method is called immediately after a "
"new user is created, and can be used to perform custom setup actions, such "
"as setting the user's groups based on attributes in an LDAP directory. "
"Returns the user object."
msgstr ""
"Konfigurasi pengguna dibuat terbaru. Metode ini dipanggil segera setelah "
"seorang pengguna baru dibuat, dan dapat digunakan untuk melakukan tindakan "
"penyetelah penyesuaian, seperti mengatur kelompok pengguna berdasarkan pada "
"atribut-atribut dalam sebuah direktori LDAP. Mengembalikan obyek pengguna."

msgid ""
"Returns whether the user is allowed to authenticate. This method returns "
"``False`` for users with :attr:`is_active=False <django.contrib.auth.models."
"User.is_active>`. Custom user models that don't have an :attr:`~django."
"contrib.auth.models.CustomUser.is_active` field are allowed."
msgstr ""
"Mengembalikan apakah pengguna diizinkan untuk autentifikasi. Metode ini "
"mengembalikan ``False`` untuk pengguna dengan :attr:`is_active=False <django."
"contrib.auth.models.User.is_active>`. Penyesuaian model user yang tidak "
"mempunyai sebuah bidang :attr:`~django.contrib.auth.models.CustomUser."
"is_active` adalah diizinkan."

msgid ""
"Same as :class:`RemoteUserBackend` except that it doesn't reject inactive "
"users because :attr:`~RemoteUserBackend.user_can_authenticate` always "
"returns ``True``."
msgstr ""
"Sama seperti :class:`RemoteUserBackend` kecuali bahwa itu menolak pengguna "
"tidak aktif karena :meth:`~RemoteUserBackend.user_can_authenticate` selalu "
"mengembalikan ``True``."

msgid "Utility functions"
msgstr "Fungsi-fungsi kegunaan"

msgid ""
"Returns the user model instance associated with the given ``request``’s "
"session."
msgstr ""
"Mengembalikan instance model user terhubung dengan sesi ``request`` diberikan"

msgid ""
"It checks if the authentication backend stored in the session is present in :"
"setting:`AUTHENTICATION_BACKENDS`. If so, it uses the backend's "
"``get_user()`` method to retrieve the user model instance and then verifies "
"the session by calling the user model's :meth:`~django.contrib.auth.models."
"AbstractBaseUser.get_session_auth_hash` method."
msgstr ""
"Itu memeriksa jika backend autentifikasi disimpan dalam sesi adalah hadir "
"dalam :setting:`AUTHENTICATION_BACKENDS`. Jika demikian, itu menggunakan "
"metode ``get_user()`` backend untuk mengambil instance model user dan "
"kemudian membuktikan sesi dengan memanggil metode :meth:`~django.contrib."
"auth.models.AbstractBaseUser.get_session_auth_hash` model user."

msgid ""
"Returns an instance of :class:`~django.contrib.auth.models.AnonymousUser` if "
"the authentication backend stored in the session is no longer in :setting:"
"`AUTHENTICATION_BACKENDS`, if a user isn't returned by the backend's "
"``get_user()`` method, or if the session auth hash doesn't validate."
msgstr ""
"Mengembalikan sebuah instance dari :class:`~django.contrib.auth.models."
"AnonymousUser` jika backend autentifikasi disimpan dalam sesi tidak lagi "
"dalam :setting:`AUTHENTICATION_BACKENDS`, jika seorang pengguna tidak "
"dikembalikan oleh metode ``get_user()`` backend, atau jika campuran "
"autentifikasi sesi tidak disahkan."

msgid "The contenttypes framework"
msgstr "Kerangka contenttypes"

msgid ""
"Django includes a :mod:`~django.contrib.contenttypes` application that can "
"track all of the models installed in your Django-powered project, providing "
"a high-level, generic interface for working with your models."
msgstr ""
"Django menyertakan sebuah aplikasi :mod:`~django.contrib.contenttypes` yang "
"dapat melacak semua model-model terpasang dalam proyek Django-powered anda, "
"menyediakan tingkat-tinggi, antarmuka umum untuk bekerja dengan model-model "
"anda."

msgid ""
"At the heart of the contenttypes application is the :class:`~django.contrib."
"contenttypes.models.ContentType` model, which lives at ``django.contrib."
"contenttypes.models.ContentType``. Instances of :class:`~django.contrib."
"contenttypes.models.ContentType` represent and store information about the "
"models installed in your project, and new instances of :class:`~django."
"contrib.contenttypes.models.ContentType` are automatically created whenever "
"new models are installed."
msgstr ""
"Di jantung dari aplikasi contenttype adalah model :class:`~django.contrib."
"contenttypes.models.ContentType`, yang tinggal di `django.contrib."
"contenttypes.models.ContentType``. Instance dari :class:`~django.contrib."
"contenttypes.models.ContentType` mewakili dan menyimpan informasi tentang "
"model-model terpasang dalam proyek anda, dan instance baru dari :class:"
"`~django.contrib.contenttypes.models.ContentType` otomatis dibuat ketika "
"model-model baru terpasang."

msgid ""
"Instances of :class:`~django.contrib.contenttypes.models.ContentType` have "
"methods for returning the model classes they represent and for querying "
"objects from those models. :class:`~django.contrib.contenttypes.models."
"ContentType` also has a :ref:`custom manager <custom-managers>` that adds "
"methods for working with :class:`~django.contrib.contenttypes.models."
"ContentType` and for obtaining instances of :class:`~django.contrib."
"contenttypes.models.ContentType` for a particular model."
msgstr ""
"Instance dari :class:`~django.contrib.contenttypes.models."
"ContentType` mempunai metode-metode untuk mengembalikan kelas-kelas model "
"mereka wakilkan dan untuk meminta obyek dari model-model itu. :class:"
"`~django.contrib.contenttypes.models.ContentType` juga mempunyai sebuah :ref:"
"`custom manager 1` yang menambahkan metode untuk bekerja dengan :class:"
"`~django.contrib.contenttypes.models.ContentType` dan untuk mendapatkan "
"instance dari :class:`~django.contrib.contenttypes.models.ContentType` untuk "
"model tertentu."

msgid ""
"Relations between your models and :class:`~django.contrib.contenttypes."
"models.ContentType` can also be used to enable \"generic\" relationships "
"between an instance of one of your models and instances of any model you "
"have installed."
msgstr ""
"Hubungan diantara model-model anda dan :class:`~django.contrib.contenttypes."
"models.ContentType` dapat juga digunakan untuk mengadakan hubungan \"umum\" "
"diantara sebuah instance dari satu dari model-model anda dan instance dari "
"model apapun anda telah pasang."

msgid "Installing the contenttypes framework"
msgstr "Memasang kerangka contenttypes "

msgid ""
"The contenttypes framework is included in the default :setting:"
"`INSTALLED_APPS` list created by ``django-admin startproject``, but if "
"you've removed it or if you manually set up your :setting:`INSTALLED_APPS` "
"list, you can enable it by adding ``'django.contrib.contenttypes'`` to your :"
"setting:`INSTALLED_APPS` setting."
msgstr ""
"Kerangka kerja contenttype disertakan dalam daftar :setting:`INSTALLED_APPS` "
"awalan dibuat oleh ``django-admin startproject``, tetapi jika anda telah "
"memindahkan itu atau jika anda secara manual menyetel daftar :setting:"
"`INSTALLED_APPS` anda, anda dapat mengadakan itu dengan menambahkan "
"``'django.contrib.contenttypes'`` ke pengaturan :setting:`INSTALLED_APPS` "
"anda. "

msgid ""
"It's generally a good idea to have the contenttypes framework installed; "
"several of Django's other bundled applications require it:"
msgstr ""
"Umumnya ide bagus memiliki kerangka contenttype terpasang; beberapa aplikasi "
"gabungan lain Django membutuhkan itu:"

msgid ""
"The admin application uses it to log the history of each object added or "
"changed through the admin interface."
msgstr ""
"Apliaksi admin menggunakan itu utuk mencatat riwayat dari setiap obyek "
"ditambahkan atau dirubah melalui antarmuka admin."

msgid ""
"Django's :mod:`authentication framework <django.contrib.auth>` uses it to "
"tie user permissions to specific models."
msgstr ""
":mod:`authentication framework <django.contrib.auth>` Django menggunakan itu "
"untuk mengikat perizinan pengguna pada model-model tertentu."

msgid "The ``ContentType`` model"
msgstr "Model ``ContentType``"

msgid ""
"Each instance of :class:`~django.contrib.contenttypes.models.ContentType` "
"has two fields which, taken together, uniquely describe an installed model:"
msgstr ""
"Setiap instance dari :class:`~django.contrib.contenttypes.models."
"ContentType` mempunyai dua bidang yang, diambil bersama-sama, secara unik "
"menggambarkan sebuah model terpasang:"

msgid ""
"The name of the application the model is part of. This is taken from the :"
"attr:`app_label` attribute of the model, and includes only the *last* part "
"of the application's Python import path; ``django.contrib.contenttypes``, "
"for example, becomes an :attr:`app_label` of ``contenttypes``."
msgstr ""
"Nama dari aplikasi model adalah bagian darinya. Ini diambil dari atribut :"
"attr:`app_label` dari model, dan menyertakan hanya bagian *terakhir* dari "
"``django.contrib.contenttypes`` jalur impor Python aplikasi, sebagai contoh, "
"menjadi :attr:`app_label` dari ``contenttypes``."

msgid "The name of the model class."
msgstr "Nama dari kelas model."

msgid "Additionally, the following property is available:"
msgstr "Sebagai tambahan, sifat berikut tersedia:"

msgid ""
"The human-readable name of the content type. This is taken from the :attr:"
"`verbose_name <django.db.models.Field.verbose_name>` attribute of the model."
msgstr ""
"Nama dapat-dibaca-manusia dari jenis isi. Ini adalah diambil dari atribut :"
"attr:`verbose_name <django.db.models.Field.verbose_name>` dari model."

msgid ""
"Let's look at an example to see how this works. If you already have the :mod:"
"`~django.contrib.contenttypes` application installed, and then add :mod:`the "
"sites application <django.contrib.sites>` to your :setting:`INSTALLED_APPS` "
"setting and run ``manage.py migrate`` to install it, the model :class:"
"`django.contrib.sites.models.Site` will be installed into your database. "
"Along with it a new instance of :class:`~django.contrib.contenttypes.models."
"ContentType` will be created with the following values:"
msgstr ""
"Mari kita lihat sebuah contoh untuk melihat bagaimana ini bekerja. Jika anda "
"seudah memiliki aplikasi :mod:`~django.contrib.contenttypes` terpasang, dan "
"kemudian tambah :mod:`the sites application <django.contrib.sites>` ke "
"pengaturan :setting:`INSTALLED_APPS` anda dan menjalankan ``manage.py "
"migrate`` untuk memasangnya, model :class:`django.contrib.sites.models.Site` "
"akan dipasang kedalam basisdata anda. Bersama dengan itu sebuah instance "
"baru dari :class:`~django.contrib.contenttypes.models.ContentType` akan "
"dibuat dengan nilai-nilai berikut:"

msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.app_label` will be "
"set to ``'sites'`` (the last part of the Python path ``django.contrib."
"sites``)."
msgstr ""
":attr:`~django.contrib.contenttypes.models.ContentType.app_label` akan "
"disetel menjadi ``'sites'`` (bagian terakhir dari jalur Python ``django."
"contrib.sites``)."

msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.model` will be set to "
"``'site'``."
msgstr ""
":attr:`~django.contrib.contenttypes.models.ContentType.model` akan disetel "
"menjadi ``'site'``."

msgid "Methods on ``ContentType`` instances"
msgstr "Metode pada instance ``ContentType``"

msgid ""
"Each :class:`~django.contrib.contenttypes.models.ContentType` instance has "
"methods that allow you to get from a :class:`~django.contrib.contenttypes."
"models.ContentType` instance to the model it represents, or to retrieve "
"objects from that model:"
msgstr ""
"Setiap instance :class:`~django.contrib.contenttypes.models.ContentType` "
"mempunyai metode-metode yang mengizinkan anda mendapatkan dari sebuah "
"instance :class:`~django.contrib.contenttypes.models.ContentType` pada model "
"yang itu wakili, atau untuk mengambil obyek-obyek dari model itu:"

msgid ""
"Takes a set of valid :ref:`lookup arguments <field-lookups-intro>` for the "
"model the :class:`~django.contrib.contenttypes.models.ContentType` "
"represents, and does :meth:`a get() lookup <django.db.models.query.QuerySet."
"get>` on that model, returning the corresponding object."
msgstr ""
"Mengambil sekumpulan dari perwakilan :ref:`lookup arguments 1` for the model "
"the :class:`~django.contrib.contenttypes.models.ContentType` sah, dan "
"melakukan :meth:`a get() lookup <django.db.models.query.QuerySet.get>` pada "
"model itu, mengembalikan obyek yang sesuai."

msgid ""
"Returns the model class represented by this :class:`~django.contrib."
"contenttypes.models.ContentType` instance."
msgstr ""
"Mengembalikan kelas model diwakilkan oleh instance :class:`~django.contrib."
"contenttypes.models.ContentType` ini."

msgid ""
"For example, we could look up the :class:`~django.contrib.contenttypes."
"models.ContentType` for the :class:`~django.contrib.auth.models.User` model::"
msgstr ""
"Sebagai contoh, kami dapat mencari :class:`~django.contrib.contenttypes."
"models.ContentType` untuk model :class:`~django.contrib.auth.models.User`::"

msgid ""
"And then use it to query for a particular :class:`~django.contrib.auth."
"models.User`, or to get access to the ``User`` model class::"
msgstr ""
"Dan kemudian gunakan itu pada permintaan untuk :class:`~django.contrib.auth."
"models.User` tertentu, atau untuk mendapatkan akses ke kelas model "
"``User``::  "

msgid ""
"Together, :meth:`~django.contrib.contenttypes.models.ContentType."
"get_object_for_this_type` and :meth:`~django.contrib.contenttypes.models."
"ContentType.model_class` enable two extremely important use cases:"
msgstr ""
"Bersama-sama, meth:`~django.contrib.contenttypes.models.ContentType."
"get_object_for_this_type` dan :meth:`~django.contrib.contenttypes.models."
"ContentType.model_class` mengadakan dua sangat penting penggunaan kasus:"

msgid ""
"Using these methods, you can write high-level generic code that performs "
"queries on any installed model -- instead of importing and using a single "
"specific model class, you can pass an ``app_label`` and ``model`` into a :"
"class:`~django.contrib.contenttypes.models.ContentType` lookup at runtime, "
"and then work with the model class or retrieve objects from it."
msgstr ""
"Menggunakan metode ini, anda dapat menulis kode umum tingkat-tinggi yang "
"melakukan permintaan pada mode terpasang apapun -- daripada mengimpor dan "
"menggunakan kelas model khusus, anda dapat melewatkan sebuah ``app_label`` "
"dan ``model`` kedalam sebuah pencarian :class:`~django.contrib.contenttypes."
"models.ContentType` pada waktu berjalan dan kemudian bekerja dengan kelas "
"model atau mengambil obyek dari itu."

msgid ""
"You can relate another model to :class:`~django.contrib.contenttypes.models."
"ContentType` as a way of tying instances of it to particular model classes, "
"and use these methods to get access to those model classes."
msgstr ""
"Anda dapat menghubungkan model lain ke :class:`~django.contrib.contenttypes."
"models.ContentType` sebagai sebuah cara dari mengikat instance dari itu ke "
"kelas-kelas model tertentu, dan gunakan metode ini untuk mendapatkan akses "
"ke kelas-kelas model tersebut."

msgid ""
"Several of Django's bundled applications make use of the latter technique. "
"For example, :class:`the permissions system <django.contrib.auth.models."
"Permission>` in Django's authentication framework uses a :class:`~django."
"contrib.auth.models.Permission` model with a foreign key to :class:`~django."
"contrib.contenttypes.models.ContentType`; this lets :class:`~django.contrib."
"auth.models.Permission` represent concepts like \"can add blog entry\" or "
"\"can delete news story\"."
msgstr ""
"Beberapa dari aplikasi gabungan Django membuat dari teknik terakhir. Sebagai "
"contoh, :class:`the permissions system <django.contrib.auth.models."
"Permission>` dalam kerangka kerja autentifikasi Django menggunakan model :"
"class:`~django.contrib.auth.models.Permission` dengan sebuah foreign key "
"pada :class:`~django.contrib.contenttypes.models.ContentType`; ini membuat :"
"class:`~django.contrib.auth.models.Permission` mewakili konsep-konsep "
"seperti \"dapat menambah masukan blog\" atau \"dapat menghapus cerita berita"
"\". "

msgid "The ``ContentTypeManager``"
msgstr "``ContentTypeManager``"

msgid ""
":class:`~django.contrib.contenttypes.models.ContentType` also has a custom "
"manager, :class:`~django.contrib.contenttypes.models.ContentTypeManager`, "
"which adds the following methods:"
msgstr ""
":class:`~django.contrib.contenttypes.models.ContentType` juga mempunyai "
"pengelola penyesuaian, :class:`~django.contrib.contenttypes.models."
"ContentTypeManager`, yang menambahkan metode berikut:"

msgid ""
"Clears an internal cache used by :class:`~django.contrib.contenttypes.models."
"ContentType` to keep track of models for which it has created :class:"
"`~django.contrib.contenttypes.models.ContentType` instances. You probably "
"won't ever need to call this method yourself; Django will call it "
"automatically when it's needed."
msgstr ""
"Bersihkan cache internal digunakan oleh :class:`~django.contrib.contenttypes."
"models.ContentType` untuk menjaga lintasan dari model-model untuk yang itu "
"telah membuat instance :class:`~django.contrib.contenttypes.models."
"ContentType`. Anda mungkin tidak pernah butuh memanggil metode ini anda "
"sendiri; Django akan memanggil itu secara otomatis ketika itu dibutuhkan."

msgid ""
"Lookup a :class:`~django.contrib.contenttypes.models.ContentType` by ID. "
"Since this method uses the same shared cache as :meth:`~django.contrib."
"contenttypes.models.ContentTypeManager.get_for_model`, it's preferred to use "
"this method over the usual ``ContentType.objects.get(pk=id)``"
msgstr ""
"Pencarian :class:`~django.contrib.contenttypes.models.ContentType` "
"berdasarkan ID. Sejak metode ini menggunakan cache dibagi yang sama seperti :"
"meth:`~django.contrib.contenttypes.models.ContentTypeManager."
"get_for_model`, itu lebih disukai untuk menggunakan metode ini terhadap "
"``ContentType.objects.get(pk=id)`` biasa"

msgid ""
"Takes either a model class or an instance of a model, and returns the :class:"
"`~django.contrib.contenttypes.models.ContentType` instance representing that "
"model. ``for_concrete_model=False`` allows fetching the :class:`~django."
"contrib.contenttypes.models.ContentType` of a proxy model."
msgstr ""
"Ambil antara sebuah kelas model atau sebuah instance dari model, dan "
"kembalikan instance :class:`~django.contrib.contenttypes.models.ContentType` "
"mewakili model itu. ``for_concrete_model=False`` mengizinkan mengambil :"
"class:`~django.contrib.contenttypes.models.ContentType` dari model proxy."

msgid ""
"Takes a variadic number of model classes, and returns a dictionary mapping "
"the model classes to the :class:`~django.contrib.contenttypes.models."
"ContentType` instances representing them. ``for_concrete_models=False`` "
"allows fetching the :class:`~django.contrib.contenttypes.models.ContentType` "
"of proxy models."
msgstr ""
"Mengambil sejumlah variabel apapun dari kelas-kelas model, dan mengembalikan "
"sebuah kamus memetakan kelas-kelas model pada instance :class:`~django."
"contrib.contenttypes.models.ContentType` mewakili mereka. "
"``for_concrete_models=False`` mengizinkan mengambil :class:`~django.contrib."
"contenttypes.models.ContentType` dari model proxy."

msgid ""
"Returns the :class:`~django.contrib.contenttypes.models.ContentType` "
"instance uniquely identified by the given application label and model name. "
"The primary purpose of this method is to allow :class:`~django.contrib."
"contenttypes.models.ContentType` objects to be referenced via a :ref:"
"`natural key<topics-serialization-natural-keys>` during deserialization."
msgstr ""
"Mengembalikan instance :class:`~django.contrib.contenttypes.models."
"ContentType` secara unik dicirikan dengan label aplikasi yang diberikan dan "
"nama model. Tujuan utama dari metode ini adalah mengizinkan obyek :class:"
"`~django.contrib.contenttypes.models.ContentType` untuk diacukan melalui :"
"ref:`natural key1` selama deserialisasi."

msgid ""
"The :meth:`~ContentTypeManager.get_for_model()` method is especially useful "
"when you know you need to work with a :class:`ContentType <django.contrib."
"contenttypes.models.ContentType>` but don't want to go to the trouble of "
"obtaining the model's metadata to perform a manual lookup::"
msgstr ""
"Metode :meth:`~ContentTypeManager.get_for_model()` khususnya sangat berguna "
"ketika anda mengetahui anda butuh bekerja dengan :class:`ContentType <django."
"contrib.contenttypes.models.ContentType>` tetapi tidak ingin menjadi masalah "
"dari mendapatkan metadata model untuk melakukan pencarian manual::"

msgid "Generic relations"
msgstr "Hubungan umum"

msgid ""
"Adding a foreign key from one of your own models to :class:`~django.contrib."
"contenttypes.models.ContentType` allows your model to effectively tie itself "
"to another model class, as in the example of the :class:`~django.contrib."
"auth.models.Permission` model above. But it's possible to go one step "
"further and use :class:`~django.contrib.contenttypes.models.ContentType` to "
"enable truly generic (sometimes called \"polymorphic\") relationships "
"between models."
msgstr ""
"Menambahkan sebuah foreign key dari satu dari model anda sendiri pada :class:"
"`~django.contrib.contenttypes.models.ContentType` mengizinkan model anda "
"secara efektif mengikat diri sendiri ke kelas model lain, seperti dalam "
"contoh dari model :class:`~django.contrib.auth.models.Permission` diatas. "
"Tetapi itu memungkinkan pergi satu langkah lebih jauh dan menggunakan :class:"
"`~django.contrib.contenttypes.models.ContentType` untuk mengadakan hubungan "
"umum sebenarnya (terkadang disebut \"polimorfik\") diantara model."

msgid "A simple example is a tagging system, which might look like this::"
msgstr ""
"Contoh sederhana adalah sistem etiket, yang mungkin kelihatan seperti ini::"

msgid ""
"A normal :class:`~django.db.models.ForeignKey` can only \"point to\" one "
"other model, which means that if the ``TaggedItem`` model used a :class:"
"`~django.db.models.ForeignKey` it would have to choose one and only one "
"model to store tags for. The contenttypes application provides a special "
"field type (``GenericForeignKey``) which works around this and allows the "
"relationship to be with any model:"
msgstr ""
"Sebuah :class:`~django.db.models.ForeignKey` biasa dapat hanya \"menunjuk\" "
"satu model lain, yang berarti bahwa jika model ``TaggedItem`` menggunakan "
"sebuah :class:`~django.db.models.ForeignKey` itu akan harus memilih satu dan "
"hanya satu model untuk menyimpan etiket-etiket. Aplikasi contenttype "
"menyediakan jenis bidang khusus (``GenericForeignKey``) yang memecahkan ini "
"dan mengizinkan hubungan dengan model apapun."

msgid ""
"There are three parts to setting up a :class:`~django.contrib.contenttypes."
"fields.GenericForeignKey`:"
msgstr ""
"Terdapat tiga bagian untuk mengatur :class:`~django.contrib.contenttypes."
"fields.GenericForeignKey`:"

msgid ""
"Give your model a :class:`~django.db.models.ForeignKey` to :class:`~django."
"contrib.contenttypes.models.ContentType`. The usual name for this field is "
"\"content_type\"."
msgstr ""
"Berikan model anda sebuah :class:`~django.db.models.ForeignKey` pada :class:"
"`~django.contrib.contenttypes.models.ContentType`. Nama biasa untuk bidang "
"ini adalah \"content_type\"."

msgid ""
"Give your model a field that can store primary key values from the models "
"you'll be relating to. For most models, this means a :class:`~django.db."
"models.PositiveIntegerField`. The usual name for this field is \"object_id\"."
msgstr ""
"Berikan model anda sebuah bidang yang dapat menyimpan nilai-nilai primary "
"key dari model-model anda akan kaitkan. Untuk kebanyakan model, ini berarti :"
"class:`~django.db.models.PositiveIntegerField`. Nama biasa untuk bidang ini "
"adalah \"object_id\"."

msgid ""
"Give your model a :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey`, and pass it the names of the two fields described above. "
"If these fields are named \"content_type\" and \"object_id\", you can omit "
"this -- those are the default field names :class:`~django.contrib."
"contenttypes.fields.GenericForeignKey` will look for."
msgstr ""
"Berikan model anda :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey`, dan lewatkan itu nama-nama dari dua bidang digambarkan "
"diatas. Jika bidang-bidang ini bernama \"content_type\" dan \"object_id\", "
"anda dapat mengabaikan ini --yaitu nama-nama bidang awalan :class:`~django."
"contrib.contenttypes.fields.GenericForeignKey` akan mencari."

msgid ""
"If ``False``, the field will be able to reference proxy models. Default is "
"``True``. This mirrors the ``for_concrete_model`` argument to :meth:`~django."
"contrib.contenttypes.models.ContentTypeManager.get_for_model`."
msgstr ""
"Jika ``False``, bidang akan dapat mengacukan model-model proxy. Awalan "
"adalah ``True``. Ini mencerminkan argumen ``for_concrete_model`` pada :meth:"
"`~django.contrib.contenttypes.models.ContentTypeManager.get_for_model`."

msgid "Primary key type compatibility"
msgstr "Kesesuaian jenis primary key"

msgid ""
"The \"object_id\" field doesn't have to be the same type as the primary key "
"fields on the related models, but their primary key values must be coercible "
"to the same type as the \"object_id\" field by its :meth:`~django.db.models."
"Field.get_db_prep_value` method."
msgstr ""
"Bidang \"object_id\" tidak harus mempunyai jenis sama sebagai bidang primary "
"key pada model-model terkait, tetapi nilai-nilai primary key harus dapat "
"dipaksa ke jenis sama sebagai bidang \"object_id\" dengan metode :meth:"
"`~django.db.models.Field.get_db_prep_value` nya."

msgid ""
"For example, if you want to allow generic relations to models with either :"
"class:`~django.db.models.IntegerField` or :class:`~django.db.models."
"CharField` primary key fields, you can use :class:`~django.db.models."
"CharField` for the \"object_id\" field on your model since integers can be "
"coerced to strings by :meth:`~django.db.models.Field.get_db_prep_value`."
msgstr ""
"Sebagai contoh, jika anda ingin mengizinkan hubungan umum pada model-model "
"dengan salah satu primary key :class:`~django.db.models.IntegerField` atau :"
"class:`~django.db.models.CharField`, anda dapat menggunakan :class:`~django."
"db.models.CharField` untuk bidang \"object_id\" pada model anda karena "
"integer dapat dipaksa menjadi string oleh :meth:`~django.db.models.Field."
"get_db_prep_value`."

msgid ""
"For maximum flexibility you can use a :class:`~django.db.models.TextField` "
"which doesn't have a maximum length defined, however this may incur "
"significant performance penalties depending on your database backend."
msgstr ""
"Untuk keluwesan maksimal anda dapat menggunakan :class:`~django.db.models."
"TextField` yang tidak mempunyai panjang maksimal ditentukan, bagaimanapun "
"ini mungkin mendatangkan denda penampilan yang berarti bergantung pada "
"backend basisdata anda."

msgid ""
"There is no one-size-fits-all solution for which field type is best. You "
"should evaluate the models you expect to be pointing to and determine which "
"solution will be most effective for your use case."
msgstr ""
"Tidak ada pemecahan satu-ukuran-cocok-semua untuk jenis bidang yang terbaik. "
"Anda harus menilai model-model anda harapkan untuk ditunjuk dan menentukan "
"pemecahan mana akan menjadi paling efektif untuk penggunaan kasus anda."

msgid "Serializing references to ``ContentType`` objects"
msgstr "Menserialisasikan acuan pada obyek ``ContentType``"

msgid ""
"If you're serializing data (for example, when generating :class:`~django."
"test.TransactionTestCase.fixtures`) from a model that implements generic "
"relations, you should probably be using a natural key to uniquely identify "
"related :class:`~django.contrib.contenttypes.models.ContentType` objects. "
"See :ref:`natural keys<topics-serialization-natural-keys>` and :option:"
"`dumpdata --natural-foreign` for more information."
msgstr ""
"Jika anda sedang menserialkan data(sebagai contoh, ketika membangkitkan :"
"class:`~django.test.TransactionTestCase.fixtures`) dari sebuah model yang "
"menerapkan hubungan umum, anda harus mungkin menggunakan kunci alami pada "
"secara unik mencirikan obyek :class:`~django.contrib.contenttypes.models."
"ContentType` terkait. Lihat :ref:`natural keys1` and :option:`dumpdata --"
"natural-foreign` untuk informasi lebih."

msgid ""
"This will enable an API similar to the one used for a normal :class:`~django."
"db.models.ForeignKey`; each ``TaggedItem`` will have a ``content_object`` "
"field that returns the object it's related to, and you can also assign to "
"that field or use it when creating a ``TaggedItem``::"
msgstr ""
"Ini akan mengadakan sebuah API mitip pada satu digunakan untuk :class:"
"`~django.db.models.ForeignKey`; biasa setiap ``TaggedItem`` akan mempunyai "
"sebuah bidang ``content_object`` yang mengembalikan obyek yang terkait "
"dengan, dan anda dapat juga menugaskan ke bidang itu atau menggunakan itu "
"ketika membuat sebuah ``TaggedItem``::"

msgid ""
"Due to the way :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey` is implemented, you cannot use such fields directly with "
"filters (``filter()`` and ``exclude()``, for example) via the database API. "
"Because a :class:`~django.contrib.contenttypes.fields.GenericForeignKey` "
"isn't a normal field object, these examples will *not* work::"
msgstr ""
"Dikarenakan cara :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey` diterapkan, anda tidak dapat menggunakan bidang-bidang "
"itu langsung dengan penyaring  (``filter()`` dan ``exclude()``, sebagai "
"contoh) melalui API basisdata. Karena :class:`~django.contrib.contenttypes."
"fields.GenericForeignKey` bukan obyek bisang biasa, contoh-contoh ini akan "
"*tidak* bekerja::"

msgid ""
"Likewise, :class:`~django.contrib.contenttypes.fields.GenericForeignKey`\\s "
"does not appear in :class:`~django.forms.ModelForm`\\s."
msgstr ""
"Juga, :class:`~django.contrib.contenttypes.fields.GenericForeignKey` tidak "
"muncul dalam :class:`~django.forms.ModelForm`."

msgid "Reverse generic relations"
msgstr "Membalikkan hubungan umum"

msgid ""
"The relation on the related object back to this object doesn't exist by "
"default. Setting ``related_query_name`` creates a relation from the related "
"object back to this one. This allows querying and filtering from the related "
"object."
msgstr ""
"Hubungan pada obyek terkait kembali ke obyek ini tidak ada secara awalan. "
"Pengaturan ``related_query_name`` membuat sebuah hubungan dari obyek terkait "
"kembali ke satu ini. Ini mengizinkan meminta dan menyaring dari obyek "
"terkait."

msgid ""
"If you know which models you'll be using most often, you can also add a "
"\"reverse\" generic relationship to enable an additional API. For example::"
msgstr ""
"Jika anda mengetahui model-model mana anda akan menggunakan paling sering, "
"anda dapat juga menambahkan hubungan umum \"reverse\" untuk mengadakan "
"sebuah tambahan API. Sebagai contoh::"

msgid ""
"``Bookmark`` instances will each have a ``tags`` attribute, which can be "
"used to retrieve their associated ``TaggedItems``::"
msgstr ""
"Instance ``Bookmark`` akan setipanya memiliki sebuah atribut ``tags``, yang "
"dapat digunakan untuk mengambil ``TaggedItems`` terkait mereka::"

msgid ""
"Defining :class:`~django.contrib.contenttypes.fields.GenericRelation` with "
"``related_query_name`` set allows querying from the related object::"
msgstr ""
"Menentukan :class:`~django.contrib.contenttypes.fields.GenericRelation` "
"dengan kumpulan ``related_query_name`` mengizinkan meminta dari obyek "
"terkait::"

msgid ""
"This enables filtering, ordering, and other query operations on ``Bookmark`` "
"from ``TaggedItem``::"
msgstr ""
"Ini mengadakan penyaring, oengurutan, dan tindakan permintaan lain pada "
"``Bookmark`` dari ``TaggedItem``::"

msgid ""
"Of course, if you don't add the reverse relationship, you can do the same "
"types of lookups manually::"
msgstr ""
"Tentu saja, jika anda tidak menambah membalikkan hubungan, anda dapat "
"melakukan jenis-jenis sama dari pencarian secara manual:: "

msgid ""
"Just as :class:`~django.contrib.contenttypes.fields.GenericForeignKey` "
"accepts the names of the content-type and object-ID fields as arguments, so "
"too does :class:`~django.contrib.contenttypes.fields.GenericRelation`; if "
"the model which has the generic foreign key is using non-default names for "
"those fields, you must pass the names of the fields when setting up a :class:"
"`.GenericRelation` to it. For example, if the ``TaggedItem`` model referred "
"to above used fields named ``content_type_fk`` and ``object_primary_key`` to "
"create its generic foreign key, then a :class:`.GenericRelation` back to it "
"would need to be defined like so::"
msgstr ""
"Sama seperti :class:`~django.contrib.contenttypes.fields.GenericForeignKey` "
"menerima nama-nama dari bidang content-type dan object-ID sebagai argumen, "
"begitu juga :class:`~django.contrib.contenttypes.fields.GenericRelation`; "
"jika model yang mempunyai foreign key umum menggunakan nama bukan-awalan "
"untuk bidang-bidang tersebut, anda harus melewatkan nama-nama dari bidang "
"ketika mengatur sebuah :class:`.GenericRelation` untuk itu. Sebagai contoh, "
"jika model ``TaggedItem`` mengacu pada diatas menggunakan bidang bernama "
"``content_type_fk`` dan ``object_primary_key`` untuk membuat foreign key "
"umumnya, kemudian :class:`.GenericRelation` kembali ke itu akan butuh "
"ditentukan seperti itu::"

msgid ""
"Note also, that if you delete an object that has a :class:`~django.contrib."
"contenttypes.fields.GenericRelation`, any objects which have a :class:"
"`~django.contrib.contenttypes.fields.GenericForeignKey` pointing at it will "
"be deleted as well. In the example above, this means that if a ``Bookmark`` "
"object were deleted, any ``TaggedItem`` objects pointing at it would be "
"deleted at the same time."
msgstr ""
"Catat juga, bahwa jika anda menghapus sebuah obyek yang mempunyai sebuah :"
"class:`~django.contrib.contenttypes.fields.GenericRelation`, obyek apapun "
"yang mempunyai :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey` menunjuk ke itu akan dihapus juga. Dalam contoh diatas, "
"ini berarti bahwa jika sebuah obyek ``Bookmark`` dihapus, obyek "
"``TaggedItem`` apapun menunjuk pada itu akan dihapus pada waktu yang sama."

msgid ""
"Unlike :class:`~django.db.models.ForeignKey`, :class:`~django.contrib."
"contenttypes.fields.GenericForeignKey` does not accept an :attr:`~django.db."
"models.ForeignKey.on_delete` argument to customize this behavior; if "
"desired, you can avoid the cascade-deletion simply by not using :class:"
"`~django.contrib.contenttypes.fields.GenericRelation`, and alternate "
"behavior can be provided via the :data:`~django.db.models.signals."
"pre_delete` signal."
msgstr ""
"Tidak seperti :class:`~django.db.models.ForeignKey`, :class:`~django.contrib."
"contenttypes.fields.GenericForeignKey` tidak menerima sebuah argumen :attr:"
"`~django.db.models.ForeignKey.on_delete` untuk menyesuaiakan perilaku ini; "
"jika diinginkan anda dapat menghindari penghapusan-mengalir-ke-bawah cukup "
"dengan tidak menggunakan :class:`~django.contrib.contenttypes.fields."
"GenericRelation`, dan perilaku bergantian dapat disediakan melalui sinyal :"
"data:`~django.db.models.signals.pre_delete`."

msgid "Generic relations and aggregation"
msgstr "Hubungan umum dan pengumpulan"

msgid ""
":doc:`Django's database aggregation API </topics/db/aggregation>` works with "
"a :class:`~django.contrib.contenttypes.fields.GenericRelation`. For example, "
"you can find out how many tags all the bookmarks have::"
msgstr ""
":doc:`Django's database aggregation API </topics/db/aggregation>` bekerja "
"dengan :class:`~django.contrib.contenttypes.fields.GenericRelation`. Sebagai "
"contoh, anda dapat menemukan berapa banyak etiket semua bookmark miliki::"

msgid "Generic relation in forms"
msgstr "Hubungan umum di formulir"

msgid "The :mod:`django.contrib.contenttypes.forms` module provides:"
msgstr "Modul :mod:`django.contrib.contenttypes.forms` menyediakan:"

msgid ":class:`BaseGenericInlineFormSet`"
msgstr ":class:`BaseGenericInlineFormSet`"

msgid ""
"A formset factory, :func:`generic_inlineformset_factory`, for use with :"
"class:`~django.contrib.contenttypes.fields.GenericForeignKey`."
msgstr ""
"Pabrik formset, :func:`generic_inlineformset_factory`, untuk digunakan "
"dengan :class:`~django.contrib.contenttypes.fields.GenericForeignKey`."

msgid ""
"Returns a ``GenericInlineFormSet`` using :func:`~django.forms.models."
"modelformset_factory`."
msgstr ""
"Mengembalikan ``GenericInlineFormSet`` menggunakan :func:`~django.forms."
"models.modelformset_factory`. "

msgid ""
"You must provide ``ct_field`` and ``fk_field`` if they are different from "
"the defaults, ``content_type`` and ``object_id`` respectively. Other "
"parameters are similar to those documented in :func:`~django.forms.models."
"modelformset_factory` and :func:`~django.forms.models.inlineformset_factory`."
msgstr ""
"Anda harus menyediakan ``ct_field`` dan ``fk_field`` jika mereka berbeda "
"dari awalan, ``content_type`` dan ``object_id`` masing-masing. Parameter "
"lain adalah mirip ke yang didokumentasi di :func:`~django.forms.models."
"modelformset_factory` dan :func:`~django.forms.models.inlineformset_factory`."

msgid ""
"The ``for_concrete_model`` argument corresponds to the :class:`~django."
"contrib.contenttypes.fields.GenericForeignKey.for_concrete_model` argument "
"on ``GenericForeignKey``."
msgstr ""
"Argumen ``for_concrete_model`` berhubungan ke argumen :class:`~django."
"contrib.contenttypes.fields.GenericForeignKey.for_concrete_model` pada "
"``GenericForeignKey``."

msgid "Generic relations in admin"
msgstr "Hubungan umum di admin"

msgid ""
"The :mod:`django.contrib.contenttypes.admin` module provides :class:`~django."
"contrib.contenttypes.admin.GenericTabularInline` and :class:`~django.contrib."
"contenttypes.admin.GenericStackedInline` (subclasses of :class:`~django."
"contrib.contenttypes.admin.GenericInlineModelAdmin`)"
msgstr ""
"Modul :mod:`django.contrib.contenttypes.admin` menyediakan :class:`~django."
"contrib.contenttypes.admin.GenericTabularInline` dan :class:`~django.contrib."
"contenttypes.admin.GenericStackedInline` (subkelas-subkelas dari :class:"
"`~django.contrib.contenttypes.admin.GenericInlineModelAdmin`)"

msgid ""
"These classes and functions enable the use of generic relations in forms and "
"the admin. See the :doc:`model formset </topics/forms/modelforms>` and :ref:"
"`admin <using-generic-relations-as-an-inline>` documentation for more "
"information."
msgstr ""
"Kelas-kelas dan fungsi-fungsi ini mengadakan penggunaan hubungan umum di "
"formulir dan admin. Lihat dokumentasi :doc:`model formset </topics/forms/"
"modelforms>` dan :ref:`admin <using-generic-relations-as-an-inline>` untuk "
"informasi lebih."

msgid ""
"The :class:`~django.contrib.contenttypes.admin.GenericInlineModelAdmin` "
"class inherits all properties from an :class:`~django.contrib.admin."
"InlineModelAdmin` class. However, it adds a couple of its own for working "
"with the generic relation:"
msgstr ""
"Kelas :class:`~django.contrib.contenttypes.admin.GenericInlineModelAdmin` "
"mewarisi semua sifat-sifat dari sebuah kelas :class:`~django.contrib.admin."
"InlineModelAdmin`. Bagaimanapun, itu menambahkan sebuah pasang dari itu "
"sendiri untuk bekerja dengan hubungan umum:"

msgid ""
"The name of the :class:`~django.contrib.contenttypes.models.ContentType` "
"foreign key field on the model. Defaults to ``content_type``."
msgstr ""
"Nama dari bidang foreign key :class:`~django.contrib.contenttypes.models."
"ContentType` pada model. Awalan pada ``content_type``."

msgid ""
"The name of the integer field that represents the ID of the related object. "
"Defaults to ``object_id``."
msgstr ""
"Nama dari bidang integer yang mewakili ID dari obyek terkait. Awalan pada "
"``object_id``."

msgid ""
"Subclasses of :class:`GenericInlineModelAdmin` with stacked and tabular "
"layouts, respectively."
msgstr ""
"Subkelas-subkelas dari :class:`GenericInlineModelAdmin` dengan tata letak "
"bertumpuk dan datar, masing-masing."

msgid "The flatpages app"
msgstr "Aplikasi flatpage"

msgid ""
"Django comes with an optional \"flatpages\" application. It lets you store "
"simple \"flat\" HTML content in a database and handles the management for "
"you via Django's admin interface and a Python API."
msgstr ""
"Django menjadi sebuah pilihan aplikasi \"flatpages\". Itu membuat anda "
"menyimpan isi HTML \"flat\" sederhana dalam sebuah basisdata dan menangani "
"pengelolaan untuk anda melalui antarmuka admin Django dan API Python."

msgid ""
"A flatpage is a simple object with a URL, title and content. Use it for one-"
"off, special-case pages, such as \"About\" or \"Privacy Policy\" pages, that "
"you want to store in a database but for which you don't want to develop a "
"custom Django application."
msgstr ""
"Sebuah flatpage adalah obyek sederhana dengan sebuah URL, judul dan isi. "
"Gunakan itu untuk satu kali, halaman kasus-khusus, seperti halaman \"About\" "
"atau \"Privacy Policy, yang anda ingin menyimpan kedalam sebuah basisdata "
"tetapi untuk itu anda tidak ingin mengembangkan sebuah aplikasi penyesuaian "
"Django."

msgid ""
"A flatpage can use a custom template or a default, systemwide flatpage "
"template. It can be associated with one, or multiple, sites."
msgstr ""
"Sebuah flatpage dapat menggunakan cetakan penyesuaian atau awalan, cetakan "
"flatpage sistem luas. Itu dapat dikaitkan dengan satu, atau banyak, situs."

msgid ""
"The content field may optionally be left blank if you prefer to put your "
"content in a custom template."
msgstr ""
"Bidang isi mungkin pilihan ditinggalkan kosong jika anda memilih menaruh isi "
"anda di penyesuaian cetakan."

msgid "Here are some examples of flatpages on Django-powered sites:"
msgstr "Ini adalah beberapa contoh dari flatpage pada situs ditenagai-Django:"

msgid "http://www.lawrence.com/about/contact/"
msgstr "http://www.lawrence.com/about/contact/"

msgid "http://www2.ljworld.com/site/rules/"
msgstr "http://www2.ljworld.com/site/rules/"

msgid "Installation"
msgstr "Pemasangan"

msgid "To install the flatpages app, follow these steps:"
msgstr "Untuk memasang aplikasi flatpages, ikuti langkah ini:"

msgid ""
"Install the :mod:`sites framework <django.contrib.sites>` by adding "
"``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting, if "
"it's not already in there."
msgstr ""
"Pasang :mod:`sites framework <django.contrib.sites>` dengan menambahkan "
"``'django.contrib.sites'`` pada pengaturan :setting:`INSTALLED_APPS` anda, "
"jika itu sudah tidak disana."

msgid ""
"Also make sure you've correctly set :setting:`SITE_ID` to the ID of the site "
"the settings file represents. This will usually be ``1`` (i.e. ``SITE_ID = "
"1``, but if you're using the sites framework to manage multiple sites, it "
"could be the ID of a different site."
msgstr ""
"Juga pastikan anda telah benar menyetel :setting:`SITE_ID` menjadi ID dari "
"situs berkas pengaturan diwakili. Ini biasanya berupa ``1`` (yaitu ``SITE_ID "
"= 1``, tetapi jika anda sedang menggunakan kerangka kerja situs untuk "
"mengelola banyak situs, itu dapat berupa ID dari situs berbeda."

msgid ""
"Add ``'django.contrib.flatpages'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Tambah ``'django.contrib.flatpages'`` ke pengaturan :setting:"
"`INSTALLED_APPS` anda."

msgid "Then either:"
msgstr "Maka salah satu:"

msgid "Add an entry in your URLconf. For example::"
msgstr "Tambah sebuah masukan dalam URLconf anda.  Sebagai contoh::"

msgid "or:"
msgstr "atau:"

msgid ""
"Add ``'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE` setting."
msgstr ""
"Tambah ``'django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware'`` ke pengaturan :setting:`MIDDLEWARE` anda."

msgid "Run the command :djadmin:`manage.py migrate <migrate>`."
msgstr "Jalankan perintah :djadmin:`manage.py migrate <migrate>`."

msgid "How it works"
msgstr "Bagaimana itu bekerja"

msgid ""
"``manage.py migrate`` creates two tables in your database: "
"``django_flatpage`` and ``django_flatpage_sites``. ``django_flatpage`` is a "
"simple lookup table that simply maps a URL to a title and bunch of text "
"content. ``django_flatpage_sites`` associates a flatpage with a site."
msgstr ""
"``manage.py migrate`` membuat dua tabel dalam basisdata anda: "
"`django_flatpage`` dan ``django_flatpage_sites``. ``django_flatpage`` adalah "
"tabel pencarian sederhana yang cukup memetakan UTL ke sebuah judul dan "
"berkas dari isi teks. ``django_flatpage_sites`` terkait sebuah halaman datar "
"dengan sebuah situs."

msgid "Using the URLconf"
msgstr "Menggunakan URLconf"

msgid ""
"There are several ways to include the flat pages in your URLconf. You can "
"dedicate a particular path to flat pages::"
msgstr ""
"Ada beberapa cara untuk menyertakan halaman-halaman datar dalam URLconf "
"anda. Anda dapat mengamanatkan jalur tertentu pada halaman-halaman datar:: "

msgid ""
"You can also set it up as a \"catchall\" pattern. In this case, it is "
"important to place the pattern at the end of the other urlpatterns::"
msgstr ""
"Anda dapat juga menyetel itu sebagai sebuah pola \"catchall\". Dalam kasus "
"ini, itu adalah penting menempatkan pola pada akhir dari urlpattern lain::"

msgid ""
"If you set :setting:`APPEND_SLASH` to ``False``, you must remove the slash "
"in the catchall pattern or flatpages without a trailing slash will not be "
"matched."
msgstr ""
"Jika anda menyetel :setting:`APPEND_SLASH` menjadi ``False``, anda harus "
"memindahkan garis miring dalam pola catchall atau halaman-halaman datar "
"tanpa diikuti garis miring tidak akan cocok."

msgid ""
"Another common setup is to use flat pages for a limited set of known pages "
"and to hard code the urls, so you can reference them with the :ttag:`url` "
"template tag::"
msgstr ""
"Pengaturan lain umum adalah menggunakan halaman-halaman datar untuk kumpulan "
"terbatas dari halaman-halaman yang dikenal dan kode keras url, jadi anda "
"dapat mengacu mereka dengan etiket cetakan :ttag:`url`::"

msgid "Using the middleware"
msgstr "Menggunakan middleware"

msgid ""
"The :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"can do all of the work."
msgstr ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"dapat melakukan semua dari pekerjaan."

msgid ""
"Each time any Django application raises a 404 error, this middleware checks "
"the flatpages database for the requested URL as a last resort. Specifically, "
"it checks for a flatpage with the given URL with a site ID that corresponds "
"to the :setting:`SITE_ID` setting."
msgstr ""
"Setiap kali aplikasi Django apapun memunculkan kesalahan 404, middleware ini "
"memeriksa bahwa basisdata flatpage untuk URL diminta sebagai usaha terakhir. "
"Khususnya, itu memeriksa untuk flatpage dengan URL diberikan dengan ID situs "
"yang berhubungan pada pengaturan :setting:`SITE_ID`."

msgid "If it finds a match, it follows this algorithm:"
msgstr "Jika dia menemukan yang cocok, dia mengikuti algoritma ini:"

msgid ""
"If the flatpage has a custom template, it loads that template. Otherwise, it "
"loads the template :file:`flatpages/default.html`."
msgstr ""
"Jika halaman datar mempunyai cetakan penyesuaian, itu memuat cetakan "
"tersebut. Sebaliknya, itu memuat cetakan :file:`flatpages/default.html`."

msgid ""
"It passes that template a single context variable, ``flatpage``, which is "
"the flatpage object. It uses :class:`~django.template.RequestContext` in "
"rendering the template."
msgstr ""
"Itu melewatkan cetakan tersebut sebuah variabel konteks tunggal, "
"``flatpage``, yaitu obyek halaman datar. Itu menggunakan :class:`~django."
"template.RequestContext` dalam membangun cetakan."

msgid ""
"The middleware will only add a trailing slash and redirect (by looking at "
"the :setting:`APPEND_SLASH` setting) if the resulting URL refers to a valid "
"flatpage. Redirects are permanent (301 status code)."
msgstr ""
"Middleware hanya akan menambah garis miring dan mengalihkan (dengan mencari "
"pada pengaturan :setting:`APPEND_SLASH`) jika URL yang dihasilkan mengacu ke "
"halaman datar yang sah. Pengalihan adalah tetap (kode keadaan 301)."

msgid ""
"If it doesn't find a match, the request continues to be processed as usual."
msgstr ""
"Jika itu tidak menemukan kecocokan, permintaan berlanjut untuk diolah "
"seperti biasa."

msgid ""
"The middleware only gets activated for 404s -- not for 500s or responses of "
"any other status code."
msgstr ""
"Middleware hanya dapat diaktifasikan untuk 404 -- bukan untuk 500 atau "
"tanggapan kode keadaan apapun lainnya."

msgid "Flatpages will not apply view middleware"
msgstr "Flatpage tidak akan memberlakukan tampilan middleware"

msgid ""
"Because the ``FlatpageFallbackMiddleware`` is applied only after URL "
"resolution has failed and produced a 404, the response it returns will not "
"apply any :ref:`view middleware <view-middleware>` methods. Only requests "
"which are successfully routed to a view via normal URL resolution apply view "
"middleware."
msgstr ""
"Karena ``FlatpageFallbackMiddleware`` diberlakukan hanya setelah keputusan "
"URL gagal dan menghasilkan 404, tanggapan itu mengembalikan tidak akan "
"memberlakukan metode :ref:`view middleware 1` apapun. Hanya permintaan yang "
"berhasil dirutekan untuk ditampilkan melalui keputusan URL biasa "
"memberlakukan tampilan middleware."

msgid ""
"Note that the order of :setting:`MIDDLEWARE` matters. Generally, you can "
"put :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"at the end of the list. This means it will run first when processing the "
"response, and ensures that any other response-processing middlewares see the "
"real flatpage response rather than the 404."
msgstr ""
"Catat bahwa urutan penting dari :setting:`MIDDLEWARE`. Umumnya, anda dapat "
"menaruh :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` pada akhir dari daftar. Ini berarti itu akan "
"berjalan pertama ketika pengolahan tanggapan, dan memastikan bahwa "
"middleware pengolah-tanggapan lain apapun melihat tanggapan flatpage "
"sebenarnya daripada 404."

msgid ""
"For more on middleware, read the :doc:`middleware docs </topics/http/"
"middleware>`."
msgstr ""
"Untuk lebih pada middleware, baca :doc:`dokumentasi middleware </topics/http/"
"middleware>`."

msgid "Ensure that your 404 template works"
msgstr "Pastikan bahwa cetakan 404 anda bekerja"

msgid ""
"Note that the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only steps in once another view has successfully "
"produced a 404 response. If another view or middleware class attempts to "
"produce a 404 but ends up raising an exception instead, the response will "
"become an HTTP 500 (\"Internal Server Error\") and the :class:`~django."
"contrib.flatpages.middleware.FlatpageFallbackMiddleware` will not attempt to "
"serve a flat page."
msgstr ""
"Catat bahwa :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` hanya melangkah dalam sekali tampilan lain telah "
"berhasil menghasilkan tanggapan 404. Jika tampilan lain atau kelas "
"middleware berusaha untuk menghasilkan 404 tetapi berakhir memunculkan "
"sebuah pengecualian, tanggapan akan menjadi HTTP 500 (\"Internal Server Error"
"\") dan :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` tidak akan berusaha melayani halaman datar. "

msgid "How to add, change and delete flatpages"
msgstr "Bagaimana menambah, merubah dan menghapus flatpages"

msgid "Via the admin interface"
msgstr "Melalui antarmuka admin"

msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Flatpages\" section on the admin index page. Edit flatpages as you edit "
"any other object in the system."
msgstr ""
"Jika anda telah diaktivasi antarmuka admin Django, anda harus melihat bagisn "
"\"Flatpages\" pada halaman indeks admin. Sunting flatpage ketika anda "
"menyunting obyek apapun lainnya dalam sistem."

msgid ""
"The ``FlatPage`` model has an ``enable_comments`` field that isn't used by "
"``contrib.flatpages``, but that could be useful for your project or third-"
"party apps. It doesn't appear in the admin interface, but you can add it by "
"registering a custom ``ModelAdmin`` for ``FlatPage``::"
msgstr ""
"Model ``FlatPage`` mempunyai bidang ``enable_comments`` yang tidak digunakan "
"oleh ``contrib.flatpages``, tetapi itu mungkin berguna untuk peoyek anda "
"atau aplikasi pihak-ketiga. Itu tidak muncul dalam antarmuka admin, tetapi "
"anda dapat menambahkan itu dengan mendaftarkan penyesuaian ``ModelAdmin`` "
"untuk ``FlatPage``::"

msgid "Via the Python API"
msgstr "Melalui API Python"

msgid ""
"Flatpages are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/flatpages/models.py`_. You can "
"access flatpage objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""
"Flatpage diwakilkan oleh sebuah standar :doc:`Django model 1`, yang berada "
"dalam `django/contrib/flatpages/models.py`_. Anda dapat mengakses obyek "
"flatpage melalui  :doc:`Django database API 2`."

msgid "Check for duplicate flatpage URLs."
msgstr "Periksa untuk URL flatpage ganda."

msgid ""
"If you add or modify flatpages via your own code, you will likely want to "
"check for duplicate flatpage URLs within the same site. The flatpage form "
"used in the admin performs this validation check, and can be imported from "
"``django.contrib.flatpages.forms.FlatpageForm`` and used in your own views."
msgstr ""
"Jika anda menambah atau merubah melalui kode anda sendiri, anda akan ingin "
"memeriksa untuk URL faltpage ganda dalam situs yang sama. Formulir flatpage "
"digunakan dalam admin melakukan pemeriksaan pengesahan ini, dan dapat "
"diimpor dari ``django.contrib.flatpages.forms.FlatpageForm`` dan digunakan "
"dalam tampilan anda sendiri."

msgid "Flatpage templates"
msgstr "Cetakan flatpages"

msgid ""
"By default, flatpages are rendered via the template :file:`flatpages/default."
"html`, but you can override that for a particular flatpage: in the admin, a "
"collapsed fieldset titled \"Advanced options\" (clicking will expand it) "
"contains a field for specifying a template name. If you're creating a flat "
"page via the Python API you can simply set the template name as the field "
"``template_name`` on the ``FlatPage`` object."
msgstr ""
"Secara awalan, flatpage dibangun melalui cetakan :file:`flatpages/default."
"html`, tetapi anda dapat menimpa itu untuk flatpage tertentu: dalam admin,  "
"fieldset melipat berjudul \"Pilihan lanjutan\" (mengklik akan memperluasnya) "
"mengandung sebuah bidang untuk menentukan nama cetakan. Jika anda sedang "
"membuat sebuah halaman datar melalui API Python anda dapat cukup menyetel "
"nama cetakan sebagai bidang ``template_name`` pada obyek ``FlatPage``."

msgid ""
"Creating the :file:`flatpages/default.html` template is your responsibility; "
"in your template directory, just create a :file:`flatpages` directory "
"containing a file :file:`default.html`."
msgstr ""
"Membuat cetakan :file:`flatpages/default.html` adalah tanggungjawab anda; "
"dalam direktori cetakan anda, cukup buat direktori :file:`flatpages` "
"mengandung sebuah berkas :file:`default.html`."

msgid ""
"Flatpage templates are passed a single context variable, ``flatpage``, which "
"is the flatpage object."
msgstr ""
"Cetakan flatpage melewatkan variabel konteks tunggal, ``flatpage``, yaitu "
"obyek flatpage."

msgid "Here's a sample :file:`flatpages/default.html` template:"
msgstr "Ini adalah sebuah contoh cetakan :file:`flatpages/default.html`:"

msgid ""
"Since you're already entering raw HTML into the admin page for a flatpage, "
"both ``flatpage.title`` and ``flatpage.content`` are marked as **not** "
"requiring :ref:`automatic HTML escaping <automatic-html-escaping>` in the "
"template."
msgstr ""
"Sejak anda sudah memasukkan HTML mentah kedalam halaman admin untuk sebuah "
"flatpage, kedua ``flatpage.title`` dan ``flatpage.content`` ditandai sebagai "
"**bukan** membutuhkan :ref:`automatic HTML escaping 1` dalam cetakan."

msgid ""
"Getting a list of :class:`~django.contrib.flatpages.models.FlatPage` objects "
"in your templates"
msgstr ""
"Mendapatkan daftar dari obyek :class:`~django.contrib.flatpages.models."
"FlatPage` dalam cetakan anda"

msgid ""
"The flatpages app provides a template tag that allows you to iterate over "
"all of the available flatpages on the :ref:`current site <hooking-into-"
"current-site-from-views>`."
msgstr ""
"Aplikasi flatpage menyediakan sebuah etiket cetakan yang mengizinkan anda "
"mengulangi semua flatpage yang tersedia pada :ref:`current site 1`. "

msgid ""
"Like all custom template tags, you'll need to :ref:`load its custom tag "
"library <loading-custom-template-libraries>` before you can use it. After "
"loading the library, you can retrieve all current flatpages via the :ttag:"
"`get_flatpages` tag:"
msgstr ""
"Seperti semua etiket cetakan penyesuaian, anda akan butuh untuk :ref:`load "
"its custom tag library 1` sebelum anda dapat menggunakan itu. Setelah memuat "
"pustaka, anda dapat mengambil semua flatpage melalui etiket :ttag:"
"`get_flatpages`."

msgid "Displaying ``registration_required`` flatpages"
msgstr "Menampilkan flatpage ``registration_required``"

msgid ""
"By default, the :ttag:`get_flatpages` templatetag will only show flatpages "
"that are marked ``registration_required = False``. If you want to display "
"registration-protected flatpages, you need to specify an authenticated user "
"using a ``for`` clause."
msgstr ""
"Secara awalan, etiket cetakan :ttag:`get_flatpages` akan hanya menampilkan "
"flagpage yang ditandai ``registration_required = False``. Jika anda ingin "
"menampilkan flatpage pendaftaran-terlindungi, anda butuh menentukan sebuah "
"pengguna terautentifikasi menggunakan klausa ``for``."

msgid "For example:"
msgstr "Sebagai contoh:"

msgid ""
"If you provide an anonymous user, :ttag:`get_flatpages` will behave the same "
"as if you hadn't provided a user -- i.e., it will only show you public "
"flatpages."
msgstr ""
"Jika anda menyediakan pengguna anonim, :ttag:`get_flatpages` akan "
"berperilaku sama seperti jika anda belum menyediakan pengguna -- yaitu, itu "
"akan hanya menampilkan flatpage umum anda."

msgid "Limiting flatpages by base URL"
msgstr "Membatasi flatpage dengan URL dasar"

msgid ""
"An optional argument, ``starts_with``, can be applied to limit the returned "
"pages to those beginning with a particular base URL. This argument may be "
"passed as a string, or as a variable to be resolved from the context."
msgstr ""
"Sebuah argumen pilihan, ``starts_with``, dapat diberlakukan pada batasan "
"halaman dikembalikan ke yang dimulai dengan URL dasar tertentu. Argumen ini "
"mungkin dilewatkan sebagai sebuah string, atau sebagai sebuah variabel untuk "
"dipecahkan dari konteks."

msgid "Integrating with :mod:`django.contrib.sitemaps`"
msgstr "Memadukan dengan :mod:`django.contrib.sitemaps`"

msgid ""
"The :class:`sitemaps.FlatPageSitemap <django.contrib.flatpages.sitemaps."
"FlatPageSitemap>` class looks at all publicly visible :mod:`~django.contrib."
"flatpages` defined for the current :setting:`SITE_ID` (see the :mod:`sites "
"documentation <django.contrib.sites>`) and creates an entry in the sitemap. "
"These entries include only the :attr:`~django.contrib.sitemaps.Sitemap."
"location` attribute -- not :attr:`~django.contrib.sitemaps.Sitemap."
"lastmod`, :attr:`~django.contrib.sitemaps.Sitemap.changefreq` or :attr:"
"`~django.contrib.sitemaps.Sitemap.priority`."
msgstr ""
"Kelas :class:`sitemaps.FlatPageSitemap <django.contrib.flatpages.sitemaps."
"FlatPageSitemap>` mencari semua :mod:`~django.contrib.flatpages` yang nampak "
"di depan umum ditentukan untuk :setting:`SITE_ID` saat ini (lihat :mod:"
"`sites documentation <django.contrib.sites>`) dan buat sebuah masukan dalam "
"peta situs. Masukan ini termasuk hanya atribut :attr:`~django.contrib."
"sitemaps.Sitemap.location` -- bukan :attr:`~django.contrib.sitemaps.Sitemap."
"lastmod`, :attr:`~django.contrib.sitemaps.Sitemap.changefreq` atau :attr:"
"`~django.contrib.sitemaps.Sitemap.priority`."

msgid "Example"
msgstr "Contoh"

msgid "Here's an example of a URLconf using :class:`FlatPageSitemap`::"
msgstr ""
"Ini adalah sebuah contoh dari URLconf menggunakan :class:`FlatPageSitemap`::"

msgid "GeoDjango's admin site"
msgstr "Situs admin GeoDjango"

msgid "``GeoModelAdmin``"
msgstr "``GeoModelAdmin``"

msgid "The default center longitude."
msgstr "Garis bujur tengah awal"

msgid "The default center latitude."
msgstr "Lintang tengah awal."

msgid "The default zoom level to use.  Defaults to 4."
msgstr "Tingkat meningkat awalan digunakan. Awalan pada 4."

msgid "Sequence of URLs to any extra JavaScript to include."
msgstr "Urutan dari URL pada tambahan JavaScript apapun untuk diikutkan."

msgid ""
"Override the template used to generate the JavaScript slippy map. Default is "
"``'gis/admin/openlayers.html'``."
msgstr ""
"Timpa cetakan digunakan untuk membangkitkan peta licin JavaScript. Awalan "
"adalah ``'gis/admin/openlayers.html'``."

msgid "Width of the map, in pixels.  Defaults to 600."
msgstr "Lebar dari peta, dalam piksel. Awalan pada 600."

msgid "Height of the map, in pixels.  Defaults to 400."
msgstr "Tinggi dari peta, dalam pixel. Stadnarnya 400."

msgid ""
"Link to the URL of the OpenLayers JavaScript.  Defaults to ``'https://cdnjs."
"cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'``."
msgstr ""
"Tautan pada URL dari OpenLayers JavaScript. Awalan pada ``'https://cdnjs."
"cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js'``."

msgid ""
"Older versions default to ``'http://openlayers.org/api/2.13.1/OpenLayers."
"js'``."
msgstr ""
"Versi terlama awalan pada ``'http://openlayers.org/api/2.13.1/OpenLayers."
"js'``."

msgid ""
"Defaults to ``True``.  When set to ``False``, disables editing of existing "
"geometry fields in the admin."
msgstr ""
"Awalan menjadi ``True``. Ketika menyetel menjadi ``False``, meniadakan "
"penyuntingan dari bidang-bidang geometri yang ada dalam admin."

msgid ""
"This is different from adding the geometry field to :attr:`~django.contrib."
"admin.ModelAdmin.readonly_fields`, which will only display the WKT of the "
"geometry. Setting ``modifiable=False``, actually displays the geometry in a "
"map, but disables the ability to edit its vertices."
msgstr ""
"Ini adalah berbeda dari menambahkan bidang geometri pada :attr:`~django."
"contrib.admin.ModelAdmin.readonly_fields`, yang hanya menampilkan WKT dari "
"geometri. Pengaturan ``modifiable=False``, sebenarnya menampilkan geometri "
"dalam sebuah peta, tetapi meniadakan kemampuan menyunting simpulnya."

msgid "``OSMGeoAdmin``"
msgstr "``OSMGeoAdmin``"

msgid ""
"A subclass of :class:`GeoModelAdmin` that uses a spherical mercator "
"projection with `OpenStreetMap <https://www.openstreetmap.org/>`_ street "
"data tiles. See the :ref:`OSMGeoAdmin introduction <osmgeoadmin-intro>` in "
"the tutorial for a usage example."
msgstr ""
"Sebuah subkelas dari :class:`GeoModelAdmin` yang menggunakan proyeksi peta "
"silinder dengan lantai data `OpenStreetMap <https://www.openstreetmap.org/"
">`_. Lihat :ref:`OSMGeoAdmin introduction 1` dalam tutorial untuk contoh "
"penggunaan."

msgid "GeoDjango Management Commands"
msgstr "Perintah Pengelolaan GeoDjango"

msgid "``inspectdb``"
msgstr "``inspectdb``"

msgid ""
"When :mod:`django.contrib.gis` is in your :setting:`INSTALLED_APPS`, the :"
"djadmin:`inspectdb` management command is overridden with one from "
"GeoDjango. The overridden command is spatially-aware, and places geometry "
"fields in the auto-generated model definition, where appropriate."
msgstr ""
"Ketika :mod:`django.contrib.gis` ada dalam :setting:`INSTALLED_APPS` anda, "
"perintah pengelolaan :djadmin:`inspectdb` ditimpa dengan satu dari "
"GeoDjango. Perintah penimpaan adalah waspada-spasial, dan bidang geometri "
"tempat dalam pengertian model dibangkitkan-otomatis, dimana tepat. "

msgid "``ogrinspect``"
msgstr "``ogrinspect``"

msgid ""
"The ``ogrinspect`` management command will inspect the given OGR-compatible :"
"class:`~django.contrib.gis.gdal.DataSource` (e.g., a shapefile) and will "
"output a GeoDjango model with the given model name.  There's a detailed "
"example of using ``ogrinspect`` :ref:`in the tutorial <ogrinspect-intro>`."
msgstr ""
"Perintah pengelolaan ``ogrinspect`` akan memeriksa :class:`~django.contrib."
"gis.gdal.DataSource` sesuai-OGR yang diberikan (sebagai contoh shapefile) "
"dan akan mengeluarkan sebuah model GeoDjango dengan nama model diberikan. "
"Ada sebuah contoh rincian dari penggunaan ``ogrinspect`` :ref:`in the "
"tutorial 1`. "

msgid ""
"Use a comma separated list of OGR field names to add the ``blank=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""
"Gunakan daftar dipisahkan koma dari nama bidang OGR untuk menambahkan "
"pilihan katakunci ``blank=True`` ke pengertian bidang. Setel ``true`` untuk "
"memberlakukan ke semua bidang yang dapat dipakai."

msgid ""
"Use a comma separated list of OGR float fields to generate :class:`~django."
"db.models.DecimalField` instead of the default :class:`~django.db.models."
"FloatField`. Set to ``true`` to apply to all OGR float fields."
msgstr ""
"Gunakan daftar dipisahkan koma dari bidang float OGR untuk membangkitkan :"
"class:`~django.db.models.DecimalField` daripada awalan :class:`~django.db."
"models.FloatField`.  Setel menjadi ``true`` untuk memberlakukan semua bidang-"
"bidang float OGR."

msgid ""
"Specifies the model attribute name to use for the geometry field. Defaults "
"to ``'geom'``."
msgstr ""
"Tentukan nama atribut model untuk digunakan untuk bidang geometri. Awalan "
"adalah ``'geom'``. "

msgid ""
"The key for specifying which layer in the OGR :class:`~django.contrib.gis."
"gdal.DataSource` source to use. Defaults to 0 (the first layer). May be an "
"integer or a string identifier for the :class:`~django.contrib.gis.gdal."
"Layer`. When inspecting databases, ``layer`` is generally the table name you "
"want to inspect."
msgstr ""
"Kunci untuk menentukan lapisan mana dalam sumber :class:`~django.contrib.gis."
"gdal.DataSource` OGR untuk digunakan. Awalan pada 0 (lapisan pertama). "
"Mungkin penciri berupa sebuah integer atau string untuk :class:`~django."
"contrib.gis.gdal.Layer`. Ketika memeriksa basisdata, ``layer`` umumnya nama "
"tabel anda ingin periksa."

msgid ""
"Automatically generate a mapping dictionary for use with :class:`~django."
"contrib.gis.utils.LayerMapping`."
msgstr ""
"Secara otomatis membangkitkan sebuah kamus pemetaan untuk digunakan dengan :"
"class:`~django.contrib.gis.utils.LayerMapping`."

msgid ""
"When generating the geometry field, treat it as a geometry collection. For "
"example, if this setting is enabled then a :class:`~django.contrib.gis.db."
"models.MultiPolygonField` will be placed in the generated model rather than :"
"class:`~django.contrib.gis.db.models.PolygonField`."
msgstr ""
"Ketika membangkitkan bidang geometri, perlakukan itu sebagai kumpulan "
"geometri. Sebagai contoh, jika pengaturan ini adalah diadakan ketika sebuah :"
"class:`~django.contrib.gis.db.models.MultiPolygonField` akan ditempatkan "
"dalam model dibangkitkan daripada :class:`~django.contrib.gis.db.models."
"PolygonField`."

msgid ""
"Generates a ``__str__`` routine (``__unicode__`` on Python 2) on the model "
"that will return the given field name."
msgstr ""
"Membangkitkan sebuah rutin ``__str__``  (``__unicode__`` pada Python 2) pada "
"model yang akan mengembalikan nama bidang yang diberikan."

msgid ""
"Suppresses the ``from django.contrib.gis.db import models`` import statement."
msgstr ""
"Menekankan pernyataan impor ``from django.contrib.gis.db import models``."

msgid ""
"Use a comma separated list of OGR field names to add the ``null=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""
"Gunakan sebuah daftar dipisahkan koma dari nama bidang OGR untuk menambahkan "
"pilihan katakunci ``null=True`` pada pengertian bidang. Setel dengan "
"``true`` untuk memberlakukan semua bidang yang dapat di dipakai."

msgid ""
"The SRID to use for the geometry field.  If not set, ``ogrinspect`` attempts "
"to automatically determine of the SRID of the data source."
msgstr ""
"SRID untuk dipakai untuk bidang geometri. Jika tidak disetel, ``ogrinspect`` "
"berusaha otomatis menentukan SRID dari sumber data. "

msgid "GeoDjango Database API"
msgstr "API Basisdata GeoDjango"

msgid "Spatial Backends"
msgstr "Backend Spasial"

msgid "GeoDjango currently provides the following spatial database backends:"
msgstr "GeoDjango saat ini menyediakan backend basisdata spasial berikut:"

msgid "``django.contrib.gis.db.backends.postgis``"
msgstr "`django.contrib.gis.db.backends.postgis``"

msgid "``django.contrib.gis.db.backends.mysql``"
msgstr "``django.contrib.gis.db.backends.mysql``"

msgid "``django.contrib.gis.db.backends.oracle``"
msgstr "``django.contrib.gis.db.backends.oracle``"

msgid "``django.contrib.gis.db.backends.spatialite``"
msgstr "``django.contrib.gis.db.backends.spatialite``"

msgid "MySQL Spatial Limitations"
msgstr "Batasan Spasial MySQL"

msgid ""
"MySQL's spatial extensions only support bounding box operations (what MySQL "
"calls minimum bounding rectangles, or MBR).  Specifically, `MySQL does not "
"conform to the OGC standard <https://dev.mysql.com/doc/refman/en/spatial-"
"relation-functions.html>`_:"
msgstr ""
"Perpanjangan spasial MySQL hanya mendukung membatasi tindakan kotak (apa "
"MySQL sebut minimum bounding rectangles, atau MBR). Khususnya, `MySQL does "
"not conform to the OGC standard <https://dev.mysql.com/doc/refman/en/spatial-"
"relation-functions.html>`_:"

msgid ""
"Currently, MySQL does not implement these functions [``Contains``, "
"``Crosses``, ``Disjoint``, ``Intersects``, ``Overlaps``, ``Touches``, "
"``Within``] according to the specification.  Those that are implemented "
"return the same result as the corresponding MBR-based functions."
msgstr ""
"Saat ini, MySQL tidak menerapkan fungsi-fungsi ini [``Contains``, "
"``Crosses``, ``Disjoint``, ``Intersects``, ``Overlaps``, ``Touches``, "
"``Within``] menurut ke spesifikasi. Itu yang diterapkan mengembalikan hasil "
"sama seperti fungsi berdasarkan-MBR sesuai."

msgid ""
"In other words, while spatial lookups such as :lookup:`contains <gis-"
"contains>` are available in GeoDjango when using MySQL, the results returned "
"are really equivalent to what would be returned when using :lookup:"
"`bbcontains` on a different spatial backend."
msgstr ""
"Dengan kata lain, selagi pencarian spasial seperti :lookup:`contains 1` "
"tersedia dalam GeoDjango ketika menggunakan MySQL, hasil dikembalikan sangat "
"setara ke apa akan dikembalikan ketika menggunakan :lookup:`bbcontains` pada "
"backend spasial yang berbeda. "

msgid ""
"True spatial indexes (R-trees) are only supported with MyISAM tables on "
"MySQL. [#fnmysqlidx]_ In other words, when using MySQL spatial extensions "
"you have to choose between fast spatial lookups and the integrity of your "
"data -- MyISAM tables do not support transactions or foreign key constraints."
msgstr ""
"True spatial indexes (R-trees) hanya didukung dengan tabel MyISAM pada "
"MySQL. [#fnmysqlidx]_ Dengan kata lain, ketika menggunakan tambahan spasial "
"MySQL anda telah memilih diantara pencarian spasial cepat dan keutuhan data "
"anda -- tabel MyISAM tidak mendukung transaksi atau batasan foreign key."

msgid "Raster Support"
msgstr "Dukungan Raster"

msgid ""
"``RasterField`` is currently only implemented for the PostGIS backend. "
"Spatial lookups are available for raster fields, but spatial database "
"functions and aggregates aren't implemented for raster fields."
msgstr ""
"``RasterField`` saat ini hanya diterapkan untuk backend PostGIS. Pencarian "
"spasial tersedia untuk bidang raster, tetapi fungsi basisdata spasial dan "
"pengumpulan tidak diterapkan untuk bidang taster."

msgid "``RasterField`` now supports spatial lookups."
msgstr "``RasterField`` sekarang mendukung pencarian spasial."

msgid "Creating and Saving Models with Geometry Fields"
msgstr "Membuat dan Menyimpan Model dengan Bidang Geometri"

msgid ""
"Here is an example of how to create a geometry object (assuming the "
"``Zipcode`` model)::"
msgstr ""
"Ini adalah sebuah contoh bagaimana membuat obyek geometri (mengganggap model "
"``Zipcode``):: "

msgid ""
":class:`~django.contrib.gis.geos.GEOSGeometry` objects may also be used to "
"save geometric models::"
msgstr ""
"Obyek :class:`~django.contrib.gis.geos.GEOSGeometry` mungkin juga digunakan "
"untuk menyimpan model geometrik::"

msgid ""
"Moreover, if the ``GEOSGeometry`` is in a different coordinate system (has a "
"different SRID value) than that of the field, then it will be implicitly "
"transformed into the SRID of the model's field, using the spatial database's "
"transform procedure::"
msgstr ""
"Bahkan, jika ``GEOSGeometry`` adalah dalam sistem kordinat berbeda "
"(mempunyai nilai SRID berbeda) daripada itu dari bidan, kemudian itu akan "
"secara jelas berubah kedalam SRID dari bidang model, menggunakan prosedur "
"perubahan basisdata spasial::"

msgid ""
"Thus, geometry parameters may be passed in using the ``GEOSGeometry`` "
"object, WKT (Well Known Text [#fnwkt]_), HEXEWKB (PostGIS specific -- a WKB "
"geometry in hexadecimal [#fnewkb]_), and GeoJSON [#fngeojson]_. Essentially, "
"if the input is not a ``GEOSGeometry`` object, the geometry field will "
"attempt to create a ``GEOSGeometry`` instance from the input."
msgstr ""
"Dengan demikian, parameter geometri mungkin dilewatkan dalam menggunakan "
"obyek `GEOSGeometry``, WKT (Well Known Text [#fnwkt]_), HEXEWKB "
"(PostGIS tertentu -- geometri WKB dalam heksadesimal [#fnewkb]_), dan "
"GeoJSON [#fngeojson]_. Intinya, jika masukan bukan sebuah obyek "
"``GEOSGeometry``, bidang geometri akan berusaha membuat sebuah instance "
"``GEOSGeometry`` dari masukan."

msgid ""
"For more information creating :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects, refer to the :ref:`GEOS tutorial <geos-tutorial>`."
msgstr ""
"Untuk informasi lebih membuat obyek :class:`~django.contrib.gis.geos."
"GEOSGeometry` mengacu pada :ref:`GEOS tutorial 1`."

msgid "Creating and Saving Models with Raster Fields"
msgstr "Membuat dan Menyimpan Model dengan Bidang Raster"

msgid ""
"When creating raster models, the raster field will implicitly convert the "
"input into a :class:`~django.contrib.gis.gdal.GDALRaster` using lazy-"
"evaluation. The raster field will therefore accept any input that is "
"accepted by the :class:`~django.contrib.gis.gdal.GDALRaster` constructor."
msgstr ""
"Ketika membuat model raster, bidang raster akan secara jelas merubah masukan "
"kedalam :class:`~django.contrib.gis.gdal.GDALRaster`menggunakan penilaian-"
"lazy. Bidang raster karenanya akan menerima masukan apapun yang ditermia "
"oleh pembangun :class:`~django.contrib.gis.gdal.GDALRaster`."

msgid ""
"Here is an example of how to create a raster object from a raster file "
"``volcano.tif`` (assuming the ``Elevation`` model)::"
msgstr ""
"Disini adalah sebuah contoh dari bagaimana membuat obyek raster dari berkas "
"raster ``volcano.tif`` (berlagak model ``Elevation``)"

msgid ""
":class:`~django.contrib.gis.gdal.GDALRaster` objects may also be used to "
"save raster models::"
msgstr ""
"Obyek :class:`~django.contrib.gis.gdal.GDALRaster` mungkin juga digunakan "
"untuk menyimpan model raster::"

msgid "Note that this equivalent to::"
msgstr "Catat bahwa ini setara pada::"

msgid "Spatial Lookups"
msgstr "Pencarian Spasial"

msgid ""
"GeoDjango's lookup types may be used with any manager method like "
"``filter()``, ``exclude()``, etc.  However, the lookup types unique to "
"GeoDjango are only available on spatial fields."
msgstr ""
"Jenis-jenis pencarian GeoDjango mungkin digunakan dengan metode pengelola "
"lain seperti ``filter()``, ``exclude()``, dll. Bagaimanapun, jenis-jenis "
"pencarian unik pada GeoDjango hanya tersedia pada bidang-bidang spasial."

msgid ""
"Filters on 'normal' fields (e.g. :class:`~django.db.models.CharField`) may "
"be chained with those on geographic fields. Geographic lookups accept "
"geometry and raster input on both sides and input types can be mixed freely."
msgstr ""
"Penyaring pada bidang 'biasa' (sebagai contoh :class:`~django.db.models."
"CharField`) mungkin dirantai dengan itu pada bidang geografis. Pencarian "
"geografis menerima masukan geometri dan raster pada kedua sisi dan jensi "
"masukan dapat digabung dengan bebas."

msgid ""
"The general structure of geographic lookups is described below. A complete "
"reference can be found in the :ref:`spatial lookup reference<spatial-"
"lookups>`."
msgstr ""
"Struktur umum dari pencarian geografis akan digambarkan dibawah ini. Acuan "
"lengkap dapat ditemukan dalam :ref:`spatial lookup reference1`. "

msgid "Geometry Lookups"
msgstr "Pencarian Geometri"

msgid ""
"Geographic queries with geometries take the following general form (assuming "
"the ``Zipcode`` model used in the :doc:`model-api`)::"
msgstr ""
"Permintaan geografis dengan geometri mengambil formulir umum berikut "
"(menganggap mdoel ``Zipcode`` digunakan dalam :doc:`model-api`)::"

msgid ""
"In this case, ``poly`` is the geographic field, :lookup:`contains <gis-"
"contains>` is the spatial lookup type, ``pnt`` is the parameter (which may "
"be a :class:`~django.contrib.gis.geos.GEOSGeometry` object or a string of "
"GeoJSON , WKT, or HEXEWKB), and ``rst`` is a :class:`~django.contrib.gis."
"gdal.GDALRaster` object."
msgstr ""
"Dalam kasus ini, ``poly`` adalah bidang geofgrafis, :lookup:`contains "
"1` adalah jenis pencarian spasial, ``pnt`` adalah parameter (yang mungkin "
"berupa obyek :class:`~django.contrib.gis.geos.GEOSGeometry` atau string dari "
"GeoJSON , WKT, atau HEXEWKB), dan ``rst`` adalah sebuah obyek :class:"
"`~django.contrib.gis.gdal.GDALRaster`."

msgid "Raster Lookups"
msgstr "Pencarian Raster"

msgid ""
"The raster lookup syntax is similar to the syntax for geometries. The only "
"difference is that a band index can be specified as additional input. If no "
"band index is specified, the first band is used by default (index ``0``). In "
"that case the syntax is identical to the syntax for geometry lookups."
msgstr ""
"Sintaksis pencarian raster mitip pada sintaksis untuk geometri. Perbedaan "
"hanya bahwa peta indesk dapat ditentukan sebagai input tambahan. Jika tidak "
"ada pita indeks ditentukan, pita pertama digunakan secara awalan (indeks "
"``0``). Dalam kasus itu sintaksis mirip ke sintaksis untuk pencarian "
"geometri."

msgid ""
"To specify the band index, an additional parameter can be specified on both "
"sides of the lookup. On the left hand side, the double underscore syntax is "
"used to pass a band index. On the right hand side, a tuple of the raster and "
"band index can be specified."
msgstr ""
"Untuk menentukan pita indeks, sebuah parameter tambahan dapat ditentukan "
"pada kedua sisi dari pencarian. Pada sisi tangan kiri, sintaksis garis bawah "
"ganda digunakan peta indeks. Pada sisi tangan kanan, tuple dari raster dan "
"pita indeks dapat ditentukan."

msgid ""
"This results in the following general form for lookups involving rasters "
"(assuming the ``Elevation`` model used in the :doc:`model-api`)::"
msgstr ""
"Hasil ini dalam formulir umum berikut untuk pencarian melibarkan raster "
"(menganggap model ``Elevation`` digunakan dalam :doc:`model-api`):: "

msgid ""
"On the left hand side of the example, ``rast`` is the geographic raster "
"field and :lookup:`contains <gis-contains>` is the spatial lookup type. On "
"the right hand side, ``geom`` is a geometry input and ``rst`` is a :class:"
"`~django.contrib.gis.gdal.GDALRaster` object. The band index defaults to "
"``0`` in the first two queries and is set to ``1`` on the others."
msgstr ""
"Pada sisi tangan kiri dari contoh, ``rast`` adalah bidang raster geografis "
"dan :lookup:`contains 1` adalah jenis pencarian spasial. Pada sisi tangan "
"kanan, ``geom`` adalah masukan geometri dan ``rst`` adalah sebuah obyek :"
"class:`~django.contrib.gis.gdal.GDALRaster`. Pinta indeks awalan pada ``0`` "
"dalam permintaan dua pertama dan disetel menjadi ``1`` pada lainnya."

msgid ""
"While all spatial lookups can be used with raster objects on both sides, not "
"all underlying operators natively accept raster input. For cases where the "
"operator expects geometry input, the raster is automatically converted to a "
"geometry. It's important to keep this in mind when interpreting the lookup "
"results."
msgstr ""
"Selagi semuan pencarian spasial dapat digunakan dengan obyek raster pada "
"kedua sisi tidak semua penghubung pokok asli menerima masukan raster. Untuk "
"kasus-kasus dimana penghubung mengharapkan masukan geometri, raster adalah "
"secara otomatis dirubah kegeometri. itu adalah penting menjaga ini dalam "
"pikiran ketika manafsirkan hasil pencarian."

msgid ""
"The type of raster support is listed for all lookups in the :ref:"
"`compatibility table <spatial-lookup-compatibility>`. Lookups involving "
"rasters are currently only available for the PostGIS backend."
msgstr ""
"Jenis dari dukungan raster terdaftar untuk semua pencarian dalam :ref:"
"`compatibility table 1`. Pencarian melibatkan raster saat ini hanya tersedia "
"untuk backend PostGIS."

msgid "Distance Queries"
msgstr "Permintaan Jarak"

msgid "Introduction"
msgstr "Kata Pengantar"

msgid ""
"Distance calculations with spatial data is tricky because, unfortunately, "
"the Earth is not flat.  Some distance queries with fields in a geographic "
"coordinate system may have to be expressed differently because of "
"limitations in PostGIS.  Please see the :ref:`selecting-an-srid` section in "
"the :doc:`model-api` documentation for more details."
msgstr ""
"Perhitungan jarak dengan data spasial adalah rumit karena, sayangnya, Bumi "
"tidak datar. Beberpa permintaan jarak dengan bidang dalam sistem kordinat "
"geografis mungkin harus dinyatakan berbeda karena batasan dalam PostGIS. "
"Silahkan lihat dokumentasi :ref:`selecting-an-srid` section in the :doc:"
"`model-api` untuk lebih rinci."

msgid "Distance Lookups"
msgstr "Pencarian Jarak"

msgid "*Availability*: PostGIS, Oracle, SpatiaLite, PGRaster (Native)"
msgstr "*Tersedia*: PostGIS, Oracle, SpatiaLite, PGRaster (Asli)"

msgid "The following distance lookups are available:"
msgstr "Pencarian jarak berikut tersedia:"

msgid ":lookup:`distance_lt`"
msgstr ":lookup:`distance_lt`"

msgid ":lookup:`distance_lte`"
msgstr ":lookup:`distance_lte`"

msgid ":lookup:`distance_gt`"
msgstr ":lookup:`distance_gt`"

msgid ":lookup:`distance_gte`"
msgstr ":lookup:`distance_gte`"

msgid ":lookup:`dwithin`"
msgstr ":lookup:`dwithin`"

msgid ""
"For *measuring*, rather than querying on distances, use the :class:`~django."
"contrib.gis.db.models.functions.Distance` function."
msgstr ""
"Untuk *mengukur*, daripada meminta pada jarak, gunakan fungsi :class:"
"`~django.contrib.gis.db.models.functions.Distance`."

msgid "Distance lookups take a tuple parameter comprising:"
msgstr "Pencarian jarak meliputi parameter tuple."

msgid "A geometry or raster to base calculations from; and"
msgstr "Geometri atau raster untuk perhitungan dasar dari; dan"

msgid ""
"A number or :class:`~django.contrib.gis.measure.Distance` object containing "
"the distance."
msgstr ""
"Sejumlah atau obyek :class:`~django.contrib.gis.measure.Distance` mengandung "
"jarak."

msgid ""
"If a :class:`~django.contrib.gis.measure.Distance` object is used, it may be "
"expressed in any units (the SQL generated will use units converted to those "
"of the field); otherwise, numeric parameters are assumed to be in the units "
"of the field."
msgstr ""
"Jika obyek :class:`~django.contrib.gis.measure.Distance` digunakan, itu "
"mungkin dinyatakan dalam satuan apapun (SQL dibangkitkan akan menggunakan "
"unit untuk merubah ke bidang tersebut); sebaliknya parameter numerik "
"dianggap berada dalam satuan dari bidang."

msgid ""
"In PostGIS, ``ST_Distance_Sphere`` does *not* limit the geometry types "
"geographic distance queries are performed with. [#fndistsphere15]_  However, "
"these queries may take a long time, as great-circle distances must be "
"calculated on the fly for *every* row in the query.  This is because the "
"spatial index on traditional geometry fields cannot be used."
msgstr ""
"Dalam PostGIS, ``ST_Distance_Sphere`` *tidak* membatasi permintaan jarak "
"geografis jenis geometri dilakukan dengan. [#fndistsphere15]_ Bagaimanapun, "
"permintaan ini mungkin memakan waktu lama, ketika jarak lingkaran-besar "
"harus dihitung dengan cepat untuk *setiap*baris dalam permintaan. Ini karena "
"indeks spasial pada bidang geometri tradisional tidak dapat digunakan."

msgid ""
"For much better performance on WGS84 distance queries, consider using :ref:"
"`geography columns <geography-type>` in your database instead because they "
"are able to use their spatial index in distance queries. You can tell "
"GeoDjango to use a geography column by setting ``geography=True`` in your "
"field definition."
msgstr ""
"tUntuk penampilan lebih baik pada permintaan jarak WGS84, pertimbangkan "
"menggunakan  :ref:`geography columns 1` dalam basisdata anda sebagai "
"gantinya karena mereka dapat menggunakan indeks spasial mereka di permintaan "
"jarak. Anda dapat memberitahu GeoDjango menggunakan kolom geografi dengan "
"mengatur ``geography=True`` dalam penentuan bidang anda."

msgid ""
"For example, let's say we have a ``SouthTexasCity`` model (from the "
"`GeoDjango distance tests`__ ) on a *projected* coordinate system valid for "
"cities in southern Texas::"
msgstr ""
"Sebagai contoh, mari kita katakan kami mempunyai model "
"``SouthTexasCity`` (dari `GeoDjango distance tests`__ ) pada sebuah sistem "
"kordinat *proyeksi* sah untuk kota-kota di selatan Texas::"

msgid "Then distance queries may be performed as follows::"
msgstr "Kemudian permintaan jarak mungkin dilakukan sebagai berikut::"

msgid ""
"Raster queries work the same way by simply replacing the geometry field "
"``point`` with a raster field, or the ``pnt`` object with a raster object, "
"or both. To specify the band index of a raster input on the right hand side, "
"a 3-tuple can be passed to the lookup as follows::"
msgstr ""

msgid ""
"Where the band with index 2 (the third band) of the raster ``rst`` would be "
"used for the lookup."
msgstr ""
"Dimana pita dengan indeks 2 (pita ketiga) dari raster ``rst`` akan digunakan "
"untuk pencarian."

msgid "Compatibility Tables"
msgstr "Tabel Kesesuaian"

msgid ""
"The following table provides a summary of what spatial lookups are available "
"for each spatial database backend. The PostGIS Raster (PGRaster) lookups are "
"divided into the three categories described in the :ref:`raster lookup "
"details <spatial-lookup-raster>`: native support ``N``, bilateral native "
"support ``B``, and geometry conversion support ``C``."
msgstr ""

msgid "Lookup Type"
msgstr "Jenis Pencarian"

msgid "PostGIS"
msgstr "PostGIS"

msgid "Oracle"
msgstr "Oracle"

msgid "MySQL [#]_"
msgstr "MySQL [#]_"

msgid "SpatiaLite"
msgstr "SpatiaLite"

msgid "PGRaster"
msgstr "PGRaster"

msgid ":lookup:`bbcontains`"
msgstr ":lookup:`bbcontains`"

msgid "X"
msgstr "X"

msgid "N"
msgstr "N"

msgid ":lookup:`bboverlaps`"
msgstr ":lookup:`bboverlaps`"

msgid ":lookup:`contained`"
msgstr ":lookup:`contained`"

msgid ":lookup:`contains <gis-contains>`"
msgstr ":lookup:`contains <gis-contains>`"

msgid "B"
msgstr "B"

msgid ":lookup:`contains_properly`"
msgstr ":lookup:`contains_properly`"

msgid ":lookup:`coveredby`"
msgstr ":lookup:`coveredby`"

msgid ":lookup:`covers`"
msgstr ":lookup:`covers`"

msgid ":lookup:`crosses`"
msgstr ":lookup:`crosses`"

msgid "C"
msgstr "C"

msgid ":lookup:`disjoint`"
msgstr ":lookup:`disjoint`"

msgid ":lookup:`equals`"
msgstr ":lookup:`equals`"

msgid ":lookup:`exact`"
msgstr ":lookup:`exact`"

msgid ":lookup:`intersects`"
msgstr ":lookup:`intersects`"

msgid ":lookup:`isvalid`"
msgstr ":lookup:`isvalid`"

msgid "X (LWGEOM)"
msgstr "X (LWGEOM)"

msgid ":lookup:`overlaps`"
msgstr ":lookup:`overlaps`"

msgid ":lookup:`relate`"
msgstr ":lookup:`relate`"

msgid ":lookup:`same_as`"
msgstr ":lookup:`same_as`"

msgid ":lookup:`touches`"
msgstr ":lookup:`touches`"

msgid ":lookup:`within`"
msgstr ":lookup:`within`"

msgid ":lookup:`left`"
msgstr ":lookup:`left`"

msgid ":lookup:`right`"
msgstr ":lookup:`right`"

msgid ":lookup:`overlaps_left`"
msgstr ":lookup:`overlaps_left`"

msgid ":lookup:`overlaps_right`"
msgstr ":lookup:`overlaps_right`"

msgid ":lookup:`overlaps_above`"
msgstr ":lookup:`overlaps_above`"

msgid ":lookup:`overlaps_below`"
msgstr ":lookup:`overlaps_below`"

msgid ":lookup:`strictly_above`"
msgstr ":lookup:`strictly_above`"

msgid ":lookup:`strictly_below`"
msgstr ":lookup:`strictly_below`"

msgid "Database functions"
msgstr "Fungsi basisdata"

msgid ""
"The following table provides a summary of what geography-specific database "
"functions are available on each spatial backend."
msgstr ""

msgid "Function"
msgstr "Fungsi"

msgid ":class:`Area`"
msgstr ":class:`Area`"

msgid ":class:`AsGeoJSON`"
msgstr ":class:`AsGeoJSON`"

msgid ":class:`AsGML`"
msgstr ":class:`AsGML`"

msgid ":class:`AsKML`"
msgstr ":class:`AsKML`"

msgid ":class:`AsSVG`"
msgstr ":class:`AsSVG`"

msgid ":class:`BoundingCircle`"
msgstr ":class:`BoundingCircle`"

msgid "X (≥ 12.1.0.2)"
msgstr "X (≥ 12.1.0.2)"

msgid ":class:`Centroid`"
msgstr ":class:`Centroid`"

msgid ":class:`Difference`"
msgstr ":class:`Difference`"

msgid "X (≥ 5.6.1)"
msgstr "X (≥ 5.6.1)"

msgid ":class:`Distance`"
msgstr ":class:`Distance`"

msgid ":class:`Envelope`"
msgstr ":class:`Envelope`"

msgid ":class:`ForceRHR`"
msgstr ":class:`ForceRHR`"

msgid ":class:`GeoHash`"
msgstr ":class:`GeoHash`"

msgid ":class:`Intersection`"
msgstr ":class:`Intersection`"

msgid ":class:`IsValid`"
msgstr ":class:`IsValid`"

msgid ":class:`Length`"
msgstr ":class:`Length`"

msgid ":class:`MakeValid`"
msgstr ":class:`MakeValid`"

msgid ":class:`MemSize`"
msgstr ":class:`MemSize`"

msgid ":class:`NumGeometries`"
msgstr ":class:`NumGeometries`"

msgid ":class:`NumPoints`"
msgstr ":class:`NumPoints`"

msgid ":class:`Perimeter`"
msgstr ":class:`Perimeter`"

msgid ":class:`PointOnSurface`"
msgstr ":class:`PointOnSurface`"

msgid ":class:`Reverse`"
msgstr ":class:`Reverse`"

msgid ":class:`Scale`"
msgstr ":class:`Scale`"

msgid ":class:`SnapToGrid`"
msgstr ":class:`SnapToGrid`"

msgid ":class:`SymDifference`"
msgstr ":class:`SymDifference`"

msgid ":class:`Transform`"
msgstr ":class:`Transform`"

msgid ":class:`Translate`"
msgstr ":class:`Translate`"

msgid ":class:`Union`"
msgstr ":class:`Union`"

msgid "Aggregate Functions"
msgstr "Fungsi Kumpulan"

msgid ""
"The following table provides a summary of what GIS-specific aggregate "
"functions are available on each spatial backend. Please note that MySQL does "
"not support any of these aggregates, and is thus excluded from the table."
msgstr ""

msgid "Aggregate"
msgstr "Kumpulan"

msgid ":class:`Collect`"
msgstr ":class:`Collect`"

msgid ":class:`Extent`"
msgstr ":class:`Extent`"

msgid ":class:`Extent3D`"
msgstr ":class:`Extent3D`"

msgid ":class:`MakeLine`"
msgstr ":class:`MakeLine`"

msgid "Footnotes"
msgstr "Catatan kaki"

msgid ""
"*See* Open Geospatial Consortium, Inc., `OpenGIS Simple Feature "
"Specification For SQL <http://www.opengis.org/docs/99-049.pdf>`_, Document "
"99-049 (May 5, 1999), at  Ch. 3.2.5, p. 3-11 (SQL Textual Representation of "
"Geometry)."
msgstr ""

msgid ""
"*See* `PostGIS EWKB, EWKT and Canonical Forms <https://postgis.net/docs/"
"using_postgis_dbmanagement.html#EWKB_EWKT>`_, PostGIS documentation at Ch. "
"4.1.2."
msgstr ""

msgid ""
"*See* Howard Butler, Martin Daly, Allan Doyle, Tim Schaub, & Christopher "
"Schmidt, `The GeoJSON Format Specification <http://geojson.org/geojson-spec."
"html>`_, Revision 1.0 (June 16, 2008)."
msgstr ""
"*Lihat* Howard Butler, Martin Daly, Allan Doyle, Tim Schaub, & Christopher "
"Schmidt, `The GeoJSON Format Specification <http://geojson.org/geojson-spec."
"html>`_, Perbaikan 1.0 (16 Juni 2008)"

msgid ""
"*See* `PostGIS documentation <https://postgis.net/docs/ST_DistanceSphere."
"html>`_ on ``ST_DistanceSphere``."
msgstr ""
"*Lihat* `PostGIS documentation <https://postgis.net/docs/ST_DistanceSphere."
"html>`_ pada ``ST_DistanceSphere``."

msgid ""
"*See* `Creating Spatial Indexes <https://dev.mysql.com/doc/refman/en/"
"creating-spatial-indexes.html>`_ in the MySQL Reference Manual:"
msgstr ""
"*LIhat* `Creating Spatial Indexes <https://dev.mysql.com/doc/refman/en/"
"creating-spatial-indexes.html>`_ di Manual Acuan MySQL:"

msgid ""
"For MyISAM tables, ``SPATIAL INDEX`` creates an R-tree index. For storage "
"engines that support nonspatial indexing of spatial columns, the engine "
"creates a B-tree index. A B-tree index on spatial values will be useful for "
"exact-value lookups, but not for range scans."
msgstr ""

msgid "Refer :ref:`mysql-spatial-limitations` section for more details."
msgstr "Mengacu bagian :ref:`mysql-spatial-limitations` untuk rincian lebih."

msgid "Deploying GeoDjango"
msgstr "Menyebarkan GeoDjango"

msgid ""
"Basically, the deployment of a GeoDjango application is not different from "
"the deployment of a normal Django application. Please consult Django's :doc:"
"`deployment documentation </howto/deployment/index>`."
msgstr ""

msgid ""
"GeoDjango uses the GDAL geospatial library which is not thread safe at this "
"time.  Thus, it is *highly* recommended to not use threading when deploying "
"-- in other words, use an appropriate configuration of Apache."
msgstr ""

msgid ""
"For example, when configuring your application with ``mod_wsgi``, set the "
"``WSGIDaemonProcess`` attribute ``threads`` to ``1``, unless Apache may "
"crash when running your GeoDjango application.  Increase the number of "
"``processes`` instead."
msgstr ""

msgid "Geographic Feeds"
msgstr "Umpan Geografis"

msgid ""
"GeoDjango has its own :class:`Feed` subclass that may embed location "
"information in RSS/Atom feeds formatted according to either the `Simple "
"GeoRSS`__ or `W3C Geo`_ standards.  Because GeoDjango's syndication API is a "
"superset of Django's, please consult :doc:`Django's syndication "
"documentation </ref/contrib/syndication>` for details on general usage."
msgstr ""

msgid "API Reference"
msgstr "Acuan API"

msgid "``Feed`` Subclass"
msgstr "Subkelas ``Feed``"

msgid ""
"In addition to methods provided by the :class:`django.contrib.syndication."
"views.Feed` base class, GeoDjango's ``Feed`` class provides the following "
"overrides. Note that these overrides may be done in multiple ways::"
msgstr ""
"Sebagai tambahan pada metode disediakan oleh kelas dasar :class:`django."
"contrib.syndication.views.Feed`, kelas ``Feed`` GeoDjango menyediakan "
"penimpaan berikut. Catat bahwa penimpaan ini mungkin dilakukan dalam banyak "
"cara::"

msgid ""
"Takes the object returned by ``get_object()`` and returns the *feed's* "
"geometry. Typically this is a ``GEOSGeometry`` instance, or can be a tuple "
"to represent a point or a box. For example::"
msgstr ""
"Ambil obyek dikembalikan oleh ``get_object()`` dan mengembalikan geometri "
"*feed*. Khususnya ini adalah instance ``GEOSGeometry``, atau dapat berupa "
"sebuah tuple untuk mewakili titik atau sebuah kotak. Sebagai contoh::"

msgid ""
"Set this to return the geometry for each *item* in the feed. This can be a "
"``GEOSGeometry`` instance, or a tuple that represents a point coordinate or "
"bounding box. For example::"
msgstr ""
"Setel ini untuk mengembalikan geometri untuk setiap *item* dalam umpan. Ini "
"dapat berupa instance ``GEOSGeometry``, atau tuple yang mewakili titik "
"kordinat atau kotak batasan. Sebagai contoh::"

msgid "``SyndicationFeed`` Subclasses"
msgstr "Subkelas ``SyndicationFeed``"

msgid ""
"The following :class:`django.utils.feedgenerator.SyndicationFeed` subclasses "
"are available:"
msgstr ""
"Subkelas :class:`django.utils.feedgenerator.SyndicationFeed`  berikut "
"tersedia:"

msgid ""
"`W3C Geo`_ formatted feeds only support :class:`~django.contrib.gis.db."
"models.PointField` geometries."
msgstr ""
"Umpan berbentuk `W3C Geo`_  hanya mendukung geometri :class:`~django.contrib."
"gis.db.models.PointField`."

msgid "GeoDjango Forms API"
msgstr "API Formulir GeoDjango"

msgid ""
"GeoDjango provides some specialized form fields and widgets in order to "
"visually display and edit geolocalized data on a map. By default, they use "
"`OpenLayers`_-powered maps, with a base WMS layer provided by `NASA`_."
msgstr ""

msgid "Field arguments"
msgstr "Argumen bidang"

msgid ""
"In addition to the regular :ref:`form field arguments <core-field-"
"arguments>`, GeoDjango form fields take the following optional arguments."
msgstr ""
"Sebagai tambahan pada :ref:`form field arguments 1` biasa, bidang formulir "
"GeoDjango mengambil argumen pilihan berikut."

msgid "``srid``"
msgstr "``srid``"

msgid ""
"This is the SRID code that the field value should be transformed to. For "
"example, if the map widget SRID is different from the SRID more generally "
"used by your application or database, the field will automatically convert "
"input values into that SRID."
msgstr ""

msgid "``geom_type``"
msgstr "``geom_type``"

msgid ""
"You generally shouldn't have to set or change that attribute which should be "
"setup depending on the field class. It matches the OpenGIS standard geometry "
"name."
msgstr ""

msgid "Form field classes"
msgstr "Kelas-kelas bidang formulir"

msgid "``GeometryField``"
msgstr "``GeometryField``"

msgid "``PointField``"
msgstr "``PointField``"

msgid "``LineStringField``"
msgstr "``LineStringField``"

msgid "``PolygonField``"
msgstr "``PolygonField``"

msgid "``MultiPointField``"
msgstr "``MultiPointField``"

msgid "``MultiLineStringField``"
msgstr "``MultiLineStringField``"

msgid "``MultiPolygonField``"
msgstr "``MultiPolygonField``"

msgid "``GeometryCollectionField``"
msgstr "``GeometryCollectionField``"

msgid "Form widgets"
msgstr "Widget formulir"

msgid ""
"GeoDjango form widgets allow you to display and edit geographic data on a "
"visual map. Note that none of the currently available widgets supports 3D "
"geometries, hence geometry fields will fallback using a simple ``Textarea`` "
"widget for such data."
msgstr ""

msgid "Widget attributes"
msgstr "Atribut widget"

msgid ""
"GeoDjango widgets are template-based, so their attributes are mostly "
"different from other Django widget attributes."
msgstr ""

msgid "The OpenGIS geometry type, generally set by the form field."
msgstr "Jenis geometri OpenGis, umumnya disetel oleh bidang formulir."

msgid "Height and width of the widget map (default is 400x600)."
msgstr "Tinggi dan lebar dari peta widget (awalan adalah 400x600)."

msgid "SRID code used by the map (default is 4326)."
msgstr "Kode SRID digunakan oleh peta (awalan adalah 4326)."

msgid ""
"Boolean value specifying if a textarea input showing the serialized "
"representation of the current geometry is visible, mainly for debugging "
"purposes (default is ``False``)."
msgstr ""

msgid ""
"Indicates if the widget supports edition of 3D data (default is ``False``)."
msgstr ""
"Menunjukkan jika edisi dukungan widget dari data 3D (awalan adalah "
"``False``). "

msgid "The template used to render the map widget."
msgstr "Cetakan digunakan untuk membangun widget peta."

msgid ""
"You can pass widget attributes in the same manner that for any other Django "
"widget. For example::"
msgstr ""
"Anda dapat melewatkan atribut widget dalam cara sama yang untuk widget "
"Django apapun. Sebagai contoh::"

msgid "Widget classes"
msgstr "Kelas-kelas widget"

msgid "``BaseGeometryWidget``"
msgstr "``BaseGeometryWidget``"

msgid ""
"This is an abstract base widget containing the logic needed by subclasses. "
"You cannot directly use this widget for a geometry field. Note that the "
"rendering of GeoDjango widgets is based on a template, identified by the :"
"attr:`template_name` class attribute."
msgstr ""
"Ini adalah sebuah widget dasar jelas mengandung logika dibutuhkan oleh sub "
"kelas. Anda tidak dapat secara langsung menggunakan widget ini untuk bidang "
"geometri. Cata bahwa pembangunan dari widget GeoDjango berdasarkan pada "
"sebuah cetakan, dicirikan oleh atribut kelas :attr:`template_name`."

msgid "``OpenLayersWidget``"
msgstr "``OpenLayersWidget``"

msgid ""
"This is the default widget used by all GeoDjango form fields. "
"``template_name`` is ``gis/openlayers.html``."
msgstr ""
"Ini adalah widget awalan digunakan oleh semua bidang formulir GeoDjango. "
"``template_name`` adalah ``gis/openlayers.html``."

msgid ""
"``OpenLayersWidget`` and :class:`OSMWidget` use the ``openlayers.js`` file "
"hosted on the ``cdnjs.cloudflare.com`` content-delivery network. You can "
"subclass these widgets in order to specify your own version of the "
"``OpenLayers.js`` file `tailored to your needs`_ in the ``js`` property of "
"the inner ``Media`` class (see :ref:`assets-as-a-static-definition`)."
msgstr ""

msgid ""
"Older versions use ``OpenLayers.js`` from ``openlayers.org`` which isn't "
"suitable for production use since it offers no guaranteed uptime and runs on "
"a slow server."
msgstr ""

msgid "Also, the widget nows uses OpenLayers 3 instead of OpenLayers 2."
msgstr "Juga, widget sekarang menggunakan OpenLayer 3 daripada OpenLayer 2."

msgid "``OSMWidget``"
msgstr "``OSMWidget``"

msgid ""
"This widget uses an OpenStreetMap base layer to display geographic objects "
"on. Attributes are:"
msgstr ""
"Widget ini menggunakan lapisan dasar OpenStreetMap untuk menampilkan obyek "
"geografik. Atribut-atribut adalah:"

msgid "``gis/openlayers-osm.html``"
msgstr "``gis/openlayers-osm.html``"

msgid ""
"The default center latitude and longitude are ``47`` and ``5``, "
"respectively, which is a location in eastern France."
msgstr ""

msgid ""
"The :class:`OpenLayersWidget` note about JavaScript file hosting above also "
"applies here. See also this `FAQ answer`_ about ``https`` access to map "
"tiles."
msgstr ""

msgid ""
"OpenLayers 2.x has been dropped in favor of OpenLayers 3. If you extend the "
"``gis/openlayers-osm.html`` template, please review your custom template."
msgstr ""

msgid "Geographic Database Functions"
msgstr "Fungsi Basisdata Geografis"

msgid ""
"The functions documented on this page allow users to access geographic "
"database functions to be used in annotations, aggregations, or filters in "
"Django."
msgstr ""

msgid ""
"Not all backends support all functions, so refer to the documentation of "
"each function to see if your database backend supports the function you want "
"to use. If you call a geographic function on a backend that doesn't support "
"it, you'll get a ``NotImplementedError`` exception."
msgstr ""

msgid "Function's summary:"
msgstr "Ringkasan fungsi:"

msgid "Measurement"
msgstr "Pengukuran"

msgid "Relationships"
msgstr "Hubungan"

msgid "Operations"
msgstr "Operasi"

msgid "Editors"
msgstr "Penyunting"

msgid "Output format"
msgstr "Bentuk keluaran"

msgid "Miscellaneous"
msgstr "Bermacam-macam"

msgid "``Area``"
msgstr "``Area``"

msgid ""
"*Availability*: MySQL, Oracle, `PostGIS <https://postgis.net/docs/ST_Area."
"html>`__, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, Oracle, `PostGIS <https://postgis.net/docs/ST_Area."
"html>`__, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the area of the "
"field as an :class:`~django.contrib.gis.measure.Area` measure."
msgstr ""

msgid ""
"MySQL and SpatiaLite without LWGEOM don't support area calculations on "
"geographic SRSes."
msgstr ""

msgid ""
"In older versions, a raw value was returned on MySQL when used on projected "
"SRS."
msgstr ""
"Dalam versi terlama, nilai mentah dikembalikan pada MySQL ketika digunakan "
"pada SRS yang diproyeksikan."

msgid "``AsGeoJSON``"
msgstr "``AsGeoJSON``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_AsGeoJSON.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_AsGeoJSON.html>`__, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a `GeoJSON "
"<http://geojson.org/>`_ representation of the geometry. Note that the result "
"is not a complete GeoJSON structure but only the ``geometry`` key content of "
"a GeoJSON structure. See also :doc:`/ref/contrib/gis/serializers`."
msgstr ""

msgid "Keyword Argument"
msgstr "Argumen Katakunci"

msgid "Description"
msgstr "Deskripsi"

msgid "``bbox``"
msgstr "``bbox``"

msgid ""
"Set this to ``True`` if you want the bounding box to be included in the "
"returned GeoJSON."
msgstr ""
"Setel ini menjadi ``True`` jika anda ingin membatasi kotak untuk disertakan "
"dalam GeoJSON yang dikembalikan."

msgid "``crs``"
msgstr "``crs``"

msgid ""
"Set this to ``True`` if you want the coordinate reference system to be "
"included in the returned GeoJSON."
msgstr ""
"Setel ini menjadi ``True`` jika anda ingin sistem acuan kordinat untuk "
"disertakan dalam GeoJSON yang dikembalikan."

msgid "``precision``"
msgstr "``ketelitian``"

msgid ""
"It may be used to specify the number of significant digits for the "
"coordinates in the GeoJSON representation -- the default value is 8."
msgstr ""

msgid "``AsGML``"
msgstr "``AsGML``"

msgid ""
"*Availability*: Oracle, `PostGIS <https://postgis.net/docs/ST_AsGML."
"html>`__, SpatiaLite"
msgstr ""
"*Tersedia*: Oracle, `PostGIS <https://postgis.net/docs/ST_AsGML.html>`__, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a `Geographic "
"Markup Language (GML)`__ representation of the geometry."
msgstr ""

msgid ""
"Specifies the number of significant digits for the coordinates in the GML "
"representation -- the default value is 8. Ignored on Oracle."
msgstr ""

msgid "``version``"
msgstr "``versi``"

msgid "Specifies the GML version to use: 2 (default) or 3."
msgstr "Menentukan versi GML untuk menggunakan: 2 (awalan) atau 3."

msgid "Oracle support was added."
msgstr "Dukungan Oracle telah ditambahkan."

msgid "``AsKML``"
msgstr "``AsKML``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_AsKML.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_AsKML.html>`__, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a `Keyhole "
"Markup Language (KML)`__ representation of the geometry."
msgstr ""

msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the KML representation -- the default value is 8."
msgstr ""

msgid "``AsSVG``"
msgstr "``AsSVG``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_AsSVG.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_AsSVG.html>`__, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a `Scalable "
"Vector Graphics (SVG)`__ representation of the geometry."
msgstr ""

msgid "``relative``"
msgstr "``relative``"

msgid ""
"If set to ``True``, the path data will be implemented in terms of relative "
"moves. Defaults to ``False``, meaning that absolute moves are used instead."
msgstr ""

msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the SVG representation -- the default value is 8."
msgstr ""

msgid "``BoundingCircle``"
msgstr "``BoundingCircle``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_MinimumBoundingCircle."
"html>`__, `Oracle (≥ 12.1.0.2) <https://docs.oracle.com/database/121/SPATL/"
"sdo_geom-sdo_mbc.htm#SPATL1554>`_"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_MinimumBoundingCircle."
"html>`__, `Oracle (≥ 12.1.0.2) <https://docs.oracle.com/database/121/SPATL/"
"sdo_geom-sdo_mbc.htm#SPATL1554>`_"

msgid ""
"Accepts a single geographic field or expression and returns the smallest "
"circle polygon that can fully contain the geometry."
msgstr ""

msgid "The ``num_seg`` parameter is used only on PostGIS."
msgstr ""

msgid "``Centroid``"
msgstr "``Centroid``"

msgid ""
"*Availability*: MySQL, `PostGIS <https://postgis.net/docs/ST_Centroid."
"html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, `PostGIS <https://postgis.net/docs/ST_Centroid.html>`__, "
"Oracle, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the ``centroid`` "
"value of the geometry."
msgstr ""

msgid "``Difference``"
msgstr "``Difference``"

msgid ""
"*Availability*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_Difference.html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_Difference.html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts two geographic fields or expressions and returns the geometric "
"difference, that is the part of geometry A that does not intersect with "
"geometry B."
msgstr ""

msgid "MySQL support was added."
msgstr "Dukungan MySQL telah ditambahkan."

msgid "``Distance``"
msgstr "``Distance``"

msgid ""
"*Availability*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_Distance.html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/ST_Distance."
"html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts two geographic fields or expressions and returns the distance "
"between them, as a :class:`~django.contrib.gis.measure.Distance` object. On "
"MySQL, a raw float value is returned when the coordinates are geodetic."
msgstr ""

msgid ""
"On backends that support distance calculation on geodetic coordinates, the "
"proper backend function is automatically chosen depending on the SRID value "
"of the geometries (e.g. `ST_DistanceSphere <https://postgis.net/docs/"
"ST_DistanceSphere.html>`__ on PostGIS)."
msgstr ""

msgid ""
"When distances are calculated with geodetic (angular) coordinates, as is the "
"case with the default WGS84 (4326) SRID, you can set the ``spheroid`` "
"keyword argument to decide if the calculation should be based on a simple "
"sphere (less accurate, less resource-intensive) or on a spheroid (more "
"accurate, more resource-intensive)."
msgstr ""
"Ketika jarak dihitung dengan kordinat (bersiku-siku) geodetic, seperti "
"halnya dengan awalan SRID WGS84 (4326), anda dapat menyetel argumen kata "
"kunci ``spheroid`` untuk memutuskan jika perhitungan harus berdasarkan pada "
"bulatan sederhana (kurang akurat, kurang sumber daya-intensif) atau pada "
"sebuah berbentuk bola (lebih akurat, lebih sumber daya-intensif)"

msgid ""
"In the following example, the distance from the city of Hobart to every "
"other :class:`~django.contrib.gis.db.models.PointField` in the "
"``AustraliaCity`` queryset is calculated::"
msgstr ""

msgid ""
"Because the ``distance`` attribute is a :class:`~django.contrib.gis.measure."
"Distance` object, you can easily express the value in the units of your "
"choice. For example, ``city.distance.mi`` is the distance value in miles and "
"``city.distance.km`` is the distance value in kilometers. See :doc:`measure` "
"for usage details and the list of :ref:`supported_units`."
msgstr ""

msgid "``Envelope``"
msgstr "``Envelope``"

msgid ""
"*Availability*: MySQL, `PostGIS <https://postgis.net/docs/ST_Envelope."
"html>`__, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, `PostGIS <https://postgis.net/docs/ST_Envelope.html>`__, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the geometry "
"representing the bounding box of the geometry."
msgstr ""

msgid "``ForceRHR``"
msgstr "``ForceRHR``"

msgid "*Availability*: `PostGIS <https://postgis.net/docs/ST_ForceRHR.html>`__"
msgstr "*Tersedia*: `PostGIS <https://postgis.net/docs/ST_ForceRHR.html>`__"

msgid ""
"Accepts a single geographic field or expression and returns a modified "
"version of the polygon/multipolygon in which all of the vertices follow the "
"right-hand rule."
msgstr ""

msgid "``GeoHash``"
msgstr "``GeoHash``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_GeoHash.html>`__, "
"SpatiaLite (LWGEOM)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_GeoHash.html>`__, "
"SpatiaLite (LWGEOM)"

msgid ""
"Accepts a single geographic field or expression and returns a `GeoHash`__ "
"representation of the geometry."
msgstr ""

msgid ""
"The ``precision`` keyword argument controls the number of characters in the "
"result."
msgstr ""

msgid "SpatiaLite support was added."
msgstr "Dukungan SpatiaLite  telah ditambahkan."

msgid "``Intersection``"
msgstr "``Intersection``"

msgid ""
"*Availability*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_Intersection.html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_Intersection.html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts two geographic fields or expressions and returns the geometric "
"intersection between them."
msgstr ""

msgid "``IsValid``"
msgstr "``IsValid``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_IsValid.html>`__, "
"Oracle, SpatiaLite (LWGEOM)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_IsValid.html>`__, Oracle, "
"SpatiaLite (LWGEOM)"

msgid ""
"Accepts a geographic field or expression and tests if the value is well "
"formed. Returns ``True`` if its value is a valid geometry and ``False`` "
"otherwise."
msgstr ""

msgid "SpatiaLite and Oracle support was added."
msgstr "Dukungan SpatiaLite dan Oracle telah ditambahkan."

msgid "``Length``"
msgstr "``Length``"

msgid ""
"*Availability*: MySQL, Oracle, `PostGIS <https://postgis.net/docs/ST_Length."
"html>`__, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, Oracle, `PostGIS <https://postgis.net/docs/ST_Length."
"html>`__, SpatiaLite"

msgid ""
"Accepts a single geographic linestring or multilinestring field or "
"expression and returns its length as a :class:`~django.contrib.gis.measure."
"Distance` measure."
msgstr ""

msgid ""
"On PostGIS and SpatiaLite, when the coordinates are geodetic (angular), you "
"can specify if the calculation should be based on a simple sphere (less "
"accurate, less resource-intensive) or on a spheroid (more accurate, more "
"resource-intensive) with the ``spheroid`` keyword argument."
msgstr ""

msgid "MySQL doesn't support length calculations on geographic SRSes."
msgstr "MySQL tidak mendukung dukungan perhitungan panjang pada geografis SRS."

msgid "In older versions, a raw value was returned on MySQL."
msgstr "Dalam versi terlama, nilai mentah dikembalikan pada MySQL."

msgid "``MakeValid``"
msgstr "``MakeValid``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_MakeValid.html>`__, "
"SpatiaLite (LWGEOM)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_MakeValid.html>`__, "
"SpatiaLite (LWGEOM)"

msgid ""
"Accepts a geographic field or expression and attempts to convert the value "
"into a valid geometry without losing any of the input vertices. Geometries "
"that are already valid are returned without changes. Simple polygons might "
"become a multipolygon and the result might be of lower dimension than the "
"input."
msgstr ""

msgid "``MemSize``"
msgstr "``MemSize``"

msgid "*Availability*: `PostGIS <https://postgis.net/docs/ST_MemSize.html>`__"
msgstr "*Tersedia*: `PostGIS <https://postgis.net/docs/ST_MemSize.html>`__"

msgid ""
"Accepts a single geographic field or expression and returns the memory size "
"(number of bytes) that the geometry field takes."
msgstr ""

msgid "``NumGeometries``"
msgstr "``NumGeometries``"

msgid ""
"*Availability*: MySQL, `PostGIS <https://postgis.net/docs/ST_NumGeometries."
"html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, `PostGIS <https://postgis.net/docs/ST_NumGeometries."
"html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the number of "
"geometries if the geometry field is a collection (e.g., a "
"``GEOMETRYCOLLECTION`` or ``MULTI*`` field). Returns 1 for single geometries."
msgstr ""

msgid "On MySQL, returns ``None`` for single geometries."
msgstr "Pada MySQL, mengembalikan ``None`` untuk geometri tunggal."

msgid "``NumPoints``"
msgstr "``NumPoints``"

msgid ""
"*Availability*: MySQL, `PostGIS <https://postgis.net/docs/ST_NPoints."
"html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL, `PostGIS <https://postgis.net/docs/ST_NPoints.html>`__, "
"Oracle, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the number of "
"points in the first linestring in the geometry field; otherwise returns "
"``None``."
msgstr ""

msgid "``Perimeter``"
msgstr "``Perimeter``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Perimeter.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Perimeter.html>`__, "
"Oracle, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns the perimeter of "
"the geometry field as a :class:`~django.contrib.gis.measure.Distance` object."
msgstr ""

msgid "``PointOnSurface``"
msgstr "``PointOnSurface``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_PointOnSurface."
"html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_PointOnSurface.html>`__, "
"Oracle, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a ``Point`` "
"geometry guaranteed to lie on the surface of the field; otherwise returns "
"``None``."
msgstr ""

msgid "``Reverse``"
msgstr "``Reverse``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Reverse.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Reverse.html>`__, Oracle, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a geometry with "
"reversed coordinates."
msgstr ""

msgid "``Scale``"
msgstr "``Scale``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Scale.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Scale.html>`__, SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a geometry with "
"scaled coordinates by multiplying them with the ``x``, ``y``, and optionally "
"``z`` parameters."
msgstr ""

msgid "``SnapToGrid``"
msgstr "``SnapToGrid``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_SnapToGrid.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_SnapToGrid.html>`__, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a geometry with "
"all points snapped to the given grid.  How the geometry is snapped to the "
"grid depends on how many numeric (either float, integer, or long) arguments "
"are given."
msgstr ""

msgid "Number of Arguments"
msgstr "Jumlah Argumen"

msgid "1"
msgstr "1"

msgid "A single size to snap both the X and Y grids to."
msgstr ""

msgid "2"
msgstr "2"

msgid "X and Y sizes to snap the grid to."
msgstr ""

msgid "4"
msgstr "4"

msgid "X, Y sizes and the corresponding X, Y origins."
msgstr ""

msgid "``SymDifference``"
msgstr "``SymDifference``"

msgid ""
"*Availability*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_SymDifference.html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/"
"ST_SymDifference.html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts two geographic fields or expressions and returns the geometric "
"symmetric difference (union without the intersection) between the given "
"parameters."
msgstr ""

msgid "``Transform``"
msgstr "``Transform``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Transform.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Transform.html>`__, "
"Oracle, SpatiaLite"

msgid ""
"Accepts a geographic field or expression and a SRID integer code, and "
"returns the transformed geometry to the spatial reference system specified "
"by the ``srid`` parameter."
msgstr ""

msgid ""
"What spatial reference system an integer SRID corresponds to may depend on "
"the spatial database used.  In other words, the SRID numbers used for Oracle "
"are not necessarily the same as those used by PostGIS."
msgstr ""

msgid "``Translate``"
msgstr "``Translate``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Translate.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Translate.html>`__, "
"SpatiaLite"

msgid ""
"Accepts a single geographic field or expression and returns a geometry with "
"its coordinates offset by the ``x``, ``y``, and optionally ``z`` numeric "
"parameters."
msgstr ""

msgid "``Union``"
msgstr "``Union``"

msgid ""
"*Availability*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/ST_Union."
"html>`__, Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: MySQL (≥ 5.6.1), `PostGIS <https://postgis.net/docs/ST_Union."
"html>`__, Oracle, SpatiaLite"

msgid ""
"Accepts two geographic fields or expressions and returns the union of both "
"geometries."
msgstr ""

msgid "GDAL API"
msgstr "API GDAL"

msgid ""
"`GDAL`__ stands for **Geospatial Data Abstraction Library**, and is a "
"veritable \"Swiss army knife\" of GIS data functionality.  A subset of GDAL "
"is the `OGR`__ Simple Features Library, which specializes in reading and "
"writing vector geographic data in a variety of standard formats."
msgstr ""

msgid ""
"GeoDjango provides a high-level Python interface for some of the "
"capabilities of OGR, including the reading and coordinate transformation of "
"vector spatial data and minimal support for GDAL's features with respect to "
"raster (image) data."
msgstr ""

msgid ""
"Although the module is named ``gdal``, GeoDjango only supports some of the "
"capabilities of OGR and GDAL's raster features at this time."
msgstr ""

msgid "Sample Data"
msgstr "Data Contoh"

msgid ""
"The GDAL/OGR tools described here are designed to help you read in your "
"geospatial data, in order for most of them to be useful you have to have "
"some data to work with.  If you're starting out and don't yet have any data "
"of your own to use, GeoDjango tests contain a number of simple data sets "
"that you can use for testing. You can download them here::"
msgstr ""

msgid "Vector Data Source Objects"
msgstr ""

msgid "``DataSource``"
msgstr "``DataSource``"

msgid ""
":class:`DataSource` is a wrapper for the OGR data source object that "
"supports reading data from a variety of OGR-supported geospatial file "
"formats and data sources using a simple, consistent interface.  Each data "
"source is represented by a :class:`DataSource` object which contains one or "
"more layers of data.  Each layer, represented by a :class:`Layer` object, "
"contains some number of geographic features (:class:`Feature`), information "
"about the type of features contained in that layer (e.g. points, polygons, "
"etc.), as well as the names and types of any additional fields (:class:"
"`Field`) of data that may be associated with each feature in that layer."
msgstr ""
":class:`DataSource` adalah sebuah pembungkus untuk obyek sumber data OGR "
"yang mendukung membaca data dari beragam dari bentuk berkas geospasial "
"didukung-OGR dan sumber data menggunakan sederhana, konsisten antarmuka. "
"Setiap sumber data diwakili oleh sebuah obyek :class:`DataSource` yang "
"mengandung satu atau lebih lapisan data. Setiap lapisan, diwakili oleh :"
"class:`Layer` object, mengandung beberapa nomor dari fitur-fitur geografik (:"
"class:`Feature`), informasi tentang jenis dari fitur-fitur mengandung di "
"lapisan itu (sebagai contoh titik, poligon, dll.), sama halnya nama-nama dan "
"jenis-jenis dari bidang tambahan apapun (:class:`Field`) dari data yang "
"mungkin terhubung dengan setiap fitur di lapisan itu."

msgid ""
"The constructor for ``DataSource`` only requires one parameter: the path of "
"the file you want to read. However, OGR also supports a variety of more "
"complex data sources, including databases, that may be accessed by passing a "
"special name string instead of a path. For more information, see the `OGR "
"Vector Formats`__ documentation. The :attr:`name` property of a "
"``DataSource`` instance gives the OGR name of the underlying data source "
"that it is using."
msgstr ""
"Pembangun untuk ``DataSource`` hanya membutuhkan satu parameter: jalur dari "
"berkas anda ingin baca. Bagaimanapun, OGR juga mendukung beragam sumber data "
"lebih rumit, termasuk basisdata, yang mungkin diakses dengan melewatkan "
"string nama khusus daripada jalur. Untuk informasi lebih, lihat dokumentasi "
"`OGR Vector Formats`__. Sifat :attr:`name` dari sebuah instance "
"``DataSource`` memberikan nama OGR dari sumber data pokok yang itu sedang "
"gunakan."

msgid ""
"The optional ``encoding`` parameter allows you to specify a non-standard "
"encoding of the strings in the source. This is typically useful when you "
"obtain ``DjangoUnicodeDecodeError`` exceptions while reading field values."
msgstr ""
"Pilihan parameter ``encoding`` mengizinkan anda menentukan penyandian bukan-"
"standar dari string di sumber. Ini khususnya berguna ketika anda mendapatkan "
"pengecualian ``DjangoUnicodeDecodeError`` selagi membaca nilai bidang."

msgid ""
"Once you've created your ``DataSource``, you can find out how many layers of "
"data it contains by accessing the :attr:`layer_count` property, or "
"(equivalently) by using the ``len()`` function. For information on accessing "
"the layers of data themselves, see the next section::"
msgstr ""
"Sekali anda telah membuat ``DataSource`` anda, anda dapat menemukan seberapa "
"banyak lapisan data itu kandung dengan mengakses sifat :attr:`layer_count`, "
"atau (setara) dengan menggunakan fungsi ``len()``. Untuk informasi pada "
"mengakses lapisan dari data mereka sendiri, lihat bagian lain::"

msgid "Returns the number of layers in the data source."
msgstr "Mengembalikan sejumlah lapisan di sumber data."

msgid "Returns the name of the data source."
msgstr "Mengembalikan nama dari sumber data."

msgid "``Layer``"
msgstr "``Lapisan``"

msgid ""
"``Layer`` is a wrapper for a layer of data in a ``DataSource`` object. You "
"never create a ``Layer`` object directly. Instead, you retrieve them from a :"
"class:`DataSource` object, which is essentially a standard Python container "
"of ``Layer`` objects. For example, you can access a specific layer by its "
"index (e.g. ``ds[0]`` to access the first layer), or you can iterate over "
"all the layers in the container in a ``for`` loop. The ``Layer`` itself acts "
"as a container for geometric features."
msgstr ""
"``Layer`` adalah sebuah pembungkus untuk lapisan dari data di obyek "
"``DataSource``. Anda tidak pernah membuat obyek ``Layer`` secara langsung. "
"Sebagai gantinya, anda mengambil mereka dari obyek :class:`DataSource`, yang "
"pada dasarnya wadah standar Python dari obyek ``Layer``. Sebagai contoh, "
"anda dapat mengakses lapisan khusus dengan indeksnya (sebagai contoh "
"``ds[0]`` untuk mengakses lapisan pertama), atau anda dapat mengulang "
"terhadap semua lapisan di wadah dalam perulangan ``loop``. ``Layer`` itu "
"sendiri bertindak sebagai sebuah wadah untuk fitur-fitur geometris."

msgid ""
"Typically, all the features in a given layer have the same geometry type. "
"The :attr:`geom_type` property of a layer is an :class:`OGRGeomType` that "
"identifies the feature type. We can use it to print out some basic "
"information about each layer in a :class:`DataSource`::"
msgstr ""
"Khususnya, semua fitur di lapisan yang diberikan mempunyai jenis geometri "
"sama. Sifat :attr:`geom_type` dari lapisan adalah sebuah :class:"
"`OGRGeomType` yang mencirikan jenis fitur. Kami dapat menggunakan itu untuk "
"mencetak beberapa informasi dasar tentang setiap lapisan di :class:"
"`DataSource`::"

msgid ""
"The example output is from the cities data source, loaded above, which "
"evidently contains one layer, called ``\"cities\"``, which contains three "
"point features. For simplicity, the examples below assume that you've stored "
"that layer in the variable ``layer``::"
msgstr ""
"Keluaran contoh adalah dari sumber data kota, dimuat diatas, yang ternyata "
"mengandung satu lapisan, dipanggil ``\"cities\"``, yang mengandung tida "
"titik fitur. Untuk kemudahan, contoh-contoh diatas menganggap bahwa anda "
"telah menyimpan lapisan itu di variabel ``layer``::"

msgid "Returns the name of this layer in the data source."
msgstr "Mengembalikan nama lapisan ini di sumber data."

msgid "Returns the number of features in the layer. Same as ``len(layer)``::"
msgstr ""
"Mengembalikan sejumlah fitur-fitur di lapisan. Sama seperti ``len(layer)``::"

msgid ""
"Returns the geometry type of the layer, as an :class:`OGRGeomType` object::"
msgstr ""
"Mengembalikan jenis geometri dari lapisan, sebagai sebuah obyek :class:"
"`OGRGeomType`::"

msgid ""
"Returns the number of fields in the layer, i.e the number of fields of data "
"associated with each feature in the layer::"
msgstr ""
"Mengembalikan sejumlah bidang di lapisan, yaitu sejumlah bidang dari data "
"terhubung dengan setiap fitur di lapisan::"

msgid "Returns a list of the names of each of the fields in this layer::"
msgstr "Mengembalikan daftar nama dari setiap bidang di lapisan ini::"

msgid ""
"Returns a list of the data types of each of the fields in this layer. These "
"are subclasses of ``Field``, discussed below::"
msgstr ""
"Mengembalikan daftar dari jenis-jenis data dari setiap bidang di lapisan "
"ini. Ini adalah subkelas dari ``Field``, diobrolkan dibawah::"

msgid ""
"Returns a list of the maximum field widths for each of the fields in this "
"layer::"
msgstr ""

msgid ""
"Returns a list of the numeric precisions for each of the fields in this "
"layer. This is meaningless (and set to zero) for non-numeric fields::"
msgstr ""

msgid ""
"Returns the spatial extent of this layer, as an :class:`Envelope` object::"
msgstr ""

msgid ""
"Property that returns the :class:`SpatialReference` associated with this "
"layer::"
msgstr ""
"Sifat yang mengembalikan :class:`SpatialReference` terkait dengan lapisan "
"ini::"

msgid ""
"If the :class:`Layer` has no spatial reference information associated with "
"it, ``None`` is returned."
msgstr ""

msgid ""
"Property that may be used to retrieve or set a spatial filter for this "
"layer. A spatial filter can only be set with an :class:`OGRGeometry` "
"instance, a 4-tuple extent, or ``None``. When set with something other than "
"``None``, only features that intersect the filter will be returned when "
"iterating over the layer::"
msgstr ""

msgid ""
"A method that returns a list of the values of a given field for each feature "
"in the layer::"
msgstr ""
"Sebuah metode yang mengembalikan sebuah daftar dari nilai-nilai dari bidang "
"yang diberikan untuk setiap fitur dalam lapisan::"

msgid ""
"A method that returns a list containing the geometry of each feature in the "
"layer. If the optional argument ``geos`` is set to ``True`` then the "
"geometries are converted to :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects. Otherwise, they are returned as :class:`OGRGeometry` objects::"
msgstr ""

msgid ""
"Returns a boolean indicating whether this layer supports the given "
"capability (a string).  Examples of valid capability strings include: "
"``'RandomRead'``, ``'SequentialWrite'``, ``'RandomWrite'``, "
"``'FastSpatialFilter'``, ``'FastFeatureCount'``, ``'FastGetExtent'``, "
"``'CreateField'``, ``'Transactions'``, ``'DeleteFeature'``, and "
"``'FastSetNextByIndex'``."
msgstr ""

msgid "``Feature``"
msgstr "``Feature``"

msgid ""
"``Feature`` wraps an OGR feature. You never create a ``Feature`` object "
"directly. Instead, you retrieve them from a :class:`Layer` object. Each "
"feature consists of a geometry and a set of fields containing additional "
"properties. The geometry of a field is accessible via its ``geom`` property, "
"which returns an :class:`OGRGeometry` object. A ``Feature`` behaves like a "
"standard Python container for its fields, which it returns as :class:`Field` "
"objects: you can access a field directly by its index or name, or you can "
"iterate over a feature's fields, e.g. in a ``for`` loop."
msgstr ""
"``Feature`` membungkus fitur OGR. Anda tidak pernah membuat obyek "
"``Feature`` secara langsung. Sebagai gantinya, anda mengambil mereka dari "
"obyek :class:`Layer`. Setiap fitur terdiri dari sebuah geometri dan "
"sekumpulan bidang mengandung sifat-sifat tambahan. Geometri dari sebuah "
"bidang adalah dapat diakses melalui sifat ``geom`` nya, yang mengembalikan "
"sebuah obyek :class:`OGRGeometry`. Sebuah ``Feature`` berperilaku seperti "
"wadah Python standar untuk bidangnya, yang itu dikembalikan sebagai obyek :"
"class:`Field`: anda dapat mengakses sebuah bidang secara langsung "
"berdasarkan indeks atau namanya, atau dapat berulang terhadap bidang-bidang "
"fitur, sebagai contoh di sebuah perulangan ``for``."

msgid "Returns the geometry for this feature, as an ``OGRGeometry`` object::"
msgstr ""
"Mengembalikan geometri untuk fotur ini, sebagai sebuah obyek "
"``OGRGeometry``::"

msgid ""
"A method that returns the value of the given field (specified by name) for "
"this feature, **not** a ``Field`` wrapper object::"
msgstr ""
"Sebuah metode yang mengembalikan nilai dari bidang yang diberikan "
"(ditentukan oleh nama) untuk fitur ini, **bukan** sebuah obyek pembungkus "
"``Field``::"

msgid ""
"Returns the type of geometry for this feature, as an :class:`OGRGeomType` "
"object. This will be the same for all features in a given layer and is "
"equivalent to the :attr:`Layer.geom_type` property of the :class:`Layer` "
"object the feature came from."
msgstr ""

msgid ""
"Returns the number of fields of data associated with the feature. This will "
"be the same for all features in a given layer and is equivalent to the :attr:"
"`Layer.num_fields` property of the :class:`Layer` object the feature came "
"from."
msgstr ""

msgid ""
"Returns a list of the names of the fields of data associated with the "
"feature. This will be the same for all features in a given layer and is "
"equivalent to the :attr:`Layer.fields` property of the :class:`Layer` object "
"the feature came from."
msgstr ""

msgid "Returns the feature identifier within the layer::"
msgstr ""

msgid ""
"Returns the name of the :class:`Layer` that the feature came from. This will "
"be the same for all features in a given layer::"
msgstr ""

msgid ""
"A method that returns the index of the given field name. This will be the "
"same for all features in a given layer::"
msgstr ""
"Sebuah metode yang mengembalikan indeks dari nama bidang yang diberikan. Ini "
"akan sama untuk semua fitur-fitur dalam lapisan yang diberikan::"

msgid "``Field``"
msgstr "``Field``"

msgid "Returns the name of this field::"
msgstr ""

msgid ""
"Returns the OGR type of this field, as an integer. The ``FIELD_CLASSES`` "
"dictionary maps these values onto subclasses of ``Field``::"
msgstr ""

msgid "Returns a string with the name of the data type of this field::"
msgstr ""

msgid ""
"Returns the value of this field. The ``Field`` class itself returns the "
"value as a string, but each subclass returns the value in the most "
"appropriate form::"
msgstr ""

msgid "Returns the width of this field::"
msgstr "Mengembalikan lebar bidang ini::"

msgid ""
"Returns the numeric precision of this field. This is meaningless (and set to "
"zero) for non-numeric fields::"
msgstr ""

msgid "Returns the value of the field as a double (float)::"
msgstr "Mengembalikan nilai dari bidang sebagai double (float)::"

msgid "Returns the value of the field as an integer::"
msgstr "Mengembalikan nilai dari bidang sebagai integer::"

msgid "Returns the value of the field as a string::"
msgstr "Mengembalikan nilai dari bidang sebagai deretan kalimat::"

msgid "Returns the value of the field as a tuple of date and time components::"
msgstr ""

msgid "``Driver``"
msgstr "``Driver``"

msgid ""
"The ``Driver`` class is used internally to wrap an OGR :class:`DataSource` "
"driver."
msgstr ""

msgid "Returns the number of OGR vector drivers currently registered."
msgstr ""

msgid "OGR Geometries"
msgstr "Geometri OGR"

msgid "``OGRGeometry``"
msgstr "``OGRGeometry``"

msgid ""
":class:`OGRGeometry` objects share similar functionality with :class:"
"`~django.contrib.gis.geos.GEOSGeometry` objects and are thin wrappers around "
"OGR's internal geometry representation. Thus, they allow for more efficient "
"access to data when using :class:`DataSource`. Unlike its GEOS counterpart, :"
"class:`OGRGeometry` supports spatial reference systems and coordinate "
"transformation::"
msgstr ""
"Obyek-obyek :class:`OGRGeometry` berbagi fungsi mirip dengan obyek :class:"
"`~django.contrib.gis.geos.GEOSGeometry` dan pembungkus tipis disekitar "
"perwakilan geometri internal OGR. Dengan demikian, mereka mengizinkan untuk "
"lebih efektid mengakses ke data ketika menggunakan :class:`DataSource`. "
"Tidak seprti pasangan GEOS nya, :class:`OGRGeometry` mendukung sistem acuan "
"spasial dan perubahan kordinat::"

msgid ""
"This object is a wrapper for the `OGR Geometry`__ class. These objects are "
"instantiated directly from the given ``geom_input`` parameter, which may be "
"a string containing WKT, HEX, GeoJSON, a ``buffer`` containing WKB data, or "
"an :class:`OGRGeomType` object. These objects are also returned from the :"
"class:`Feature.geom` attribute, when reading vector data from :class:`Layer` "
"(which is in turn a part of a :class:`DataSource`)."
msgstr ""
"Obyek ini adalah sebuah pembungkus untuk kelas `OGR Geometry`__. Obyek-obyek "
"ini diinstasiasikan secara langsung dari parameter ``geom_input`` yang "
"diberikan, yang mungkin berupa string mengandung WKT, HEX, GeoJSON, sebuah "
"``buffer`` mengandung data WKB, atau sebuah obyek :class:`OGRGeomType`. "
"Obyek-obyek ini juga dikembalikan dari atribut :class:`Feature.geom`, ketika "
"membaca data vektor dari :class:`Layer` (yaitu pada giliran bagian dari "
"sebuah :class:`DataSource`)."

msgid "Constructs an :class:`OGRGeometry` from the given GML string."
msgstr "Membangun sebuah :class:`OGRGeometry` dari string GML yang diberikan."

msgid "Constructs a :class:`Polygon` from the given bounding-box (a 4-tuple)."
msgstr ""

msgid ""
"Returns the number of points in a :class:`LineString`, the number of rings "
"in a :class:`Polygon`, or the number of geometries in a :class:"
"`GeometryCollection`. Not applicable to other geometry types."
msgstr ""

msgid ""
"Iterates over the points in a :class:`LineString`, the rings in a :class:"
"`Polygon`, or the geometries in a :class:`GeometryCollection`. Not "
"applicable to other geometry types."
msgstr ""

msgid ""
"Returns the point at the specified index for a :class:`LineString`, the "
"interior ring at the specified index for a :class:`Polygon`, or the geometry "
"at the specified index in a :class:`GeometryCollection`. Not applicable to "
"other geometry types."
msgstr ""

msgid ""
"Returns the number of coordinated dimensions of the geometry, i.e. 0 for "
"points, 1 for lines, and so forth::"
msgstr ""

msgid ""
"Returns or sets the coordinate dimension of this geometry. For example, the "
"value would be 2 for two-dimensional geometries."
msgstr ""

msgid "Returns the number of elements in this geometry::"
msgstr "Mengembalikan sejumlah unsur dalam geometri ini::"

msgid "Returns the number of points used to describe this geometry::"
msgstr ""
"Mengembalikan sejumlah titik digunakan untuk menggambarkan geometri ini::"

msgid "Alias for :attr:`point_count`."
msgstr "Nama lain untuk :attr:`point_count`."

msgid "Returns the type of this geometry, as an :class:`OGRGeomType` object."
msgstr ""
"Mengembalikan jenis dari geometri ini, sebagai sebuah obyek :class:"
"`OGRGeomType`."

msgid "Returns the name of the type of this geometry::"
msgstr "Mengembalikan nama dari jenis dari geometri ini::"

msgid ""
"Returns the area of this geometry, or 0 for geometries that do not contain "
"an area::"
msgstr ""

msgid "Returns the envelope of this geometry, as an :class:`Envelope` object."
msgstr ""

msgid ""
"Returns the envelope of this geometry as a 4-tuple, instead of as an :class:"
"`Envelope` object::"
msgstr ""

msgid ""
"This property controls the spatial reference for this geometry, or ``None`` "
"if no spatial reference system has been assigned to it. If assigned, "
"accessing this property returns a :class:`SpatialReference` object.  It may "
"be set with another :class:`SpatialReference` object, or any input that :"
"class:`SpatialReference` accepts. Example::"
msgstr ""
"Sifat ini mengendalikan acuan spasial untuk geometri ini, atau ``None`` jika "
"tidak ada sisterm acuan spasia telah diberikan ke itu. Jika diberikan, "
"mengakses sifat ini mengembalikan sebuah obyek :class:`SpatialReference`. "
"Itu mungkin disetel dengan obyek :class:`SpatialReference` lain, atau "
"masukan apapun yang :class:`SpatialReference` terima. Contoh::"

msgid ""
"Returns or sets the spatial reference identifier corresponding to :class:"
"`SpatialReference` of this geometry.  Returns ``None`` if there is no "
"spatial reference information associated with this geometry, or if an SRID "
"cannot be determined."
msgstr ""

msgid ""
"Returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"corresponding to this geometry."
msgstr ""

msgid "Returns a string representation of this geometry in GML format::"
msgstr ""

msgid "Returns a string representation of this geometry in HEX WKB format::"
msgstr ""

msgid "Returns a string representation of this geometry in JSON format::"
msgstr ""

msgid "Returns a string representation of this geometry in KML format."
msgstr ""

msgid ""
"Returns the size of the WKB buffer needed to hold a WKB representation of "
"this geometry::"
msgstr ""

msgid "Returns a ``buffer`` containing a WKB representation of this geometry."
msgstr ""

msgid "Returns a string representation of this geometry in WKT format."
msgstr ""

msgid "Returns the EWKT representation of this geometry."
msgstr ""

msgid "Returns a new :class:`OGRGeometry` clone of this geometry object."
msgstr ""

msgid ""
"If there are any rings within this geometry that have not been closed, this "
"routine will do so by adding the starting point to the end::"
msgstr ""

msgid ""
"Transforms this geometry to a different spatial reference system. May take "
"a :class:`CoordTransform` object, a :class:`SpatialReference` object, or any "
"other input accepted by :class:`SpatialReference` (including spatial "
"reference WKT and PROJ.4 strings, or an integer SRID)."
msgstr ""

msgid ""
"By default nothing is returned and the geometry is transformed in-place. "
"However, if the ``clone`` keyword is set to ``True`` then a transformed "
"clone of this geometry is returned instead."
msgstr ""

msgid ""
"Returns ``True`` if this geometry intersects the other, otherwise returns "
"``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry is equivalent to the other, otherwise "
"returns ``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry is spatially disjoint to (i.e. does not "
"intersect) the other, otherwise returns ``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry touches the other, otherwise returns "
"``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry crosses the other, otherwise returns "
"``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry is contained within the other, otherwise "
"returns ``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry contains the other, otherwise returns "
"``False``."
msgstr ""

msgid ""
"Returns ``True`` if this geometry overlaps the other, otherwise returns "
"``False``."
msgstr ""

msgid "The boundary of this geometry, as a new :class:`OGRGeometry` object."
msgstr ""

msgid ""
"The smallest convex polygon that contains this geometry, as a new :class:"
"`OGRGeometry` object."
msgstr ""

msgid ""
"Returns the region consisting of the difference of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

msgid ""
"Returns the region consisting of the intersection of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

msgid ""
"Returns the region consisting of the symmetric difference of this geometry "
"and the other, as a new :class:`OGRGeometry` object."
msgstr ""

msgid ""
"Returns the region consisting of the union of this geometry and the other, "
"as a new :class:`OGRGeometry` object."
msgstr ""

msgid ""
"Returns the coordinates of a point geometry as a tuple, the coordinates of a "
"line geometry as a tuple of tuples, and so forth::"
msgstr ""
"Mengembalikan kordinat-kordinat dari titik geometri sebagai sebuah tuple, "
"kordinat-kordinat dari baris geometri sebagai sebuah tuple dari tuple, dan "
"sebagainya::"

msgid "An alias for :attr:`tuple`."
msgstr "Sebuah nama lain untuk :attr:`tuple`."

msgid "Returns the X coordinate of this point::"
msgstr "Mengembalikan kordinat X dari titik ini::"

msgid "Returns the Y coordinate of this point::"
msgstr "Mengembalikan kordinat Y dari titik ini::"

msgid ""
"Returns the Z coordinate of this point, or ``None`` if the point does not "
"have a Z coordinate::"
msgstr ""

msgid "Returns a list of X coordinates in this line::"
msgstr "Mengembalikan sebuah daftar dari kordinat X dalam baris ini::"

msgid "Returns a list of Y coordinates in this line::"
msgstr "Mengembalikan sebuah daftar dari kordinat Y dalam baris ini::"

msgid ""
"Returns a list of Z coordinates in this line, or ``None`` if the line does "
"not have Z coordinates::"
msgstr ""

msgid ""
"Returns the shell or exterior ring of this polygon, as a ``LinearRing`` "
"geometry."
msgstr ""

msgid "An alias for :attr:`shell`."
msgstr "Sebuah nama lain untuk :attr:`shell`."

msgid "Returns a :class:`Point` representing the centroid of this polygon."
msgstr ""

msgid ""
"Adds a geometry to this geometry collection. Not applicable to other "
"geometry types."
msgstr ""

msgid "``OGRGeomType``"
msgstr "``OGRGeomType``"

msgid ""
"This class allows for the representation of an OGR geometry type in any of "
"several ways::"
msgstr ""
"Kelas ini mengizinkan untuk gambaran dari jenis geometri OGR dalam beberapa "
"cara::"

msgid "Returns a short-hand string form of the OGR Geometry type::"
msgstr ""

msgid "Returns the number corresponding to the OGR geometry type::"
msgstr "Mengembalikan sejumlah kaitan pada jenis geometri OGR::"

msgid ""
"Returns the Django field type (a subclass of GeometryField) to use for "
"storing this OGR type, or ``None`` if there is no appropriate Django type::"
msgstr ""

msgid ""
"Represents an OGR Envelope structure that contains the minimum and maximum "
"X, Y coordinates for a rectangle bounding box. The naming of the variables "
"is compatible with the OGR Envelope C structure."
msgstr ""

msgid "The value of the minimum X coordinate."
msgstr "Nilai minimal kordinat X"

msgid "The value of the maximum X coordinate."
msgstr "Nilai maksimal kordinat X."

msgid "The value of the minimum Y coordinate."
msgstr "Nilai minimal kordinat Y."

msgid "The value of the maximum Y coordinate."
msgstr "Nilai maksimal kordinat Y."

msgid "The upper-right coordinate, as a tuple."
msgstr "Kordinat atas-kanan, sebagai sebuah tuple."

msgid "The lower-left coordinate, as a tuple."
msgstr "Kordinat kiri-bawah, sebagai sebuah tuple."

msgid "A tuple representing the envelope."
msgstr ""

msgid "A string representing this envelope as a polygon in WKT format."
msgstr ""

msgid "Coordinate System Objects"
msgstr "Coordinate System Object"

msgid "``SpatialReference``"
msgstr "``SpatialReference``"

msgid ""
"Spatial reference objects are initialized on the given ``srs_input``, which "
"may be one of the following:"
msgstr ""

msgid "OGC Well Known Text (WKT) (a string)"
msgstr "OGC Well Known Text (WKT) (sebuah string)"

msgid "EPSG code (integer or string)"
msgstr "Kode EPSG(integer atau string)"

msgid "PROJ.4 string"
msgstr "String PROJ.4"

msgid ""
"A shorthand string for well-known standards (``'WGS84'``, ``'WGS72'``, "
"``'NAD27'``, ``'NAD83'``)"
msgstr ""

msgid ""
"Returns the value of the given string attribute node, ``None`` if the node "
"doesn't exist. Can also take a tuple as a parameter, (target, child), where "
"child is the index of the attribute in the WKT. For example::"
msgstr ""

msgid ""
"The attribute value for the given target node (e.g. ``'PROJCS'``). The index "
"keyword specifies an index of the child node to return."
msgstr ""

msgid "Returns the authority name for the given string target node."
msgstr ""

msgid "Returns the authority code for the given string target node."
msgstr ""

msgid "Returns a clone of this spatial reference object."
msgstr ""

msgid ""
"This method inspects the WKT of this ``SpatialReference`` and will add EPSG "
"authority nodes where an EPSG identifier is applicable."
msgstr ""
"Metode ini memeriksa WKT dari ``SpatialReference`` ini dan akan menambahkan "
"node-node wewenang EPSG dimana sebuah penciri EPSG dapat diterapkan. "

msgid "Morphs this SpatialReference from ESRI's format to EPSG"
msgstr ""

msgid "Morphs this SpatialReference to ESRI's format."
msgstr ""

msgid ""
"Checks to see if the given spatial reference is valid, if not an exception "
"will be raised."
msgstr ""
"Memeriksa untuk melihat jika acuan spasial diberikan adalah sah, jika tidak "
"sebuah pengecualian akan dimunculkan."

msgid "Import spatial reference from EPSG code."
msgstr ""

msgid "Import spatial reference from PROJ.4 string."
msgstr ""

msgid "Import spatial reference from WKT."
msgstr ""

msgid "Import spatial reference from XML."
msgstr ""

msgid "Returns the name of this Spatial Reference."
msgstr ""

msgid "Returns the SRID of top-level authority, or ``None`` if undefined."
msgstr ""

msgid "Returns the name of the linear units."
msgstr ""

msgid "Returns the value of the linear units."
msgstr ""

msgid "Returns the name of the angular units.\""
msgstr ""

msgid "Returns the value of the angular units."
msgstr ""

msgid ""
"Returns a 2-tuple of the units value and the units name and will "
"automatically determines whether to return the linear or angular units."
msgstr ""

msgid ""
"Returns a tuple of the ellipsoid parameters for this spatial reference: "
"(semimajor axis, semiminor axis, and inverse flattening)."
msgstr ""

msgid ""
"Returns the semi major axis of the ellipsoid for this spatial reference."
msgstr ""

msgid ""
"Returns the semi minor axis of the ellipsoid for this spatial reference."
msgstr ""

msgid ""
"Returns the inverse flattening of the ellipsoid for this spatial reference."
msgstr ""

msgid ""
"Returns ``True`` if this spatial reference is geographic (root node is "
"``GEOGCS``)."
msgstr ""

msgid ""
"Returns ``True`` if this spatial reference is local (root node is "
"``LOCAL_CS``)."
msgstr ""

msgid ""
"Returns ``True`` if this spatial reference is a projected coordinate system "
"(root node is ``PROJCS``)."
msgstr ""

msgid "Returns the WKT representation of this spatial reference."
msgstr ""

msgid "Returns the 'pretty' representation of the WKT."
msgstr ""

msgid "Returns the PROJ.4 representation for this spatial reference."
msgstr ""

msgid "Alias for :attr:`SpatialReference.proj`."
msgstr "Nama lain untuk :attr:`SpatialReference.proj`."

msgid "Returns the XML representation of this spatial reference."
msgstr ""

msgid "``CoordTransform``"
msgstr "``CoordTransform``"

msgid ""
"Represents a coordinate system transform. It is initialized with two :class:"
"`SpatialReference`, representing the source and target coordinate systems, "
"respectively. These objects should be used when performing the same "
"coordinate transformation repeatedly on different geometries::"
msgstr ""

msgid "Raster Data Objects"
msgstr ""

msgid "``GDALRaster``"
msgstr "``GDALRaster``"

msgid ""
":class:`GDALRaster` is a wrapper for the GDAL raster source object that "
"supports reading data from a variety of GDAL-supported geospatial file "
"formats and data sources using a simple, consistent interface.  Each data "
"source is represented by a :class:`GDALRaster` object which contains one or "
"more layers of data named bands.  Each band, represented by a :class:"
"`GDALBand` object, contains georeferenced image data. For example, an RGB "
"image is represented as three bands: one for red, one for green, and one for "
"blue."
msgstr ""

msgid ""
"For raster data there is no difference between a raster instance and its "
"data source. Unlike for the Geometry objects, :class:`GDALRaster` objects "
"are always a data source. Temporary rasters can be instantiated in memory "
"using the corresponding driver, but they will be of the same class as file-"
"based raster sources."
msgstr ""

msgid ""
"The constructor for ``GDALRaster`` accepts two parameters. The first "
"parameter defines the raster source, it is either a path to a file or "
"spatial data with values defining the properties of a new raster (such as "
"size and name). If the input is a file path, the second parameter specifies "
"if the raster should be opened with write access. If the input is raw data, "
"the parameters ``width``, ``height``, and ``srid`` are required. The "
"following example shows how rasters can be created from different input "
"sources (using the sample data from the GeoDjango tests, see also the :ref:"
"`gdal_sample_data` section). For a detailed description of how to create "
"rasters using dictionary input, see the :ref:`gdal-raster-ds-input` section."
msgstr ""

msgid ""
"Added the ability to pass the ``size``, ``shape``, and ``offset`` parameters "
"when creating :class:`GDALRaster` objects. The parameters can be passed "
"through the ``ds_input`` dictionary. This allows to finely control initial "
"pixel values. The functionality is similar to the :meth:`GDALBand."
"data()<django.contrib.gis.gdal.GDALBand.data>` method."
msgstr ""

msgid ""
"The name of the source which is equivalent to the input file path or the "
"name provided upon instantiation."
msgstr ""

msgid ""
"The name of the GDAL driver used to handle the input file. For ``GDALRaster``"
"\\s created from a file, the driver type is detected automatically. The "
"creation of rasters from scratch is a in-memory raster by default "
"(``'MEM'``), but can be altered as needed. For instance, use ``GTiff`` for a "
"``GeoTiff`` file. For a list of file types, see also the `GDAL Raster "
"Formats`__ list."
msgstr ""

msgid "An in-memory raster is created through the following example:"
msgstr ""

msgid "A file based GeoTiff raster is created through the following example:"
msgstr ""

msgid "The width of the source in pixels (X-axis)."
msgstr ""

msgid "The height of the source in pixels (Y-axis)."
msgstr ""

msgid ""
"The spatial reference system of the raster, as a :class:`SpatialReference` "
"instance. The SRS can be changed by setting it to an other :class:"
"`SpatialReference` or providing any input that is accepted by the :class:"
"`SpatialReference` constructor."
msgstr ""

msgid ""
"The Spatial Reference System Identifier (SRID) of the raster. This property "
"is a shortcut to getting or setting the SRID through the :attr:`srs` "
"attribute."
msgstr ""

msgid ""
"The affine transformation matrix used to georeference the source, as a tuple "
"of six coefficients which map pixel/line coordinates into georeferenced "
"space using the following relationship::"
msgstr ""

msgid ""
"The same values can be retrieved by accessing the :attr:`origin` (indices 0 "
"and 3), :attr:`scale` (indices 1 and 5) and :attr:`skew` (indices 2 and 4) "
"properties."
msgstr ""

msgid "The default is ``[0.0, 1.0, 0.0, 0.0, 0.0, -1.0]``."
msgstr "Awalnya adalah ``[0.0, 1.0, 0.0, 0.0, 0.0, -1.0]``."

msgid ""
"Coordinates of the top left origin of the raster in the spatial reference "
"system of the source, as a point object with ``x`` and ``y`` members."
msgstr ""

msgid ""
"Pixel width and height used for georeferencing the raster, as a as a point "
"object with ``x`` and ``y``  members. See :attr:`geotransform` for more "
"information."
msgstr ""

msgid ""
"Skew coefficients used to georeference the raster, as a point object with "
"``x`` and ``y``  members. In case of north up images, these coefficients are "
"both ``0``."
msgstr ""

msgid ""
"Extent (boundary values) of the raster source, as a 4-tuple ``(xmin, ymin, "
"xmax, ymax)`` in the spatial reference system of the source."
msgstr ""

msgid "List of all bands of the source, as :class:`GDALBand` instances."
msgstr ""

msgid "Returns a warped version of this raster."
msgstr ""

msgid ""
"The warping parameters can be specified through the ``ds_input`` argument. "
"The use of ``ds_input`` is analogous to the corresponding argument of the "
"class constructor. It is a dictionary with the characteristics of the target "
"raster. Allowed dictionary key values are width, height, SRID, origin, "
"scale, skew, datatype, driver, and name (filename)."
msgstr ""

msgid ""
"By default, the warp functions keeps most parameters equal to the values of "
"the original source raster, so only parameters that should be changed need "
"to be specified. Note that this includes the driver, so for file-based "
"rasters the warp function will create a new raster on disk."
msgstr ""

msgid ""
"The only parameter that is set differently from the source raster is the "
"name. The default value of the the raster name is the name of the source "
"raster appended with ``'_copy' + source_driver_name``. For file-based "
"rasters it is recommended to provide the file path of the target raster."
msgstr ""

msgid ""
"The resampling algorithm used for warping can be specified with the "
"``resampling`` argument. The default is ``NearestNeighbor``, and the other "
"allowed values are ``Bilinear``, ``Cubic``, ``CubicSpline``, ``Lanczos``, "
"``Average``, and ``Mode``."
msgstr ""

msgid ""
"The ``max_error`` argument can be used to specify the maximum error measured "
"in input pixels that is allowed in approximating the transformation. The "
"default is 0.0 for exact calculations."
msgstr ""

msgid ""
"For users familiar with ``GDAL``, this function has a similar functionality "
"to the ``gdalwarp`` command-line utility."
msgstr ""
"Untuk pengguna akrab dengan ``GDAL``, fungsi ini mempunyai fungsionalitas "
"mirip pada kegunaan baris-perintah ``gdalwarp``."

msgid ""
"For example, the warp function can be used for aggregating a raster to the "
"double of its original pixel scale:"
msgstr ""

msgid "Returns a transformed version of this raster with the specified SRID."
msgstr ""

msgid ""
"This function transforms the current raster into a new spatial reference "
"system that can be specified with an ``srid``. It calculates the bounds and "
"scale of the current raster in the new spatial reference system and warps "
"the raster using the :attr:`~GDALRaster.warp` function."
msgstr ""

msgid ""
"By default, the driver of the source raster is used and the name of the "
"raster is the original name appended with ``'_copy' + source_driver_name``. "
"A different driver or name can be specified with the ``driver`` and ``name`` "
"arguments."
msgstr ""

msgid ""
"The default resampling algorithm is ``NearestNeighbour`` but can be changed "
"using the ``resampling`` argument. The default maximum allowed error for "
"resampling is 0.0 and can be changed using the ``max_error`` argument. "
"Consult the :attr:`~GDALRaster.warp` documentation for detail on those "
"arguments."
msgstr ""

msgid "``GDALBand``"
msgstr "``GDALBand``"

msgid ""
"``GDALBand`` instances are not created explicitly, but rather obtained from "
"a :class:`GDALRaster` object, through its :attr:`~GDALRaster.bands` "
"attribute. The GDALBands contain the actual pixel values of the raster."
msgstr ""

msgid "The name or description of the band, if any."
msgstr "Nama dari gambaran dari pita, jika ada."

msgid "The width of the band in pixels (X-axis)."
msgstr ""

msgid "The height of the band in pixels (Y-axis)."
msgstr ""

msgid ""
"The total number of pixels in this band. Is equal to ``width * height``."
msgstr ""

msgid ""
"Compute statistics on the pixel values of this band. The return value is a "
"tuple with the following structure: ``(minimum, maximum, mean, standard "
"deviation)``."
msgstr ""

msgid ""
"If the ``approximate`` argument is set to ``True``, the statistics may be "
"computed based on overviews or a subset of image tiles."
msgstr ""

msgid ""
"If the ``refresh`` argument is set to ``True``, the statistics will be "
"computed from the data directly, and the cache will be updated with the "
"result."
msgstr ""

msgid ""
"If a persistent cache value is found, that value is returned. For raster "
"formats using Persistent Auxiliary Metadata (PAM) services, the statistics "
"might be cached in an auxiliary file. In some cases this metadata might be "
"out of sync with the pixel values or cause values from a previous call to be "
"returned which don't reflect the value of the ``approximate`` argument. In "
"such cases, use the ``refresh`` argument to get updated values and store "
"them in the cache."
msgstr ""

msgid ""
"For empty bands (where all pixel values are \"no data\"), all statistics are "
"returned as ``None``."
msgstr ""

msgid ""
"The statistics can also be retrieved directly by accessing the :attr:`min`, :"
"attr:`max`, :attr:`mean`, and :attr:`std` properties."
msgstr ""

msgid "The minimum pixel value of the band (excluding the \"no data\" value)."
msgstr ""

msgid "The maximum pixel value of the band (excluding the \"no data\" value)."
msgstr ""

msgid ""
"The mean of all pixel values of the band (excluding the \"no data\" value)."
msgstr ""

msgid ""
"The standard deviation of all pixel values of the band (excluding the \"no "
"data\" value)."
msgstr ""

msgid ""
"The \"no data\" value for a band is generally a special marker value used to "
"mark pixels that are not valid data. Such pixels should generally not be "
"displayed, nor contribute to analysis operations."
msgstr ""

msgid ""
"To delete an existing \"no data\" value, set this property to ``None`` "
"(requires GDAL ≥ 2.1)."
msgstr ""

msgid ""
"The \"no data\" value can now be deleted by setting the ``nodata_value`` "
"attribute to ``None``."
msgstr ""

msgid ""
"The data type contained in the band, as an integer constant between 0 "
"(Unknown) and 11. If ``as_string`` is ``True``, the data type is returned as "
"a string with the following possible values: ``GDT_Unknown``, ``GDT_Byte``, "
"``GDT_UInt16``, ``GDT_Int16``, ``GDT_UInt32``, ``GDT_Int32``, "
"``GDT_Float32``, ``GDT_Float64``, ``GDT_CInt16``, ``GDT_CInt32``, "
"``GDT_CFloat32``, and ``GDT_CFloat64``."
msgstr ""

msgid ""
"The accessor to the pixel values of the ``GDALBand``. Returns the complete "
"data array if no parameters are provided. A subset of the pixel array can be "
"requested by specifying an offset and block size as tuples."
msgstr ""

msgid ""
"If NumPy is available, the data is returned as NumPy array. For performance "
"reasons, it is highly recommended to use NumPy."
msgstr ""

msgid ""
"Data is written to the ``GDALBand`` if the ``data`` parameter is provided. "
"The input can be of one of the following types - packed string, buffer, "
"list, array, and NumPy array. The number of items in the input should "
"normally correspond to the total number of pixels in the band, or to the "
"number of pixels for a specific block of pixel values if the ``offset`` and "
"``size`` parameters are provided."
msgstr ""

msgid ""
"If the number of items in the input is different from the target pixel "
"block, the ``shape`` parameter must be specified. The shape is a tuple that "
"specifies the width and height of the input data in pixels. The data is then "
"replicated to update the pixel values of the selected block. This is useful "
"to fill an entire band with a single value, for instance."
msgstr ""

msgid ""
"The ``shape`` parameter and the ability to replicate data input when setting "
"``GDALBand`` data was added."
msgstr ""

msgid "Creating rasters from data"
msgstr "Membuat raster dari data"

msgid ""
"This section describes how to create rasters from scratch using the "
"``ds_input`` parameter."
msgstr ""

msgid ""
"A new raster is created when a ``dict`` is passed to the :class:`GDALRaster` "
"constructor. The dictionary contains defining parameters of the new raster, "
"such as the origin, size, or spatial reference system. The dictionary can "
"also contain pixel data and information about the format of the new raster. "
"The resulting raster can therefore be file-based or memory-based, depending "
"on the driver specified."
msgstr ""

msgid ""
"There's no standard for describing raster data in a dictionary or JSON "
"flavor. The definition of the dictionary input to the :class:`GDALRaster` "
"class is therefore specific to Django. It's inspired by the `geojson`__ "
"format, but the ``geojson`` standard is currently limited to vector formats."
msgstr ""

msgid ""
"Examples of using the different keys when creating rasters can be found in "
"the documentation of the corresponding attributes and methods of the :class:"
"`GDALRaster` and :class:`GDALBand` classes."
msgstr ""

msgid "The ``ds_input`` dictionary"
msgstr "Kamus ``ds_input``"

msgid ""
"Only a few keys are required in the ``ds_input`` dictionary to create a "
"raster: ``width``, ``height``, and ``srid``. All other parameters have "
"default values (see the table below). The list of keys that can be passed in "
"the ``ds_input`` dictionary is closely related but not identical to the :"
"class:`GDALRaster` properties. Many of the parameters are mapped directly to "
"those properties; the others are described below."
msgstr ""

msgid ""
"The following table describes all keys that can be set in the ``ds_input`` "
"dictionary."
msgstr ""

msgid "Key"
msgstr "Kunci"

msgid "Default"
msgstr "Awalan"

msgid "Usage"
msgstr "Penggunaan"

msgid "required"
msgstr "diwajibkan"

msgid "Mapped to the :attr:`~GDALRaster.srid` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.srid`"

msgid "``width``"
msgstr "``width``"

msgid "Mapped to the :attr:`~GDALRaster.width` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.width`"

msgid "``height``"
msgstr "``height``"

msgid "Mapped to the :attr:`~GDALRaster.height` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.height`"

msgid "``driver``"
msgstr "``driver``"

msgid "``MEM``"
msgstr "``MEM``"

msgid "Mapped to the :attr:`~GDALRaster.driver` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.driver`"

msgid "``name``"
msgstr "``name``"

msgid "``''``"
msgstr "``''``"

msgid "See below"
msgstr "Lihat dibawah"

msgid "``origin``"
msgstr "``origin``"

msgid "``0``"
msgstr "``0``"

msgid "Mapped to the :attr:`~GDALRaster.origin` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.origin`"

msgid "``scale``"
msgstr "``scale``"

msgid "Mapped to the :attr:`~GDALRaster.scale` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.scale`"

msgid "``skew``"
msgstr "``skew``"

msgid "``bands``"
msgstr "``bands``"

msgid "``[]``"
msgstr "``[]``"

msgid "``nr_of_bands``"
msgstr "``nr_of_bands``"

msgid "``datatype``"
msgstr "``datatype``"

msgid "``6``"
msgstr "``6``"

msgid ""
"String representing the name of the raster. When creating a file-based "
"raster, this parameter must be the file path for the new raster."
msgstr ""

msgid ""
"Integer representing the data type for all the bands. Defaults to ``6`` "
"(Float32). All bands of a new raster are required to have the same datatype. "
"The value mapping is:"
msgstr ""

msgid "Value"
msgstr "Nilai"

msgid "GDAL Pixel Type"
msgstr "Jenis Piksel GDAL"

msgid "GDT_Byte"
msgstr "GDT_Byte"

msgid "Eight bit unsigned integer"
msgstr "Delapan bit integer tidak bertanda"

msgid "GDT_UInt16"
msgstr "GDT_UInt16"

msgid "Sixteen bit unsigned integer"
msgstr "Enam belas bit integer tidak bertanda"

msgid "3"
msgstr "3"

msgid "GDT_Int16"
msgstr "GDT_Int16"

msgid "Sixteen bit signed integer"
msgstr "Enam belas bit integer bertanda"

msgid "GDT_UInt32"
msgstr "GDT_UInt32"

msgid "Thirty-two bit unsigned integer"
msgstr "Tiga-puluh-dua bit integer tidak bertanda"

msgid "5"
msgstr "5"

msgid "GDT_Int32"
msgstr "GDT_Int32"

msgid "Thirty-two bit signed integer"
msgstr "Tiga-puluh-dua bit integer bertanda"

msgid "6"
msgstr "6"

msgid "GDT_Float32"
msgstr "GDT_Float32"

msgid "Thirty-two bit floating point"
msgstr ""

msgid "7"
msgstr "7"

msgid "GDT_Float64"
msgstr "GDT_Float64"

msgid "Sixty-four bit floating point"
msgstr ""

msgid ""
"Integer representing the number of bands of the raster. A raster can be "
"created without passing band data upon creation. If the number of bands "
"isn't specified, it's automatically calculated from the length of the "
"``bands`` input. The number of bands can't be changed after creation."
msgstr ""

msgid ""
"A list of ``band_input`` dictionaries with band input data. The resulting "
"band indices are the same as in the list provided. The definition of the "
"band input dictionary is given below. If band data isn't provided, the "
"raster bands values are instantiated as an array of zeros and the \"no data"
"\" value is set to ``None``."
msgstr ""

msgid "The ``band_input`` dictionary"
msgstr "Kamus ``band_input``"

msgid ""
"The ``bands`` key in the ``ds_input`` dictionary is a list of ``band_input`` "
"dictionaries. Each ``band_input`` dictionary can contain pixel values and "
"the \"no data\" value to be set on the bands of the new raster. The data "
"array can have the full size of the new raster or be smaller. For arrays "
"that are smaller than the full raster, the ``size``, ``shape``, and "
"``offset`` keys  control the pixel values. The corresponding keys are passed "
"to the :meth:`~GDALBand.data` method. Their functionality is the same as "
"setting the band data with that method. The following table describes the "
"keys that can be used."
msgstr ""

msgid "``nodata_value``"
msgstr "``nodata_value``"

msgid "``None``"
msgstr "``None``"

msgid "Mapped to the :attr:`~GDALBand.nodata_value` attribute"
msgstr "Dipetakan ke atribut :attr:`~GDALRaster.nodata_value`"

msgid "``data``"
msgstr "``data``"

msgid "Same as ``nodata_value`` or ``0``"
msgstr "Sama seperti ``nodata_value`` atau ``0``"

msgid "Passed to the :meth:`~GDALBand.data` method"
msgstr "Dilewatkan ke metode :meth:`~GDALBand.data`"

msgid "``size``"
msgstr "``size``"

msgid "``(with, height)`` of raster"
msgstr "``(with, height)`` dari raster"

msgid "``shape``"
msgstr "``shape``"

msgid "Same as size"
msgstr "Sama seperti ukuran"

msgid "``offset``"
msgstr "``offset``"

msgid "``(0, 0)``"
msgstr "``(0, 0)``"

msgid "Settings"
msgstr "Pengaturan"

msgid "``GDAL_LIBRARY_PATH``"
msgstr "``GDAL_LIBRARY_PATH``"

msgid ""
"A string specifying the location of the GDAL library.  Typically, this "
"setting is only used if the GDAL library is in a non-standard location (e."
"g., ``/home/john/lib/libgdal.so``)."
msgstr ""

msgid "Geolocation with GeoIP"
msgstr "Geolocation dengan GeoIP"

msgid ""
"This module is deprecated in favor of :doc:`django.contrib.gis.geoip2 </ref/"
"contrib/gis/geoip2>`, which supports IPv6 and the GeoLite2 database format."
msgstr ""

msgid ""
"The :class:`GeoIP` object is a ctypes wrapper for the `MaxMind GeoIP C "
"API`__. [#]_"
msgstr ""

msgid ""
"In order to perform IP-based geolocation, the :class:`GeoIP` object requires "
"the GeoIP C library and either the GeoIP `Country`__ or `City`__ datasets in "
"binary format (the CSV files will not work!).  These datasets may be "
"`downloaded from MaxMind`__.  Grab the ``GeoLiteCountry/GeoIP.dat.gz`` and "
"``GeoLiteCity.dat.gz`` files and unzip them in a directory corresponding to "
"what you set :setting:`GEOIP_PATH` with in your settings.  See the example "
"and reference below for more details."
msgstr ""

msgid ""
"Assuming you have the GeoIP C library installed, here is an example of its "
"usage::"
msgstr ""

msgid "``GeoIP`` Settings"
msgstr "Pengaturan ``GeoIP``"

msgid "``GEOIP_PATH``"
msgstr "``GEOIP_PATH``"

msgid ""
"A string specifying the directory where the GeoIP data files are located.  "
"This setting is *required* unless manually specified with ``path`` keyword "
"when initializing the :class:`GeoIP` object."
msgstr ""

msgid "``GEOIP_LIBRARY_PATH``"
msgstr "``GEOIP_LIBRARY_PATH``"

msgid ""
"A string specifying the location of the GeoIP C library.  Typically, this "
"setting is only used if the GeoIP C library is in a non-standard location (e."
"g., ``/home/sue/lib/libGeoIP.so``)."
msgstr ""

msgid "``GEOIP_COUNTRY``"
msgstr "``GEOIP_COUNTRY``"

msgid ""
"The basename to use for the GeoIP country data file. Defaults to ``'GeoIP."
"dat'``."
msgstr ""

msgid "``GEOIP_CITY``"
msgstr "``GEOIP_CITY``"

msgid ""
"The basename to use for the GeoIP city data file. Defaults to ``'GeoLiteCity."
"dat'``."
msgstr ""

msgid "``GeoIP`` API"
msgstr "API ``GeoIP``"

msgid ""
"The ``GeoIP`` object does not require any parameters to use the default "
"settings.  However, at the very least the :setting:`GEOIP_PATH` setting "
"should be set with the path of the location of your GeoIP data sets.  The "
"following initialization keywords may be used to customize any of the "
"defaults."
msgstr ""

msgid "Keyword Arguments"
msgstr "Argumen Katakunci"

msgid "``path``"
msgstr "``path``"

msgid ""
"Base directory to where GeoIP data is located or the full path to where the "
"city or country data files (.dat) are located.  Assumes that both the city "
"and country data sets are located in this directory; overrides the :setting:"
"`GEOIP_PATH` settings attribute."
msgstr ""

msgid "``cache``"
msgstr "``cache``"

msgid ""
"The cache settings when opening up the GeoIP datasets, and may be an integer "
"in (0, 1, 2, 4) corresponding to the ``GEOIP_STANDARD``, "
"``GEOIP_MEMORY_CACHE``, ``GEOIP_CHECK_CACHE``, and ``GEOIP_INDEX_CACHE`` "
"``GeoIPOptions`` C API settings, respectively. Defaults to 0 "
"(``GEOIP_STANDARD``)."
msgstr ""

msgid "``country``"
msgstr "``country``"

msgid ""
"The name of the GeoIP country data file.  Defaults to ``GeoIP.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_COUNTRY` settings "
"attribute."
msgstr ""

msgid "``city``"
msgstr "``city``"

msgid ""
"The name of the GeoIP city data file.  Defaults to ``GeoLiteCity.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_CITY` settings attribute."
msgstr ""

msgid "``GeoIP`` Methods"
msgstr "Cara ``GeoIP``"

msgid "Querying"
msgstr "Meminta"

msgid ""
"All the following querying routines may take either a string IP address or a "
"fully qualified domain name (FQDN).  For example, both ``'205.186.163.125'`` "
"and ``'djangoproject.com'`` would be valid query parameters."
msgstr ""

msgid ""
"Returns a dictionary of city information for the given query.  Some of the "
"values in the dictionary may be undefined (``None``)."
msgstr ""

msgid ""
"Returns a dictionary with the country code and country for the given query."
msgstr ""

msgid "Returns only the country code corresponding to the query."
msgstr "Mengembalikan hanya kode negara sesuai dengan permintaan"

msgid "Returns only the country name corresponding to the query."
msgstr "Mengembalikan hanya nama negara sesuai dengan permintaan"

msgid "Coordinate Retrieval"
msgstr "Pengambilan Kordinat"

msgid "Returns a coordinate tuple of (longitude, latitude)."
msgstr "Mengembalikan sebuah tuple kordinat dari (longitude, latitude)."

msgid "Returns a coordinate tuple of (latitude, longitude),"
msgstr "Mengembalikan sebuah tuple kordinat dari (latitude, longitude),"

msgid ""
"Returns a :class:`django.contrib.gis.geos.Point` object corresponding to the "
"query."
msgstr ""
"Mengembalikan obyek :class:`django.contrib.gis.geos.Point` sesuai dengan "
"permintaan."

msgid "Database Information"
msgstr "Informasi Basisdata"

msgid "This property returns information about the GeoIP country database."
msgstr "Sifat ini mengembalikan informasi tentang basisdata negara GeoIP."

msgid "This property returns information about the GeoIP city database."
msgstr "Sifat ini mengembalikan informasi tentang basisdata kota GeoIP."

msgid ""
"This property returns information about all GeoIP databases (both city and "
"country), and the version of the GeoIP C library (if supported)."
msgstr ""
"Sifat ini mengembalikan informasi tentang semua basisdata GwoIP (kedua kota "
"dan negara), dan versi dari pustaka C GeoIP (jika didukung)."

msgid "GeoIP-Python API compatibility methods"
msgstr "Metode penyesuaian API GeoIP-Python"

msgid ""
"These methods exist to ease compatibility with any code using MaxMind's "
"existing Python API."
msgstr ""

msgid ""
"This classmethod instantiates the GeoIP object from the given database path "
"and given cache setting."
msgstr ""

msgid ""
"GeoIP(R) is a registered trademark of MaxMind, LLC of Boston, Massachusetts."
msgstr ""
"GeoIP(R) adalah merek dagang terdaftar dari MaxMind, LLC dari Boston, "
"Massachusetts."

msgid "Geolocation with GeoIP2"
msgstr "Geolokasi dengan GeoIP2"

msgid ""
"The :class:`GeoIP2` object is a wrapper for the `MaxMind geoip2 Python "
"library`__. [#]_"
msgstr ""
"Obyek  :class:`GeoIP2` dibugnkus untuk `MaxMind geoip2 Python library`__. "
"[#]_"

msgid ""
"In order to perform IP-based geolocation, the :class:`GeoIP2` object "
"requires the `geoip2 Python library`__ and the GeoIP `Country` and/or `City` "
"`datasets in binary format`__ (the CSV files will not work!). Grab the "
"``GeoLite2-Country.mmdb.gz`` and ``GeoLite2-City.mmdb.gz`` files and unzip "
"them in a directory corresponding to the :setting:`GEOIP_PATH` setting."
msgstr ""

msgid ""
"Additionally, it is recommended to install the `libmaxminddb C library`__, "
"so that ``geoip2`` can leverage the C library's faster speed."
msgstr ""

msgid "Here is an example of its usage::"
msgstr "Ini adalah sebuah contoh penggunaannya::"

msgid ""
"A string specifying the directory where the GeoIP data files are located. "
"This setting is *required* unless manually specified with ``path`` keyword "
"when initializing the :class:`GeoIP2` object."
msgstr ""
"Sebuah string menentukan direktori dimana berkas data GeoIP ditempatkan. "
"Pengaturan ini adalah *diwajibkan* meskipun secara manual ditentukan dengan "
"kata kunci ``path`` ketika menginisialisasi obyek :class:`GeoIP2`."

msgid ""
"The basename to use for the GeoIP country data file. Defaults to ``'GeoLite2-"
"Country.mmdb'``."
msgstr ""
"Namadasar untuk digunakan berkas data negara GeoIP. Nilai awal ``'GeoLite2-"
"Country.mmdb'``."

msgid ""
"The basename to use for the GeoIP city data file. Defaults to ``'GeoLite2-"
"City.mmdb'``."
msgstr ""
"Nama dasar digunakan untuk berkas data kota GeoIP. Awalan pada ``'GeoLite2-"
"City.mmdb'``."

msgid ""
"The ``GeoIP`` object does not require any parameters to use the default "
"settings. However, at the very least the :setting:`GEOIP_PATH` setting "
"should be set with the path of the location of your GeoIP datasets. The "
"following initialization keywords may be used to customize any of the "
"defaults."
msgstr ""
"Obyek ``GeoIP`` tidak membutuhkan parameter apapun untuk menggunakan "
"pengaturan awalan. Bagaimanapun, pada pengaturan :setting:`GEOIP_PATH`  "
"sangat sedikit harus disetel dengan jalur dari tempat dari kumpulan data "
"GeoIP anda. Kata kunci inisialisasi berikut mungkin digunakan untuk "
"menyesuaikan apapun dari awalan."

msgid ""
"Base directory to where GeoIP data is located or the full path to where the "
"city or country data files (``.mmdb``) are located. Assumes that both the "
"city and country datasets are located in this directory; overrides the :"
"setting:`GEOIP_PATH` setting."
msgstr ""

msgid ""
"The cache settings when opening up the GeoIP datasets. May be an integer in "
"(0, 1, 2, 4, 8) corresponding to the ``MODE_AUTO``, ``MODE_MMAP_EXT``, "
"``MODE_MMAP``, and ``GEOIP_INDEX_CACHE`` ``MODE_MEMORY`` C API settings, "
"respectively. Defaults to 0 (``MODE_AUTO``)."
msgstr ""

msgid ""
"The name of the GeoIP country data file. Defaults to ``GeoLite2-Country."
"mmdb``. Setting this keyword overrides the :setting:`GEOIP_COUNTRY` setting."
msgstr ""

msgid ""
"The name of the GeoIP city data file. Defaults to ``GeoLite2-City.mmdb``. "
"Setting this keyword overrides the :setting:`GEOIP_CITY` setting."
msgstr ""

msgid "Instantiating"
msgstr ""

msgid ""
"All the following querying routines may take either a string IP address or a "
"fully qualified domain name (FQDN). For example, both ``'205.186.163.125'`` "
"and ``'djangoproject.com'`` would be valid query parameters."
msgstr ""

msgid ""
"Returns a dictionary of city information for the given query. Some of the "
"values in the dictionary may be undefined (``None``)."
msgstr ""

msgid "Returns the country code corresponding to the query."
msgstr "Mengembalikan kode negara terkait pada permintaan"

msgid "Returns the country name corresponding to the query."
msgstr "Mengembalikan nama negara terkait pada permintaan"

msgid ""
"Returns a :class:`~django.contrib.gis.geos.Point` object corresponding to "
"the query."
msgstr ""
"Mengembalikan obyek :class:`~django.contrib.gis.geos.Point` terkait pada "
"permintaan"

msgid "GeoIP(R) is a registered trademark of MaxMind, Inc."
msgstr "GeoIP(R) adalah merek dagang terdaftar dari MaxMind, Inc."

msgid "GeoQuerySet API Reference"
msgstr "Acuan API GeoQuerySet"

msgid ""
"The spatial lookups in this section are available for :class:`GeometryField` "
"and :class:`RasterField`."
msgstr ""

msgid ""
"For an introduction, see the :ref:`spatial lookups introduction <spatial-"
"lookups-intro>`.  For an overview of what lookups are compatible with a "
"particular spatial backend, refer to the :ref:`spatial lookup compatibility "
"table <spatial-lookup-compatibility>`."
msgstr ""

msgid "Spatial lookups now support raster input."
msgstr "Pencarian spasial sekarang mendukung masukan raster."

msgid "Lookups with rasters"
msgstr "Pencarian dengan raster"

msgid ""
"All examples in the reference below are given for geometry fields and "
"inputs, but the lookups can be used the same way with rasters on both sides. "
"Whenever a lookup doesn't support raster input, the input is automatically "
"converted to a geometry where necessary using the `ST_Polygon <https://"
"postgis.net/docs/RT_ST_Polygon.html>`_ function. See also the :ref:"
"`introduction to raster lookups <spatial-lookup-raster>`."
msgstr ""

msgid ""
"The database operators used by the lookups can be divided into three "
"categories:"
msgstr ""

msgid ""
"Native raster support ``N``: the operator accepts rasters natively on both "
"sides of the lookup, and raster input can be mixed with geometry inputs."
msgstr ""

msgid ""
"Bilateral raster support ``B``: the operator supports rasters only if both "
"sides of the lookup receive raster inputs. Raster data is automatically "
"converted to geometries for mixed lookups."
msgstr ""

msgid ""
"Geometry conversion support ``C``. The lookup does not have native raster "
"support, all raster data is automatically converted to geometries."
msgstr ""

msgid ""
"The examples below show the SQL equivalent for the lookups in the different "
"types of raster support. The same pattern applies to all spatial lookups."
msgstr ""

msgid "Case"
msgstr "Kasus"

msgid "Lookup"
msgstr "Cari"

msgid "SQL Equivalent"
msgstr "Setara SQL"

msgid "N, B"
msgstr "N, B"

msgid "``rast__contains=rst``"
msgstr "``rast__contains=rst``"

msgid "``ST_Contains(rast, rst)``"
msgstr "``ST_Contains(rast, rst)``"

msgid "``rast__1__contains=(rst, 2)``"
msgstr "``rast__1__contains=(rst, 2)``"

msgid "``ST_Contains(rast, 1, rst, 2)``"
msgstr "``ST_Contains(rast, 1, rst, 2)``"

msgid "B, C"
msgstr "B, C"

msgid "``rast__contains=geom``"
msgstr "``rast__contains=geom``"

msgid "``ST_Contains(ST_Polygon(rast), geom)``"
msgstr "``ST_Contains(ST_Polygon(rast), geom)``"

msgid "``rast__1__contains=geom``"
msgstr "``rast__1__contains=geom``"

msgid "``ST_Contains(ST_Polygon(rast, 1), geom)``"
msgstr "``ST_Contains(ST_Polygon(rast, 1), geom)``"

msgid "``poly__contains=rst``"
msgstr "``poly__contains=rst``"

msgid "``ST_Contains(poly, ST_Polygon(rst))``"
msgstr "``ST_Contains(poly, ST_Polygon(rst))``"

msgid "``poly__contains=(rst, 1)``"
msgstr "``poly__contains=(rst, 1)``"

msgid "``ST_Contains(poly, ST_Polygon(rst, 1))``"
msgstr "``ST_Contains(poly, ST_Polygon(rst, 1))``"

msgid "``rast__crosses=rst``"
msgstr "``rast__crosses=rst``"

msgid "``ST_Crosses(ST_Polygon(rast), ST_Polygon(rst))``"
msgstr "``ST_Crosses(ST_Polygon(rast), ST_Polygon(rst))``"

msgid "``rast__1__crosses=(rst, 2)``"
msgstr "``rast__1__crosses=(rst, 2)``"

msgid "``ST_Crosses(ST_Polygon(rast, 1), ST_Polygon(rst, 2))``"
msgstr "``ST_Crosses(ST_Polygon(rast, 1), ST_Polygon(rst, 2))``"

msgid "``rast__crosses=geom``"
msgstr "``rast__crosses=geom``"

msgid "``ST_Crosses(ST_Polygon(rast), geom)``"
msgstr "``ST_Crosses(ST_Polygon(rast), geom)``"

msgid "``poly__crosses=rst``"
msgstr "``poly__crosses=rst``"

msgid "``ST_Crosses(poly, ST_Polygon(rst))``"
msgstr "``ST_Crosses(poly, ST_Polygon(rst))``"

msgid ""
"Spatial lookups with rasters are only supported for PostGIS backends "
"(denominated as PGRaster in this section)."
msgstr ""

msgid "``bbcontains``"
msgstr "``bbcontains``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Contain."
"html>`__, MySQL, SpatiaLite, PGRaster (Native)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Contain.html>`__, "
"MySQL, SpatiaLite, PGRaster (Asli)"

msgid ""
"Tests if the geometry or raster field's bounding box completely contains the "
"lookup geometry's bounding box."
msgstr ""

msgid "Backend"
msgstr "Backend"

msgid "``poly ~ geom``"
msgstr "``poly ~ geom``"

msgid "``MBRContains(poly, geom)``"
msgstr "``MBRContains(poly, geom)``"

msgid "``MbrContains(poly, geom)``"
msgstr "``MbrContains(poly, geom)``"

msgid "``bboverlaps``"
msgstr "``bboverlaps``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/geometry_overlaps."
"html>`__, MySQL, SpatiaLite, PGRaster (Native)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/geometry_overlaps.html>`__, "
"MySQL, SpatiaLite, PGRaster (Asli)"

msgid ""
"Tests if the geometry field's bounding box overlaps the lookup geometry's "
"bounding box."
msgstr ""

msgid "``poly && geom``"
msgstr "``poly && geom``"

msgid "``MBROverlaps(poly, geom)``"
msgstr "``MBROverlaps(poly, geom)``"

msgid "``MbrOverlaps(poly, geom)``"
msgstr "``MbrOverlaps(poly, geom)``"

msgid "``contained``"
msgstr "``contained``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Contained."
"html>`__, MySQL, SpatiaLite, PGRaster (Native)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Contained."
"html>`__, MySQL, SpatiaLite, PGRaster (Asli)"

msgid ""
"Tests if the geometry field's bounding box is completely contained by the "
"lookup geometry's bounding box."
msgstr ""

msgid "``poly @ geom``"
msgstr "``poly @ geom``"

msgid "``MBRWithin(poly, geom)``"
msgstr "``MBRWithin(poly, geom)``"

msgid "``MbrWithin(poly, geom)``"
msgstr "``MbrWithin(poly, geom)``"

msgid "``contains``"
msgstr "``contains``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Contains.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Contains.html>`__, Oracle, "
"MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid "Tests if the geometry field spatially contains the lookup geometry."
msgstr ""

msgid "``ST_Contains(poly, geom)``"
msgstr "``ST_Contains(poly, geom)``"

msgid "``SDO_CONTAINS(poly, geom)``"
msgstr "``SDO_CONTAINS(poly, geom)``"

msgid "``Contains(poly, geom)``"
msgstr "``Contains(poly, geom)``"

msgid "``contains_properly``"
msgstr "``contains_properly``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_ContainsProperly."
"html>`__, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_ContainsProperly.html>`__, "
"PGRaster (Timbal balik)"

msgid ""
"Returns true if the lookup geometry intersects the interior of the geometry "
"field, but not the boundary (or exterior)."
msgstr ""

msgid "``ST_ContainsProperly(poly, geom)``"
msgstr "``ST_ContainsProperly(poly, geom)``"

msgid "``coveredby``"
msgstr "``coveredby``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_CoveredBy.html>`__, "
"Oracle, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_CoveredBy.html>`__, "
"Oracle, PGRaster (Timbal balik)"

msgid ""
"Tests if no point in the geometry field is outside the lookup geometry. "
"[#fncovers]_"
msgstr ""

msgid "``ST_CoveredBy(poly, geom)``"
msgstr "``ST_CoveredBy(poly, geom)``"

msgid "``SDO_COVEREDBY(poly, geom)``"
msgstr "``SDO_COVEREDBY(poly, geom)``"

msgid "``covers``"
msgstr "``covers``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Covers.html>`__, "
"Oracle, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Covers.html>`__, Oracle, "
"PGRaster (Timbal balik)"

msgid ""
"Tests if no point in the lookup geometry is outside the geometry field. "
"[#fncovers]_"
msgstr ""

msgid "``ST_Covers(poly, geom)``"
msgstr "``ST_Covers(poly, geom)``"

msgid "``SDO_COVERS(poly, geom)``"
msgstr "``SDO_COVERS(poly, geom)``"

msgid "``crosses``"
msgstr "``crosses``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Crosses.html>`__, "
"SpatiaLite, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Crosses.html>`__, "
"SpatiaLite, PGRaster (Perubahan)"

msgid "Tests if the geometry field spatially crosses the lookup geometry."
msgstr ""

msgid "``ST_Crosses(poly, geom)``"
msgstr "``ST_Crosses(poly, geom)``"

msgid "``Crosses(poly, geom)``"
msgstr "``Crosses(poly, geom)``"

msgid "``disjoint``"
msgstr "``disjoint``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Disjoint.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Disjoint.html>`__, Oracle, "
"MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid ""
"Tests if the geometry field is spatially disjoint from the lookup geometry."
msgstr ""

msgid "``ST_Disjoint(poly, geom)``"
msgstr "``ST_Disjoint(poly, geom)``"

msgid "``SDO_GEOM.RELATE(poly, 'DISJOINT', geom, 0.05)``"
msgstr "``SDO_GEOM.RELATE(poly, 'DISJOINT', geom, 0.05)``"

msgid "``MBRDisjoint(poly, geom)``"
msgstr "``MBRDisjoint(poly, geom)``"

msgid "``Disjoint(poly, geom)``"
msgstr "``Disjoint(poly, geom)``"

msgid "``equals``"
msgstr "``equals``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Equals.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Equals.html>`__, Oracle, "
"MySQL, SpatiaLite, PGRaster (Perubahan)"

msgid "``exact``, ``same_as``"
msgstr "``exact``, ``same_as``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Same."
"html>`__, Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Same.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid "``intersects``"
msgstr "``intersects``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Intersects.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Intersects.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid "Tests if the geometry field spatially intersects the lookup geometry."
msgstr ""

msgid "``ST_Intersects(poly, geom)``"
msgstr "``ST_Intersects(poly, geom)``"

msgid "``SDO_OVERLAPBDYINTERSECT(poly, geom)``"
msgstr "``SDO_OVERLAPBDYINTERSECT(poly, geom)``"

msgid "``MBRIntersects(poly, geom)``"
msgstr "``MBRIntersects(poly, geom)``"

msgid "``Intersects(poly, geom)``"
msgstr "``Intersects(poly, geom)``"

msgid "``isvalid``"
msgstr "``isvalid``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_IsValid.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_IsValid.html>`__, Oracle, "
"SpatiaLite"

msgid "Tests if the geometry is valid."
msgstr "Coba jika geometri adalah sah."

msgid "PostGIS, SpatiaLite"
msgstr ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_IsValid.html>`__, "
"Oracle, SpatiaLite"

msgid "``ST_IsValid(poly)``"
msgstr "``ST_IsValid(poly)``"

msgid "``SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(poly, 0.05) = 'TRUE'``"
msgstr "``SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(poly, 0.05) = 'TRUE'``"

msgid "Oracle and SpatiaLite support was added."
msgstr "Dukungan Oracle dan SpatiaLite telah ditambahkan."

msgid "``overlaps``"
msgstr "``overlaps``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Overlaps.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Overlaps.html>`__, Oracle, "
"MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid "``relate``"
msgstr "``relate``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Relate.html>`__, "
"Oracle, SpatiaLite, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Relate.html>`__, Oracle, "
"SpatiaLite, PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field is spatially related to the lookup geometry by "
"the values given in the given pattern.  This lookup requires a tuple "
"parameter, ``(geom, pattern)``; the form of ``pattern`` will depend on the "
"spatial backend:"
msgstr ""

msgid "PostGIS & SpatiaLite"
msgstr "PostGIS & SpatiaLite"

msgid ""
"On these spatial backends the intersection pattern is a string comprising "
"nine characters, which  define intersections between  the interior, "
"boundary, and exterior of the geometry field and the lookup geometry. The "
"intersection pattern matrix may only use the following characters: ``1``, "
"``2``, ``T``, ``F``, or ``*``.  This lookup type allows users to \"fine tune"
"\" a specific geometric relationship consistent with the DE-9IM model. "
"[#fnde9im]_"
msgstr ""

msgid "Geometry example::"
msgstr "Contoh geometri::"

msgid "PostGIS SQL equivalent::"
msgstr "PostGIS SQL Setara::"

msgid "SpatiaLite SQL equivalent::"
msgstr "SpatiaLite SQL setara::"

msgid "Raster example::"
msgstr ""

msgid ""
"Here the relation pattern is comprised of at least one of the nine relation "
"strings: ``TOUCH``, ``OVERLAPBDYDISJOINT``, ``OVERLAPBDYINTERSECT``, "
"``EQUAL``, ``INSIDE``, ``COVEREDBY``, ``CONTAINS``, ``COVERS``, ``ON``, and "
"``ANYINTERACT``.   Multiple strings may be combined with the logical Boolean "
"operator OR, for example, ``'inside+touch'``. [#fnsdorelate]_  The relation "
"strings are case-insensitive."
msgstr ""

msgid "Oracle SQL equivalent::"
msgstr "Oracle SQL setara::"

msgid "``touches``"
msgstr "``touches``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Touches.html>`__, "
"Oracle, MySQL, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Touches.html>`__, Oracle, "
"MySQL, SpatiaLite"

msgid "Tests if the geometry field spatially touches the lookup geometry."
msgstr ""

msgid "``ST_Touches(poly, geom)``"
msgstr "ST_Touches(poly, geom)``"

msgid "``MBRTouches(poly, geom)``"
msgstr "``MBRTouches(poly, geom)``"

msgid "``SDO_TOUCH(poly, geom)``"
msgstr "``SDO_TOUCH(poly, geom)``"

msgid "``Touches(poly, geom)``"
msgstr "``Touches(poly, geom)``"

msgid "``within``"
msgstr "``within``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Within.html>`__, "
"Oracle, MySQL, SpatiaLite, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Within.html>`__, Oracle, "
"MySQL, SpatiaLite, PGRaster (Timbal balik)"

msgid "Tests if the geometry field is spatially within the lookup geometry."
msgstr ""

msgid "``ST_Within(poly, geom)``"
msgstr "``ST_Within(poly, geom)``"

msgid "``SDO_INSIDE(poly, geom)``"
msgstr "``SDO_INSIDE(poly, geom)``"

msgid "``Within(poly, geom)``"
msgstr "``Within(poly, geom)``"

msgid "``left``"
msgstr "``left``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Left."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Left.html>`__, "
"PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box is strictly to the left of the "
"lookup geometry's bounding box."
msgstr ""

msgid "PostGIS equivalent::"
msgstr "PostGIS Setara::"

msgid "``right``"
msgstr "``right``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Right."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Right.html>`__, "
"PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box is strictly to the right of the "
"lookup geometry's bounding box."
msgstr ""

msgid "``overlaps_left``"
msgstr "``overlaps_left``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overleft."
"html>`__, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overleft."
"html>`__, PGRaster (Timbal balik)"

msgid ""
"Tests if the geometry field's bounding box overlaps or is to the left of the "
"lookup geometry's bounding box."
msgstr ""

msgid "``overlaps_right``"
msgstr "``overlaps_right``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overright."
"html>`__, PGRaster (Bilateral)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overright."
"html>`__, PGRaster (Timbal balik)"

msgid ""
"Tests if the geometry field's bounding box overlaps or is to the right of "
"the lookup geometry's bounding box."
msgstr ""

msgid "``overlaps_above``"
msgstr "``overlaps_above``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overabove."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overabove."
"html>`__, PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box overlaps or is above the lookup "
"geometry's bounding box."
msgstr ""

msgid "``overlaps_below``"
msgstr "``overlaps_below``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overbelow."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Overbelow."
"html>`__, PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box overlaps or is below the lookup "
"geometry's bounding box."
msgstr ""

msgid "``strictly_above``"
msgstr "``strictly_above``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Above."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Above.html>`__, "
"PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box is strictly above the lookup "
"geometry's bounding box."
msgstr ""

msgid "``strictly_below``"
msgstr "``strictly_below``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Geometry_Below."
"html>`__, PGRaster (Conversion)"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Geometry_Below.html>`__, "
"PGRaster (Perubahan)"

msgid ""
"Tests if the geometry field's bounding box is strictly below the lookup "
"geometry's bounding box."
msgstr ""

msgid ""
"For an overview on performing distance queries, please refer to the :ref:"
"`distance queries introduction <distance-queries>`."
msgstr ""

msgid "Distance lookups take the following form::"
msgstr "Pencarian jarak mengambil formulir berikut::"

msgid ""
"The value passed into a distance lookup is a tuple; the first two values are "
"mandatory, and are the geometry to calculate distances to, and a distance "
"value (either a number in units of the field, a :class:`~django.contrib.gis."
"measure.Distance` object, or a `query expression <ref/models/expressions>`). "
"To pass a band index to the lookup, use a 3-tuple where the second entry is "
"the band index."
msgstr ""

msgid ""
"On every distance lookup except :lookup:`dwithin`, an optional element, "
"``'spheroid'``, may be included to use the more accurate spheroid distance "
"calculation functions on fields with a geodetic coordinate system."
msgstr ""

msgid ""
"On PostgreSQL, the ``'spheroid'`` option uses `ST_DistanceSpheroid <https://"
"postgis.net/docs/ST_Distance_Spheroid.html>`__ instead of `ST_DistanceSphere "
"<https://postgis.net/docs/ST_DistanceSphere.html>`__. The simpler "
"`ST_Distance <https://postgis.net/docs/ST_Distance.html>`__ function is used "
"with projected coordinate systems. Rasters are converted to geometries for "
"spheroid based lookups."
msgstr ""
"Pada PostgreSQL, pilihan ``'spheroid'`` menggunakan `ST_DistanceSpheroid "
"<https://postgis.net/docs/ST_Distance_Spheroid.html>`__ daripada "
"`ST_DistanceSphere <https://postgis.net/docs/ST_DistanceSphere."
"html>`__. Fungsi `ST_Distance <https://postgis.net/docs/ST_Distance."
"html>`__ paling sederhana digunakan dengan sistem kordinat yang sudah "
"dihitung. Raster dirubah ke geometri untuk pencarian berdasarkan spheroid."

msgid "The ability to pass an expression as the distance value was added."
msgstr ""

msgid "Support for the ``'spheroid'`` option on SQLite was added."
msgstr ""

msgid "``distance_gt``"
msgstr "``distance_gt``"

msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than the given distance value."
msgstr ""

msgid "``ST_Distance/ST_Distance_Sphere(poly, geom) > 5``"
msgstr "``ST_Distance/ST_Distance_Sphere(poly, geom) > 5``"

msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) > 5``"
msgstr "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) > 5``"

msgid "``Distance(poly, geom) > 5``"
msgstr "``Distance(poly, geom) > 5``"

msgid "``distance_gte``"
msgstr "``distance_gte``"

msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than or equal to the given distance value."
msgstr ""

msgid "``ST_Distance/ST_Distance_Sphere(poly, geom) >= 5``"
msgstr "``ST_Distance/ST_Distance_Sphere(poly, geom) >= 5``"

msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) >= 5``"
msgstr "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) >= 5``"

msgid "``Distance(poly, geom) >= 5``"
msgstr "``Distance(poly, geom) >= 5``"

msgid "``distance_lt``"
msgstr "``distance_lt``"

msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than the given distance value."
msgstr ""

msgid "``ST_Distance/ST_Distance_Sphere(poly, geom) < 5``"
msgstr "``ST_Distance/ST_Distance_Sphere(poly, geom) < 5``"

msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) < 5``"
msgstr "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) < 5``"

msgid "``Distance(poly, geom) < 5``"
msgstr "``Distance(poly, geom) < 5``"

msgid "``distance_lte``"
msgstr "``distance_lte``"

msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than or equal to the given distance value."
msgstr ""

msgid "``ST_Distance/ST_Distance_Sphere(poly, geom) <= 5``"
msgstr "``ST_Distance/ST_Distance_Sphere(poly, geom) <= 5``"

msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) <= 5``"
msgstr "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) <= 5``"

msgid "``Distance(poly, geom) <= 5``"
msgstr "``Distance(poly, geom) <= 5``"

msgid "``dwithin``"
msgstr "``dwithin``"

msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry are within the given distance from one another. Note that you can "
"only provide :class:`~django.contrib.gis.measure.Distance` objects if the "
"targeted geometries are in a projected system. For geographic geometries, "
"you should use units of the geometry field (e.g. degrees for ``WGS84``) ."
msgstr ""

msgid "``ST_DWithin(poly, geom, 5)``"
msgstr "``ST_DWithin(poly, geom, 5)``"

msgid "``SDO_WITHIN_DISTANCE(poly, geom, 5)``"
msgstr "``SDO_WITHIN_DISTANCE(poly, geom, 5)``"

msgid "``PtDistWithin(poly, geom, 5)``"
msgstr "``PtDistWithin(poly, geom, 5)``"

msgid "``GeoQuerySet`` Methods"
msgstr "Cara ``GeoQuerySet``"

msgid ""
"Using ``GeoQuerySet`` methods is now deprecated in favor of the new :doc:"
"`functions`. Albeit a little more verbose, they are much more powerful in "
"how it is possible to combine them to build more complex queries."
msgstr ""

msgid ""
"``GeoQuerySet`` methods specify that a spatial operation be performed on "
"each spatial operation on each geographic field in the queryset and store "
"its output in a new attribute on the model (which is generally the name of "
"the ``GeoQuerySet`` method)."
msgstr ""

msgid ""
"There are also aggregate ``GeoQuerySet`` methods which return a single value "
"instead of a queryset.  This section will describe the API and availability "
"of every ``GeoQuerySet`` method available in GeoDjango."
msgstr ""
"Ada juga metode pengumpulan ``GeoQuerySet`` yang mengembalikan nilai tunggal "
"daripada queryset. Bagian ini akan menggambarkan API dan ketersediaan dari "
"setiap metode ``GeoQuerySet`` tersedia dalam GeoDjango."

msgid ""
"What methods are available depend on your spatial backend.  See the :ref:"
"`compatibility table <database-functions-compatibility>` for more details."
msgstr ""

msgid ""
"With a few exceptions, the following keyword arguments may be used with all "
"``GeoQuerySet`` methods:"
msgstr ""

msgid "``field_name``"
msgstr "``field_name``"

msgid ""
"By default, ``GeoQuerySet`` methods use the first geographic field "
"encountered in the model.  This keyword should be used to specify another "
"geographic field (e.g., ``field_name='point2'``) when there are multiple "
"geographic fields in a model."
msgstr ""

msgid ""
"On PostGIS, the ``field_name`` keyword may also be used on geometry fields "
"in models that are related via a ``ForeignKey`` relation (e.g., "
"``field_name='related__point'``)."
msgstr ""

msgid "``model_att``"
msgstr "``model_att``"

msgid ""
"By default, ``GeoQuerySet`` methods typically attach their output in an "
"attribute with the same name as the ``GeoQuerySet`` method.  Setting this "
"keyword with the desired attribute name will override this default "
"behavior.  For example, ``qs = Zipcode.objects.centroid(model_att='c')`` "
"will attach the centroid of the ``Zipcode`` geometry field in a ``c`` "
"attribute on every model rather than in a ``centroid`` attribute."
msgstr ""

msgid ""
"This keyword is required if a method name clashes with an existing "
"``GeoQuerySet`` method -- if you wanted to use the ``area()`` method on "
"model with a ``PolygonField`` named ``area``, for example."
msgstr ""

msgid "*Availability*: PostGIS, Oracle, SpatiaLite"
msgstr "*Tersedia*: PostGIS, Oracle, SpatiaLite"

msgid "``area``"
msgstr "``area``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Area` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Area` sebagai "
"gantinya."

msgid ""
"Returns the area of the geographic field in an ``area`` attribute on each "
"element of this GeoQuerySet."
msgstr ""

msgid "``distance``"
msgstr "``distance``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Distance` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Distance` "
"sebagai gantinya."

msgid ""
"This method takes a geometry as a parameter, and attaches a ``distance`` "
"attribute to every model in the returned queryset that contains the distance "
"(as a :class:`~django.contrib.gis.measure.Distance` object) to the given "
"geometry."
msgstr ""

msgid ""
"In the following example (taken from the `GeoDjango distance tests`__), the "
"distance from the `Tasmanian`__ city of Hobart to every other :class:"
"`PointField` in the ``AustraliaCity`` queryset is calculated::"
msgstr ""

msgid ""
"Because the ``distance`` attribute is a :class:`~django.contrib.gis.measure."
"Distance` object, you can easily express the value in the units of your "
"choice.  For example, ``city.distance.mi`` is the distance value in miles "
"and ``city.distance.km`` is the distance value in kilometers.  See :doc:"
"`measure` for usage details and the list of :ref:`supported_units`."
msgstr ""

msgid "``length``"
msgstr "``length``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Length` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Length` "
"sebagai gantinya."

msgid ""
"Returns the length of the geometry field in a ``length`` attribute (a :class:"
"`~django.contrib.gis.measure.Distance` object) on each model in the queryset."
msgstr ""

msgid "``perimeter``"
msgstr "``perimeter``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Perimeter` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Perimeter` "
"sebagai gantinya."

msgid ""
"Returns the perimeter of the geometry field in a ``perimeter`` attribute (a :"
"class:`~django.contrib.gis.measure.Distance` object) on each model in the "
"queryset."
msgstr ""

msgid "Geometry Relationships"
msgstr "Hubungan Geometri."

msgid ""
"The following methods take no arguments, and attach geometry objects each "
"element of the :class:`GeoQuerySet` that is the result of relationship "
"function evaluated on the geometry field."
msgstr ""

msgid "``centroid``"
msgstr "``centroid``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Centroid` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Centroid`."

msgid ""
"Returns the ``centroid`` value for the geographic field in a ``centroid`` "
"attribute on each element of the ``GeoQuerySet``."
msgstr ""

msgid "``envelope``"
msgstr "``envelope``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Envelope` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Envelope`."

msgid "*Availability*: PostGIS, SpatiaLite"
msgstr "*Tersedia*: PostGIS, SpatiaLite"

msgid ""
"Returns a geometry representing the bounding box of the geometry field in an "
"``envelope`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

msgid "``point_on_surface``"
msgstr "``point_on_surface``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.PointOnSurface` "
"function instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions."
"PointOnSurface` sebagai gantinya. "

msgid ""
"Returns a Point geometry guaranteed to lie on the surface of the geometry "
"field in a ``point_on_surface`` attribute on each element of the queryset; "
"otherwise sets with None."
msgstr ""

msgid "Geometry Editors"
msgstr "Penyunting Geometri"

msgid "``force_rhr``"
msgstr "``force_rhr``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.ForceRHR` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.ForceRHR`."

msgid "*Availability*: PostGIS"
msgstr "*Tersedia*: PostGIS"

msgid ""
"Returns a modified version of the polygon/multipolygon in which all of the "
"vertices follow the Right-Hand-Rule, and attaches as a ``force_rhr`` "
"attribute on each element of the queryset."
msgstr ""

msgid "``reverse_geom``"
msgstr "``reverse_geom``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Reverse` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Reverse`."

msgid "*Availability*: PostGIS, Oracle"
msgstr "*Tersedia*: PostGIS, Oracle"

msgid ""
"Reverse the coordinate order of the geometry field, and attaches as a "
"``reverse`` attribute on each element of the queryset."
msgstr ""

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Scale` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Scale` "
"sebagai gantinya. "

msgid "``snap_to_grid``"
msgstr "``snap_to_grid``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.SnapToGrid` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.SnapToGrid`."

msgid ""
"Snap all points of the input geometry to the grid.  How the geometry is "
"snapped to the grid depends on how many numeric (either float, integer, or "
"long) arguments are given."
msgstr ""

msgid "A single size to snap bot the X and Y grids to."
msgstr ""

msgid "``transform``"
msgstr "``transform``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Transform` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Transform` "
"sebagai gantinya."

msgid ""
"The ``transform`` method transforms the geometry field of a model to the "
"spatial reference system specified by the ``srid`` parameter.  If no "
"``srid`` is given, then 4326 (WGS84) is used by default."
msgstr ""

msgid ""
"Unlike other ``GeoQuerySet`` methods, ``transform`` stores its output \"in-"
"place\".  In other words, no new attribute for the transformed geometry is "
"placed on the models."
msgstr ""

msgid "``translate``"
msgstr "``translate``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Translate` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Translate` "
"sebagai gantinya."

msgid ""
"Translates the geometry field to a new location using the given numeric "
"parameters as offsets."
msgstr ""

msgid "Geometry Operations"
msgstr ""

msgid ""
"The following methods all take a geometry as a parameter and attach a "
"geometry to each element of the ``GeoQuerySet`` that is the result of the "
"operation."
msgstr ""

msgid "``difference``"
msgstr "``difference``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Difference` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Difference`."

msgid ""
"Returns the spatial difference of the geographic field with the given "
"geometry in a ``difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

msgid "``intersection``"
msgstr "``intersection``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Intersection` "
"function instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Intersection` "
"sebagai gantinya."

msgid ""
"Returns the spatial intersection of the geographic field with the given "
"geometry in an ``intersection`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

msgid "``sym_difference``"
msgstr "``sym_difference``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.SymDifference` "
"function instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions."
"SymDifference` sebagai gantinya."

msgid ""
"Returns the symmetric difference of the geographic field with the given "
"geometry in a ``sym_difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

msgid "``union``"
msgstr "``union``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.Union` function "
"instead."
msgstr "Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.Union`."

msgid ""
"Returns the union of the geographic field with the given geometry in an "
"``union`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

msgid "Geometry Output"
msgstr "Keluaran Geometri"

msgid ""
"The following ``GeoQuerySet`` methods will return an attribute that has the "
"value of the geometry field in each model converted to the requested output "
"format."
msgstr ""

msgid "``geohash``"
msgstr "``geohash``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.GeoHash` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.GeoHash`."

msgid ""
"Attaches a ``geohash`` attribute to every model the queryset containing the "
"`GeoHash`__ representation of the geometry."
msgstr ""

msgid "``geojson``"
msgstr "``geojson``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.AsGeoJSON` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.AsGeoJSON`."

msgid ""
"Attaches a ``geojson`` attribute to every model in the queryset that "
"contains the `GeoJSON`__ representation of the geometry."
msgstr ""

msgid "``gml``"
msgstr "``gml``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.AsGML` function "
"instead."
msgstr "Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.AsGML`."

msgid ""
"Attaches a ``gml`` attribute to every model in the queryset that contains "
"the `Geographic Markup Language (GML)`__ representation of the geometry."
msgstr ""

msgid ""
"This keyword is for PostGIS only.  It may be used to specify the number of "
"significant digits for the coordinates in the GML representation -- the "
"default value is 8."
msgstr ""

msgid ""
"This keyword is for PostGIS only.  It may be used to specify the GML version "
"used, and may only be values of 2 or 3.  The default value is 2."
msgstr ""

msgid "``kml``"
msgstr "``kml``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.AsKML` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.AsKML` "
"sebagai gantinya."

msgid ""
"Attaches a ``kml`` attribute to every model in the queryset that contains "
"the `Keyhole Markup Language (KML)`__ representation of the geometry fields. "
"It should be noted that the contents of the KML are transformed to WGS84 if "
"necessary."
msgstr ""

msgid "``svg``"
msgstr "``svg``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.AsSVG` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.AsSVG` "
"sebagai gantinya."

msgid ""
"Attaches a ``svg`` attribute to every model in the queryset that contains "
"the `Scalable Vector Graphics (SVG)`__ path data of the geometry fields."
msgstr ""

msgid ""
"If set to ``True``, the path data will be implemented in terms of relative "
"moves.  Defaults to ``False``, meaning that absolute moves are used instead."
msgstr ""

msgid "``mem_size``"
msgstr "``mem_size``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.MemSize` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.MemSize` "
"sebagai gantinya. "

msgid ""
"Returns the memory size (number of bytes) that the geometry field takes in a "
"``mem_size`` attribute  on each element of the ``GeoQuerySet``."
msgstr ""

msgid "``num_geom``"
msgstr "``num_geom``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.NumGeometries` "
"function instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions."
"NumGeometries` sebagai gantinya."

msgid ""
"Returns the number of geometries in a ``num_geom`` attribute on each element "
"of the ``GeoQuerySet`` if the geometry field is a collection (e.g., a "
"``GEOMETRYCOLLECTION`` or ``MULTI*`` field); otherwise sets with ``None``."
msgstr ""

msgid "``num_points``"
msgstr "``num_points``"

msgid ""
"Use the :class:`~django.contrib.gis.db.models.functions.NumPoints` function "
"instead."
msgstr ""
"Gunakan fungsi :class:`~django.contrib.gis.db.models.functions.NumPoints`."

msgid ""
"Returns the number of points in the first linestring in the geometry field "
"in a ``num_points`` attribute on each element of the ``GeoQuerySet``; "
"otherwise sets with ``None``."
msgstr ""

msgid ""
"Django provides some GIS-specific aggregate functions. For details on how to "
"use these aggregate functions, see :doc:`the topic guide on aggregation </"
"topics/db/aggregation>`."
msgstr ""

msgid "``tolerance``"
msgstr "``tolerance``"

msgid ""
"This keyword is for Oracle only.  It is for the tolerance value used by the "
"``SDOAGGRTYPE`` procedure; the  `Oracle documentation`__ has more details."
msgstr ""

msgid "``Collect``"
msgstr "``Collect``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Collect.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Collect.html>`__, "
"SpatiaLite"

msgid ""
"Returns a ``GEOMETRYCOLLECTION`` or a ``MULTI`` geometry object from the "
"geometry column. This is analogous to a simplified version of the :class:"
"`Union` aggregate, except it can be several orders of magnitude faster than "
"performing a union because it simply rolls up geometries into a collection "
"or multi object, not caring about dissolving boundaries."
msgstr ""

msgid "``Extent``"
msgstr "``Extent``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Extent.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Extent.html>`__, Oracle, "
"SpatiaLite"

msgid ""
"Returns the extent of all ``geo_field`` in the ``QuerySet`` as a four-tuple, "
"comprising the lower left coordinate and the upper right coordinate."
msgstr ""

msgid "``Extent3D``"
msgstr "``Extent3D``"

msgid "*Availability*: `PostGIS <https://postgis.net/docs/ST_3DExtent.html>`__"
msgstr "*Tersedia*: `PostGIS <https://postgis.net/docs/ST_3DExtent.html>`__"

msgid ""
"Returns the 3D extent of all ``geo_field`` in the ``QuerySet`` as a six-"
"tuple, comprising the lower left coordinate and upper right coordinate (each "
"with x, y, and z coordinates)."
msgstr ""

msgid "``MakeLine``"
msgstr "``MakeLine``"

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_MakeLine.html>`__, "
"SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_MakeLine.html>`__, "
"SpatiaLite"

msgid ""
"Returns a ``LineString`` constructed from the point field geometries in the "
"``QuerySet``. Currently, ordering the queryset has no effect."
msgstr ""

msgid ""
"*Availability*: `PostGIS <https://postgis.net/docs/ST_Union.html>`__, "
"Oracle, SpatiaLite"
msgstr ""
"*Tersedia*: `PostGIS <https://postgis.net/docs/ST_Union.html>`__, Oracle, "
"SpatiaLite"

msgid ""
"This method returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"comprising the union of every geometry in the queryset. Please note that use "
"of ``Union`` is processor intensive and may take a significant amount of "
"time on large querysets."
msgstr ""

msgid ""
"If the computation time for using this method is too expensive, consider "
"using :class:`Collect` instead."
msgstr ""

msgid ""
"*See* `OpenGIS Simple Feature Specification For SQL <http://www.opengis.org/"
"docs/99-049.pdf>`_, at Ch. 2.1.13.2, p. 2-13 (The Dimensionally Extended "
"Nine-Intersection Model)."
msgstr ""

msgid ""
"*See* `SDO_RELATE documentation <https://docs.oracle.com/database/121/SPATL/"
"sdo_relate.htm#SPATL1039>`_, from the Oracle Spatial and Graph Developer's "
"Guide."
msgstr ""

msgid ""
"For an explanation of this routine, read `Quirks of the \"Contains\" Spatial "
"Predicate <http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-"
"covers-spatial.html>`_ by Martin Davis (a PostGIS developer)."
msgstr ""

msgid "GEOS API"
msgstr "API GEOS"

msgid "Background"
msgstr "Latar belakang"

msgid "What is GEOS?"
msgstr "Apa itu GEOS?"

msgid ""
"`GEOS`__ stands for **Geometry Engine - Open Source**, and is a C++ library, "
"ported from the  `Java Topology Suite`__.  GEOS implements the OpenGIS "
"`Simple Features for SQL`__ spatial predicate functions and spatial "
"operators. GEOS, now an OSGeo project, was initially developed and "
"maintained by `Refractions Research`__ of Victoria, Canada."
msgstr ""

msgid "Features"
msgstr "Fitur"

msgid ""
"GeoDjango implements a high-level Python wrapper for the GEOS library, its "
"features include:"
msgstr ""
"GeoDjango menerapkan pembungkus Python tingkat-tinggi untuk pustaka GEOS, "
"fitur-fiturnya termasuk:"

msgid ""
"A BSD-licensed interface to the GEOS geometry routines, implemented purely "
"in Python using ``ctypes``."
msgstr ""

msgid ""
"Loosely-coupled to GeoDjango.  For example, :class:`GEOSGeometry` objects "
"may be used outside of a Django project/application.  In other words, no "
"need to have ``DJANGO_SETTINGS_MODULE`` set or use a database, etc."
msgstr ""

msgid "Mutability: :class:`GEOSGeometry` objects may be modified."
msgstr "Berubah-ubah: obyek :class:`GEOSGeometry` mungkin dirubah."

msgid ""
"Cross-platform and tested; compatible with Windows, Linux, Solaris, and "
"macOS platforms."
msgstr ""

msgid "Tutorial"
msgstr "Tutorial"

msgid ""
"This section contains a brief introduction and tutorial to using :class:"
"`GEOSGeometry` objects."
msgstr ""
"Bagian ini mengandung perkenalan singkat dan tutorial menggunakan obyek :"
"class:`GEOSGeometry`."

msgid "Creating a Geometry"
msgstr "Membuat Geometri"

msgid ""
":class:`GEOSGeometry` objects may be created in a few ways.  The first is to "
"simply instantiate the object on some spatial input -- the following are "
"examples of creating the same geometry from WKT, HEX, WKB, and GeoJSON::"
msgstr ""

msgid ""
"Another option is to use the constructor for the specific geometry type that "
"you wish to create.  For example, a :class:`Point` object may be created by "
"passing in the X and Y coordinates into its constructor::"
msgstr ""

msgid ""
"All these constructors take the keyword argument ``srid``. For example::"
msgstr ""

msgid ""
"Finally, there is the :func:`fromfile` factory method which returns a :class:"
"`GEOSGeometry` object from a file::"
msgstr ""

msgid "My logs are filled with GEOS-related errors"
msgstr "Catatan-catatan saya dipenuhi dengan kesalahan berhubungan-GEOS"

msgid ""
"You find many ``TypeError`` or ``AttributeError`` exceptions filling your "
"Web server's log files. This generally means that you are creating GEOS "
"objects at the top level of some of your Python modules. Then, due to a race "
"condition in the garbage collector, your module is garbage collected before "
"the GEOS object. To prevent this, create :class:`GEOSGeometry` objects "
"inside the local scope of your functions/methods."
msgstr ""

msgid "Geometries are Pythonic"
msgstr ""

msgid ""
":class:`GEOSGeometry` objects are 'Pythonic', in other words components may "
"be accessed, modified, and iterated over using standard Python conventions. "
"For example, you can iterate over the coordinates in a :class:`Point`::"
msgstr ""

msgid ""
"With any geometry object, the :attr:`GEOSGeometry.coords` property may be "
"used to get the geometry coordinates as a Python tuple::"
msgstr ""

msgid ""
"You can get/set geometry components using standard Python indexing "
"techniques.  However, what is returned depends on the geometry type of the "
"object.  For example, indexing on a :class:`LineString` returns a coordinate "
"tuple::"
msgstr ""

msgid ""
"Whereas indexing on a :class:`Polygon` will return the ring (a :class:"
"`LinearRing` object) corresponding to the index::"
msgstr ""

msgid ""
"In addition, coordinates/components of the geometry may added or modified, "
"just like a Python list::"
msgstr ""

msgid "Geometries support set-like operators::"
msgstr ""

msgid "Equality operator doesn't check spatial equality"
msgstr ""

msgid ""
"The :class:`~GEOSGeometry` equality operator uses :meth:`~GEOSGeometry."
"equals_exact`, not :meth:`~GEOSGeometry.equals`, i.e. it requires the "
"compared geometries to have the same coordinates in the same positions with "
"the same SRIDs::"
msgstr ""

msgid ""
"Older versions didn't check the ``srid`` when comparing ``GEOSGeometry`` "
"objects using the equality operator."
msgstr ""

msgid "Geometry Objects"
msgstr "Obyek Geometri"

msgid "``GEOSGeometry``"
msgstr "``GEOSGeometry``"

msgid "Geometry input value (string or buffer)"
msgstr ""

msgid "spatial reference identifier"
msgstr ""

msgid ""
"This is the base class for all GEOS geometry objects.  It initializes on the "
"given ``geo_input`` argument, and then assumes the proper geometry subclass "
"(e.g., ``GEOSGeometry('POINT(1 1)')`` will create a :class:`Point` object)."
msgstr ""

msgid ""
"The following input formats, along with their corresponding Python types, "
"are accepted:"
msgstr ""

msgid "Format"
msgstr "Bentuk"

msgid "Input Type"
msgstr "Jenis Masukan"

msgid "WKT / EWKT"
msgstr "WKT / EWKT"

msgid "``str`` or ``unicode``"
msgstr "``str`` atau ``unicode``"

msgid "HEX / HEXEWKB"
msgstr "HEX / HEXEWKB"

msgid "WKB / EWKB"
msgstr "WKB / EWKB"

msgid "``buffer``"
msgstr "``buffer``"

msgid "GeoJSON"
msgstr ""

msgid "Constructs a :class:`GEOSGeometry` from the given GML string."
msgstr ""

msgid "Properties"
msgstr ""

msgid "Returns the coordinates of the geometry as a tuple."
msgstr "Mengembalikan kordinat dari geometri sebagai tuple."

msgid "Returns the dimension of the geometry:"
msgstr "Mengembalikan dimensi dari geometri:"

msgid "``0`` for :class:`Point`\\s and :class:`MultiPoint`\\s"
msgstr "``0`` untuk :class:`Point` dan :class:`MultiPoint`"

msgid "``1`` for :class:`LineString`\\s and :class:`MultiLineString`\\s"
msgstr "``1`` untuk :class:`LineString` dan :class:`MultiLineString`"

msgid "``2`` for :class:`Polygon`\\s and :class:`MultiPolygon`\\s"
msgstr "``2`` untuk :class:`Polygon` dan :class:`MultiPolygon`"

msgid "``-1`` for empty :class:`GeometryCollection`\\s"
msgstr "``-1`` untuk :class:`GeometryCollection` kosong"

msgid ""
"the maximum dimension of its elements for non-empty :class:"
"`GeometryCollection`\\s"
msgstr ""

msgid "Returns whether or not the set of points in the geometry is empty."
msgstr ""

msgid "Returns a string corresponding to the type of geometry.  For example::"
msgstr ""

msgid ""
"Returns the GEOS geometry type identification number.  The following table "
"shows the value for each geometry type:"
msgstr ""

msgid "Geometry"
msgstr "Geometri"

msgid "ID"
msgstr "ID"

msgid ":class:`Point`"
msgstr ":class:`Point`"

msgid "0"
msgstr "0"

msgid ":class:`LineString`"
msgstr ":class:`LineString`"

msgid ":class:`LinearRing`"
msgstr ":class:`LinearRing`"

msgid ":class:`Polygon`"
msgstr ":class:`Polygon`"

msgid ":class:`MultiPoint`"
msgstr ":class:`MultiPoint`"

msgid ":class:`MultiLineString`"
msgstr ":class:`MultiLineString`"

msgid ":class:`MultiPolygon`"
msgstr ":class:`MultiPolygon`"

msgid ":class:`GeometryCollection`"
msgstr ":class:`GeometryCollection`"

msgid "Returns the number of coordinates in the geometry."
msgstr "Mengembalikan angka dari kordinat di geometri."

msgid ""
"Returns the number of geometries in this geometry.  In other words, will "
"return 1 on anything but geometry collections."
msgstr ""

msgid "Returns a boolean indicating whether the geometry is three-dimensional."
msgstr ""

msgid "Returns a boolean indicating whether the geometry is a ``LinearRing``."
msgstr ""

msgid ""
"Returns a boolean indicating whether the geometry is 'simple'. A geometry is "
"simple if and only if it does not intersect itself (except at boundary "
"points).  For example, a :class:`LineString` object is not simple if it "
"intersects itself. Thus, :class:`LinearRing` and :class:`Polygon` objects "
"are always simple because they do cannot intersect themselves, by definition."
msgstr ""

msgid "Returns a boolean indicating whether the geometry is valid."
msgstr ""

msgid "Returns a string describing the reason why a geometry is invalid."
msgstr ""
"Mengembalikan deretan kalimat menggambarkan alasan mengapa geometri sah."

msgid ""
"Property that may be used to retrieve or set the SRID associated with the "
"geometry.  For example::"
msgstr ""

msgid "Output Properties"
msgstr ""

msgid ""
"The properties in this section export the :class:`GEOSGeometry` object into "
"a different.  This output may be in the form of a string, buffer, or even "
"another object."
msgstr ""

msgid ""
"Returns the \"extended\" Well-Known Text of the geometry.  This "
"representation is specific to PostGIS and is a superset of the OGC WKT "
"standard. [#fnogc]_ Essentially the SRID is prepended to the WKT "
"representation, for example ``SRID=4326;POINT(5 23)``."
msgstr ""

msgid ""
"The output from this property does not include the 3dm, 3dz, and 4d "
"information that PostGIS supports in its EWKT representations."
msgstr ""

msgid ""
"Returns the WKB of this Geometry in hexadecimal form.  Please note that the "
"SRID value is not included in this representation because it is not a part "
"of the OGC specification (use the :attr:`GEOSGeometry.hexewkb` property "
"instead)."
msgstr ""

msgid ""
"Returns the EWKB of this Geometry in hexadecimal form.  This is an extension "
"of the WKB specification that includes the SRID value that are a part of "
"this geometry."
msgstr ""

msgid ""
"Returns the GeoJSON representation of the geometry. Note that the result is "
"not a complete GeoJSON structure but only the ``geometry`` key content of a "
"GeoJSON structure. See also :doc:`/ref/contrib/gis/serializers`."
msgstr ""

msgid "Alias for :attr:`GEOSGeometry.json`."
msgstr "Nama lain dari :attr:`GEOSGeometry.json`."

msgid ""
"Returns a `KML`__ (Keyhole Markup Language) representation of the geometry.  "
"This should only be used for geometries with an SRID of 4326 (WGS84), but "
"this restriction is not enforced."
msgstr ""

msgid ""
"Returns an :class:`~django.contrib.gis.gdal.OGRGeometry` object "
"corresponding to the GEOS geometry."
msgstr ""
"Mengembalikan obyek :class:`~django.contrib.gis.gdal.OGRGeometry` terkait "
"pada permintaan pada geometri GEOS."

msgid ""
"Returns the WKB (Well-Known Binary) representation of this Geometry as a "
"Python buffer.  SRID value is not included, use the :attr:`GEOSGeometry."
"ewkb` property instead."
msgstr ""

msgid ""
"Return the EWKB representation of this Geometry as a Python buffer. This is "
"an extension of the WKB specification that includes any SRID value that are "
"a part of this geometry."
msgstr ""

msgid "Returns the Well-Known Text of the geometry (an OGC standard)."
msgstr ""

msgid "Non-significant zeros are stripped from the output."
msgstr ""

msgid "Spatial Predicate Methods"
msgstr ""

msgid ""
"All of the following spatial predicate methods take another :class:"
"`GEOSGeometry` instance (``other``) as a parameter, and return a boolean."
msgstr ""

msgid ""
"Returns ``True`` if :meth:`other.within(this) <GEOSGeometry.within>` returns "
"``True``."
msgstr ""

msgid "Returns ``True`` if this geometry covers the specified geometry."
msgstr "Mengembalikan ``True`` jika geometri mencangkup geometri tertentu."

msgid "The ``covers`` predicate has the following equivalent definitions:"
msgstr ""

msgid "Every point of the other geometry is a point of this geometry."
msgstr ""

msgid ""
"The DE-9IM Intersection Matrix for the two geometries is ``T*****FF*``, "
"``*T****FF*``, ``***T**FF*``, or ``****T*FF*``."
msgstr ""

msgid "If either geometry is empty, returns ``False``."
msgstr "Jika salah satu geometri adalah kosong, kembalikan ``False``."

msgid ""
"This predicate is similar to :meth:`GEOSGeometry.contains`, but is more "
"inclusive (i.e. returns ``True`` for more cases). In particular, unlike :"
"meth:`~GEOSGeometry.contains` it does not distinguish between points in the "
"boundary and in the interior of geometries. For most situations, "
"``covers()`` should be preferred to :meth:`~GEOSGeometry.contains`. As an "
"added benefit, ``covers()`` is more amenable to optimization and hence "
"should outperform :meth:`~GEOSGeometry.contains`."
msgstr ""

msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two Geometries is "
"``T*T******`` (for a point and a curve,a point and an area or a line and an "
"area) ``0********`` (for two curves)."
msgstr ""

msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FF*FF****``."
msgstr ""

msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**FFF*``."
msgstr ""

msgid ""
"Returns true if the two geometries are exactly equal, up to a specified "
"tolerance.  The ``tolerance`` value should be a floating point number "
"representing the error tolerance in the comparison, e.g., ``poly1."
"equals_exact(poly2, 0.001)`` will compare equality to within one thousandth "
"of a unit."
msgstr ""

msgid "Returns ``True`` if :meth:`GEOSGeometry.disjoint` is ``False``."
msgstr ""
"Mengembalikan ``True`` jika :meth:`GEOSGeometry.disjoint` adalah ``False``."

msgid ""
"Returns true if the DE-9IM intersection matrix for the two geometries is "
"``T*T***T**`` (for two points or two surfaces) ``1*T***T**`` (for two "
"curves)."
msgstr ""

msgid ""
"Returns ``True`` if the elements in the DE-9IM intersection matrix for this "
"geometry and the other matches the given ``pattern`` -- a string of nine "
"characters from the alphabet: {``T``, ``F``, ``*``, ``0``}."
msgstr ""

msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FT*******``, ``F**T*****`` or ``F***T****``."
msgstr ""

msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**F***``."
msgstr ""

msgid "Topological Methods"
msgstr ""

msgid ""
"Returns a :class:`GEOSGeometry` that represents all points whose distance "
"from this geometry is less than or equal to the given ``width``. The "
"optional ``quadsegs`` keyword sets the number of segments used to "
"approximate a quarter circle (defaults is 8)."
msgstr ""

msgid ""
"Returns a :class:`GEOSGeometry` representing the points making up this "
"geometry that do not make up other."
msgstr ""

msgid ""
"Given a distance (float), returns the point (or closest point) within the "
"geometry (:class:`LineString` or :class:`MultiLineString`) at that distance. "
"The normalized version takes the distance as a float between 0 (origin) and "
"1 (endpoint)."
msgstr ""

msgid "Reverse of :meth:`GEOSGeometry.project`."
msgstr "Membalikkan dari :meth:`GEOSGeometry.project`."

msgid ""
"Returns a :class:`GEOSGeometry` representing the points shared by this "
"geometry and other."
msgstr ""

msgid ""
"Returns the distance (float) from the origin of the geometry (:class:"
"`LineString` or :class:`MultiLineString`) to the point projected on the "
"geometry (that is to a point of the line the closest to the given point). "
"The normalized version returns the distance as a float between 0 (origin) "
"and 1 (endpoint)."
msgstr ""

msgid "Reverse of :meth:`GEOSGeometry.interpolate`."
msgstr "Membalikkan dari :meth:`GEOSGeometry.interpolate`."

msgid ""
"Returns the DE-9IM intersection matrix (a string) representing the "
"topological relationship between this geometry and the other."
msgstr ""

msgid ""
"Returns a new :class:`GEOSGeometry`, simplified to the specified tolerance "
"using the Douglas-Peucker algorithm. A higher tolerance value implies fewer "
"points in the output. If no tolerance is provided, it defaults to 0."
msgstr ""

msgid ""
"By default, this function does not preserve topology. For example, :class:"
"`Polygon` objects can be split, be collapsed into lines, or disappear. :"
"class:`Polygon` holes can be created or disappear, and lines may cross. By "
"specifying ``preserve_topology=True``, the result will have the same "
"dimension and number of components as the input; this is significantly "
"slower, however."
msgstr ""

msgid ""
"Returns a :class:`GEOSGeometry` combining the points in this geometry not in "
"other, and the points in other not in this geometry."
msgstr ""

msgid ""
"Returns a :class:`GEOSGeometry` representing all the points in this geometry "
"and the other."
msgstr ""

msgid "Topological Properties"
msgstr ""

msgid "Returns the boundary as a newly allocated Geometry object."
msgstr ""

msgid ""
"Returns a :class:`Point` object representing the geometric center of the "
"geometry.  The point is not guaranteed to be on the interior of the geometry."
msgstr ""

msgid ""
"Returns the smallest :class:`Polygon` that contains all the points in the "
"geometry."
msgstr ""

msgid ""
"Returns a :class:`Polygon` that represents the bounding envelope of this "
"geometry. Note that it can also return a :class:`Point` if the input "
"geometry is a point."
msgstr ""

msgid ""
"Computes and returns a :class:`Point` guaranteed to be on the interior of "
"this geometry."
msgstr ""

msgid "Computes the union of all the elements of this geometry."
msgstr ""

msgid "The result obeys the following contract:"
msgstr ""

msgid ""
"Unioning a set of :class:`LineString`\\s has the effect of fully noding and "
"dissolving the linework."
msgstr ""

msgid ""
"Unioning a set of :class:`Polygon`\\s will always return a :class:`Polygon` "
"or :class:`MultiPolygon` geometry (unlike :meth:`GEOSGeometry.union`, which "
"may return geometries of lower dimension if a topology collapse occurs)."
msgstr ""

msgid "Other Properties & Methods"
msgstr ""

msgid "This property returns the area of the Geometry."
msgstr ""

msgid ""
"This property returns the extent of this geometry as a 4-tuple, consisting "
"of ``(xmin, ymin, xmax, ymax)``."
msgstr ""

msgid ""
"This method returns a :class:`GEOSGeometry` that is a clone of the original."
msgstr ""

msgid ""
"Returns the distance between the closest points on this geometry and the "
"given ``geom`` (another :class:`GEOSGeometry` object)."
msgstr ""

msgid ""
"GEOS distance calculations are  linear -- in other words, GEOS does not "
"perform a spherical calculation even if the SRID specifies a geographic "
"coordinate system."
msgstr ""

msgid ""
"Returns the length of this geometry (e.g., 0 for a :class:`Point`, the "
"length of a :class:`LineString`, or the circumference of a :class:`Polygon`)."
msgstr ""

msgid ""
"Returns a GEOS ``PreparedGeometry`` for the contents of this geometry. "
"``PreparedGeometry`` objects are optimized for the contains, intersects, "
"covers, crosses, disjoint, overlaps, touches and within operations. Refer to "
"the :ref:`prepared-geometries` documentation for more information."
msgstr ""

msgid ""
"Returns a :class:`~django.contrib.gis.gdal.SpatialReference` object "
"corresponding to the SRID of the geometry or ``None``."
msgstr ""

msgid ""
"Transforms the geometry according to the given coordinate transformation "
"parameter (``ct``), which may be an integer SRID, spatial reference WKT "
"string, a PROJ.4 string, a :class:`~django.contrib.gis.gdal."
"SpatialReference` object, or a :class:`~django.contrib.gis.gdal."
"CoordTransform` object. By default, the geometry is transformed in-place and "
"nothing is returned. However if the ``clone`` keyword is set, then the "
"geometry is not modified and a transformed clone of the geometry is returned "
"instead."
msgstr ""

msgid ""
"Raises :class:`~django.contrib.gis.geos.GEOSException` if GDAL is not "
"available or if the geometry's SRID is ``None`` or less than 0. It doesn't "
"impose any constraints on the geometry's SRID if called with a :class:"
"`~django.contrib.gis.gdal.CoordTransform` object."
msgstr ""

msgid ""
"In previous versions, it required the geometry's SRID to be a positive "
"integer even if it was called with a :class:`~django.contrib.gis.gdal."
"CoordTransform` object."
msgstr ""

msgid "Converts this geometry to canonical form::"
msgstr ""

msgid "``Point``"
msgstr "``Point``"

msgid ""
"``Point`` objects are instantiated using arguments that represent the "
"component coordinates of the point or with a single sequence coordinates. "
"For example, the following are equivalent::"
msgstr ""

msgid ""
"Empty ``Point`` objects may be instantiated by passing no arguments or an "
"empty sequence. The following are equivalent::"
msgstr ""

msgid "In previous versions, an empty ``Point`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``Point`` kosong tidak dapat diinstasiasikan."

msgid "``LineString``"
msgstr "``LineString``"

msgid ""
"``LineString`` objects are instantiated using arguments that are either a "
"sequence of coordinates or :class:`Point` objects. For example, the "
"following are equivalent::"
msgstr ""

msgid ""
"In addition, ``LineString`` objects may also be created by passing in a "
"single sequence of coordinate or :class:`Point` objects::"
msgstr ""

msgid ""
"Empty ``LineString`` objects may be instantiated by passing no arguments or "
"an empty sequence. The following are equivalent::"
msgstr ""

msgid "In previous versions, an empty ``LineString`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``LineString`` kosong tidak dapat "
"diinstasiasikan."

msgid "Returns whether or not this ``LineString`` is closed."
msgstr "Mengembalikan apakah atau tidak ``LineString`` ini ditutup."

msgid "``LinearRing``"
msgstr "``LinearRing``"

msgid ""
"``LinearRing`` objects are constructed in the exact same way as :class:"
"`LineString` objects, however the coordinates must be *closed*, in other "
"words, the first coordinates must be the same as the last coordinates. For "
"example::"
msgstr ""

msgid ""
"Notice that ``(0, 0)`` is the first and last coordinate -- if they were not "
"equal, an error would be raised."
msgstr ""
"Perhatikan bahwa ``(0, 0)`` adalah kordinat pertama dan terakhir -- jika "
"mereka tidak setara, sebuah kesalahan akan dimunculkan."

msgid "``Polygon``"
msgstr "``Polygon``"

msgid ""
"``Polygon`` objects may be instantiated by passing in parameters that "
"represent the rings of the polygon.  The parameters must either be :class:"
"`LinearRing` instances, or a sequence that may be used to construct a :class:"
"`LinearRing`::"
msgstr ""

msgid "In previous versions, an empty ``Polygon`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``Polygon`` kosong tidak dapat diinstasiasikan."

msgid ""
"Returns a polygon object from the given bounding-box, a 4-tuple comprising "
"``(xmin, ymin, xmax, ymax)``."
msgstr ""
"Mengembalikan sebuah obyek poligon dari kotak-dikelilingi diberikan, 4-tuple "
"meliputi ``(xmin, ymin, xmax, ymax)``."

msgid "Returns the number of interior rings in this geometry."
msgstr "Mengembalikan sejumlah lingkaran interior di geometri ini."

msgid "Comparing Polygons"
msgstr "Membandingkan Polygon"

msgid ""
"Note that it is possible to compare ``Polygon`` objects directly with ``<`` "
"or ``>``, but as the comparison is made through Polygon's :class:"
"`LineString`, it does not mean much (but is consistent and quick). You can "
"always force the comparison with the :attr:`~GEOSGeometry.area` property::"
msgstr ""

msgid "Geometry Collections"
msgstr "Kumpulan Geometri"

msgid "``MultiPoint``"
msgstr "``MultiPoint``"

msgid ""
"``MultiPoint`` objects may be instantiated by passing in :class:`Point` "
"objects as arguments, or a single sequence of :class:`Point` objects::"
msgstr ""

msgid "In previous versions, an empty ``MultiPoint`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``MultiPoint`` kosong tidak dapat "
"diinstasiasikan."

msgid "``MultiLineString``"
msgstr "``MultiLineString``"

msgid ""
"``MultiLineString`` objects may be instantiated by passing in :class:"
"`LineString` objects as arguments, or a single sequence of :class:"
"`LineString` objects::"
msgstr ""

msgid ""
"In previous versions, an empty ``MultiLineString`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``MultiLineString`` kosong tidak dapat "
"diinstasiasikan."

msgid ""
"Returns a :class:`LineString` representing the line merge of all the "
"components in this ``MultiLineString``."
msgstr ""
"Mengembalikan sebuah :class:`LineString` mewakili baris menggabungkan semua "
"komponen di ``MultiLineString`` ini."

msgid ""
"Returns ``True`` if and only if all elements are closed. Requires GEOS 3.5."
msgstr ""
"Mengembalikan ``True`` jika dan hanya jika semua unsur ditutup. Membutuhkan "
"GEOS 3.5."

msgid "``MultiPolygon``"
msgstr "``MultiPolygon``"

msgid ""
"``MultiPolygon`` objects may be instantiated by passing :class:`Polygon` "
"objects as arguments, or a single sequence of :class:`Polygon` objects::"
msgstr ""

msgid ""
"In previous versions, an empty ``MultiPolygon`` couldn't be instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``MultiPolygon`` kosong tidak dapat "
"diinstasiasikan."

msgid "Use the :attr:`GEOSGeometry.unary_union` property instead."
msgstr "Gunakan sifat :attr:`GEOSGeometry.unary_union` sebagai gantinya."

msgid ""
"Returns a :class:`Polygon` that is the union of all of the component "
"polygons in this collection.  The algorithm employed is significantly more "
"efficient (faster) than trying to union the geometries together "
"individually. [#fncascadedunion]_"
msgstr ""

msgid "``GeometryCollection``"
msgstr "``GeometryCollection``"

msgid ""
"``GeometryCollection`` objects may be instantiated by passing in other :"
"class:`GEOSGeometry` as arguments, or a single sequence of :class:"
"`GEOSGeometry` objects::"
msgstr ""

msgid ""
"In previous versions, an empty ``GeometryCollection`` couldn't be "
"instantiated."
msgstr ""
"Di versi sebelumnya, sebuah ``GeometryCollection`` kosong tidak dapat "
"diinstasiasikan."

msgid "Prepared Geometries"
msgstr "Prepared Geometry"

msgid ""
"In order to obtain a prepared geometry, just access the :attr:`GEOSGeometry."
"prepared` property.  Once you have a ``PreparedGeometry`` instance its "
"spatial predicate methods, listed below, may be used with other "
"``GEOSGeometry`` objects.  An operation with a prepared geometry can be "
"orders of magnitude faster -- the more complex the geometry that is "
"prepared, the larger the speedup in the operation.  For more information, "
"please consult the `GEOS wiki page on prepared geometries <https://trac."
"osgeo.org/geos/wiki/PreparedGeometry>`_."
msgstr ""

msgid "``PreparedGeometry``"
msgstr "``PreparedGeometry``"

msgid ""
"All methods on ``PreparedGeometry`` take an ``other`` argument, which must "
"be a :class:`GEOSGeometry` instance."
msgstr ""
"Semua metode pada ``PreparedGeometry`` mengambil sebuah argumen ``other``, "
"yang harus berupa instance :class:`GEOSGeometry`."

msgid "Geometry Factories"
msgstr "Pabrik Geometri"

msgid "input file that contains spatial data"
msgstr "masukan berkas yang mengandung data spasial"

msgid "Return type"
msgstr "Jenis Kembalian"

msgid "a :class:`GEOSGeometry` corresponding to the spatial data in the file"
msgstr ":class:`GEOSGeometry` berhubungan ke data spasial dalam berkas"

msgid "string that contains spatial data"
msgstr "deretan karakter yang mengandung data spasial"

msgid "a :class:`GEOSGeometry` corresponding to the spatial data in the string"
msgstr ":class:`GEOSGeometry` terkait pada data spasial di deretan karakter"

msgid ""
"``fromstr(string, srid)`` is equivalent to :class:`GEOSGeometry(string, "
"srid) <GEOSGeometry>`."
msgstr ""
"``fromstr(string, srid)`` setara dengan :class:`GEOSGeometry(string, srid) "
"<GEOSGeometry>`."

msgid "I/O Objects"
msgstr "Obyek I/O"

msgid "Reader Objects"
msgstr "Obyek Pembaca"

msgid ""
"The reader I/O classes simply return a :class:`GEOSGeometry` instance from "
"the WKB and/or WKT input given to their ``read(geom)`` method."
msgstr ""

msgid "Writer Objects"
msgstr "Obyek Penulis"

msgid ""
"All writer objects have a ``write(geom)`` method that returns either the WKB "
"or WKT of the given geometry.  In addition, :class:`WKBWriter` objects also "
"have properties that may be used to change the byte order, and or include "
"the SRID value (in other words, EWKB)."
msgstr ""

msgid ""
"``WKBWriter`` provides the most control over its output.  By default it "
"returns OGC-compliant WKB when its ``write`` method is called.  However, it "
"has properties that allow for the creation of EWKB, a superset of the WKB "
"standard that includes additional information. See the :attr:`WKBWriter."
"outdim` documentation for more details about the ``dim`` argument."
msgstr ""

msgid "The ability to pass the ``dim`` argument to the constructor was added."
msgstr "Kemampuan meloloskan argumen ``dim`` ke pembangun telah ditambahkan."

msgid ""
"Returns the WKB of the given geometry as a Python ``buffer`` object. "
"Example::"
msgstr ""

msgid "Returns WKB of the geometry in hexadecimal.  Example::"
msgstr "Mengembalikan WKB dari geometri di heksadesimal. Contoh::"

msgid ""
"This property may be set to change the byte-order of the geometry "
"representation."
msgstr ""

msgid "Byteorder Value"
msgstr "Nilai Byteorder"

msgid "Big Endian (e.g., compatible with RISC systems)"
msgstr "Big Endian (sebagai contoh, cocok dengan sistem RISC)"

msgid "Little Endian (e.g., compatible with x86 systems)"
msgstr "Little Endian (sebagai contoh, cocok dengan sistem x86)"

msgid ""
"This property may be set to change the output dimension of the geometry "
"representation.  In other words, if you have a 3D geometry then set to 3 so "
"that the Z value is included in the WKB."
msgstr ""

msgid "Outdim Value"
msgstr "Nilai Outdim"

msgid "The default, output 2D WKB."
msgstr "Awalan, keluaran 2D WKB. "

msgid "Output 3D WKB."
msgstr "Keluaran 3D WKB."

msgid ""
"Set this property with a boolean to indicate whether the SRID of the "
"geometry should be included with the WKB representation.  Example::"
msgstr ""

msgid ""
"This class allows outputting the WKT representation of a geometry. See the :"
"attr:`WKBWriter.outdim`, :attr:`trim`, and :attr:`precision` attributes for "
"details about the constructor arguments."
msgstr ""

msgid ""
"The ability to pass the ``dim``, ``trim``, and ``precision`` arguments to "
"the constructor was added."
msgstr ""
"Kemampuan melewatkan argumen ``dim``, ``trim``, dan ``precision`` ke "
"pembangun telah ditambahkan."

msgid "Returns the WKT of the given geometry. Example::"
msgstr "Mengembalikan WKT dari geometri diberikan. Contoh::"

msgid "See :attr:`WKBWriter.outdim`."
msgstr "Lihat :attr:`WKBWriter.outdim`."

msgid ""
"This property is used to enable or disable trimming of unnecessary decimals."
msgstr ""
"Sifat ini digunakan untuk mengadakan atau meniadakan memangkas dari desimal "
"yang tidak diperlukan."

msgid ""
"This property controls the rounding precision of coordinates; if set to "
"``None`` rounding is disabled."
msgstr ""
"Sifat ini mengendalikan ketelitian pembulatan dari kordinat; jika disetel "
"menjadi ``None`` pembulatan adalah ditiadakan."

msgid ""
"For more information, read Paul Ramsey's blog post about `(Much) Faster "
"Unions in PostGIS 1.4 <http://blog.cleverelephant.ca/2009/01/must-faster-"
"unions-in-postgis-14.html>`_ and Martin Davis' blog post on `Fast polygon "
"merging in JTS using Cascaded Union <http://lin-ear-th-inking.blogspot."
"com/2007/11/fast-polygon-merging-in-jts-using.html>`_."
msgstr ""
"Untuk informasi lebih, baca penempatan blog Paul Ramsey tentang `(Much) "
"Faster Unions in PostGIS 1.4 <http://blog.cleverelephant.ca/2009/01/must-"
"faster-unions-in-postgis-14.html>`_ dan penempatan blog Martin Davis pada "
"`Fast polygon merging in JTS using Cascaded Union <http://lin-ear-th-inking."
"blogspot.com/2007/11/fast-polygon-merging-in-jts-using.html>`_."

msgid "``GEOS_LIBRARY_PATH``"
msgstr "``GEOS_LIBRARY_PATH``"

msgid ""
"A string specifying the location of the GEOS C library.  Typically, this "
"setting is only used if the GEOS C library is in a non-standard location (e."
"g., ``/home/bob/lib/libgeos_c.so``)."
msgstr ""
"Sebuah string menentukan tempat dari pustaka C GEOS. Khususnya, pengaturan "
"ini hanya digunakan jika pustaka C GEOS adalah di tempat bukan-standar "
"(sebagai contoh, ``/home/bob/lib/libgeos_c.so``)."

msgid ""
"The setting must be the *full* path to the **C** shared library; in other "
"words you want to use ``libgeos_c.so``, not ``libgeos.so``."
msgstr ""
"Pengaturan harus berupa jalur *penuh* pada pustaka berbagi *C*; dengan kata "
"lain anda ingin menggunakan ``libgeos_c.so``, bukan ``libgeos.so``."

msgid "Exceptions"
msgstr "Pengecualian"

msgid "The base GEOS exception, indicates a GEOS-related error."
msgstr "Pengecualian GEOS dasar, menunjukkan kesalahan terkait-GEOS."

msgid "GeoDjango"
msgstr "GeoDjango"

msgid ""
"GeoDjango intends to be a world-class geographic Web framework. Its goal is "
"to make it as easy as possible to build GIS Web applications and harness the "
"power of spatially enabled data."
msgstr ""
"GeoDjango bermaksud menjadi kerangka kerja Jaringan geografis kelas-dunia. "
"Tujuannya adalah membuat itu semudah mungkin membangun aplikasi Jaringan GIS "
"dan memanfaatkan kekuatan dari data diadakan spasial."

msgid "Installing Geospatial libraries"
msgstr "Memasang pustaka Geospatial"

msgid ""
"GeoDjango uses and/or provides interfaces for the following open source "
"geospatial libraries:"
msgstr ""
"GeoDjango menggunakan dan/atau menyediakan antarmuka untuk pustaka "
"geospatial sumber terbuka berikut:"

msgid "Program"
msgstr "Program"

msgid "Required"
msgstr "Dibutuhkan"

msgid "Supported Versions"
msgstr "Versi Didukung"

msgid ":doc:`GEOS <../geos>`"
msgstr ":doc:`GEOS <../geos>`"

msgid "Geometry Engine Open Source"
msgstr "Geometry Engine Open Source"

msgid "Yes"
msgstr "Ya"

msgid "3.5, 3.4, 3.3"
msgstr ""

msgid "`PROJ.4`_"
msgstr "`PROJ.4`_"

msgid "Cartographic Projections library"
msgstr "Pustaka Cartographic Projections"

msgid "Yes (PostgreSQL and SQLite only)"
msgstr "Ya (hanya PostgreSQL dan SQLite )"

msgid "4.9, 4.8, 4.7, 4.6, 4.5, 4.4"
msgstr "4.9, 4.8, 4.7, 4.6, 4.5, 4.4"

msgid ":doc:`GDAL <../gdal>`"
msgstr ":doc:`GDAL <../gdal>`"

msgid "Geospatial Data Abstraction Library"
msgstr "Pustaka Abstrak Data Geospatial"

msgid "2.1, 2.0, 1.11, 1.10, 1.9"
msgstr ""

msgid ":doc:`GeoIP <../geoip2>`"
msgstr ":doc:`GeoIP <../geoip2>`"

msgid "IP-based geolocation library"
msgstr "Pustaka geolokasi berdasarkan-IP"

msgid "No"
msgstr "Tidak"

msgid "`PostGIS`__"
msgstr "`PostGIS`__"

msgid "Spatial extensions for PostgreSQL"
msgstr "Tambahan spasial untuk PostgreSQL"

msgid "Yes (PostgreSQL only)"
msgstr "Ya (hanya PostgreSQL)"

msgid "2.3, 2.2, 2.1"
msgstr ""

msgid "`SpatiaLite`__"
msgstr "`SpatiaLite`__"

msgid "Spatial extensions for SQLite"
msgstr "Tambahan spasial untuk SQLite"

msgid "Yes (SQLite only)"
msgstr "Ya (hanya SQLite )"

msgid "4.3, 4.2, 4.1, 4.0"
msgstr ""

msgid ""
"Note that older or more recent versions of these libraries *may* also work "
"totally fine with GeoDjango. Your mileage may vary."
msgstr ""
"Catat bahwa terlama atau lebih versi saat ini dari pustaka-pustaka ini "
"*mungkin* juga bekerja sepenuhnya baik dengan GeoDjango. Jarak tempuh anda "
"mungkin beragam."

msgid ""
"In older versions, GDAL is required only for SQLite. Now it's required for "
"all databases."
msgstr ""

msgid ""
"The GeoDjango interfaces to GEOS, GDAL, and GeoIP may be used independently "
"of Django.  In other words, no database or settings file required -- just "
"import them as normal from :mod:`django.contrib.gis`."
msgstr ""

msgid ""
"On Debian/Ubuntu, you are advised to install the following packages which "
"will install, directly or by dependency, the required geospatial libraries:"
msgstr ""

msgid "Optional packages to consider:"
msgstr "Paket pilihan untuk dipertimbangkan:"

msgid "``libgeoip1``: for :doc:`GeoIP <../geoip2>` support"
msgstr "``libgeoip1``: untuk dukungan :doc:`GeoIP <../geoip2>`"

msgid ""
"``python-gdal`` for GDAL's own Python bindings -- includes interfaces for "
"raster manipulation"
msgstr ""

msgid ""
"Please also consult platform-specific instructions if you are on :ref:"
"`macos` or :ref:`windows`."
msgstr ""

msgid "Building from source"
msgstr "Membangun dari sumber"

msgid ""
"When installing from source on UNIX and GNU/Linux systems, please follow the "
"installation instructions carefully, and install the libraries in the given "
"order.  If using MySQL or Oracle as the spatial database, only GEOS is "
"required."
msgstr ""

msgid ""
"On Linux platforms, it may be necessary to run the ``ldconfig`` command "
"after installing each library. For example::"
msgstr ""
"Pada serambi Linux, itu mungkin sangat diperlukan menjalankan perintah "
"``ldconfig`` setelah memasang setiap pustaka. Sebagai contoh::"

msgid ""
"macOS users must install `Xcode`_ in order to compile software from source."
msgstr ""

msgid "GEOS"
msgstr "GEOS"

msgid ""
"GEOS is a C++ library for performing geometric operations, and is the "
"default internal geometry representation used by GeoDjango (it's behind the "
"\"lazy\" geometries).  Specifically, the C API library is called (e.g., "
"``libgeos_c.so``) directly from Python using ctypes."
msgstr ""

msgid ""
"First, download GEOS 3.4.2 from the GEOS website and untar the source "
"archive::"
msgstr ""
"Pertama, unduh GEOS 3.4.2 dari situs jaringan GEOS dan untar arsip sumber::"

msgid ""
"Next, change into the directory where GEOS was unpacked, run the configure "
"script, compile, and install::"
msgstr ""
"Selanjutnya, rubah kedalam direktori dimana GEOS dibuka, jalankan tulisan "
"konfigurasi, susun, dan pasang::"

msgid "Can't find GEOS library"
msgstr "Tidak dapat menemukan pustaka GEOS"

msgid "When GeoDjango can't find GEOS, this error is raised:"
msgstr ""
"Ketika GeoDjango tidak dapat menemukan GEOS, kesalahan ini akan muncul:"

msgid ""
"The most common solution is to properly configure your :ref:`libsettings` "
"*or* set :ref:`geoslibrarypath` in your settings."
msgstr ""
"Pemecahan paling umum adalah dengan benar mengkonfigurasi :ref:`libsettings` "
"anda *atau* menyetel :ref:`geoslibrarypath` di pengaturan anda."

msgid ""
"If using a binary package of GEOS (e.g., on Ubuntu), you may need to :ref:"
"`binutils`."
msgstr ""
"Jika menggunakan paket biner dari GEOS (sebagai contoh pada Ubuntu), anda "
"mungkin butuh untuk :ref:`binutils`."

msgid ""
"If your GEOS library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GEOS_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GEOS C library.  For example::"
msgstr ""

msgid ""
"See also :ref:`My logs are filled with GEOS-related errors <geos-exceptions-"
"in-logfile>`."
msgstr ""
"Lihat juga :ref:`Catatan saya diisi dengan kesalahan terkait GEOS <geos-"
"exceptions-in-logfile>`."

msgid "PROJ.4"
msgstr "PROJ.4"

msgid ""
"`PROJ.4`_ is a library for converting geospatial data to different "
"coordinate reference systems."
msgstr ""

msgid "First, download the PROJ.4 source code and datum shifting files [#]_::"
msgstr ""
"Pertama, unduh kode sumber PROJ.4 dan fakta meindahkan berkas-berkas [#]_:: "

msgid ""
"Next, untar the source code archive, and extract the datum shifting files in "
"the ``nad`` subdirectory.  This must be done *prior* to configuration::"
msgstr ""

msgid "Finally, configure, make and install PROJ.4::"
msgstr "Akhirnya, konfigurasi, buat dan pasang PROJ.4::"

msgid "GDAL"
msgstr "GDAL"

msgid ""
"`GDAL`__ is an excellent open source geospatial library that has support for "
"reading most vector and raster spatial data formats.  Currently, GeoDjango "
"only supports :doc:`GDAL's vector data <../gdal>` capabilities [#]_. :ref:"
"`geosbuild` and :ref:`proj4` should be installed prior to building GDAL."
msgstr ""

msgid "First download the latest GDAL release version and untar the archive::"
msgstr "Pertama unduh versi terbitan GDAL terakhir dan keluarkan arsip::"

msgid "Configure, make and install::"
msgstr "Konfigurasi, buat dan pasang::"

msgid ""
"Because GeoDjango has its own Python interface, the preceding instructions "
"do not build GDAL's own Python bindings. The bindings may be built by adding "
"the ``--with-python`` flag when running ``configure``. See `GDAL/OGR In "
"Python`__ for more information on GDAL's bindings."
msgstr ""

msgid ""
"If you have any problems, please see the troubleshooting section below for "
"suggestions and solutions."
msgstr ""

msgid "Can't find GDAL library"
msgstr "Tidak dapat menemukan pustaka GDAL"

msgid ""
"When GeoDjango can't find the GDAL library, configure your :ref:"
"`libsettings` *or* set :ref:`gdallibrarypath` in your settings."
msgstr ""

msgid ""
"If your GDAL library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GDAL_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GDAL library.  For example::"
msgstr ""

msgid ""
"The datum shifting files are needed for converting data to and from certain "
"projections. For example, the PROJ.4 string for the `Google projection "
"(900913 or 3857) <http://spatialreference.org/ref/sr-org/6864/prj/>`_ "
"requires the ``null`` grid file only included in the extra datum shifting "
"files. It is easier to install the shifting files now, then to have debug a "
"problem caused by their absence later."
msgstr ""

msgid ""
"Specifically, GeoDjango provides support for the `OGR <http://gdal.org/"
"ogr_arch.html>`_ library, a component of GDAL."
msgstr ""

msgid "GeoDjango Installation"
msgstr "Pemasangan GeoDjango"

msgid "In general, GeoDjango installation requires:"
msgstr "Secara umum, pemasangan GeoDjango membutuhkan:"

msgid ":ref:`Python and Django <django>`"
msgstr ":ref:`Python dan Django <django>`"

msgid ":ref:`spatial_database`"
msgstr ":ref:`spatial_database`"

msgid ":doc:`geolibs`"
msgstr ":doc:`geolibs`"

msgid ""
"Details for each of the requirements and installation instructions are "
"provided in the sections below. In addition, platform-specific instructions "
"are available for:"
msgstr ""
"Rincian untuk setiap dari persyaratan dan petunjuk pemasangan disediakan di "
"bagian dibawah. Sebagai tambahan, petunjuk khusus-serambi tersedia untuk:"

msgid ":ref:`macos`"
msgstr ""

msgid ":ref:`windows`"
msgstr ":ref:`windows`"

msgid "Use the Source"
msgstr "Gunakan Sumber"

msgid ""
"Because GeoDjango takes advantage of the latest in the open source "
"geospatial software technology, recent versions of the libraries are "
"necessary. If binary packages aren't available for your platform, "
"installation from source may be required. When compiling the libraries from "
"source, please follow the directions closely, especially if you're a "
"beginner."
msgstr ""
"Karena GeoDjango mengambil keuntungan dari terkahir di teknologi perangkat "
"lunak geospasial sumber terbuka, versi terakhir dari pustaka dibutuhkan. "
"Jika paket biner tidak tersedia di serambi anda, pemasangan dari sumber "
"mungkin dibutuhkan. Ketika menyusun pustaka dari sumber, harap ikuti "
"petunjuk dengan teliti, khususnya jika anda adalah seorang pemula."

msgid "Requirements"
msgstr "Persyaratan"

msgid "Python and Django"
msgstr "Python dan Django"

msgid ""
"Because GeoDjango is included with Django, please refer to Django's :ref:"
"`installation instructions <installing-official-release>` for details on how "
"to install."
msgstr ""

msgid "Spatial database"
msgstr "Basisdata spasial"

msgid ""
"PostgreSQL (with PostGIS), MySQL (mostly with MyISAM engine), Oracle, and "
"SQLite (with SpatiaLite) are the spatial databases currently supported."
msgstr ""

msgid ""
"PostGIS is recommended, because it is the most mature and feature-rich open "
"source spatial database."
msgstr ""

msgid ""
"The geospatial libraries required for a GeoDjango installation depends on "
"the spatial database used.  The following lists the library requirements, "
"supported versions, and any notes for each of the supported database "
"backends:"
msgstr ""

msgid "Library Requirements"
msgstr "Persyaratan Pustaka"

msgid "Notes"
msgstr "Catatan"

msgid "PostgreSQL"
msgstr "PostgreSQL"

msgid "GEOS, GDAL, PROJ.4, PostGIS"
msgstr ""

msgid "9.3+"
msgstr ""

msgid "Requires PostGIS."
msgstr "Membutuhkan PostGIS."

msgid "GEOS, GDAL"
msgstr ""

msgid "5.5+"
msgstr "5.5+"

msgid ""
"Not OGC-compliant; :ref:`limited functionality <mysql-spatial-limitations>`."
msgstr ""

msgid "11.2+"
msgstr "11.2+"

msgid "XE not supported."
msgstr "XE tidak didukung."

msgid "SQLite"
msgstr "SQLite"

msgid "GEOS, GDAL, PROJ.4, SpatiaLite"
msgstr "GEOS, GDAL, PROJ.4, SpatiaLite"

msgid "3.6.+"
msgstr "3.6.+"

msgid "Requires SpatiaLite 4.0+, pysqlite2 2.5+"
msgstr ""

msgid ""
"See also `this comparison matrix`__ on the OSGeo Wiki for PostgreSQL/PostGIS/"
"GEOS/GDAL possible combinations."
msgstr ""
"Lihat juga `this comparison matrix`__ pada Wiki OSGeo untuk PostgreSQL/"
"PostGIS/GEOS/GDAL kemungkinan perpaduan."

msgid "Geospatial libraries"
msgstr "Pustaka geospasial"

msgid "Database installation"
msgstr "Pemasangan basisdata"

msgid "Add ``django.contrib.gis`` to :setting:`INSTALLED_APPS`"
msgstr "Tambah ``django.contrib.gis`` ke :setting:`INSTALLED_APPS`"

msgid ""
"Like other Django contrib applications, you will *only* need to add :mod:"
"`django.contrib.gis` to :setting:`INSTALLED_APPS` in your settings. This is "
"so that the ``gis`` templates can be located -- if not done, then features "
"such as the geographic admin or KML sitemaps will not function properly."
msgstr ""

msgid ""
"If you can't find the solution to your problem here then participate in the "
"community!  You can:"
msgstr ""
"Jika anda tidak dapat menemukan pemecahan padamasalah anda disini lalu ikut "
"serta di komunitas! Anda dapat:"

msgid ""
"Join the ``#geodjango`` IRC channel on Freenode. Please be patient and "
"polite -- while you may not get an immediate response, someone will attempt "
"to answer your question as soon as they see it."
msgstr ""

msgid "Ask your question on the `GeoDjango`__ mailing list."
msgstr "Tanyakan pertanyaan anda pada daftar penyuratan `GeoDjango`__."

msgid ""
"File a ticket on the `Django trac`__ if you think there's a bug.  Make sure "
"to provide a complete description of the problem, versions used, and specify "
"the component as \"GIS\"."
msgstr ""
"Arsipkan sebuah tiket pada `Django trac`__ jika anda beripikir ada "
"kesalahan. Pastikan anda menyediakan gambaran lenglap dari masalah, versi "
"yang digunakan, dan tentukan komponen sebagai \"GIS\". "

msgid "Library environment settings"
msgstr "Pustaka pengaturan lingkungan"

msgid ""
"By far, the most common problem when installing GeoDjango is that the "
"external shared libraries (e.g., for GEOS and GDAL) cannot be located. [#]_ "
"Typically, the cause of this problem is that the operating system isn't "
"aware of the directory where the libraries built from source were installed."
msgstr ""

msgid ""
"In general, the library path may be set on a per-user basis by setting an "
"environment variable, or by configuring the library path for the entire "
"system."
msgstr ""

msgid "``LD_LIBRARY_PATH`` environment variable"
msgstr "Variabel lingkungan ``LD_LIBRARY_PATH``"

msgid ""
"A user may set this environment variable to customize the library paths they "
"want to use.  The typical library directory for software built from source "
"is ``/usr/local/lib``.  Thus, ``/usr/local/lib`` needs to be included in the "
"``LD_LIBRARY_PATH`` variable.  For example, the user could place the "
"following in their bash profile::"
msgstr ""

msgid "Setting system library path"
msgstr "Menyetel jalur pustakan sistem"

msgid ""
"On GNU/Linux systems, there is typically a file in ``/etc/ld.so.conf``, "
"which may include additional paths from files in another directory, such as "
"``/etc/ld.so.conf.d``. As the root user, add the custom library path (like "
"``/usr/local/lib``) on a new line in ``ld.so.conf``.  This is *one* example "
"of how to do so::"
msgstr ""

msgid ""
"For OpenSolaris users, the system library path may be modified using the "
"``crle`` utility.  Run ``crle`` with no options to see the current "
"configuration and use ``crle -l`` to set with the new library path.  Be "
"*very* careful when modifying the system library path::"
msgstr ""

msgid "Install ``binutils``"
msgstr "Pasang ``binutils``"

msgid ""
"GeoDjango uses the ``find_library`` function (from the ``ctypes.util`` "
"Python module) to discover libraries.  The ``find_library`` routine uses a "
"program called ``objdump`` (part of the ``binutils`` package) to verify a "
"shared library on GNU/Linux systems.  Thus, if ``binutils`` is not installed "
"on your Linux system then Python's ctypes may not be able to find your "
"library even if your library path is set correctly and geospatial libraries "
"were built perfectly."
msgstr ""

msgid ""
"The ``binutils`` package may be installed on Debian and Ubuntu systems using "
"the following command::"
msgstr ""

msgid "Similarly, on Red Hat and CentOS systems::"
msgstr "Mirip, pada sistem Red Hat dan CentOS::"

msgid "Platform-specific instructions"
msgstr "Petunjuk khusus-serambi"

msgid "macOS"
msgstr ""

msgid ""
"Because of the variety of packaging systems available for macOS, users have "
"several different options for installing GeoDjango. These options are:"
msgstr ""

msgid ":ref:`postgresapp` (easiest and recommended)"
msgstr ":ref:`postgresapp` (paling mudah dan dianjurkan)"

msgid ":ref:`homebrew`"
msgstr ":ref:`homebrew`"

msgid ":ref:`kyngchaos`"
msgstr ":ref:`kyngchaos`"

msgid ":ref:`fink`"
msgstr ":ref:`fink`"

msgid ":ref:`macports`"
msgstr ":ref:`macports`"

msgid ":ref:`build_from_source`"
msgstr ":ref:`build_from_source`"

msgid ""
"This section also includes instructions for installing an upgraded version "
"of :ref:`macos_python` from packages provided by the Python Software "
"Foundation, however, this is not required."
msgstr ""

msgid "Python"
msgstr "Python"

msgid ""
"Although macOS comes with Python installed, users can use `framework "
"installers`__ provided by the Python Software Foundation.  An advantage to "
"using the installer is that macOS's Python will remain \"pristine\" for "
"internal operating system use."
msgstr ""

msgid ""
"You will need to modify the ``PATH`` environment variable in your ``."
"profile`` file so that the new version of Python is used when ``python`` is "
"entered at the command-line::"
msgstr ""

msgid "Postgres.app"
msgstr "Postgres.app"

msgid ""
"`Postgres.app <http://postgresapp.com/>`_ is a standalone PostgreSQL server "
"that includes the PostGIS extension. You will also need to install ``gdal`` "
"and ``libgeoip`` with :ref:`homebrew`."
msgstr ""

msgid ""
"After installing Postgres.app, add the following to your ``.bash_profile`` "
"so you can run the package's programs from the command-line. Replace ``X.Y`` "
"with the version of PostgreSQL in the Postgres.app you installed:"
msgstr ""
"Setelah memasang Postgres.app, tambah berikut ke ``.bash_profile`` anda "
"sehingga anda dapat menjalankan progam paket dari baris-perintah. Ganti ``X."
"Y`` dengan versi PostgreSQL di Postgres.app anda pasang: "

msgid ""
"You can check if the path is set up correctly by typing ``which psql`` at a "
"terminal prompt."
msgstr ""
"Anda dapat memeriksa jalur disetel dengan benar dengan mengetik ``which "
"psql`` pada terminal prompt."

msgid "Homebrew"
msgstr "Homebrew"

msgid ""
"`Homebrew`__ provides \"recipes\" for building binaries and packages from "
"source. It provides recipes for the GeoDjango prerequisites on Macintosh "
"computers running macOS. Because Homebrew still builds the software from "
"source, `Xcode`_ is required."
msgstr ""

msgid "Summary::"
msgstr "Ringkasan::"

msgid "KyngChaos packages"
msgstr "Paket KyngChaos"

msgid ""
"William Kyngesburye provides a number of `geospatial library binary "
"packages`__ that make it simple to get GeoDjango installed on macOS without "
"compiling them from source.  However, `Xcode`_ is still necessary for "
"compiling the Python database adapters :ref:`psycopg2_kyngchaos` (for "
"PostGIS) and `pysqlite2 <https://pypi.python.org/pypi/pysqlite>`_ (for "
"SpatiaLite)."
msgstr ""

msgid ""
"SpatiaLite users should consult the :ref:`spatialite_macos` section after "
"installing the packages for additional instructions."
msgstr ""

msgid "Download the framework packages for:"
msgstr "Unduh paket kerangka untuk:"

msgid "UnixImageIO"
msgstr "UnixImageIO"

msgid "PROJ"
msgstr "PROJ"

msgid "SQLite3 (includes the SpatiaLite library)"
msgstr "SQLite3 (menyertakan pustaka SpatiaLite)"

msgid ""
"Install the packages in the order they are listed above, as the GDAL and "
"SQLite packages require the packages listed before them."
msgstr ""
"Memasang paket-paket di urutan mereka terdaftar diatas, seperti paket GDAL "
"dan SQLite membutuhkan paket-paket terdaftar sebelum mereka."

msgid ""
"Afterwards, you can also install the KyngChaos binary packages for "
"`PostgreSQL and PostGIS`__."
msgstr ""
"Setelah itu, anda dapat juga memasang paket biner KyngChaos untuk PostgreSQL "
"and PostGIS`__."

msgid ""
"After installing the binary packages, you'll want to add the following to "
"your ``.profile`` to be able to run the package programs from the command-"
"line::"
msgstr ""

msgid "psycopg2"
msgstr "psycopg2"

msgid ""
"After you've installed the KyngChaos binaries and modified your ``PATH``, as "
"described above, ``psycopg2`` may be installed using the following command::"
msgstr ""

msgid ""
"If you don't have ``pip``, follow the :ref:`installation instructions "
"<installing-official-release>` to install it."
msgstr ""

msgid "Fink"
msgstr "Fink"

msgid ""
"`Kurt Schwehr`__ has been gracious enough to create GeoDjango packages for "
"users of the `Fink`__ package system. `Different packages are available`__ "
"(starting with ``django-gis``), depending on which version of Python you "
"want to use."
msgstr ""

msgid "MacPorts"
msgstr "MacPorts"

msgid ""
"`MacPorts`__ may be used to install GeoDjango prerequisites on computers "
"running macOS.  Because MacPorts still builds the software from source, "
"`Xcode`_ is required."
msgstr ""

msgid ""
"You will also have to modify the ``PATH`` in your ``.profile`` so that the "
"MacPorts programs are accessible from the command-line::"
msgstr ""

msgid ""
"In addition, add the ``DYLD_FALLBACK_LIBRARY_PATH`` setting so that the "
"libraries can be found by Python::"
msgstr ""

msgid "Windows"
msgstr "Windows"

msgid ""
"Proceed through the following sections sequentially in order to install "
"GeoDjango on Windows."
msgstr ""

msgid ":doc:`Install Python </howto/windows>`."
msgstr ""

msgid ""
"First, download the latest `PostgreSQL 9.x installer`__ from the "
"`EnterpriseDB`__ website.  After downloading, simply run the installer, "
"follow the on-screen directions, and keep the default options unless you "
"know the consequences of changing them."
msgstr ""
"Pertama, unduh `PostgreSQL 9.x installer`__ terakhir dari situs jaringan "
"`EnterpriseDB`__. Setelah mengunduh, cukup jalankan pemasang, ikuti arahan "
"layar, dan jaga pilihan awal kecuali kalau anda mengetahui konsekuensi "
"merubah mereka."

msgid ""
"The PostgreSQL installer creates both a new Windows user to be the 'postgres "
"service account' and a ``postgres`` database superuser You will be prompted "
"once to set the password for both accounts -- make sure to remember it!"
msgstr ""
"Pemasang PostgreSQL membuat kedua pengguna Windows baru menjadi 'postgres "
"service account' dan superuser basisdata ``postgres``. Anda akan diarahkan "
"sekali untuk menyetel sandi untuk kedua akun -- pastikan untuk mengingatnya!"

msgid ""
"When the installer completes, it will ask to launch the Application Stack "
"Builder (ASB) on exit -- keep this checked, as it is necessary to install :"
"ref:`postgisasb`."
msgstr ""
"Ketika pemasang lengkap, dia akan menanyakan untuk meluncurkan Application "
"Stack Builder (ASB) pada keluar -- jaga ini tercentang, seperti dia "
"diperlukan untuk memasang install :ref:`postgisasb`."

msgid ""
"If installed successfully, the PostgreSQL server will run in the background "
"each time the system as started as a Windows service. A :menuselection:"
"`PostgreSQL 9.x` start menu group will created and contains shortcuts for "
"the ASB as well as the 'SQL Shell', which will launch a ``psql`` command "
"window."
msgstr ""
"Jika berhasil terpasang, peladen PostgreSQL akan berjalan dalam latar "
"belakang setiap kali sistem dimulai sebagai layanan Window. Sebuah kelompok "
"menu mulai :menuselection:`PostgreSQL 9.x` akan dibuat dan mengandung jalan "
"pintas untuk ASB dan juga 'SQL Shell', yang akan meluncurkan jendela "
"perintah ``psql``."

msgid ""
"From within the Application Stack Builder (to run outside of the installer, :"
"menuselection:`Start --> Programs --> PostgreSQL 9.x`), select :"
"menuselection:`PostgreSQL Database Server 9.x on port 5432` from the drop "
"down menu.  Next, expand the :menuselection:`Categories --> Spatial "
"Extensions` menu tree and select :menuselection:`PostGIS X.Y for PostgreSQL "
"9.x`."
msgstr ""

msgid ""
"After clicking next, you will be prompted to select your mirror, PostGIS "
"will be downloaded, and the PostGIS installer will begin.  Select only the "
"default options during install (e.g., do not uncheck the option to create a "
"default PostGIS database)."
msgstr ""

msgid ""
"You will be prompted to enter your ``postgres`` database superuser password "
"in the 'Database Connection Information' dialog."
msgstr ""

msgid ""
"The ``psycopg2`` Python module provides the interface between Python and the "
"PostgreSQL database.  Download the latest `Windows installer`__ for your "
"version of Python and PostgreSQL and run using the default settings. [#]_"
msgstr ""

msgid "OSGeo4W"
msgstr "OSGeo4W"

msgid ""
"The `OSGeo4W installer`_ makes it simple to install the PROJ.4, GDAL, and "
"GEOS libraries required by GeoDjango.  First, download the `OSGeo4W "
"installer`_, and run it.  Select :menuselection:`Express Web-GIS Install` "
"and click next. In the 'Select Packages' list, ensure that GDAL is selected; "
"MapServer and Apache are also enabled by default, but are not required by "
"GeoDjango and may be unchecked safely.  After clicking next, the packages "
"will be automatically downloaded and installed, after which you may exit the "
"installer."
msgstr ""

msgid "Modify Windows environment"
msgstr "Merubah lingkungan Windows"

msgid ""
"In order to use GeoDjango, you will need to add your Python and OSGeo4W "
"directories to your Windows system ``Path``, as well as create ``GDAL_DATA`` "
"and ``PROJ_LIB`` environment variables.  The following set of commands, "
"executable with ``cmd.exe``, will set this up:"
msgstr ""

msgid ""
"For your convenience, these commands are available in the executable batch "
"script, :download:`geodjango_setup.bat`."
msgstr ""

msgid ""
"Administrator privileges are required to execute these commands. To do this, "
"right-click on :download:`geodjango_setup.bat` and select :menuselection:"
"`Run as administrator`. You need to log out and log back in again for the "
"settings to take effect."
msgstr ""

msgid ""
"If you customized the Python or OSGeo4W installation directories, then you "
"will need to modify the ``OSGEO4W_ROOT`` and/or ``PYTHON_ROOT`` variables "
"accordingly."
msgstr ""

msgid "Install Django and set up database"
msgstr "Pasang Django dan setel basisdata"

msgid ""
"Finally, :ref:`install Django <installing-official-release>` on your system."
msgstr ""
"Akhirnya, :ref:`pasang Django <installing-official-release>` di sistem anda."

msgid ""
"GeoDjango uses the :func:`~ctypes.util.find_library` routine from ``ctypes."
"util`` to locate shared libraries."
msgstr ""
"GeoDjango menggunakan rutin :func:`~ctypes.util.find_library` dari ``ctypes."
"util`` untuk menempatkan pustaka dibagi. "

msgid ""
"The ``psycopg2`` Windows installers are packaged and maintained by `Jason "
"Erickson <http://www.stickpeople.com/projects/python/win-psycopg/>`_."
msgstr ""
"Pemasang Windows``psycopg2`` dipanketkan dan dirawat oleh `Jason Erickson "
"<http://www.stickpeople.com/projects/python/win-psycopg/>`_."

msgid "Installing PostGIS"
msgstr "Memasang PostGIS"

msgid ""
"`PostGIS`_ adds geographic object support to PostgreSQL, turning it into a "
"spatial database. :ref:`geosbuild`, :ref:`proj4` and :ref:`gdalbuild` should "
"be installed prior to building PostGIS. You might also need additional "
"libraries, see `PostGIS requirements`_."
msgstr ""

msgid ""
"The `psycopg2`_ module is required for use as the database adapter when "
"using GeoDjango with PostGIS."
msgstr ""
"Modul `psycopg2`_ dibutuhkan untuk digunakan sebagai pencocok basisdata "
"ketika menggunakan GeoDjango dengan PostGIS."

msgid ""
"On Debian/Ubuntu, you are advised to install the following packages: "
"postgresql-x.x, postgresql-x.x-postgis, postgresql-server-dev-x.x, python-"
"psycopg2 (x.x matching the PostgreSQL version you want to install). "
"Alternately, you can `build from source`_. Consult the platform-specific "
"instructions if you are on :ref:`macos` or :ref:`windows`."
msgstr ""

msgid "Post-installation"
msgstr ""

msgid "Creating a spatial database"
msgstr "Membuat basisdata spasial"

msgid ""
"PostGIS 2 includes an extension for PostgreSQL that's used to enable spatial "
"functionality::"
msgstr ""

msgid ""
"The database user must be a superuser in order to run ``CREATE EXTENSION "
"postgis;``. The command is run during the :djadmin:`migrate` process. An "
"alternative is to use a migration operation in your project::"
msgstr ""

msgid ""
"GeoDjango does not currently leverage any `PostGIS topology "
"functionality`__. If you plan to use those features at some point, you can "
"also install the ``postgis_topology`` extension by issuing ``CREATE "
"EXTENSION postgis_topology;``."
msgstr ""

msgid "Managing the database"
msgstr "Mengelola basisdata"

msgid ""
"To administer the database, you can either use the pgAdmin III program (:"
"menuselection:`Start --> PostgreSQL 9.x --> pgAdmin III`) or the SQL Shell (:"
"menuselection:`Start --> PostgreSQL 9.x --> SQL Shell`). For example, to "
"create a ``geodjango`` spatial database and user, the following may be "
"executed from the SQL Shell as the ``postgres`` user::"
msgstr ""

msgid "Installing SpatiaLite"
msgstr "Memasang SpatiaLite"

msgid ""
"`SpatiaLite`__ adds spatial support to SQLite, turning it into a full-"
"featured spatial database."
msgstr ""
"`SpatiaLite`__ menambah dukungan spasial untuk SQLite, merubah itu menjadi "
"basisdata spasial penuh-fitur."

msgid ""
"First, check if you can install SpatiaLite from system packages or binaries."
msgstr ""
"Pertama, periksa jika anda dapat memasang SpatiaLite dari paket-paket sistem "
"atau biner."

msgid ""
"For example, on Debian-based distributions, try to install the ``spatialite-"
"bin`` package. For distributions that package SpatiaLite 4.2+, install "
"``libsqlite3-mod-spatialite``."
msgstr ""

msgid "For macOS, follow the :ref:`instructions below<spatialite_macos>`."
msgstr "Untuk macOS, ikuti :ref:`instructions below1`."

msgid "For Windows, you may find binaries on the `Gaia-SINS`__ home page."
msgstr ""
"Untuk Windows, anda mungkin menemukan biner pada halaman rumah  `Gaia-"
"SINS`__."

msgid ""
"In any case, you should always be able to :ref:`install from source "
"<spatialite_source>`."
msgstr ""
"Dalam kasus apapun, anda harus selalu dapat untuk :ref:`install from source "
"1`."

msgid "``SPATIALITE_LIBRARY_PATH`` setting required for SpatiaLite 4.2+"
msgstr ""
"Pengaturan ``SPATIALITE_LIBRARY_PATH`` dibutuhkan untuk SpatiaLite 4.2+"

msgid "If you're using SpatiaLite 4.2+, you must put this in your settings::"
msgstr ""
"Jika anda menggunakan SpatiaLite 4.2+, anda harus menaruh ini dalam "
"pengaturan anda::"

msgid "Installing from source"
msgstr "Memasang dari sumber"

msgid ""
":doc:`GEOS and PROJ.4</ref/contrib/gis/install/geolibs>` should be installed "
"prior to building SpatiaLite."
msgstr ""
":doc:`GEOS and PROJ.4</ref/contrib/gis/install/geolibs>` harus dipasang "
"sebelum membangun SpatiaLite."

msgid ""
"Check first if SQLite is compiled with the `R*Tree module`__. Run the "
"sqlite3 command line interface and enter the following query::"
msgstr ""
"Periksa pertama jika SQLLite disusun dengan `R*Tree module`__. Jalankan "
"antarmuka baris perintah sqlite3 dan masukkan permintaan berikut::"

msgid ""
"If you obtain an error, you will have to recompile SQLite from source. "
"Otherwise, just skip this section."
msgstr ""
"Jika anda mendapatkan sebuah kesalahn, anda akan harus menyusun kembali "
"SQLite dari sumber. Jika tidak, cukup lewati bagian ini."

msgid ""
"To install from sources, download the latest amalgamation source archive "
"from the `SQLite download page`__, and extract::"
msgstr ""
"Untuk memasang dari sumber, unduh arsip sumber penggabungan terakhir dari "
"`SQLite download page`__, dan ekstrak::"

msgid ""
"Next, run the ``configure`` script -- however the ``CFLAGS`` environment "
"variable needs to be customized so that SQLite knows to build the R*Tree "
"module::"
msgstr ""

msgid "SpatiaLite library (``libspatialite``)"
msgstr "Pustaka SpatiaLite (``libspatialite``)"

msgid ""
"Get the latest SpatiaLite library source bundle from the `download page`__::"
msgstr ""
"Dapatkan buntalan sumber pustaka SpatiaLite terakhir dari `download page`__::"

msgid ""
"For macOS users building from source, the SpatiaLite library *and* tools "
"need to have their ``target`` configured::"
msgstr ""
"Untuk pengguna macOS membangun dari sumber, pustaka SpatiaLite *dan* alat-"
"alat butuh memiliki ``sasaran`` mereka dikonfigurasi::"

msgid "macOS-specific instructions"
msgstr "Petunjuk-petunjuk khusus-macOS"

msgid ""
"To install the SpatiaLite library and tools, macOS users can choose between :"
"ref:`kyngchaos` and `Homebrew`_."
msgstr ""
"Untuk memasang pustaka SpatiaLite dan alat-alat, pengguna macOS dapat "
"memilih diantara :ref:`kyngchaos` dan `Homebrew`_."

msgid "KyngChaos"
msgstr "KyngChaos"

msgid "First, follow the instructions in the :ref:`kyngchaos` section."
msgstr "Pertama, ikuti perintah dalam bagian :ref:`kyngchaos`."

msgid ""
"When creating a SpatiaLite database, the ``spatialite`` program is required. "
"However, instead of attempting to compile the SpatiaLite tools from source, "
"download the `SpatiaLite Binaries`__ for macOS, and install ``spatialite`` "
"in a location available in your ``PATH``.  For example::"
msgstr ""

msgid ""
"Finally, for GeoDjango to be able to find the KyngChaos SpatiaLite library, "
"add the following to your ``settings.py``::"
msgstr ""
"Akhirnya, untuk GeoDjango untukd apat menemukan pustaka KyngChaos "
"SpatiaLite, tambah berikut ke ``settings.py`` anda ::"

msgid ""
"`Homebrew`_ handles all the SpatiaLite related packages on your behalf, "
"including SQLite3, SpatiaLite, PROJ, and GEOS. Install them like this::"
msgstr ""
"`Homebrew`_ menangani semua SpatiaLite paket-paket terkait atas nama anda, "
"termasuk SQLite3, SpatiaLite, PROJ, dan GEOS. Pasang mereka seperti ini::"

msgid ""
"Finally, for GeoDjango to be able to find the SpatiaLite library, add the "
"following to your ``settings.py``::"
msgstr ""
"Akhirnya, untuk GeoDjango untukd apat menemukan pustaka SpatiaLite, tambah "
"berikut ke ``settings.py`` anda ::"

msgid "``LayerMapping`` data import utility"
msgstr "Kegunaan impor data ``LayerMapping``"

msgid ""
"The :class:`LayerMapping` class provides a way to map the contents of vector "
"spatial data files (e.g. shapefiles) into GeoDjango models."
msgstr ""

msgid ""
"This utility grew out of the author's personal needs to eliminate the code "
"repetition that went into pulling geometries and fields out of a vector "
"layer, converting to another coordinate system (e.g. WGS84), and then "
"inserting into a GeoDjango model."
msgstr ""

msgid "Use of :class:`LayerMapping` requires GDAL."
msgstr "Penggunaan :class:`LayerMapping` membutuhkan GDAL."

msgid ""
"GIS data sources, like shapefiles, may be very large.  If you find that :"
"class:`LayerMapping` is using too much memory, set :setting:`DEBUG` to "
"``False`` in your settings.  When :setting:`DEBUG` is set to ``True``, "
"Django :ref:`automatically logs <faq-see-raw-sql-queries>` *every* SQL query "
"-- thus, when SQL statements contain geometries, it is easy to consume more "
"memory than is typical."
msgstr ""

msgid ""
"You need a GDAL-supported data source, like a shapefile (here we're using a "
"simple polygon shapefile, ``test_poly.shp``, with three features)::"
msgstr ""

msgid ""
"Now we define our corresponding Django model (make sure to use :djadmin:"
"`migrate`)::"
msgstr ""

msgid ""
"Use :class:`LayerMapping` to extract all the features and place them in the "
"database::"
msgstr ""
"Gunakan :class:`LayerMapping` untuk mengambil semua ditur-fitur dan "
"menempatkan mereka dalam basisdata::"

msgid ""
"Here, :class:`LayerMapping` just transformed the three geometries from the "
"shapefile in their original spatial reference system (WGS84) to the spatial "
"reference system of the GeoDjango model (NAD83).  If no spatial reference "
"system is defined for the layer, use the ``source_srs`` keyword with a :"
"class:`~django.contrib.gis.gdal.SpatialReference` object to specify one."
msgstr ""

msgid "``LayerMapping`` API"
msgstr "API ``LayerMapping``"

msgid ""
"The following are the arguments and keywords that may be used during "
"instantiation of ``LayerMapping`` objects."
msgstr ""

msgid "Argument"
msgstr "Argument"

msgid "``model``"
msgstr "``model``"

msgid "The geographic model, *not* an instance."
msgstr ""

msgid "``data_source``"
msgstr "``data_source``"

msgid ""
"The path to the OGR-supported data source file (e.g., a shapefile).  Also "
"accepts :class:`django.contrib.gis.gdal.DataSource` instances."
msgstr ""

msgid "``mapping``"
msgstr "``mapping``"

msgid ""
"A dictionary: keys are strings corresponding to the model field, and values "
"correspond to string field names for the OGR feature, or if the model field "
"is a geographic then it should correspond to the OGR geometry type, e.g., "
"``'POINT'``, ``'LINESTRING'``, ``'POLYGON'``."
msgstr ""

msgid "``layer``"
msgstr "``layer``"

msgid "The index of the layer to use from the Data Source (defaults to 0)"
msgstr ""

msgid "``source_srs``"
msgstr "``source_srs``"

msgid ""
"Use this to specify the source SRS manually (for example, some shapefiles "
"don't come with a ``'.prj'`` file).  An integer SRID, WKT or PROJ.4 strings, "
"and :class:`django.contrib.gis.gdal.SpatialReference` objects are accepted."
msgstr ""

msgid "``encoding``"
msgstr "``encoding``"

msgid ""
"Specifies the character set encoding of the strings in the OGR data source.  "
"For example, ``'latin-1'``, ``'utf-8'``, and ``'cp437'`` are all valid "
"encoding parameters."
msgstr ""

msgid "``transaction_mode``"
msgstr "``transaction_mode``"

msgid "May be ``'commit_on_success'`` (default) or ``'autocommit'``."
msgstr ""

msgid ""
"Setting this to False will disable coordinate transformations.  In other "
"words, geometries will be inserted into the database unmodified from their "
"original state in the data source."
msgstr ""

msgid "``unique``"
msgstr "``unik``"

msgid ""
"Setting this to the name, or a tuple of names, from the given  model will "
"create models unique only to the given name(s). Geometries from each feature "
"will be added into the collection associated with the unique model.  Forces "
"the transaction mode to be ``'autocommit'``."
msgstr ""

msgid "``using``"
msgstr "``menggunakan``"

msgid ""
"Sets the database to use when importing spatial data. Default is "
"``'default'``."
msgstr ""

msgid "``save()`` Keyword Arguments"
msgstr ""

msgid ""
"The ``save()`` method also accepts keywords.  These keywords are used for "
"controlling output logging, error handling, and for importing specific "
"feature ranges."
msgstr ""

msgid "Save Keyword Arguments"
msgstr ""

msgid "``fid_range``"
msgstr "``fid_range``"

msgid ""
"May be set with a slice or tuple of (begin, end) feature ID's to map from "
"the data source.  In other words, this keyword enables the user to "
"selectively import a subset range of features in the geographic data source."
msgstr ""

msgid "``progress``"
msgstr "``progress``"

msgid ""
"When this keyword is set, status information will be printed giving the "
"number of features processed and successfully saved.  By default, progress "
"information will be printed every 1000 features processed, however, this "
"default may be overridden by setting this keyword with an integer for the "
"desired interval."
msgstr ""

msgid "``silent``"
msgstr "``silent``"

msgid ""
"By default, non-fatal error notifications are printed to ``sys.stdout``, but "
"this keyword may be set to disable these notifications."
msgstr ""

msgid "``step``"
msgstr "``step``"

msgid ""
"If set with an integer, transactions will occur at every step interval. For "
"example, if ``step=1000``, a commit would occur after the 1,000th feature, "
"the 2,000th feature etc."
msgstr ""

msgid "``stream``"
msgstr "``stream``"

msgid ""
"Status information will be written to this file handle.  Defaults to using "
"``sys.stdout``, but any object with a ``write`` method is supported."
msgstr ""

msgid "``strict``"
msgstr "``strict``"

msgid ""
"Execution of the model mapping will cease upon the first error encountered.  "
"The default value (``False``) behavior is to attempt to continue."
msgstr ""

msgid "``verbose``"
msgstr "``verbose``"

msgid ""
"If set, information will be printed subsequent to each model save executed "
"on the database."
msgstr ""

msgid "Running out of memory"
msgstr "Kehabisan memori"

msgid ""
"As noted in the warning at the top of this section, Django stores all SQL "
"queries when ``DEBUG=True``.  Set ``DEBUG=False`` in your settings, and this "
"should stop excessive memory use when running ``LayerMapping`` scripts."
msgstr ""

msgid "MySQL: ``max_allowed_packet`` error"
msgstr "MySQL: kesalahan ``max_allowed_packet``"

msgid ""
"If you encounter the following error when using ``LayerMapping`` and MySQL::"
msgstr ""
"Jika anda menghadapi kesalahan berikut ketika menggunakan ``LayerMapping`` "
"dan MySQL::"

msgid ""
"Then the solution is to increase the value of the ``max_allowed_packet`` "
"setting in your MySQL configuration.  For example, the default value may be "
"something low like one megabyte -- the setting may be modified in MySQL's "
"configuration file (``my.cnf``) in the ``[mysqld]`` section::"
msgstr ""

msgid "Measurement Objects"
msgstr "Obyek Pengukuran"

msgid ""
"The :mod:`django.contrib.gis.measure` module contains objects that allow for "
"convenient representation of distance and area units of measure. [#]_ "
"Specifically, it implements two objects, :class:`Distance` and :class:`Area` "
"-- both of which may be accessed via the :class:`D` and :class:`A` "
"convenience aliases, respectively."
msgstr ""
"Modul :mod:`django.contrib.gis.measure` megandung obyek-obyek yang "
"mengizinkan untuk gambaran nyaman dari jarak dan unit kawasan dari "
"pengukuran. [#]_ Khususnya, itu menerapkan dua obyek, :class:`Distance` dan :"
"class:`Area` -- kedua dari yang mungkin mengakses melalui nama lain "
"kenyamanan :class:`D` dan :class:`A`, masing-masing."

msgid ""
":class:`Distance` objects may be instantiated using a keyword argument "
"indicating the context of the units.  In the example below, two different "
"distance objects are instantiated in units of kilometers (``km``) and miles "
"(``mi``)::"
msgstr ""
"Obyek-obyek :class:`Distance` mungkin diinstasiasi menggunakan argumen kata "
"kunci mengindikasikan konteks dari satuan. Di contoh dibawah, dua perbedaan "
"jarak obyek diinstansiasikan dalam satuan kilometer (``km``) dan mil "
"(``mi``)::"

msgid ""
"Conversions are easy, just access the preferred unit attribute to get a "
"converted distance quantity::"
msgstr ""

msgid ""
"Moreover, arithmetic operations may be performed between the distance "
"objects::"
msgstr ""

msgid ""
"Two :class:`Distance` objects multiplied together will yield an :class:"
"`Area` object, which uses squared units of measure::"
msgstr ""

msgid ""
"To determine what the attribute abbreviation of a unit is, the "
"``unit_attname`` class method may be used::"
msgstr ""

msgid "Supported units"
msgstr "Satuan Didukung"

msgid "Unit Attribute"
msgstr "Satuan Atribut"

msgid "Full name or alias(es)"
msgstr "Nama penuh atau nama lain"

msgid "``km``"
msgstr "``km``"

msgid "Kilometre, Kilometer"
msgstr "Kilometer"

msgid "``mi``"
msgstr "``mi``"

msgid "Mile"
msgstr "Mil"

msgid "``m``"
msgstr "``m``"

msgid "Meter, Metre"
msgstr "Meter"

msgid "``yd``"
msgstr "``yd``"

msgid "Yard"
msgstr "Yard"

msgid "``ft``"
msgstr "``ft``"

msgid "Foot, Foot (International)"
msgstr "Kaki (Internasional)"

msgid "``survey_ft``"
msgstr "``survey_ft``"

msgid "U.S. Foot, US survey foot"
msgstr ""

msgid "``inch``"
msgstr "``inci``"

msgid "Inches"
msgstr "Inci"

msgid "``cm``"
msgstr "``cm``"

msgid "Centimeter"
msgstr "Sentimeter"

msgid "``mm``"
msgstr "``mm``"

msgid "Millimetre, Millimeter"
msgstr "Milimeter"

msgid "``um``"
msgstr "``um``"

msgid "Micrometer, Micrometre"
msgstr "Mikrometer"

msgid "``british_ft``"
msgstr "``british_ft``"

msgid "British foot (Sears 1922)"
msgstr ""

msgid "``british_yd``"
msgstr "``british_yd``"

msgid "British yard (Sears 1922)"
msgstr ""

msgid "``british_chain_sears``"
msgstr "``british_chain_sears``"

msgid "British chain (Sears 1922)"
msgstr ""

msgid "``indian_yd``"
msgstr "``indian_yd``"

msgid "Indian yard, Yard (Indian)"
msgstr ""

msgid "``sears_yd``"
msgstr "``sears_yd``"

msgid "Yard (Sears)"
msgstr ""

msgid "``clarke_ft``"
msgstr "``clarke_ft``"

msgid "Clarke's Foot"
msgstr ""

msgid "``chain``"
msgstr "``chain``"

msgid "Chain"
msgstr "Chain"

msgid "``chain_benoit``"
msgstr "``chain_benoit``"

msgid "Chain (Benoit)"
msgstr ""

msgid "``chain_sears``"
msgstr "``chain_sears``"

msgid "Chain (Sears)"
msgstr ""

msgid "``british_chain_benoit``"
msgstr "``british_chain_benoit``"

msgid "British chain (Benoit 1895 B)"
msgstr ""

msgid "``british_chain_sears_truncated``"
msgstr "``british_chain_sears_truncated``"

msgid "British chain (Sears 1922 truncated)"
msgstr ""

msgid "``gold_coast_ft``"
msgstr "``gold_coast_ft``"

msgid "Gold Coast foot"
msgstr ""

msgid "``link``"
msgstr "``link``"

msgid "Link"
msgstr "Tautan"

msgid "``link_benoit``"
msgstr "``link_benoit``"

msgid "Link (Benoit)"
msgstr ""

msgid "``link_sears``"
msgstr "``link_sears``"

msgid "Link (Sears)"
msgstr ""

msgid "``clarke_link``"
msgstr "``clarke_link``"

msgid "Clarke's link"
msgstr ""

msgid "``fathom``"
msgstr "``fathom``"

msgid "Fathom"
msgstr "Fathom"

msgid "``rod``"
msgstr "``rod``"

msgid "Rod"
msgstr ""

msgid "``nm``"
msgstr "``nm``"

msgid "Nautical Mile"
msgstr "Nautical Mile"

msgid "``nm_uk``"
msgstr "``nm_uk``"

msgid "Nautical Mile (UK)"
msgstr "Nautical Mile (UK)"

msgid "``german_m``"
msgstr "``german_m``"

msgid "German legal metre"
msgstr ""

msgid ""
":class:`Area` attributes are the same as :class:`Distance` attributes, "
"except they are prefixed with ``sq_`` (area units are square in nature). For "
"example, ``Area(sq_m=2)`` creates an :class:`Area` object representing two "
"square meters."
msgstr ""

msgid "Measurement API"
msgstr "API pengukuran"

msgid ""
"To initialize a distance object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired value. "
"For example, the following creates a distance object representing 5 miles::"
msgstr ""

msgid ""
"Returns the distance value in units corresponding to the given unit "
"attribute. For example::"
msgstr ""

msgid ""
"Returns the distance unit attribute name for the given full unit name. For "
"example::"
msgstr ""

msgid "Alias for :class:`Distance` class."
msgstr "Nama lain untuk kelas :class:`Distance`."

msgid ""
"To initialize an area object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired value. "
"For example, the following creates an area object representing 5 square "
"miles::"
msgstr ""

msgid ""
"Returns the area value in units corresponding to the given unit attribute. "
"For example::"
msgstr ""
"Mengembalikan nilai kawasan di satuan yang berhubungan ke atribut satuan "
"yang diberikan. Sebagai contoh::"

msgid ""
"Returns the area unit attribute name for the given full unit name. For "
"example::"
msgstr ""
"Mengembalikan nama atribut satuan kawasan untuk nama satuan penuh yang "
"diberikan. Sebagai contoh::"

msgid "Alias for :class:`Area` class."
msgstr "Nama lain untuk kelas :class:`Area`."

msgid ""
"`Robert Coup <https://koordinates.com/>`_ is the initial author of the "
"measure objects, and was inspired by Brian Beck's work in `geopy <https://"
"github.com/geopy/geopy/>`_ and Geoff Biggs' PhD work on dimensioned units "
"for robotics."
msgstr ""

msgid "GeoDjango Model API"
msgstr "API Model GeoDjango"

msgid ""
"This document explores the details of the GeoDjango Model API.  Throughout "
"this section, we'll be using the following geographic model of a `ZIP "
"code`__ and of a `Digital Elevation Model`__ as our examples::"
msgstr ""

msgid "Spatial Field Types"
msgstr ""

msgid ""
"Spatial fields consist of a series of geometry field types and one raster "
"field type. Each of the geometry field types correspond to the OpenGIS "
"Simple Features specification [#fnogc]_. There is no such standard for "
"raster data."
msgstr ""

msgid "``RasterField``"
msgstr "``RasterField``"

msgid "``RasterField`` is currently only implemented for the PostGIS backend."
msgstr ""

msgid "Spatial Field Options"
msgstr "Pilihan Bidang Spasial"

msgid ""
"In addition to the regular :ref:`common-model-field-options` available for "
"Django model fields, spatial fields have the following additional options. "
"All are optional."
msgstr ""

msgid ""
"Sets the SRID [#fnogcsrid]_ (Spatial Reference System Identity) of the "
"geometry field to the given value. Defaults to 4326 (also known as "
"`WGS84`__, units are in degrees of longitude and latitude)."
msgstr ""

msgid "Selecting an SRID"
msgstr "Memilih sebuah SRID"

msgid ""
"Choosing an appropriate SRID for your model is an important decision that "
"the developer should consider carefully.  The SRID is an integer specifier "
"that corresponds to the projection system that will be used to interpret the "
"data in the spatial database. [#fnsrid]_  Projection systems give the "
"context to the coordinates that specify a location.  Although the details of "
"`geodesy`__ are beyond the scope of this documentation, the general problem "
"is that the earth is spherical and representations of the earth (e.g., paper "
"maps, Web maps) are not."
msgstr ""

msgid ""
"Most people are familiar with using latitude and longitude to reference a "
"location on the earth's surface.  However, latitude and longitude are "
"angles, not distances. In other words, while the shortest path between two "
"points on a flat surface is a straight line, the shortest path between two "
"points on a curved surface (such as the earth) is an *arc* of a `great "
"circle`__. [#fnthematic]_  Thus, additional computation is required to "
"obtain distances in planar units (e.g., kilometers and miles).  Using a "
"geographic coordinate system may introduce complications for the developer "
"later on. For example, SpatiaLite does not have the capability to perform "
"distance calculations between geometries using geographic coordinate "
"systems, e.g. constructing a query to  find all points within 5 miles of a "
"county boundary stored as WGS84. [#fndist]_"
msgstr ""

msgid ""
"Portions of the earth's surface may projected onto a two-dimensional, or "
"Cartesian, plane.  Projected coordinate systems are especially convenient "
"for region-specific applications, e.g., if you know that your database will "
"only cover geometries in `North Kansas`__, then you may consider using "
"projection system specific to that region.  Moreover, projected coordinate "
"systems are defined in Cartesian units (such as meters or feet), easing "
"distance calculations."
msgstr ""

msgid ""
"If you wish to perform arbitrary distance queries using non-point geometries "
"in WGS84 in PostGIS and you want decent performance, enable the :attr:"
"`GeometryField.geography` keyword so that :ref:`geography database type "
"<geography-type>` is used instead."
msgstr ""

msgid "Additional Resources:"
msgstr "Sumber daya Tambahan:"

msgid ""
"`spatialreference.org`__: A Django-powered database of spatial reference "
"systems."
msgstr ""
"`spatialreference.org`__: Sebuah basisdata ditenagai-Django dari sistem "
"acuan spasial."

msgid ""
"`The State Plane Coordinate System`__: A website covering the various "
"projection systems used in the United States.  Much of the U.S. spatial data "
"encountered will be in one of these coordinate systems rather than in a "
"geographic coordinate system such as WGS84."
msgstr ""

msgid "``spatial_index``"
msgstr "``spatial_index``"

msgid ""
"Defaults to ``True``.  Creates a spatial index for the given geometry field."
msgstr ""
"Awalan pada ``True``. Membuat indeks spasial untuk bidang geometri yang "
"diberikan."

msgid ""
"This is different from the ``db_index`` field option because spatial indexes "
"are created in a different manner than regular database indexes.  "
"Specifically, spatial indexes are typically created using a variant of the R-"
"Tree, while regular database indexes typically use B-Trees."
msgstr ""

msgid "Geometry Field Options"
msgstr "Pilihan Bidang Geometri"

msgid ""
"There are additional options available for Geometry fields. All the "
"following options are optional."
msgstr ""
"Ada pilihan tambahan tersedia untuk bidang Geometri. Semua pilihan berikut "
"adalah pilihan."

msgid "``dim``"
msgstr "``dim``"

msgid ""
"This option may be used for customizing the coordinate dimension of the "
"geometry field.  By default, it is set to 2, for representing two-"
"dimensional geometries.  For spatial backends that support it, it may be set "
"to 3 for three-dimensional support."
msgstr ""

msgid "At this time 3D support is limited to the PostGIS spatial backend."
msgstr ""
"Pada waktu ini dukungan 3D adalah terbatas pada backend spasial PostGIS."

msgid "``geography``"
msgstr "``geography``"

msgid ""
"If set to ``True``, this option will create a database column of type "
"geography, rather than geometry.  Please refer to the :ref:`geography type "
"<geography-type>` section below for more details."
msgstr ""

msgid ""
"Geography support is limited to PostGIS and will force the SRID to be 4326."
msgstr ""
"Dukungan geografi adalah terbatas pada PostGIS dan akan memaksa SRID menjadi "
"4326."

msgid "Geography Type"
msgstr "Jenis Geografi"

msgid ""
"The geography type provides native support for spatial features represented "
"with geographic coordinates (e.g., WGS84 longitude/latitude). "
"[#fngeography]_ Unlike the plane used by a geometry type, the geography type "
"uses a spherical representation of its data.  Distance and measurement "
"operations performed on a geography column automatically employ great circle "
"arc calculations and return linear units.  In other words, when "
"``ST_Distance`` is called on two geographies, a value in meters is returned "
"(as opposed to degrees if called on a geometry column in WGS84)."
msgstr ""

msgid ""
"Because geography calculations involve more mathematics, only a subset of "
"the PostGIS spatial lookups are available for the geography type. "
"Practically, this means that in addition to the :ref:`distance lookups "
"<distance-lookups>` only the following additional :ref:`spatial lookups "
"<spatial-lookups>` are available for geography columns:"
msgstr ""

msgid ""
"If you need to use a spatial lookup or aggregate that doesn't support the "
"geography type as input, you can use the :class:`~django.db.models.functions."
"Cast` database function to convert the geography column to a geometry type "
"in the query::"
msgstr ""

msgid ""
"For more information, the PostGIS documentation contains a helpful section "
"on determining `when to use geography data type over geometry data type "
"<https://postgis.net/docs/using_postgis_dbmanagement."
"html#PostGIS_GeographyVSGeometry>`_."
msgstr ""

msgid "``GeoManager``"
msgstr "``GeoManager``"

msgid ""
"The ``GeoManager`` is required in order to use the legacy :ref:`geoqueryset-"
"methods`."
msgstr ""
" ``GeoManager`` adalah diwajibkan untuk menggunakan warisan :ref:"
"`geoqueryset-methods`."

msgid ""
"All ``GeoQuerySet`` methods have been deprecated and replaced by :doc:"
"`equivalent database functions </ref/contrib/gis/functions>`. As soon as the "
"legacy methods have been replaced in your code, you should be able to remove "
"the special ``GeoManager`` from your GIS-enabled classes."
msgstr ""

msgid ""
"OpenGIS Consortium, Inc., `Simple Feature Specification For SQL <http://www."
"opengeospatial.org/standards/sfs>`_."
msgstr ""
"OpenGIS Consortium, Inc., `Spesifikasi Fitur sederhana Untuk SQL <http://www."
"opengeospatial.org/standards/sfs>`_."

msgid ""
"*See id.* at Ch. 2.3.8, p. 39 (Geometry Values and Spatial Reference "
"Systems)."
msgstr ""
"*Lihat id.* pada Ch. 2.3.8, p. 39 (Nilai Geometri dan Sustem Acuan Spasial)."

msgid ""
"Typically, SRID integer corresponds to an EPSG (`European Petroleum Survey "
"Group <http://www.epsg.org>`_) identifier.  However, it may also be "
"associated with custom projections defined in spatial database's spatial "
"reference systems table."
msgstr ""

msgid ""
"Terry A. Slocum, Robert B. McMaster, Fritz C. Kessler, & Hugh H. Howard, "
"*Thematic Cartography and Geographic Visualization* (Prentice Hall, 2nd "
"edition), at Ch. 7.1.3."
msgstr ""

msgid "This limitation does not apply to PostGIS."
msgstr "Batasan ini tidak berlaku pada PostGIS."

msgid ""
"Please refer to the `PostGIS Geography Type <https://postgis.net/docs/"
"using_postgis_dbmanagement.html#PostGIS_Geography>`_ documentation for more "
"details."
msgstr ""

msgid "OGR Inspection"
msgstr "Pemeriksaan OGR"

msgid "``GeoJSON`` Serializer"
msgstr "Penserial ``GeoJSON``"

msgid ""
"GeoDjango provides a specific serializer for the `GeoJSON`__ format. See :"
"doc:`/topics/serialization` for more information on serialization."
msgstr ""
"GeoDjango menyediakan penserial khusus untuk bentuk `GeoJSON`__. Lihat :doc:"
"`/topics/serialization` untuk informasi lebih pada serialisasi."

msgid ""
"The ``geojson`` serializer is not meant for round-tripping data, as it has "
"no deserializer equivalent. For example, you cannot use :djadmin:`loaddata` "
"to reload the output produced by this serializer. If you plan to reload the "
"outputted data, use the plain :ref:`json serializer <serialization-formats-"
"json>` instead."
msgstr ""

msgid ""
"In addition to the options of the ``json`` serializer, the ``geojson`` "
"serializer accepts the following additional option when it is called by "
"``serializers.serialize()``:"
msgstr ""

msgid ""
"``geometry_field``: A string containing the name of a geometry field to use "
"for the ``geometry`` key of the GeoJSON feature. This is only needed when "
"you have a model with more than one geometry field and you don't want to use "
"the first defined geometry field (by default, the first geometry field is "
"picked)."
msgstr ""

msgid ""
"``srid``: The SRID to use for the ``geometry`` content. Defaults to 4326 "
"(WGS 84)."
msgstr ""
"``srid``: SRID digunakan untuk isi ``geometry``. Awalan pada 4326 (WGS 84)."

msgid ""
"The :ref:`fields <subset-of-fields>` option can be used to limit fields that "
"will be present in the ``properties`` key, as it works with all other "
"serializers."
msgstr ""

msgid "Would output::"
msgstr "Akan mengeluarkan::"

msgid ""
"When the ``fields`` parameter is not specified, the ``geojson`` serializer "
"adds a ``pk`` key to the ``properties`` dictionary with the primary key of "
"the object as the value."
msgstr ""

msgid "The ``pk`` key was added to the ``properties`` dictionary."
msgstr "Kunci ``pk`` telah ditambahkan ke kamus ``properties``."

msgid "Geographic Sitemaps"
msgstr "Peta situs Geografis"

msgid ""
"KML is an XML language focused on geographic visualization [#]_. "
"``KMLSitemap`` and its compressed counterpart ``KMZSitemap`` allow you to "
"present geolocated data in a machine-readable format."
msgstr ""

msgid "Reference"
msgstr "Acuan"

msgid "``KMLSitemap``"
msgstr "``KMLSitemap``"

msgid "``KMZSitemap``"
msgstr "``KMZSitemap``"

msgid "http://www.opengeospatial.org/standards/kml"
msgstr "http://www.opengeospatial.org/standards/kml"

msgid "Testing GeoDjango apps"
msgstr "Mencoba aplikasi GeoDjango"

msgid ""
"Included in this documentation are some additional notes and settings for :"
"ref:`testing-postgis` users."
msgstr ""

msgid ""
"The settings below have sensible defaults, and shouldn't require manual "
"setting."
msgstr ""

msgid "``POSTGIS_VERSION``"
msgstr "``POSTGIS_VERSION``"

msgid ""
"When GeoDjango's spatial backend initializes on PostGIS, it has to perform "
"an SQL query to determine the version in order to figure out what features "
"are available. Advanced users wishing to prevent this additional query may "
"set the version manually using a 3-tuple of integers specifying the major, "
"minor, and micro version numbers for PostGIS. For example, to configure for "
"PostGIS X.Y.Z you would use::"
msgstr ""

msgid "Obtaining sufficient privileges"
msgstr "Mendapatkan hak cukup"

msgid ""
"Depending on your configuration, this section describes several methods to "
"configure a database user with sufficient privileges to run tests for "
"GeoDjango applications on PostgreSQL. If your :ref:`spatial database "
"template <spatialdb_template>` was created like in the instructions, then "
"your testing database user only needs to have the ability to create "
"databases. In other configurations, you may be required to use a database "
"superuser."
msgstr ""

msgid "Create database user"
msgstr "Buat pengguna basisdata"

msgid ""
"To make a database user with the ability to create databases, use the "
"following command::"
msgstr ""
"Untuk membuat pengguna basisdata dengan kemampuan membuat basisdata, gunakan "
"perintah berikut::"

msgid ""
"The ``-R -S`` flags indicate that we do not want the user to have the "
"ability to create additional users (roles) or to be a superuser, "
"respectively."
msgstr ""

msgid ""
"Alternatively, you may alter an existing user's role from the SQL shell "
"(assuming this is done from an existing superuser account)::"
msgstr ""

msgid "Create database superuser"
msgstr "Membuat basisdata superuser"

msgid "This may be done at the time the user is created, for example::"
msgstr "Ini mungkin selesai pada waktu pengguna dibuat, sebagai contoh::"

msgid ""
"Or you may alter the user's role from the SQL shell (assuming this is done "
"from an existing superuser account)::"
msgstr ""

msgid ""
"On Windows platforms the pgAdmin III utility may also be used as a simple "
"way to add superuser privileges to your database user."
msgstr ""
"Pada serambi Windows kegunaan pgAdmin III mungkin juga digunakan sesederhana "
"cara untuk menambahkan hak superuser ke pengguna basisdata anda."

msgid ""
"By default, the PostGIS installer on Windows includes a template spatial "
"database entitled ``template_postgis``."
msgstr ""

msgid "GeoDjango tests"
msgstr "Percobaan GeoDjango "

msgid ""
"To have the GeoDjango tests executed when :ref:`running the Django test "
"suite <running-unit-tests>` with ``runtests.py`` all of the databases in the "
"settings file must be using one of the :ref:`spatial database backends "
"<spatial-backends>`."
msgstr ""

msgid ""
"The following is an example bare-bones settings file with spatial backends "
"that can be used to run the entire Django test suite, including those in :"
"mod:`django.contrib.gis`::"
msgstr ""

msgid ""
"Assuming the settings above were in a ``postgis.py`` file in the same "
"directory as ``runtests.py``, then all Django and GeoDjango tests would be "
"performed when executing the command::"
msgstr ""

msgid "To run only the GeoDjango test suite, specify ``gis_tests``::"
msgstr ""

msgid "GeoDjango Tutorial"
msgstr "Tutorial GeoDjango "

msgid ""
"GeoDjango is an included contrib module for Django that turns it into a "
"world-class geographic Web framework.  GeoDjango strives to make it as "
"simple as possible to create geographic Web applications, like location-"
"based services. Its features include:"
msgstr ""

msgid "Django model fields for `OGC`_ geometries and raster data."
msgstr ""

msgid "Extensions to Django's ORM for querying and manipulating spatial data."
msgstr ""

msgid ""
"Loosely-coupled, high-level Python interfaces for GIS geometry and raster "
"operations and data manipulation in different formats."
msgstr ""

msgid "Editing geometry fields from the admin."
msgstr ""

msgid ""
"This tutorial assumes familiarity with Django; thus, if you're brand new to "
"Django, please read through the :doc:`regular tutorial </intro/tutorial01>` "
"to familiarize yourself with Django first."
msgstr ""

msgid ""
"GeoDjango has additional requirements beyond what Django requires -- please "
"consult the :doc:`installation documentation <install/index>` for more "
"details."
msgstr ""

msgid ""
"This tutorial will guide you through the creation of a geographic web "
"application for viewing the `world borders`_. [#]_ Some of the code used in "
"this tutorial is taken from and/or inspired by the `GeoDjango basic apps`_ "
"project. [#]_"
msgstr ""

msgid ""
"Proceed through the tutorial sections sequentially for step-by-step "
"instructions."
msgstr ""

msgid "Setting Up"
msgstr "Pengaturan"

msgid "Create a Spatial Database"
msgstr "Buat Basisdata Spasial"

msgid ""
"Typically no special setup is required, so you can create a database as you "
"would for any other project. We provide some tips for selected databases:"
msgstr ""

msgid ":doc:`install/postgis`"
msgstr ":doc:`install/postgis`"

msgid ":doc:`install/spatialite`"
msgstr ":doc:`install/spatialite`"

msgid "Create a New Project"
msgstr "Buat Proyek Baru"

msgid ""
"Use the standard ``django-admin`` script to create a project called "
"``geodjango``:"
msgstr ""
"Gunakan tulisan ``django-admin`` standar untuk membuat sebuah proyek "
"dipanggil ``geodjango``:"

msgid ""
"This will initialize a new project. Now, create a ``world`` Django "
"application within the ``geodjango`` project:"
msgstr ""

msgid "Configure ``settings.py``"
msgstr "Konfigurasi ``settings.py``"

msgid ""
"The ``geodjango`` project settings are stored in the ``geodjango/settings."
"py`` file. Edit the database connection settings to match your setup::"
msgstr ""

msgid ""
"In addition, modify the :setting:`INSTALLED_APPS` setting to include :mod:"
"`django.contrib.admin`, :mod:`django.contrib.gis`, and ``world`` (your newly "
"created application)::"
msgstr ""

msgid "Geographic Data"
msgstr "Data Geografis"

msgid "World Borders"
msgstr "Batasan Dunia"

msgid ""
"The world borders data is available in this `zip file`__.  Create a ``data`` "
"directory in the ``world`` application, download the world borders data, and "
"unzip. On GNU/Linux platforms, use the following commands:"
msgstr ""
"Data perbatasan dunia tersedia di `zip file`__. Buat sebuah direktori "
"``data`` di aplikasi ``world``, unduh data perbatasan dunia, dan buka. Pada "
"serambi GNU/Linux, gunakan perintah berikut:"

msgid ""
"The world borders ZIP file contains a set of data files collectively known "
"as an `ESRI Shapefile`__, one of the most popular geospatial data formats.  "
"When unzipped, the world borders dataset includes files with the following "
"extensions:"
msgstr ""

msgid "``.shp``: Holds the vector data for the world borders geometries."
msgstr ""

msgid "``.shx``: Spatial index file for geometries stored in the ``.shp``."
msgstr ""

msgid ""
"``.dbf``: Database file for holding non-geometric attribute data (e.g., "
"integer and character fields)."
msgstr ""

msgid ""
"``.prj``: Contains the spatial reference information for the geographic data "
"stored in the shapefile."
msgstr ""

msgid "Use ``ogrinfo`` to examine spatial data"
msgstr ""

msgid ""
"The GDAL ``ogrinfo`` utility allows examining the metadata of shapefiles or "
"other vector data sources:"
msgstr ""

msgid ""
"``ogrinfo`` tells us that the shapefile has one layer, and that this layer "
"contains polygon data.  To find out more, we'll specify the layer name and "
"use the ``-so`` option to get only the important summary information:"
msgstr ""

msgid ""
"This detailed summary information tells us the number of features in the "
"layer (246), the geographic bounds of the data, the spatial reference system "
"(\"SRS WKT\"), as well as type information for each attribute field. For "
"example, ``FIPS: String (2.0)`` indicates that the ``FIPS`` character field "
"has a maximum length of 2.  Similarly, ``LON: Real (8.3)`` is a floating-"
"point field that holds a maximum of 8 digits up to three decimal places."
msgstr ""

msgid "Geographic Models"
msgstr "Model Geografis"

msgid "Defining a Geographic Model"
msgstr "Menentukan Model Geografis"

msgid ""
"Now that you've examined your dataset using ``ogrinfo``, create a GeoDjango "
"model to represent this data::"
msgstr ""

msgid ""
"Note that the ``models`` module is imported from ``django.contrib.gis.db``."
msgstr ""

msgid ""
"The default spatial reference system for geometry fields is WGS84 (meaning "
"the `SRID`__ is 4326) -- in other words, the field coordinates are in "
"longitude, latitude pairs in units of degrees.  To use a different "
"coordinate system, set the SRID of the geometry field with the ``srid`` "
"argument. Use an integer representing the coordinate system's EPSG code."
msgstr ""

msgid "Run ``migrate``"
msgstr "Jalankan ``migrate``"

msgid ""
"After defining your model, you need to sync it with the database. First, "
"create a database migration:"
msgstr ""

msgid ""
"Let's look at the SQL that will generate the table for the ``WorldBorder`` "
"model:"
msgstr ""

msgid "This command should produce the following output:"
msgstr "Perintah ini harus menghasilkan keluaran berikut:"

msgid ""
"If this looks correct, run :djadmin:`migrate` to create this table in the "
"database:"
msgstr ""
"Jika ini terlihat benar, jalankan :djadmin:`migrate` untuk membuat tabel ini "
"dalam basisdata:"

msgid "Importing Spatial Data"
msgstr "Mengimpor Data Spasial"

msgid ""
"This section will show you how to import the world borders shapefile into "
"the database via GeoDjango models using the :doc:`layermapping`."
msgstr ""

msgid ""
"There are many different ways to import data into a spatial database -- "
"besides the tools included within GeoDjango, you may also use the following:"
msgstr ""

msgid ""
"`ogr2ogr`_: A command-line utility included with GDAL that can import many "
"vector data formats into PostGIS, MySQL, and Oracle databases."
msgstr ""

msgid ""
"`shp2pgsql`_: This utility included with PostGIS imports ESRI shapefiles "
"into PostGIS."
msgstr ""

msgid "GDAL Interface"
msgstr "Antarmuka GDAL"

msgid ""
"Earlier, you used ``ogrinfo`` to examine the contents of the world borders "
"shapefile.  GeoDjango also includes a Pythonic interface to GDAL's powerful "
"OGR library that can work with all the vector data sources that OGR supports."
msgstr ""

msgid "First, invoke the Django shell:"
msgstr "Pertama, minta cangkang Django:"

msgid ""
"If you downloaded the :ref:`worldborders` data earlier in the tutorial, then "
"you can determine its path using Python's built-in ``os`` module::"
msgstr ""

msgid ""
"Now, open the world borders shapefile using GeoDjango's :class:`~django."
"contrib.gis.gdal.DataSource` interface::"
msgstr ""

msgid ""
"Data source objects can have different layers of geospatial features; "
"however, shapefiles are only allowed to have one layer::"
msgstr ""

msgid ""
"You can see the layer's geometry type and how many features it contains::"
msgstr ""

msgid ""
"Unfortunately, the shapefile data format does not allow for greater "
"specificity with regards to geometry types.  This shapefile, like many "
"others, actually includes ``MultiPolygon`` geometries, not Polygons. It's "
"important to use a more general field type in models: a GeoDjango "
"``MultiPolygonField`` will accept a ``Polygon`` geometry, but a "
"``PolygonField`` will not accept a ``MultiPolygon`` type geometry.  This is "
"why the ``WorldBorder`` model defined above uses a ``MultiPolygonField``."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.gdal.Layer` may also have a spatial "
"reference system associated with it.  If it does, the ``srs`` attribute will "
"return a :class:`~django.contrib.gis.gdal.SpatialReference` object::"
msgstr ""

msgid ""
"This shapefile is in the popular WGS84 spatial reference system -- in other "
"words, the data uses longitude, latitude pairs in units of degrees."
msgstr ""

msgid ""
"In addition, shapefiles also support attribute fields that may contain "
"additional data.  Here are the fields on the World Borders layer:"
msgstr ""

msgid ""
"The following code will let you examine the OGR types (e.g. integer or "
"string) associated with each of the fields:"
msgstr ""

msgid ""
"You can iterate over each feature in the layer and extract information from "
"both the feature's geometry (accessed via the ``geom`` attribute) as well as "
"the feature's attribute fields (whose **values** are accessed via ``get()`` "
"method)::"
msgstr ""

msgid ":class:`~django.contrib.gis.gdal.Layer` objects may be sliced::"
msgstr "Obyek :class:`~django.contrib.gis.gdal.Layer` mungkin dipotong::"

msgid "And individual features may be retrieved by their feature ID::"
msgstr "Dan fitur-fitur tersendiri dapat diambil berdasarkan ID fitur mereka::"

msgid "Boundary geometries may be exported as WKT and GeoJSON::"
msgstr ""

msgid "``LayerMapping``"
msgstr "``LayerMapping``"

msgid ""
"To import the data, use a LayerMapping in a Python script. Create a file "
"called ``load.py`` inside the ``world`` application, with the following "
"code::"
msgstr ""

msgid "A few notes about what's going on:"
msgstr "Sedikit catatan mengenai apa yang terjadi:"

msgid ""
"Each key in the ``world_mapping`` dictionary corresponds to a field in the "
"``WorldBorder`` model.  The value is the name of the shapefile field that "
"data will be loaded from."
msgstr ""

msgid ""
"The key ``mpoly`` for the geometry field is ``MULTIPOLYGON``, the geometry "
"type GeoDjango will import the field as.  Even simple polygons in the "
"shapefile will automatically be converted into collections prior to "
"insertion into the database."
msgstr ""

msgid ""
"The path to the shapefile is not absolute -- in other words, if you move the "
"``world`` application (with ``data`` subdirectory) to a different location, "
"the script will still work."
msgstr ""

msgid ""
"The ``transform`` keyword is set to ``False`` because the data in the "
"shapefile does not need to be converted -- it's already in WGS84 (SRID=4326)."
msgstr ""

msgid ""
"The ``encoding`` keyword is set to the character encoding of the string "
"values in the shapefile. This ensures that string values are read and saved "
"correctly from their original encoding system."
msgstr ""

msgid ""
"Afterwards, invoke the Django shell from the ``geodjango`` project directory:"
msgstr ""

msgid ""
"Next, import the ``load`` module, call the ``run`` routine, and watch "
"``LayerMapping`` do the work::"
msgstr ""

msgid "Try ``ogrinspect``"
msgstr "Coba ``ogrinspect``"

msgid ""
"Now that you've seen how to define geographic models and import data with "
"the :doc:`layermapping`, it's possible to further automate this process with "
"use of the :djadmin:`ogrinspect` management command.  The :djadmin:"
"`ogrinspect` command  introspects a GDAL-supported vector data source (e.g., "
"a shapefile) and generates a model definition and ``LayerMapping`` "
"dictionary automatically."
msgstr ""

msgid "The general usage of the command goes as follows:"
msgstr ""

msgid ""
"``data_source`` is the path to the GDAL-supported data source and "
"``model_name`` is the name to use for the model.  Command-line options may "
"be used to further define how the model is generated."
msgstr ""

msgid ""
"For example, the following command nearly reproduces the ``WorldBorder`` "
"model and mapping dictionary created above, automatically:"
msgstr ""

msgid "A few notes about the command-line options given above:"
msgstr "Sedikit catatan tentang pilihan baris-perintah diberikan diatas:"

msgid "The ``--srid=4326`` option sets the SRID for the geographic field."
msgstr "Pilihan ``--srid=4326`` menyetel SRID untuk bidang geografis"

msgid ""
"The ``--mapping`` option tells ``ogrinspect`` to also generate a mapping "
"dictionary for use with :class:`~django.contrib.gis.utils.LayerMapping`."
msgstr ""

msgid ""
"The ``--multi`` option is specified so that the geographic field is a :class:"
"`~django.contrib.gis.db.models.MultiPolygonField` instead of just a :class:"
"`~django.contrib.gis.db.models.PolygonField`."
msgstr ""

msgid ""
"The command produces the following output, which may be copied directly into "
"the ``models.py`` of a GeoDjango application::"
msgstr ""

msgid "Spatial Queries"
msgstr "Spatial Queries"

msgid ""
"GeoDjango adds spatial lookups to the Django ORM.  For example, you can find "
"the country in the ``WorldBorder`` table that contains a particular point.  "
"First, fire up the management shell:"
msgstr ""
"GeoDjango menambahkan pencarian spasial pada ORM Django. Sebagai contoh, "
"anda dapat menemukan negara dalam tabel ``WorldBorder`` yang mengandung "
"titik tertentu. Pertama, nyalakan cangkang pengelolaan:"

msgid "Now, define a point of interest [#]_::"
msgstr "Sekarang, tentukan minat [#]_::"

msgid ""
"The ``pnt_wkt`` string represents the point at -95.3385 degrees longitude, "
"29.7245 degrees latitude.  The geometry is in a format known as Well Known "
"Text (WKT), a standard issued by the Open Geospatial Consortium (OGC). [#]_  "
"Import the ``WorldBorder`` model, and perform a ``contains`` lookup using "
"the ``pnt_wkt`` as the parameter::"
msgstr ""

msgid ""
"Here, you retrieved a ``QuerySet`` with only one model: the border of the "
"United States (exactly what you would expect)."
msgstr ""

msgid ""
"Similarly, you may also use a :doc:`GEOS geometry object <geos>`. Here, you "
"can combine the ``intersects`` spatial lookup with the ``get`` method to "
"retrieve only the ``WorldBorder`` instance for San Marino instead of a "
"queryset::"
msgstr ""

msgid ""
"The ``contains`` and ``intersects`` lookups are just a subset of the "
"available queries -- the :doc:`db-api` documentation has more."
msgstr ""

msgid "Automatic Spatial Transformations"
msgstr ""

msgid ""
"When doing spatial queries, GeoDjango automatically transforms geometries if "
"they're in a different coordinate system.  In the following example, "
"coordinates will be expressed in `EPSG SRID 32140`__, a coordinate system "
"specific to south Texas **only** and in units of **meters**, not degrees::"
msgstr ""

msgid ""
"Note that ``pnt`` may also be constructed with EWKT, an \"extended\" form of "
"WKT that includes the SRID::"
msgstr ""

msgid ""
"GeoDjango's ORM will automatically wrap geometry values in transformation "
"SQL, allowing the developer to work at a higher level of abstraction::"
msgstr ""

msgid "Raw queries"
msgstr "Permintaan mentah"

msgid ""
"When using :doc:`raw queries </topics/db/sql>`, you should generally wrap "
"your geometry fields with the ``asText()`` SQL function (or ``ST_AsText`` "
"for PostGIS) so that the field value will be recognized by GEOS::"
msgstr ""

msgid ""
"This is not absolutely required by PostGIS, but generally you should only "
"use raw queries when you know exactly what you are doing."
msgstr ""

msgid "Lazy Geometries"
msgstr "Geometri Lazy"

msgid ""
"GeoDjango loads geometries in a standardized textual representation.  When "
"the geometry field is first accessed, GeoDjango creates a :class:`~django."
"contrib.gis.geos.GEOSGeometry` object, exposing powerful functionality, such "
"as serialization properties for popular geospatial formats::"
msgstr ""

msgid ""
"This includes access to all of the advanced geometric operations provided by "
"the GEOS library::"
msgstr ""

msgid "Geographic annotations"
msgstr "Keterangan geografis"

msgid ""
"GeoDjango also offers a set of geographic annotations to compute distances "
"and several other operations (intersection, difference, etc.). See the :doc:"
"`functions` documentation."
msgstr ""

msgid "Putting your data on the map"
msgstr "Menaruh data anda di peta"

msgid "Geographic Admin"
msgstr "Admin Geografis"

msgid ""
"GeoDjango extends :doc:`Django's admin application </ref/contrib/admin/"
"index>` with support for editing geometry fields."
msgstr ""

msgid "Basics"
msgstr "Dasar"

msgid ""
"GeoDjango also supplements the Django admin by allowing users to create and "
"modify geometries on a JavaScript slippy map (powered by `OpenLayers`_)."
msgstr ""

msgid ""
"Let's dive right in.  Create a file called ``admin.py`` inside the ``world`` "
"application with the following code::"
msgstr ""

msgid ""
"Next, edit your ``urls.py`` in the ``geodjango`` application folder as "
"follows::"
msgstr ""
"Selanjutnya, sunting ``urls.py`` anda dalam pelipat aplikasi ``geodjango`` "
"seperti berikut::"

msgid "Create an admin user:"
msgstr "Buat pengguna admin:"

msgid "Next, start up the Django development server:"
msgstr "Selanjutnya, mulai peladen pengembangan Django:"

msgid ""
"Finally, browse to ``http://localhost:8000/admin/``, and log in with the "
"user you just created. Browse to any of the ``WorldBorder`` entries -- the "
"borders may be edited by clicking on a polygon and dragging the vertexes to "
"the desired position."
msgstr ""
"Akhirnya, lihat ke ``http://localhost:8000/admin/``, dan masuk dengan "
"pengguna anda baru buat. Lihat pada setiap dari masukan ``WorldBorder`` -- "
"pembatas mungkin disunting dengan mengklik pada sebuah poligon dan menyeret "
"verteks ke tempat yang diinginkan."

msgid ""
"With the :class:`~django.contrib.gis.admin.OSMGeoAdmin`, GeoDjango uses a "
"`Open Street Map`_ layer in the admin. This provides more context (including "
"street and thoroughfare details) than available with the :class:`~django."
"contrib.gis.admin.GeoModelAdmin` (which uses the `Vector Map Level 0`_ WMS "
"dataset hosted at `OSGeo`_)."
msgstr ""

msgid ""
"The PROJ.4 datum shifting files must be installed (see the :ref:`PROJ.4 "
"installation instructions <proj4>` for more details)."
msgstr ""

msgid ""
"If you meet this requirement, then just substitute the ``OSMGeoAdmin`` "
"option class in your ``admin.py`` file::"
msgstr ""
"Jika anda memenuhi persyaratan ini, kemudian cukup ganti kelas pilihan "
"``OSMGeoAdmin`` dalam berkas ``admin.py`` anda::"

msgid ""
"Special thanks to Bjørn Sandvik of `thematicmapping.org <http://"
"thematicmapping.org>`_ for providing and maintaining this dataset."
msgstr ""
"Terima kasih khusus kepada Bjørn Sandvik dari `thematicmapping.org <http://"
"thematicmapping.org>`_ untuk menyediakan dan merawat kumpulan data ini.  "

msgid ""
"GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and "
"Christopher Schmidt."
msgstr ""
"Aplikasi dasar GeoDjango ditulis oleh  Dane Springmeyer, Josh Livni, dan "
"Christopher Schmidt."

msgid ""
"This point is the `University of Houston Law Center <https://www.law.uh.edu/"
">`_."
msgstr ""
"Titik ini adalah `University of Houston Law Center <https://www.law.uh.edu/"
">`_."

msgid ""
"Open Geospatial Consortium, Inc., `OpenGIS Simple Feature Specification For "
"SQL <http://www.opengeospatial.org/standards/sfs>`_."
msgstr ""
"Open Geospatial Consortium, Inc., `OpenGIS Simple Feature Specification For "
"SQL <http://www.opengeospatial.org/standards/sfs>`_."

msgid "GeoDjango Utilities"
msgstr ""

msgid ""
"The :mod:`django.contrib.gis.utils` module contains various utilities that "
"are useful in creating geospatial Web applications."
msgstr ""

msgid "``django.contrib.humanize``"
msgstr "``django.contrib.humanize``"

msgid ""
"A set of Django template filters useful for adding a \"human touch\" to data."
msgstr ""

msgid ""
"To activate these filters, add ``'django.contrib.humanize'`` to your :"
"setting:`INSTALLED_APPS` setting. Once you've done that, use ``{% load "
"humanize %}`` in a template, and you'll have access to the following filters."
msgstr ""

msgid "``apnumber``"
msgstr "``apnumber``"

msgid ""
"For numbers 1-9, returns the number spelled out. Otherwise, returns the "
"number. This follows Associated Press style."
msgstr ""

msgid "Examples:"
msgstr "Contoh:"

msgid "``1`` becomes ``one``."
msgstr "``1`` menjadi ``satu``."

msgid "``2`` becomes ``two``."
msgstr "``2`` menjadi ``dua``."

msgid "``10`` becomes ``10``."
msgstr "``10`` menjadi ``10``."

msgid ""
"You can pass in either an integer or a string representation of an integer."
msgstr ""
"Anda dapat melewati di salah satu integer atau string perwakilan dari "
"integer."

msgid "``intcomma``"
msgstr "``intcomma``"

msgid ""
"Converts an integer or float (or a string representation of either) to a "
"string containing commas every three digits."
msgstr ""

msgid "``4500`` becomes ``4,500``."
msgstr "``4500`` menjadi ``4,500``."

msgid "``4500.2`` becomes ``4,500.2``."
msgstr "``4500.2`` menjadi ``4,500.2``."

msgid "``45000`` becomes ``45,000``."
msgstr "``45000`` menjadi ``45,000``."

msgid "``450000`` becomes ``450,000``."
msgstr "``450000`` menjadi ``450,000``."

msgid "``4500000`` becomes ``4,500,000``."
msgstr "``4500000`` menjadi ``4,500,000``."

msgid ""
":doc:`/topics/i18n/formatting` will be respected if enabled, e.g. with the "
"``'de'`` language:"
msgstr ""
":doc:`/topics/i18n/formatting` akan dihormati jika diadakan, sebagai contoh "
"dengan bahasa ``'de'``:"

msgid "``45000`` becomes ``'45.000'``."
msgstr "``45000`` menjadi ``'45.000'``."

msgid "``450000`` becomes ``'450.000'``."
msgstr "``450000`` menjadi ``'450.000'``."

msgid "``intword``"
msgstr "``intword``"

msgid ""
"Converts a large integer (or a string representation of an integer) to a "
"friendly text representation. Works best for numbers over 1 million."
msgstr ""

msgid "``1000000`` becomes ``1.0 million``."
msgstr "``1000000`` menjadi ``1.0 juta``."

msgid "``1200000`` becomes ``1.2 million``."
msgstr "``1200000`` menjadi ``1.2 juta``."

msgid "``1200000000`` becomes ``1.2 billion``."
msgstr "``1200000000`` menjadi ``1.2 trilyun``."

msgid "Values up to 10^100 (Googol) are supported."
msgstr "Nilai sampai 10^100 (Googol) yang didukung."

msgid "``1000000`` becomes ``'1,0 Million'``."
msgstr "``1000000`` menjadi ``'1,0 Juta'``."

msgid "``1200000`` becomes ``'1,2 Million'``."
msgstr "``1200000`` menjadi ``'1,2 Juta'``."

msgid "``1200000000`` becomes ``'1,2 Milliarden'``."
msgstr "``1200000000`` menjadi ``'1,2 Milliarden'``."

msgid "``naturalday``"
msgstr "``naturalday``"

msgid ""
"For dates that are the current day or within one day, return \"today\", "
"\"tomorrow\" or \"yesterday\", as appropriate. Otherwise, format the date "
"using the passed in format string."
msgstr ""

msgid ""
"**Argument:** Date formatting string as described in the :tfilter:`date` tag."
msgstr ""
"**Argumen:** String pembentukan tanggal seperti digambarkan di etiket :"
"tfilter:`date`"

msgid "Examples (when 'today' is 17 Feb 2007):"
msgstr "Contoh (ketika 'hari ini' adalah 17 Feb 2007):"

msgid "``16 Feb 2007`` becomes ``yesterday``."
msgstr "`16 Feb 2007`` menjadi ``kemarin``."

msgid "``17 Feb 2007`` becomes ``today``."
msgstr "`17 Feb 2007`` menjadi ``hari ini``."

msgid "``18 Feb 2007`` becomes ``tomorrow``."
msgstr "`18 Feb 2007`` menjadi ``besok``."

msgid ""
"Any other day is formatted according to given argument or the :setting:"
"`DATE_FORMAT` setting if no argument is given."
msgstr ""

msgid "``naturaltime``"
msgstr "``naturaltime``"

msgid ""
"For datetime values, returns a string representing how many seconds, minutes "
"or hours ago it was -- falling back to the :tfilter:`timesince` format if "
"the value is more than a day old. In case the datetime value is in the "
"future the return value will automatically use an appropriate phrase."
msgstr ""

msgid "Examples (when 'now' is 17 Feb 2007 16:30:00):"
msgstr "Contoh (ketika 'sekarang' adalah 17 Feb 2007 16:30:00):"

msgid "``17 Feb 2007 16:30:00`` becomes ``now``."
msgstr "``17 Feb 2007 16:30:00`` menjadi ``sekarang``."

msgid "``17 Feb 2007 16:29:31`` becomes ``29 seconds ago``."
msgstr "``17 Feb 2007 16:29:31`` menjadi ``29 menit lalu``."

msgid "``17 Feb 2007 16:29:00`` becomes ``a minute ago``."
msgstr "``17 Feb 2007 16:29:00`` menjadi `semenit lalu``."

msgid "``17 Feb 2007 16:25:35`` becomes ``4 minutes ago``."
msgstr "``17 Feb 2007 16:25:35`` menjadi ``4 menit lalu``."

msgid "``17 Feb 2007 15:30:29`` becomes ``59 minutes ago``."
msgstr "``17 Feb 2007 15:30:29`` menjadi ``59 menit lalu``."

msgid "``17 Feb 2007 15:30:01`` becomes ``59 minutes ago``."
msgstr "``17 Feb 2007 15:30:01`` menjadi ``59 menit lalu``."

msgid "``17 Feb 2007 15:30:00`` becomes ``an hour ago``."
msgstr "``17 Feb 2007 15:30:00`` menjadi ``satu jam lalu``."

msgid "``17 Feb 2007 13:31:29`` becomes ``2 hours ago``."
msgstr "``17 Feb 2007 13:31:29`` becomes ``2 jam lalu``."

msgid "``16 Feb 2007 13:31:29`` becomes ``1 day, 2 hours ago``."
msgstr "``16 Feb 2007 13:31:29`` menjadi`` 1 hari, 2 jam lalu``."

msgid "``16 Feb 2007 13:30:01`` becomes ``1 day, 2 hours ago``."
msgstr "``16 Feb 2007 13:30:01`` menjadi ``1 hari, 2 jam lalu``."

msgid "``16 Feb 2007 13:30:00`` becomes ``1 day, 3 hours ago``."
msgstr "``16 Feb 2007 13:30:00`` menjadi ``1 hari, 3 jam lalu``."

msgid "``17 Feb 2007 16:30:30`` becomes ``30 seconds from now``."
msgstr "``17 Feb 2007 16:30:30`` menjadi ``30 detik dari sekarang``."

msgid "``17 Feb 2007 16:30:29`` becomes ``29 seconds from now``."
msgstr "``17 Feb 2007 16:30:29`` menjadi ``29 detik dari sekarang``."

msgid "``17 Feb 2007 16:31:00`` becomes ``a minute from now``."
msgstr "``17 Feb 2007 16:31:00`` menjadi `satu menit dari sekarang``."

msgid "``17 Feb 2007 16:34:35`` becomes ``4 minutes from now``."
msgstr "``17 Feb 2007 16:34:35`` menjadi ``4 menit dari sekarang``."

msgid "``17 Feb 2007 17:30:29`` becomes ``an hour from now``."
msgstr "``17 Feb 2007 17:30:29`` menjadi ``satu jam dari sekarang``."

msgid "``17 Feb 2007 18:31:29`` becomes ``2 hours from now``."
msgstr "``17 Feb 2007 18:31:29`` menjadi ``2 jam dari sekarang``."

msgid "``18 Feb 2007 16:31:29`` becomes ``1 day from now``."
msgstr "``18 Feb 2007 16:31:29`` menjadi ``1 hari dari sekarang``."

msgid "``26 Feb 2007 18:31:29`` becomes ``1 week, 2 days from now``."
msgstr "``26 Feb 2007 18:31:29`` menjadi ``1 minggu, 2 hari dari sekarang``."

msgid "``ordinal``"
msgstr "``ordinal``"

msgid "Converts an integer to its ordinal as a string."
msgstr "Merubah sebuah integer ke urutannya sebagai sebuah string"

msgid "``1`` becomes ``1st``."
msgstr "``1`` menjadi ``1st``."

msgid "``2`` becomes ``2nd``."
msgstr "``2`` menjadi ``2nd``."

msgid "``3`` becomes ``3rd``."
msgstr "``3`` menjadi ``3rd``."

msgid "``contrib`` packages"
msgstr "Paket ``contrib``"

msgid ""
"Django aims to follow Python's :ref:`\"batteries included\" philosophy <tut-"
"batteries-included>`. It ships with a variety of extra, optional tools that "
"solve common Web-development problems."
msgstr ""
"Django bertujuan untuk mengikuti :ref:`\"batteries included\" philosophy "
"<tut-batteries-included>` Python. Itu dikirim dengan beragam tambahan, alat-"
"alat pilihan yang menyelesaikan masalah-masalah pengembangan-Jaringan umum."

msgid ""
"This code lives in ``django/contrib`` in the Django distribution. This "
"document gives a rundown of the packages in ``contrib``, along with any "
"dependencies those packages have."
msgstr ""

msgid ""
"For most of these add-ons -- specifically, the add-ons that include either "
"models or template tags -- you'll need to add the package name (e.g., "
"``'django.contrib.redirects'``) to your :setting:`INSTALLED_APPS` setting "
"and re-run ``manage.py migrate``."
msgstr ""

msgid ""
"The automatic Django administrative interface. For more information, see :"
"doc:`Tutorial 2 </intro/tutorial02>` and the :doc:`admin documentation </ref/"
"contrib/admin/index>`."
msgstr ""

msgid "Requires the auth_ and contenttypes_ contrib packages to be installed."
msgstr "Membutuhkan paket auth_ dan contenttypes_ untuk dipasang."

msgid "Django's authentication framework."
msgstr "Kerangka pembuktian keaslian Django."

msgid "See :doc:`/topics/auth/index`."
msgstr "Lihat :doc:`/topics/auth/index`."

msgid ""
"A light framework for hooking into \"types\" of content, where each "
"installed Django model is a separate content type."
msgstr ""

msgid "See the :doc:`contenttypes documentation </ref/contrib/contenttypes>`."
msgstr "Lihat :doc:`contenttypes documentation </ref/contrib/contenttypes>`."

msgid "``flatpages``"
msgstr "``flatpages``"

msgid "A framework for managing simple \"flat\" HTML content in a database."
msgstr ""

msgid "See the :doc:`flatpages documentation </ref/contrib/flatpages>`."
msgstr "Lihat dokumentasi :doc:`flatpages </ref/contrib/flatpages>`."

msgid "Requires the sites_ contrib package to be installed as well."
msgstr ""

msgid "``gis``"
msgstr "``gis``"

msgid ""
"A world-class geospatial framework built on top of Django, that enables "
"storage, manipulation and display of spatial data."
msgstr ""

msgid "See the :doc:`/ref/contrib/gis/index` documentation for more."
msgstr "Lihat dokumentasi :doc:`/ref/contrib/gis/index` untuk lebih."

msgid "``humanize``"
msgstr "``humanize``"

msgid "See the :doc:`humanize documentation </ref/contrib/humanize>`."
msgstr "Lihat dokumentasi :doc:`humanize </ref/contrib/humanize>`."

msgid "``messages``"
msgstr "``humanize``"

msgid ""
"A framework for storing and retrieving temporary cookie- or session-based "
"messages"
msgstr ""

msgid "See the :doc:`messages documentation </ref/contrib/messages>`."
msgstr "Lihat :doc:`dokumentasi pesan </ref/contrib/messages>`."

msgid "``postgres``"
msgstr "``postgres``"

msgid "A collection of PostgreSQL specific features."
msgstr "Kumpulan fitus khusus PostgreSQL."

msgid ""
"See the :doc:`contrib.postgres documentation </ref/contrib/postgres/index>`."
msgstr ""
"Lihat :doc:`dokumentasi contrib.postgres </ref/contrib/postgres/index>`."

msgid "``redirects``"
msgstr "``redirects``"

msgid "A framework for managing redirects."
msgstr "Sebuah kerangka untuk mengelola pengalihan."

msgid "See the :doc:`redirects documentation </ref/contrib/redirects>`."
msgstr "Lihat  :doc:`dokumentasi pengalihan </ref/contrib/redirects>`."

msgid "``sessions``"
msgstr "``sessions``"

msgid "A framework for storing data in anonymous sessions."
msgstr ""

msgid "See the :doc:`sessions documentation </topics/http/sessions>`."
msgstr "Lihat dokumentasi :doc:`sessions </topics/http/sessions>`."

msgid ""
"A light framework that lets you operate multiple websites off of the same "
"database and Django installation. It gives you hooks for associating objects "
"to one or more sites."
msgstr ""

msgid "See the :doc:`sites documentation </ref/contrib/sites>`."
msgstr "Lihat dokumentasi :doc:`sites </ref/contrib/sites>`."

msgid "``sitemaps``"
msgstr "``sitemaps``"

msgid "A framework for generating Google sitemap XML files."
msgstr "Kerangka untuk membangkitkan berkas XML petasitus Google."

msgid "See the :doc:`sitemaps documentation </ref/contrib/sitemaps>`."
msgstr "Lihat dokumentasi :doc:`sitemaps </ref/contrib/sitemaps>`."

msgid "``syndication``"
msgstr "``syndication``"

msgid ""
"A framework for generating syndication feeds, in RSS and Atom, quite easily."
msgstr ""
"Kerangka untuk membangkitkan umpan kongsi, dalam RSS dan ATOM, sangat mudah."

msgid "See the :doc:`syndication documentation </ref/contrib/syndication>`."
msgstr "Lihat :doc:`dokumentasi perkongsian </ref/contrib/syndication>`."

msgid "Other add-ons"
msgstr "Tambahan lain"

msgid ""
"If you have an idea for functionality to include in ``contrib``, let us "
"know! Code it up, and post it to the |django-users| mailing list."
msgstr ""

msgid "The messages framework"
msgstr "Kerangka pesan"

msgid ""
"Quite commonly in web applications, you need to display a one-time "
"notification message (also known as \"flash message\") to the user after "
"processing a form or some other types of user input."
msgstr ""

msgid ""
"For this, Django provides full support for cookie- and session-based "
"messaging, for both anonymous and authenticated users. The messages "
"framework allows you to temporarily store messages in one request and "
"retrieve them for display in a subsequent request (usually the next one). "
"Every message is tagged with a specific ``level`` that determines its "
"priority (e.g., ``info``, ``warning``, or ``error``)."
msgstr ""

msgid "Enabling messages"
msgstr "Mengadakan pesan"

msgid ""
"Messages are implemented through a :doc:`middleware </ref/middleware>` class "
"and corresponding :doc:`context processor </ref/templates/api>`."
msgstr ""

msgid ""
"The default ``settings.py`` created by ``django-admin startproject`` already "
"contains all the settings required to enable message functionality:"
msgstr ""
"Awalan ``settings.py`` dibuat oleh ``django-admin startproject`` sudah "
"mengandung semua pengaturan dibutuhkan untuk mengadakan pesan fungsionalitas:"

msgid "``'django.contrib.messages'`` is in :setting:`INSTALLED_APPS`."
msgstr "``'django.contrib.messages'`` di :setting:`INSTALLED_APPS`."

msgid ""
":setting:`MIDDLEWARE` contains ``'django.contrib.sessions.middleware."
"SessionMiddleware'`` and ``'django.contrib.messages.middleware."
"MessageMiddleware'``."
msgstr ""
":setting:`MIDDLEWARE` mengandung ``'django.contrib.sessions.middleware."
"SessionMiddleware'`` dan ``'django.contrib.messages.middleware."
"MessageMiddleware'``."

msgid ""
"The default :ref:`storage backend <message-storage-backends>` relies on :doc:"
"`sessions </topics/http/sessions>`. That's why ``SessionMiddleware`` must be "
"enabled and appear before ``MessageMiddleware`` in :setting:`MIDDLEWARE`."
msgstr ""

msgid ""
"The ``'context_processors'`` option of the ``DjangoTemplates`` backend "
"defined in your :setting:`TEMPLATES` setting contains ``'django.contrib."
"messages.context_processors.messages'``."
msgstr ""
"Pilihan ``'context_processors'`` dari backend ``DjangoTemplates`` ditentukan "
"di pengaturan :setting:`TEMPLATES` anda mengandung ``'django.contrib."
"messages.context_processors.messages'``."

msgid ""
"If you don't want to use messages, you can remove ``'django.contrib."
"messages'`` from your :setting:`INSTALLED_APPS`, the ``MessageMiddleware`` "
"line from :setting:`MIDDLEWARE`, and the ``messages`` context processor "
"from :setting:`TEMPLATES`."
msgstr ""

msgid "Configuring the message engine"
msgstr "Konfigurasi mesin pesan"

msgid "Storage backends"
msgstr "Backend Penyimpanan"

msgid ""
"The messages framework can use different backends to store temporary "
"messages."
msgstr ""
"Kerangka kerja pesan-pesan dapat menggunakan backend berbeda untuk menyimpan "
"pesan-pesan sementara."

msgid ""
"Django provides three built-in storage classes in :mod:`django.contrib."
"messages`:"
msgstr ""
"Django menyediakan kelas-kelas penyimpanan siap-pakai di :mod:`django."
"contrib.messages`:"

msgid ""
"This class stores all messages inside of the request's session. Therefore it "
"requires Django's ``contrib.sessions`` application."
msgstr ""

msgid ""
"This class stores the message data in a cookie (signed with a secret hash to "
"prevent manipulation) to persist notifications across requests. Old messages "
"are dropped if the cookie data size would exceed 2048 bytes."
msgstr ""
"Kelas ini menyimpan data pesan dalam sebuah kue (ditandai dengan campuran "
"rahasia untuk mencegah perubahan) untuk bertahan pemberitahuan terhadap "
"permintaan. Pesan-pesan lama dibuang jika ukuran data kue akan melebihi 2048 "
"byte."

msgid ""
"This class first uses ``CookieStorage``, and falls back to using "
"``SessionStorage`` for the messages that could not fit in a single cookie. "
"It also requires Django's ``contrib.sessions`` application."
msgstr ""

msgid ""
"This behavior avoids writing to the session whenever possible. It should "
"provide the best performance in the general case."
msgstr ""
"Perilaku ini menghindari menulis ke sesi bilamana memungkinkan. Itu harus "
"menyediakan penampilan terbaik di kasus umum."

msgid ""
":class:`~django.contrib.messages.storage.fallback.FallbackStorage` is the "
"default storage class. If it isn't suitable to your needs, you can select "
"another storage class by setting :setting:`MESSAGE_STORAGE` to its full "
"import path, for example::"
msgstr ""
":class:`~django.contrib.messages.storage.fallback.FallbackStorage` adalah "
"kelas penyimpanan awalan. Jika itu tidak cocok pada kebutuhan anda, anda "
"dapat memilih kelas penyimpanan lain dengan mengatur :setting:"
"`MESSAGE_STORAGE` ke jalur impor penuhnya, sebagai contoh::"

msgid ""
"To write your own storage class, subclass the ``BaseStorage`` class in "
"``django.contrib.messages.storage.base`` and implement the ``_get`` and "
"``_store`` methods."
msgstr ""
"Untuk menulis kelas penyimpanan sendiri, subkelas kelas ``BaseStorage`` di "
"``django.contrib.messages.storage.base`` dan menerapkan metode ``_get`` dan "
"``_store``."

msgid "Message levels"
msgstr "Tingkatan pesan"

msgid ""
"The messages framework is based on a configurable level architecture similar "
"to that of the Python logging module. Message levels allow you to group "
"messages by type so they can be filtered or displayed differently in views "
"and templates."
msgstr ""

msgid ""
"The built-in levels, which can be imported from ``django.contrib.messages`` "
"directly, are:"
msgstr ""
"Tingkat siap-pakai, yang dapat diimpor dari ``django.contrib.messages`` "
"secar langsung, adalah:"

msgid "Constant"
msgstr "Ketetapan"

msgid "Purpose"
msgstr "Maksud"

msgid "``DEBUG``"
msgstr "``DEBUG``"

msgid ""
"Development-related messages that will be ignored (or removed) in a "
"production deployment"
msgstr ""

msgid "``INFO``"
msgstr "``INFO``"

msgid "Informational messages for the user"
msgstr "Pesan informasi untuk pengguna"

msgid "``SUCCESS``"
msgstr "``BERHASIL``"

msgid ""
"An action was successful, e.g. \"Your profile was updated successfully\""
msgstr ""
"Sebuah tindakan telah berhasil, sebagai contoh \"Profil anda telah berhasil "
"diperbaharui\"."

msgid "``WARNING``"
msgstr "``PERINGATAN``"

msgid "A failure did not occur but may be imminent"
msgstr "Kegagalan tidak muncul tetapi mungkin sebentar lagi"

msgid "``ERROR``"
msgstr "``KESALAHAN``"

msgid "An action was **not** successful or some other failure occurred"
msgstr "Sebuah tindakan **tidak** berhasil atau beberapa kegagalan lain muncul"

msgid ""
"The :setting:`MESSAGE_LEVEL` setting can be used to change the minimum "
"recorded level (or it can be `changed per request`_). Attempts to add "
"messages of a level less than this will be ignored."
msgstr ""

msgid "Message tags"
msgstr "Etiket pesan"

msgid ""
"Message tags are a string representation of the message level plus any extra "
"tags that were added directly in the view (see `Adding extra message tags`_ "
"below for more details). Tags are stored in a string and are separated by "
"spaces. Typically, message tags are used as CSS classes to customize message "
"style based on message type. By default, each level has a single tag that's "
"a lowercase version of its own constant:"
msgstr ""

msgid "Level Constant"
msgstr "Tingkat Ketetapan"

msgid "Tag"
msgstr "Etiket"

msgid "``debug``"
msgstr "``debug``"

msgid "``info``"
msgstr "``info``"

msgid "``success``"
msgstr "``berhasil``"

msgid "``warning``"
msgstr "``peringatan``"

msgid "``error``"
msgstr "``kesalahan``"

msgid ""
"To change the default tags for a message level (either built-in or custom), "
"set the :setting:`MESSAGE_TAGS` setting to a dictionary containing the "
"levels you wish to change. As this extends the default tags, you only need "
"to provide tags for the levels you wish to override::"
msgstr ""

msgid "Using messages in views and templates"
msgstr "Menggunakan pesan di tampilan dan cetakan"

msgid "Adding a message"
msgstr "Menambahkan pesan"

msgid "To add a message, call::"
msgstr "Untuk menambahkan pesan, panggil::"

msgid ""
"Some shortcut methods provide a standard way to add messages with commonly "
"used tags (which are usually represented as HTML classes for the message)::"
msgstr ""

msgid "Displaying messages"
msgstr "Menampilkan pesan"

msgid "**In your template**, use something like::"
msgstr "**Di cetakan anda**, gunakan sesuatu seperti::"

msgid ""
"If you're using the context processor, your template should be rendered with "
"a ``RequestContext``. Otherwise, ensure ``messages`` is available to the "
"template context."
msgstr ""

msgid ""
"Even if you know there is only just one message, you should still iterate "
"over the ``messages`` sequence, because otherwise the message storage will "
"not be cleared for the next request."
msgstr ""

msgid ""
"The context processor also provides a ``DEFAULT_MESSAGE_LEVELS`` variable "
"which is a mapping of the message level names to their numeric value::"
msgstr ""

msgid ""
"**Outside of templates**, you can use :func:`~django.contrib.messages."
"get_messages`::"
msgstr ""
"**Diluar Cetakan**, anda dapat menggunakan :func:`~django.contrib.messages."
"get_messages`::"

msgid ""
"For instance, you can fetch all the messages to return them in a :ref:"
"`JSONResponseMixin <jsonresponsemixin-example>` instead of a :class:`~django."
"views.generic.base.TemplateResponseMixin`."
msgstr ""

msgid ""
":func:`~django.contrib.messages.get_messages` will return an instance of the "
"configured storage backend."
msgstr ""
":func:`~django.contrib.messages.get_messages` akan mengembalikan sebuah "
"instance dari backend penyimpanan dikonfigurasi"

msgid "The ``Message`` class"
msgstr "Kelas ``Message``"

msgid ""
"When you loop over the list of messages in a template, what you get are "
"instances of the ``Message`` class. It's quite a simple object, with only a "
"few attributes:"
msgstr ""

msgid "``message``: The actual text of the message."
msgstr "``message``: Teks sebenarnya dari pesan."

msgid ""
"``level``: An integer describing the type of the message (see the `message "
"levels`_ section above)."
msgstr ""

msgid ""
"``tags``: A string combining all the message's tags (``extra_tags`` and "
"``level_tag``) separated by spaces."
msgstr ""

msgid ""
"``extra_tags``: A string containing custom tags for this message, separated "
"by spaces. It's empty by default."
msgstr ""

msgid ""
"``level_tag``: The string representation of the level. By default, it's the "
"lowercase version of the name of the associated constant, but this can be "
"changed if you need by using the :setting:`MESSAGE_TAGS` setting."
msgstr ""

msgid "Creating custom message levels"
msgstr "Membuat penyesuaian tingkatan pesan"

msgid ""
"Messages levels are nothing more than integers, so you can define your own "
"level constants and use them to create more customized user feedback, e.g.::"
msgstr ""

msgid ""
"When creating custom message levels you should be careful to avoid "
"overloading existing levels. The values for the built-in levels are:"
msgstr ""

msgid "10"
msgstr "10"

msgid "20"
msgstr "20"

msgid "25"
msgstr "25"

msgid "30"
msgstr "30"

msgid "40"
msgstr "40"

msgid ""
"If you need to identify the custom levels in your HTML or CSS, you need to "
"provide a mapping via the :setting:`MESSAGE_TAGS` setting."
msgstr ""

msgid ""
"If you are creating a reusable application, it is recommended to use only "
"the built-in `message levels`_ and not rely on any custom levels."
msgstr ""
"Jika anda sedang membuat aplikasi digunakan kembali, itu sangat dianjurkan "
"untuk menggunakan hanya `message levels`_ siap-pakai dan jangan bergantung "
"pada penyesuaian tingkat apapun"

msgid "Changing the minimum recorded level per-request"
msgstr "Merubah tingkat terekam minimal per-permintaan"

msgid ""
"The minimum recorded level can be set per request via the ``set_level`` "
"method::"
msgstr ""
"Tingkat terekam minimal dapat disetel per permintaan melalui metode "
"``set_level``::"

msgid ""
"Similarly, the current effective level can be retrieved with ``get_level``::"
msgstr "Mirip, tingkat efektif saat ini dapat diambil dengan ``get_level``::"

msgid ""
"For more information on how the minimum recorded level functions, see "
"`Message levels`_ above."
msgstr ""
"Untuk informasi lebih pada bagaimana fungsi tingkat terekam minimal, lihat "
"`Message levels`_ diatas."

msgid "Adding extra message tags"
msgstr "Menambahkan etiket pesan tambahan"

msgid ""
"For more direct control over message tags, you can optionally provide a "
"string containing extra tags to any of the add methods::"
msgstr ""
"Untuk lebih kendali langsung melalui etiket pesan, anda dapat secara pilihan "
"menyediakan string mengandung etiket tambahan ke apapun dari metode tambah::"

msgid ""
"Extra tags are added before the default tag for that level and are space "
"separated."
msgstr ""
"Etiket tambahan ditambahkan sebelum etiket awalan untuk tingkat itu dan "
"ruang terpisah."

msgid "Failing silently when the message framework is disabled"
msgstr ""

msgid ""
"If you're writing a reusable app (or other piece of code) and want to "
"include messaging functionality, but don't want to require your users to "
"enable it if they don't want to, you may pass an additional keyword argument "
"``fail_silently=True`` to any of the ``add_message`` family of methods. For "
"example::"
msgstr ""

msgid ""
"Setting ``fail_silently=True`` only hides the ``MessageFailure`` that would "
"otherwise occur when the messages framework disabled and one attempts to use "
"one of the ``add_message`` family of methods. It does not hide failures that "
"may occur for other reasons."
msgstr ""

msgid "Adding messages in class-based views"
msgstr "Menambahkan pesan-pesan di tampilan berdasarkan-kelas"

msgid ""
"Adds a success message attribute to :class:`~django.views.generic.edit."
"FormView` based classes"
msgstr ""
"Menambah sebuah atribut pesan berhasil pada :class:`~django.views.generic."
"edit.FormView` berdasarkan kelas-kelas"

msgid ""
"``cleaned_data`` is the cleaned data from the form which is used for string "
"formatting"
msgstr ""
"``cleaned_data`` adalah data dibersihkan dari formulir yang digunakan untuk "
"pembentukan string"

msgid ""
"The cleaned data from the ``form`` is available for string interpolation "
"using the ``%(field_name)s`` syntax. For ModelForms, if you need access to "
"fields from the saved ``object`` override the :meth:`~django.contrib."
"messages.views.SuccessMessageMixin.get_success_message` method."
msgstr ""

msgid "**Example views.py for ModelForms**::"
msgstr "**Contoh views.py untuk ModelForms**::"

msgid "Expiration of messages"
msgstr "Pesan berakhir"

msgid ""
"The messages are marked to be cleared when the storage instance is iterated "
"(and cleared when the response is processed)."
msgstr ""

msgid ""
"To avoid the messages being cleared, you can set the messages storage to "
"``False`` after iterating::"
msgstr ""
"Untuk menghindari pesan-pesan sedang dibesihkan, anda dapat menyetel "
"penyimpanan pesan-pesan menjadi ``False`` setelah perulangan::"

msgid "Behavior of parallel requests"
msgstr "Perilaku dari permintaan paralel"

msgid ""
"Due to the way cookies (and hence sessions) work, **the behavior of any "
"backends that make use of cookies or sessions is undefined when the same "
"client makes multiple requests that set or get messages in parallel**. For "
"example, if a client initiates a request that creates a message in one "
"window (or tab) and then another that fetches any uniterated messages in "
"another window, before the first window redirects, the message may appear in "
"the second window instead of the first window where it may be expected."
msgstr ""

msgid ""
"In short, when multiple simultaneous requests from the same client are "
"involved, messages are not guaranteed to be delivered to the same window "
"that created them nor, in some cases, at all. Note that this is typically "
"not a problem in most applications and will become a non-issue in HTML5, "
"where each window/tab will have its own browsing context."
msgstr ""

msgid ""
"A few :ref:`settings<settings-messages>` give you control over message "
"behavior:"
msgstr ""
"Sedikit :ref:`settings<settings-messages>` memberikan anda kendali terhadap "
"perilaku pesan:"

msgid ":setting:`MESSAGE_LEVEL`"
msgstr ":setting:`MESSAGE_LEVEL`"

msgid ":setting:`MESSAGE_STORAGE`"
msgstr ":setting:`MESSAGE_STORAGE`"

msgid ":setting:`MESSAGE_TAGS`"
msgstr ":setting:`MESSAGE_TAGS`"

msgid ""
"For backends that use cookies, the settings for the cookie are taken from "
"the session cookie settings:"
msgstr ""
"Untuk backend yang menggunakan kue, pengaturan untuk kue diambil dari "
"pengaturan kue sesi:"

msgid ":setting:`SESSION_COOKIE_DOMAIN`"
msgstr ":setting:`SESSION_COOKIE_DOMAIN`"

msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

msgid ":setting:`SESSION_COOKIE_HTTPONLY`"
msgstr ":setting:`SESSION_COOKIE_HTTPONLY`"

msgid "PostgreSQL specific aggregation functions"
msgstr "Fungsi pengumpulan khusus PostgreSQL"

msgid ""
"These functions are described in more detail in the `PostgreSQL docs "
"<https://www.postgresql.org/docs/current/static/functions-aggregate.html>`_."
msgstr ""
"Fungsi-fungsi ini digambarkan lebih rinci di `PostgreSQL docs <https://www."
"postgresql.org/docs/current/static/functions-aggregate.html>`_."

msgid ""
"All functions come without default aliases, so you must explicitly provide "
"one. For example::"
msgstr ""
"Semua fungsi-fungsi tanpa nama lain awalan, jadi anda harus jelas "
"menyediakan satu. Sebagai contoh::"

msgid "General-purpose aggregation functions"
msgstr "Fungsi pengumpulan tujuan-umum"

msgid "``ArrayAgg``"
msgstr "``ArrayAgg``"

msgid "Returns a list of values, including nulls, concatenated into an array."
msgstr "Mengembalikan daftar nilai, termasuk null, disambungkan kedalam larik."

msgid "``BitAnd``"
msgstr "``BitAnd``"

msgid ""
"Returns an ``int`` of the bitwise ``AND`` of all non-null input values, or "
"``None`` if all values are null."
msgstr ""
"Mengembalikan sebuah ``int`` dari bitwise ``AND`` dari semua nilai-nilai "
"masukan bukan-null, atau ``None`` jika semua nilai-nilai adalah null."

msgid "``BitOr``"
msgstr "``BitOr``"

msgid ""
"Returns an ``int`` of the bitwise ``OR`` of all non-null input values, or "
"``None`` if all values are null."
msgstr ""
"Mengembalikan sebuah ``int`` dari bitwise ``OR`` dari semua nilai-nilai "
"masukan bukan-null, atau ``None`` jika semua nilai-nilai adalah null."

msgid "``BoolAnd``"
msgstr "``BoolAnd``"

msgid ""
"Returns ``True``, if all input values are true, ``None`` if all values are "
"null or if there are no values, otherwise ``False`` ."
msgstr ""
"Mengembalikan ``True``, jika semua nilai-nilai masukan adalah true, ``None`` "
"jika semua nilai-nilai adalah null jika tidak ada nilai, jika tidak "
"``False``."

msgid "``BoolOr``"
msgstr "``BoolOr``"

msgid ""
"Returns ``True`` if at least one input value is true, ``None`` if all values "
"are null or if there are no values, otherwise ``False``."
msgstr ""
"Mengembalikan ``True``, jika setidaknya satu nilai masukan adalah true, "
"``None`` jika semua nilai-nilai adalah null atau, j jika tidak ada nilai, "
"jika tidak ``False``."

msgid "``JSONBAgg``"
msgstr ""

msgid ""
"Returns the input values as a ``JSON`` array. Requires PostgreSQL ≥ 9.5."
msgstr ""

msgid "``StringAgg``"
msgstr "``StringAgg``"

msgid ""
"Returns the input values concatenated into a string, separated by the "
"``delimiter`` string."
msgstr ""
"Mengembalikan nilai-nilai masukan digabungkan kedalam string, dipisah "
"berdasarkan string ``delimiter``"

msgid "Required argument. Needs to be a string."
msgstr "Diwajibkan argumen. Butuh berupa sebuah string."

msgid ""
"An optional boolean argument that determines if concatenated values will be "
"distinct. Defaults to ``False``."
msgstr ""

msgid "Aggregate functions for statistics"
msgstr "Fungsi-fungsi pengumpulan untuk statistik"

msgid "``y`` and ``x``"
msgstr "``y`` dan ``x``"

msgid ""
"The arguments ``y`` and ``x`` for all these functions can be the name of a "
"field or an expression returning a numeric data. Both are required."
msgstr ""

msgid "``Corr``"
msgstr "``Corr``"

msgid ""
"Returns the correlation coefficient as a ``float``, or ``None`` if there "
"aren't any matching rows."
msgstr ""

msgid "``CovarPop``"
msgstr "``CovarPop``"

msgid ""
"Returns the population covariance as a ``float``, or ``None`` if there "
"aren't any matching rows."
msgstr ""

msgid "Has one optional argument:"
msgstr "Mempunyai satu argumen pilihan:"

msgid ""
"By default ``CovarPop`` returns the general population covariance. However, "
"if ``sample=True``, the return value will be the sample population "
"covariance."
msgstr ""

msgid "``RegrAvgX``"
msgstr "``RegrAvgX``"

msgid ""
"Returns the average of the independent variable (``sum(x)/N``) as a "
"``float``, or ``None`` if there aren't any matching rows."
msgstr ""

msgid "``RegrAvgY``"
msgstr "``RegrAvgY``"

msgid ""
"Returns the average of the dependent variable (``sum(y)/N``) as a ``float``, "
"or ``None`` if there aren't any matching rows."
msgstr ""

msgid "``RegrCount``"
msgstr "``RegrCount``"

msgid ""
"Returns an ``int`` of the number of input rows in which both expressions are "
"not null."
msgstr ""

msgid "``RegrIntercept``"
msgstr "``RegrIntercept``"

msgid ""
"Returns the y-intercept of the least-squares-fit linear equation determined "
"by the ``(x, y)`` pairs as a ``float``, or ``None`` if there aren't any "
"matching rows."
msgstr ""

msgid "``RegrR2``"
msgstr "``RegrR2``"

msgid ""
"Returns the square of the correlation coefficient as a ``float``, or "
"``None`` if there aren't any matching rows."
msgstr ""

msgid "``RegrSlope``"
msgstr "``RegrSlope``"

msgid ""
"Returns the slope of the least-squares-fit linear equation determined by the "
"``(x, y)`` pairs as a ``float``, or ``None`` if there aren't any matching "
"rows."
msgstr ""

msgid "``RegrSXX``"
msgstr "``RegrSXX``"

msgid ""
"Returns ``sum(x^2) - sum(x)^2/N`` (\"sum of squares\" of the independent "
"variable) as a ``float``, or ``None`` if there aren't any matching rows."
msgstr ""

msgid "``RegrSXY``"
msgstr "``RegrSXY``"

msgid ""
"Returns ``sum(x*y) - sum(x) * sum(y)/N`` (\"sum of products\" of independent "
"times dependent variable) as a ``float``, or ``None`` if there aren't any "
"matching rows."
msgstr ""

msgid "``RegrSYY``"
msgstr "``RegrSYY``"

msgid ""
"Returns ``sum(y^2) - sum(y)^2/N`` (\"sum of squares\" of the dependent "
"variable)  as a ``float``, or ``None`` if there aren't any matching rows."
msgstr ""

msgid "Usage examples"
msgstr "Contoh penggunaan"

msgid "We will use this example table::"
msgstr "Kami akan gunakan tabel contoh ini ::"

msgid ""
"Here's some examples of some of the general-purpose aggregation functions::"
msgstr ""
"Ini adalah beberapa contoh dari beberapa fungsi-fungsi pengumpulan tujuan-"
"umum::"

msgid ""
"The next example shows the usage of statistical aggregate functions. The "
"underlying math will be not described (you can read about this, for example, "
"at `wikipedia <https://en.wikipedia.org/wiki/Regression_analysis>`_)::"
msgstr ""
"Contoh selanjutnya menunjukkan penggunaan dari fungsi-fungsi pengumpulan "
"statistik. Jalur pokok akan tidak digambarkan (anda dapat membaca tentang "
"ini, sebagai contoh, pada `wikipedia <https://en.wikipedia.org/wiki/"
"Regression_analysis>`_)::"

msgid "PostgreSQL specific model fields"
msgstr "Bidang-bidang model khusus PostgreSQL"

msgid ""
"All of these fields are available from the ``django.contrib.postgres."
"fields`` module."
msgstr ""
"Semua dari bidang ini tersedia dari modul ``django.contrib.postgres.fields``."

msgid "``ArrayField``"
msgstr "``ArrayField``"

msgid ""
"A field for storing lists of data. Most field types can be used, you simply "
"pass another field instance as the :attr:`base_field <ArrayField."
"base_field>`. You may also specify a :attr:`size <ArrayField.size>`. "
"``ArrayField`` can be nested to store multi-dimensional arrays."
msgstr ""
"Sebuah bidang untuk menyimpan daftar data. Kebanyakan jenis bidang dapat "
"digunakan, anda cukup melewatkan instance bidang lain sebagai :attr:"
"`base_field <ArrayField.base_field>`. Anda mungkin juga menentukan sebuah :"
"attr:`size <ArrayField.size>`. ``ArrayField`` dapat disarangkan untuk "
"menyimpan larik dimensi-banyak."

msgid ""
"If you give the field a :attr:`~django.db.models.Field.default`, ensure it's "
"a callable such as ``list`` (for an empty default) or a callable that "
"returns a list (such as a function). Incorrectly using ``default=[]`` "
"creates a mutable default that is shared between all instances of "
"``ArrayField``."
msgstr ""

msgid "This is a required argument."
msgstr "Ini adalah sebuah argumen diwajibkan."

msgid ""
"Specifies the underlying data type and behavior for the array. It should be "
"an instance of a subclass of :class:`~django.db.models.Field`. For example, "
"it could be an :class:`~django.db.models.IntegerField` or a :class:`~django."
"db.models.CharField`. Most field types are permitted, with the exception of "
"those handling relational data (:class:`~django.db.models.ForeignKey`, :"
"class:`~django.db.models.OneToOneField` and :class:`~django.db.models."
"ManyToManyField`)."
msgstr ""

msgid ""
"It is possible to nest array fields - you can specify an instance of "
"``ArrayField`` as the ``base_field``. For example::"
msgstr ""
"Itu memungkinkan menyarang bidang-bidang larik - anda dapat menentukan "
"sebuah instance dari ``ArrayField`` sebagai ``base_field``. Sebagai contoh::"

msgid ""
"Transformation of values between the database and the model, validation of "
"data and configuration, and serialization are all delegated to the "
"underlying base field."
msgstr ""

msgid "This is an optional argument."
msgstr "Ini adalah sebuah argumen pilihan."

msgid ""
"If passed, the array will have a maximum size as specified. This will be "
"passed to the database, although PostgreSQL at present does not enforce the "
"restriction."
msgstr ""

msgid ""
"When nesting ``ArrayField``, whether you use the `size` parameter or not, "
"PostgreSQL requires that the arrays are rectangular::"
msgstr ""

msgid ""
"If irregular shapes are required, then the underlying field should be made "
"nullable and the values padded with ``None``."
msgstr ""

msgid "Querying ``ArrayField``"
msgstr "Meminta ``ArrayField``"

msgid ""
"There are a number of custom lookups and transforms for :class:`ArrayField`. "
"We will use the following example model::"
msgstr ""

msgid ""
"The :lookup:`contains` lookup is overridden on :class:`ArrayField`. The "
"returned objects will be those where the values passed are a subset of the "
"data. It uses the SQL operator ``@>``. For example::"
msgstr ""

msgid "``contained_by``"
msgstr "``contained_by``"

msgid ""
"This is the inverse of the :lookup:`contains <arrayfield.contains>` lookup - "
"the objects returned will be those where the data is a subset of the values "
"passed. It uses the SQL operator ``<@``. For example::"
msgstr ""

msgid "``overlap``"
msgstr "``overlap``"

msgid ""
"Returns objects where the data shares any results with the values passed. "
"Uses the SQL operator ``&&``. For example::"
msgstr ""

msgid "``len``"
msgstr "``len``"

msgid ""
"Returns the length of the array. The lookups available afterwards are those "
"available for :class:`~django.db.models.IntegerField`. For example::"
msgstr ""

msgid "Index transforms"
msgstr "Perubahan indeks"

msgid ""
"This class of transforms allows you to index into the array in queries. Any "
"non-negative integer can be used. There are no errors if it exceeds the :"
"attr:`size <ArrayField.size>` of the array. The lookups available after the "
"transform are those from the :attr:`base_field <ArrayField.base_field>`. For "
"example::"
msgstr ""

msgid ""
"PostgreSQL uses 1-based indexing for array fields when writing raw SQL. "
"However these indexes and those used in :lookup:`slices <arrayfield.slice>` "
"use 0-based indexing to be consistent with Python."
msgstr ""

msgid "Slice transforms"
msgstr "Perubahan potongan"

msgid ""
"This class of transforms allow you to take a slice of the array. Any two non-"
"negative integers can be used, separated by a single underscore. The lookups "
"available after the transform do not change. For example::"
msgstr ""

msgid ""
"PostgreSQL uses 1-based indexing for array fields when writing raw SQL. "
"However these slices and those used in :lookup:`indexes <arrayfield.index>` "
"use 0-based indexing to be consistent with Python."
msgstr ""

msgid "Multidimensional arrays with indexes and slices"
msgstr "Larik dimensi banyak dengan indeks dan potongan"

msgid ""
"PostgreSQL has some rather esoteric behavior when using indexes and slices "
"on multidimensional arrays. It will always work to use indexes to reach down "
"to the final underlying data, but most other slices behave strangely at the "
"database level and cannot be supported in a logical, consistent fashion by "
"Django."
msgstr ""

msgid "Indexing ``ArrayField``"
msgstr "Mengindeks ``ArrayField``"

msgid ""
"At present using :attr:`~django.db.models.Field.db_index` will create a "
"``btree`` index. This does not offer particularly significant help to "
"querying. A more useful index is a ``GIN`` index, which you should create "
"using a :class:`~django.db.migrations.operations.RunSQL` operation."
msgstr ""

msgid "``CIText`` fields"
msgstr ""

msgid ""
"A mixin to create case-insensitive text fields backed by the citext_ type. "
"Read about `the performance considerations`_ prior to using it."
msgstr ""

msgid ""
"To use ``citext``, use the :class:`.CITextExtension` operation to :ref:"
"`setup the citext extension <create-postgresql-extensions>` in PostgreSQL "
"before the first ``CreateModel`` migration operation."
msgstr ""

msgid "Several fields that use the mixin are provided:"
msgstr ""

msgid ""
"These fields subclass :class:`~django.db.models.CharField`, :class:`~django."
"db.models.EmailField`, and :class:`~django.db.models.TextField`, "
"respectively."
msgstr ""

msgid ""
"``max_length`` won't be enforced in the database since ``citext`` behaves "
"similar to PostgreSQL's ``text`` type."
msgstr ""

msgid "``HStoreField``"
msgstr "``HStoreField``"

msgid ""
"A field for storing key-value pairs. The Python data type used is a "
"``dict``. Keys must be strings, and values may be either strings or nulls "
"(``None`` in Python)."
msgstr ""

msgid "To use this field, you'll need to:"
msgstr "Untuk menggunakan bidang ini, anda akan butuh untuk:"

msgid "Add ``'django.contrib.postgres'`` in your :setting:`INSTALLED_APPS`."
msgstr ""
"Tambah ``'django.contrib.postgres'`` dalam :setting:`INSTALLED_APPS` anda."

msgid ""
":ref:`Setup the hstore extension <create-postgresql-extensions>` in "
"PostgreSQL."
msgstr ""
":ref:`Setup the hstore extension <create-postgresql-extensions>` di "
"PostgreSQL."

msgid ""
"You'll see an error like ``can't adapt type 'dict'`` if you skip the first "
"step, or ``type \"hstore\" does not exist`` if you skip the second."
msgstr ""
"Anda akan melihat sebuah kesalahan seperti ``can't adapt type 'dict'`` jika "
"anda melewati langkah pertama, atau ``type \"hstore\" does not exist`` jika "
"anda melewati kedua."

msgid ""
"Added the ability to store nulls. Previously, they were cast to strings."
msgstr ""

msgid ""
"On occasions it may be useful to require or restrict the keys which are "
"valid for a given field. This can be done using the :class:`~django.contrib."
"postgres.validators.KeysValidator`."
msgstr ""

msgid "Querying ``HStoreField``"
msgstr "Meminta ``HStoreField``"

msgid ""
"In addition to the ability to query by key, there are a number of custom "
"lookups available for ``HStoreField``."
msgstr ""

msgid "We will use the following example model::"
msgstr "Kami akan menggunakan model contoh berikut::"

msgid "Key lookups"
msgstr "Kunci pencarian"

msgid ""
"To query based on a given key, you simply use that key as the lookup name::"
msgstr ""

msgid "You can chain other lookups after key lookups::"
msgstr ""

msgid ""
"If the key you wish to query by clashes with the name of another lookup, you "
"need to use the :lookup:`hstorefield.contains` lookup instead."
msgstr ""

msgid ""
"Since any string could be a key in a hstore value, any lookup other than "
"those listed below will be interpreted as a key lookup. No errors are "
"raised. Be extra careful for typing mistakes, and always check your queries "
"work as you intend."
msgstr ""

msgid ""
"The :lookup:`contains` lookup is overridden on :class:`~django.contrib."
"postgres.fields.HStoreField`. The returned objects are those where the given "
"``dict`` of key-value pairs are all contained in the field. It uses the SQL "
"operator ``@>``. For example::"
msgstr ""

msgid ""
"This is the inverse of the :lookup:`contains <hstorefield.contains>` lookup "
"- the objects returned will be those where the key-value pairs on the object "
"are a subset of those in the value passed. It uses the SQL operator ``<@``. "
"For example::"
msgstr ""

msgid "``has_key``"
msgstr "``has_key``"

msgid ""
"Returns objects where the given key is in the data. Uses the SQL operator ``?"
"``. For example::"
msgstr ""

msgid "``has_any_keys``"
msgstr "``has_any_keys``"

msgid ""
"Returns objects where any of the given keys are in the data. Uses the SQL "
"operator ``?|``. For example::"
msgstr ""

msgid "``has_keys``"
msgstr "``has_keys``"

msgid ""
"Returns objects where all of the given keys are in the data. Uses the SQL "
"operator ``?&``. For example::"
msgstr ""

msgid "``keys``"
msgstr "``keys``"

msgid ""
"Returns objects where the array of keys is the given value. Note that the "
"order is not guaranteed to be reliable, so this transform is mainly useful "
"for using in conjunction with lookups on :class:`~django.contrib.postgres."
"fields.ArrayField`. Uses the SQL function ``akeys()``. For example::"
msgstr ""

msgid "``values``"
msgstr "``values``"

msgid ""
"Returns objects where the array of values is the given value. Note that the "
"order is not guaranteed to be reliable, so this transform is mainly useful "
"for using in conjunction with lookups on :class:`~django.contrib.postgres."
"fields.ArrayField`. Uses the SQL function ``avalues()``. For example::"
msgstr ""

msgid "``JSONField``"
msgstr "``JSONField``"

msgid ""
"A field for storing JSON encoded data. In Python the data is represented in "
"its Python native format: dictionaries, lists, strings, numbers, booleans "
"and ``None``."
msgstr ""

msgid ""
"An optional JSON-encoding class to serialize data types not supported by the "
"standard JSON serializer (``datetime``, ``uuid``, etc.). For example, you "
"can use the :class:`~django.core.serializers.json.DjangoJSONEncoder` class "
"or any other :py:class:`json.JSONEncoder` subclass."
msgstr ""

msgid ""
"When the value is retrieved from the database, it will be in the format "
"chosen by the custom encoder (most often a string), so you'll need to take "
"extra steps to convert the value back to the initial data type (:meth:`Model."
"from_db() <django.db.models.Model.from_db>` and :meth:`Field.from_db_value() "
"<django.db.models.Field.from_db_value>` are two possible hooks for that "
"purpose). Your deserialization may need to account for the fact that you "
"can't be certain of the input type. For example, you run the risk of "
"returning a ``datetime`` that was actually a string that just happened to be "
"in the same format chosen for ``datetime``\\s."
msgstr ""

msgid ""
"If you give the field a :attr:`~django.db.models.Field.default`, ensure it's "
"a callable such as ``dict`` (for an empty default) or a callable that "
"returns a dict (such as a function). Incorrectly using ``default={}`` "
"creates a mutable default that is shared between all instances of "
"``JSONField``."
msgstr ""

msgid ""
"PostgreSQL has two native JSON based data types: ``json`` and ``jsonb``. The "
"main difference between them is how they are stored and how they can be "
"queried. PostgreSQL's ``json`` field is stored as the original string "
"representation of the JSON and must be decoded on the fly when queried based "
"on keys. The ``jsonb`` field is stored based on the actual structure of the "
"JSON which allows indexing. The trade-off is a small additional cost on "
"writing to the ``jsonb`` field. ``JSONField`` uses ``jsonb``."
msgstr ""

msgid "**As a result, this field requires PostgreSQL ≥ 9.4**."
msgstr ""

msgid "Querying ``JSONField``"
msgstr "Meminta ``JSONField``"

msgid "Key, index, and path lookups"
msgstr "Kunci, indeks, dan pencarian kalur"

msgid ""
"To query based on a given dictionary key, simply use that key as the lookup "
"name::"
msgstr ""
"Untuk meminta berdasarkan kunci kamus yang diberikan, cukup gunakan kunci "
"itu sebagai nama pencarian::"

msgid "Multiple keys can be chained together to form a path lookup::"
msgstr ""

msgid ""
"If the key is an integer, it will be interpreted as an index lookup in an "
"array::"
msgstr ""
"Jika kunci adalah sebuah integer, itu akan ditafsirkan sebagai sebuah "
"pencarian indeks dalam sebuah larik::"

msgid ""
"If the key you wish to query by clashes with the name of another lookup, use "
"the :lookup:`jsonfield.contains` lookup instead."
msgstr ""

msgid ""
"If only one key or index is used, the SQL operator ``->`` is used. If "
"multiple operators are used then the ``#>`` operator is used."
msgstr ""

msgid ""
"Since any string could be a key in a JSON object, any lookup other than "
"those listed below will be interpreted as a key lookup. No errors are "
"raised. Be extra careful for typing mistakes, and always check your queries "
"work as you intend."
msgstr ""

msgid "Containment and key operations"
msgstr ""

msgid ""
":class:`~django.contrib.postgres.fields.JSONField` shares lookups relating "
"to containment and keys with :class:`~django.contrib.postgres.fields."
"HStoreField`."
msgstr ""
":class:`~django.contrib.postgres.fields.JSONField` berbagi pencarian terkait "
"pada penahanan dan kunci dengan :class:`~django.contrib.postgres.fields."
"HStoreField`."

msgid ""
":lookup:`contains <hstorefield.contains>` (accepts any JSON rather than just "
"a dictionary of strings)"
msgstr ""
":lookup:`contains <hstorefield.contains>` (menerima JSON apapun daripada "
"hanya sebuah kamus dari string)"

msgid ""
":lookup:`contained_by <hstorefield.contained_by>` (accepts any JSON rather "
"than just a dictionary of strings)"
msgstr ""
":lookup:`contained_by <hstorefield.contained_by>` (menerima JSON apapun "
"daripada hanya sebuah kamus dari string)"

msgid ":lookup:`has_key <hstorefield.has_key>`"
msgstr ":lookup:`has_key <hstorefield.has_key>`"

msgid ":lookup:`has_any_keys <hstorefield.has_any_keys>`"
msgstr ":lookup:`has_any_keys <hstorefield.has_any_keys>`"

msgid ":lookup:`has_keys <hstorefield.has_keys>`"
msgstr ":lookup"

msgid "Range Fields"
msgstr "Bidang Jangkauan"

msgid ""
"There are five range field types, corresponding to the built-in range types "
"in PostgreSQL. These fields are used to store a range of values; for example "
"the start and end timestamps of an event, or the range of ages an activity "
"is suitable for."
msgstr ""

msgid ""
"All of the range fields translate to :ref:`psycopg2 Range objects <psycopg2:"
"adapt-range>` in python, but also accept tuples as input if no bounds "
"information is necessary. The default is lower bound included, upper bound "
"excluded; that is, ``[)``."
msgstr ""

msgid "``IntegerRangeField``"
msgstr "``IntegerRangeField``"

msgid ""
"Stores a range of integers. Based on an :class:`~django.db.models."
"IntegerField`. Represented by an ``int4range`` in the database and a :class:"
"`~psycopg2:psycopg2.extras.NumericRange` in Python."
msgstr ""

msgid ""
"Regardless of the bounds specified when saving the data, PostgreSQL always "
"returns a range in a canonical form that includes the lower bound and "
"excludes the upper bound; that is ``[)``."
msgstr ""

msgid "``BigIntegerRangeField``"
msgstr "``BigIntegerRangeField``"

msgid ""
"Stores a range of large integers. Based on a :class:`~django.db.models."
"BigIntegerField`. Represented by an ``int8range`` in the database and a :"
"class:`~psycopg2:psycopg2.extras.NumericRange` in Python."
msgstr ""

msgid "``FloatRangeField``"
msgstr "``FloatRangeField``"

msgid ""
"Stores a range of floating point values. Based on a :class:`~django.db."
"models.FloatField`. Represented by a ``numrange`` in the database and a :"
"class:`~psycopg2:psycopg2.extras.NumericRange` in Python."
msgstr ""

msgid "``DateTimeRangeField``"
msgstr "``DateTimeRangeField``"

msgid ""
"Stores a range of timestamps. Based on a :class:`~django.db.models."
"DateTimeField`. Represented by a ``tztsrange`` in the database and a :class:"
"`~psycopg2:psycopg2.extras.DateTimeTZRange` in Python."
msgstr ""

msgid "``DateRangeField``"
msgstr "``DateRangeField``"

msgid ""
"Stores a range of dates. Based on a :class:`~django.db.models.DateField`. "
"Represented by a ``daterange`` in the database and a :class:`~psycopg2:"
"psycopg2.extras.DateRange` in Python."
msgstr ""

msgid "Querying Range Fields"
msgstr ""

msgid ""
"There are a number of custom lookups and transforms for range fields. They "
"are available on all the above fields, but we will use the following example "
"model::"
msgstr ""

msgid "We will also use the following example objects::"
msgstr ""

msgid "and ``NumericRange``:"
msgstr ""

msgid "Containment functions"
msgstr ""

msgid ""
"As with other PostgreSQL fields, there are three standard containment "
"operators: ``contains``, ``contained_by`` and ``overlap``, using the SQL "
"operators ``@>``, ``<@``, and ``&&`` respectively."
msgstr ""

msgid ""
"The ``contained_by`` lookup is also available on the non-range field types: :"
"class:`~django.db.models.IntegerField`, :class:`~django.db.models."
"BigIntegerField`, :class:`~django.db.models.FloatField`, :class:`~django.db."
"models.DateField`, and :class:`~django.db.models.DateTimeField`. For "
"example::"
msgstr ""

msgid "Comparison functions"
msgstr "Fungsi perbandingan"

msgid ""
"Range fields support the standard lookups: :lookup:`lt`, :lookup:`gt`, :"
"lookup:`lte` and :lookup:`gte`. These are not particularly helpful - they "
"compare the lower bounds first and then the upper bounds only if necessary. "
"This is also the strategy used to order by a range field. It is better to "
"use the specific range comparison operators."
msgstr ""

msgid "``fully_lt``"
msgstr "``fully_lt``"

msgid ""
"The returned ranges are strictly less than the passed range. In other words, "
"all the points in the returned range are less than all those in the passed "
"range."
msgstr ""

msgid "``fully_gt``"
msgstr "``fully_gt``"

msgid ""
"The returned ranges are strictly greater than the passed range. In other "
"words, the all the points in the returned range are greater than all those "
"in the passed range."
msgstr ""

msgid "``not_lt``"
msgstr "``not_lt``"

msgid ""
"The returned ranges do not contain any points less than the passed range, "
"that is the lower bound of the returned range is at least the lower bound of "
"the passed range."
msgstr ""

msgid "``not_gt``"
msgstr "``not_gt``"

msgid ""
"The returned ranges do not contain any points greater than the passed range, "
"that is the upper bound of the returned range is at most the upper bound of "
"the passed range."
msgstr ""

msgid "``adjacent_to``"
msgstr "``adjacent_to``"

msgid "The returned ranges share a bound with the passed range."
msgstr ""

msgid "Querying using the bounds"
msgstr ""

msgid ""
"There are three transforms available for use in queries. You can extract the "
"lower or upper bound, or query based on emptiness."
msgstr ""

msgid "``startswith``"
msgstr "``startswith``"

msgid ""
"Returned objects have the given lower bound. Can be chained to valid lookups "
"for the base field."
msgstr ""

msgid "``endswith``"
msgstr "``endswith``"

msgid ""
"Returned objects have the given upper bound. Can be chained to valid lookups "
"for the base field."
msgstr ""

msgid "``isempty``"
msgstr "``isempty``"

msgid ""
"Returned objects are empty ranges. Can be chained to valid lookups for a :"
"class:`~django.db.models.BooleanField`."
msgstr ""

msgid "Defining your own range types"
msgstr "Menentukan jenis jangkauan anda sendiri"

msgid ""
"PostgreSQL allows the definition of custom range types. Django's model and "
"form field implementations use base classes below, and psycopg2 provides a :"
"func:`~psycopg2:psycopg2.extras.register_range` to allow use of custom range "
"types."
msgstr ""

msgid "Base class for model range fields."
msgstr ""

msgid "The model field class to use."
msgstr ""

msgid "The psycopg2 range type to use."
msgstr ""

msgid ""
"The form field class to use. Should be a subclass of :class:`django.contrib."
"postgres.forms.BaseRangeField`."
msgstr ""

msgid "Base class for form range fields."
msgstr ""

msgid "The form field to use."
msgstr ""

msgid "PostgreSQL specific form fields and widgets"
msgstr ""

msgid ""
"All of these fields and widgets are available from the ``django.contrib."
"postgres.forms`` module."
msgstr ""

msgid "``SimpleArrayField``"
msgstr "``SimpleArrayField``"

msgid ""
"A simple field which maps to an array. It is represented by an HTML "
"``<input>``."
msgstr ""
"Sebuah bidang sederhana yang memetakan ke sebuah larik. Dia diwakilkan oleh "
"sebuah HTML ``<input>``."

msgid ""
"It specifies the underlying form field for the array. This is not used to "
"render any HTML, but it is used to process the submitted data and validate "
"it. For example::"
msgstr ""

msgid ""
"This is an optional argument which defaults to a comma: ``,``. This value is "
"used to split the submitted data. It allows you to chain "
"``SimpleArrayField`` for multidimensional data::"
msgstr ""

msgid ""
"The field does not support escaping of the delimiter, so be careful in cases "
"where the delimiter is a valid character in the underlying field. The "
"delimiter does not need to be only one character."
msgstr ""

msgid ""
"This is an optional argument which validates that the array does not exceed "
"the stated length."
msgstr ""

msgid ""
"This is an optional argument which validates that the array reaches at least "
"the stated length."
msgstr ""

msgid "User friendly forms"
msgstr "Formulir ramah"

msgid ""
"``SimpleArrayField`` is not particularly user friendly in most cases, "
"however it is a useful way to format data from a client-side widget for "
"submission to the server."
msgstr ""

msgid "``SplitArrayField``"
msgstr "``SplitArrayField``"

msgid ""
"This field handles arrays by reproducing the underlying field a fixed number "
"of times."
msgstr ""

msgid ""
"This is a required argument. It specifies the form field to be repeated."
msgstr ""

msgid "This is the fixed number of times the underlying field will be used."
msgstr ""

msgid ""
"By default, this is set to ``False``. When ``False``, each value from the "
"repeated fields is stored. When set to ``True``, any trailing values which "
"are blank will be stripped from the result. If the underlying field has "
"``required=True``, but ``remove_trailing_nulls`` is ``True``, then null "
"values are only allowed at the end, and will be stripped."
msgstr ""

msgid "Some examples::"
msgstr "Beberapa contoh::"

msgid ""
"A field which accepts JSON encoded data for an :class:`~django.contrib."
"postgres.fields.HStoreField`. It casts all values (except nulls) to strings. "
"It is represented by an HTML ``<textarea>``."
msgstr ""

msgid ""
"``HStoreField`` is not particularly user friendly in most cases, however it "
"is a useful way to format data from a client-side widget for submission to "
"the server."
msgstr ""

msgid "Added the ability to store nulls."
msgstr ""

msgid ""
"A field which accepts JSON encoded data for a :class:`~django.contrib."
"postgres.fields.JSONField`. It is represented by an HTML ``<textarea>``."
msgstr ""

msgid ""
"``JSONField`` is not particularly user friendly in most cases, however it is "
"a useful way to format data from a client-side widget for submission to the "
"server."
msgstr ""

msgid ""
"This group of fields all share similar functionality for accepting range "
"data. They are based on :class:`~django.forms.MultiValueField`. They treat "
"one omitted value as an unbounded range. They also validate that the lower "
"bound is not greater than the upper bound. All of these fields use :class:"
"`~django.contrib.postgres.forms.RangeWidget`."
msgstr ""

msgid ""
"Based on :class:`~django.forms.IntegerField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.NumericRange`. Default for :class:`~django."
"contrib.postgres.fields.IntegerRangeField` and :class:`~django.contrib."
"postgres.fields.BigIntegerRangeField`."
msgstr ""

msgid ""
"Based on :class:`~django.forms.FloatField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.NumericRange`. Default for :class:`~django."
"contrib.postgres.fields.FloatRangeField`."
msgstr ""

msgid ""
"Based on :class:`~django.forms.DateTimeField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.DateTimeTZRange`. Default for :class:"
"`~django.contrib.postgres.fields.DateTimeRangeField`."
msgstr ""

msgid ""
"Based on :class:`~django.forms.DateField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.DateRange`. Default for :class:`~django."
"contrib.postgres.fields.DateRangeField`."
msgstr ""

msgid "Widgets"
msgstr "Widget"

msgid "``RangeWidget``"
msgstr "``RangeWidget``"

msgid ""
"Widget used by all of the range fields. Based on :class:`~django.forms."
"MultiWidget`."
msgstr ""

msgid ":class:`~RangeWidget` has one required argument:"
msgstr ":class:`~RangeWidget` mempunyai satu argumen yang diwajibkan:"

msgid "A :class:`~RangeWidget` comprises a 2-tuple of ``base_widget``."
msgstr ""

msgid ""
"Takes a single \"compressed\" value of a field, for example a :class:"
"`~django.contrib.postgres.fields.DateRangeField`, and returns a tuple "
"representing and lower and upper bound."
msgstr ""

msgid "PostgreSQL specific database functions"
msgstr ""

msgid ""
"All of these functions are available from the ``django.contrib.postgres."
"functions`` module."
msgstr ""

msgid "``TransactionNow``"
msgstr "``TransactionNow``"

msgid ""
"Returns the date and time on the database server that the current "
"transaction started. If you are not in a transaction it will return the date "
"and time of the current statement. This is a complement to :class:`django.db."
"models.functions.Now`, which returns the date and time of the current "
"statement."
msgstr ""

msgid ""
"Note that only the outermost call to :func:`~django.db.transaction.atomic()` "
"sets up a transaction and thus sets the time that ``TransactionNow()`` will "
"return; nested calls create savepoints which do not affect the transaction "
"time."
msgstr ""

msgid "Usage example::"
msgstr "Contoh penggunaan::"

msgid "``django.contrib.postgres``"
msgstr "``django.contrib.postgres``"

msgid ""
"PostgreSQL has a number of features which are not shared by the other "
"databases Django supports. This optional module contains model fields and "
"form fields for a number of PostgreSQL specific data types."
msgstr ""

msgid ""
"Django is, and will continue to be, a database-agnostic web framework. We "
"would encourage those writing reusable applications for the Django community "
"to write database-agnostic code where practical. However, we recognize that "
"real world projects written using Django need not be database-agnostic. In "
"fact, once a project reaches a given size changing the underlying data store "
"is already a significant challenge and is likely to require changing the "
"code base in some ways to handle differences between the data stores."
msgstr ""

msgid ""
"Django provides support for a number of data types which will only work with "
"PostgreSQL. There is no fundamental reason why (for example) a ``contrib."
"mysql`` module does not exist, except that PostgreSQL has the richest "
"feature set of the supported databases so its users have the most to gain."
msgstr ""

msgid "PostgreSQL specific model indexes"
msgstr ""

msgid ""
"The following are PostgreSQL specific :doc:`indexes </ref/models/indexes>` "
"available from the ``django.contrib.postgres.indexes`` module."
msgstr ""

msgid "``BrinIndex``"
msgstr ""

msgid ""
"Creates a `BRIN index <https://www.postgresql.org/docs/current/static/brin-"
"intro.html>`_."
msgstr ""

msgid "The ``pages_per_range`` argument takes a positive integer."
msgstr ""

msgid "``GinIndex``"
msgstr ""

msgid ""
"Creates a `gin index <https://www.postgresql.org/docs/current/static/gin."
"html>`_."
msgstr ""

msgid ""
"To use this index on data types not in the `built-in operator classes "
"<https://www.postgresql.org/docs/current/static/gin-builtin-opclasses."
"html>`_, you need to activate the `btree_gin extension <https://www."
"postgresql.org/docs/current/static/btree-gin.html>`_ on PostgreSQL. You can "
"install it using the :class:`~django.contrib.postgres.operations."
"BtreeGinExtension` migration operation."
msgstr ""

msgid "PostgreSQL specific lookups"
msgstr ""

msgid "Trigram similarity"
msgstr ""

msgid ""
"The ``trigram_similar`` lookup allows you to perform trigram lookups, "
"measuring the number of trigrams (three consecutive characters) shared, "
"using a dedicated PostgreSQL extension. A trigram lookup is given an "
"expression and returns results that have a similarity measurement greater "
"than the current similarity threshold."
msgstr ""

msgid ""
"To use it, add ``'django.contrib.postgres'`` in your :setting:"
"`INSTALLED_APPS` and activate the `pg_trgm extension <https://www.postgresql."
"org/docs/current/static/pgtrgm.html>`_ on PostgreSQL. You can install the "
"extension using the :class:`~django.contrib.postgres.operations."
"TrigramExtension` migration operation."
msgstr ""

msgid ""
"The ``trigram_similar`` lookup can be used on :class:`~django.db.models."
"CharField` and :class:`~django.db.models.TextField`::"
msgstr ""

msgid "``Unaccent``"
msgstr "``Unaccent``"

msgid ""
"The ``unaccent`` lookup allows you to perform accent-insensitive lookups "
"using a dedicated PostgreSQL extension."
msgstr ""

msgid ""
"This lookup is implemented using :class:`~django.db.models.Transform`, so it "
"can be chained with other lookup functions. To use it, you need to add "
"``'django.contrib.postgres'`` in your :setting:`INSTALLED_APPS` and activate "
"the `unaccent extension on PostgreSQL`_. The :class:`~django.contrib."
"postgres.operations.UnaccentExtension` migration operation is available if "
"you want to perform this activation using migrations)."
msgstr ""

msgid ""
"The ``unaccent`` lookup can be used on :class:`~django.db.models.CharField` "
"and :class:`~django.db.models.TextField`::"
msgstr ""

msgid ""
"``unaccent`` lookups should perform fine in most use cases. However, queries "
"using this filter will generally perform full table scans, which can be slow "
"on large tables. In those cases, using dedicated full text indexing tools "
"might be appropriate."
msgstr ""

msgid "Database migration operations"
msgstr ""

msgid ""
"All of these :doc:`operations </ref/migration-operations>` are available "
"from the ``django.contrib.postgres.operations`` module."
msgstr ""

msgid "Creating extension using migrations"
msgstr ""

msgid ""
"You can create a PostgreSQL extension in your database using a migration "
"file. This example creates an hstore extension, but the same principles "
"apply for other extensions."
msgstr ""

msgid ""
"Set up the hstore extension in PostgreSQL before the first ``CreateModel`` "
"or ``AddField`` operation that involves :class:`~django.contrib.postgres."
"fields.HStoreField` by adding a migration with the :class:`~django.contrib."
"postgres.operations.HStoreExtension` operation. For example::"
msgstr ""

msgid ""
"Creating the extension requires a database user with superuser privileges. "
"If the Django database user doesn't have superuser privileges, you'll have "
"to create the extension outside of Django migrations with a user that has "
"the appropriate privileges. In that case, connect to your Django database "
"and run the query ``CREATE EXTENSION IF NOT EXISTS hstore;``."
msgstr ""

msgid "``CreateExtension``"
msgstr "``CreateExtension``"

msgid "An ``Operation`` subclass which installs PostgreSQL extensions."
msgstr ""

msgid "This is a required argument. The name of the extension to be installed."
msgstr ""

msgid "``BtreeGinExtension``"
msgstr ""

msgid "Install the ``btree_gin`` extension."
msgstr ""

msgid "``CITextExtension``"
msgstr ""

msgid "Installs the ``citext`` extension."
msgstr ""

msgid "``HStoreExtension``"
msgstr "``HStoreExtension``"

msgid ""
"Installs the ``hstore`` extension and also sets up the connection to "
"interpret hstore data for possible use in subsequent migrations."
msgstr ""

msgid "``TrigramExtension``"
msgstr ""

msgid "Installs the ``pg_trgm`` extension."
msgstr ""

msgid "``UnaccentExtension``"
msgstr "``UnaccentExtension``"

msgid "Installs the ``unaccent`` extension."
msgstr ""

msgid "Full text search"
msgstr ""

msgid ""
"The database functions in the ``django.contrib.postgres.search`` module ease "
"the use of PostgreSQL's `full text search engine <https://www.postgresql.org/"
"docs/current/static/textsearch.html>`_."
msgstr ""

msgid ""
"For the examples in this document, we'll use the models defined in :doc:`/"
"topics/db/queries`."
msgstr ""

msgid ""
"For a high-level overview of searching, see the :doc:`topic documentation </"
"topics/db/search>`."
msgstr ""

msgid "The ``search`` lookup"
msgstr ""

msgid ""
"The simplest way to use full text search is to search a single term against "
"a single column in the database. For example::"
msgstr ""

msgid ""
"This creates a ``to_tsvector`` in the database from the ``body_text`` field "
"and a ``plainto_tsquery`` from the search term ``'Cheese'``, both using the "
"default database search configuration. The results are obtained by matching "
"the query and the vector."
msgstr ""

msgid ""
"To use the ``search`` lookup, ``'django.contrib.postgres'`` must be in your :"
"setting:`INSTALLED_APPS`."
msgstr ""

msgid "``SearchVector``"
msgstr ""

msgid ""
"Searching against a single field is great but rather limiting. The ``Entry`` "
"instances we're searching belong to a ``Blog``, which has a ``tagline`` "
"field. To query against both fields, use a ``SearchVector``::"
msgstr ""

msgid ""
"The arguments to ``SearchVector`` can be any :class:`~django.db.models."
"Expression` or the name of a field. Multiple arguments will be concatenated "
"together using a space so that the search document includes them all."
msgstr ""

msgid ""
"``SearchVector`` objects can be combined together, allowing you to reuse "
"them. For example::"
msgstr ""

msgid ""
"See :ref:`postgresql-fts-search-configuration` and :ref:`postgresql-fts-"
"weighting-queries` for an explanation of the ``config`` and ``weight`` "
"parameters."
msgstr ""

msgid "``SearchQuery``"
msgstr ""

msgid ""
"``SearchQuery`` translates the terms the user provides into a search query "
"object that the database compares to a search vector. By default, all the "
"words the user provides are passed through the stemming algorithms, and then "
"it looks for matches for all of the resulting terms."
msgstr ""

msgid ""
"``SearchQuery`` terms can be combined logically to provide more flexibility::"
msgstr ""

msgid ""
"See :ref:`postgresql-fts-search-configuration` for an explanation of the "
"``config`` parameter."
msgstr ""

msgid "``SearchRank``"
msgstr ""

msgid ""
"So far, we've just returned the results for which any match between the "
"vector and the query are possible. It's likely you may wish to order the "
"results by some sort of relevancy. PostgreSQL provides a ranking function "
"which takes into account how often the query terms appear in the document, "
"how close together the terms are in the document, and how important the part "
"of the document is where they occur. The better the match, the higher the "
"value of the rank. To order by relevancy::"
msgstr ""

msgid ""
"See :ref:`postgresql-fts-weighting-queries` for an explanation of the "
"``weights`` parameter."
msgstr ""

msgid "Changing the search configuration"
msgstr ""

msgid ""
"You can specify the ``config`` attribute to a :class:`SearchVector` and :"
"class:`SearchQuery` to use a different search configuration. This allows "
"using a different language parsers and dictionaries as defined by the "
"database::"
msgstr ""

msgid "The value of ``config`` could also be stored in another column::"
msgstr ""

msgid "Weighting queries"
msgstr ""

msgid ""
"Every field may not have the same relevance in a query, so you can set "
"weights of various vectors before you combine them::"
msgstr ""

msgid ""
"The weight should be one of the following letters: D, C, B, A. By default, "
"these weights refer to the numbers ``0.1``, ``0.2``, ``0.4``, and ``1.0``, "
"respectively. If you wish to weight them differently, pass a list of four "
"floats to :class:`SearchRank` as ``weights`` in the same order above::"
msgstr ""

msgid "Performance"
msgstr ""

msgid ""
"Special database configuration isn't necessary to use any of these "
"functions, however, if you're searching more than a few hundred records, "
"you're likely to run into performance problems. Full text search is a more "
"intensive process than comparing the size of an integer, for example."
msgstr ""

msgid ""
"In the event that all the fields you're querying on are contained within one "
"particular model, you can create a functional index which matches the search "
"vector you wish to use. The PostgreSQL documentation has details on "
"`creating indexes for full text search <https://www.postgresql.org/docs/"
"current/static/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX>`_."
msgstr ""

msgid "``SearchVectorField``"
msgstr ""

msgid ""
"If this approach becomes too slow, you can add a ``SearchVectorField`` to "
"your model. You'll need to keep it populated with triggers, for example, as "
"described in the `PostgreSQL documentation`_. You can then query the field "
"as if it were an annotated ``SearchVector``::"
msgstr ""

msgid ""
"Another approach to searching is trigram similarity. A trigram is a group of "
"three consecutive characters. In addition to the :lookup:`trigram_similar` "
"lookup, you can use a couple of other expressions."
msgstr ""

msgid ""
"To use them, you need to activate the `pg_trgm extension <https://www."
"postgresql.org/docs/current/static/pgtrgm.html>`_ on PostgreSQL. You can "
"install it using the :class:`~django.contrib.postgres.operations."
"TrigramExtension` migration operation."
msgstr ""

msgid "``TrigramSimilarity``"
msgstr ""

msgid ""
"Accepts a field name or expression, and a string or expression. Returns the "
"trigram similarity between the two arguments."
msgstr ""

msgid "``TrigramDistance``"
msgstr ""

msgid ""
"Accepts a field name or expression, and a string or expression. Returns the "
"trigram distance between the two arguments."
msgstr ""

msgid "``KeysValidator``"
msgstr "``KeysValidator``"

msgid ""
"Validates that the given keys are contained in the value. If ``strict`` is "
"``True``, then it also checks that there are no other keys present."
msgstr ""
"Pemeriksaan yang kunci-kunci diberikan adalah mengandung dalam nilai. Jika "
"``strict`` adalah ``true``, kemudian itu juga memeriksa bahwa tidak ada "
"kunci-kunci lain hadir."

msgid ""
"The ``messages`` passed should be a dict containing the keys "
"``missing_keys`` and/or ``extra_keys``."
msgstr ""

msgid ""
"Note that this checks only for the existence of a given key, not that the "
"value of a key is non-empty."
msgstr ""
"Catat bahwa pemeriksaan ini hanya untuk kehadiran dari kunci diberikan, "
"bukan bahwa nilai dai kunci adalah bukan-kosong."

msgid "Range validators"
msgstr ""

msgid "``RangeMaxValueValidator``"
msgstr "``RangeMaxValueValidator``"

msgid ""
"Validates that the upper bound of the range is not greater than "
"``limit_value``."
msgstr ""

msgid "``RangeMinValueValidator``"
msgstr "``RangeMinValueValidator``"

msgid ""
"Validates that the lower bound of the range is not less than the "
"``limit_value``."
msgstr ""

msgid "The redirects app"
msgstr "Aplikasi pengalihan"

msgid ""
"Django comes with an optional redirects application. It lets you store "
"simple redirects in a database and handles the redirecting for you. It uses "
"the HTTP response status code ``301 Moved Permanently`` by default."
msgstr ""

msgid "To install the redirects app, follow these steps:"
msgstr "Untuk memasang aplikasi pengalihan, ikuti langkah-langkah ini:"

msgid ""
"Ensure that the ``django.contrib.sites`` framework :ref:`is installed "
"<enabling-the-sites-framework>`."
msgstr ""
"Pastikan bahwa kerangka kerja ``django.contrib.sites`` :ref:`is installed "
"<enabling-the-sites-framework>`."

msgid ""
"Add ``'django.contrib.redirects'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Tambah pengaturan ``'django.contrib.redirects'`` to your :setting:"
"`INSTALLED_APPS`."

msgid ""
"Add ``'django.contrib.redirects.middleware.RedirectFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE` setting."
msgstr ""
"Tambah ``'django.contrib.redirects.middleware.RedirectFallbackMiddleware'`` "
"ke pengaturan :setting:`MIDDLEWARE` anda. "

msgid ""
"``manage.py migrate`` creates a ``django_redirect`` table in your database. "
"This is a simple lookup table with ``site_id``, ``old_path`` and "
"``new_path`` fields."
msgstr ""

msgid ""
"The :class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` "
"does all of the work. Each time any Django application raises a 404 error, "
"this middleware checks the redirects database for the requested URL as a "
"last resort. Specifically, it checks for a redirect with the given "
"``old_path`` with a site ID that corresponds to the :setting:`SITE_ID` "
"setting."
msgstr ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` "
"melakukan semua dari pekerjaan. Setiap kali aplikasi Django apapun "
"memunculkan kesalahan 404, middleware ini memeriksa pengalihan basisdata "
"untuk URL diminta sebagai usaha terakhir. Khususnya, itu memeriksa untuk "
"pengalihan dengan diberikan ``old_path`` dengan ID situs yang berhubungan "
"pada pengaturan :setting:`SITE_ID`."

msgid ""
"If it finds a match, and ``new_path`` is not empty, it redirects to "
"``new_path`` using a 301 (\"Moved Permanently\") redirect. You can subclass :"
"class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` and "
"set :attr:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware."
"response_redirect_class` to :class:`django.http.HttpResponseRedirect` to use "
"a ``302 Moved Temporarily`` redirect instead."
msgstr ""

msgid ""
"If it finds a match, and ``new_path`` is empty, it sends a 410 (\"Gone\") "
"HTTP header and empty (content-less) response."
msgstr ""
"Jika itu menemukan kecocokan, dan ``new_path`` adalah kosong, itu mengirim "
"sebuah 410 (\"Gone\") kepala HTTP dan tanggapan (kurang-isi) kosong."

msgid ""
"Note that the order of :setting:`MIDDLEWARE` matters. Generally, you can "
"put :class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` "
"at the end of the list, because it's a last resort."
msgstr ""

msgid "How to add, change and delete redirects"
msgstr "Bagaimana menambah, merubah dan menghapus pengalihan"

msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Redirects\" section on the admin index page. Edit redirects as you edit "
"any other object in the system."
msgstr ""
"Jika anda telah mengaktifkan antarmuka admin Django otomatis, anda harus "
"melihat bagian \"Redirects\" pada halaman indeks admin. Sunting pengalihan "
"ketika anda menyunting obyek lain apapun di sistem."

msgid ""
"Redirects are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/redirects/models.py`_. You can "
"access redirect objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""
"Pengalihan adalah diwakili oleh :doc:`Django model </topics/db/models>` "
"standar, yang tinggal di `django/contrib/redirects/models.py`_. Anda dapat "
"mengakses pengalihan obyek melalui :doc:`Django database API </topics/db/"
"queries>`."

msgid "Middleware"
msgstr "Middleware"

msgid ""
"You can change the :class:`~django.http.HttpResponse` classes used by the "
"middleware by creating a subclass of :class:`~django.contrib.redirects."
"middleware.RedirectFallbackMiddleware` and overriding "
"``response_gone_class`` and/or ``response_redirect_class``."
msgstr ""
"Anda dapat merubah kelas-kelas :class:`~django.http.HttpResponse` digunakan "
"oleh middleware dengan membuat sebuah subkelas dari :class:`~django.contrib."
"redirects.middleware.RedirectFallbackMiddleware` dan terutama "
"``response_gone_class`` dan/atau ``response_redirect_class``."

msgid ""
"The :class:`~django.http.HttpResponse` class used when a :class:`~django."
"contrib.redirects.models.Redirect` is not found for the requested path or "
"has a blank ``new_path`` value."
msgstr ""
"Kelas :class:`~django.http.HttpResponse` digunakan ketika :class:`~django."
"contrib.redirects.models.Redirect` tidak ditemukan untuk jalur yang diminta "
"atau mempunyai nilai ``new_path`` kosong."

msgid "Defaults to :class:`~django.http.HttpResponseGone`."
msgstr "Awalan pada :class:`~django.http.HttpResponseGone`."

msgid "The :class:`~django.http.HttpResponse` class that handles the redirect."
msgstr "Kelas :class:`~django.http.HttpResponse` yang mengangani pengalihan."

msgid "Defaults to :class:`~django.http.HttpResponsePermanentRedirect`."
msgstr "Awalan pada :class:`~django.http.HttpResponsePermanentRedirect`."

msgid "The sitemap framework"
msgstr "Kerangka peta situs"

msgid ""
"Django comes with a high-level sitemap-generating framework that makes "
"creating sitemap_ XML files easy."
msgstr ""
"Django datang dengan kerangka kerja membangkitkan-peta situs tingkat-tinggi "
"yang membuat pembuatan berkas-berkas XML sitemap_ mudah."

msgid ""
"A sitemap is an XML file on your website that tells search-engine indexers "
"how frequently your pages change and how \"important\" certain pages are in "
"relation to other pages on your site. This information helps search engines "
"index your site."
msgstr ""

msgid ""
"The Django sitemap framework automates the creation of this XML file by "
"letting you express this information in Python code."
msgstr ""
"Kerangka kerja peta situs Django mengotomatiskan pembuatan dari berkas XML "
"ini dengan membiarkan anda menyatakan informasi ini di kode Python."

msgid ""
"It works much like Django's :doc:`syndication framework </ref/contrib/"
"syndication>`. To create a sitemap, just write a :class:`~django.contrib."
"sitemaps.Sitemap` class and point to it in your :doc:`URLconf </topics/http/"
"urls>`."
msgstr ""

msgid "To install the sitemap app, follow these steps:"
msgstr "Untuk memasang aplikasi peta situs, ikuti langkah-langkah ini:"

msgid ""
"Add ``'django.contrib.sitemaps'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Tambah ``'django.contrib.sitemaps'`` ke pengaturan :setting:`INSTALLED_APPS` "
"anda."

msgid ""
"Make sure your :setting:`TEMPLATES` setting contains a ``DjangoTemplates`` "
"backend whose ``APP_DIRS`` options is set to ``True``. It's in there by "
"default, so you'll only need to change this if you've changed that setting."
msgstr ""

msgid ""
"Make sure you've installed the :mod:`sites framework <django.contrib.sites>`."
msgstr ""
"Pastikan anda telah memasang :mod:`sites framework <django.contrib.sites>`."

msgid ""
"(Note: The sitemap application doesn't install any database tables. The only "
"reason it needs to go into :setting:`INSTALLED_APPS` is so that the :func:"
"`~django.template.loaders.app_directories.Loader` template loader can find "
"the default templates.)"
msgstr ""

msgid "Initialization"
msgstr "Inisialisasi"

msgid ""
"To activate sitemap generation on your Django site, add this line to your :"
"doc:`URLconf </topics/http/urls>`::"
msgstr ""
"Untuk mengaktifkan pembangkitan peta situs pada situs Django anda, tambah "
"baris ini ke :doc:`URLconf </topics/http/urls>` anda::"

msgid ""
"This tells Django to build a sitemap when a client accesses :file:`/sitemap."
"xml`."
msgstr ""
"Ini mengatakan Django membangun sebuah peta situs ketika seorang klien "
"mengakses :file:`/sitemap.xml`."

msgid ""
"The name of the sitemap file is not important, but the location is. Search "
"engines will only index links in your sitemap for the current URL level and "
"below. For instance, if :file:`sitemap.xml` lives in your root directory, it "
"may reference any URL in your site. However, if your sitemap lives at :file:"
"`/content/sitemap.xml`, it may only reference URLs that begin with :file:`/"
"content/`."
msgstr ""

msgid ""
"The sitemap view takes an extra, required argument: ``{'sitemaps': sitemaps}"
"``. ``sitemaps`` should be a dictionary that maps a short section label (e."
"g., ``blog`` or ``news``) to its :class:`~django.contrib.sitemaps.Sitemap` "
"class (e.g., ``BlogSitemap`` or ``NewsSitemap``). It may also map to an "
"*instance* of a :class:`~django.contrib.sitemaps.Sitemap` class (e.g., "
"``BlogSitemap(some_var)``)."
msgstr ""

msgid "``Sitemap`` classes"
msgstr "Kelas ``Sitemap``"

msgid ""
"A :class:`~django.contrib.sitemaps.Sitemap` class is a simple Python class "
"that represents a \"section\" of entries in your sitemap. For example, one :"
"class:`~django.contrib.sitemaps.Sitemap` class could represent all the "
"entries of your Weblog, while another could represent all of the events in "
"your events calendar."
msgstr ""

msgid ""
"In the simplest case, all these sections get lumped together into one :file:"
"`sitemap.xml`, but it's also possible to use the framework to generate a "
"sitemap index that references individual sitemap files, one per section. "
"(See `Creating a sitemap index`_ below.)"
msgstr ""

msgid ""
":class:`~django.contrib.sitemaps.Sitemap` classes must subclass ``django."
"contrib.sitemaps.Sitemap``. They can live anywhere in your codebase."
msgstr ""
"Kelas-kelas :class:`~django.contrib.sitemaps.Sitemap` harus mengsubkelaskan "
"``django.contrib.sitemaps.Sitemap``. Mereka dapat tinggal dimana saja dalam "
"basis kode anda."

msgid "A simple example"
msgstr "Sebuah contoh sederhana"

msgid ""
"Let's assume you have a blog system, with an ``Entry`` model, and you want "
"your sitemap to include all the links to your individual blog entries. "
"Here's how your sitemap class might look::"
msgstr ""
"Mari kita beranggapan anda mempunyai sebuah sistem blog, dengan sebuah model "
"``Entry``, dan anda ingin peta situs anda menyertakan semua tautan ke "
"masukan blog pribadi anda. Ini adalah bagaimana kelas petasitus anda mungkin "
"terlihat::"

msgid "Note:"
msgstr "Catatan:"

msgid ""
":attr:`~Sitemap.changefreq` and :attr:`~Sitemap.priority` are class "
"attributes corresponding to ``<changefreq>`` and ``<priority>`` elements, "
"respectively. They can be made callable as functions, as :attr:`~Sitemap."
"lastmod` was in the example."
msgstr ""

msgid ""
":attr:`~Sitemap.items()` is simply a method that returns a list of objects. "
"The objects returned will get passed to any callable methods corresponding "
"to a sitemap property (:attr:`~Sitemap.location`, :attr:`~Sitemap.lastmod`, :"
"attr:`~Sitemap.changefreq`, and :attr:`~Sitemap.priority`)."
msgstr ""

msgid ":attr:`~Sitemap.lastmod` should return a :class:`~datetime.datetime`."
msgstr ""
":attr:`~Sitemap.lastmod` harus mengembalikan sebuah :class:`~datetime."
"datetime`."

msgid ""
"There is no :attr:`~Sitemap.location` method in this example, but you can "
"provide it in order to specify the URL for your object. By default, :attr:"
"`~Sitemap.location()` calls ``get_absolute_url()`` on each object and "
"returns the result."
msgstr ""

msgid "``Sitemap`` class reference"
msgstr "Acuan kelas ``Sitemap``"

msgid "A ``Sitemap`` class can define the following methods/attributes:"
msgstr "Sebuah kelas ``Sitemap`` dapat menentukan metode/atribut berikut:"

msgid ""
"**Required.** A method that returns a list of objects. The framework doesn't "
"care what *type* of objects they are; all that matters is that these objects "
"get passed to the :attr:`~Sitemap.location()`, :attr:`~Sitemap.lastmod()`, :"
"attr:`~Sitemap.changefreq()` and :attr:`~Sitemap.priority()` methods."
msgstr ""

msgid "**Optional.** Either a method or attribute."
msgstr "**Pilihan.** Antara sebuah metode atau atribut."

msgid ""
"If it's a method, it should return the absolute path for a given object as "
"returned by :attr:`~Sitemap.items()`."
msgstr ""
"Jika itu adalah sebuah metode, itu harus mengembalikan jalur mutlak untuk "
"obyek yang diberikan sebagai dikembalikan oleh :attr:`~Sitemap.items()`."

msgid ""
"If it's an attribute, its value should be a string representing an absolute "
"path to use for *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""
"Jika itu adalah sebuah atribut, nilainya harus berupa string mewakili sebuah "
"jalur mutlak untuk digunakan *setiap* obyek dikembalikan oleh :attr:"
"`~Sitemap.items()`."

msgid ""
"In both cases, \"absolute path\" means a URL that doesn't include the "
"protocol or domain. Examples:"
msgstr ""
"Di kedua kasus, \"absolute path\" berarti sebuah URL yang tidak menyertakan "
"protokol atau ranah. Contoh:"

msgid "Good: :file:`'/foo/bar/'`"
msgstr "Baik: :file:`'/foo/bar/'`"

msgid "Bad: :file:`'example.com/foo/bar/'`"
msgstr "Buruk: :file:`'example.com/foo/bar/'`"

msgid "Bad: :file:`'https://example.com/foo/bar/'`"
msgstr "Buruk: :file:`'https://example.com/foo/bar/'`"

msgid ""
"If :attr:`~Sitemap.location` isn't provided, the framework will call the "
"``get_absolute_url()`` method on each object as returned by :attr:`~Sitemap."
"items()`."
msgstr ""
"Jika :attr:`~Sitemap.location` tidak disediakan, kerangka kerja akan "
"memanggil metode ``get_absolute_url()`` pada setiap obyek sebagai "
"dikembalikan oleh :attr:`~Sitemap.items()`."

msgid ""
"To specify a protocol other than ``'http'``, use :attr:`~Sitemap.protocol`."
msgstr ""
"Untuk menentukan sebuah protokol selain dari ``'http'``, gunakan :attr:"
"`~Sitemap.protocol`."

msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's last-modified date/time "
"as a :class:`~datetime.datetime`."
msgstr ""
"Jika itu adalah sebuah metode, itu harus mengambil satu argumen - sebuah "
"obyek seperti dikembalikan oleh :attr:`~Sitemap.items()` -- dan "
"mengembalikan tanggal/waktu dirubah-terakhir obyek itu seperti :class:"
"`~datetime.datetime`."

msgid ""
"If it's an attribute, its value should be a :class:`~datetime.datetime` "
"representing the last-modified date/time for *every* object returned by :"
"attr:`~Sitemap.items()`."
msgstr ""

msgid ""
"If all items in a sitemap have a :attr:`~Sitemap.lastmod`, the sitemap "
"generated by :func:`views.sitemap` will have a ``Last-Modified`` header "
"equal to the latest ``lastmod``. You can activate the :class:`~django."
"middleware.http.ConditionalGetMiddleware` to make Django respond "
"appropriately to requests with an ``If-Modified-Since`` header which will "
"prevent sending the sitemap if it hasn't changed."
msgstr ""

msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's change frequency as a "
"string."
msgstr ""

msgid ""
"If it's an attribute, its value should be a string representing the change "
"frequency of *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

msgid ""
"Possible values for :attr:`~Sitemap.changefreq`, whether you use a method or "
"attribute, are:"
msgstr ""

msgid "``'always'``"
msgstr "``'always'``"

msgid "``'hourly'``"
msgstr "``'hourly'``"

msgid "``'daily'``"
msgstr "``'daily'``"

msgid "``'weekly'``"
msgstr "``'daily'``"

msgid "``'monthly'``"
msgstr "``'daily'``"

msgid "``'yearly'``"
msgstr "``'yearly'``"

msgid "``'never'``"
msgstr "``'never'``"

msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's priority as either a "
"string or float."
msgstr ""
"Jika itu adalah sebuah metode, itu harus mengambil satu argumen - sebuah "
"obyek seperti dikembalikan oleh :attr:`~Sitemap.items()` -- dan "
"mengembalikan prioritas obyek itu antara string atau float."

msgid ""
"If it's an attribute, its value should be either a string or float "
"representing the priority of *every* object returned by :attr:`~Sitemap."
"items()`."
msgstr ""
"Jika itu adalah sebuah atribut, nilainya harus antra string atau float "
"mewakili prioritas dari *setiap* obyek dikembalikan oleh :attr:`~Sitemap."
"items()`."

msgid ""
"Example values for :attr:`~Sitemap.priority`: ``0.4``, ``1.0``. The default "
"priority of a page is ``0.5``. See the `sitemaps.org documentation`_ for "
"more."
msgstr ""
"Contoh nilai-nilai untuk :attr:`~Sitemap.priority`: ``0.4``, ``1.0``. "
"Prioritas awalan dari sebuah halaman adalah ``0.5``. Lihat `sitemaps.org "
"documentation`_ untuk beberapa."

msgid "**Optional.**"
msgstr "**Pilihan.**"

msgid ""
"This attribute defines the protocol (``'http'`` or ``'https'``) of the URLs "
"in the sitemap. If it isn't set, the protocol with which the sitemap was "
"requested is used. If the sitemap is built outside the context of a request, "
"the default is ``'http'``."
msgstr ""
"Atribut ini menentukan protokol (``'http'`` atau ``'https'``) dari URL di "
"peta situs. Jika itu tidak disetel, protokol dengan peta situs mana yang "
"telah diminta digunakan. Jika peta situs dibangun diluar konteks dari "
"permintaan, awalan adalah ``'http'``."

msgid ""
"This attribute defines the maximum number of URLs included on each page of "
"the sitemap. Its value should not exceed the default value of ``50000``, "
"which is the upper limit allowed in the `Sitemaps protocol <https://www."
"sitemaps.org/protocol.html#index>`_."
msgstr ""

msgid ""
"A boolean attribute that defines if the URLs of this sitemap should be "
"generated using all of your :setting:`LANGUAGES`. The default is ``False``."
msgstr ""
"Sebuah atribut boolean yang menentukan jika URL dari peta situs ini harus "
"dibangkitkan menggunakan semua :setting:`LANGUAGES` anda. Awalan adalah "
"``False``."

msgid "Shortcuts"
msgstr "Jalan pintas"

msgid "The sitemap framework provides a convenience class for a common case:"
msgstr ""
"Kerangka kerja peta situs menyediakan sebuah kelas mudah untuk kasus "
"tertentu:"

msgid ""
"The :class:`django.contrib.sitemaps.GenericSitemap` class allows you to "
"create a sitemap by passing it a dictionary which has to contain at least a "
"``queryset`` entry. This queryset will be used to generate the items of the "
"sitemap. It may also have a ``date_field`` entry that specifies a date field "
"for objects retrieved from the ``queryset``. This will be used for the :attr:"
"`~Sitemap.lastmod` attribute in the generated sitemap. You may also pass :"
"attr:`~Sitemap.priority` and :attr:`~Sitemap.changefreq` keyword arguments "
"to the :class:`~django.contrib.sitemaps.GenericSitemap`  constructor to "
"specify these attributes for all URLs."
msgstr ""

msgid ""
"Here's an example of a :doc:`URLconf </topics/http/urls>` using :class:"
"`GenericSitemap`::"
msgstr ""
"Ini adalah contoh dari :doc:`URLconf </topics/http/urls>` menggunakan :class:"
"`GenericSitemap`::"

msgid "Sitemap for static views"
msgstr "Peta situs untuk tampilan tetap"

msgid ""
"Often you want the search engine crawlers to index views which are neither "
"object detail pages nor flatpages. The solution is to explicitly list URL "
"names for these views in ``items`` and call :func:`~django.urls.reverse` in "
"the ``location`` method of the sitemap. For example::"
msgstr ""

msgid "Creating a sitemap index"
msgstr "Membuat indeks peta situs"

msgid ""
"The sitemap framework also has the ability to create a sitemap index that "
"references individual sitemap files, one per each section defined in your "
"``sitemaps`` dictionary. The only differences in usage are:"
msgstr ""

msgid ""
"You use two views in your URLconf: :func:`django.contrib.sitemaps.views."
"index` and :func:`django.contrib.sitemaps.views.sitemap`."
msgstr ""

msgid ""
"The :func:`django.contrib.sitemaps.views.sitemap` view should take a "
"``section`` keyword argument."
msgstr ""

msgid ""
"Here's what the relevant URLconf lines would look like for the example "
"above::"
msgstr ""

msgid ""
"This will automatically generate a :file:`sitemap.xml` file that references "
"both :file:`sitemap-flatpages.xml` and :file:`sitemap-blog.xml`. The :class:"
"`~django.contrib.sitemaps.Sitemap` classes and the ``sitemaps`` dict don't "
"change at all."
msgstr ""

msgid ""
"You should create an index file if one of your sitemaps has more than 50,000 "
"URLs. In this case, Django will automatically paginate the sitemap, and the "
"index will reflect that."
msgstr ""

msgid ""
"If you're not using the vanilla sitemap view -- for example, if it's wrapped "
"with a caching decorator -- you must name your sitemap view and pass "
"``sitemap_url_name`` to the index view::"
msgstr ""

msgid "Template customization"
msgstr ""

msgid ""
"If you wish to use a different template for each sitemap or sitemap index "
"available on your site, you may specify it by passing a ``template_name`` "
"parameter to the ``sitemap`` and ``index`` views via the URLconf::"
msgstr ""

msgid "Context variables"
msgstr ""

msgid ""
"When customizing the templates for the :func:`~django.contrib.sitemaps.views."
"index` and :func:`~django.contrib.sitemaps.views.sitemap` views, you can "
"rely on the following context variables."
msgstr ""

msgid ""
"The variable ``sitemaps`` is a list of absolute URLs to each of the sitemaps."
msgstr ""

msgid "Sitemap"
msgstr ""

msgid ""
"The variable ``urlset`` is a list of URLs that should appear in the sitemap. "
"Each URL exposes attributes as defined in the :class:`~django.contrib."
"sitemaps.Sitemap` class:"
msgstr ""

msgid "``changefreq``"
msgstr ""

msgid "``item``"
msgstr ""

msgid "``lastmod``"
msgstr ""

msgid "``location``"
msgstr "``tempat``"

msgid "``priority``"
msgstr "``prioritas``"

msgid ""
"The ``item`` attribute has been added for each URL to allow more flexible "
"customization of the templates, such as `Google news sitemaps`_. Assuming "
"Sitemap's :attr:`~Sitemap.items()` would return a list of items with "
"``publication_data`` and a ``tags`` field something like this would generate "
"a Google News compatible sitemap:"
msgstr ""

msgid "Pinging Google"
msgstr ""

msgid ""
"You may want to \"ping\" Google when your sitemap changes, to let it know to "
"reindex your site. The sitemaps framework provides a function to do just "
"that: :func:`django.contrib.sitemaps.ping_google()`."
msgstr ""

msgid ""
":func:`ping_google` takes an optional argument, ``sitemap_url``, which "
"should be the absolute path to your site's sitemap (e.g., :file:`'/sitemap."
"xml'`). If this argument isn't provided, :func:`ping_google` will attempt to "
"figure out your sitemap by performing a reverse looking in your URLconf."
msgstr ""

msgid ""
":func:`ping_google` raises the exception ``django.contrib.sitemaps."
"SitemapNotFound`` if it cannot determine your sitemap URL."
msgstr ""

msgid "Register with Google first!"
msgstr ""

msgid ""
"The :func:`ping_google` command only works if you have registered your site "
"with `Google Webmaster Tools`_."
msgstr ""

msgid ""
"One useful way to call :func:`ping_google` is from a model's ``save()`` "
"method::"
msgstr ""

msgid ""
"A more efficient solution, however, would be to call :func:`ping_google` "
"from a cron script, or some other scheduled task. The function makes an HTTP "
"request to Google's servers, so you may not want to introduce that network "
"overhead each time you call ``save()``."
msgstr ""

msgid "Pinging Google via ``manage.py``"
msgstr ""

msgid ""
"Once the sitemaps application is added to your project, you may also ping "
"Google using the ``ping_google`` management command::"
msgstr ""

msgid "The \"sites\" framework"
msgstr ""

msgid ""
"Django comes with an optional \"sites\" framework. It's a hook for "
"associating objects and functionality to particular websites, and it's a "
"holding place for the domain names and \"verbose\" names of your Django-"
"powered sites."
msgstr ""

msgid ""
"Use it if your single Django installation powers more than one site and you "
"need to differentiate between those sites in some way."
msgstr ""

msgid "The sites framework is mainly based on a simple model:"
msgstr ""

msgid ""
"A model for storing the ``domain`` and ``name`` attributes of a website."
msgstr ""

msgid ""
"The fully qualified domain name associated with the website. For example, "
"``www.example.com``."
msgstr ""

msgid "A human-readable \"verbose\" name for the website."
msgstr ""

msgid ""
"The :setting:`SITE_ID` setting specifies the database ID of the :class:"
"`~django.contrib.sites.models.Site` object associated with that particular "
"settings file. If the setting is omitted, the :func:`~django.contrib.sites."
"shortcuts.get_current_site` function will try to get the current site by "
"comparing the :attr:`~django.contrib.sites.models.Site.domain` with the host "
"name from the :meth:`request.get_host() <django.http.HttpRequest.get_host>` "
"method."
msgstr ""

msgid ""
"How you use this is up to you, but Django uses it in a couple of ways "
"automatically via simple conventions."
msgstr ""

msgid "Example usage"
msgstr ""

msgid "Why would you use sites? It's best explained through examples."
msgstr ""

msgid "Associating content with multiple sites"
msgstr ""

msgid ""
"The Django-powered sites LJWorld.com_ and Lawrence.com_ are operated by the "
"same news organization -- the Lawrence Journal-World newspaper in Lawrence, "
"Kansas. LJWorld.com focuses on news, while Lawrence.com focuses on local "
"entertainment. But sometimes editors want to publish an article on *both* "
"sites."
msgstr ""

msgid ""
"The naive way of solving the problem would be to require site producers to "
"publish the same story twice: once for LJWorld.com and again for Lawrence."
"com. But that's inefficient for site producers, and it's redundant to store "
"multiple copies of the same story in the database."
msgstr ""

msgid ""
"The better solution is simple: Both sites use the same article database, and "
"an article is associated with one or more sites. In Django model "
"terminology, that's represented by a :class:`~django.db.models."
"ManyToManyField` in the ``Article`` model::"
msgstr ""

msgid "This accomplishes several things quite nicely:"
msgstr "Ini menyelesaikan beberapa hal cukup baik:"

msgid ""
"It lets the site producers edit all content -- on both sites -- in a single "
"interface (the Django admin)."
msgstr ""
"Itu membiarkan pembuat situs menyunting semua isi -- pada kedua situs -- "
"dalam antarmuka tunggal (admin Django)."

msgid ""
"It means the same story doesn't have to be published twice in the database; "
"it only has a single record in the database."
msgstr ""
"Itu berarti cerita sams tidak harus menerbitkan kedua kali di basisdata; itu "
"hanya mempunyai rekaman tunggal di basisdata."

msgid ""
"It lets the site developers use the same Django view code for both sites. "
"The view code that displays a given story just checks to make sure the "
"requested story is on the current site. It looks something like this::"
msgstr ""
"Itu membiarkan pengembang situs menggunakan kode tampilan Django sama untuk "
"kedua situs. Kode tampilan yang memperlihatkan cerita yang diberikan cukup "
"memeriksa untuk memastikan cerita diminta pada situs saat ini. Itu terlihat "
"sesuatu seperti ini::"

msgid "Associating content with a single site"
msgstr ""

msgid ""
"Similarly, you can associate a model to the :class:`~django.contrib.sites."
"models.Site` model in a many-to-one relationship, using :class:`~django.db."
"models.ForeignKey`."
msgstr ""

msgid ""
"For example, if an article is only allowed on a single site, you'd use a "
"model like this::"
msgstr ""

msgid "This has the same benefits as described in the last section."
msgstr "Ini mempunyai keuntungan sama seperti digambarkan di bagian terakhir."

msgid "Hooking into the current site from views"
msgstr "Mengaitkan kedalam situs saat ini dari tampilan"

msgid ""
"You can use the sites framework in your Django views to do particular things "
"based on the site in which the view is being called. For example::"
msgstr ""
"Anda dapat menggunakan kerangka kerja situs di tampilan Django anda untuk "
"melakukan hal-hal tertentu berdasarkan pada situs dimana tampilan sedang "
"dipanggil. Sebagai contoh::"

msgid ""
"Of course, it's ugly to hard-code the site IDs like that. This sort of hard-"
"coding is best for hackish fixes that you need done quickly. The cleaner way "
"of accomplishing the same thing is to check the current site's domain::"
msgstr ""

msgid ""
"This has also the advantage of checking if the sites framework is installed, "
"and return a :class:`~django.contrib.sites.requests.RequestSite` instance if "
"it is not."
msgstr ""

msgid ""
"If you don't have access to the request object, you can use the "
"``get_current()`` method of the :class:`~django.contrib.sites.models.Site` "
"model's manager. You should then ensure that your settings file does contain "
"the :setting:`SITE_ID` setting. This example is equivalent to the previous "
"one::"
msgstr ""
"Jika anda tidak mempunyai akses ke obyek diminta, anda dapat menggunakan "
"metode ``get_current()`` dari pengelola model :class:`~django.contrib.sites."
"models.Site`. Anda harus kemudian memastikan bahwa berkas pengaturan anda "
"mengandung pengaturan :setting:`SITE_ID`. Contoh ini adalah setara pada satu "
"sebelumnya::"

msgid "Getting the current domain for display"
msgstr "Mendapatkan ranah saat ini untuk ditampilkan"

msgid ""
"LJWorld.com and Lawrence.com both have email alert functionality, which lets "
"readers sign up to get notifications when news happens. It's pretty basic: A "
"reader signs up on a Web form and immediately gets an email saying, \"Thanks "
"for your subscription.\""
msgstr ""

msgid ""
"It'd be inefficient and redundant to implement this sign up processing code "
"twice, so the sites use the same code behind the scenes. But the \"thank you "
"for signing up\" notice needs to be different for each site. By using :class:"
"`~django.contrib.sites.models.Site` objects, we can abstract the \"thank you"
"\" notice to use the values of the current site's :attr:`~django.contrib."
"sites.models.Site.name` and :attr:`~django.contrib.sites.models.Site.domain`."
msgstr ""

msgid "Here's an example of what the form-handling view looks like::"
msgstr ""
"Disini adalah contoh dari apa tampilan penanganan formulir kelihatannya::"

msgid ""
"On Lawrence.com, this email has the subject line \"Thanks for subscribing to "
"lawrence.com alerts.\" On LJWorld.com, the email has the subject \"Thanks "
"for subscribing to LJWorld.com alerts.\" Same goes for the email's message "
"body."
msgstr ""

msgid ""
"Note that an even more flexible (but more heavyweight) way of doing this "
"would be to use Django's template system. Assuming Lawrence.com and LJWorld."
"com have different template directories (:setting:`DIRS <TEMPLATES-DIRS>`), "
"you could simply farm out to the template system like so::"
msgstr ""

msgid ""
"In this case, you'd have to create :file:`subject.txt` and :file:`message."
"txt` template files for both the LJWorld.com and Lawrence.com template "
"directories. That gives you more flexibility, but it's also more complex."
msgstr ""

msgid ""
"It's a good idea to exploit the :class:`~django.contrib.sites.models.Site` "
"objects as much as possible, to remove unneeded complexity and redundancy."
msgstr ""

msgid "Getting the current domain for full URLs"
msgstr "Mendapatkan ranah saat ini untuk URL penuh"

msgid ""
"Django's ``get_absolute_url()`` convention is nice for getting your objects' "
"URL without the domain name, but in some cases you might want to display the "
"full URL -- with ``http://`` and the domain and everything -- for an object. "
"To do this, you can use the sites framework. A simple example::"
msgstr ""

msgid "Enabling the sites framework"
msgstr "Mengadakan kerangka situs"

msgid "To enable the sites framework, follow these steps:"
msgstr "Untuk mengadakan kerangka situs ini, ikuti langkah-langkah ini:"

msgid ""
"Add ``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Menambahkan ``'django.contrib.sites'`` ke pengaturan :setting:"
"`INSTALLED_APPS` anda. "

msgid "Define a :setting:`SITE_ID` setting::"
msgstr "Menentukan pengaturan :setting:`SITE_ID`::"

msgid "Run :djadmin:`migrate`."
msgstr "Menjalankan :djadmin:`migrate`."

msgid ""
"``django.contrib.sites`` registers a :data:`~django.db.models.signals."
"post_migrate` signal handler which creates a default site named ``example."
"com`` with the domain ``example.com``. This site will also be created after "
"Django creates the test database. To set the correct name and domain for "
"your project, you can use a :ref:`data migration <data-migrations>`."
msgstr ""

msgid ""
"In order to serve different sites in production, you'd create a separate "
"settings file with each ``SITE_ID`` (perhaps importing from a common "
"settings file to avoid duplicating shared settings) and then specify the "
"appropriate :envvar:`DJANGO_SETTINGS_MODULE` for each site."
msgstr ""

msgid "Caching the current ``Site`` object"
msgstr ""

msgid ""
"As the current site is stored in the database, each call to ``Site.objects."
"get_current()`` could result in a database query. But Django is a little "
"cleverer than that: on the first request, the current site is cached, and "
"any subsequent call returns the cached data instead of hitting the database."
msgstr ""

msgid ""
"If for any reason you want to force a database query, you can tell Django to "
"clear the cache using ``Site.objects.clear_cache()``::"
msgstr ""

msgid "The ``CurrentSiteManager``"
msgstr "``CurrentSiteManager``"

msgid ""
"If :class:`~django.contrib.sites.models.Site` plays a key role in your "
"application, consider using the helpful :class:`~django.contrib.sites."
"managers.CurrentSiteManager` in your model(s). It's a model :doc:`manager </"
"topics/db/managers>` that automatically filters its queries to include only "
"objects associated with the current :class:`~django.contrib.sites.models."
"Site`."
msgstr ""

msgid "Mandatory :setting:`SITE_ID`"
msgstr ":setting:`SITE_ID` wajib"

msgid ""
"The ``CurrentSiteManager`` is only usable when the :setting:`SITE_ID` "
"setting is defined in your settings."
msgstr ""

msgid ""
"Use :class:`~django.contrib.sites.managers.CurrentSiteManager` by adding it "
"to your model explicitly. For example::"
msgstr ""

msgid ""
"With this model, ``Photo.objects.all()`` will return all ``Photo`` objects "
"in the database, but ``Photo.on_site.all()`` will return only the ``Photo`` "
"objects associated with the current site, according to the :setting:"
"`SITE_ID` setting."
msgstr ""

msgid "Put another way, these two statements are equivalent::"
msgstr "Taruh di jalan lain, dua pernyataan ini adalah sama::"

msgid ""
"How did :class:`~django.contrib.sites.managers.CurrentSiteManager` know "
"which field of ``Photo`` was the :class:`~django.contrib.sites.models.Site`? "
"By default, :class:`~django.contrib.sites.managers.CurrentSiteManager` looks "
"for a either a :class:`~django.db.models.ForeignKey` called ``site`` or a :"
"class:`~django.db.models.ManyToManyField` called ``sites`` to filter on. If "
"you use a field named something other than ``site`` or ``sites`` to identify "
"which :class:`~django.contrib.sites.models.Site` objects your object is "
"related to, then you need to explicitly pass the custom field name as a "
"parameter to :class:`~django.contrib.sites.managers.CurrentSiteManager` on "
"your model. The following model, which has a field called ``publish_on``, "
"demonstrates this::"
msgstr ""

msgid ""
"If you attempt to use :class:`~django.contrib.sites.managers."
"CurrentSiteManager` and pass a field name that doesn't exist, Django will "
"raise a ``ValueError``."
msgstr ""

msgid ""
"Finally, note that you'll probably want to keep a normal (non-site-specific) "
"``Manager`` on your model, even if you use :class:`~django.contrib.sites."
"managers.CurrentSiteManager`. As explained in the :doc:`manager "
"documentation </topics/db/managers>`, if you define a manager manually, then "
"Django won't create the automatic ``objects = models.Manager()`` manager for "
"you. Also note that certain parts of Django -- namely, the Django admin site "
"and generic views -- use whichever manager is defined *first* in the model, "
"so if you want your admin site to have access to all objects (not just site-"
"specific ones), put ``objects = models.Manager()`` in your model, before you "
"define :class:`~django.contrib.sites.managers.CurrentSiteManager`."
msgstr ""

msgid "Site middleware"
msgstr "Situs middleware"

msgid "If you often use this pattern::"
msgstr "Jika anda sering menggunakan pola ini::"

msgid ""
"there is simple way to avoid repetitions. Add :class:`django.contrib.sites."
"middleware.CurrentSiteMiddleware` to :setting:`MIDDLEWARE`. The middleware "
"sets the ``site`` attribute on every request object, so you can use "
"``request.site`` to get the current site."
msgstr ""

msgid "How Django uses the sites framework"
msgstr "Bagaimana Django menggunakan kerangka situs"

msgid ""
"Although it's not required that you use the sites framework, it's strongly "
"encouraged, because Django takes advantage of it in a few places. Even if "
"your Django installation is powering only a single site, you should take the "
"two seconds to create the site object with your ``domain`` and ``name``, and "
"point to its ID in your :setting:`SITE_ID` setting."
msgstr ""

msgid "Here's how Django uses the sites framework:"
msgstr "Ini adalah bagaimana Django menggunakan kerangka situs:"

msgid ""
"In the :mod:`redirects framework <django.contrib.redirects>`, each redirect "
"object is associated with a particular site. When Django searches for a "
"redirect, it takes into account the current site."
msgstr ""

msgid ""
"In the :mod:`flatpages framework <django.contrib.flatpages>`, each flatpage "
"is associated with a particular site. When a flatpage is created, you "
"specify its :class:`~django.contrib.sites.models.Site`, and the :class:"
"`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` checks the "
"current site in retrieving flatpages to display."
msgstr ""
"Dalam :mod:`flatpages framework <django.contrib.flatpages>`, setiap flatpage "
"dihubungkan dengan situs tertentu. Ketika sebuah flatpage dibuat, anda "
"menentukan :class:`~django.contrib.sites.models.Site` nya, dan :class:"
"`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` memeriksa "
"situs saat ini dalam mengambil flatpage untuk dimunculkan."

msgid ""
"In the :mod:`syndication framework <django.contrib.syndication>`, the "
"templates for ``title`` and ``description`` automatically have access to a "
"variable ``{{ site }}``, which is the :class:`~django.contrib.sites.models."
"Site` object representing the current site. Also, the hook for providing "
"item URLs will use the ``domain`` from the current :class:`~django.contrib."
"sites.models.Site` object if you don't specify a fully-qualified domain."
msgstr ""

msgid ""
"In the :mod:`authentication framework <django.contrib.auth>`, :class:`django."
"contrib.auth.views.LoginView` passes the current :class:`~django.contrib."
"sites.models.Site` name to the template as ``{{ site_name }}``."
msgstr ""

msgid ""
"The shortcut view (``django.contrib.contenttypes.views.shortcut``) uses the "
"domain of the current :class:`~django.contrib.sites.models.Site` object when "
"calculating an object's URL."
msgstr ""

msgid ""
"In the admin framework, the \"view on site\" link uses the current :class:"
"`~django.contrib.sites.models.Site` to work out the domain for the site that "
"it will redirect to."
msgstr ""

msgid "``RequestSite`` objects"
msgstr "Obyek ``RequestSite``"

msgid ""
"Some :doc:`django.contrib </ref/contrib/index>` applications take advantage "
"of the sites framework but are architected in a way that doesn't *require* "
"the sites framework to be installed in your database. (Some people don't "
"want to, or just aren't *able* to install the extra database table that the "
"sites framework requires.) For those cases, the framework provides a :class:"
"`django.contrib.sites.requests.RequestSite` class, which can be used as a "
"fallback when the database-backed sites framework is not available."
msgstr ""

msgid ""
"A class that shares the primary interface of :class:`~django.contrib.sites."
"models.Site` (i.e., it has ``domain`` and ``name`` attributes) but gets its "
"data from a Django :class:`~django.http.HttpRequest` object rather than from "
"a database."
msgstr ""

msgid ""
"Sets the ``name`` and ``domain`` attributes to the value of :meth:`~django."
"http.HttpRequest.get_host`."
msgstr ""
"Setel atribut ``name`` dan ``domain`` ke nilai dari :meth:`~django.http."
"HttpRequest.get_host`."

msgid ""
"A :class:`~django.contrib.sites.requests.RequestSite` object has a similar "
"interface to a normal :class:`~django.contrib.sites.models.Site` object, "
"except its :meth:`~django.contrib.sites.requests.RequestSite.__init__()` "
"method takes an :class:`~django.http.HttpRequest` object. It's able to "
"deduce the ``domain`` and ``name`` by looking at the request's domain. It "
"has ``save()`` and ``delete()`` methods to match the interface of :class:"
"`~django.contrib.sites.models.Site`, but the methods raise :exc:"
"`NotImplementedError`."
msgstr ""
"Sebuah obyek :class:`~django.contrib.sites.requests.RequestSite` mempunyai "
"antarmuka mirip pada obyek :class:`~django.contrib.sites.models.Site` biasa, "
"kecuali metode :meth:`~django.contrib.sites.requests.RequestSite.__init__()` "
"nya mengambil sebuah obyek :class:`~django.http.HttpRequest`.  Itu dapat "
"menyimpulkan ``domain`` dan ``name`` dengan mencari domain permintaan. Itu "
"mempunyai metode ``save()`` dan ``delete()`` untuk mencocokkan antarmuka "
"dari :class:`~django.contrib.sites.models.Site`, tetapi metode-metode "
"memunculkan :exc:`NotImplementedError`."

msgid "``get_current_site`` shortcut"
msgstr "Jalan pintas ``get_current_site``"

msgid ""
"Finally, to avoid repetitive fallback code, the framework provides a :func:"
"`django.contrib.sites.shortcuts.get_current_site` function."
msgstr ""
"Akhirnya, untuk menghindari kode fallback berulang, kerangka kerja "
"menyediakan sebuah fungsi :func:`django.contrib.sites.shortcuts."
"get_current_site`"

msgid ""
"A function that checks if ``django.contrib.sites`` is installed and returns "
"either the current :class:`~django.contrib.sites.models.Site` object or a :"
"class:`~django.contrib.sites.requests.RequestSite` object based on the "
"request. It looks up the current site based on :meth:`request.get_host() "
"<django.http.HttpRequest.get_host>` if the :setting:`SITE_ID` setting is not "
"defined."
msgstr ""
"Sebuah fungsi yang memeriksa jika ``django.contrib.sites`` dipasang dan "
"mengembalikan salah satu obyek :class:`~django.contrib.sites.models.Site` "
"object saat ini atau obyek :class:`~django.contrib.sites.requests."
"RequestSite` berdasarkan pada permintaan. Itu mencari situs saat ini "
"berdasarkan pada :meth:`request.get_host() <django.http.HttpRequest."
"get_host>` jika pengaturan :setting:`SITE_ID` tidak ditentukan."

msgid ""
"Both a domain and a port may be returned by :meth:`request.get_host() "
"<django.http.HttpRequest.get_host>` when the Host header has a port "
"explicitly specified, e.g. ``example.com:80``. In such cases, if the lookup "
"fails because the host does not match a record in the database, the port is "
"stripped and the lookup is retried with the domain part only. This does not "
"apply to :class:`~django.contrib.sites.requests.RequestSite` which will "
"always use the unmodified host."
msgstr ""

msgid "The ``staticfiles`` app"
msgstr "Aplikasi ``staticfiles`` "

msgid ""
"``django.contrib.staticfiles`` collects static files from each of your "
"applications (and any other places you specify) into a single location that "
"can easily be served in production."
msgstr ""
"``django.contrib.staticfiles`` menyimpan berkas-berkas tetap dari setiap "
"dari aplikasi anda (dan setiap tempat lain anda tentukan) kedalam tempat "
"tunggal yang dapat dengan mudah dilayani di produksi."

msgid ""
"For an introduction to the static files app and some usage examples, see :"
"doc:`/howto/static-files/index`. For guidelines on deploying static files, "
"see :doc:`/howto/static-files/deployment`."
msgstr ""
"Untuk sebuah perkenalaln pada aplikasi berkas-berkas tetap dan beberapa "
"penggunaan contoh, lihat :doc:`/howto/static-files/index`. Untuk panduan "
"dalam menyebarkan berkas-berkas tetap, lihat :doc:`/howto/static-files/"
"deployment`."

msgid ""
"See :ref:`staticfiles settings <settings-staticfiles>` for details on the "
"following settings:"
msgstr ""
"Lihat :ref:`staticfiles settings <settings-staticfiles>` untuk rincian pada "
"pengaturan berikut:"

msgid ":setting:`STATIC_ROOT`"
msgstr ":setting:`STATIC_ROOT`"

msgid ":setting:`STATIC_URL`"
msgstr ":setting:`STATIC_URL`"

msgid ":setting:`STATICFILES_DIRS`"
msgstr ":setting:`STATICFILES_DIRS`"

msgid ":setting:`STATICFILES_STORAGE`"
msgstr ":setting:`STATICFILES_STORAGE`"

msgid ":setting:`STATICFILES_FINDERS`"
msgstr ":setting:`STATICFILES_FINDERS`"

msgid "Management Commands"
msgstr "Pengelolaan perintah"

msgid "``django.contrib.staticfiles`` exposes three management commands."
msgstr "``django.contrib.staticfiles`` membuka tiga perintah pengelolaan."

msgid "``collectstatic``"
msgstr "``collectstatic``"

msgid "Collects the static files into :setting:`STATIC_ROOT`."
msgstr "Kumpulkan berkas-berkas tetap kedalam :setting:`STATIC_ROOT`."

msgid ""
"Duplicate file names are by default resolved in a similar way to how "
"template resolution works: the file that is first found in one of the "
"specified locations will be used. If you're confused, the :djadmin:"
"`findstatic` command can help show you which files are found."
msgstr ""

msgid ""
"On subsequent ``collectstatic`` runs (if ``STATIC_ROOT`` isn't empty), files "
"are copied only if they have a modified timestamp greater than the timestamp "
"of the file in ``STATIC_ROOT``. Therefore if you remove an application from :"
"setting:`INSTALLED_APPS`, it's a good idea to use the :option:`collectstatic "
"--clear` option in order to remove stale static files."
msgstr ""

msgid ""
"Files are searched by using the :setting:`enabled finders "
"<STATICFILES_FINDERS>`. The default is to look in all locations defined in :"
"setting:`STATICFILES_DIRS` and in the ``'static'`` directory of apps "
"specified by the :setting:`INSTALLED_APPS` setting."
msgstr ""

msgid ""
"The :djadmin:`collectstatic` management command calls the :meth:`~django."
"contrib.staticfiles.storage.StaticFilesStorage.post_process` method of the :"
"setting:`STATICFILES_STORAGE` after each run and passes a list of paths that "
"have been found by the management command. It also receives all command line "
"options of :djadmin:`collectstatic`. This is used by the :class:`~django."
"contrib.staticfiles.storage.CachedStaticFilesStorage` by default."
msgstr ""
"Perintah pengelolaan :djadmin:`collectstatic` memanggil metode :meth:"
"`~django.contrib.staticfiles.storage.StaticFilesStorage.post_process` dari :"
"setting:`STATICFILES_STORAGE` setiap berjalan dan melewatkan daftar jalur "
"yang telah ditemukan oleh perintah pengelolaan. Itu juga menerima semua "
"pilihan baris perintah dari :djadmin:`collectstatic`. Ini digunakan oleh :"
"class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` secara "
"awalan."

msgid ""
"By default, collected files receive permissions from :setting:"
"`FILE_UPLOAD_PERMISSIONS` and collected directories receive permissions "
"from :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS`. If you would like "
"different permissions for these files and/or directories, you can subclass "
"either of the :ref:`static files storage classes <staticfiles-storages>` and "
"specify the ``file_permissions_mode`` and/or ``directory_permissions_mode`` "
"parameters, respectively. For example::"
msgstr ""

msgid ""
"Then set the :setting:`STATICFILES_STORAGE` setting to ``'path.to."
"MyStaticFilesStorage'``."
msgstr ""
"Kemudian setel pengaturan :setting:`STATICFILES_STORAGE` menjadi ``'path.to."
"MyStaticFilesStorage'``."

msgid "Some commonly used options are:"
msgstr "Beberapa pilihan umum digunakan adalah:"

msgid "Do NOT prompt the user for input of any kind."
msgstr ""

msgid ""
"Ignore files or directories matching this glob-style pattern. Use multiple "
"times to ignore more."
msgstr ""
"Abaikan berkas-berkas atau direktori cocok dengan pola gaya-global ini. "
"Gunakan beberapa kali untuk mengabaikan lebih."

msgid "Do everything except modify the filesystem."
msgstr "Lakukan apapun kecuali merubah sistem berkas."

msgid ""
"Clear the existing files before trying to copy or link the original file."
msgstr ""
"Bersihkan berkas-berkas yang ada sebelum mencoba menyalin atau menaut berkas "
"asli."

msgid "Create a symbolic link to each file instead of copying."
msgstr "Buat sebuah tautan simbolus pada setiap berkas daripada menyalin."

msgid ""
"Don't call the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method of the configured :setting:`STATICFILES_STORAGE` "
"storage backend."
msgstr ""
"Jangan memanggil metode :meth:`~django.contrib.staticfiles.storage."
"StaticFilesStorage.post_process` dari backend penyimpanan :setting:"
"`STATICFILES_STORAGE` yang sudah dikonfigurasi."

msgid ""
"Don't ignore the common private glob-style patterns ``'CVS'``, ``'.*'`` and "
"``'*~'``."
msgstr ""
"Jangan abaikan pola-gaya-blobal pribadi umum ``'CVS'``, ``'.*'`` dan "
"``'*~'``."

msgid "For a full list of options, refer to the commands own help by running::"
msgstr ""
"Untuk daftar penuh dari pilihan, mengacu pada perintah bantuan sendiri "
"dengan menjalankan::"

msgid "Customizing the ignored pattern list"
msgstr "Menyesuaikan daftar pola diabaikan"

msgid ""
"The default ignored pattern list, ``['CVS', '.*', '*~']``, can be customized "
"in a more persistent way than providing the ``--ignore`` command option at "
"each ``collectstatic`` invocation. Provide a custom :class:`~django.apps."
"AppConfig` class, override the ``ignore_patterns`` attribute of this class "
"and replace ``'django.contrib.staticfiles'`` with that class path in your :"
"setting:`INSTALLED_APPS` setting:"
msgstr ""

msgid "``findstatic``"
msgstr "``findstatic``"

msgid "Searches for one or more relative paths with the enabled finders."
msgstr "Mencari untuk satu atau lebih jalur relatif dengan diadakan penemu."

msgid ""
"By default, all matching locations are found. To only return the first match "
"for each relative path, use the ``--first`` option::"
msgstr ""

msgid ""
"This is a debugging aid; it'll show you exactly which static file will be "
"collected for a given path."
msgstr ""

msgid ""
"By setting the ``--verbosity`` flag to 0, you can suppress the extra output "
"and just get the path names::"
msgstr ""
"Dengan mengatur bendera ``--verbosity`` menjadi 0, anda dapat menekan "
"keluaran tambahan dan hanya mendapatkan nama-nama jalur::"

msgid ""
"On the other hand, by setting the ``--verbosity`` flag to 2, you can get all "
"the directories which were searched::"
msgstr ""
"Di pihak lain, dengan mengatur bendera ``--verbosity`` menjadi 2, anda dapat "
"mendapatkan semua direktori yang telah dicari::"

msgid "``runserver``"
msgstr "``runserver``"

msgid ""
"Overrides the core :djadmin:`runserver` command if the ``staticfiles`` app "
"is :setting:`installed<INSTALLED_APPS>` and adds automatic serving of static "
"files and the following new options."
msgstr ""

msgid ""
"Use the ``--nostatic`` option to disable serving of static files with the :"
"doc:`staticfiles </ref/contrib/staticfiles>` app entirely. This option is "
"only available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is "
"in your project's :setting:`INSTALLED_APPS` setting."
msgstr ""

msgid ""
"Use the ``--insecure`` option to force serving of static files with the :doc:"
"`staticfiles </ref/contrib/staticfiles>` app even if the :setting:`DEBUG` "
"setting is ``False``. By using this you acknowledge the fact that it's "
"**grossly inefficient** and probably **insecure**. This is only intended for "
"local development, should **never be used in production** and is only "
"available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is in "
"your project's :setting:`INSTALLED_APPS` setting. :djadmin:`runserver` ``--"
"insecure`` doesn't work with :class:`~django.contrib.staticfiles.storage."
"CachedStaticFilesStorage`."
msgstr ""

msgid "Storages"
msgstr "Penyimpanan"

msgid "``StaticFilesStorage``"
msgstr "``StaticFilesStorage``"

msgid ""
"A subclass of the :class:`~django.core.files.storage.FileSystemStorage` "
"storage backend that uses the :setting:`STATIC_ROOT` setting as the base "
"file system location and the :setting:`STATIC_URL` setting respectively as "
"the base URL."
msgstr ""

msgid ""
"This method is called by the :djadmin:`collectstatic` management command "
"after each run and gets passed the local storages and paths of found files "
"as a dictionary, as well as the command line options."
msgstr ""

msgid ""
"The :class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` "
"uses this behind the scenes to replace the paths with their hashed "
"counterparts and update the cache appropriately."
msgstr ""

msgid "``ManifestStaticFilesStorage``"
msgstr "``ManifestStaticFilesStorage``"

msgid ""
"A subclass of the :class:`~django.contrib.staticfiles.storage."
"StaticFilesStorage` storage backend which stores the file names it handles "
"by appending the MD5 hash of the file's content to the filename. For "
"example, the file ``css/styles.css`` would also be saved as ``css/"
"styles.55e7cbb9ba48.css``."
msgstr ""

msgid ""
"The purpose of this storage is to keep serving the old files in case some "
"pages still refer to those files, e.g. because they are cached by you or a "
"3rd party proxy server. Additionally, it's very helpful if you want to apply "
"`far future Expires headers`_ to the deployed files to speed up the load "
"time for subsequent page visits."
msgstr ""

msgid ""
"The storage backend automatically replaces the paths found in the saved "
"files matching other saved files with the path of the cached copy (using "
"the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method). The regular expressions used to find those paths "
"(``django.contrib.staticfiles.storage.HashedFilesMixin.patterns``) by "
"default covers the `@import`_ rule and `url()`_ statement of `Cascading "
"Style Sheets`_. For example, the ``'css/styles.css'`` file with the content"
msgstr ""

msgid ""
"would be replaced by calling the :meth:`~django.core.files.storage.Storage."
"url` method of the ``ManifestStaticFilesStorage`` storage backend, "
"ultimately saving a ``'css/styles.55e7cbb9ba48.css'`` file with the "
"following content:"
msgstr ""

msgid ""
"Since static files might reference other static files that need to have "
"their paths replaced, multiple passes of replacing paths may be needed until "
"the file hashes converge. To prevent an infinite loop due to hashes not "
"converging (for example, if ``'foo.css'`` references ``'bar.css'`` which "
"references ``'foo.css'``) there is a maximum number of passes before post-"
"processing is abandoned. In cases with a large number of references, a "
"higher number of passes might be needed. Increase the maximum number of "
"passes by subclassing ``ManifestStaticFilesStorage`` and setting the "
"``max_post_process_passes`` attribute. It defaults to 5."
msgstr ""

msgid ""
"Previous versions didn't make multiple passes to ensure file hashes "
"converged, so often times file hashes weren't correct. The "
"``max_post_process_passes`` attribute was added."
msgstr ""

msgid ""
"To enable the ``ManifestStaticFilesStorage`` you have to make sure the "
"following requirements are met:"
msgstr ""

msgid ""
"the :setting:`STATICFILES_STORAGE` setting is set to ``'django.contrib."
"staticfiles.storage.ManifestStaticFilesStorage'``"
msgstr ""

msgid "the :setting:`DEBUG` setting is set to ``False``"
msgstr "Pengaturan :setting:`DEBUG` disetel ke ``False``"

msgid ""
"you've collected all your static files by using the :djadmin:`collectstatic` "
"management command"
msgstr ""
"Anda telah mengumpulkan semua berkas tetap dengan menggunakan perintah "
"pengelolaan :djadmin:`collectstatic`"

msgid ""
"In older versions, you also had to use ``{% load static from staticfiles %}"
"`` in your template. The :ttag:`static` template tag (``{% load static %}``) "
"now uses :mod:`django.contrib.staticfiles` if it's installed."
msgstr ""

msgid ""
"Since creating the MD5 hash can be a performance burden to your website "
"during runtime, ``staticfiles`` will automatically store the mapping with "
"hashed names for all processed files in a file called ``staticfiles.json``. "
"This happens once when you run the :djadmin:`collectstatic` management "
"command."
msgstr ""

msgid ""
"If a file isn't found in the ``staticfiles.json`` manifest at runtime, a "
"``ValueError`` is raised. This behavior can be disabled by subclassing "
"``ManifestStaticFilesStorage`` and setting the ``manifest_strict`` attribute "
"to ``False`` -- nonexistent paths will remain unchanged."
msgstr ""

msgid ""
"The ``manifest_strict`` attribute was added. In older versions, the behavior "
"is the same as ``manifest_strict=False``."
msgstr ""

msgid ""
"Due to the requirement of running :djadmin:`collectstatic`, this storage "
"typically shouldn't be used when running tests as ``collectstatic`` isn't "
"run as part of the normal test setup. During testing, ensure that the :"
"setting:`STATICFILES_STORAGE` setting is set to something else like "
"``'django.contrib.staticfiles.storage.StaticFilesStorage'`` (the default)."
msgstr ""

msgid ""
"The method that is used when creating the hashed name of a file. Needs to "
"return a hash for the given file name and content. By default it calculates "
"a MD5 hash from the content's chunks as mentioned above. Feel free to "
"override this method to use your own hashing algorithm."
msgstr ""

msgid "``CachedStaticFilesStorage``"
msgstr "``CachedStaticFilesStorage``"

msgid ""
"``CachedStaticFilesStorage`` is a similar class like the :class:`~django."
"contrib.staticfiles.storage.ManifestStaticFilesStorage` class but uses "
"Django's :doc:`caching framework</topics/cache>` for storing the hashed "
"names of processed files instead of a static manifest file called "
"``staticfiles.json``. This is mostly useful for situations in which you "
"don't have access to the file system."
msgstr ""

msgid ""
"If you want to override certain options of the cache backend the storage "
"uses, simply specify a custom entry in the :setting:`CACHES` setting named "
"``'staticfiles'``. It falls back to using the ``'default'`` cache backend."
msgstr ""

msgid ""
"``CachedStaticFilesStorage`` isn't recommended --  in almost all cases "
"``ManifestStaticFilesStorage`` is a better choice. There are several "
"performance penalties when using ``CachedStaticFilesStorage`` since a cache "
"miss requires hashing files at runtime. Remote file storage require several "
"round-trips to hash a file on a cache miss, as several file accesses are "
"required to ensure that the file hash is correct in the case of nested file "
"paths."
msgstr ""

msgid "Finders Module"
msgstr ""

msgid ""
"``staticfiles`` finders has a ``searched_locations`` attribute which is a "
"list of directory paths in which the finders searched. Example usage::"
msgstr ""

msgid "Other Helpers"
msgstr ""

msgid ""
"There are a few other helpers outside of the :mod:`staticfiles <django."
"contrib.staticfiles>` app to work with static files:"
msgstr ""

msgid ""
"The :func:`django.template.context_processors.static` context processor "
"which adds :setting:`STATIC_URL` to every template context rendered with :"
"class:`~django.template.RequestContext` contexts."
msgstr ""

msgid ""
"The builtin template tag :ttag:`static` which takes a path and urljoins it "
"with the static prefix :setting:`STATIC_URL`. If ``django.contrib."
"staticfiles`` is installed, the tag uses the ``url()`` method of the :"
"setting:`STATICFILES_STORAGE` instead."
msgstr ""

msgid ""
"The builtin template tag :ttag:`get_static_prefix` which populates a "
"template variable with the static prefix :setting:`STATIC_URL` to be used as "
"a variable or directly."
msgstr ""

msgid ""
"The similar template tag :ttag:`get_media_prefix` which works like :ttag:"
"`get_static_prefix` but uses :setting:`MEDIA_URL`."
msgstr ""

msgid "Static file development view"
msgstr ""

msgid ""
"The static files tools are mostly designed to help with getting static files "
"successfully deployed into production. This usually means a separate, "
"dedicated static file server, which is a lot of overhead to mess with when "
"developing locally. Thus, the ``staticfiles`` app ships with a **quick and "
"dirty helper view** that you can use to serve files locally in development."
msgstr ""

msgid "This view function serves static files in development."
msgstr ""

msgid "This view will only work if :setting:`DEBUG` is ``True``."
msgstr ""

msgid ""
"That's because this view is **grossly inefficient** and probably "
"**insecure**. This is only intended for local development, and should "
"**never be used in production**."
msgstr ""

msgid ""
"To guess the served files' content types, this view relies on the :py:mod:"
"`mimetypes` module from the Python standard library, which itself relies on "
"the underlying platform's map files. If you find that this view doesn't "
"return proper content types for certain files, it is most likely that the "
"platform's map files need to be updated. This can be achieved, for example, "
"by installing or updating the ``mailcap`` package on a Red Hat distribution, "
"or ``mime-support`` on a Debian distribution."
msgstr ""
"Untuk menebak jenis isi berkas dilayani, tampilan ini bergantung pada modul :"
"py:mod:`mimetypes` dari pustaka standar Python, yang itu sendiri bergantung "
"pada pokok berkas peta serambi. Jika anda menemukan bahwa tampilan ini tidak "
"mengembalikanjenis isi yang sesuai untuk berkas-berkas tertent, itu "
"kebanyakan sepertinya bahwa berkas-berkas peta serambi butuh diperbaharui. "
"Ini dapat dicapai, sebagai contoh, dengan memasang atau memperbaharui paket "
"``mailcap`` pada penyaluran Red Hat, atau ``mime-support`` pada penyaluran "
"Debian."

msgid ""
"This view is automatically enabled by :djadmin:`runserver` (with a :setting:"
"`DEBUG` setting set to ``True``). To use the view with a different local "
"development server, add the following snippet to the end of your primary URL "
"configuration::"
msgstr ""

msgid ""
"Note, the beginning of the pattern (``r'^static/'``) should be your :setting:"
"`STATIC_URL` setting."
msgstr ""

msgid ""
"Since this is a bit finicky, there's also a helper function that'll do this "
"for you:"
msgstr ""

msgid ""
"This will return the proper URL pattern for serving static files to your "
"already defined pattern list. Use it like this::"
msgstr ""

msgid ""
"This will inspect your :setting:`STATIC_URL` setting and wire up the view to "
"serve static files accordingly. Don't forget to set the :setting:"
"`STATICFILES_DIRS` setting appropriately to let ``django.contrib."
"staticfiles`` know where to look for files in addition to files in app "
"directories."
msgstr ""

msgid ""
"This helper function will only work if :setting:`DEBUG` is ``True`` and "
"your :setting:`STATIC_URL` setting is neither empty nor a full URL such as "
"``http://static.example.com/``."
msgstr ""

msgid "Specialized test case to support 'live testing'"
msgstr ""

msgid ""
"This unittest TestCase subclass extends :class:`django.test."
"LiveServerTestCase`."
msgstr ""

msgid ""
"Just like its parent, you can use it to write tests that involve running the "
"code under test and consuming it with testing tools through HTTP (e.g. "
"Selenium, PhantomJS, etc.), because of which it's needed that the static "
"assets are also published."
msgstr ""

msgid ""
"But given the fact that it makes use of the :func:`django.contrib."
"staticfiles.views.serve` view described above, it can transparently overlay "
"at test execution-time the assets provided by the ``staticfiles`` finders. "
"This means you don't need to run :djadmin:`collectstatic` before or as a "
"part of your tests setup."
msgstr ""

msgid "The syndication feed framework"
msgstr ""

msgid ""
"Django comes with a high-level syndication-feed-generating framework that "
"makes creating RSS_ and Atom_ feeds easy."
msgstr ""

msgid ""
"To create any syndication feed, all you have to do is write a short Python "
"class. You can create as many feeds as you want."
msgstr ""

msgid ""
"Django also comes with a lower-level feed-generating API. Use this if you "
"want to generate feeds outside of a Web context, or in some other lower-"
"level way."
msgstr ""

msgid "The high-level framework"
msgstr ""

msgid ""
"The high-level feed-generating framework is supplied by the :class:`~django."
"contrib.syndication.views.Feed` class. To create a feed, write a :class:"
"`~django.contrib.syndication.views.Feed` class and point to an instance of "
"it in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

msgid "``Feed`` classes"
msgstr "Kelas-kelas ``Feed``"

msgid ""
"A :class:`~django.contrib.syndication.views.Feed` class is a Python class "
"that represents a syndication feed. A feed can be simple (e.g., a \"site news"
"\" feed, or a basic feed displaying the latest entries of a blog) or more "
"complex (e.g., a feed displaying all the blog entries in a particular "
"category, where the category is variable)."
msgstr ""

msgid ""
"Feed classes subclass :class:`django.contrib.syndication.views.Feed`. They "
"can live anywhere in your codebase."
msgstr ""

msgid ""
"Instances of :class:`~django.contrib.syndication.views.Feed` classes are "
"views which can be used in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

msgid ""
"This simple example, taken from a hypothetical police beat news site "
"describes a feed of the latest five news items::"
msgstr ""

msgid ""
"To connect a URL to this feed, put an instance of the Feed object in your :"
"doc:`URLconf </topics/http/urls>`. For example::"
msgstr ""

msgid ""
"The Feed class subclasses :class:`django.contrib.syndication.views.Feed`."
msgstr ""

msgid ""
"``title``, ``link`` and ``description`` correspond to the standard RSS "
"``<title>``, ``<link>`` and ``<description>`` elements, respectively."
msgstr ""

msgid ""
"``items()`` is, simply, a method that returns a list of objects that should "
"be included in the feed as ``<item>`` elements. Although this example "
"returns ``NewsItem`` objects using Django's :doc:`object-relational mapper </"
"ref/models/querysets>`, ``items()`` doesn't have to return model instances. "
"Although you get a few bits of functionality \"for free\" by using Django "
"models, ``items()`` can return any type of object you want."
msgstr ""

msgid ""
"If you're creating an Atom feed, rather than an RSS feed, set the "
"``subtitle`` attribute instead of the ``description`` attribute. See "
"`Publishing Atom and RSS feeds in tandem`_, later, for an example."
msgstr ""

msgid ""
"One thing is left to do. In an RSS feed, each ``<item>`` has a ``<title>``, "
"``<link>`` and ``<description>``. We need to tell the framework what data to "
"put into those elements."
msgstr ""

msgid ""
"For the contents of ``<title>`` and ``<description>``, Django tries calling "
"the methods ``item_title()`` and ``item_description()`` on the :class:"
"`~django.contrib.syndication.views.Feed` class. They are passed a single "
"parameter, ``item``, which is the object itself. These are optional; by "
"default, the unicode representation of the object is used for both."
msgstr ""

msgid ""
"If you want to do any special formatting for either the title or "
"description, :doc:`Django templates </ref/templates/language>` can be used "
"instead. Their paths can be specified with the ``title_template`` and "
"``description_template`` attributes on the :class:`~django.contrib."
"syndication.views.Feed` class. The templates are rendered for each item and "
"are passed two template context variables:"
msgstr ""

msgid ""
"``{{ obj }}`` -- The current object (one of whichever objects you returned "
"in ``items()``)."
msgstr ""

msgid ""
"``{{ site }}`` -- A :class:`django.contrib.sites.models.Site` object "
"representing the current site. This is useful for ``{{ site.domain }}`` or "
"``{{ site.name }}``. If you do *not* have the Django sites framework "
"installed, this will be set to a :class:`~django.contrib.sites.requests."
"RequestSite` object. See the :ref:`RequestSite section of the sites "
"framework documentation <requestsite-objects>` for more."
msgstr ""

msgid "See `a complex example`_ below that uses a description template."
msgstr ""

msgid ""
"There is also a way to pass additional information to title and description "
"templates, if you need to supply more than the two variables mentioned "
"before. You can provide your implementation of ``get_context_data`` method "
"in your ``Feed`` subclass. For example::"
msgstr ""

msgid "And the template:"
msgstr "Dan cetakannya:"

msgid ""
"This method will be called once per each item in the list returned by "
"``items()`` with the following keyword arguments:"
msgstr ""

msgid ""
"``item``: the current item. For backward compatibility reasons, the name of "
"this context variable is ``{{ obj }}``."
msgstr ""

msgid ""
"``obj``: the object returned by ``get_object()``. By default this is not "
"exposed to the templates to avoid confusion with ``{{ obj }}`` (see above), "
"but you can use it in your implementation of ``get_context_data()``."
msgstr ""

msgid "``site``: current site as described above."
msgstr ""

msgid "``request``: current request."
msgstr ""

msgid ""
"The behavior of ``get_context_data()`` mimics that of :ref:`generic views "
"<adding-extra-context>` - you're supposed to call ``super()`` to retrieve "
"context data from parent class, add your data and return the modified "
"dictionary."
msgstr ""

msgid ""
"To specify the contents of ``<link>``, you have two options. For each item "
"in ``items()``, Django first tries calling the ``item_link()`` method on "
"the :class:`~django.contrib.syndication.views.Feed` class. In a similar way "
"to the title and description, it is passed it a single parameter, ``item``. "
"If that method doesn't exist, Django tries executing a "
"``get_absolute_url()`` method on that object. Both ``get_absolute_url()`` "
"and ``item_link()`` should return the item's URL as a normal Python string. "
"As with ``get_absolute_url()``, the result of ``item_link()`` will be "
"included directly in the URL, so you are responsible for doing all necessary "
"URL quoting and conversion to ASCII inside the method itself."
msgstr ""

msgid "A complex example"
msgstr "Sebuah contoh rumit"

msgid "The framework also supports more complex feeds, via arguments."
msgstr ""

msgid ""
"For example, a website could offer an RSS feed of recent crimes for every "
"police beat in a city. It'd be silly to create a separate :class:`~django."
"contrib.syndication.views.Feed` class for each police beat; that would "
"violate the :ref:`DRY principle <dry>` and would couple data to programming "
"logic. Instead, the syndication framework lets you access the arguments "
"passed from your :doc:`URLconf </topics/http/urls>` so feeds can output "
"items based on information in the feed's URL."
msgstr ""

msgid "The police beat feeds could be accessible via URLs like this:"
msgstr ""

msgid ":file:`/beats/613/rss/` -- Returns recent crimes for beat 613."
msgstr ""

msgid ":file:`/beats/1424/rss/` -- Returns recent crimes for beat 1424."
msgstr ""

msgid ""
"These can be matched with a :doc:`URLconf </topics/http/urls>` line such as::"
msgstr ""

msgid ""
"Like a view, the arguments in the URL are passed to the ``get_object()`` "
"method along with the request object."
msgstr ""

msgid "Here's the code for these beat-specific feeds::"
msgstr ""

msgid ""
"To generate the feed's ``<title>``, ``<link>`` and ``<description>``, Django "
"uses the ``title()``, ``link()`` and ``description()`` methods. In the "
"previous example, they were simple string class attributes, but this example "
"illustrates that they can be either strings *or* methods. For each of "
"``title``, ``link`` and ``description``, Django follows this algorithm:"
msgstr ""

msgid ""
"First, it tries to call a method, passing the ``obj`` argument, where "
"``obj`` is the object returned by ``get_object()``."
msgstr ""

msgid "Failing that, it tries to call a method with no arguments."
msgstr ""

msgid "Failing that, it uses the class attribute."
msgstr ""

msgid ""
"Also note that ``items()`` also follows the same algorithm -- first, it "
"tries ``items(obj)``, then ``items()``, then finally an ``items`` class "
"attribute (which should be a list)."
msgstr ""

msgid ""
"We are using a template for the item descriptions. It can be very simple:"
msgstr ""

msgid "However, you are free to add formatting as desired."
msgstr ""

msgid ""
"The ``ExampleFeed`` class below gives full documentation on methods and "
"attributes of :class:`~django.contrib.syndication.views.Feed` classes."
msgstr ""

msgid "Specifying the type of feed"
msgstr ""

msgid "By default, feeds produced in this framework use RSS 2.0."
msgstr ""

msgid ""
"To change that, add a ``feed_type`` attribute to your :class:`~django."
"contrib.syndication.views.Feed` class, like so::"
msgstr ""

msgid "Note that you set ``feed_type`` to a class object, not an instance."
msgstr ""

msgid "Currently available feed types are:"
msgstr ""

msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed` (RSS 2.01. Default.)"
msgstr ":class:`django.utils.feedgenerator.Rss201rev2Feed` (RSS 2.01. Awal.)"

msgid ":class:`django.utils.feedgenerator.RssUserland091Feed` (RSS 0.91.)"
msgstr ":class:`django.utils.feedgenerator.RssUserland091Feed` (RSS 0.91.)"

msgid ":class:`django.utils.feedgenerator.Atom1Feed` (Atom 1.0.)"
msgstr ":class:`django.utils.feedgenerator.Atom1Feed` (Atom 1.0.)"

msgid "Enclosures"
msgstr "Lampiran"

msgid ""
"To specify enclosures, such as those used in creating podcast feeds, use the "
"``item_enclosures`` hook or, alternatively and if you only have a single "
"enclosure per item, the ``item_enclosure_url``, ``item_enclosure_length``, "
"and ``item_enclosure_mime_type`` hooks. See the ``ExampleFeed`` class below "
"for usage examples."
msgstr ""

msgid "Language"
msgstr "Bahasa"

msgid ""
"Feeds created by the syndication framework automatically include the "
"appropriate ``<language>`` tag (RSS 2.0) or ``xml:lang`` attribute (Atom). "
"This comes directly from your :setting:`LANGUAGE_CODE` setting."
msgstr ""

msgid ""
"The ``link`` method/attribute can return either an absolute path (e.g. :file:"
"`\"/blog/\"`) or a URL with the fully-qualified domain and protocol (e.g. ``"
"\"https://www.example.com/blog/\"``). If ``link`` doesn't return the domain, "
"the syndication framework will insert the domain of the current site, "
"according to your :setting:`SITE_ID setting <SITE_ID>`."
msgstr ""

msgid ""
"Atom feeds require a ``<link rel=\"self\">`` that defines the feed's current "
"location. The syndication framework populates this automatically, using the "
"domain of the current site according to the :setting:`SITE_ID` setting."
msgstr ""

msgid "Publishing Atom and RSS feeds in tandem"
msgstr ""

msgid ""
"Some developers like to make available both Atom *and* RSS versions of their "
"feeds. That's easy to do with Django: Just create a subclass of your :class:"
"`~django.contrib.syndication.views.Feed` class and set the ``feed_type`` to "
"something different. Then update your URLconf to add the extra versions."
msgstr ""

msgid "Here's a full example::"
msgstr "Ini adalah contoh lengkap::"

msgid ""
"In this example, the RSS feed uses a ``description`` while the Atom feed "
"uses a ``subtitle``. That's because Atom feeds don't provide for a feed-"
"level \"description,\" but they *do* provide for a \"subtitle.\""
msgstr ""

msgid ""
"If you provide a ``description`` in your :class:`~django.contrib.syndication."
"views.Feed` class, Django will *not* automatically put that into the "
"``subtitle`` element, because a subtitle and description are not necessarily "
"the same thing. Instead, you should define a ``subtitle`` attribute."
msgstr ""

msgid ""
"In the above example, we simply set the Atom feed's ``subtitle`` to the RSS "
"feed's ``description``, because it's quite short already."
msgstr ""

msgid "And the accompanying URLconf::"
msgstr ""

msgid "``Feed`` class reference"
msgstr ""

msgid ""
"This example illustrates all possible attributes and methods for a :class:"
"`~django.contrib.syndication.views.Feed` class::"
msgstr ""

msgid "The low-level framework"
msgstr ""

msgid ""
"Behind the scenes, the high-level RSS framework uses a lower-level framework "
"for generating feeds' XML. This framework lives in a single module: `django/"
"utils/feedgenerator.py`_."
msgstr ""

msgid ""
"You use this framework on your own, for lower-level feed generation. You can "
"also create custom feed generator subclasses for use with the ``feed_type`` "
"``Feed`` option."
msgstr ""

msgid "``SyndicationFeed`` classes"
msgstr "Kelas-kelas ``SyndicationFeed``"

msgid "The :mod:`~django.utils.feedgenerator` module contains a base class:"
msgstr ""

msgid ":class:`django.utils.feedgenerator.SyndicationFeed`"
msgstr ":class:`django.utils.feedgenerator.SyndicationFeed`"

msgid "and several subclasses:"
msgstr ""

msgid ":class:`django.utils.feedgenerator.RssUserland091Feed`"
msgstr ":class:`django.utils.feedgenerator.RssUserland091Feed`"

msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed`"
msgstr ":class:`django.utils.feedgenerator.Rss201rev2Feed`"

msgid ":class:`django.utils.feedgenerator.Atom1Feed`"
msgstr ":class:`django.utils.feedgenerator.Atom1Feed`"

msgid ""
"Each of these three classes knows how to render a certain type of feed as "
"XML. They share this interface:"
msgstr ""

msgid ":meth:`.SyndicationFeed.__init__`"
msgstr ":meth:`.SyndicationFeed.__init__`"

msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed. Required keyword arguments are:"
msgstr ""

msgid "``title``"
msgstr "``title``"

msgid "There's also a bunch of other optional keywords:"
msgstr ""

msgid "``language``"
msgstr "``language``"

msgid "``author_email``"
msgstr "``author_email``"

msgid "``author_name``"
msgstr "``author_name``"

msgid "``author_link``"
msgstr "``author_link``"

msgid "``subtitle``"
msgstr "``subtitle``"

msgid "``categories``"
msgstr "``categories``"

msgid "``feed_url``"
msgstr "``feed_url``"

msgid "``feed_copyright``"
msgstr "``feed_copyright``"

msgid "``feed_guid``"
msgstr "``feed_guid``"

msgid "``ttl``"
msgstr "``ttl``"

msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed`` for use with `custom feed generators`_."
msgstr ""

msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects. Beware that some control characters "
"are `not allowed <http://www.w3.org/International/questions/qa-controls>`_ "
"in XML documents. If your content has some of them, you might encounter a :"
"exc:`ValueError` when producing the feed."
msgstr ""

msgid ":meth:`.SyndicationFeed.add_item`"
msgstr ":meth:`.SyndicationFeed.add_item`"

msgid "Add an item to the feed with the given parameters."
msgstr "Tambah sebuah barang ke umpan dengan parameter yang diberikan."

msgid "Required keyword arguments are:"
msgstr "Argumen kata kunci yang diwajibkan adalah:"

msgid "Optional keyword arguments are:"
msgstr "Argumen kata kunci pilihan adalah:"

msgid "``pubdate``"
msgstr "``pubdate``"

msgid "``comments``"
msgstr "``comments``"

msgid "``unique_id``"
msgstr "``unique_id``"

msgid "``enclosure``"
msgstr "``enclosure``"

msgid "``enclosures``"
msgstr "``enclosures``"

msgid "``item_copyright``"
msgstr "``item_copyright``"

msgid "``updateddate``"
msgstr "``updateddate``"

msgid "Extra keyword arguments will be stored for `custom feed generators`_."
msgstr ""

msgid "All parameters, if given, should be Unicode objects, except:"
msgstr ""

msgid "``pubdate`` should be a Python  :class:`~datetime.datetime` object."
msgstr "``pubdate`` seharusnya obyek :class:`~datetime.datetime` Python."

msgid "``updateddate`` should be a Python  :class:`~datetime.datetime` object."
msgstr "``updateddate`` seharusnya obyek :class:`~datetime.datetime` Python."

msgid ""
"``enclosure`` should be an instance of :class:`django.utils.feedgenerator."
"Enclosure`."
msgstr ""

msgid ""
"``enclosures`` should be a list of :class:`django.utils.feedgenerator."
"Enclosure` instances."
msgstr ""

msgid "``categories`` should be a sequence of Unicode objects."
msgstr ""

msgid ""
"The ``enclosure`` keyword argument is deprecated in favor of the "
"``enclosures`` keyword argument."
msgstr ""

msgid ":meth:`.SyndicationFeed.write`"
msgstr ":meth:`.SyndicationFeed.write`"

msgid ""
"Outputs the feed in the given encoding to outfile, which is a file-like "
"object."
msgstr ""

msgid ":meth:`.SyndicationFeed.writeString`"
msgstr ":meth:`.SyndicationFeed.writeString`"

msgid "Returns the feed as a string in the given encoding."
msgstr ""

msgid ""
"For example, to create an Atom 1.0 feed and print it to standard output::"
msgstr ""

msgid "Custom feed generators"
msgstr ""

msgid ""
"If you need to produce a custom feed format, you've got a couple of options."
msgstr ""

msgid ""
"If the feed format is totally custom, you'll want to subclass "
"``SyndicationFeed`` and completely replace the ``write()`` and "
"``writeString()`` methods."
msgstr ""

msgid ""
"However, if the feed format is a spin-off of RSS or Atom (i.e. GeoRSS_, "
"Apple's `iTunes podcast format`_, etc.), you've got a better choice. These "
"types of feeds typically add extra elements and/or attributes to the "
"underlying format, and there are a set of methods that ``SyndicationFeed`` "
"calls to get these extra attributes. Thus, you can subclass the appropriate "
"feed generator class (``Atom1Feed`` or ``Rss201rev2Feed``) and extend these "
"callbacks. They are:"
msgstr ""

msgid "``SyndicationFeed.root_attributes(self, )``"
msgstr "``SyndicationFeed.root_attributes(self, )``"

msgid ""
"Return a ``dict`` of attributes to add to the root feed element (``feed``/"
"``channel``)."
msgstr ""

msgid "``SyndicationFeed.add_root_elements(self, handler)``"
msgstr "``SyndicationFeed.add_root_elements(self, handler)``"

msgid ""
"Callback to add elements inside the root feed element (``feed``/"
"``channel``). ``handler`` is an :class:`~xml.sax.saxutils.XMLGenerator` from "
"Python's built-in SAX library; you'll call methods on it to add to the XML "
"document in process."
msgstr ""

msgid "``SyndicationFeed.item_attributes(self, item)``"
msgstr "``SyndicationFeed.item_attributes(self, item)``"

msgid ""
"Return a ``dict`` of attributes to add to each item (``item``/``entry``) "
"element. The argument, ``item``, is a dictionary of all the data passed to "
"``SyndicationFeed.add_item()``."
msgstr ""

msgid "``SyndicationFeed.add_item_elements(self, handler, item)``"
msgstr "``SyndicationFeed.add_item_elements(self, handler, item)``"

msgid ""
"Callback to add elements to each item (``item``/``entry``) element. "
"``handler`` and ``item`` are as above."
msgstr ""

msgid ""
"If you override any of these methods, be sure to call the superclass methods "
"since they add the required elements for each feed format."
msgstr ""

msgid ""
"For example, you might start implementing an iTunes RSS feed generator like "
"so::"
msgstr ""

msgid ""
"Obviously there's a lot more work to be done for a complete custom feed "
"class, but the above example should demonstrate the basic idea."
msgstr ""

msgid "Cross Site Request Forgery protection"
msgstr "Perlindungan Cross Site Request Forgery"

msgid ""
"The CSRF middleware and template tag provides easy-to-use protection against "
"`Cross Site Request Forgeries`_.  This type of attack occurs when a "
"malicious website contains a link, a form button or some JavaScript that is "
"intended to perform some action on your website, using the credentials of a "
"logged-in user who visits the malicious site in their browser.  A related "
"type of attack, 'login CSRF', where an attacking site tricks a user's "
"browser into logging into a site with someone else's credentials, is also "
"covered."
msgstr ""

msgid ""
"The first defense against CSRF attacks is to ensure that GET requests (and "
"other 'safe' methods, as defined by :rfc:`7231#section-4.2.1`) are side "
"effect free. Requests via 'unsafe' methods, such as POST, PUT, and DELETE, "
"can then be protected by following the steps below."
msgstr ""

msgid "To take advantage of CSRF protection in your views, follow these steps:"
msgstr ""

msgid ""
"The CSRF middleware is activated by default in the :setting:`MIDDLEWARE` "
"setting. If you override that setting, remember that ``'django.middleware."
"csrf.CsrfViewMiddleware'`` should come before any view middleware that "
"assume that CSRF attacks have been dealt with."
msgstr ""

msgid ""
"If you disabled it, which is not recommended, you can use :func:`~django."
"views.decorators.csrf.csrf_protect` on particular views you want to protect "
"(see below)."
msgstr ""

msgid ""
"In any template that uses a POST form, use the :ttag:`csrf_token` tag inside "
"the ``<form>`` element if the form is for an internal URL, e.g.:"
msgstr ""

msgid ""
"This should not be done for POST forms that target external URLs, since that "
"would cause the CSRF token to be leaked, leading to a vulnerability."
msgstr ""

msgid ""
"In the corresponding view functions, ensure that :class:`~django.template."
"RequestContext` is used to render the response so that ``{% csrf_token %}`` "
"will work properly. If you're using the :func:`~django.shortcuts.render` "
"function, generic views, or contrib apps, you are covered already since "
"these all use ``RequestContext``."
msgstr ""

msgid "AJAX"
msgstr "AJAX"

msgid ""
"While the above method can be used for AJAX POST requests, it has some "
"inconveniences: you have to remember to pass the CSRF token in as POST data "
"with every POST request. For this reason, there is an alternative method: on "
"each XMLHttpRequest, set a custom ``X-CSRFToken`` header to the value of the "
"CSRF token. This is often easier, because many JavaScript frameworks provide "
"hooks that allow headers to be set on every request."
msgstr ""

msgid ""
"First, you must get the CSRF token. How to do that depends on whether or not "
"the :setting:`CSRF_USE_SESSIONS` setting is enabled."
msgstr ""

msgid "Acquiring the token if :setting:`CSRF_USE_SESSIONS` is ``False``"
msgstr "Mendapatkan token jika :setting:`CSRF_USE_SESSIONS` adalah ``False``"

msgid ""
"The recommended source for the token is the ``csrftoken`` cookie, which will "
"be set if you've enabled CSRF protection for your views as outlined above."
msgstr ""

msgid ""
"The CSRF token cookie is named ``csrftoken`` by default, but you can control "
"the cookie name via the :setting:`CSRF_COOKIE_NAME` setting."
msgstr ""

msgid ""
"The CSRF header name is ``HTTP_X_CSRFTOKEN`` by default, but you can "
"customize it using the :setting:`CSRF_HEADER_NAME` setting."
msgstr ""

msgid "Acquiring the token is straightforward:"
msgstr "Mendapatkan token adalah mudah:"

msgid ""
"The above code could be simplified by using the `JavaScript Cookie library "
"<https://github.com/js-cookie/js-cookie/>`_ to replace ``getCookie``:"
msgstr ""
"Kode diatas dapat disederhanakan menggunakan  `JavaScript Cookie library "
"<https://github.com/js-cookie/js-cookie/>`_ untuk mengganti ``getCookie``:"

msgid ""
"The CSRF token is also present in the DOM, but only if explicitly included "
"using :ttag:`csrf_token` in a template. The cookie contains the canonical "
"token; the ``CsrfViewMiddleware`` will prefer the cookie to the token in the "
"DOM. Regardless, you're guaranteed to have the cookie if the token is "
"present in the DOM, so you should use the cookie!"
msgstr ""

msgid ""
"If your view is not rendering a template containing the :ttag:`csrf_token` "
"template tag, Django might not set the CSRF token cookie. This is common in "
"cases where forms are dynamically added to the page. To address this case, "
"Django provides a view decorator which forces setting of the cookie: :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie`."
msgstr ""

msgid "Acquiring the token if :setting:`CSRF_USE_SESSIONS` is ``True``"
msgstr "Mendapatkan token jika :setting:`CSRF_USE_SESSIONS` adalah ``True``"

msgid ""
"If you activate :setting:`CSRF_USE_SESSIONS`, you must include the CSRF "
"token in your HTML and read the token from the DOM with JavaScript:"
msgstr ""
"Jika anda mengaktifkan :setting:`CSRF_USE_SESSIONS`, anda harus menyertakan "
"token-CSRF dalam HTML anda dan membaca token dari DOM dengan JavaScript:"

msgid "Setting the token on the AJAX request"
msgstr "Mengatur token pada permintaan AJAX"

msgid ""
"Finally, you'll have to actually set the header on your AJAX request, while "
"protecting the CSRF token from being sent to other domains using `settings."
"crossDomain <https://api.jquery.com/jQuery.ajax/>`_ in jQuery 1.5.1 and "
"newer:"
msgstr ""

msgid ""
"If you're using AngularJS 1.1.3 and newer, it's sufficient to configure the "
"``$http`` provider with the cookie and header names:"
msgstr ""

msgid "Using CSRF in Jinja2 templates"
msgstr "Menggunakan CSRF dalam cetakan Jinja2"

msgid ""
"Django's :class:`~django.template.backends.jinja2.Jinja2` template backend "
"adds ``{{ csrf_input }}`` to the context of all templates which is "
"equivalent to ``{% csrf_token %}`` in the Django template language. For "
"example:"
msgstr ""

msgid "The decorator method"
msgstr "Cara penghias"

msgid ""
"Rather than adding ``CsrfViewMiddleware`` as a blanket protection, you can "
"use the ``csrf_protect`` decorator, which has exactly the same "
"functionality, on particular views that need the protection. It must be used "
"**both** on views that insert the CSRF token in the output, and on those "
"that accept the POST form data. (These are often the same view function, but "
"not always)."
msgstr ""

msgid ""
"Use of the decorator by itself is **not recommended**, since if you forget "
"to use it, you will have a security hole. The 'belt and braces' strategy of "
"using both is fine, and will incur minimal overhead."
msgstr ""

msgid ""
"Decorator that provides the protection of ``CsrfViewMiddleware`` to a view."
msgstr ""
"Penghias yang menyediakan perlindungan dari ``CsrfViewMiddleware`` ke sebuah "
"tampilan."

msgid "Usage::"
msgstr "Penggunaan::"

msgid ""
"If you are using class-based views, you can refer to :ref:`Decorating class-"
"based views<decorating-class-based-views>`."
msgstr ""
"Jika anda sedang menggunakan tampilan berdasarkan-kelas, anda dapat mengacu "
"ke :ref:`Decorating class-based views1`."

msgid "Rejected requests"
msgstr "Permintaan tertolak"

msgid ""
"By default, a '403 Forbidden' response is sent to the user if an incoming "
"request fails the checks performed by ``CsrfViewMiddleware``.  This should "
"usually only be seen when there is a genuine Cross Site Request Forgery, or "
"when, due to a programming error, the CSRF token has not been included with "
"a POST form."
msgstr ""
"Secara awalan, sebuah tanggapan '403 Forbidden' dikirim ke pengguna jika "
"sebuah permintaan datang gaagl melakukan pemeriksaan oleh "
"``CsrfViewMiddleware``. Ini harus biasanya hanya dilihat ketika ada Cross "
"Site Request Forgery asli, atau ketika, karena pada kesalahan pemrograman, "
"token CSRF belum dimasukkan dengan formulir POST."

msgid ""
"The error page, however, is not very friendly, so you may want to provide "
"your own view for handling this condition.  To do this, simply set the :"
"setting:`CSRF_FAILURE_VIEW` setting."
msgstr ""
"Halaman kesalahan, bagaimanapun, itu tidak sangat ramah, jadi anda mungkin "
"ingin menyediakan tampilan anda sendiri untuk menangani kondisi ini. Untuk "
"melakukan ini, cukup setel pengaturan :setting:`CSRF_FAILURE_VIEW`."

msgid ""
"CSRF failures are logged as warnings to the :ref:`django.security.csrf "
"<django-security-logger>` logger."
msgstr ""
"Kegagalan CSRF adalah tercatat sebagai peringatan pada pencatat :ref:`django."
"security.csrf 1`."

msgid ""
"In older versions, CSRF failures are logged to the ``django.request`` logger."
msgstr ""
"Dalam versi terlama, kegagalan CSRF dicatat pada pencatat ``django.request``."

msgid "The CSRF protection is based on the following things:"
msgstr "Perlindungan CSRF berdasarkan pada hal-hal berikut:"

msgid ""
"A CSRF cookie that is based on a random secret value, which other sites will "
"not have access to."
msgstr ""
"Sebuah kue CSRF yaitu berdasarkan pada nilai rahasia acak, yang situs-situs "
"lain tidak akan mengaksesnya."

msgid ""
"This cookie is set by ``CsrfViewMiddleware``. It is sent with every response "
"that has called ``django.middleware.csrf.get_token()`` (the function used "
"internally to retrieve the CSRF token), if it wasn't already set on the "
"request."
msgstr ""

msgid ""
"In order to protect against `BREACH`_ attacks, the token is not simply the "
"secret; a random salt is prepended to the secret and used to scramble it."
msgstr ""
"Untuk terlindungi terhadap serangan `BREACH`_, token tidak cukup rahasia; "
"sebuah garam acak ditambahkan ke rahasia dan digunakan untuk mengaduk itu."

msgid ""
"For security reasons, the value of the secret is changed each time a user "
"logs in."
msgstr ""
"Untuk alasan keamanan, nilai dari rahasia berubah setiap waktu pengguna "
"masuk."

msgid ""
"A hidden form field with the name 'csrfmiddlewaretoken' present in all "
"outgoing POST forms. The value of this field is, again, the value of the "
"secret, with a salt which is both added to it and used to scramble it. The "
"salt is regenerated on every call to ``get_token()`` so that the form field "
"value is changed in every such response."
msgstr ""

msgid "This part is done by the template tag."
msgstr "Bagian selesai dengan etiket cetakan."

msgid ""
"For all incoming requests that are not using HTTP GET, HEAD, OPTIONS or "
"TRACE, a CSRF cookie must be present, and the 'csrfmiddlewaretoken' field "
"must be present and correct. If it isn't, the user will get a 403 error."
msgstr ""

msgid ""
"When validating the 'csrfmiddlewaretoken' field value, only the secret, not "
"the full token, is compared with the secret in the cookie value. This allows "
"the use of ever-changing tokens. While each request may use its own token, "
"the secret remains common to all."
msgstr ""

msgid "This check is done by ``CsrfViewMiddleware``."
msgstr "Pemeriksaan ini selesai dengan ``CsrfViewMiddleware``."

msgid ""
"In addition, for HTTPS requests, strict referer checking is done by "
"``CsrfViewMiddleware``. This means that even if a subdomain can set or "
"modify cookies on your domain, it can't force a user to post to your "
"application since that request won't come from your own exact domain."
msgstr ""

msgid ""
"This also addresses a man-in-the-middle attack that's possible under HTTPS "
"when using a session independent secret, due to the fact that HTTP ``Set-"
"Cookie`` headers are (unfortunately) accepted by clients even when they are "
"talking to a site under HTTPS. (Referer checking is not done for HTTP "
"requests because the presence of the ``Referer`` header isn't reliable "
"enough under HTTP.)"
msgstr ""

msgid ""
"If the :setting:`CSRF_COOKIE_DOMAIN` setting is set, the referer is compared "
"against it. This setting supports subdomains. For example, "
"``CSRF_COOKIE_DOMAIN = '.example.com'`` will allow POST requests from ``www."
"example.com`` and ``api.example.com``. If the setting is not set, then the "
"referer must match the HTTP ``Host`` header."
msgstr ""

msgid ""
"Expanding the accepted referers beyond the current host or cookie domain can "
"be done with the :setting:`CSRF_TRUSTED_ORIGINS` setting."
msgstr ""

msgid ""
"This ensures that only forms that have originated from trusted domains can "
"be used to POST data back."
msgstr ""
"Ini memastikan bahwa hanya formulir yang asli dari ranah terpercaya dapat "
"digunakan untuk data POST kembali."

msgid ""
"It deliberately ignores GET requests (and other requests that are defined as "
"'safe' by :rfc:`7231`). These requests ought never to have any potentially "
"dangerous side effects , and so a CSRF attack with a GET request ought to be "
"harmless. :rfc:`7231` defines POST, PUT, and DELETE as 'unsafe', and all "
"other methods are also assumed to be unsafe, for maximum protection."
msgstr ""

msgid ""
"The CSRF protection cannot protect against man-in-the-middle attacks, so "
"use :ref:`HTTPS <security-recommendation-ssl>` with :ref:`http-strict-"
"transport-security`. It also assumes :ref:`validation of the HOST header "
"<host-headers-virtual-hosting>` and that there aren't any :ref:`cross-site "
"scripting vulnerabilities <cross-site-scripting>` on your site (because XSS "
"vulnerabilities already let an attacker do anything a CSRF vulnerability "
"allows and much worse)."
msgstr ""

msgid ""
"Added salting to the token and started changing it with each request to "
"protect against `BREACH`_ attacks."
msgstr ""
"Ditambahkan penggaraman ke token dan mulai berubah itu dengan setiap "
"permintaan untuk melindungi terhadap serangan `BREACH`_."

msgid "Caching"
msgstr "Tembolok"

msgid ""
"If the :ttag:`csrf_token` template tag is used by a template (or the "
"``get_token`` function is called some other way), ``CsrfViewMiddleware`` "
"will add a cookie and a ``Vary: Cookie`` header to the response. This means "
"that the middleware will play well with the cache middleware if it is used "
"as instructed (``UpdateCacheMiddleware`` goes before all other middleware)."
msgstr ""

msgid ""
"However, if you use cache decorators on individual views, the CSRF "
"middleware will not yet have been able to set the Vary header or the CSRF "
"cookie, and the response will be cached without either one. In this case, on "
"any views that will require a CSRF token to be inserted you should use the :"
"func:`django.views.decorators.csrf.csrf_protect` decorator first::"
msgstr ""

msgid "Testing"
msgstr "Pengujian"

msgid ""
"The ``CsrfViewMiddleware`` will usually be a big hindrance to testing view "
"functions, due to the need for the CSRF token which must be sent with every "
"POST request.  For this reason, Django's HTTP client for tests has been "
"modified to set a flag on requests which relaxes the middleware and the "
"``csrf_protect`` decorator so that they no longer rejects requests.  In "
"every other respect (e.g. sending cookies etc.), they behave the same."
msgstr ""

msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks::"
msgstr ""
"Jika, untuk beberapa alasan, anda *ingin* klien percobaan melakukan "
"pemeriksaan CSRF, anda dapat membuat sebuah instance dari klien percobaan "
"yang memaksa pemeriksaan CSRF::"

msgid ""
"Subdomains within a site will be able to set cookies on the client for the "
"whole domain.  By setting the cookie and using a corresponding token, "
"subdomains will be able to circumvent the CSRF protection.  The only way to "
"avoid this is to ensure that subdomains are controlled by trusted users (or, "
"are at least unable to set cookies).  Note that even without CSRF, there are "
"other vulnerabilities, such as session fixation, that make giving subdomains "
"to untrusted parties a bad idea, and these vulnerabilities cannot easily be "
"fixed with current browsers."
msgstr ""

msgid "Edge cases"
msgstr "Kasus tepi"

msgid ""
"Certain views can have unusual requirements that mean they don't fit the "
"normal pattern envisaged here. A number of utilities can be useful in these "
"situations. The scenarios they might be needed in are described in the "
"following section."
msgstr ""

msgid "Utilities"
msgstr "Keperluan"

msgid ""
"The examples below assume you are using function-based views. If you are "
"working with class-based views, you can refer to :ref:`Decorating class-"
"based views<decorating-class-based-views>`."
msgstr ""

msgid ""
"This decorator marks a view as being exempt from the protection ensured by "
"the middleware. Example::"
msgstr ""
"Penghias ini menandai sebuah tampilan sebagai menjadi pengecualian dari "
"perlinsungan dipastikan oleh middleware. Contoh::"

msgid ""
"Normally the :ttag:`csrf_token` template tag will not work if "
"``CsrfViewMiddleware.process_view`` or an equivalent like ``csrf_protect`` "
"has not run. The view decorator ``requires_csrf_token`` can be used to "
"ensure the template tag does work. This decorator works similarly to "
"``csrf_protect``, but never rejects an incoming request."
msgstr ""

msgid "This decorator forces a view to send the CSRF cookie."
msgstr "Penghias ini memaksa sebuah tampilan mengirim kue CSRF."

msgid "Scenarios"
msgstr "Skenario"

msgid "CSRF protection should be disabled for just a few views"
msgstr "Perlindungan CSRF harus ditiadakan untuk hanya sedikit tampilan."

msgid "Most views requires CSRF protection, but a few do not."
msgstr ""
"Kebanyakan tampilan membutuhkan perlindungan CSRF, tetapi sedikit tidak."

msgid ""
"Solution: rather than disabling the middleware and applying ``csrf_protect`` "
"to all the views that need it, enable the middleware and use :func:`~django."
"views.decorators.csrf.csrf_exempt`."
msgstr ""
"Pemecahan: daripada meniadakan middleware dan memberlakukan ``csrf_protect`` "
"ke semua tampilan yang membutuhkan itu, adakan middleware dan gunakan :func:"
"`~django.views.decorators.csrf.csrf_exempt`."

msgid "CsrfViewMiddleware.process_view not used"
msgstr "CsrfViewMiddleware.process_view tidak digunakan"

msgid ""
"There are cases when ``CsrfViewMiddleware.process_view`` may not have run "
"before your view is run - 404 and 500 handlers, for example - but you still "
"need the CSRF token in a form."
msgstr ""
"Ada kasus-kasus ketika ``CsrfViewMiddleware.process_view`` mungkin tidak "
"berjalan sebelum tampilan anda berjalan - penangan 404 dan 500, sebagai "
"contoh - tetapi anda masih butuh token CSRF dalam sebuah formulir."

msgid "Solution: use :func:`~django.views.decorators.csrf.requires_csrf_token`"
msgstr ""
"Pemecahan: gunakan :func:`~django.views.decorators.csrf.requires_csrf_token`"

msgid "Unprotected view needs the CSRF token"
msgstr "Tampilan tidak terlindungi butuh token CSRF"

msgid ""
"There may be some views that are unprotected and have been exempted by "
"``csrf_exempt``, but still need to include the CSRF token."
msgstr ""

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` followed by :"
"func:`~django.views.decorators.csrf.requires_csrf_token`. (i.e. "
"``requires_csrf_token`` should be the innermost decorator)."
msgstr ""
"Pemecahan: gunakan :func:`~django.views.decorators.csrf.csrf_exempt` diikuti "
"oleh :func:`~django.views.decorators.csrf.requires_csrf_token`. (yaitu "
"``requires_csrf_token`` harus berupa penghias paling dalam)."

msgid "View needs protection for one path"
msgstr "Tampilan butuh perlindungan untuk satu jalur"

msgid ""
"A view needs CSRF protection under one set of conditions only, and mustn't "
"have it for the rest of the time."
msgstr ""

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` for the "
"whole view function, and :func:`~django.views.decorators.csrf.csrf_protect` "
"for the path within it that needs protection. Example::"
msgstr ""

msgid "Page uses AJAX without any HTML form"
msgstr ""

msgid ""
"A page makes a POST request via AJAX, and the page does not have an HTML "
"form with a :ttag:`csrf_token` that would cause the required CSRF cookie to "
"be sent."
msgstr ""

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.ensure_csrf_cookie` on "
"the view that sends the page."
msgstr ""

msgid "Contrib and reusable apps"
msgstr ""

msgid ""
"Because it is possible for the developer to turn off the "
"``CsrfViewMiddleware``, all relevant views in contrib apps use the "
"``csrf_protect`` decorator to ensure the security of these applications "
"against CSRF.  It is recommended that the developers of other reusable apps "
"that want the same guarantees also use the ``csrf_protect`` decorator on "
"their views."
msgstr ""

msgid "A number of settings can be used to control Django's CSRF behavior:"
msgstr ""

msgid ":setting:`CSRF_COOKIE_AGE`"
msgstr ":setting:`CSRF_COOKIE_AGE`"

msgid ":setting:`CSRF_COOKIE_DOMAIN`"
msgstr ":setting:`CSRF_COOKIE_DOMAIN`"

msgid ":setting:`CSRF_COOKIE_HTTPONLY`"
msgstr ":setting:`CSRF_COOKIE_HTTPONLY`"

msgid ":setting:`CSRF_COOKIE_NAME`"
msgstr ":setting:`CSRF_COOKIE_NAME`"

msgid ":setting:`CSRF_COOKIE_PATH`"
msgstr ":setting:`CSRF_COOKIE_PATH`"

msgid ":setting:`CSRF_COOKIE_SECURE`"
msgstr ":setting:`CSRF_COOKIE_SECURE`"

msgid ":setting:`CSRF_FAILURE_VIEW`"
msgstr ":setting:`CSRF_FAILURE_VIEW`"

msgid ":setting:`CSRF_HEADER_NAME`"
msgstr ":setting:`CSRF_HEADER_NAME`"

msgid ":setting:`CSRF_TRUSTED_ORIGINS`"
msgstr ":setting:`CSRF_TRUSTED_ORIGINS`"

msgid ":setting:`CSRF_USE_SESSIONS`"
msgstr ":setting:`CSRF_USE_SESSIONS`"

msgid "Frequently Asked Questions"
msgstr "Pertanyaan Sering Ditanya"

msgid ""
"Is posting an arbitrary CSRF token pair (cookie and POST data) a "
"vulnerability?"
msgstr ""

msgid ""
"No, this is by design. Without a man-in-the-middle attack, there is no way "
"for an attacker to send a CSRF token cookie to a victim's browser, so a "
"successful attack would need to obtain the victim's browser's cookie via XSS "
"or similar, in which case an attacker usually doesn't need CSRF attacks."
msgstr ""

msgid ""
"Some security audit tools flag this as a problem but as mentioned before, an "
"attacker cannot steal a user's browser's CSRF cookie. \"Stealing\" or "
"modifying *your own* token using Firebug, Chrome dev tools, etc. isn't a "
"vulnerability."
msgstr ""
"Beberapa alat-alat pemeriksaan keamanan menandai ini sebagai sebuah masalah "
"seperti disebutkan sebelumnya, seorang penyerang tidak dapat mencuri kue "
"CSRF peramban pengguna. \"Stealing\" atau merubah token *milik anda* "
"menggunakan Firebug, alat-alat pengembangan Chrome, dll. tidak rentan."

msgid ""
"Is it a problem that Django's CSRF protection isn't linked to a session by "
"default?"
msgstr ""

msgid ""
"No, this is by design. Not linking CSRF protection to a session allows using "
"the protection on sites such as a `pastebin` that allow submissions from "
"anonymous users which don't have a session."
msgstr ""

msgid ""
"If you wish to store the CSRF token in the user's session, use the :setting:"
"`CSRF_USE_SESSIONS` setting."
msgstr ""

msgid "Why might a user encounter a CSRF validation failure after logging in?"
msgstr ""

msgid ""
"For security reasons, CSRF tokens are rotated each time a user logs in. Any "
"page with a form generated before a login will have an old, invalid CSRF "
"token and need to be reloaded. This might happen if a user uses the back "
"button after a login or if they log in in a different browser tab."
msgstr ""

msgid "Databases"
msgstr "Basisdata"

msgid ""
"Django attempts to support as many features as possible on all database "
"backends. However, not all database backends are alike, and we've had to "
"make design decisions on which features to support and which assumptions we "
"can make safely."
msgstr ""

msgid ""
"This file describes some of the features that might be relevant to Django "
"usage. Of course, it is not intended as a replacement for server-specific "
"documentation or reference manuals."
msgstr ""

msgid "General notes"
msgstr "Catatan umum"

msgid "Persistent connections"
msgstr "Hubungan tetap"

msgid ""
"Persistent connections avoid the overhead of re-establishing a connection to "
"the database in each request. They're controlled by the :setting:"
"`CONN_MAX_AGE` parameter which defines the maximum lifetime of a connection. "
"It can be set independently for each database."
msgstr ""

msgid ""
"The default value is ``0``, preserving the historical behavior of closing "
"the database connection at the end of each request. To enable persistent "
"connections, set :setting:`CONN_MAX_AGE` to a positive number of seconds. "
"For unlimited persistent connections, set it to ``None``."
msgstr ""

msgid "Connection management"
msgstr ""

msgid ""
"Django opens a connection to the database when it first makes a database "
"query. It keeps this connection open and reuses it in subsequent requests. "
"Django closes the connection once it exceeds the maximum age defined by :"
"setting:`CONN_MAX_AGE` or when it isn't usable any longer."
msgstr ""

msgid ""
"In detail, Django automatically opens a connection to the database whenever "
"it needs one and doesn't have one already — either because this is the first "
"connection, or because the previous connection was closed."
msgstr ""

msgid ""
"At the beginning of each request, Django closes the connection if it has "
"reached its maximum age. If your database terminates idle connections after "
"some time, you should set :setting:`CONN_MAX_AGE` to a lower value, so that "
"Django doesn't attempt to use a connection that has been terminated by the "
"database server. (This problem may only affect very low traffic sites.)"
msgstr ""

msgid ""
"At the end of each request, Django closes the connection if it has reached "
"its maximum age or if it is in an unrecoverable error state. If any database "
"errors have occurred while processing the requests, Django checks whether "
"the connection still works, and closes it if it doesn't. Thus, database "
"errors affect at most one request; if the connection becomes unusable, the "
"next request gets a fresh connection."
msgstr ""
"Pada akhir dari setiap permintaan, Django menutup hubungan jika itu telah "
"mencapai umur maksimalnya atau jika itu dalam keadaan kesalahan yang tidak "
"dapat ditutup. Jika kesalahan basisdata apapun telah muncul selagi mengolah "
"permintaan, Django memeriksa apakah hubungan masih bekerja, dan menutup itu "
"jika itu tidak. Dengan demikian, kesalahan basisdata mempengaruhi kebanyakan "
"satu permintaan; jika hubungan menjadi tidak berguna, permintaan selanjutnya "
"mendapatkan hubungan segar."

msgid "Caveats"
msgstr "Peringatan"

msgid ""
"Since each thread maintains its own connection, your database must support "
"at least as many simultaneous connections as you have worker threads."
msgstr ""

msgid ""
"Sometimes a database won't be accessed by the majority of your views, for "
"example because it's the database of an external system, or thanks to "
"caching. In such cases, you should set :setting:`CONN_MAX_AGE` to a low "
"value or even ``0``, because it doesn't make sense to maintain a connection "
"that's unlikely to be reused. This will help keep the number of simultaneous "
"connections to this database small."
msgstr ""

msgid ""
"The development server creates a new thread for each request it handles, "
"negating the effect of persistent connections. Don't enable them during "
"development."
msgstr ""

msgid ""
"When Django establishes a connection to the database, it sets up appropriate "
"parameters, depending on the backend being used. If you enable persistent "
"connections, this setup is no longer repeated every request. If you modify "
"parameters such as the connection's isolation level or time zone, you should "
"either restore Django's defaults at the end of each request, force an "
"appropriate value at the beginning of each request, or disable persistent "
"connections."
msgstr ""

msgid "Encoding"
msgstr ""

msgid ""
"Django assumes that all databases use UTF-8 encoding. Using other encodings "
"may result in unexpected behavior such as \"value too long\" errors from "
"your database for data that is valid in Django. See the database specific "
"notes below for information on how to set up your database correctly."
msgstr ""

msgid "PostgreSQL notes"
msgstr "Catatan PostgreSQL"

msgid ""
"Django supports PostgreSQL 9.3 and higher. `psycopg2`_ 2.5.4 or higher is "
"required, though the latest release is recommended."
msgstr ""

msgid "PostgreSQL connection settings"
msgstr "Pengaturan hubungan PostgreSQL"

msgid "See :setting:`HOST` for details."
msgstr "Lihat :setting:`HOST` untuk rincian."

msgid "Optimizing PostgreSQL's configuration"
msgstr "Mengoptimalkan konfigurasi PostgreSQL"

msgid "Django needs the following parameters for its database connections:"
msgstr "Django butuh parameter berikut untuk hubungan basisdatanya:"

msgid "``client_encoding``: ``'UTF8'``,"
msgstr "``client_encoding``: ``'UTF8'``,"

msgid ""
"``default_transaction_isolation``: ``'read committed'`` by default, or the "
"value set in the connection options (see below),"
msgstr ""

msgid ""
"``timezone``: ``'UTC'`` when :setting:`USE_TZ` is ``True``, value of :"
"setting:`TIME_ZONE` otherwise."
msgstr ""

msgid ""
"If these parameters already have the correct values, Django won't set them "
"for every new connection, which improves performance slightly. You can "
"configure them directly in :file:`postgresql.conf` or more conveniently per "
"database user with `ALTER ROLE`_."
msgstr ""

msgid ""
"Django will work just fine without this optimization, but each new "
"connection will do some additional queries to set these parameters."
msgstr ""

msgid "Isolation level"
msgstr ""

msgid ""
"Like PostgreSQL itself, Django defaults to the ``READ COMMITTED`` `isolation "
"level`_. If you need a higher isolation level such as ``REPEATABLE READ`` or "
"``SERIALIZABLE``, set it in the :setting:`OPTIONS` part of your database "
"configuration in :setting:`DATABASES`::"
msgstr ""

msgid ""
"Under higher isolation levels, your application should be prepared to handle "
"exceptions raised on serialization failures. This option is designed for "
"advanced uses."
msgstr ""

msgid "Indexes for ``varchar`` and ``text`` columns"
msgstr "Indeks untuk kolom ``varchar`` dan ``text``"

msgid ""
"When specifying ``db_index=True`` on your model fields, Django typically "
"outputs a single ``CREATE INDEX`` statement.  However, if the database type "
"for the field is either ``varchar`` or ``text`` (e.g., used by "
"``CharField``, ``FileField``, and ``TextField``), then Django will create an "
"additional index that uses an appropriate `PostgreSQL operator class`_ for "
"the column.  The extra index is necessary to correctly perform lookups that "
"use the ``LIKE`` operator in their SQL, as is done with the ``contains`` and "
"``startswith`` lookup types."
msgstr ""

msgid "Migration operation for adding extensions"
msgstr ""

msgid ""
"If you need to add a PostgreSQL extension (like ``hstore``, ``postgis``, "
"etc.) using a migration, use the :class:`~django.contrib.postgres.operations."
"CreateExtension` operation."
msgstr ""

msgid "Server-side cursors"
msgstr ""

msgid ""
"When using :meth:`QuerySet.iterator() <django.db.models.query.QuerySet."
"iterator>`, Django opens a :ref:`server-side cursor <psycopg2:server-side-"
"cursors>`. By default, PostgreSQL assumes that only the first 10% of the "
"results of cursor queries will be fetched. The query planner spends less "
"time planning the query and starts returning results faster, but this could "
"diminish performance if more than 10% of the results are retrieved. "
"PostgreSQL's assumptions on the number of rows retrieved for a cursor query "
"is controlled with the `cursor_tuple_fraction`_ option."
msgstr ""

msgid "Transaction pooling and server-side cursors"
msgstr ""

msgid ""
"Using a connection pooler in transaction pooling mode (e.g. `pgBouncer`_) "
"requires disabling server-side cursors for that connection."
msgstr ""

msgid ""
"Server-side cursors are local to a connection and remain open at the end of "
"a transaction when :setting:`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` is ``True``. "
"A subsequent transaction may attempt to fetch more results from a server-"
"side cursor. In transaction pooling mode, there's no guarantee that "
"subsequent transactions will use the same connection. If a different "
"connection is used, an error is raised when the transaction references the "
"server-side cursor, because server-side cursors are only accessible in the "
"connection in which they were created."
msgstr ""

msgid ""
"One solution is to disable server-side cursors for a connection in :setting:"
"`DATABASES` by setting :setting:`DISABLE_SERVER_SIDE_CURSORS <DATABASE-"
"DISABLE_SERVER_SIDE_CURSORS>` to ``True``."
msgstr ""

msgid ""
"To benefit from server-side cursors in transaction pooling mode, you could "
"set up :doc:`another connection to the database </topics/db/multi-db>` in "
"order to perform queries that use server-side cursors. This connection needs "
"to either be directly to the database or to a connection pooler in session "
"pooling mode."
msgstr ""

msgid ""
"Another option is to wrap each ``QuerySet`` using server-side cursors in an :"
"func:`~django.db.transaction.atomic` block, because it disables "
"``autocommit`` for the duration of the transaction. This way, the server-"
"side cursor will only live for the duration of the transaction."
msgstr ""

msgid "Manually-specifying values of auto-incrementing primary keys"
msgstr ""

msgid ""
"Django uses PostgreSQL's `SERIAL data type`_ to store auto-incrementing "
"primary keys. A ``SERIAL`` column is populated with values from a "
"`sequence`_ that keeps track of the next available value. Manually assigning "
"a value to an auto-incrementing field doesn't update the field's sequence, "
"which might later cause a conflict. For example::"
msgstr ""

msgid ""
"If you need to specify such values, reset the sequence afterwards to avoid "
"reusing a value that's already in the table. The :djadmin:`sqlsequencereset` "
"management command generates the SQL statements to do that."
msgstr ""

msgid "Test database templates"
msgstr ""

msgid ""
"You can use the :setting:`TEST['TEMPLATE'] <TEST_TEMPLATE>` setting to "
"specify a `template`_ (e.g. ``'template0'``) from which to create a test "
"database."
msgstr ""

msgid "Speeding up test execution with non-durable settings"
msgstr ""

msgid ""
"You can speed up test execution times by `configuring PostgreSQL to be non-"
"durable <https://www.postgresql.org/docs/current/static/non-durability."
"html>`_."
msgstr ""

msgid ""
"This is dangerous: it will make your database more susceptible to data loss "
"or corruption in the case of a server crash or power loss. Only use this on "
"a development machine where you can easily restore the entire contents of "
"all databases in the cluster."
msgstr ""

msgid "MySQL notes"
msgstr "Catatan MySQL"

msgid "Version support"
msgstr "Versi dukungan"

msgid "Django supports MySQL 5.5 and higher."
msgstr "Django mendukung MySQL 5.5 dan lebih tinggi."

msgid ""
"Django's ``inspectdb`` feature uses the ``information_schema`` database, "
"which contains detailed data on all database schemas."
msgstr ""

msgid ""
"Django expects the database to support Unicode (UTF-8 encoding) and "
"delegates to it the task of enforcing transactions and referential "
"integrity. It is important to be aware of the fact that the two latter ones "
"aren't actually enforced by MySQL when using the MyISAM storage engine, see "
"the next section."
msgstr ""

msgid "Storage engines"
msgstr "Mesin penyimpanan"

msgid ""
"MySQL has several `storage engines`_. You can change the default storage "
"engine in the server configuration."
msgstr ""

msgid ""
"Until MySQL 5.5.4, the default engine was MyISAM_ [#]_. The main drawbacks "
"of MyISAM are that it doesn't support transactions or enforce foreign-key "
"constraints. On the plus side, it was the only engine that supported full-"
"text indexing and searching until MySQL 5.6.4."
msgstr ""

msgid ""
"Since MySQL 5.5.5, the default storage engine is InnoDB_. This engine is "
"fully transactional and supports foreign key references. It's probably the "
"best choice at this point. However, note that the InnoDB autoincrement "
"counter is lost on a MySQL restart because it does not remember the "
"``AUTO_INCREMENT`` value, instead recreating it as \"max(id)+1\". This may "
"result in an inadvertent reuse of :class:`~django.db.models.AutoField` "
"values."
msgstr ""

msgid ""
"If you upgrade an existing project to MySQL 5.5.5 and subsequently add some "
"tables, ensure that your tables are using the same storage engine (i.e. "
"MyISAM vs. InnoDB). Specifically, if tables that have a ``ForeignKey`` "
"between them use different storage engines, you may see an error like the "
"following when running ``migrate``::"
msgstr ""

msgid ""
"Unless this was changed by the packager of your MySQL package. We've had "
"reports that the Windows Community Server installer sets up InnoDB as the "
"default storage engine, for example."
msgstr ""

msgid "MySQL DB API Drivers"
msgstr ""

msgid ""
"The Python Database API is described in :pep:`249`. MySQL has three "
"prominent drivers that implement this API:"
msgstr ""

msgid ""
"`MySQLdb`_ is a native driver that has been developed and supported for over "
"a decade by Andy Dustman."
msgstr ""

msgid ""
"`mysqlclient`_ is a fork of ``MySQLdb`` which notably supports Python 3 and "
"can be used as a drop-in replacement for MySQLdb. At the time of this "
"writing, this is **the recommended choice** for using MySQL with Django."
msgstr ""

msgid ""
"`MySQL Connector/Python`_ is a pure Python driver from Oracle that does not "
"require the MySQL client library or any Python modules outside the standard "
"library."
msgstr ""

msgid ""
"All these drivers are thread-safe and provide connection pooling. "
"``MySQLdb`` is the only one not supporting Python 3 currently."
msgstr ""

msgid ""
"In addition to a DB API driver, Django needs an adapter to access the "
"database drivers from its ORM. Django provides an adapter for MySQLdb/"
"mysqlclient while MySQL Connector/Python includes `its own`_."
msgstr ""

msgid "MySQLdb"
msgstr "Basisdata MySQL"

msgid "Django requires MySQLdb version 1.2.3 or later."
msgstr ""

msgid ""
"At the time of writing, the latest release of MySQLdb (1.2.5) doesn't "
"support Python 3. In order to use MySQLdb under Python 3, you'll have to "
"install ``mysqlclient`` instead."
msgstr ""

msgid ""
"There are known issues with the way MySQLdb converts date strings into "
"datetime objects. Specifically, date strings with value ``0000-00-00`` are "
"valid for MySQL but will be converted into ``None`` by MySQLdb."
msgstr ""

msgid ""
"This means you should be careful while using :djadmin:`loaddata` and :"
"djadmin:`dumpdata` with rows that may have ``0000-00-00`` values, as they "
"will be converted to ``None``."
msgstr ""

msgid "mysqlclient"
msgstr "mysqlclient"

msgid ""
"Django requires `mysqlclient`_ 1.3.3 or later. mysqlclient should mostly "
"behave the same as MySQLdb."
msgstr ""

msgid "MySQL Connector/Python"
msgstr ""

msgid ""
"MySQL Connector/Python is available from the `download page`_. The Django "
"adapter is available in versions 1.1.X and later. It may not support the "
"most recent releases of Django."
msgstr ""

msgid "Time zone definitions"
msgstr "Pengertian zona waktu"

msgid ""
"If you plan on using Django's :doc:`timezone support </topics/i18n/"
"timezones>`, use `mysql_tzinfo_to_sql`_ to load time zone tables into the "
"MySQL database. This needs to be done just once for your MySQL server, not "
"per database."
msgstr ""
"Jika anda berencana menggunakan dukungan :doc:`timezone Django </topics/i18n/"
"timezones>`, gunakan `mysql_tzinfo_to_sql`_ untuk memuat tabel zona waktu "
"kedalam basisdata MySQL. Ini harus dilakukan hanya sekali untuk peladen "
"MySQL anda, bukan per basisdata."

msgid "Creating your database"
msgstr "Membuat basisdata anda"

msgid ""
"You can `create your database`_ using the command-line tools and this SQL::"
msgstr ""
"Anda dapat `membuat basisdata anda`_ menggunakan alat baris-perintah dan SQL "
"ini::"

msgid "This ensures all tables and columns will use UTF-8 by default."
msgstr ""
"Ini memastikan semua tabel dan kolom akan menggunakan UTF-8 secara awal."

msgid "Collation settings"
msgstr "Pengaturan pemeriksaan"

msgid ""
"The collation setting for a column controls the order in which data is "
"sorted as well as what strings compare as equal. It can be set on a database-"
"wide level and also per-table and per-column. This is `documented "
"thoroughly`_ in the MySQL documentation. In all cases, you set the collation "
"by directly manipulating the database tables; Django doesn't provide a way "
"to set this on the model definition."
msgstr ""

msgid ""
"By default, with a UTF-8 database, MySQL will use the ``utf8_general_ci`` "
"collation. This results in all string equality comparisons being done in a "
"*case-insensitive* manner. That is, ``\"Fred\"`` and ``\"freD\"`` are "
"considered equal at the database level. If you have a unique constraint on a "
"field, it would be illegal to try to insert both ``\"aa\"`` and ``\"AA\"`` "
"into the same column, since they compare as equal (and, hence, non-unique) "
"with the default collation. If you want case-sensitive comparisons on a "
"particular column or table, change the column or table to use the "
"``utf8_bin`` collation."
msgstr ""

msgid ""
"Please note that according to `MySQL Unicode Character Sets`_, comparisons "
"for the ``utf8_general_ci`` collation are faster, but slightly less correct, "
"than comparisons for ``utf8_unicode_ci``. If this is acceptable for your "
"application, you should use ``utf8_general_ci`` because it is faster. If "
"this is not acceptable (for example, if you require German dictionary "
"order), use ``utf8_unicode_ci`` because it is more accurate."
msgstr ""

msgid ""
"Model formsets validate unique fields in a case-sensitive manner. Thus when "
"using a case-insensitive collation, a formset with unique field values that "
"differ only by case will pass validation, but upon calling ``save()``, an "
"``IntegrityError`` will be raised."
msgstr ""

msgid "Connecting to the database"
msgstr "Menyambung ke basisdata"

msgid "Refer to the :doc:`settings documentation </ref/settings>`."
msgstr "Mengacu ke :doc:`pengaturan dokumentasi </ref/settings>`."

msgid "Connection settings are used in this order:"
msgstr ""

msgid ":setting:`OPTIONS`."
msgstr ":setting:`OPTIONS`."

msgid ""
":setting:`NAME`, :setting:`USER`, :setting:`PASSWORD`, :setting:`HOST`, :"
"setting:`PORT`"
msgstr ""
":setting:`NAME`, :setting:`USER`, :setting:`PASSWORD`, :setting:`HOST`, :"
"setting:`PORT`"

msgid "MySQL option files."
msgstr "Berkas pilihan MySQL."

msgid ""
"In other words, if you set the name of the database in :setting:`OPTIONS`, "
"this will take precedence over :setting:`NAME`, which would override "
"anything in a `MySQL option file`_."
msgstr ""

msgid "Here's a sample configuration which uses a MySQL option file::"
msgstr ""

msgid ""
"Several other `MySQLdb connection options`_ may be useful, such as ``ssl``, "
"``init_command``, and ``sql_mode``."
msgstr ""

msgid "Setting ``sql_mode``"
msgstr "Mengatur ``sql_mode``"

msgid ""
"From MySQL 5.7 onwards and on fresh installs of MySQL 5.6, the default value "
"of the ``sql_mode`` option contains ``STRICT_TRANS_TABLES``. That option "
"escalates warnings into errors when data are truncated upon insertion, so "
"Django highly recommends activating a `strict mode`_ for MySQL to prevent "
"data loss (either ``STRICT_TRANS_TABLES`` or ``STRICT_ALL_TABLES``)."
msgstr ""

msgid ""
"If you need to customize the SQL mode, you can set the ``sql_mode`` variable "
"like other MySQL options: either in a config file or with the entry "
"``'init_command': \"SET sql_mode='STRICT_TRANS_TABLES'\"`` in the :setting:"
"`OPTIONS` part of your database configuration in :setting:`DATABASES`."
msgstr ""

msgid ""
"When running concurrent loads, database transactions from different sessions "
"(say, separate threads handling different requests) may interact with each "
"other. These interactions are affected by each session's `transaction "
"isolation level`_. You can set a connection's isolation level with an "
"``'isolation_level'`` entry in the :setting:`OPTIONS` part of your database "
"configuration in :setting:`DATABASES`. Valid values for this entry are the "
"four standard isolation levels:"
msgstr ""

msgid "``'read uncommitted'``"
msgstr ""

msgid "``'read committed'``"
msgstr ""

msgid "``'repeatable read'``"
msgstr ""

msgid "``'serializable'``"
msgstr ""

msgid ""
"or ``None`` to use the server's configured isolation level. However, Django "
"works best with read committed rather than MySQL's default, repeatable read. "
"Data loss is possible with repeatable read."
msgstr ""

msgid "Creating your tables"
msgstr "Membuat tabel anda"

msgid ""
"When Django generates the schema, it doesn't specify a storage engine, so "
"tables will be created with whatever default storage engine your database "
"server is configured for. The easiest solution is to set your database "
"server's default storage engine to the desired engine."
msgstr ""

msgid ""
"If you're using a hosting service and can't change your server's default "
"storage engine, you have a couple of options."
msgstr ""

msgid ""
"After the tables are created, execute an ``ALTER TABLE`` statement to "
"convert a table to a new storage engine (such as InnoDB)::"
msgstr ""

msgid "This can be tedious if you have a lot of tables."
msgstr ""

msgid ""
"Another option is to use the ``init_command`` option for MySQLdb prior to "
"creating your tables::"
msgstr ""

msgid ""
"This sets the default storage engine upon connecting to the database. After "
"your tables have been created, you should remove this option as it adds a "
"query that is only needed during table creation to each database connection."
msgstr ""

msgid "Table names"
msgstr "Nama tabel"

msgid ""
"There are `known issues`_ in even the latest versions of MySQL that can "
"cause the case of a table name to be altered when certain SQL statements are "
"executed under certain conditions. It is recommended that you use lowercase "
"table names, if possible, to avoid any problems that might arise from this "
"behavior. Django uses lowercase table names when it auto-generates table "
"names from models, so this is mainly a consideration if you are overriding "
"the table name via the :class:`~django.db.models.Options.db_table` parameter."
msgstr ""

msgid "Savepoints"
msgstr "Savepoint"

msgid ""
"Both the Django ORM and MySQL (when using the InnoDB :ref:`storage engine "
"<mysql-storage-engines>`) support database :ref:`savepoints <topics-db-"
"transactions-savepoints>`."
msgstr ""

msgid ""
"If you use the MyISAM storage engine please be aware of the fact that you "
"will receive database-generated errors if you try to use the :ref:`savepoint-"
"related methods of the transactions API <topics-db-transactions-"
"savepoints>`. The reason for this is that detecting the storage engine of a "
"MySQL database/table is an expensive operation so it was decided it isn't "
"worth to dynamically convert these methods in no-op's based in the results "
"of such detection."
msgstr ""

msgid "Notes on specific fields"
msgstr ""

msgid "Character fields"
msgstr ""

msgid ""
"Any fields that are stored with ``VARCHAR`` column types have their "
"``max_length`` restricted to 255 characters if you are using ``unique=True`` "
"for the field. This affects :class:`~django.db.models.CharField`, :class:"
"`~django.db.models.SlugField` and :class:`~django.db.models."
"CommaSeparatedIntegerField`."
msgstr ""

msgid "``TextField`` limitations"
msgstr "Batasan ``TextField``"

msgid ""
"MySQL can index only the first N chars of a ``BLOB`` or ``TEXT`` column. "
"Since ``TextField`` doesn't have a defined length, you can't mark it as "
"``unique=True``. MySQL will report: \"BLOB/TEXT column '<db_column>' used in "
"key specification without a key length\"."
msgstr ""

msgid "Fractional seconds support for Time and DateTime fields"
msgstr ""

msgid ""
"MySQL 5.6.4 and later can store fractional seconds, provided that the column "
"definition includes a fractional indication (e.g. ``DATETIME(6)``). Earlier "
"versions do not support them at all. In addition, versions of MySQLdb older "
"than 1.2.5 have `a bug`_ that also prevents the use of fractional seconds "
"with MySQL."
msgstr ""

msgid ""
"Django will not upgrade existing columns to include fractional seconds if "
"the database server supports it. If you want to enable them on an existing "
"database, it's up to you to either manually update the column on the target "
"database, by executing a command like::"
msgstr ""

msgid ""
"or using a :class:`~django.db.migrations.operations.RunSQL` operation in a :"
"ref:`data migration <data-migrations>`."
msgstr ""

msgid "``TIMESTAMP`` columns"
msgstr "Kolom ``TIMESTAMP``"

msgid ""
"If you are using a legacy database that contains ``TIMESTAMP`` columns, you "
"must set :setting:`USE_TZ = False <USE_TZ>` to avoid data corruption. :"
"djadmin:`inspectdb` maps these columns to :class:`~django.db.models."
"DateTimeField` and if you enable timezone support, both MySQL and Django "
"will attempt to convert the values from UTC to local time."
msgstr ""

msgid "Row locking with ``QuerySet.select_for_update()``"
msgstr ""

msgid ""
"MySQL does not support the ``NOWAIT`` and ``SKIP LOCKED`` options to the "
"``SELECT ... FOR UPDATE`` statement. If ``select_for_update()`` is used with "
"``nowait=True`` or ``skip_locked=True`` then a ``DatabaseError`` will be "
"raised."
msgstr ""

msgid "Automatic typecasting can cause unexpected results"
msgstr ""

msgid ""
"When performing a query on a string type, but with an integer value, MySQL "
"will coerce the types of all values in the table to an integer before "
"performing the comparison. If your table contains the values ``'abc'``, "
"``'def'`` and you query for ``WHERE mycolumn=0``, both rows will match. "
"Similarly, ``WHERE mycolumn=1`` will match the value ``'abc1'``. Therefore, "
"string type fields included in Django will always cast the value to a string "
"before using it in a query."
msgstr ""

msgid ""
"If you implement custom model fields that inherit from :class:`~django.db."
"models.Field` directly, are overriding :meth:`~django.db.models.Field."
"get_prep_value`, or use :class:`~django.db.models.expressions.RawSQL`, :meth:"
"`~django.db.models.query.QuerySet.extra`, or :meth:`~django.db.models."
"Manager.raw`, you should ensure that you perform appropriate typecasting."
msgstr ""

msgid "SQLite notes"
msgstr "Catatan SQLite"

msgid ""
"SQLite_ provides an excellent development alternative for applications that "
"are predominantly read-only or require a smaller installation footprint. As "
"with all database servers, though, there are some differences that are "
"specific to SQLite that you should be aware of."
msgstr ""

msgid "Substring matching and case sensitivity"
msgstr ""

msgid ""
"For all SQLite versions, there is some slightly counter-intuitive behavior "
"when attempting to match some types of strings.  These are triggered when "
"using the :lookup:`iexact` or :lookup:`contains` filters in Querysets. The "
"behavior splits into two cases:"
msgstr ""

msgid ""
"1. For substring matching, all matches are done case-insensitively. That is "
"a filter such as ``filter(name__contains=\"aa\")`` will match a name of ``"
"\"Aabb\"``."
msgstr ""

msgid ""
"2. For strings containing characters outside the ASCII range, all exact "
"string matches are performed case-sensitively, even when the case-"
"insensitive options are passed into the query. So the :lookup:`iexact` "
"filter will behave exactly the same as the :lookup:`exact` filter in these "
"cases."
msgstr ""

msgid ""
"Some possible workarounds for this are `documented at sqlite.org`_, but they "
"aren't utilized by the default SQLite backend in Django, as incorporating "
"them would be fairly difficult to do robustly. Thus, Django exposes the "
"default SQLite behavior and you should be aware of this when doing case-"
"insensitive or substring filtering."
msgstr ""

msgid "Old SQLite and ``CASE`` expressions"
msgstr ""

msgid ""
"SQLite 3.6.23.1 and older contains a bug when `handling query parameters`_ "
"in a ``CASE`` expression that contains an ``ELSE`` and arithmetic."
msgstr ""

msgid ""
"SQLite 3.6.23.1 was released in March 2010, and most current binary "
"distributions for different platforms include a newer version of SQLite, "
"with the notable exception of the Python 2.7 installers for Windows."
msgstr ""
"SQLite 3.6.23.1 telah diterbitkan di Maret 2010, dan kebanyakan penyaluran "
"biner sekarang untuk serambi berbeda termasuk versi terbaru dari SQLite, "
"dengan catatan pengecualian dari pemasang Python 2.7 untuk Windows."

msgid ""
"As of this writing, the latest release for Windows - Python 2.7.10 - "
"includes SQLite 3.6.21. You can install ``pysqlite2`` or replace ``sqlite3."
"dll`` (by default installed in ``C:\\Python27\\DLLs``) with a newer version "
"from https://www.sqlite.org/ to remedy this issue."
msgstr ""

msgid "Using newer versions of the SQLite DB-API 2.0 driver"
msgstr ""

msgid ""
"Django will use a ``pysqlite2`` module in preference to ``sqlite3`` as "
"shipped with the Python standard library if it finds one is available."
msgstr ""

msgid ""
"This provides the ability to upgrade both the DB-API 2.0 interface or SQLite "
"3 itself to versions newer than the ones included with your particular "
"Python binary distribution, if needed."
msgstr ""

msgid "\"Database is locked\" errors"
msgstr "Kesalahan \"Basisdata terkunci\""

msgid ""
"SQLite is meant to be a lightweight database, and thus can't support a high "
"level of concurrency. ``OperationalError: database is locked`` errors "
"indicate that your application is experiencing more concurrency than "
"``sqlite`` can handle in default configuration. This error means that one "
"thread or process has an exclusive lock on the database connection and "
"another thread timed out waiting for the lock the be released."
msgstr ""

msgid ""
"Python's SQLite wrapper has a default timeout value that determines how long "
"the second thread is allowed to wait on the lock before it times out and "
"raises the ``OperationalError: database is locked`` error."
msgstr ""

msgid "If you're getting this error, you can solve it by:"
msgstr ""
"Jika anda mendapatkan kesalahan ini, anda dapat menyelesaikannya dengan:"

msgid ""
"Switching to another database backend. At a certain point SQLite becomes too "
"\"lite\" for real-world applications, and these sorts of concurrency errors "
"indicate you've reached that point."
msgstr ""

msgid ""
"Rewriting your code to reduce concurrency and ensure that database "
"transactions are short-lived."
msgstr ""

msgid ""
"Increase the default timeout value by setting the ``timeout`` database "
"option::"
msgstr ""

msgid ""
"This will simply make SQLite wait a bit longer before throwing \"database is "
"locked\" errors; it won't really do anything to solve them."
msgstr ""

msgid "``QuerySet.select_for_update()`` not supported"
msgstr "``QuerySet.select_for_update()`` tidak didukung"

msgid ""
"SQLite does not support the ``SELECT ... FOR UPDATE`` syntax. Calling it "
"will have no effect."
msgstr ""

msgid "\"pyformat\" parameter style in raw queries not supported"
msgstr ""

msgid ""
"For most backends, raw queries (``Manager.raw()`` or ``cursor.execute()``) "
"can use the \"pyformat\" parameter style, where placeholders in the query "
"are given as ``'%(name)s'`` and the parameters are passed as a dictionary "
"rather than a list. SQLite does not support this."
msgstr ""

msgid "Oracle notes"
msgstr "Catatan Oracle"

msgid ""
"Django supports `Oracle Database Server`_ versions 11.2 and higher. Version "
"5.2 or higher of the `cx_Oracle`_ Python driver is required."
msgstr ""

msgid ""
"In order for the ``python manage.py migrate`` command to work, your Oracle "
"database user must have privileges to run the following commands:"
msgstr ""

msgid "CREATE TABLE"
msgstr "CREATE TABLE"

msgid "CREATE SEQUENCE"
msgstr "CREATE SEQUENCE"

msgid "CREATE PROCEDURE"
msgstr "CREATE PROCEDURE"

msgid "CREATE TRIGGER"
msgstr "CREATE TRIGGER"

msgid ""
"To run a project's test suite, the user usually needs these *additional* "
"privileges:"
msgstr ""

msgid "CREATE USER"
msgstr "CREATE USER"

msgid "ALTER USER"
msgstr ""

msgid "DROP USER"
msgstr "DROP USER"

msgid "CREATE TABLESPACE"
msgstr "CREATE TABLESPACE"

msgid "DROP TABLESPACE"
msgstr "DROP TABLESPACE"

msgid "CREATE SESSION WITH ADMIN OPTION"
msgstr ""

msgid "CREATE TABLE WITH ADMIN OPTION"
msgstr ""

msgid "CREATE SEQUENCE WITH ADMIN OPTION"
msgstr ""

msgid "CREATE PROCEDURE WITH ADMIN OPTION"
msgstr ""

msgid "CREATE TRIGGER WITH ADMIN OPTION"
msgstr ""

msgid ""
"Note that, while the RESOURCE role has the required CREATE TABLE, CREATE "
"SEQUENCE, CREATE PROCEDURE and CREATE TRIGGER privileges, and a user granted "
"RESOURCE WITH ADMIN OPTION can grant RESOURCE, such a user cannot grant the "
"individual privileges (e.g. CREATE TABLE), and thus RESOURCE WITH ADMIN "
"OPTION is not usually sufficient for running tests."
msgstr ""

msgid ""
"Some test suites also create views; to run these, the user also needs the "
"CREATE VIEW WITH ADMIN OPTION privilege. In particular, this is needed for "
"Django's own test suite."
msgstr ""

msgid ""
"All of these privileges are included in the DBA role, which is appropriate "
"for use on a private developer's database."
msgstr ""

msgid ""
"The Oracle database backend uses the ``SYS.DBMS_LOB`` and ``SYS."
"DBMS_RANDOM`` packages, so your user will require execute permissions on it. "
"It's normally accessible to all users by default, but in case it is not, "
"you'll need to grant permissions like so:"
msgstr ""
"Backend basisdata Oracle menggunakan paket ``SYS.DBMS_LOB`` dan ``SYS."
"DBMS_RANDOM``, jadi pengguna anda akan membutuhkan menjalankan perizinan "
"padanya. Itu secara biasa dapat diakses ke semua pengguna secara awal, "
"tetapi di kasus itu tidak, anda akan butuh memberikan perizinan seperti itu:"

msgid ""
"To connect using the service name of your Oracle database, your ``settings."
"py`` file should look something like this::"
msgstr ""

msgid ""
"In this case, you should leave both :setting:`HOST` and :setting:`PORT` "
"empty. However, if you don't use a ``tnsnames.ora`` file or a similar naming "
"method and want to connect using the SID (\"xe\" in this example), then fill "
"in both :setting:`HOST` and :setting:`PORT` like so::"
msgstr ""

msgid ""
"You should either supply both :setting:`HOST` and :setting:`PORT`, or leave "
"both as empty strings. Django will use a different connect descriptor "
"depending on that choice."
msgstr ""

msgid "Threaded option"
msgstr ""

msgid ""
"If you plan to run Django in a multithreaded environment (e.g. Apache using "
"the default MPM module on any modern operating system), then you **must** "
"set the ``threaded`` option of your Oracle database configuration to True::"
msgstr ""

msgid "Failure to do this may result in crashes and other odd behavior."
msgstr ""

msgid "INSERT ... RETURNING INTO"
msgstr "INSERT ... RETURNING INTO"

msgid ""
"By default, the Oracle backend uses a ``RETURNING INTO`` clause to "
"efficiently retrieve the value of an ``AutoField`` when inserting new rows.  "
"This behavior may result in a ``DatabaseError`` in certain unusual setups, "
"such as when inserting into a remote table, or into a view with an ``INSTEAD "
"OF`` trigger. The ``RETURNING INTO`` clause can be disabled by setting the "
"``use_returning_into`` option of the database configuration to False::"
msgstr ""

msgid ""
"In this case, the Oracle backend will use a separate ``SELECT`` query to "
"retrieve AutoField values."
msgstr ""

msgid "Naming issues"
msgstr "Masalah penamaan"

msgid ""
"Oracle imposes a name length limit of 30 characters. To accommodate this, "
"the backend truncates database identifiers to fit, replacing the final four "
"characters of the truncated name with a repeatable MD5 hash value. "
"Additionally, the backend turns database identifiers to all-uppercase."
msgstr ""

msgid ""
"To prevent these transformations (this is usually required only when dealing "
"with legacy databases or accessing tables which belong to other users), use "
"a quoted name as the value for ``db_table``::"
msgstr ""

msgid ""
"Quoted names can also be used with Django's other supported database "
"backends; except for Oracle, however, the quotes have no effect."
msgstr ""

msgid ""
"When running ``migrate``, an ``ORA-06552`` error may be encountered if "
"certain Oracle keywords are used as the name of a model field or the value "
"of a ``db_column`` option.  Django quotes all identifiers used in queries to "
"prevent most such problems, but this error can still occur when an Oracle "
"datatype is used as a column name.  In particular, take care to avoid using "
"the names ``date``, ``timestamp``, ``number`` or ``float`` as a field name."
msgstr ""

msgid "NULL and empty strings"
msgstr ""

msgid ""
"Django generally prefers to use the empty string ('') rather than NULL, but "
"Oracle treats both identically. To get around this, the Oracle backend "
"ignores an explicit ``null`` option on fields that have the empty string as "
"a possible value and generates DDL as if ``null=True``. When fetching from "
"the database, it is assumed that a ``NULL`` value in one of these fields "
"really means the empty string, and the data is silently converted to reflect "
"this assumption."
msgstr ""

msgid ""
"The Oracle backend stores ``TextFields`` as ``NCLOB`` columns. Oracle "
"imposes some limitations on the usage of such LOB columns in general:"
msgstr ""

msgid "LOB columns may not be used as primary keys."
msgstr ""

msgid "LOB columns may not be used in indexes."
msgstr ""

msgid ""
"LOB columns may not be used in a ``SELECT DISTINCT`` list. This means that "
"attempting to use the ``QuerySet.distinct`` method on a model that includes "
"``TextField`` columns will result in an ``ORA-00932`` error when run against "
"Oracle. As a workaround, use the ``QuerySet.defer`` method in conjunction "
"with ``distinct()`` to prevent ``TextField`` columns from being included in "
"the ``SELECT DISTINCT`` list."
msgstr ""

msgid "Using a 3rd-party database backend"
msgstr "Menggunakan backend basisdata pihak ketiga"

msgid ""
"In addition to the officially supported databases, there are backends "
"provided by 3rd parties that allow you to use other databases with Django:"
msgstr ""

msgid "`SAP SQL Anywhere`_"
msgstr "`SAP SQL Anywhere`_"

msgid "`IBM DB2`_"
msgstr "`IBM DB2`_"

msgid "`Microsoft SQL Server`_"
msgstr "`Microsoft SQL Server`_"

msgid "Firebird_"
msgstr "Firebird_"

msgid "ODBC_"
msgstr "ODBC_"

msgid ""
"The Django versions and ORM features supported by these unofficial backends "
"vary considerably. Queries regarding the specific capabilities of these "
"unofficial backends, along with any support queries, should be directed to "
"the support channels provided by each 3rd party project."
msgstr ""

msgid "``django-admin`` and ``manage.py``"
msgstr "``django-admin`` dan ``manage.py``"

msgid ""
"``django-admin`` is Django's command-line utility for administrative tasks. "
"This document outlines all it can do."
msgstr ""

msgid ""
"In addition, ``manage.py`` is automatically created in each Django project. "
"``manage.py`` does the same thing as ``django-admin`` but takes care of a "
"few things for you:"
msgstr ""

msgid "It puts your project's package on ``sys.path``."
msgstr ""

msgid ""
"It sets the :envvar:`DJANGO_SETTINGS_MODULE` environment variable so that it "
"points to your project's ``settings.py`` file."
msgstr ""

msgid ""
"The ``django-admin`` script should be on your system path if you installed "
"Django via its ``setup.py`` utility. If it's not on your path, you can find "
"it in ``site-packages/django/bin`` within your Python installation. Consider "
"symlinking it from some place on your path, such as ``/usr/local/bin``."
msgstr ""

msgid ""
"For Windows users, who do not have symlinking functionality available, you "
"can copy ``django-admin.exe`` to a location on your existing path or edit "
"the ``PATH`` settings (under ``Settings - Control Panel - System - Advanced "
"- Environment...``) to point to its installed location."
msgstr ""

msgid ""
"Generally, when working on a single Django project, it's easier to use "
"``manage.py`` than ``django-admin``. If you need to switch between multiple "
"Django settings files, use ``django-admin`` with :envvar:"
"`DJANGO_SETTINGS_MODULE` or the :option:`--settings` command line option."
msgstr ""

msgid ""
"The command-line examples throughout this document use ``django-admin`` to "
"be consistent, but any example can use ``manage.py`` or ``python -m django`` "
"just as well."
msgstr ""

msgid ""
"``command`` should be one of the commands listed in this document. "
"``options``, which is optional, should be zero or more of the options "
"available for the given command."
msgstr ""

msgid "Getting runtime help"
msgstr ""

msgid ""
"Run ``django-admin help`` to display usage information and a list of the "
"commands provided by each application."
msgstr ""

msgid ""
"Run ``django-admin help --commands`` to display a list of all available "
"commands."
msgstr ""
"Jalankan ``django-admin help --commands`` untuk menampilkan daftar dari "
"perintah tersedia."

msgid ""
"Run ``django-admin help <command>`` to display a description of the given "
"command and a list of its available options."
msgstr ""

msgid "App names"
msgstr "Nama aplikasi"

msgid ""
"Many commands take a list of \"app names.\" An \"app name\" is the basename "
"of the package containing your models. For example, if your :setting:"
"`INSTALLED_APPS` contains the string ``'mysite.blog'``, the app name is "
"``blog``."
msgstr ""

msgid "Determining the version"
msgstr "Menentukan versi"

msgid "Run ``django-admin version`` to display the current Django version."
msgstr ""
"Jalankan ``django-admin version`` untuk menjalankan versi Django saat ini."

msgid "The output follows the schema described in :pep:`440`::"
msgstr ""

msgid "Displaying debug output"
msgstr ""

msgid ""
"Use :option:`--verbosity` to specify the amount of notification and debug "
"information that ``django-admin`` prints to the console."
msgstr ""

msgid "Available commands"
msgstr "Perintah tersedia"

msgid "``check``"
msgstr "``check``"

msgid ""
"Uses the :doc:`system check framework </ref/checks>` to inspect the entire "
"Django project for common problems."
msgstr ""
"Menggunakan :doc:`system check framework </ref/checks>` untuk memeriksa "
"keseluruhan proyek Django untuk masalah-masalah umum."

msgid ""
"By default, all apps will be checked. You can check a subset of apps by "
"providing a list of app labels as arguments::"
msgstr ""

msgid "If you do not specify any app, all apps will be checked."
msgstr ""
"Jika anda tidak menentukan setiap aplikasi, semua aplikasi akan diperiksa."

msgid ""
"The system check framework performs many different types of checks that are :"
"ref:`categorized with tags <system-check-builtin-tags>`. You can use these "
"tags to restrict the checks performed to just those in a particular "
"category. For example, to perform only models and compatibility checks, run::"
msgstr ""
"Kerangka sistem pemeriksaan melakukan banyak jenis-jenis berbeda dari "
"pemeriksaan yang :ref:`categorized with tags <system-check-builtin-tags>`. "
"Anda dapat menggunakan etiket-etiket ini untuk membatasi pemeriksaan "
"dilakukan untuk hanya di kategori tertentu. Sebagai contoh, untuk hanya "
"melakukan pemeriksaan model dan kesesuaian, jalankan::"

msgid "Lists all available tags."
msgstr "Daftarkan semua etiket tersedia."

msgid ""
"Activates some additional checks that are only relevant in a deployment "
"setting."
msgstr ""
"Mengaktifkan beberapa pemeriksaan tambahan yang hanya bersangkutan dalam "
"pengaturan pengembangan."

msgid ""
"You can use this option in your local development environment, but since "
"your local development settings module may not have many of your production "
"settings, you will probably want to point the ``check`` command at a "
"different settings module, either by setting the ``DJANGO_SETTINGS_MODULE`` "
"environment variable, or by passing the ``--settings`` option::"
msgstr ""

msgid ""
"Or you could run it directly on a production or staging deployment to verify "
"that the correct settings are in use (omitting ``--settings``). You could "
"even make it part of your integration test suite."
msgstr ""

msgid ""
"Specifies the message level that will cause the command to exit with a non-"
"zero status. Default is ``ERROR``."
msgstr ""

msgid "``compilemessages``"
msgstr "``compilemessages``"

msgid ""
"Compiles ``.po`` files created by :djadmin:`makemessages` to ``.mo`` files "
"for use with the built-in gettext support. See :doc:`/topics/i18n/index`."
msgstr ""

msgid ""
"Specifies the locale(s) to process. If not provided, all locales are "
"processed."
msgstr ""

msgid ""
"Specifies the locale(s) to exclude from processing. If not provided, no "
"locales are excluded."
msgstr ""

msgid "Includes fuzzy translations into compiled files."
msgstr ""

msgid "``createcachetable``"
msgstr "``createcachetable``"

msgid ""
"Creates the cache tables for use with the database cache backend using the "
"information from your settings file. See :doc:`/topics/cache` for more "
"information."
msgstr ""

msgid ""
"Specifies the database in which the cache table(s) will be created. Defaults "
"to ``default``."
msgstr ""

msgid ""
"Prints the SQL that would be run without actually running it, so you can "
"customize it or use the migrations framework."
msgstr ""

msgid "``dbshell``"
msgstr "``dbshell``"

msgid ""
"Runs the command-line client for the database engine specified in your :"
"setting:`ENGINE <DATABASE-ENGINE>` setting, with the connection parameters "
"specified in your :setting:`USER`, :setting:`PASSWORD`, etc., settings."
msgstr ""

msgid "For PostgreSQL, this runs the ``psql`` command-line client."
msgstr ""

msgid "For MySQL, this runs the ``mysql`` command-line client."
msgstr ""

msgid "For SQLite, this runs the ``sqlite3`` command-line client."
msgstr ""

msgid "For Oracle, this runs the ``sqlplus`` command-line client."
msgstr ""

msgid ""
"This command assumes the programs are on your ``PATH`` so that a simple call "
"to the program name (``psql``, ``mysql``, ``sqlite3``, ``sqlplus``) will "
"find the program in the right place. There's no way to specify the location "
"of the program manually."
msgstr ""

msgid ""
"Specifies the database onto which to open a shell. Defaults to ``default``."
msgstr ""

msgid "``diffsettings``"
msgstr "``diffsettings``"

msgid ""
"Displays differences between the current settings file and Django's default "
"settings (or another settings file specified by :option:`--default`)."
msgstr ""

msgid ""
"Settings that don't appear in the defaults are followed by ``\"###\"``. For "
"example, the default settings don't define :setting:`ROOT_URLCONF`, so :"
"setting:`ROOT_URLCONF` is followed by ``\"###\"`` in the output of "
"``diffsettings``."
msgstr ""

msgid ""
"Displays all settings, even if they have Django's default value. Such "
"settings are prefixed by ``\"###\"``."
msgstr ""

msgid ""
"The settings module to compare the current settings against. Leave empty to "
"compare against Django's default settings."
msgstr ""

msgid "``dumpdata``"
msgstr "``dumpdata``"

msgid ""
"Outputs to standard output all data in the database associated with the "
"named application(s)."
msgstr ""

msgid ""
"If no application name is provided, all installed applications will be "
"dumped."
msgstr ""

msgid ""
"The output of ``dumpdata`` can be used as input for :djadmin:`loaddata`."
msgstr ""

msgid ""
"Note that ``dumpdata`` uses the default manager on the model for selecting "
"the records to dump. If you're using a :ref:`custom manager <custom-"
"managers>` as the default manager and it filters some of the available "
"records, not all of the objects will be dumped."
msgstr ""

msgid ""
"Uses Django's base manager, dumping records which might otherwise be "
"filtered or modified by a custom manager."
msgstr ""

msgid ""
"Specifies the serialization format of the output. Defaults to JSON. "
"Supported formats are listed in :ref:`serialization-formats`."
msgstr ""

msgid ""
"Specifies the number of indentation spaces to use in the output. Defaults to "
"``None`` which displays all data on single line."
msgstr ""

msgid ""
"Prevents specific applications or models (specified in the form of "
"``app_label.ModelName``) from being dumped. If you specify a model name, the "
"output will be restricted to that model, rather than the entire application. "
"You can also mix application names and model names."
msgstr ""

msgid ""
"If you want to exclude multiple applications, pass ``--exclude`` more than "
"once::"
msgstr ""

msgid ""
"Specifies the database from which data will be dumped. Defaults to "
"``default``."
msgstr ""

msgid ""
"Uses the ``natural_key()`` model method to serialize any foreign key and "
"many-to-many relationship to objects of the type that defines the method. If "
"you're dumping ``contrib.auth`` ``Permission`` objects or ``contrib."
"contenttypes`` ``ContentType`` objects, you should probably use this flag. "
"See the :ref:`natural keys <topics-serialization-natural-keys>` "
"documentation for more details on this and the next option."
msgstr ""

msgid ""
"Omits the primary key in the serialized data of this object since it can be "
"calculated during deserialization."
msgstr ""

msgid ""
"Outputs only the objects specified by a comma separated list of primary "
"keys. This is only available when dumping one model. By default, all the "
"records of the model are output."
msgstr ""

msgid ""
"Specifies a file to write the serialized data to. By default, the data goes "
"to standard output."
msgstr ""

msgid ""
"When this option is set and ``--verbosity`` is greater than 0 (the default), "
"a progress bar is shown in the terminal."
msgstr ""

msgid "``flush``"
msgstr "``flush``"

msgid ""
"Removes all data from the database and re-executes any post-synchronization "
"handlers. The table of which migrations have been applied is not cleared."
msgstr ""

msgid ""
"If you would rather start from an empty database and re-run all migrations, "
"you should drop and recreate the database and then run :djadmin:`migrate` "
"instead."
msgstr ""

msgid "Suppresses all user prompts."
msgstr ""

msgid "Specifies the database to flush. Defaults to ``default``."
msgstr ""

msgid ""
"Introspects the database tables in the database pointed-to by the :setting:"
"`NAME` setting and outputs a Django model module (a ``models.py`` file) to "
"standard output. You may choose what tables to inspect by passing their "
"names as arguments."
msgstr ""

msgid ""
"Use this if you have a legacy database with which you'd like to use Django. "
"The script will inspect the database and create a model for each table "
"within it."
msgstr ""

msgid ""
"As you might expect, the created models will have an attribute for every "
"field in the table. Note that ``inspectdb`` has a few special cases in its "
"field-name output:"
msgstr ""

msgid ""
"If ``inspectdb`` cannot map a column's type to a model field type, it'll use "
"``TextField`` and will insert the Python comment ``'This field type is a "
"guess.'`` next to the field in the generated model."
msgstr ""

msgid ""
"If the database column name is a Python reserved word (such as ``'pass'``, "
"``'class'`` or ``'for'``), ``inspectdb`` will append ``'_field'`` to the "
"attribute name. For example, if a table has a column ``'for'``, the "
"generated model will have a field ``'for_field'``, with the ``db_column`` "
"attribute set to ``'for'``. ``inspectdb`` will insert the Python comment "
"``'Field renamed because it was a Python reserved word.'`` next to the field."
msgstr ""

msgid ""
"This feature is meant as a shortcut, not as definitive model generation. "
"After you run it, you'll want to look over the generated models yourself to "
"make customizations. In particular, you'll need to rearrange models' order, "
"so that models that refer to other models are ordered properly."
msgstr ""

msgid ""
"Primary keys are automatically introspected for PostgreSQL, MySQL and "
"SQLite, in which case Django puts in the ``primary_key=True`` where needed."
msgstr ""

msgid ""
"``inspectdb`` works with PostgreSQL, MySQL and SQLite. Foreign-key detection "
"only works in PostgreSQL and with certain types of MySQL tables."
msgstr ""

msgid ""
"Django doesn't create database defaults when a :attr:`~django.db.models."
"Field.default` is specified on a model field. Similarly, database defaults "
"aren't translated to model field defaults or detected in any fashion by "
"``inspectdb``."
msgstr ""

msgid ""
"By default, ``inspectdb`` creates unmanaged models. That is, ``managed = "
"False`` in the model's ``Meta`` class tells Django not to manage each "
"table's creation, modification, and deletion. If you do want to allow Django "
"to manage the table's lifecycle, you'll need to change the :attr:`~django.db."
"models.Options.managed` option to ``True`` (or simply remove it because "
"``True`` is its default value)."
msgstr ""

msgid ""
"Support for the ``table`` argument(s) to choose what tables should be "
"inspected was added."
msgstr ""

msgid "Specifies the database to introspect. Defaults to ``default``."
msgstr ""

msgid "``loaddata``"
msgstr "``loaddata``"

msgid ""
"Searches for and loads the contents of the named fixture into the database."
msgstr ""

msgid ""
"Specifies the database into which the data will be loaded. Defaults to "
"``default``."
msgstr ""

msgid ""
"Ignores fields and models that may have been removed since the fixture was "
"originally generated."
msgstr ""

msgid ""
"Specifies a single app to look for fixtures in rather than looking in all "
"apps."
msgstr ""

msgid ""
"Excludes loading the fixtures from the given applications and/or models (in "
"the form of ``app_label`` or ``app_label.ModelName``). Use the option "
"multiple times to exclude more than one app or model."
msgstr ""

msgid "What's a \"fixture\"?"
msgstr ""

msgid ""
"A *fixture* is a collection of files that contain the serialized contents of "
"the database. Each fixture has a unique name, and the files that comprise "
"the fixture can be distributed over multiple directories, in multiple "
"applications."
msgstr ""

msgid "Django will search in three locations for fixtures:"
msgstr ""

msgid "In the ``fixtures`` directory of every installed application"
msgstr ""

msgid "In any directory named in the :setting:`FIXTURE_DIRS` setting"
msgstr ""

msgid "In the literal path named by the fixture"
msgstr ""

msgid ""
"Django will load any and all fixtures it finds in these locations that match "
"the provided fixture names."
msgstr ""

msgid ""
"If the named fixture has a file extension, only fixtures of that type will "
"be loaded. For example::"
msgstr ""

msgid ""
"would only load JSON fixtures called ``mydata``. The fixture extension must "
"correspond to the registered name of a :ref:`serializer <serialization-"
"formats>` (e.g., ``json`` or ``xml``)."
msgstr ""

msgid ""
"If you omit the extensions, Django will search all available fixture types "
"for a matching fixture. For example::"
msgstr ""

msgid ""
"would look for any fixture of any fixture type called ``mydata``. If a "
"fixture directory contained ``mydata.json``, that fixture would be loaded as "
"a JSON fixture."
msgstr ""

msgid ""
"The fixtures that are named can include directory components. These "
"directories will be included in the search path. For example::"
msgstr ""

msgid ""
"would search ``<app_label>/fixtures/foo/bar/mydata.json`` for each installed "
"application,  ``<dirname>/foo/bar/mydata.json`` for each directory in :"
"setting:`FIXTURE_DIRS`, and the literal path ``foo/bar/mydata.json``."
msgstr ""

msgid ""
"When fixture files are processed, the data is saved to the database as is. "
"Model defined :meth:`~django.db.models.Model.save` methods are not called, "
"and any :data:`~django.db.models.signals.pre_save` or :data:`~django.db."
"models.signals.post_save` signals will be called with ``raw=True`` since the "
"instance only contains attributes that are local to the model. You may, for "
"example, want to disable handlers that access related fields that aren't "
"present during fixture loading and would otherwise raise an exception::"
msgstr ""

msgid "You could also write a simple decorator to encapsulate this logic::"
msgstr ""

msgid ""
"Just be aware that this logic will disable the signals whenever fixtures are "
"deserialized, not just during ``loaddata``."
msgstr ""

msgid ""
"Note that the order in which fixture files are processed is undefined. "
"However, all fixture data is installed as a single transaction, so data in "
"one fixture can reference data in another fixture. If the database backend "
"supports row-level constraints, these constraints will be checked at the end "
"of the transaction."
msgstr ""

msgid ""
"The :djadmin:`dumpdata` command can be used to generate input for "
"``loaddata``."
msgstr ""

msgid "Compressed fixtures"
msgstr ""

msgid ""
"Fixtures may be compressed in ``zip``, ``gz``, or ``bz2`` format. For "
"example::"
msgstr ""

msgid ""
"would look for any of ``mydata.json``, ``mydata.json.zip``, ``mydata.json."
"gz``, or ``mydata.json.bz2``. The first file contained within a zip-"
"compressed archive is used."
msgstr ""

msgid ""
"Note that if two fixtures with the same name but different fixture type are "
"discovered (for example, if ``mydata.json`` and ``mydata.xml.gz`` were found "
"in the same fixture directory), fixture installation will be aborted, and "
"any data installed in the call to ``loaddata`` will be removed from the "
"database."
msgstr ""

msgid "MySQL with MyISAM and fixtures"
msgstr ""

msgid ""
"The MyISAM storage engine of MySQL doesn't support transactions or "
"constraints, so if you use MyISAM, you won't get validation of fixture data, "
"or a rollback if multiple transaction files are found."
msgstr ""

msgid "Database-specific fixtures"
msgstr ""

msgid ""
"If you're in a multi-database setup, you might have fixture data that you "
"want to load onto one database, but not onto another. In this situation, you "
"can add a database identifier into the names of your fixtures."
msgstr ""

msgid ""
"For example, if your :setting:`DATABASES` setting has a 'master' database "
"defined, name the fixture ``mydata.master.json`` or ``mydata.master.json."
"gz`` and the fixture will only be loaded when you specify you want to load "
"data into the ``master`` database."
msgstr ""

msgid "``makemessages``"
msgstr "``makemessages``"

msgid ""
"Runs over the entire source tree of the current directory and pulls out all "
"strings marked for translation. It creates (or updates) a message file in "
"the conf/locale (in the Django tree) or locale (for project and application) "
"directory. After making changes to the messages files you need to compile "
"them with :djadmin:`compilemessages` for use with the builtin gettext "
"support. See the :ref:`i18n documentation <how-to-create-language-files>` "
"for details."
msgstr ""

msgid ""
"This command doesn't require configured settings. However, when settings "
"aren't configured, the command can't ignore the :setting:`MEDIA_ROOT` and :"
"setting:`STATIC_ROOT` directories or include :setting:`LOCALE_PATHS`. It "
"will also write files in UTF-8 rather than in :setting:`FILE_CHARSET`."
msgstr ""

msgid "Updates the message files for all available languages."
msgstr ""

msgid ""
"Specifies a list of file extensions to examine (default: ``html``, ``txt``, "
"``py`` or ``js`` if :option:`--domain` is ``js``)."
msgstr ""

msgid ""
"Separate multiple extensions with commas or use ``-e`` or ``--extension`` "
"multiple times::"
msgstr ""

msgid "Specifies the locale(s) to process."
msgstr ""

msgid "Specifies the domain of the messages files. Supported options are:"
msgstr ""

msgid "``django`` for all ``*.py``, ``*.html`` and ``*.txt`` files (default)"
msgstr ""
"Berkas-berkas ``django`` for all ``*.py``, ``*.html`` and ``*.txt``(awal)"

msgid "``djangojs`` for ``*.js`` files"
msgstr "``djangojs`` untuk berkas-berkas ``*.js``"

msgid ""
"Follows symlinks to directories when looking for new translation strings."
msgstr ""

msgid ""
"Ignores files or directories matching the given :mod:`glob`-style pattern. "
"Use multiple times to ignore more."
msgstr ""

msgid ""
"These patterns are used by default: ``'CVS'``, ``'.*'``, ``'*~'``, ``'*."
"pyc'``."
msgstr ""

msgid "Disables the default values of ``--ignore``."
msgstr ""

msgid ""
"Disables breaking long message lines into several lines in language files."
msgstr ""

msgid ""
"Suppresses writing '``#: filename:line``’ comment lines in language files. "
"Using this option makes it harder for technically skilled translators to "
"understand each message's context."
msgstr ""

msgid ""
"Prevents deleting the temporary ``.pot`` files generated before creating the "
"``.po`` file. This is useful for debugging errors which may prevent the "
"final language files from being created."
msgstr ""

msgid ""
"See :ref:`customizing-makemessages` for instructions on how to customize the "
"keywords that :djadmin:`makemessages` passes to ``xgettext``."
msgstr ""

msgid "``makemigrations``"
msgstr "``makemigrations``"

msgid ""
"Creates new migrations based on the changes detected to your models. "
"Migrations, their relationship with apps and more are covered in depth in :"
"doc:`the migrations documentation</topics/migrations>`."
msgstr ""

msgid ""
"Providing one or more app names as arguments will limit the migrations "
"created to the app(s) specified and any dependencies needed (the table at "
"the other end of a ``ForeignKey``, for example)."
msgstr ""

msgid ""
"To add migrations to an app that doesn't have a ``migrations`` directory, "
"run ``makemigrations`` with the app's ``app_label``."
msgstr ""

msgid ""
"Suppresses all user prompts. If a suppressed prompt cannot be resolved "
"automatically, the command will exit with error code 3."
msgstr ""

msgid ""
"Outputs an empty migration for the specified apps, for manual editing. This "
"is for advanced users and should not be used unless you are familiar with "
"the migration format, migration operations, and the dependencies between "
"your migrations."
msgstr ""

msgid ""
"Shows what migrations would be made without actually writing any migrations "
"files to disk. Using this option along with ``--verbosity 3`` will also show "
"the complete migrations files that would be written."
msgstr ""

msgid "Enables fixing of migration conflicts."
msgstr ""

msgid ""
"Allows naming the generated migration(s) instead of using a generated name."
msgstr ""

msgid "Use the ``--check`` option instead."
msgstr ""

msgid ""
"Makes ``makemigrations`` exit with error code 1 when no migrations are "
"created (or would have been created, if combined with ``--dry-run``)."
msgstr ""

msgid ""
"Makes ``makemigrations`` exit with a non-zero status when model changes "
"without migrations are detected."
msgstr ""

msgid "``migrate``"
msgstr "``migrate``"

msgid ""
"Synchronizes the database state with the current set of models and "
"migrations. Migrations, their relationship with apps and more are covered in "
"depth in :doc:`the migrations documentation</topics/migrations>`."
msgstr ""

msgid ""
"The behavior of this command changes depending on the arguments provided:"
msgstr ""
"Kebiasaan dari perintah ini berubah tergantung pada argumen disediakan:"

msgid "No arguments: All apps have all of their migrations run."
msgstr ""
"Tidak ada argumen: Semua aplikasi mempunyai semua perpindahan mereka "
"berjalan."

msgid ""
"``<app_label>``: The specified app has its migrations run, up to the most "
"recent migration. This may involve running other apps' migrations too, due "
"to dependencies."
msgstr ""

msgid ""
"``<app_label> <migrationname>``: Brings the database schema to a state where "
"the named migration is applied, but no later migrations in the same app are "
"applied. This may involve unapplying migrations if you have previously "
"migrated past the named migration. Use the name ``zero`` to unapply all "
"migrations for an app."
msgstr ""

msgid "Specifies the database to migrate. Defaults to ``default``."
msgstr "Menentukan basisdata untuk perpindahan. Awal ke ``default``. "

msgid ""
"Tells Django to mark the migrations as having been applied or unapplied, but "
"without actually running the SQL to change your database schema."
msgstr ""
"Beritahu Django untuk menandai perpindahan sebagai telah di berlakukan atau "
"tidak diberlakukan, tetapi tanpa sebenarnya menjalankan SQL untuk merubah "
"skema basisdata"

msgid ""
"This is intended for advanced users to manipulate the current migration "
"state directly if they're manually applying changes; be warned that using "
"``--fake`` runs the risk of putting the migration state table into a state "
"where manual recovery will be needed to make migrations run correctly."
msgstr ""

msgid ""
"Allows Django to skip an app's initial migration if all database tables with "
"the names of all models created by all :class:`~django.db.migrations."
"operations.CreateModel` operations in that migration already exist. This "
"option is intended for use when first running migrations against a database "
"that preexisted the use of migrations. This option does not, however, check "
"for matching database schema beyond matching table names and so is only safe "
"to use if you are confident that your existing schema matches what is "
"recorded in your initial migration."
msgstr ""

msgid ""
"Allows creating tables for apps without migrations. While this isn't "
"recommended, the migrations framework is sometimes too slow on large "
"projects with hundreds of models."
msgstr ""

msgid ""
"Suppresses all user prompts. An example prompt is asking about removing "
"stale content types."
msgstr ""

msgid ""
"Starts a lightweight development Web server on the local machine. By "
"default, the server runs on port 8000 on the IP address ``127.0.0.1``. You "
"can pass in an IP address and port number explicitly."
msgstr ""

msgid ""
"If you run this script as a user with normal privileges (recommended), you "
"might not have access to start a port on a low port number. Low port numbers "
"are reserved for the superuser (root)."
msgstr ""

msgid ""
"This server uses the WSGI application object specified by the :setting:"
"`WSGI_APPLICATION` setting."
msgstr ""

msgid ""
"DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through "
"security audits or performance tests. (And that's how it's gonna stay. We're "
"in the business of making Web frameworks, not Web servers, so improving this "
"server to be able to handle a production environment is outside the scope of "
"Django.)"
msgstr ""

msgid ""
"The development server automatically reloads Python code for each request, "
"as needed. You don't need to restart the server for code changes to take "
"effect. However, some actions like adding files don't trigger a restart, so "
"you'll have to restart the server in these cases."
msgstr ""

msgid ""
"If you are using Linux and install `pyinotify`_, kernel signals will be used "
"to autoreload the server (rather than polling file modification timestamps "
"each second). This offers better scaling to large projects, reduction in "
"response time to code modification, more robust change detection, and "
"battery usage reduction."
msgstr ""

msgid ""
"When you start the server, and each time you change Python code while the "
"server is running, the system check framework will check your entire Django "
"project for some common errors (see the :djadmin:`check` command). If any "
"errors are found, they will be printed to standard output."
msgstr ""
"Ketika anda memulai peladen, dan setiap waktu anda merubah kode Python "
"selagi peladen berjalan, kerangka sistem pemeriksaan akan memeriksa "
"kelesuruhan proyek Django anda untuk beberapa kesalahan umum (lihat "
"perintah ;djadmin:`check`). Jika kesalahan apapun ditemukan, mereka akan "
"dicetak ke keluaran standar."

msgid ""
"You can run as many concurrent servers as you want, as long as they're on "
"separate ports. Just execute ``django-admin runserver`` more than once."
msgstr ""

msgid ""
"Note that the default IP address, ``127.0.0.1``, is not accessible from "
"other machines on your network. To make your development server viewable to "
"other machines on the network, use its own IP address (e.g. ``192.168.2.1``) "
"or ``0.0.0.0`` or ``::`` (with IPv6 enabled)."
msgstr ""

msgid ""
"You can provide an IPv6 address surrounded by brackets (e.g. "
"``[200a::1]:8000``). This will automatically enable IPv6 support."
msgstr ""

msgid "A hostname containing ASCII-only characters can also be used."
msgstr ""

msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(default in new projects) the :djadmin:`runserver` command will be "
"overridden with its own :ref:`runserver<staticfiles-runserver>` command."
msgstr ""

msgid ""
"If :djadmin:`migrate` was not previously executed, the table that stores the "
"history of migrations is created at first run of ``runserver``."
msgstr ""

msgid ""
"Logging of each request and response of the server is sent to the :ref:"
"`django-server-logger` logger."
msgstr ""

msgid ""
"In older versions, log messages were written to ``sys.stderr`` instead of "
"being handled through Python logging."
msgstr ""

msgid ""
"Disables the auto-reloader. This means any Python code changes you make "
"while the server is running will *not* take effect if the particular Python "
"modules have already been loaded into memory."
msgstr ""

msgid ""
"Disables use of threading in the development server. The server is "
"multithreaded by default."
msgstr ""

msgid ""
"Uses IPv6 for the development server. This changes the default IP address "
"from ``127.0.0.1`` to ``::1``."
msgstr ""
"Menggunakan IPv6 untuk peladen pengembangan. Ini merubah alamat IP awal dari "
"``127.0.0.1`` ke ``::1``."

msgid "Examples of using different ports and addresses"
msgstr ""

msgid "Port 8000 on IP address ``127.0.0.1``::"
msgstr "Port 8000 pada alamat IP ``127.0.0.1``::"

msgid "Port 8000 on IP address ``1.2.3.4``::"
msgstr "Port 8000 pada alamat IP ``1.2.3.4``::"

msgid "Port 7000 on IP address ``127.0.0.1``::"
msgstr "Port 7000 pada alamat IP ``127.0.0.1``::"

msgid "Port 7000 on IP address ``1.2.3.4``::"
msgstr "Port 7000 pada alamat IP ``1.2.3.4``::"

msgid "Port 8000 on IPv6 address ``::1``::"
msgstr "Port 8000 pada alamat IPv6 ``::1``::"

msgid "Port 7000 on IPv6 address ``::1``::"
msgstr "Port 7000 pada alamat IPv6 ``::1``::"

msgid "Port 7000 on IPv6 address ``2001:0db8:1234:5678::9``::"
msgstr "Port 7000 pada alamat IPv6 ``2001:0db8:1234:5678::9``::"

msgid "Port 8000 on IPv4 address of host ``localhost``::"
msgstr "Port 8000 pada alamat IPv4 dari rumah ``localhost``::"

msgid "Port 8000 on IPv6 address of host ``localhost``::"
msgstr ""

msgid "Serving static files with the development server"
msgstr ""

msgid ""
"By default, the development server doesn't serve any static files for your "
"site (such as CSS files, images, things under :setting:`MEDIA_URL` and so "
"forth). If you want to configure Django to serve static media, read :doc:`/"
"howto/static-files/index`."
msgstr ""

msgid "``sendtestemail``"
msgstr "``sendtestemail``"

msgid ""
"Sends a test email (to confirm email sending through Django is working) to "
"the recipient(s) specified. For example::"
msgstr ""
"Kirim surel percobaan (untuk menegaskan surel mengirim melalui Django "
"bekerja) ke penerima ditentukan. Sebagai contoh::"

msgid ""
"There are a couple of options, and you may use any combination of them "
"together:"
msgstr ""

msgid ""
"Mails the email addresses specified in :setting:`MANAGERS` using :meth:"
"`~django.core.mail.mail_managers()`."
msgstr ""

msgid ""
"Mails the email addresses specified in :setting:`ADMINS` using :meth:"
"`~django.core.mail.mail_admins()`."
msgstr ""

msgid "``shell``"
msgstr "``sendtestemail``"

msgid "Starts the Python interactive interpreter."
msgstr ""

msgid ""
"Specifies the shell to use. By default, Django will use IPython_ or bpython_ "
"if either is installed. If both are installed, specify which one you want "
"like so:"
msgstr ""

msgid "IPython::"
msgstr "IPython::"

msgid "bpython::"
msgstr "bpython::"

msgid ""
"If you have a \"rich\" shell installed but want to force use of the \"plain"
"\" Python interpreter, use ``python`` as the interface name, like so::"
msgstr ""

msgid ""
"In older versions, use the ``--plain`` option instead of ``-i python``. This "
"is deprecated and will be removed in Django 2.0."
msgstr ""

msgid ""
"Disables reading the startup script for the \"plain\" Python interpreter. By "
"default, the script pointed to by the :envvar:`PYTHONSTARTUP` environment "
"variable or the ``~/.pythonrc.py`` script is read."
msgstr ""

msgid "Lets you pass a command as a string to execute it as Django, like so::"
msgstr ""

msgid "You can also pass code in on standard input to execute it. For example:"
msgstr ""

msgid ""
"On Windows, the REPL is output due to implementation limits of :func:`select."
"select` on that platform."
msgstr ""

msgid "In older versions, the REPL is also output on UNIX systems."
msgstr ""

msgid "``showmigrations``"
msgstr "``showmigrations``"

msgid ""
"Shows all migrations in a project. You can choose from one of two formats:"
msgstr ""
"Tampilkan semua perpindahan di sebuah proyek. Anda dapat memilih dari satu "
"dari dua bentuk:"

msgid ""
"Lists all of the apps Django knows about, the migrations available for each "
"app, and whether or not each migration is applied (marked by an ``[X]`` next "
"to the migration name)."
msgstr ""

msgid ""
"Apps without migrations are also listed, but have ``(no migrations)`` "
"printed under them."
msgstr ""

msgid "This is the default output format."
msgstr "Ini adalah bentuk keluaran awal."

msgid ""
"Shows the migration plan Django will follow to apply migrations. Like ``--"
"list``, applied migrations are marked by an ``[X]``. For a ``--verbosity`` "
"of 2 and above, all dependencies of a migration will also be shown."
msgstr ""

msgid ""
"``app_label``\\s arguments limit the output, however, dependencies of "
"provided apps may also be included."
msgstr ""

msgid "In older versions, ``showmigrations --plan`` ignores app labels."
msgstr ""

msgid "Specifies the database to examine. Defaults to ``default``."
msgstr ""

msgid "``sqlflush``"
msgstr "``sqlflush``"

msgid ""
"Prints the SQL statements that would be executed for the :djadmin:`flush` "
"command."
msgstr ""
"Cetak pernyataan SQL yang akan dijalankan untuk perintah :djadmin:`flush`."

msgid ""
"Specifies the database for which to print the SQL. Defaults to ``default``."
msgstr "Menentukan basisdata untuk dimana mencetak SQL. Awal ke ``default``."

msgid "``sqlmigrate``"
msgstr "``sqlflush``"

msgid ""
"Prints the SQL for the named migration. This requires an active database "
"connection, which it will use to resolve constraint names; this means you "
"must generate the SQL against a copy of the database you wish to later apply "
"it on."
msgstr ""

msgid "Note that ``sqlmigrate`` doesn't colorize its output."
msgstr ""

msgid ""
"Generates the SQL for unapplying the migration. By default, the SQL created "
"is for running the migration in the forwards direction."
msgstr ""

msgid ""
"Specifies the database for which to generate the SQL. Defaults to "
"``default``."
msgstr ""

msgid "``sqlsequencereset``"
msgstr "``sqlsequencereset``"

msgid ""
"Prints the SQL statements for resetting sequences for the given app name(s)."
msgstr ""

msgid ""
"Sequences are indexes used by some database engines to track the next "
"available number for automatically incremented fields."
msgstr ""

msgid ""
"Use this command to generate SQL which will fix cases where a sequence is "
"out of sync with its automatically incremented field data."
msgstr ""

msgid "``squashmigrations``"
msgstr "``squashmigrations``"

msgid ""
"Squashes the migrations for ``app_label`` up to and including "
"``migration_name`` down into fewer migrations, if possible. The resulting "
"squashed migrations can live alongside the unsquashed ones safely. For more "
"information, please read :ref:`migration-squashing`."
msgstr ""

msgid ""
"When ``start_migration_name`` is given, Django will only include migrations "
"starting from and including this migration. This helps to mitigate the "
"squashing limitation of :class:`~django.db.migrations.operations.RunPython` "
"and :class:`django.db.migrations.operations.RunSQL` migration operations."
msgstr ""

msgid ""
"Disables the optimizer when generating a squashed migration. By default, "
"Django will try to optimize the operations in your migrations to reduce the "
"size of the resulting file. Use this option if this process is failing or "
"creating incorrect migrations, though please also file a Django bug report "
"about the behavior, as optimization is meant to be safe."
msgstr ""

msgid "``startapp``"
msgstr "``startapp``"

msgid ""
"Creates a Django app directory structure for the given app name in the "
"current directory or the given destination."
msgstr ""

msgid ""
"By default the directory created contains a ``models.py`` file and other app "
"template files. (See the `source`_ for more details.) If only the app name "
"is given, the app directory will be created in the current working directory."
msgstr ""

msgid ""
"If the optional destination is provided, Django will use that existing "
"directory rather than creating a new one. You can use '.' to denote the "
"current working directory."
msgstr ""

msgid ""
"Provides the path to a directory with a custom app template file or a path "
"to a compressed file (``.tar.gz``, ``.tar.bz2``, ``.tgz``, ``.tbz``, ``."
"zip``) containing the app template files."
msgstr ""
"Menyediakan jalur pada sebuah direktori dengan penyesuaian berkas cetakan "
"aplikasi atau jalur pada berkas termampat (``.tar.gz``, ``.tar.bz2``, ``."
"tgz``, ``.tbz``, ``.zip``) mengandung berkas-berkas cetakan aplikasi."

msgid ""
"For example, this would look for an app template in the given directory when "
"creating the ``myapp`` app::"
msgstr ""

msgid ""
"Django will also accept URLs (``http``, ``https``, ``ftp``) to compressed "
"archives with the app template files, downloading and extracting them on the "
"fly."
msgstr ""

msgid ""
"For example, taking advantage of GitHub's feature to expose repositories as "
"zip files, you can use a URL like::"
msgstr ""

msgid ""
"Specifies which file extensions in the app template should be rendered with "
"the template engine. Defaults to ``py``."
msgstr ""

msgid ""
"Specifies which files in the app template (in addition to those matching ``--"
"extension``) should be rendered with the template engine. Defaults to an "
"empty list."
msgstr ""

msgid ""
"The :class:`template context <django.template.Context>` used for all "
"matching files is:"
msgstr ""

msgid ""
"Any option passed to the ``startapp`` command (among the command's supported "
"options)"
msgstr ""

msgid "``app_name`` -- the app name as passed to the command"
msgstr "``app_name`` -- nama aplikasi diloloskan ke perintah"

msgid "``app_directory`` -- the full path of the newly created app"
msgstr ""

msgid "``camel_case_app_name`` -- the app name in camel case format"
msgstr ""

msgid ""
"``docs_version`` -- the version of the documentation: ``'dev'`` or ``'1.x'``"
msgstr ""

msgid ""
"When the app template files are rendered with the Django template engine (by "
"default all ``*.py`` files), Django will also replace all stray template "
"variables contained. For example, if one of the Python files contains a "
"docstring explaining a particular feature related to template rendering, it "
"might result in an incorrect example."
msgstr ""

msgid ""
"To work around this problem, you can use the :ttag:`templatetag` templatetag "
"to \"escape\" the various parts of the template syntax."
msgstr ""

msgid ""
"In addition, to allow Python template files that contain Django template "
"language syntax while also preventing packaging systems from trying to byte-"
"compile invalid ``*.py`` files, template files ending with ``.py-tpl`` will "
"be renamed to ``.py``."
msgstr ""

msgid "``startproject``"
msgstr "``startproject``"

msgid ""
"Creates a Django project directory structure for the given project name in "
"the current directory or the given destination."
msgstr ""

msgid ""
"By default, the new directory contains ``manage.py`` and a project package "
"(containing a ``settings.py`` and other files). See the `template source`_ "
"for details."
msgstr ""

msgid ""
"If only the project name is given, both the project directory and project "
"package will be named ``<projectname>`` and the project directory will be "
"created in the current working directory."
msgstr ""

msgid ""
"If the optional destination is provided, Django will use that existing "
"directory as the project directory, and create ``manage.py`` and the project "
"package within it. Use '.' to denote the current working directory."
msgstr ""

msgid ""
"Specifies a directory, file path, or URL of a custom project template. See "
"the :option:`startapp --template` documentation for examples and usage."
msgstr ""
"Menentukan sebuah direktori, jalur berkas, atau URL dari penyesuaian cetakan "
"proyek. Lihat dokumentasi :option:`startapp --template` untuk contoh-contoh "
"dan penggunaan. "

msgid ""
"Specifies which file extensions in the project template should be rendered "
"with the template engine. Defaults to ``py``."
msgstr ""

msgid ""
"Specifies which files in the project template (in addition to those matching "
"``--extension``) should be rendered with the template engine. Defaults to an "
"empty list."
msgstr ""

msgid "The :class:`template context <django.template.Context>` used is:"
msgstr ""

msgid ""
"Any option passed to the ``startproject`` command (among the command's "
"supported options)"
msgstr ""

msgid "``project_name`` -- the project name as passed to the command"
msgstr "``project_name`` -- nama proyek diloloskan ke perintah"

msgid "``project_directory`` -- the full path of the newly created project"
msgstr "``project_directory`` -- jalur penuh dari proyek dibuat baru"

msgid "``secret_key`` -- a random key for the :setting:`SECRET_KEY` setting"
msgstr "``secret_key`` -- kunci acak untuk pengaturan :setting:`SECRET_KEY` "

msgid ""
"Please also see the :ref:`rendering warning <render_warning>` as mentioned "
"for :djadmin:`startapp`."
msgstr ""
"Harap juga lihat :ref:`rendering warning <render_warning>` seperti "
"disebutkan untuk :djadmin:`startapp`."

msgid "``test``"
msgstr "``test``"

msgid ""
"Runs tests for all installed apps. See :doc:`/topics/testing/index` for more "
"information."
msgstr ""

msgid ""
"Stops running tests and reports the failure immediately after a test fails."
msgstr ""

msgid ""
"Controls the test runner class that is used to execute tests. This value "
"overrides the value provided by the :setting:`TEST_RUNNER` setting."
msgstr ""

msgid ""
"Suppresses all user prompts. A typical prompt is a warning about deleting an "
"existing test database."
msgstr ""

msgid "Test runner options"
msgstr ""

msgid ""
"The ``test`` command receives options on behalf of the specified :option:`--"
"testrunner`. These are the options of the default test runner: :class:"
"`~django.test.runner.DiscoverRunner`."
msgstr ""

msgid ""
"Preserves the test database between test runs. This has the advantage of "
"skipping both the create and destroy actions which can greatly decrease the "
"time to run tests, especially those in a large test suite. If the test "
"database does not exist, it will be created on the first run and then "
"preserved for each subsequent run. Any unapplied migrations will also be "
"applied to the test database before running the test suite."
msgstr ""

msgid ""
"Sorts test cases in the opposite execution order. This may help in debugging "
"the side effects of tests that aren't properly isolated. :ref:`Grouping by "
"test class <order-of-tests>` is preserved when using this option."
msgstr ""

msgid ""
"Sets the :setting:`DEBUG` setting to ``True`` prior to running tests. This "
"may help troubleshoot test failures."
msgstr ""

msgid ""
"Enables :ref:`SQL logging <django-db-logger>` for failing tests. If ``--"
"verbosity`` is ``2``, then queries in passing tests are also output."
msgstr ""

msgid ""
"Runs tests in separate parallel processes. Since modern processors have "
"multiple cores, this allows running tests significantly faster."
msgstr ""

msgid ""
"By default ``--parallel`` runs one process per core according to :func:"
"`multiprocessing.cpu_count()`. You can adjust the number of processes either "
"by providing it as the option's value, e.g. ``--parallel=4``, or by setting "
"the ``DJANGO_TEST_PROCESSES`` environment variable."
msgstr ""

msgid ""
"Django distributes test cases — :class:`unittest.TestCase` subclasses — to "
"subprocesses. If there are fewer test cases than configured processes, "
"Django will reduce the number of processes accordingly."
msgstr ""

msgid ""
"Each process gets its own database. You must ensure that different test "
"cases don't access the same resources. For instance, test cases that touch "
"the filesystem should create a temporary directory for their own use."
msgstr ""
"Setiap pengolahan mendapatkan basisdatanya sendiri. Anda harus memastikan "
"bahwa kasus-kasus percobaan berbeda tidak mengakses sumberdaya sama. Sebagai "
"contoh, kasus-kasus percobaan yang menyentuh sistem berkas harus membuat "
"direktori sementara untuk penggunaan mereka sendiri."

msgid ""
"This option requires the third-party ``tblib`` package to display tracebacks "
"correctly:"
msgstr ""

msgid ""
"This feature isn't available on Windows. It doesn't work with the Oracle "
"database backend either."
msgstr ""

msgid ""
"If you want to use :mod:`pdb` while debugging tests, you must disable "
"parallel execution (``--parallel=1``). You'll see something like ``bdb."
"BdbQuit`` if you don't."
msgstr ""

msgid ""
"When test parallelization is enabled and a test fails, Django may be unable "
"to display the exception traceback. This can make debugging difficult. If "
"you encounter this problem, run the affected test without parallelization to "
"see the traceback of the failure."
msgstr ""

msgid ""
"This is a known limitation. It arises from the need to serialize objects in "
"order to exchange them between processes. See :ref:`python:pickle-picklable` "
"for details."
msgstr ""

msgid ""
"Runs only tests :ref:`marked with the specified tags <topics-tagging-"
"tests>`. May be specified multiple times and combined with :option:`test --"
"exclude-tag`."
msgstr ""

msgid ""
"Excludes tests :ref:`marked with the specified tags <topics-tagging-tests>`. "
"May be specified multiple times and combined with :option:`test --tag`."
msgstr ""

msgid "``testserver``"
msgstr "``testserver``"

msgid ""
"Runs a Django development server (as in :djadmin:`runserver`) using data "
"from the given fixture(s)."
msgstr ""

msgid "For example, this command::"
msgstr "Sebagai contoh, perintah ini::"

msgid "...would perform the following steps:"
msgstr "...akan melakukan langkah-langkah berikut:"

msgid "Create a test database, as described in :ref:`the-test-database`."
msgstr ""
"Buat basisdata percobaan, seperti digambarkan di :ref:`the-test-database`."

msgid ""
"Populate the test database with fixture data from the given fixtures. (For "
"more on fixtures, see the documentation for :djadmin:`loaddata` above.)"
msgstr ""

msgid ""
"Runs the Django development server (as in :djadmin:`runserver`), pointed at "
"this newly created test database instead of your production database."
msgstr ""

msgid "This is useful in a number of ways:"
msgstr "Ini sangat berguna di sejumlah jalan:"

msgid ""
"When you're writing :doc:`unit tests </topics/testing/overview>` of how your "
"views act with certain fixture data, you can use ``testserver`` to interact "
"with the views in a Web browser, manually."
msgstr ""

msgid ""
"Let's say you're developing your Django application and have a \"pristine\" "
"copy of a database that you'd like to interact with. You can dump your "
"database to a fixture (using the :djadmin:`dumpdata` command, explained "
"above), then use ``testserver`` to run your Web application with that data. "
"With this arrangement, you have the flexibility of messing up your data in "
"any way, knowing that whatever data changes you're making are only being "
"made to a test database."
msgstr ""

msgid ""
"Note that this server does *not* automatically detect changes to your Python "
"source code (as :djadmin:`runserver` does). It does, however, detect changes "
"to templates."
msgstr ""

msgid ""
"Specifies a different port, or IP address and port, from the default of "
"``127.0.0.1:8000``. This value follows exactly the same format and serves "
"exactly the same function as the argument to the :djadmin:`runserver` "
"command."
msgstr ""

msgid ""
"To run the test server on port 7000 with ``fixture1`` and ``fixture2``::"
msgstr ""

msgid ""
"(The above statements are equivalent. We include both of them to demonstrate "
"that it doesn't matter whether the options come before or after the fixture "
"arguments.)"
msgstr ""

msgid "To run on 1.2.3.4:7000 with a ``test`` fixture::"
msgstr ""

msgid "Commands provided by applications"
msgstr "Perintah disediakan oleh aplikasi"

msgid ""
"Some commands are only available when the ``django.contrib`` application "
"that :doc:`implements </howto/custom-management-commands>` them has been :"
"setting:`enabled <INSTALLED_APPS>`. This section describes them grouped by "
"their application."
msgstr ""

msgid "``changepassword``"
msgstr "``changepassword``"

msgid ""
"This command is only available if Django's :doc:`authentication system </"
"topics/auth/index>` (``django.contrib.auth``) is installed."
msgstr ""

msgid ""
"Allows changing a user's password. It prompts you to enter a new password "
"twice for the given user. If the entries are identical, this immediately "
"becomes the new password. If you do not supply a user, the command will "
"attempt to change the password whose username matches the current user."
msgstr ""

msgid "Specifies the database to query for the user. Defaults to ``default``."
msgstr ""
"Menentukan basisdata untuk permintaan untuk pengguna. Awal ke ``default``."

msgid "``createsuperuser``"
msgstr "``createsuperuser``"

msgid ""
"Creates a superuser account (a user who has all permissions). This is useful "
"if you need to create an initial superuser account or if you need to "
"programmatically generate superuser accounts for your site(s)."
msgstr ""

msgid ""
"When run interactively, this command will prompt for a password for the new "
"superuser account. When run non-interactively, no password will be set, and "
"the superuser account will not be able to log in until a password has been "
"manually set for it."
msgstr ""

msgid ""
"The username and email address for the new account can be supplied by using "
"the ``--username`` and ``--email`` arguments on the command line. If either "
"of those is not supplied, ``createsuperuser`` will prompt for it when "
"running interactively."
msgstr ""

msgid "Specifies the database into which the superuser object will be saved."
msgstr ""

msgid ""
"You can subclass the management command and override ``get_input_data()`` if "
"you want to customize data input and validation. Consult the source code for "
"details on the existing implementation and the method's parameters. For "
"example, it could be useful if you have a ``ForeignKey`` in :attr:`~django."
"contrib.auth.models.CustomUser.REQUIRED_FIELDS` and want to allow creating "
"an instance instead of entering the primary key of an existing instance."
msgstr ""

msgid "``django.contrib.contenttypes``"
msgstr ""

msgid "``remove_stale_contenttypes``"
msgstr ""

msgid ""
"This command is only available if Django's :doc:`contenttypes app </ref/"
"contrib/contenttypes>` (:mod:`django.contrib.contenttypes`) is installed."
msgstr ""

msgid ""
"Deletes stale content types (from deleted models) in your database. Any "
"objects that depend on the deleted content types will also be deleted. A "
"list of deleted objects will be displayed before you confirm it's okay to "
"proceed with the deletion."
msgstr ""

msgid "Specifies the database to use. Defaults to ``default``."
msgstr ""

msgid "``django.contrib.gis``"
msgstr "``django.contrib.gis``"

msgid ""
"This command is only available if :doc:`GeoDjango </ref/contrib/gis/index>` "
"(``django.contrib.gis``) is installed."
msgstr ""
"Perintah ini hanya tersedia jika :doc:`GeoDjango </ref/contrib/gis/index>` "
"(``django.contrib.gis``) terpasang. "

msgid ""
"Please refer to its :djadmin:`description <ogrinspect>` in the GeoDjango "
"documentation."
msgstr ""
"Silahkan mengacu ke :djadmin:`description <ogrinspect>` nya di dokumentasi "
"GeoDjango."

msgid "``django.contrib.sessions``"
msgstr "``django.contrib.sessions``"

msgid "``clearsessions``"
msgstr "``clearsessions``"

msgid "Can be run as a cron job or directly to clean out expired sessions."
msgstr ""

msgid "``django.contrib.sitemaps``"
msgstr "``django.contrib.sitemaps``"

msgid "``ping_google``"
msgstr "``ping_google``"

msgid ""
"This command is only available if the :doc:`Sitemaps framework </ref/contrib/"
"sitemaps>` (``django.contrib.sitemaps``) is installed."
msgstr ""
"Perintah ini hanya tersedia jika :doc:`Sitemaps framework </ref/contrib/"
"sitemaps>` (``django.contrib.sitemaps``) terpasang. "

msgid ""
"Please refer to its :djadmin:`description <ping_google>` in the Sitemaps "
"documentation."
msgstr ""
"Silahkan mengacu ke :djadmin:`description <ping_google>` nya di dokumentasi "
"Sitemap."

msgid "``django.contrib.staticfiles``"
msgstr "``django.contrib.staticfiles``"

msgid ""
"This command is only available if the :doc:`static files application </howto/"
"static-files/index>` (``django.contrib.staticfiles``) is installed."
msgstr ""
"Perintah ini hanya tersedia jika:doc:`static files application </howto/"
"static-files/index>` (``django.contrib.staticfiles``) terpasang. "

msgid ""
"Please refer to its :djadmin:`description <collectstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""
"Silahkan mengacu ke :djadmin:`description <collectstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` nya di dokumentasi."

msgid ""
"Please refer to its :djadmin:`description <findstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""

msgid "Default options"
msgstr "Pilihan awal"

msgid ""
"Although some commands may allow their own custom options, every command "
"allows for the following options:"
msgstr ""
"Meskipun beberapa perintah dapat mengizinkan pilihan penyesuaian mereka "
"sendiri, setiap perintah mengizinkan untuk pilihan berikut:"

msgid ""
"Adds the given filesystem path to the Python `import search path`_. If this "
"isn't provided, ``django-admin`` will use the ``PYTHONPATH`` environment "
"variable."
msgstr ""

msgid ""
"This option is unnecessary in ``manage.py``, because it takes care of "
"setting the Python path for you."
msgstr ""

msgid ""
"Specifies the settings module to use. The settings module should be in "
"Python package syntax, e.g. ``mysite.settings``. If this isn't provided, "
"``django-admin`` will use the ``DJANGO_SETTINGS_MODULE`` environment "
"variable."
msgstr ""

msgid ""
"This option is unnecessary in ``manage.py``, because it uses ``settings.py`` "
"from the current project by default."
msgstr ""
"Pilihan ini belum diperlukan di ``manage.py``, karena itu menggunakan "
"``settings.py`` dari proyek saat ini secara awal."

msgid ""
"Displays a full stack trace when a :exc:`~django.core.management."
"CommandError` is raised. By default, ``django-admin`` will show a simple "
"error message when a ``CommandError`` occurs and a full stack trace for any "
"other exception."
msgstr ""

msgid ""
"Specifies the amount of notification and debug information that a command "
"should print to the console."
msgstr ""

msgid "``0`` means no output."
msgstr ""

msgid "``1`` means normal output (default)."
msgstr ""

msgid "``2`` means verbose output."
msgstr ""

msgid "``3`` means *very* verbose output."
msgstr ""

msgid ""
"Disables colorized command output.  Some commands format their output to be "
"colorized. For example, errors will be printed to the console in red and SQL "
"statements will be syntax highlighted."
msgstr ""

msgid "Extra niceties"
msgstr ""

msgid "Syntax coloring"
msgstr ""

msgid ""
"The ``django-admin`` / ``manage.py`` commands will use pretty color-coded "
"output if your terminal supports ANSI-colored output. It won't use the color "
"codes if you're piping the command's output to another program."
msgstr ""

msgid ""
"Under Windows, the native console doesn't support ANSI escape sequences so "
"by default there is no color output. But you can install the `ANSICON`_ "
"third-party tool, the Django commands will detect its presence and will make "
"use of its services to color output just like on Unix-based platforms."
msgstr ""
"DIbawah Windows, konsol asli tidak mendukung uruan pelolosan ANSI jadi "
"secara awalan tidak ada warna keluaran. Tetapi anda dapat memasang alat "
"pihak-ketiga `ANSICON`_, perintah Django akan mengenali kehadirannya dan "
"memuat penggunakan layanannya menjadi warna keluaran seperti pada serambi "
"berdasarkan-Unix."

msgid ""
"The colors used for syntax highlighting can be customized. Django ships with "
"three color palettes:"
msgstr ""

msgid ""
"``dark``, suited to terminals that show white text on a black background. "
"This is the default palette."
msgstr ""

msgid ""
"``light``, suited to terminals that show black text on a white background."
msgstr ""

msgid "``nocolor``, which disables syntax highlighting."
msgstr ""

msgid ""
"You select a palette by setting a ``DJANGO_COLORS`` environment variable to "
"specify the palette you want to use. For example, to specify the ``light`` "
"palette under a Unix or OS/X BASH shell, you would run the following at a "
"command prompt::"
msgstr ""

msgid ""
"You can also customize the colors that are used. Django specifies a number "
"of roles in which color is used:"
msgstr ""

msgid "``error`` - A major error."
msgstr ""

msgid "``notice`` - A minor error."
msgstr ""

msgid "``success`` - A success."
msgstr ""

msgid "``warning`` - A warning."
msgstr ""

msgid "``sql_field`` - The name of a model field in SQL."
msgstr ""

msgid "``sql_coltype`` - The type of a model field in SQL."
msgstr ""

msgid "``sql_keyword`` - An SQL keyword."
msgstr ""

msgid "``sql_table`` - The name of a model in SQL."
msgstr ""

msgid "``http_info`` - A 1XX HTTP Informational server response."
msgstr ""

msgid "``http_success`` - A 2XX HTTP Success server response."
msgstr ""

msgid "``http_not_modified`` - A 304 HTTP Not Modified server response."
msgstr ""

msgid "``http_redirect`` - A 3XX HTTP Redirect server response other than 304."
msgstr ""

msgid "``http_not_found`` - A 404 HTTP Not Found server response."
msgstr ""

msgid ""
"``http_bad_request`` - A 4XX HTTP Bad Request server response other than 404."
msgstr ""

msgid "``http_server_error`` - A 5XX HTTP Server Error response."
msgstr ""

msgid "``migrate_heading`` - A heading in a migrations management command."
msgstr ""

msgid "``migrate_label`` - A migration name."
msgstr ""

msgid ""
"Each of these roles can be assigned a specific foreground and background "
"color, from the following list:"
msgstr ""

msgid "``black``"
msgstr "``hitam``"

msgid "``red``"
msgstr "``merah``"

msgid "``green``"
msgstr "``hijau``"

msgid "``yellow``"
msgstr "``kuning``"

msgid "``blue``"
msgstr "``biru``"

msgid "``magenta``"
msgstr "``magenta``"

msgid "``cyan``"
msgstr "``cyan``"

msgid "``white``"
msgstr "``putih``"

msgid ""
"Each of these colors can then be modified by using the following display "
"options:"
msgstr "Setiap warna ini dapat dirubah menggunakan pilihan tampilan berikut:"

msgid "``bold``"
msgstr "``tebal``"

msgid "``underscore``"
msgstr "``garis bawah``"

msgid "``blink``"
msgstr "``kedip``"

msgid "``reverse``"
msgstr ""

msgid "``conceal``"
msgstr ""

msgid "A color specification follows one of the following patterns:"
msgstr ""

msgid "``role=fg``"
msgstr ""

msgid "``role=fg/bg``"
msgstr ""

msgid "``role=fg,option,option``"
msgstr ""

msgid "``role=fg/bg,option,option``"
msgstr ""

msgid ""
"where ``role`` is the name of a valid color role, ``fg`` is the foreground "
"color, ``bg`` is the background color and each ``option`` is one of the "
"color modifying options. Multiple color specifications are then separated by "
"a semicolon. For example::"
msgstr ""

msgid ""
"would specify that errors be displayed using blinking yellow on blue, and "
"notices displayed using magenta. All other color roles would be left "
"uncolored."
msgstr ""

msgid ""
"Colors can also be specified by extending a base palette. If you put a "
"palette name in a color specification, all the colors implied by that "
"palette will be loaded. So::"
msgstr ""

msgid ""
"would specify the use of all the colors in the light color palette, *except* "
"for the colors for errors and notices which would be overridden as specified."
msgstr ""

msgid "Bash completion"
msgstr ""

msgid ""
"If you use the Bash shell, consider installing the Django bash completion "
"script, which lives in ``extras/django_bash_completion`` in the Django "
"distribution. It enables tab-completion of ``django-admin`` and ``manage."
"py`` commands, so you can, for instance..."
msgstr ""

msgid "Type ``django-admin``."
msgstr ""

msgid "Press [TAB] to see all available options."
msgstr ""

msgid ""
"Type ``sql``, then [TAB], to see all available options whose names start "
"with ``sql``."
msgstr ""

msgid ""
"See :doc:`/howto/custom-management-commands` for how to add customized "
"actions."
msgstr ""

msgid "Running management commands from your code"
msgstr "Menjalankan pengelolaan perintah dari kode anda"

msgid "To call a management command from code use ``call_command``."
msgstr ""

msgid ""
"the name of the command to call or a command object. Passing the name is "
"preferred unless the object is required for testing."
msgstr ""

msgid "``*args``"
msgstr ""

msgid ""
"a list of arguments accepted by the command. Arguments are passed to the "
"argument parser, so you can use the same style as you would on the command "
"line. For example, ``call_command('flush', '--verbosity=0')``."
msgstr ""

msgid "``**options``"
msgstr ""

msgid ""
"named options accepted on the command-line. Options are passed to the "
"command without triggering the argument parser, which means you'll need to "
"pass the correct type. For example, ``call_command('flush', verbosity=0)`` "
"(zero must be an integer rather than a string)."
msgstr ""

msgid "Examples::"
msgstr ""

msgid ""
"Note that command options that take no arguments are passed as keywords with "
"``True`` or ``False``, as you can see with the ``interactive`` option above."
msgstr ""

msgid ""
"Named arguments can be passed by using either one of the following syntaxes::"
msgstr ""

msgid ""
"Some command options have different names when using ``call_command()`` "
"instead of ``django-admin`` or ``manage.py``. For example, ``django-admin "
"createsuperuser --no-input`` translates to ``call_command('createsuperuser', "
"interactive=False)``. To find what keyword argument name to use for "
"``call_command()``, check the command's source code for the ``dest`` "
"argument passed to ``parser.add_argument()``."
msgstr ""

msgid "Command options which take multiple options are passed a list::"
msgstr ""

msgid ""
"The return value of the ``call_command()`` function is the same as the "
"return value of the ``handle()`` method of the command."
msgstr ""

msgid ""
"``call_command()`` now returns the value received from the ``command."
"handle()`` method. It now also accepts a command object as the first "
"argument."
msgstr ""

msgid "Output redirection"
msgstr ""

msgid ""
"Note that you can redirect standard output and error streams as all commands "
"support the ``stdout`` and ``stderr`` options. For example, you could write::"
msgstr ""

msgid "Django Exceptions"
msgstr ""

msgid ""
"Django raises some of its own exceptions as well as standard Python "
"exceptions."
msgstr ""

msgid "Django Core Exceptions"
msgstr ""

msgid ""
"Django core exception classes are defined in ``django.core.exceptions``."
msgstr ""

msgid "``AppRegistryNotReady``"
msgstr "``AppRegistryNotReady``"

msgid ""
"This exception is raised when attempting to use models before the :ref:`app "
"loading process <app-loading-process>`, which initializes the ORM, is "
"complete."
msgstr ""

msgid "``ObjectDoesNotExist``"
msgstr ""

msgid ""
"The base class for :exc:`~django.db.models.Model.DoesNotExist` exceptions; a "
"``try/except`` for ``ObjectDoesNotExist`` will catch :exc:`~django.db.models."
"Model.DoesNotExist` exceptions for all models."
msgstr ""

msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information "
"on :exc:`ObjectDoesNotExist` and :exc:`~django.db.models.Model.DoesNotExist`."
msgstr ""

msgid "``EmptyResultSet``"
msgstr ""

msgid ""
"``EmptyResultSet`` may be raised during query generation if a query won't "
"return any results. Most Django projects won't encounter this exception, but "
"it might be useful for implementing custom lookups and expressions."
msgstr ""

msgid "In older versions, it's only importable from ``django.db.models.sql``."
msgstr ""

msgid "``FieldDoesNotExist``"
msgstr ""

msgid ""
"The ``FieldDoesNotExist`` exception is raised by a model's ``_meta."
"get_field()`` method when the requested field does not exist on the model or "
"on the model's parents."
msgstr ""

msgid "``MultipleObjectsReturned``"
msgstr ""

msgid ""
"The :exc:`MultipleObjectsReturned` exception is raised by a query if only "
"one object is expected, but multiple objects are returned. A base version of "
"this exception is provided in :mod:`django.core.exceptions`; each model "
"class contains a subclassed version that can be used to identify the "
"specific object type that has returned multiple objects."
msgstr ""

msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information."
msgstr ""

msgid "``SuspiciousOperation``"
msgstr ""

msgid ""
"The :exc:`SuspiciousOperation` exception is raised when a user has performed "
"an operation that should be considered suspicious from a security "
"perspective, such as tampering with a session cookie. Subclasses of "
"``SuspiciousOperation`` include:"
msgstr ""

msgid "``DisallowedHost``"
msgstr ""

msgid "``DisallowedModelAdminLookup``"
msgstr ""

msgid "``DisallowedModelAdminToField``"
msgstr ""

msgid "``DisallowedRedirect``"
msgstr ""

msgid "``InvalidSessionKey``"
msgstr ""

msgid "``RequestDataTooBig``"
msgstr ""

msgid "``SuspiciousFileOperation``"
msgstr ""

msgid "``SuspiciousMultipartForm``"
msgstr ""

msgid "``SuspiciousSession``"
msgstr ""

msgid "``TooManyFieldsSent``"
msgstr ""

msgid ""
"If a ``SuspiciousOperation`` exception reaches the WSGI handler level it is "
"logged at the ``Error`` level and results in a :class:`~django.http."
"HttpResponseBadRequest`. See the :doc:`logging documentation </topics/"
"logging/>` for more information."
msgstr ""

msgid "``PermissionDenied``"
msgstr ""

msgid ""
"The :exc:`PermissionDenied` exception is raised when a user does not have "
"permission to perform the action requested."
msgstr ""

msgid "``ViewDoesNotExist``"
msgstr ""

msgid ""
"The :exc:`ViewDoesNotExist` exception is raised by :mod:`django.urls` when a "
"requested view does not exist."
msgstr ""

msgid "``MiddlewareNotUsed``"
msgstr ""

msgid ""
"The :exc:`MiddlewareNotUsed` exception is raised when a middleware is not "
"used in the server configuration."
msgstr ""

msgid "``ImproperlyConfigured``"
msgstr ""

msgid ""
"The :exc:`ImproperlyConfigured` exception is raised when Django is somehow "
"improperly configured -- for example, if a value in ``settings.py`` is "
"incorrect or unparseable."
msgstr ""

msgid "``FieldError``"
msgstr ""

msgid ""
"The :exc:`FieldError` exception is raised when there is a problem with a "
"model field. This can happen for several reasons:"
msgstr ""

msgid ""
"A field in a model clashes with a field of the same name from an abstract "
"base class"
msgstr ""

msgid "An infinite loop is caused by ordering"
msgstr ""

msgid "A keyword cannot be parsed from the filter parameters"
msgstr ""

msgid "A field cannot be determined from a keyword in the query parameters"
msgstr ""

msgid "A join is not permitted on the specified field"
msgstr ""

msgid "A field name is invalid"
msgstr ""

msgid "A query contains invalid order_by arguments"
msgstr ""

msgid "``ValidationError``"
msgstr ""

msgid ""
"The :exc:`ValidationError` exception is raised when data fails form or model "
"field validation. For more information about validation, see :doc:`Form and "
"Field Validation </ref/forms/validation>`, :ref:`Model Field Validation "
"<validating-objects>` and the :doc:`Validator Reference </ref/validators>`."
msgstr ""

msgid "``NON_FIELD_ERRORS``"
msgstr ""

msgid ""
"``ValidationError``\\s that don't belong to a particular field in a form or "
"model are classified as ``NON_FIELD_ERRORS``. This constant is used as a key "
"in dictionaries that otherwise map fields to their respective list of errors."
msgstr ""

msgid "URL Resolver exceptions"
msgstr ""

msgid "URL Resolver exceptions are defined in ``django.urls``."
msgstr ""

msgid ""
"In older versions, these exceptions are located in ``django.core."
"urlresolvers``. Importing from the old location will continue to work until "
"Django 2.0."
msgstr ""

msgid "``Resolver404``"
msgstr "``Resolver404``"

msgid ""
"The :exc:`Resolver404` exception is raised by :func:`~django.urls.resolve()` "
"if the path passed to ``resolve()`` doesn't map to a view. It's a subclass "
"of :class:`django.http.Http404`."
msgstr ""

msgid "``NoReverseMatch``"
msgstr "``NoReverseMatch``"

msgid ""
"The :exc:`NoReverseMatch` exception is raised by :mod:`django.urls` when a "
"matching URL in your URLconf cannot be identified based on the parameters "
"supplied."
msgstr ""

msgid "Database Exceptions"
msgstr "Pengecualian Basisdata"

msgid "Database exceptions may be imported from ``django.db``."
msgstr "Pengecualian basisdata mungkin diimpor dari ``django.db``."

msgid ""
"Django wraps the standard database exceptions so that your Django code has a "
"guaranteed common implementation of these classes."
msgstr ""
"Django membungkus pengecualian basisdata standar sehingga kode Django anda "
"mempunyai jaminan penerapan umum pada kelas-kelas ini."

msgid ""
"The Django wrappers for database exceptions behave exactly the same as the "
"underlying database exceptions. See :pep:`249`, the Python Database API "
"Specification v2.0, for further information."
msgstr ""

msgid ""
"As per :pep:`3134`, a ``__cause__`` attribute is set with the original "
"(underlying) database exception, allowing access to any additional "
"information provided. (Note that this attribute is available under both "
"Python 2 and Python 3, although :pep:`3134` normally only applies to Python "
"3. To avoid unexpected differences with Python 3, Django will also ensure "
"that the exception made available via ``__cause__`` has a usable "
"``__traceback__`` attribute.)"
msgstr ""

msgid "The ``__traceback__`` attribute described above was added."
msgstr "Atribut `__traceback__`` digambarkan diatas telah ditambahkan."

msgid ""
"Raised to prevent deletion of referenced objects when using :attr:`django.db."
"models.PROTECT`. :exc:`models.ProtectedError` is a subclass of :exc:"
"`IntegrityError`."
msgstr ""

msgid "Http Exceptions"
msgstr "Pengecualian Http "

msgid "Http exceptions may be imported from ``django.http``."
msgstr "Pengecualian Http mungkin diimpor dari ``django.http``."

msgid "``UnreadablePostError``"
msgstr "``UnreadablePostError``"

msgid ":exc:`UnreadablePostError` is raised when a user cancels an upload."
msgstr ""

msgid "Transaction Exceptions"
msgstr "Pengecualian Transaksi"

msgid "Transaction exceptions are defined in ``django.db.transaction``."
msgstr "Pengecualian transaksi ditentukan dalam ``django.db.transaction``. "

msgid "``TransactionManagementError``"
msgstr "``TransactionManagementError``"

msgid ""
":exc:`TransactionManagementError` is raised for any and all problems related "
"to database transactions."
msgstr ""

msgid "Testing Framework Exceptions"
msgstr ""

msgid "Exceptions provided by the ``django.test`` package."
msgstr ""

msgid "``RedirectCycleError``"
msgstr "``RedirectCycleError``"

msgid ""
":exc:`~client.RedirectCycleError` is raised when the test client detects a "
"loop or an overly long chain of redirects."
msgstr ""

msgid "Python Exceptions"
msgstr "Pengecualian Python"

msgid ""
"Django raises built-in Python exceptions when appropriate as well. See the "
"Python documentation for further information on the :ref:`bltin-exceptions`."
msgstr ""

msgid "The ``File`` object"
msgstr "Obyek ``File``"

msgid ""
"The :mod:`django.core.files` module and its submodules contain built-in "
"classes for basic file handling in Django."
msgstr ""

msgid "The ``File`` class"
msgstr "Kelas ``File``"

msgid ""
"The :class:`File` class is a thin wrapper around a Python :py:term:`file "
"object` with some Django-specific additions. Internally, Django uses this "
"class when it needs to represent a file."
msgstr ""

msgid ":class:`File` objects have the following attributes and methods:"
msgstr ""

msgid ""
"The name of the file including the relative path from :setting:`MEDIA_ROOT`."
msgstr ""

msgid "The size of the file in bytes."
msgstr ""

msgid "The underlying :py:term:`file object` that this class wraps."
msgstr ""

msgid "Be careful with this attribute in subclasses."
msgstr ""

msgid ""
"Some subclasses of :class:`File`, including :class:`~django.core.files.base."
"ContentFile` and :class:`~django.db.models.fields.files.FieldFile`, may "
"replace this attribute with an object other than a Python :py:term:`file "
"object`. In these cases, this attribute may itself be a :class:`File` "
"subclass (and not necessarily the same subclass). Whenever possible, use the "
"attributes and methods of the subclass itself rather than the those of the "
"subclass's ``file`` attribute."
msgstr ""
"Beberapa subkelas dari :class:`File`, termasuk :class:`~django.core.files."
"base.ContentFile` dan :class:`~django.db.models.fields.files.FieldFile`, "
"mungkin mengganti atribut ini dengan sebuah obyek selain sebuah :py:term:"
"`file object` Python. Dalam kasus ini, atribut ini itu sendiri mungkin "
"berupa subkelas :class:`File` (dan belum tentu subkelas sama). Bilamana "
"memungkinkan, gunakan atribut dan metode dari subkelas itu sendiri daripada "
"itu dari subkelas atribut ``file``. "

msgid "The read/write mode for the file."
msgstr ""

msgid ""
"Open or reopen the file (which also does ``File.seek(0)``). The ``mode`` "
"argument allows the same values as Python's built-in :func:`python:open()`."
msgstr ""

msgid ""
"When reopening a file, ``mode`` will override whatever mode the file was "
"originally opened with; ``None`` means to reopen with the original mode."
msgstr ""

msgid "Iterate over the file yielding one line at a time."
msgstr ""

msgid ""
"Iterate over the file yielding \"chunks\" of a given size. ``chunk_size`` "
"defaults to 64 KB."
msgstr ""

msgid ""
"This is especially useful with very large files since it allows them to be "
"streamed off disk and avoids storing the whole file in memory."
msgstr ""

msgid ""
"Returns ``True`` if the file is large enough to require multiple chunks to "
"access all of its content give some ``chunk_size``."
msgstr ""

msgid "Close the file."
msgstr "Tutup berkas."

msgid ""
"In addition to the listed methods, :class:`~django.core.files.File` exposes "
"the following attributes and methods of its ``file`` object: ``encoding``, "
"``fileno``, ``flush``, ``isatty``, ``newlines``, ``read``, ``readinto``, "
"``readline``, ``readlines``, ``seek``, ``softspace``, ``tell``, "
"``truncate``, ``write``, ``writelines``, ``xreadlines``, ``readable()``, "
"``writable()``, and ``seekable()``."
msgstr ""

msgid ""
"The ``readable()`` and ``writable()`` methods were added and the "
"``seekable()`` method was made available on Python 2."
msgstr ""

msgid "The ``ContentFile`` class"
msgstr "Kelas ``ContentFile``"

msgid ""
"The ``ContentFile`` class inherits from :class:`~django.core.files.File`, "
"but unlike :class:`~django.core.files.File` it operates on string content "
"(bytes also supported), rather than an actual file. For example::"
msgstr ""

msgid "The ``ImageFile`` class"
msgstr "Kelas ``ImageFile``"

msgid ""
"Django provides a built-in class specifically for images. :class:`django."
"core.files.images.ImageFile` inherits all the attributes and methods of :"
"class:`~django.core.files.File`, and additionally provides the following:"
msgstr ""

msgid "Width of the image in pixels."
msgstr ""

msgid "Height of the image in pixels."
msgstr ""

msgid "Additional methods on files attached to objects"
msgstr ""

msgid ""
"Any :class:`File` that is associated with an object (as with ``Car.photo``, "
"below) will also have a couple of extra methods:"
msgstr ""

msgid ""
"Saves a new file with the file name and contents provided. This will not "
"replace the existing file, but will create a new file and update the object "
"to point to it. If ``save`` is ``True``, the model's ``save()`` method will "
"be called once the file is saved. That is, these two lines::"
msgstr ""

msgid "are equivalent to::"
msgstr "adalah setara pada::"

msgid ""
"Note that the ``content`` argument must be an instance of either :class:"
"`File` or of a subclass of :class:`File`, such as :class:`~django.core.files."
"base.ContentFile`."
msgstr ""

msgid ""
"Removes the file from the model instance and deletes the underlying file. If "
"``save`` is ``True``, the model's ``save()`` method will be called once the "
"file is deleted."
msgstr ""

msgid "File handling"
msgstr ""

msgid "File storage API"
msgstr ""

msgid "Getting the current storage class"
msgstr ""

msgid ""
"Django provides two convenient ways to access the current storage class:"
msgstr ""

msgid ""
":class:`~django.core.files.storage.DefaultStorage` provides lazy access to "
"the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. :class:`DefaultStorage` uses :func:`~django.core."
"files.storage.get_storage_class` internally."
msgstr ""

msgid "Returns a class or module which implements the storage API."
msgstr ""

msgid ""
"When called without the ``import_path`` parameter ``get_storage_class`` will "
"return the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. If ``import_path`` is provided, "
"``get_storage_class`` will attempt to import the class or module from the "
"given path and will return it if successful. An exception will be raised if "
"the import is unsuccessful."
msgstr ""

msgid "The ``FileSystemStorage`` class"
msgstr "Kelas ``FileSystemStorage``"

msgid ""
"The :class:`~django.core.files.storage.FileSystemStorage` class implements "
"basic file storage on a local filesystem. It inherits from :class:`~django."
"core.files.storage.Storage` and provides implementations for all the public "
"methods thereof."
msgstr ""

msgid ""
"Absolute path to the directory that will hold the files. Defaults to the "
"value of your :setting:`MEDIA_ROOT` setting."
msgstr ""

msgid ""
"URL that serves the files stored at this location. Defaults to the value of "
"your :setting:`MEDIA_URL` setting."
msgstr ""

msgid ""
"The file system permissions that the file will receive when it is saved. "
"Defaults to :setting:`FILE_UPLOAD_PERMISSIONS`."
msgstr ""

msgid ""
"The file system permissions that the directory will receive when it is "
"saved. Defaults to :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS`."
msgstr ""

msgid ""
"The ``FileSystemStorage.delete()`` method will not raise an exception if the "
"given file name does not exist."
msgstr ""

msgid ""
"Returns a :class:`~datetime.datetime` of the system's ctime, i.e. :func:`os."
"path.getctime`. On some systems (like Unix), this is the time of the last "
"metadata change, and on others (like Windows), it's the creation time of the "
"file."
msgstr ""

msgid "The ``Storage`` class"
msgstr "Kelas ``Storage``"

msgid ""
"The :class:`~django.core.files.storage.Storage` class provides a "
"standardized API for storing files, along with a set of default behaviors "
"that all other storage systems can inherit or override as necessary."
msgstr ""

msgid ""
"When methods return naive ``datetime`` objects, the effective timezone used "
"will be the current value of ``os.environ['TZ']``; note that this is usually "
"set from Django's :setting:`TIME_ZONE`."
msgstr ""

msgid ""
"Returns a naive ``datetime`` object containing the last accessed time of the "
"file. For storage systems that aren't able to return the last accessed time "
"this will raise ``NotImplementedError`` instead."
msgstr ""

msgid "Use :meth:`get_accessed_time` instead."
msgstr "Gunakan :meth:`get_accessed_time` sebagai gantinya."

msgid ""
"Returns a naive ``datetime`` object containing the creation time of the "
"file.  For storage systems that aren't able to return the creation time this "
"will raise ``NotImplementedError`` instead."
msgstr ""

msgid "Use :meth:`get_created_time` instead."
msgstr "Gunakan :meth:`get_created_time` sebagai gantinya."

msgid ""
"Deletes the file referenced by ``name``. If deletion is not supported on the "
"target storage system this will raise ``NotImplementedError`` instead"
msgstr ""

msgid ""
"Returns ``True`` if a file referenced by the given name already exists in "
"the storage system, or ``False`` if the name is available for a new file."
msgstr ""

msgid ""
"Returns a :class:`~datetime.datetime` of the last accessed time of the file. "
"For storage systems unable to return the last accessed time this will raise :"
"exc:`NotImplementedError`."
msgstr ""

msgid ""
"If :setting:`USE_TZ` is ``True``, returns an aware ``datetime``, otherwise "
"returns a naive ``datetime`` in the local timezone."
msgstr ""

msgid ""
"Returns a filename based on the ``name`` parameter that's free and available "
"for new content to be written to on the target storage system."
msgstr ""

msgid ""
"The length of the filename will not exceed ``max_length``, if provided. If a "
"free unique filename cannot be found, a :exc:`SuspiciousFileOperation "
"<django.core.exceptions.SuspiciousOperation>` exception will be raised."
msgstr ""

msgid ""
"If a file with ``name`` already exists, an underscore plus a random 7 "
"character alphanumeric string is appended to the filename before the "
"extension."
msgstr ""
"Jika sebuah berkas dengan ``name`` sudah ada, garis bawah ditambah 7 "
"karakter acak alpanumerik string akan ditambahkan ke nama berkas sebelum "
"tambahan."

msgid ""
"Returns a :class:`~datetime.datetime` of the creation time of the file. For "
"storage systems unable to return the creation time this will raise :exc:"
"`NotImplementedError`."
msgstr ""

msgid ""
"Returns a :class:`~datetime.datetime` of the last modified time of the file. "
"For storage systems unable to return the last modified time this will raise :"
"exc:`NotImplementedError`."
msgstr ""

msgid ""
"Returns a filename based on the ``name`` parameter that's suitable for use "
"on the target storage system."
msgstr ""

msgid ""
"Validates the ``filename`` by calling :attr:`get_valid_name()` and returns a "
"filename to be passed to the :meth:`save` method."
msgstr ""

msgid ""
"The ``filename`` argument may include a path as returned by :attr:`FileField."
"upload_to <django.db.models.FileField.upload_to>`. In that case, the path "
"won't be passed to :attr:`get_valid_name()` but will be prepended back to "
"the resulting name."
msgstr ""

msgid ""
"The default implementation uses :mod:`os.path` operations. Override this "
"method if that's not appropriate for your storage."
msgstr ""
"Penerapan awal menggunakan operasi :mod:`os.path`. Kesampingkan cara ini "
"jika itu tidak sesuai untuk penyimpanan anda."

msgid ""
"Lists the contents of the specified path, returning a 2-tuple of lists; the "
"first item being directories, the second item being files. For storage "
"systems that aren't able to provide such a listing, this will raise a "
"``NotImplementedError`` instead."
msgstr ""

msgid ""
"Returns a naive ``datetime`` object containing the last modified time. For "
"storage systems that aren't able to return the last modified time, this will "
"raise ``NotImplementedError`` instead."
msgstr ""

msgid "Use :meth:`get_modified_time` instead."
msgstr "Gunakan :meth:`get_modified_time` sebagai gantinya."

msgid ""
"Opens the file given by ``name``. Note that although the returned file is "
"guaranteed to be a ``File`` object, it might actually be some subclass. In "
"the case of remote file storage this means that reading/writing could be "
"quite slow, so be warned."
msgstr ""

msgid ""
"The local filesystem path where the file can be opened using Python's "
"standard ``open()``. For storage systems that aren't accessible from the "
"local filesystem, this will raise ``NotImplementedError`` instead."
msgstr ""

msgid ""
"Saves a new file using the storage system, preferably with the name "
"specified. If there already exists a file with this name ``name``, the "
"storage system may modify the filename as necessary to get a unique name. "
"The actual name of the stored file will be returned."
msgstr ""

msgid ""
"The ``max_length`` argument is passed along to :meth:`get_available_name`."
msgstr ""

msgid ""
"The ``content`` argument must be an instance of :class:`django.core.files."
"File` or a file-like object that can be wrapped in ``File``."
msgstr ""

msgid ""
"Returns the total size, in bytes, of the file referenced by ``name``. For "
"storage systems that aren't able to return the file size this will raise "
"``NotImplementedError`` instead."
msgstr ""

msgid ""
"Returns the URL where the contents of the file referenced by ``name`` can be "
"accessed. For storage systems that don't support access by URL this will "
"raise ``NotImplementedError`` instead."
msgstr ""

msgid "Uploaded Files and Upload Handlers"
msgstr ""

msgid "Uploaded files"
msgstr "Berkas-berkas terunggah"

msgid ""
"During file uploads, the actual file data is stored in :attr:`request.FILES "
"<django.http.HttpRequest.FILES>`. Each entry in this dictionary is an "
"``UploadedFile`` object (or a subclass) -- a simple wrapper around an "
"uploaded file. You'll usually use one of these methods to access the "
"uploaded content:"
msgstr ""

msgid ""
"Read the entire uploaded data from the file. Be careful with this method: if "
"the uploaded file is huge it can overwhelm your system if you try to read it "
"into memory. You'll probably want to use ``chunks()`` instead; see below."
msgstr ""

msgid ""
"Returns ``True`` if the uploaded file is big enough to require reading in "
"multiple chunks. By default this will be any file larger than 2.5 megabytes, "
"but that's configurable; see below."
msgstr ""

msgid ""
"A generator returning chunks of the file. If ``multiple_chunks()`` is "
"``True``, you should use this method in a loop instead of ``read()``."
msgstr ""

msgid ""
"In practice, it's often easiest simply to use ``chunks()`` all the time. "
"Looping over ``chunks()`` instead of using ``read()`` ensures that large "
"files don't overwhelm your system's memory."
msgstr ""

msgid "Here are some useful attributes of ``UploadedFile``:"
msgstr "Ini adalah atribut-atribut berguna dari ``UploadedFile``:"

msgid "The name of the uploaded file (e.g. ``my_file.txt``)."
msgstr "Nama dari berkas terunggah (sebagai contoh ``my_file.txt``)."

msgid "The size, in bytes, of the uploaded file."
msgstr "Ukuran, dalam byte, dari berkas terunggah."

msgid ""
"The content-type header uploaded with the file (e.g. :mimetype:`text/plain` "
"or :mimetype:`application/pdf`). Like any data supplied by the user, you "
"shouldn't trust that the uploaded file is actually this type. You'll still "
"need to validate that the file contains the content that the content-type "
"header claims -- \"trust but verify.\""
msgstr ""

msgid ""
"A dictionary containing extra parameters passed to the ``content-type`` "
"header. This is typically provided by services, such as Google App Engine, "
"that intercept and handle file uploads on your behalf. As a result your "
"handler may not receive the uploaded file content, but instead a URL or "
"other pointer to the file. (see `RFC 2388`_ section 5.3)."
msgstr ""

msgid ""
"For :mimetype:`text/*` content-types, the character set (i.e. ``utf8``) "
"supplied by the browser. Again, \"trust but verify\" is the best policy here."
msgstr ""

msgid ""
"Like regular Python files, you can read the file line-by-line simply by "
"iterating over the uploaded file:"
msgstr ""

msgid ""
"Lines are split using `universal newlines`_. The following are recognized as "
"ending a line: the Unix end-of-line convention ``'\\n'``, the Windows "
"convention ``'\\r\\n'``, and the old Macintosh convention ``'\\r'``."
msgstr ""

msgid "Subclasses of ``UploadedFile`` include:"
msgstr ""

msgid ""
"A file uploaded to a temporary location (i.e. stream-to-disk). This class is "
"used by the :class:`~django.core.files.uploadhandler."
"TemporaryFileUploadHandler`. In addition to the methods from :class:"
"`UploadedFile`, it has one additional method:"
msgstr ""

msgid "Returns the full path to the temporary uploaded file."
msgstr ""

msgid ""
"A file uploaded into memory (i.e. stream-to-memory). This class is used by "
"the :class:`~django.core.files.uploadhandler.MemoryFileUploadHandler`."
msgstr ""

msgid "Built-in upload handlers"
msgstr ""

msgid ""
"Together the :class:`MemoryFileUploadHandler` and :class:"
"`TemporaryFileUploadHandler` provide Django's default file upload behavior "
"of reading small files into memory and large ones onto disk. They are "
"located in ``django.core.files.uploadhandler``."
msgstr ""

msgid ""
"File upload handler to stream uploads into memory (used for small files)."
msgstr ""

msgid ""
"Upload handler that streams data into a temporary file using :class:`~django."
"core.files.uploadedfile.TemporaryUploadedFile`."
msgstr ""

msgid "Writing custom upload handlers"
msgstr ""

msgid ""
"All file upload handlers should be subclasses of ``django.core.files."
"uploadhandler.FileUploadHandler``. You can define upload handlers wherever "
"you wish."
msgstr ""

msgid "Required methods"
msgstr ""

msgid "Custom file upload handlers **must** define the following methods:"
msgstr ""

msgid "Receives a \"chunk\" of data from the file upload."
msgstr ""

msgid "``raw_data`` is a byte string containing the uploaded data."
msgstr ""

msgid ""
"``start`` is the position in the file where this ``raw_data`` chunk begins."
msgstr ""

msgid ""
"The data you return will get fed into the subsequent upload handlers' "
"``receive_data_chunk`` methods. In this way, one handler can be a \"filter\" "
"for other handlers."
msgstr ""

msgid ""
"Return ``None`` from ``receive_data_chunk`` to short-circuit remaining "
"upload handlers from getting this chunk. This is useful if you're storing "
"the uploaded data yourself and don't want future handlers to store a copy of "
"the data."
msgstr ""

msgid ""
"If you raise a ``StopUpload`` or a ``SkipFile`` exception, the upload will "
"abort or the file will be completely skipped."
msgstr ""

msgid "Called when a file has finished uploading."
msgstr ""

msgid ""
"The handler should return an ``UploadedFile`` object that will be stored in "
"``request.FILES``. Handlers may also return ``None`` to indicate that the "
"``UploadedFile`` object should come from subsequent upload handlers."
msgstr ""

msgid "Optional methods"
msgstr ""

msgid ""
"Custom upload handlers may also define any of the following optional methods "
"or attributes:"
msgstr ""

msgid ""
"Size, in bytes, of the \"chunks\" Django should store into memory and feed "
"into the handler. That is, this attribute controls the size of chunks fed "
"into ``FileUploadHandler.receive_data_chunk``."
msgstr ""

msgid ""
"For maximum performance the chunk sizes should be divisible by ``4`` and "
"should not exceed 2 GB (2\\ :sup:`31` bytes) in size. When there are "
"multiple chunk sizes provided by multiple handlers, Django will use the "
"smallest chunk size defined by any handler."
msgstr ""

msgid "The default is 64*2\\ :sup:`10` bytes, or 64 KB."
msgstr ""

msgid ""
"Callback signaling that a new file upload is starting. This is called before "
"any data has been fed to any upload handlers."
msgstr ""

msgid "``field_name`` is a string name of the file ``<input>`` field."
msgstr ""

msgid "``file_name`` is the unicode filename that was provided by the browser."
msgstr ""

msgid ""
"``content_type`` is the MIME type provided by the browser -- E.g. ``'image/"
"jpeg'``."
msgstr ""

msgid ""
"``content_length`` is the length of the image given by the browser. "
"Sometimes this won't be provided and will be ``None``."
msgstr ""

msgid ""
"``charset`` is the character set (i.e. ``utf8``) given by the browser. Like "
"``content_length``, this sometimes won't be provided."
msgstr ""

msgid ""
"``content_type_extra`` is extra information about the file from the "
"``content-type`` header. See :attr:`UploadedFile.content_type_extra <django."
"core.files.uploadedfile.UploadedFile.content_type_extra>`."
msgstr ""

msgid ""
"This method may raise a ``StopFutureHandlers`` exception to prevent future "
"handlers from handling this file."
msgstr ""

msgid "Callback signaling that the entire upload (all files) has completed."
msgstr ""

msgid ""
"Allows the handler to completely override the parsing of the raw HTTP input."
msgstr ""

msgid "``input_data`` is a file-like object that supports ``read()``-ing."
msgstr ""

msgid "``META`` is the same object as ``request.META``."
msgstr ""

msgid ""
"``content_length`` is the length of the data in ``input_data``. Don't read "
"more than ``content_length`` bytes from ``input_data``."
msgstr ""

msgid "``boundary`` is the MIME boundary for this request."
msgstr ""

msgid "``encoding`` is the encoding of the request."
msgstr ""

msgid ""
"Return ``None`` if you want upload handling to continue, or a tuple of "
"``(POST, FILES)`` if you want to return the new data structures suitable for "
"the request directly."
msgstr ""

msgid "The Forms API"
msgstr ""

msgid "About this document"
msgstr "Tentang dokumen ini"

msgid ""
"This document covers the gritty details of Django's forms API. You should "
"read the :doc:`introduction to working with forms </topics/forms/index>` "
"first."
msgstr ""

msgid "Bound and unbound forms"
msgstr ""

msgid ""
"A :class:`Form` instance is either **bound** to a set of data, or "
"**unbound**."
msgstr ""

msgid ""
"If it's **bound** to a set of data, it's capable of validating that data and "
"rendering the form as HTML with the data displayed in the HTML."
msgstr ""

msgid ""
"If it's **unbound**, it cannot do validation (because there's no data to "
"validate!), but it can still render the blank form as HTML."
msgstr ""

msgid ""
"To create an unbound :class:`Form` instance, simply instantiate the class::"
msgstr ""

msgid ""
"To bind data to a form, pass the data as a dictionary as the first parameter "
"to your :class:`Form` class constructor::"
msgstr ""

msgid ""
"In this dictionary, the keys are the field names, which correspond to the "
"attributes in your :class:`Form` class. The values are the data you're "
"trying to validate. These will usually be strings, but there's no "
"requirement that they be strings; the type of data you pass depends on the :"
"class:`Field`, as we'll see in a moment."
msgstr ""

msgid ""
"If you need to distinguish between bound and unbound form instances at "
"runtime, check the value of the form's :attr:`~Form.is_bound` attribute::"
msgstr ""

msgid ""
"Note that passing an empty dictionary creates a *bound* form with empty "
"data::"
msgstr ""

msgid ""
"If you have a bound :class:`Form` instance and want to change the data "
"somehow, or if you want to bind an unbound :class:`Form` instance to some "
"data, create another :class:`Form` instance. There is no way to change data "
"in a :class:`Form` instance. Once a :class:`Form` instance has been created, "
"you should consider its data immutable, whether it has data or not."
msgstr ""

msgid "Using forms to validate data"
msgstr ""

msgid ""
"Implement a ``clean()`` method on your ``Form`` when you must add custom "
"validation for fields that are interdependent. See :ref:`validating-fields-"
"with-clean` for example usage."
msgstr ""

msgid ""
"The primary task of a :class:`Form` object is to validate data. With a "
"bound :class:`Form` instance, call the :meth:`~Form.is_valid` method to run "
"validation and return a boolean designating whether the data was valid::"
msgstr ""

msgid ""
"Let's try with some invalid data. In this case, ``subject`` is blank (an "
"error, because all fields are required by default) and ``sender`` is not a "
"valid email address::"
msgstr ""

msgid ""
"Access the :attr:`~Form.errors` attribute to get a dictionary of error "
"messages::"
msgstr ""

msgid ""
"In this dictionary, the keys are the field names, and the values are lists "
"of Unicode strings representing the error messages. The error messages are "
"stored in lists because a field can have multiple error messages."
msgstr ""

msgid ""
"You can access :attr:`~Form.errors` without having to call :meth:`~Form."
"is_valid` first. The form's data will be validated the first time either you "
"call :meth:`~Form.is_valid` or access :attr:`~Form.errors`."
msgstr ""

msgid ""
"The validation routines will only get called once, regardless of how many "
"times you access :attr:`~Form.errors` or call :meth:`~Form.is_valid`. This "
"means that if validation has side effects, those side effects will only be "
"triggered once."
msgstr ""

msgid ""
"Returns a ``dict`` that maps fields to their original ``ValidationError`` "
"instances."
msgstr ""

msgid ""
"Use this method anytime you need to identify an error by its ``code``. This "
"enables things like rewriting the error's message or writing custom logic in "
"a view when a given error is present. It can also be used to serialize the "
"errors in a custom format (e.g. XML); for instance, :meth:`~Form.errors."
"as_json()` relies on ``as_data()``."
msgstr ""

msgid ""
"The need for the ``as_data()`` method is due to backwards compatibility. "
"Previously ``ValidationError`` instances were lost as soon as their "
"**rendered** error messages were added to the ``Form.errors`` dictionary. "
"Ideally ``Form.errors`` would have stored ``ValidationError`` instances and "
"methods with an ``as_`` prefix could render them, but it had to be done the "
"other way around in order not to break code that expects rendered error "
"messages in ``Form.errors``."
msgstr ""

msgid "Returns the errors serialized as JSON."
msgstr ""

msgid ""
"By default, ``as_json()`` does not escape its output. If you are using it "
"for something like AJAX requests to a form view where the client interprets "
"the response and inserts errors into the page, you'll want to be sure to "
"escape the results on the client-side to avoid the possibility of a cross-"
"site scripting attack. It's trivial to do so using a JavaScript library like "
"jQuery - simply use ``$(el).text(errorText)`` rather than ``.html()``."
msgstr ""

msgid ""
"If for some reason you don't want to use client-side escaping, you can also "
"set ``escape_html=True`` and error messages will be escaped so you can use "
"them directly in HTML."
msgstr ""

msgid ""
"This method allows adding errors to specific fields from within the ``Form."
"clean()`` method, or from outside the form altogether; for instance from a "
"view."
msgstr ""

msgid ""
"The ``field`` argument is the name of the field to which the errors should "
"be added. If its value is ``None`` the error will be treated as a non-field "
"error as returned by :meth:`Form.non_field_errors() <django.forms.Form."
"non_field_errors>`."
msgstr ""

msgid ""
"The ``error`` argument can be a simple string, or preferably an instance of "
"``ValidationError``. See :ref:`raising-validation-error` for best practices "
"when defining form errors."
msgstr ""

msgid ""
"Note that ``Form.add_error()`` automatically removes the relevant field from "
"``cleaned_data``."
msgstr ""

msgid ""
"This method returns a boolean designating whether a field has an error with "
"a specific error ``code``. If ``code`` is ``None``, it will return ``True`` "
"if the field contains any errors at all."
msgstr ""

msgid ""
"To check for non-field errors use :data:`~django.core.exceptions."
"NON_FIELD_ERRORS` as the ``field`` parameter."
msgstr ""

msgid ""
"This method returns the list of errors from :attr:`Form.errors <django.forms."
"Form.errors>`  that aren't associated with a particular field. This includes "
"``ValidationError``\\s that are raised in :meth:`Form.clean() <django.forms."
"Form.clean>` and errors added using :meth:`Form.add_error(None, \"...\") "
"<django.forms.Form.add_error>`."
msgstr ""

msgid "Behavior of unbound forms"
msgstr ""

msgid ""
"It's meaningless to validate a form with no data, but, for the record, "
"here's what happens with unbound forms::"
msgstr ""

msgid "Dynamic initial values"
msgstr ""

msgid ""
"Use :attr:`~Form.initial` to declare the initial value of form fields at "
"runtime. For example, you might want to fill in a ``username`` field with "
"the username of the current session."
msgstr ""

msgid ""
"To accomplish this, use the :attr:`~Form.initial` argument to a :class:"
"`Form`. This argument, if given, should be a dictionary mapping field names "
"to initial values. Only include the fields for which you're specifying an "
"initial value; it's not necessary to include every field in your form. For "
"example::"
msgstr ""

msgid ""
"These values are only displayed for unbound forms, and they're not used as "
"fallback values if a particular value isn't provided."
msgstr ""

msgid ""
"If a :class:`~django.forms.Field` defines :attr:`~Field.initial` *and* you "
"include :attr:`~Form.initial` when instantiating the ``Form``, then the "
"latter ``initial`` will have precedence. In this example, ``initial`` is "
"provided both at the field level and at the form instance level, and the "
"latter gets precedence::"
msgstr ""

msgid ""
"Use :meth:`~Form.get_initial_for_field()` to retrieve initial data for a "
"form field. It retrieves data from :attr:`Form.initial` and :attr:`Field."
"initial`, in that order, and evaluates any callable initial values."
msgstr ""

msgid "Checking which form data has changed"
msgstr ""

msgid ""
"Use the ``has_changed()`` method on your ``Form`` when you need to check if "
"the form data has been changed from the initial data."
msgstr ""

msgid ""
"When the form is submitted, we reconstruct it and provide the original data "
"so that the comparison can be done:"
msgstr ""

msgid ""
"``has_changed()`` will be ``True`` if the data from ``request.POST`` differs "
"from what was provided in :attr:`~Form.initial` or ``False`` otherwise. The "
"result is computed by calling :meth:`Field.has_changed` for each field in "
"the form."
msgstr ""

msgid ""
"The ``changed_data`` attribute returns a list of the names of the fields "
"whose values in the form's bound data (usually ``request.POST``) differ from "
"what was provided in :attr:`~Form.initial`. It returns an empty list if no "
"data differs."
msgstr ""

msgid "Accessing the fields from the form"
msgstr ""

msgid ""
"You can access the fields of :class:`Form` instance from its ``fields`` "
"attribute::"
msgstr ""

msgid ""
"You can alter the field of :class:`Form` instance to change the way it is "
"presented in the form::"
msgstr ""

msgid ""
"Beware not to alter the ``base_fields`` attribute because this modification "
"will influence all subsequent ``ContactForm`` instances within the same "
"Python process::"
msgstr ""

msgid "Accessing \"clean\" data"
msgstr ""

msgid ""
"Each field in a :class:`Form` class is responsible not only for validating "
"data, but also for \"cleaning\" it -- normalizing it to a consistent format. "
"This is a nice feature, because it allows data for a particular field to be "
"input in a variety of ways, always resulting in consistent output."
msgstr ""

msgid ""
"For example, :class:`~django.forms.DateField` normalizes input into a Python "
"``datetime.date`` object. Regardless of whether you pass it a string in the "
"format ``'1994-07-15'``, a ``datetime.date`` object, or a number of other "
"formats, ``DateField`` will always normalize it to a ``datetime.date`` "
"object as long as it's valid."
msgstr ""

msgid ""
"Once you've created a :class:`~Form` instance with a set of data and "
"validated it, you can access the clean data via its ``cleaned_data`` "
"attribute::"
msgstr ""

msgid ""
"Note that any text-based field -- such as ``CharField`` or ``EmailField`` -- "
"always cleans the input into a Unicode string. We'll cover the encoding "
"implications later in this document."
msgstr ""

msgid ""
"If your data does *not* validate, the ``cleaned_data`` dictionary contains "
"only the valid fields::"
msgstr ""

msgid ""
"``cleaned_data`` will always *only* contain a key for fields defined in the "
"``Form``, even if you pass extra data when you define the ``Form``. In this "
"example, we pass a bunch of extra fields to the ``ContactForm`` constructor, "
"but ``cleaned_data`` contains only the form's fields::"
msgstr ""

msgid ""
"When the ``Form`` is valid, ``cleaned_data`` will include a key and value "
"for *all* its fields, even if the data didn't include a value for some "
"optional fields. In this example, the data dictionary doesn't include a "
"value for the ``nick_name`` field, but ``cleaned_data`` includes it, with an "
"empty value::"
msgstr ""

msgid ""
"In this above example, the ``cleaned_data`` value for ``nick_name`` is set "
"to an empty string, because ``nick_name`` is ``CharField``, and ``CharField``"
"\\s treat empty values as an empty string. Each field type knows what its "
"\"blank\" value is -- e.g., for ``DateField``, it's ``None`` instead of the "
"empty string. For full details on each field's behavior in this case, see "
"the \"Empty value\" note for each field in the \"Built-in ``Field`` classes"
"\" section below."
msgstr ""

msgid ""
"You can write code to perform validation for particular form fields (based "
"on their name) or for the form as a whole (considering combinations of "
"various fields). More information about this is in :doc:`/ref/forms/"
"validation`."
msgstr ""

msgid "Outputting forms as HTML"
msgstr ""

msgid ""
"The second task of a ``Form`` object is to render itself as HTML. To do so, "
"simply ``print`` it::"
msgstr ""

msgid ""
"If the form is bound to data, the HTML output will include that data "
"appropriately. For example, if a field is represented by an ``<input type="
"\"text\">``, the data will be in the ``value`` attribute. If a field is "
"represented by an ``<input type=\"checkbox\">``, then that HTML will include "
"``checked`` if appropriate::"
msgstr ""

msgid ""
"The ``checked`` attribute was changed to use HTML5 boolean syntax rather "
"than ``checked=\"checked\"``."
msgstr ""

msgid ""
"This default output is a two-column HTML table, with a ``<tr>`` for each "
"field. Notice the following:"
msgstr ""

msgid ""
"For flexibility, the output does *not* include the ``<table>`` and ``</"
"table>`` tags, nor does it include the ``<form>`` and ``</form>`` tags or an "
"``<input type=\"submit\">`` tag. It's your job to do that."
msgstr ""

msgid ""
"Each field type has a default HTML representation. ``CharField`` is "
"represented by an ``<input type=\"text\">`` and ``EmailField`` by an "
"``<input type=\"email\">``. ``BooleanField`` is represented by an ``<input "
"type=\"checkbox\">``. Note these are merely sensible defaults; you can "
"specify which HTML to use for a given field by using widgets, which we'll "
"explain shortly."
msgstr ""

msgid ""
"The HTML ``name`` for each tag is taken directly from its attribute name in "
"the ``ContactForm`` class."
msgstr ""

msgid ""
"The text label for each field -- e.g. ``'Subject:'``, ``'Message:'`` and "
"``'Cc myself:'`` is generated from the field name by converting all "
"underscores to spaces and upper-casing the first letter. Again, note these "
"are merely sensible defaults; you can also specify labels manually."
msgstr ""

msgid ""
"Each text label is surrounded in an HTML ``<label>`` tag, which points to "
"the appropriate form field via its ``id``. Its ``id``, in turn, is generated "
"by prepending ``'id_'`` to the field name. The ``id`` attributes and "
"``<label>`` tags are included in the output by default, to follow best "
"practices, but you can change that behavior."
msgstr ""

msgid ""
"The output uses HTML5 syntax, targeting ``<!DOCTYPE html>``. For example, it "
"uses boolean attributes such as ``checked`` rather than the XHTML style of "
"``checked='checked'``."
msgstr ""

msgid ""
"Although ``<table>`` output is the default output style when you ``print`` a "
"form, other output styles are available. Each style is available as a method "
"on a form object, and each rendering method returns a Unicode object."
msgstr ""

msgid "``as_p()``"
msgstr ""

msgid ""
"``as_p()`` renders the form as a series of ``<p>`` tags, with each ``<p>`` "
"containing one field::"
msgstr ""

msgid "``as_ul()``"
msgstr ""

msgid ""
"``as_ul()`` renders the form as a series of ``<li>`` tags, with each "
"``<li>`` containing one field. It does *not* include the ``<ul>`` or ``</"
"ul>``, so that you can specify any HTML attributes on the ``<ul>`` for "
"flexibility::"
msgstr ""

msgid "``as_table()``"
msgstr ""

msgid ""
"Finally, ``as_table()`` outputs the form as an HTML ``<table>``. This is "
"exactly the same as ``print``. In fact, when you ``print`` a form object, it "
"calls its ``as_table()`` method behind the scenes::"
msgstr ""

msgid "Styling required or erroneous form rows"
msgstr ""

msgid ""
"It's pretty common to style form rows and fields that are required or have "
"errors. For example, you might want to present required form rows in bold "
"and highlight errors in red."
msgstr ""

msgid ""
"The :class:`Form` class has a couple of hooks you can use to add ``class`` "
"attributes to required rows or to rows with errors: simply set the :attr:"
"`Form.error_css_class` and/or :attr:`Form.required_css_class` attributes::"
msgstr ""

msgid ""
"Once you've done that, rows will be given ``\"error\"`` and/or ``\"required"
"\"`` classes, as needed. The HTML will look something like::"
msgstr ""

msgid "Configuring form elements' HTML ``id`` attributes and ``<label>`` tags"
msgstr ""

msgid "By default, the form rendering methods include:"
msgstr ""

msgid "HTML ``id`` attributes on the form elements."
msgstr ""

msgid ""
"The corresponding ``<label>`` tags around the labels. An HTML ``<label>`` "
"tag designates which label text is associated with which form element. This "
"small enhancement makes forms more usable and more accessible to assistive "
"devices. It's always a good idea to use ``<label>`` tags."
msgstr ""

msgid ""
"The ``id`` attribute values are generated by prepending ``id_`` to the form "
"field names.  This behavior is configurable, though, if you want to change "
"the ``id`` convention or remove HTML ``id`` attributes and ``<label>`` tags "
"entirely."
msgstr ""

msgid ""
"Use the ``auto_id`` argument to the ``Form`` constructor to control the "
"``id`` and label behavior. This argument must be ``True``, ``False`` or a "
"string."
msgstr ""

msgid ""
"If ``auto_id`` is ``False``, then the form output will not include "
"``<label>`` tags nor ``id`` attributes::"
msgstr ""

msgid ""
"If ``auto_id`` is set to ``True``, then the form output *will* include "
"``<label>`` tags and will simply use the field name as its ``id`` for each "
"form field::"
msgstr ""

msgid ""
"If ``auto_id`` is set to a string containing the format character ``'%s'``, "
"then the form output will include ``<label>`` tags, and will generate ``id`` "
"attributes based on the format string. For example, for a format string "
"``'field_%s'``, a field named ``subject`` will get the ``id`` value "
"``'field_subject'``. Continuing our example::"
msgstr ""

msgid ""
"If ``auto_id`` is set to any other true value -- such as a string that "
"doesn't include ``%s`` -- then the library will act as if ``auto_id`` is "
"``True``."
msgstr ""

msgid "By default, ``auto_id`` is set to the string ``'id_%s'``."
msgstr ""

msgid ""
"A translatable string (defaults to a colon (``:``) in English) that will be "
"appended after any label name when a form is rendered."
msgstr ""

msgid ""
"It's possible to customize that character, or omit it entirely, using the "
"``label_suffix`` parameter::"
msgstr ""

msgid ""
"Note that the label suffix is added only if the last character of the label "
"isn't a punctuation character (in English, those are ``.``, ``!``, ``?`` or "
"``:``)."
msgstr ""

msgid ""
"Fields can also define their own :attr:`~django.forms.Field.label_suffix`. "
"This will take precedence over :attr:`Form.label_suffix <django.forms.Form."
"label_suffix>`. The suffix can also be overridden at runtime using the "
"``label_suffix`` parameter to :meth:`~django.forms.BoundField.label_tag`."
msgstr ""

msgid ""
"When set to ``True`` (the default), required form fields will have the "
"``required`` HTML attribute."
msgstr ""

msgid ""
":doc:`Formsets </topics/forms/formsets>` instantiate forms with "
"``use_required_attribute=False`` to avoid incorrect browser validation when "
"adding and deleting forms from a formset."
msgstr ""

msgid "Configuring the rendering of a form's widgets"
msgstr ""

msgid ""
"Specifies the :doc:`renderer <renderers>` to use for the form. Defaults to "
"``None`` which means to use the default renderer specified by the :setting:"
"`FORM_RENDERER` setting."
msgstr ""

msgid ""
"You can set this as a class attribute when declaring your form or use the "
"``renderer`` argument to ``Form.__init__()``. For example::"
msgstr ""

msgid "or::"
msgstr ""

msgid "Notes on field ordering"
msgstr ""

msgid ""
"In the ``as_p()``, ``as_ul()`` and ``as_table()`` shortcuts, the fields are "
"displayed in the order in which you define them in your form class. For "
"example, in the ``ContactForm`` example, the fields are defined in the order "
"``subject``, ``message``, ``sender``, ``cc_myself``. To reorder the HTML "
"output, just change the order in which those fields are listed in the class."
msgstr ""

msgid "There are several other ways to customize the order:"
msgstr ""

msgid ""
"By default ``Form.field_order=None``, which retains the order in which you "
"define the fields in your form class. If ``field_order`` is a list of field "
"names, the fields are ordered as specified by the list and remaining fields "
"are appended according to the default order. Unknown field names in the list "
"are ignored. This makes it possible to disable a field in a subclass by "
"setting it to ``None`` without having to redefine ordering."
msgstr ""

msgid ""
"You can also use the ``Form.field_order`` argument to a :class:`Form` to "
"override the field order. If a :class:`~django.forms.Form` defines :attr:"
"`~Form.field_order` *and* you include ``field_order`` when instantiating the "
"``Form``, then the latter ``field_order`` will have precedence."
msgstr ""

msgid ""
"You may rearrange the fields any time using ``order_fields()`` with a list "
"of field names as in :attr:`~django.forms.Form.field_order`."
msgstr ""

msgid "How errors are displayed"
msgstr ""

msgid ""
"If you render a bound ``Form`` object, the act of rendering will "
"automatically run the form's validation if it hasn't already happened, and "
"the HTML output will include the validation errors as a ``<ul class="
"\"errorlist\">`` near the field. The particular positioning of the error "
"messages depends on the output method you're using::"
msgstr ""

msgid "Customizing the error list format"
msgstr ""

msgid ""
"By default, forms use ``django.forms.utils.ErrorList`` to format validation "
"errors. If you'd like to use an alternate class for displaying errors, you "
"can pass that in at construction time (replace ``__str__`` by "
"``__unicode__`` on Python 2)::"
msgstr ""

msgid "More granular output"
msgstr ""

msgid ""
"The ``as_p()``, ``as_ul()``, and ``as_table()`` methods are simply shortcuts "
"-- they're not the only way a form object can be displayed."
msgstr ""

msgid ""
"Used to display HTML or access attributes for a single field of a :class:"
"`Form` instance."
msgstr ""

msgid ""
"The ``__str__()`` (``__unicode__`` on Python 2) method of this object "
"displays the HTML for this field."
msgstr ""

msgid ""
"To retrieve a single ``BoundField``, use dictionary lookup syntax on your "
"form using the field's name as the key::"
msgstr ""

msgid "To retrieve all ``BoundField`` objects, iterate the form::"
msgstr ""

msgid ""
"The field-specific output honors the form object's ``auto_id`` setting::"
msgstr ""

msgid "Attributes of ``BoundField``"
msgstr ""

msgid ""
"The HTML ID attribute for this ``BoundField``. Returns an empty string if :"
"attr:`Form.auto_id` is ``False``."
msgstr ""

msgid ""
"This property returns the data for this :class:`~django.forms.BoundField` "
"extracted by the widget's :meth:`~django.forms.Widget.value_from_datadict` "
"method, or ``None`` if it wasn't given::"
msgstr ""

msgid ""
"A :ref:`list-like object <ref-forms-error-list-format>` that is displayed as "
"an HTML ``<ul class=\"errorlist\">`` when printed::"
msgstr ""

msgid ""
"The form :class:`~django.forms.Field` instance from the form class that "
"this :class:`~django.forms.BoundField` wraps."
msgstr ""

msgid ""
"The :class:`~django.forms.Form` instance this :class:`~django.forms."
"BoundField` is bound to."
msgstr ""

msgid "The :attr:`~django.forms.Field.help_text` of the field."
msgstr ""

msgid ""
"The name that will be used in the widget's HTML ``name`` attribute. It takes "
"the form :attr:`~django.forms.Form.prefix` into account."
msgstr ""

msgid ""
"Use this property to render the ID of this field. For example, if you are "
"manually constructing a ``<label>`` in your template (despite the fact that :"
"meth:`~BoundField.label_tag` will do this for you):"
msgstr ""

msgid ""
"By default, this will be the field's name prefixed by ``id_`` "
"(\"``id_my_field``\" for the example above). You may modify the ID by "
"setting :attr:`~django.forms.Widget.attrs` on the field's widget. For "
"example, declaring a field like this::"
msgstr ""

msgid "and using the template above, would render something like:"
msgstr "dan menggunakan cetakan diatas, akan membangun sesuatu seperti:"

msgid ""
"Returns ``True`` if this :class:`~django.forms.BoundField`'s widget is "
"hidden."
msgstr ""

msgid ""
"The :attr:`~django.forms.Field.label` of the field. This is used in :meth:"
"`~BoundField.label_tag`."
msgstr ""

msgid "The name of this field in the form::"
msgstr "Nama dari bidang ini di formulir::"

msgid "Methods of ``BoundField``"
msgstr "Cara dari ``BoundField``"

msgid ""
"Returns a string of HTML for representing this as an ``<input type=\"hidden"
"\">``."
msgstr ""
"Mengembalikan deretan karakter HTML untuk mewakilkan ini sebagai sebuah "
"``<input type=\"hidden\">``."

msgid "``**kwargs`` are passed to :meth:`~django.forms.BoundField.as_widget`."
msgstr "``**kwargs`` diloloskan ke :meth:`~django.forms.BoundField.as_widget`."

msgid ""
"This method is primarily used internally. You should use a widget instead."
msgstr ""
"Cara ini terutama digunakan secara internal. Anda harus menggunakan widget "
"sebagai gantinya. "

msgid ""
"Renders the field by rendering the passed widget, adding any HTML attributes "
"passed as ``attrs``.  If no widget is specified, then the field's default "
"widget will be used."
msgstr ""

msgid ""
"``only_initial`` is used by Django internals and should not be set "
"explicitly."
msgstr ""

msgid ""
"When you use Django's rendering shortcuts, CSS classes are used to indicate "
"required form fields or fields that contain errors. If you're manually "
"rendering a form, you can access these CSS classes using the ``css_classes`` "
"method::"
msgstr ""

msgid ""
"If you want to provide some additional classes in addition to the error and "
"required classes that may be required, you can provide those classes as an "
"argument::"
msgstr ""

msgid ""
"To separately render the label tag of a form field, you can call its "
"``label_tag()`` method::"
msgstr ""
"Untuk secara terpisah membangun etiket label dari bidang formulir, anda "
"dapat memanggil cara ``label_tag()`` nya::"

msgid ""
"You can provide the ``contents`` parameter which will replace the auto-"
"generated label tag. An ``attrs`` dictionary may contain additional "
"attributes for the ``<label>`` tag."
msgstr ""

msgid ""
"The HTML that's generated includes the form's :attr:`~django.forms.Form."
"label_suffix` (a colon, by default) or, if set, the current field's :attr:"
"`~django.forms.Field.label_suffix`. The optional ``label_suffix`` parameter "
"allows you to override any previously set suffix. For example, you can use "
"an empty string to hide the label on selected fields. If you need to do this "
"in a template, you could write a custom filter to allow passing parameters "
"to ``label_tag``."
msgstr ""

msgid ""
"Use this method to render the raw value of this field as it would be "
"rendered by a ``Widget``::"
msgstr ""

msgid "Customizing ``BoundField``"
msgstr "Menyesuaikan ``BoundField``"

msgid ""
"If you need to access some additional information about a form field in a "
"template and using a subclass of :class:`~django.forms.Field` isn't "
"sufficient, consider also customizing :class:`~django.forms.BoundField`."
msgstr ""

msgid "A custom form field can override ``get_bound_field()``:"
msgstr "Bidang formulir penyesuaian dapat menimpa ``get_bound_field()``:"

msgid ""
"Takes an instance of :class:`~django.forms.Form` and the name of the field. "
"The return value will be used when accessing the field in a template. Most "
"likely it will be an instance of a subclass of :class:`~django.forms."
"BoundField`."
msgstr ""

msgid ""
"If you have a ``GPSCoordinatesField``, for example, and want to be able to "
"access additional information about the coordinates in a template, this "
"could be implemented as follows::"
msgstr ""

msgid ""
"Now you can access the country in a template with ``{{ form.coordinates."
"country }}``."
msgstr ""
"Sekarang anda dapat mengakses negara di cetakan dengan ``{{ form.coordinates."
"country }}``."

msgid "Binding uploaded files to a form"
msgstr "Mengikat berkas terunggah ke formulir"

msgid ""
"Dealing with forms that have ``FileField`` and ``ImageField`` fields is a "
"little more complicated than a normal form."
msgstr ""

msgid ""
"Firstly, in order to upload files, you'll need to make sure that your "
"``<form>`` element correctly defines the ``enctype`` as ``\"multipart/form-"
"data\"``::"
msgstr ""

msgid ""
"Secondly, when you use the form, you need to bind the file data. File data "
"is handled separately to normal form data, so when your form contains a "
"``FileField`` and ``ImageField``, you will need to specify a second argument "
"when you bind your form. So if we extend our ContactForm to include an "
"``ImageField`` called ``mugshot``, we need to bind the file data containing "
"the mugshot image::"
msgstr ""

msgid ""
"In practice, you will usually specify ``request.FILES`` as the source of "
"file data (just like you use ``request.POST`` as the source of form data)::"
msgstr ""

msgid ""
"Constructing an unbound form is the same as always -- just omit both form "
"data *and* file data::"
msgstr ""

msgid "Testing for multipart forms"
msgstr "Percobaan untuk formulir multipart"

msgid ""
"If you're writing reusable views or templates, you may not know ahead of "
"time whether your form is a multipart form or not. The ``is_multipart()`` "
"method tells you whether the form requires multipart encoding for "
"submission::"
msgstr ""

msgid "Here's an example of how you might use this in a template::"
msgstr ""
"Ini adalah sebuah contoh bagaimana anda mungkin menggunakan ini di cetakan::"

msgid "Subclassing forms"
msgstr "Mensubkelaskan formulir"

msgid ""
"If you have multiple ``Form`` classes that share fields, you can use "
"subclassing to remove redundancy."
msgstr ""

msgid ""
"When you subclass a custom ``Form`` class, the resulting subclass will "
"include all fields of the parent class(es), followed by the fields you "
"define in the subclass."
msgstr ""

msgid ""
"In this example, ``ContactFormWithPriority`` contains all the fields from "
"``ContactForm``, plus an additional field, ``priority``. The ``ContactForm`` "
"fields are ordered first::"
msgstr ""

msgid ""
"It's possible to subclass multiple forms, treating forms as mixins. In this "
"example, ``BeatleForm`` subclasses both ``PersonForm`` and "
"``InstrumentForm`` (in that order), and its field list includes the fields "
"from the parent classes::"
msgstr ""

msgid ""
"It's possible to declaratively remove a ``Field`` inherited from a parent "
"class by setting the name of the field to ``None`` on the subclass. For "
"example::"
msgstr ""

msgid "Prefixes for forms"
msgstr "Awalan untuk formulir"

msgid ""
"You can put several Django forms inside one ``<form>`` tag. To give each "
"``Form`` its own namespace, use the ``prefix`` keyword argument::"
msgstr ""

msgid "The prefix can also be specified on the form class::"
msgstr "Awalan dapat juga ditentukan pada kelas formulir::"

msgid "Form fields"
msgstr "Bidang formulir"

msgid ""
"When you create a ``Form`` class, the most important part is defining the "
"fields of the form. Each field has custom validation logic, along with a few "
"other hooks."
msgstr ""

msgid ""
"Although the primary way you'll use ``Field`` classes is in ``Form`` "
"classes, you can also instantiate them and use them directly to get a better "
"idea of how they work. Each ``Field`` instance has a ``clean()`` method, "
"which takes a single argument and either raises a ``django.forms."
"ValidationError`` exception or returns the clean value::"
msgstr ""

msgid "Core field arguments"
msgstr "Argumen bidang inti"

msgid ""
"Each ``Field`` class constructor takes at least these arguments. Some "
"``Field`` classes take additional, field-specific arguments, but the "
"following should *always* be accepted:"
msgstr ""

msgid "``required``"
msgstr "``required``"

msgid ""
"By default, each ``Field`` class assumes the value is required, so if you "
"pass an empty value -- either ``None`` or the empty string (``\"\"``) -- "
"then ``clean()`` will raise a ``ValidationError`` exception::"
msgstr ""

msgid ""
"To specify that a field is *not* required, pass ``required=False`` to the "
"``Field`` constructor::"
msgstr ""
"Untuk menentukan bahwa bidang adalah *tidak* diwajibkan, lewatkan "
"``required=False`` ke pembangun ``Field``::"

msgid ""
"If a ``Field`` has ``required=False`` and you pass ``clean()`` an empty "
"value, then ``clean()`` will return a *normalized* empty value rather than "
"raising ``ValidationError``. For ``CharField``, this will be a Unicode empty "
"string. For other ``Field`` classes, it might be ``None``. (This varies from "
"field to field.)"
msgstr ""

msgid ""
"Widgets of required form fields have the ``required`` HTML attribute. Set "
"the :attr:`Form.use_required_attribute` attribute to ``False`` to disable "
"it. The ``required`` attribute isn't included on forms of formsets because "
"the browser validation may not be correct when adding and deleting formsets."
msgstr ""

msgid "Support for the ``required`` HTML attribute was added."
msgstr ""

msgid "``label``"
msgstr "``label``"

msgid ""
"The ``label`` argument lets you specify the \"human-friendly\" label for "
"this field. This is used when the ``Field`` is displayed in a ``Form``."
msgstr ""

msgid ""
"As explained in \"Outputting forms as HTML\" above, the default label for a "
"``Field`` is generated from the field name by converting all underscores to "
"spaces and upper-casing the first letter. Specify ``label`` if that default "
"behavior doesn't result in an adequate label."
msgstr ""

msgid ""
"Here's a full example ``Form`` that implements ``label`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

msgid "``label_suffix``"
msgstr "``label_suffix``"

msgid ""
"The ``label_suffix`` argument lets you override the form's :attr:`~django."
"forms.Form.label_suffix` on a per-field basis::"
msgstr ""

msgid "``initial``"
msgstr "``initial``"

msgid ""
"The ``initial`` argument lets you specify the initial value to use when "
"rendering this ``Field`` in an unbound ``Form``."
msgstr ""

msgid ""
"To specify dynamic initial data, see the :attr:`Form.initial` parameter."
msgstr ""
"Untuk menentukan data awal dinamis, lihat parameter :attr:`Form.initial`."

msgid ""
"The use-case for this is when you want to display an \"empty\" form in which "
"a field is initialized to a particular value. For example::"
msgstr ""

msgid ""
"You may be thinking, why not just pass a dictionary of the initial values as "
"data when displaying the form? Well, if you do that, you'll trigger "
"validation, and the HTML output will include any validation errors::"
msgstr ""

msgid ""
"This is why ``initial`` values are only displayed for unbound forms. For "
"bound forms, the HTML output will use the bound data."
msgstr ""

msgid ""
"Also note that ``initial`` values are *not* used as \"fallback\" data in "
"validation if a particular field's value is not given. ``initial`` values "
"are *only* intended for initial form display::"
msgstr ""

msgid "Instead of a constant, you can also pass any callable::"
msgstr ""

msgid ""
"The callable will be evaluated only when the unbound form is displayed, not "
"when it is defined."
msgstr ""

msgid "``widget``"
msgstr "``widget``"

msgid ""
"The ``widget`` argument lets you specify a ``Widget`` class to use when "
"rendering this ``Field``. See :doc:`/ref/forms/widgets` for more information."
msgstr ""

msgid "``help_text``"
msgstr "``help_text``"

msgid ""
"The ``help_text`` argument lets you specify descriptive text for this "
"``Field``. If you provide ``help_text``, it will be displayed next to the "
"``Field`` when the ``Field`` is rendered by one of the convenience ``Form`` "
"methods (e.g., ``as_ul()``)."
msgstr ""

msgid ""
"Like the model field's :attr:`~django.db.models.Field.help_text`, this value "
"isn't HTML-escaped in automatically-generated forms."
msgstr ""

msgid ""
"Here's a full example ``Form`` that implements ``help_text`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

msgid "``error_messages``"
msgstr "``error_messages``"

msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override. For example, here is the default error "
"message::"
msgstr ""

msgid "And here is a custom error message::"
msgstr "Dan ini adalah pesan kesalahan penyesuaian::"

msgid ""
"In the `built-in Field classes`_ section below, each ``Field`` defines the "
"error message keys it uses."
msgstr ""

msgid "``validators``"
msgstr "``validators``"

msgid ""
"The ``validators`` argument lets you provide a list of validation functions "
"for this field."
msgstr ""
"Argumen ``validators`` membiarkan anda menyediakan daftar dari fungsi "
"pengecekan untuk bidang ini."

msgid ""
"See the :doc:`validators documentation </ref/validators>` for more "
"information."
msgstr ""
"Lihat :doc:`validators documentation </ref/validators>` untuk informasi "
"lebih."

msgid "``localize``"
msgstr "``localize``"

msgid ""
"The ``localize`` argument enables the localization of form data input, as "
"well as the rendered output."
msgstr ""

msgid ""
"See the :doc:`format localization </topics/i18n/formatting>` documentation "
"for more information."
msgstr ""
"Lihat dokuemntasi :doc:`format localization </topics/i18n/formatting>` untuk "
"informasi lebih."

msgid "``disabled``"
msgstr "``disabled``"

msgid ""
"The ``disabled`` boolean argument, when set to ``True``, disables a form "
"field using the ``disabled`` HTML attribute so that it won't be editable by "
"users. Even if a user tampers with the field's value submitted to the "
"server, it will be ignored in favor of the value from the form's initial "
"data."
msgstr ""

msgid "Checking if the field data has changed"
msgstr "Memeriksa jika data bidang telah berubah"

msgid "``has_changed()``"
msgstr "``has_changed()``"

msgid ""
"The ``has_changed()`` method is used to determine if the field value has "
"changed from the initial value. Returns ``True`` or ``False``."
msgstr ""

msgid "See the :class:`Form.has_changed()` documentation for more information."
msgstr "Lihat dokumentasi :class:`Form.has_changed()` untuk informasi lebih."

msgid "Built-in ``Field`` classes"
msgstr ""

msgid ""
"Naturally, the ``forms`` library comes with a set of ``Field`` classes that "
"represent common validation needs. This section documents each built-in "
"field."
msgstr ""

msgid ""
"For each field, we describe the default widget used if you don't specify "
"``widget``. We also specify the value returned when you provide an empty "
"value (see the section on ``required`` above to understand what that means)."
msgstr ""

msgid "``BooleanField``"
msgstr "``BooleanField``"

msgid "Default widget: :class:`CheckboxInput`"
msgstr "Widget awal: :class:`CheckboxInput`"

msgid "Empty value: ``False``"
msgstr "Nilai kosong: ``False``"

msgid "Normalizes to: A Python ``True`` or ``False`` value."
msgstr ""

msgid ""
"Validates that the value is ``True`` (e.g. the check box is checked) if the "
"field has ``required=True``."
msgstr ""

msgid "Error message keys: ``required``"
msgstr "Kunci pesan kesalahan: ``required``"

msgid ""
"Since all ``Field`` subclasses have ``required=True`` by default, the "
"validation condition here is important. If you want to include a boolean in "
"your form that can be either ``True`` or ``False`` (e.g. a checked or "
"unchecked checkbox), you must remember to pass in ``required=False`` when "
"creating the ``BooleanField``."
msgstr ""

msgid "``CharField``"
msgstr "``CharField``"

msgid "Default widget: :class:`TextInput`"
msgstr "Widget awal: :class:`TextInput`"

msgid "Empty value: Whatever you've given as :attr:`empty_value`."
msgstr ""

msgid "Normalizes to: A Unicode object."
msgstr ""

msgid ""
"Validates ``max_length`` or ``min_length``, if they are provided. Otherwise, "
"all inputs are valid."
msgstr ""
"Mensahkan ``max_length`` atau ``min_length``, jika mereka disediakan. Jika "
"tidak, semua masukan adalah sah."

msgid "Error message keys: ``required``, ``max_length``, ``min_length``"
msgstr ""

msgid "Has three optional arguments for validation:"
msgstr ""

msgid ""
"If provided, these arguments ensure that the string is at most or at least "
"the given length."
msgstr ""

msgid ""
"If ``True`` (default), the value will be stripped of leading and trailing "
"whitespace."
msgstr ""
"Jika ``True`` (awalan), nilai akan dilucuti dari terkemuka dan buntutan "
"ruang kosong."

msgid "The value to use to represent \"empty\". Defaults to an empty string."
msgstr ""

msgid "``ChoiceField``"
msgstr "``ChoiceField``"

msgid "Default widget: :class:`Select`"
msgstr ""

msgid "Empty value: ``''`` (an empty string)"
msgstr "Nilai kosong: ``''`` (sebuah deretan karakter kosong)"

msgid "Validates that the given value exists in the list of choices."
msgstr ""

msgid "Error message keys: ``required``, ``invalid_choice``"
msgstr ""

msgid ""
"The ``invalid_choice`` error message may contain ``%(value)s``, which will "
"be replaced with the selected choice."
msgstr ""

msgid "Takes one extra argument:"
msgstr ""

msgid ""
"Either an iterable (e.g., a list or tuple) of 2-tuples to use as choices for "
"this field, or a callable that returns such an iterable. This argument "
"accepts the same formats as the ``choices`` argument to a model field. See "
"the :ref:`model field reference documentation on choices <field-choices>` "
"for more details. If the argument is a callable, it is evaluated each time "
"the field's form is initialized. Defaults to an empty list."
msgstr ""

msgid "``TypedChoiceField``"
msgstr "``TypedChoiceField``"

msgid ""
"Just like a :class:`ChoiceField`, except :class:`TypedChoiceField` takes two "
"extra arguments, :attr:`coerce` and :attr:`empty_value`."
msgstr ""

msgid ""
"Normalizes to: A value of the type provided by the :attr:`coerce` argument."
msgstr ""

msgid ""
"Validates that the given value exists in the list of choices and can be "
"coerced."
msgstr ""

msgid "Takes extra arguments:"
msgstr "Mengambil argumen tambahan:"

msgid ""
"A function that takes one argument and returns a coerced value. Examples "
"include the built-in ``int``, ``float``, ``bool`` and other types. Defaults "
"to an identity function. Note that coercion happens after input validation, "
"so it is possible to coerce to a value not present in ``choices``."
msgstr ""

msgid ""
"The value to use to represent \"empty.\" Defaults to the empty string; "
"``None`` is another common choice here. Note that this value will not be "
"coerced by the function given in the ``coerce`` argument, so choose it "
"accordingly."
msgstr ""

msgid "``DateField``"
msgstr "``DateField``"

msgid "Default widget: :class:`DateInput`"
msgstr "Widget awal: :class:`DateInput`"

msgid "Empty value: ``None``"
msgstr "Nilai kosong: ``None``"

msgid "Normalizes to: A Python ``datetime.date`` object."
msgstr ""

msgid ""
"Validates that the given value is either a ``datetime.date``, ``datetime."
"datetime`` or string formatted in a particular date format."
msgstr ""

msgid "Error message keys: ``required``, ``invalid``"
msgstr ""

msgid "Takes one optional argument:"
msgstr ""

msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"date`` object."
msgstr ""

msgid ""
"If no ``input_formats`` argument is provided, the default input formats are::"
msgstr ""

msgid ""
"Additionally, if you specify :setting:`USE_L10N=False<USE_L10N>` in your "
"settings, the following will also be included in the default input formats::"
msgstr ""

msgid "See also :doc:`format localization </topics/i18n/formatting>`."
msgstr "Lihat juga :doc:`format localization </topics/i18n/formatting>`."

msgid "``DateTimeField``"
msgstr "``DateTimeField``"

msgid "Default widget: :class:`DateTimeInput`"
msgstr "Widget awal: :class:`DateTimeInput`"

msgid "Normalizes to: A Python ``datetime.datetime`` object."
msgstr ""

msgid ""
"Validates that the given value is either a ``datetime.datetime``, ``datetime."
"date`` or string formatted in a particular datetime format."
msgstr ""

msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"datetime`` object."
msgstr ""

msgid "``DecimalField``"
msgstr "``DecimalField``"

msgid ""
"Default widget: :class:`NumberInput` when :attr:`Field.localize` is "
"``False``, else :class:`TextInput`."
msgstr ""

msgid "Normalizes to: A Python ``decimal``."
msgstr ""

msgid ""
"Validates that the given value is a decimal. Leading and trailing whitespace "
"is ignored."
msgstr ""
"Pengesahan yang nilai yang diberikan adalah desimal. Terkemuka dan buntutan "
"ruang kosong diabaikan."

msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``, "
"``max_digits``, ``max_decimal_places``, ``max_whole_digits``"
msgstr ""

msgid ""
"The ``max_value`` and ``min_value`` error messages may contain ``"
"%(limit_value)s``, which will be substituted by the appropriate limit. "
"Similarly, the ``max_digits``, ``max_decimal_places`` and "
"``max_whole_digits`` error messages may contain ``%(max)s``."
msgstr ""

msgid "Takes four optional arguments:"
msgstr "Mengambil empat argumen pilihan:"

msgid ""
"These control the range of values permitted in the field, and should be "
"given as ``decimal.Decimal`` values."
msgstr ""
"Ini mengendalikan jangkauan nilai yang diizinkan dalam bidang, dan harus "
"diberikan sebagai nilai ``decimal.Decimal``."

msgid ""
"The maximum number of digits (those before the decimal point plus those "
"after the decimal point, with leading zeros stripped) permitted in the value."
msgstr ""

msgid "The maximum number of decimal places permitted."
msgstr "Angka maksimal dari tempat desimal yang diizinkan."

msgid "``DurationField``"
msgstr "``DurationField``"

msgid "Normalizes to: A Python :class:`~python:datetime.timedelta`."
msgstr ""

msgid ""
"Validates that the given value is a string which can be converted into a "
"``timedelta``."
msgstr ""

msgid "Error message keys: ``required``, ``invalid``."
msgstr "Kunci pesan kesalahan: ``required``, ``invalid``."

msgid ""
"Accepts any format understood by :func:`~django.utils.dateparse."
"parse_duration`."
msgstr ""

msgid "``EmailField``"
msgstr "``EmailField``"

msgid "Default widget: :class:`EmailInput`"
msgstr "Widget awal: :class:`EmailInput`"

msgid ""
"Validates that the given value is a valid email address, using a moderately "
"complex regular expression."
msgstr ""

msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``min_length``. If provided, these arguments ensure that the string is at "
"most or at least the given length."
msgstr ""

msgid "``FileField``"
msgstr "``FileField``"

msgid "Default widget: :class:`ClearableFileInput`"
msgstr "Widget awal: :class:`ClearableFileInput`"

msgid ""
"Normalizes to: An ``UploadedFile`` object that wraps the file content and "
"file name into a single object."
msgstr ""

msgid "Can validate that non-empty file data has been bound to the form."
msgstr ""

msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``max_length``"
msgstr ""
"Kunci pesan kesalahan: ``required``, ``invalid``, ``missing``, ``empty``, "
"``max_length``"

msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``allow_empty_file``. If provided, these ensure that the file name is at "
"most the given length, and that validation will succeed even if the file "
"content is empty."
msgstr ""

msgid ""
"To learn more about the ``UploadedFile`` object, see the :doc:`file uploads "
"documentation </topics/http/file-uploads>`."
msgstr ""

msgid ""
"When you use a ``FileField`` in a form, you must also remember to :ref:`bind "
"the file data to the form <binding-uploaded-files>`."
msgstr ""

msgid ""
"The ``max_length`` error refers to the length of the filename. In the error "
"message for that key, ``%(max)d`` will be replaced with the maximum filename "
"length and ``%(length)d`` will be replaced with the current filename length."
msgstr ""

msgid "``FilePathField``"
msgstr "``FilePathField``"

msgid "Normalizes to: A unicode object"
msgstr ""

msgid "Validates that the selected choice exists in the list of choices."
msgstr ""

msgid ""
"The field allows choosing from files inside a certain directory. It takes "
"five extra arguments; only ``path`` is required:"
msgstr ""

msgid ""
"The absolute path to the directory whose contents you want listed. This "
"directory must exist."
msgstr ""
"Jalur mutlak ke pelipat yang isinya anda ingin daftarkan. Pelipat harus ada."

msgid ""
"If ``False`` (the default) only the direct contents of ``path`` will be "
"offered as choices. If ``True``, the directory will be descended into "
"recursively and all descendants will be listed as choices."
msgstr ""

msgid ""
"A regular expression pattern; only files with names matching this expression "
"will be allowed as choices."
msgstr ""

msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``True``.  Specifies "
"whether files in the specified location should be included.  Either this or :"
"attr:`allow_folders` must be ``True``."
msgstr ""

msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``False``.  Specifies "
"whether folders in the specified location should be included.  Either this "
"or :attr:`allow_files` must be ``True``."
msgstr ""

msgid "``FloatField``"
msgstr "``FloatField``"

msgid "Normalizes to: A Python float."
msgstr ""

msgid ""
"Validates that the given value is a float. Leading and trailing whitespace "
"is allowed, as in Python's ``float()`` function."
msgstr ""
"Pengesahan yang nilai diberikan adalah float. Terkemuka dan buntutan ruang "
"kosong adalah diizinkan, seperti di fungsi ``float()`` Python."

msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``"
msgstr ""
"Kunci pesan kesalahan: ``required``, ``invalid``, ``max_value``, "
"``min_value``"

msgid ""
"Takes two optional arguments for validation, ``max_value`` and "
"``min_value``. These control the range of values permitted in the field."
msgstr ""

msgid "``ImageField``"
msgstr "``ImageField``"

msgid ""
"Validates that file data has been bound to the form, and that the file is of "
"an image format understood by Pillow."
msgstr ""

msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``invalid_image``"
msgstr ""
"Kunci pesan kesalahan: ``required``, ``invalid``, ``missing``, ``empty``, "
"``invalid_image``"

msgid ""
"Using an ``ImageField`` requires that `Pillow`_ is installed with support "
"for the image formats you use. If you encounter a ``corrupt image`` error "
"when you upload an image, it usually means that Pillow doesn't understand "
"its format. To fix this, install the appropriate library and reinstall "
"Pillow."
msgstr ""

msgid ""
"When you use an ``ImageField`` on a form, you must also remember to :ref:"
"`bind the file data to the form <binding-uploaded-files>`."
msgstr ""

msgid ""
"After the field has been cleaned and validated, the ``UploadedFile`` object "
"will have an additional ``image`` attribute containing the Pillow `Image`_ "
"instance used to check if the file was a valid image. Also, ``UploadedFile."
"content_type`` will be updated with the image's content type if Pillow can "
"determine it, otherwise it will be set to ``None``."
msgstr ""

msgid "``IntegerField``"
msgstr "``IntegerField``"

msgid "Normalizes to: A Python integer or long integer."
msgstr ""

msgid ""
"Validates that the given value is an integer. Leading and trailing "
"whitespace is allowed, as in Python's ``int()`` function."
msgstr ""
"Pengesahan yang nilai diberikan adalah integer. Terkemuka dan buntutan ruang "
"kosong adalah diizinkan, seperti di fungsi ``int()`` Python."

msgid ""
"The ``max_value`` and ``min_value`` error messages may contain ``"
"%(limit_value)s``, which will be substituted by the appropriate limit."
msgstr ""

msgid "Takes two optional arguments for validation:"
msgstr "Mengambil dua argumen pilihan untuk pengesahan:"

msgid "These control the range of values permitted in the field."
msgstr "Ini mengendalikan jangkauan nilai yang diizinkan di bidang."

msgid "``GenericIPAddressField``"
msgstr "``GenericIPAddressField``"

msgid "A field containing either an IPv4 or an IPv6 address."
msgstr "Bidang mengandung antara alamat IPv4 atau IPv6."

msgid ""
"Normalizes to: A Unicode object. IPv6 addresses are normalized as described "
"below."
msgstr ""

msgid "Validates that the given value is a valid IP address."
msgstr "Mensahkan bahwa nilai yang diberikan adalah alamat IP sah."

msgid ""
"The IPv6 address normalization follows :rfc:`4291#section-2.2` section 2.2, "
"including using the IPv4 format suggested in paragraph 3 of that section, "
"like ``::ffff:192.0.2.0``. For example, ``2001:0::0:01`` would be normalized "
"to ``2001::1``, and ``::ffff:0a0a:0a0a`` to ``::ffff:10.10.10.10``. All "
"characters are converted to lowercase."
msgstr ""

msgid "Takes two optional arguments:"
msgstr "Mengambil dua argumen pilihan:"

msgid ""
"Limits valid inputs to the specified protocol. Accepted values are ``both`` "
"(default), ``IPv4`` or ``IPv6``. Matching is case insensitive."
msgstr ""

msgid ""
"Unpacks IPv4 mapped addresses like ``::ffff:192.0.2.1``. If this option is "
"enabled that address would be unpacked to ``192.0.2.1``. Default is "
"disabled. Can only be used when ``protocol`` is set to ``'both'``."
msgstr ""

msgid "``MultipleChoiceField``"
msgstr "``MultipleChoiceField``"

msgid "Default widget: :class:`SelectMultiple`"
msgstr "Widget awal: :class:`SelectMultiple`"

msgid "Empty value: ``[]`` (an empty list)"
msgstr "Nilai kosong: ``[]`` (sebuah deretan karakter kosong)"

msgid "Normalizes to: A list of Unicode objects."
msgstr ""

msgid ""
"Validates that every value in the given list of values exists in the list of "
"choices."
msgstr ""
"Mensahkan bahwa nilai di daftar yang diberikan dari nilai yang ada di daftar "
"pilihan."

msgid "Error message keys: ``required``, ``invalid_choice``, ``invalid_list``"
msgstr "Kunci pesan kesalahan: ``required``, ``invalid``, ``invalid_list``"

msgid ""
"Takes one extra required argument, ``choices``, as for :class:`ChoiceField`."
msgstr ""
"Mengambil satu tambahan argumen wajib, ``choices``, tentang :class:"
"`ChoiceField`."

msgid "``TypedMultipleChoiceField``"
msgstr "``TypedMultipleChoiceField``"

msgid ""
"Just like a :class:`MultipleChoiceField`, except :class:"
"`TypedMultipleChoiceField` takes two extra arguments, ``coerce`` and "
"``empty_value``."
msgstr ""

msgid "Empty value: Whatever you've given as ``empty_value``"
msgstr ""

msgid ""
"Normalizes to: A list of values of the type provided by the ``coerce`` "
"argument."
msgstr ""

msgid ""
"Validates that the given values exists in the list of choices and can be "
"coerced."
msgstr ""

msgid ""
"Takes two extra arguments, ``coerce`` and ``empty_value``, as for :class:"
"`TypedChoiceField`."
msgstr ""

msgid "``NullBooleanField``"
msgstr "``NullBooleanField``"

msgid "Default widget: :class:`NullBooleanSelect`"
msgstr "Widget awal: :class:```TypedMultipleChoiceField```"

msgid "Normalizes to: A Python ``True``, ``False`` or ``None`` value."
msgstr ""

msgid "Validates nothing (i.e., it never raises a ``ValidationError``)."
msgstr ""

msgid "``RegexField``"
msgstr "``RegexField``"

msgid ""
"Validates that the given value matches against a certain regular expression."
msgstr ""

msgid "Takes one required argument:"
msgstr "Mengambil satu argumen diwajibkan:"

msgid ""
"A regular expression specified either as a string or a compiled regular "
"expression object."
msgstr ""

msgid ""
"Also takes ``max_length``, ``min_length``, and ``strip``, which work just as "
"they do for :class:`CharField`."
msgstr ""

msgid ""
"Defaults to ``False``. If enabled, stripping will be applied before the "
"regex validation."
msgstr ""

msgid "``SlugField``"
msgstr "``SlugField``"

msgid ""
"Validates that the given value contains only letters, numbers, underscores, "
"and hyphens."
msgstr ""

msgid "Error messages: ``required``, ``invalid``"
msgstr "Pesan kesalahan: ``required``, ``invalid``."

msgid ""
"This field is intended for use in representing a model :class:`~django.db."
"models.SlugField` in forms."
msgstr ""
"Bidang ini dimaksudkan untuk digunakan dalam mewakilkan model :class:"
"`~django.db.models.SlugField` di formulir."

msgid "Takes an optional parameter:"
msgstr "Mengambil sebuah parameter pilihan:"

msgid ""
"A boolean instructing the field to accept Unicode letters in addition to "
"ASCII letters. Defaults to ``False``."
msgstr ""

msgid "``TimeField``"
msgstr "``TimeField``"

msgid "Normalizes to: A Python ``datetime.time`` object."
msgstr ""

msgid ""
"Validates that the given value is either a ``datetime.time`` or string "
"formatted in a particular time format."
msgstr ""

msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"time`` object."
msgstr ""

msgid "``URLField``"
msgstr "``URLField``"

msgid "Default widget: :class:`URLInput`"
msgstr "Widget awal: :class:`URLInput`"

msgid "Validates that the given value is a valid URL."
msgstr "Mensahkan bahwa nilai yang diberikan adalah URL sah."

msgid "Takes the following optional arguments:"
msgstr "Mengambil argumen pilihan berikut:"

msgid ""
"These are the same as ``CharField.max_length`` and ``CharField.min_length``."
msgstr ""
"Ini adalah sama seperti ``CharField.max_length`` dan ``CharField."
"min_length``."

msgid "``UUIDField``"
msgstr "``UUIDField``"

msgid "Normalizes to: A :class:`~python:uuid.UUID` object."
msgstr ""

msgid ""
"This field will accept any string format accepted as the ``hex`` argument to "
"the :class:`~python:uuid.UUID` constructor."
msgstr ""

msgid "Slightly complex built-in ``Field`` classes"
msgstr ""

msgid "``ComboField``"
msgstr "``ComboField``"

msgid ""
"Validates the given value against each of the fields specified as an "
"argument to the ``ComboField``."
msgstr ""

msgid "Takes one extra required argument:"
msgstr ""

msgid ""
"The list of fields that should be used to validate the field's value (in the "
"order in which they are provided)."
msgstr ""

msgid "``MultiValueField``"
msgstr "``MultiValueField``"

msgid ""
"Normalizes to: the type returned by the ``compress`` method of the subclass."
msgstr ""

msgid ""
"Validates the given value against each of the fields specified as an "
"argument to the ``MultiValueField``."
msgstr ""

msgid "Error message keys: ``required``, ``invalid``, ``incomplete``"
msgstr "Kunci pesan kesalahan: ``required``, ``invalid``, ``incomplete``"

msgid ""
"Aggregates the logic of multiple fields that together produce a single value."
msgstr ""

msgid ""
"This field is abstract and must be subclassed. In contrast with the single-"
"value fields, subclasses of :class:`MultiValueField` must not implement :"
"meth:`~django.forms.Field.clean` but instead - implement :meth:"
"`~MultiValueField.compress`."
msgstr ""

msgid ""
"A tuple of fields whose values are cleaned and subsequently combined into a "
"single value.  Each value of the field is cleaned by the corresponding field "
"in ``fields`` -- the first value is cleaned by the first field, the second "
"value is cleaned by the second field, etc. Once all fields are cleaned, the "
"list of clean values is combined into a single value by :meth:"
"`~MultiValueField.compress`."
msgstr ""

msgid "Also takes some optional arguments:"
msgstr ""

msgid ""
"Defaults to ``True``, in which case a ``required`` validation error will be "
"raised if no value is supplied for any field."
msgstr ""

msgid ""
"When set to ``False``, the :attr:`Field.required` attribute can be set to "
"``False`` for individual fields to make them optional. If no value is "
"supplied for a required field, an ``incomplete`` validation error will be "
"raised."
msgstr ""

msgid ""
"A default ``incomplete`` error message can be defined on the :class:"
"`MultiValueField` subclass, or different messages can be defined on each "
"individual field. For example::"
msgstr ""

msgid ""
"Must be a subclass of :class:`django.forms.MultiWidget`. Default value is :"
"class:`~django.forms.TextInput`, which probably is not very useful in this "
"case."
msgstr ""

msgid ""
"Takes a list of valid values and returns  a \"compressed\" version of those "
"values -- in a single value. For example, :class:`SplitDateTimeField` is a "
"subclass which combines a time field and a date field into a ``datetime`` "
"object."
msgstr ""

msgid "This method must be implemented in the subclasses."
msgstr "Cara ini harus diterapkan di subkelas."

msgid "``SplitDateTimeField``"
msgstr "``SplitDateTimeField``"

msgid "Default widget: :class:`SplitDateTimeWidget`"
msgstr "Widget awal: :class:`SplitDateTimeWidget`"

msgid ""
"Validates that the given value is a ``datetime.datetime`` or string "
"formatted in a particular datetime format."
msgstr ""

msgid ""
"Error message keys: ``required``, ``invalid``, ``invalid_date``, "
"``invalid_time``"
msgstr ""
"Kunci pesan kesalahan: ``required``, ``invalid``, ``invalid_date``, "
"``invalid_time``"

msgid ""
"If no ``input_date_formats`` argument is provided, the default input formats "
"for :class:`DateField` are used."
msgstr ""

msgid ""
"If no ``input_time_formats`` argument is provided, the default input formats "
"for :class:`TimeField` are used."
msgstr ""

msgid "Fields which handle relationships"
msgstr ""

msgid ""
"Two fields are available for representing relationships between models: :"
"class:`ModelChoiceField` and :class:`ModelMultipleChoiceField`.  Both of "
"these fields require a single ``queryset`` parameter that is used to create "
"the choices for the field.  Upon form validation, these fields will place "
"either one model object (in the case of ``ModelChoiceField``) or multiple "
"model objects (in the case of ``ModelMultipleChoiceField``) into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

msgid ""
"For more complex uses, you can specify ``queryset=None`` when declaring the "
"form field and then populate the ``queryset`` in the form's ``__init__()`` "
"method::"
msgstr ""

msgid "``ModelChoiceField``"
msgstr "``ModelChoiceField``"

msgid "Normalizes to: A model instance."
msgstr ""

msgid "Validates that the given id exists in the queryset."
msgstr ""

msgid ""
"Allows the selection of a single model object, suitable for representing a "
"foreign key. Note that the default widget for ``ModelChoiceField`` becomes "
"impractical when the number of entries increases. You should avoid using it "
"for more than 100 items."
msgstr ""

msgid "A single argument is required:"
msgstr "Argumen tunggal dibutuhkan:"

msgid ""
"A ``QuerySet`` of model objects from which the choices for the field are "
"derived and which is used to validate the user's selection. It's evaluated "
"when the form is rendered."
msgstr ""

msgid "``ModelChoiceField`` also takes two optional arguments:"
msgstr "``ModelChoiceField`` juga mengambil dua argumen pilihan:"

msgid ""
"By default the ``<select>`` widget used by ``ModelChoiceField`` will have an "
"empty choice at the top of the list. You can change the text of this label "
"(which is ``\"---------\"`` by default) with the ``empty_label`` attribute, "
"or you can disable the empty label entirely by setting ``empty_label`` to "
"``None``::"
msgstr ""

msgid ""
"Note that if a ``ModelChoiceField`` is required and has a default initial "
"value, no empty choice is created (regardless of the value of "
"``empty_label``)."
msgstr ""

msgid ""
"This optional argument is used to specify the field to use as the value of "
"the choices in the field's widget. Be sure it's a unique field for the "
"model, otherwise the selected value could match more than one object. By "
"default it is set to ``None``, in which case the primary key of each object "
"will be used. For example::"
msgstr ""

msgid "would yield:"
msgstr "akan menghasilkan:"

msgid "and::"
msgstr "dan::"

msgid ""
"The ``__str__`` (``__unicode__`` on Python 2) method of the model will be "
"called to generate string representations of the objects for use in the "
"field's choices; to provide customized representations, subclass "
"``ModelChoiceField`` and override ``label_from_instance``. This method will "
"receive a model object, and should return a string suitable for representing "
"it. For example::"
msgstr ""

msgid "``ModelMultipleChoiceField``"
msgstr "``ModelMultipleChoiceField``"

msgid "Empty value: An empty ``QuerySet`` (self.queryset.none())"
msgstr ""

msgid "Normalizes to: A ``QuerySet`` of model instances."
msgstr ""

msgid ""
"Validates that every id in the given list of values exists in the queryset."
msgstr ""

msgid ""
"Error message keys: ``required``, ``list``, ``invalid_choice``, "
"``invalid_pk_value``"
msgstr ""

msgid ""
"The ``invalid_choice`` message may contain ``%(value)s`` and the "
"``invalid_pk_value`` message may contain ``%(pk)s``, which will be "
"substituted by the appropriate values."
msgstr ""

msgid ""
"Allows the selection of one or more model objects, suitable for representing "
"a many-to-many relation. As with :class:`ModelChoiceField`, you can use "
"``label_from_instance`` to customize the object representations."
msgstr ""

msgid "Same as :class:`ModelChoiceField.queryset`."
msgstr "Sama seperti :attr:`ModelChoiceField.queryset`."

msgid "Same as :class:`ModelChoiceField.to_field_name`."
msgstr "Sama seperti :class:`ModelChoiceField.to_field_name`."

msgid "Creating custom fields"
msgstr "Membuat bidang penyesuaian"

msgid ""
"If the built-in ``Field`` classes don't meet your needs, you can easily "
"create custom ``Field`` classes. To do this, just create a subclass of "
"``django.forms.Field``. Its only requirements are that it implement a "
"``clean()`` method and that its ``__init__()`` method accept the core "
"arguments mentioned above (``required``, ``label``, ``initial``, ``widget``, "
"``help_text``)."
msgstr ""

msgid ""
"You can also customize how a field will be accessed by overriding :meth:"
"`~django.forms.Field.get_bound_field()`."
msgstr ""
"Anda dapat juga menyesuaikan bagaimana bidang akan diakses dengan menimpa :"
"meth:`~django.forms.Field.get_bound_field()`."

msgid "Formset Functions"
msgstr ""

msgid ""
"Formset API reference. For introductory material about formsets, see the :"
"doc:`/topics/forms/formsets` topic guide."
msgstr ""

msgid "``formset_factory``"
msgstr "``formset_factory``"

msgid "Returns a ``FormSet`` class for the given ``form`` class."
msgstr "Mengembalikan kelas ``FormSet`` untuk kelas ``form`` yang diberikan."

msgid "See :doc:`formsets </topics/forms/formsets>` for example usage."
msgstr ""
"Lihat :doc:`formsets </topics/forms/formsets>` untuk contoh penggunaan."

msgid "Forms"
msgstr "Formulir"

msgid ""
"Detailed form API reference. For introductory material, see the :doc:`/"
"topics/forms/index` topic guide."
msgstr ""

msgid "Model Form Functions"
msgstr "Fungsi Formulir Model"

msgid ""
"Model Form API reference. For introductory material about model forms, see "
"the :doc:`/topics/forms/modelforms` topic guide."
msgstr ""

msgid "``modelform_factory``"
msgstr "``modelform_factory``"

msgid ""
"Returns a :class:`~django.forms.ModelForm` class for the given ``model``. "
"You can optionally pass a ``form`` argument to use as a starting point for "
"constructing the ``ModelForm``."
msgstr ""

msgid ""
"``fields`` is an optional list of field names. If provided, only the named "
"fields will be included in the returned fields."
msgstr ""

msgid ""
"``exclude`` is an optional list of field names. If provided, the named "
"fields will be excluded from the returned fields, even if they are listed in "
"the ``fields`` argument."
msgstr ""

msgid ""
"``formfield_callback`` is a callable that takes a model field and returns a "
"form field."
msgstr ""

msgid "``widgets`` is a dictionary of model field names mapped to a widget."
msgstr ""

msgid ""
"``localized_fields`` is a list of names of fields which should be localized."
msgstr ""

msgid "``labels`` is a dictionary of model field names mapped to a label."
msgstr ""

msgid ""
"``help_texts`` is a dictionary of model field names mapped to a help text."
msgstr ""

msgid ""
"``error_messages`` is a dictionary of model field names mapped to a "
"dictionary of error messages."
msgstr ""

msgid ""
"``field_classes`` is a dictionary of model field names mapped to a form "
"field class."
msgstr ""

msgid "See :ref:`modelforms-factory` for example usage."
msgstr "Lihat :ref:`modelforms-factory` untuk contoh penggunaan."

msgid ""
"You must provide the list of fields explicitly, either via keyword arguments "
"``fields`` or ``exclude``, or the corresponding attributes on the form's "
"inner ``Meta`` class. See :ref:`modelforms-selecting-fields` for more "
"information. Omitting any definition of the fields to use will result in an :"
"exc:`~django.core.exceptions.ImproperlyConfigured` exception."
msgstr ""

msgid "``modelformset_factory``"
msgstr "``modelformset_factory``"

msgid "Returns a ``FormSet`` class for the given ``model`` class."
msgstr "Mengembalikan kelas ``FormSet`` untuk kelas ``model`` yang diberikan."

msgid ""
"Arguments ``model``, ``form``, ``fields``, ``exclude``, "
"``formfield_callback``, ``widgets``, ``localized_fields``, ``labels``, "
"``help_texts``, ``error_messages``, and ``field_classes`` are all passed "
"through to :func:`~django.forms.models.modelform_factory`."
msgstr ""

msgid ""
"Arguments ``formset``, ``extra``, ``max_num``, ``can_order``, ``can_delete`` "
"and ``validate_max`` are passed through to :func:`~django.forms.formsets."
"formset_factory`. See :doc:`formsets </topics/forms/formsets>` for details."
msgstr ""

msgid "See :ref:`model-formsets` for example usage."
msgstr "Lihat :ref:`model-formsets` untuk contoh penggunaan."

msgid "``inlineformset_factory``"
msgstr "``inlineformset_factory``"

msgid ""
"Returns an ``InlineFormSet`` using :func:`modelformset_factory` with "
"defaults of ``formset=``:class:`~django.forms.models.BaseInlineFormSet`, "
"``can_delete=True``, and ``extra=3``."
msgstr ""
"Mengembalikan sebuah ``InlineFormSet`` menggunakan :func:"
"`modelformset_factory` dengan awalan dari `formset=``:class:`~django.forms."
"models.BaseInlineFormSet`, ``can_delete=True``, dan ``extra=3``."

msgid ""
"If your model has more than one :class:`~django.db.models.ForeignKey` to the "
"``parent_model``, you must specify a ``fk_name``."
msgstr ""

msgid "See :ref:`inline-formsets` for example usage."
msgstr "Lihat :ref:`inline-formsets` untuk contoh penggunaan."

msgid "The form rendering API"
msgstr "Formulir membangun API"

msgid ""
"In older versions, widgets are rendered using Python. All APIs described in "
"this document are new."
msgstr ""

msgid ""
"Django's form widgets are rendered using Django's :doc:`template engines "
"system </topics/templates>`."
msgstr ""

msgid "The form rendering process can be customized at several levels:"
msgstr ""

msgid "Widgets can specify custom template names."
msgstr ""

msgid "Forms and widgets can specify custom renderer classes."
msgstr ""

msgid ""
"A widget's template can be overridden by a project. (Reusable applications "
"typically shouldn't override built-in templates because they might conflict "
"with a project's custom templates.)"
msgstr ""

msgid "The low-level render API"
msgstr "Tingkat-rendah pembangun API"

msgid ""
"The rendering of form templates is controlled by a customizable renderer "
"class. A custom renderer can be specified by updating the :setting:"
"`FORM_RENDERER` setting. It defaults to ``'``:class:`django.forms.renderers."
"DjangoTemplates`\\ ``'``."
msgstr ""

msgid ""
"You can also provide a custom renderer by setting the :attr:`.Form."
"default_renderer` attribute or by using the ``renderer`` argument of :meth:`."
"Widget.render`."
msgstr ""

msgid ""
"Use one of the :ref:`built-in template form renderers <built-in-template-"
"form-renderers>` or implement your own. Custom renderers must implement a "
"``render(template_name, context, request=None)`` method. It should return a "
"rendered templates (as a string) or raise :exc:`~django.template."
"TemplateDoesNotExist`."
msgstr ""

msgid "Built-in-template form renderers"
msgstr "Pembangun formulir cetakan-siap-pakai"

msgid "``DjangoTemplates``"
msgstr "``DjangoTemplates``"

msgid ""
"This renderer uses a standalone :class:`~django.template.backends.django."
"DjangoTemplates` engine (unconnected to what you might have configured in "
"the :setting:`TEMPLATES` setting). It loads templates first from the built-"
"in form templates directory in ``django/forms/templates`` and then from the "
"installed apps' templates directories using the :class:`app_directories "
"<django.template.loaders.app_directories.Loader>` loader."
msgstr ""

msgid ""
"If you want to render templates with customizations from your :setting:"
"`TEMPLATES` setting, such as context processors for example, use the :class:"
"`TemplatesSetting` renderer."
msgstr ""

msgid "``Jinja2``"
msgstr "``Jinja2``"

msgid ""
"This renderer is the same as the :class:`DjangoTemplates` renderer except "
"that it uses a :class:`~django.template.backends.jinja2.Jinja2` backend. "
"Templates for the built-in widgets are located in ``django/forms/jinja2`` "
"and installed apps can provide templates in a ``jinja2`` directory."
msgstr ""

msgid ""
"To use this backend, all the widgets in your project and its third-party "
"apps must have Jinja2 templates. Unless you provide your own Jinja2 "
"templates for widgets that don't have any, you can't use this renderer. For "
"example, :mod:`django.contrib.admin` doesn't include Jinja2 templates for "
"its widgets due to their usage of Django template tags."
msgstr ""

msgid "``TemplatesSetting``"
msgstr "``TemplatesSetting``"

msgid ""
"This renderer gives you complete control of how widget templates are "
"sourced. It uses :func:`~django.template.loader.get_template` to find widget "
"templates based on what's configured in the :setting:`TEMPLATES` setting."
msgstr ""

msgid ""
"Using this renderer along with the built-in widget templates requires either:"
msgstr ""

msgid ""
"``'django.forms'`` in :setting:`INSTALLED_APPS` and at least one engine "
"with :setting:`APP_DIRS=True <TEMPLATES-APP_DIRS>`."
msgstr ""

msgid ""
"Adding the built-in widgets templates directory in :setting:`DIRS <TEMPLATES-"
"DIRS>` of one of your template engines. To generate that path::"
msgstr ""

msgid ""
"Using this renderer requires you to make sure the form templates your "
"project needs can be located."
msgstr ""

msgid "Context available in widget templates"
msgstr ""

msgid ""
"Widget templates receive a context from :meth:`.Widget.get_context`. By "
"default, widgets receive a single value in the context, ``widget``. This is "
"a dictionary that contains values like:"
msgstr ""

msgid "``value``"
msgstr "``value``"

msgid "``attrs``"
msgstr "``attrs``"

msgid "``is_hidden``"
msgstr "``is_hidden``"

msgid "``template_name``"
msgstr "``template_name``"

msgid ""
"Some widgets add further information to the context. For instance, all "
"widgets that subclass ``Input`` defines ``widget['type']`` and :class:`."
"MultiWidget` defines ``widget['subwidgets']`` for looping purposes."
msgstr ""

msgid "Overriding built-in widget templates"
msgstr ""

msgid ""
"Each widget has a ``template_name`` attribute with a value such as ``input."
"html``. Built-in widget templates are stored in the ``django/forms/widgets`` "
"path. You can provide a custom template for ``input.html`` by defining "
"``django/forms/widgets/input.html``, for example. See :ref:`built-in "
"widgets` for the name of each widget's template."
msgstr ""

msgid ""
"If you use the :class:`TemplatesSetting` renderer, overriding widget "
"templates works the same as overriding any other template in your project. "
"You can't override built-in widget templates using the other built-in "
"renderers."
msgstr ""

msgid "Form and field validation"
msgstr "Pengesahan formulir dan bidang"

msgid ""
"Form validation happens when the data is cleaned. If you want to customize "
"this process, there are various places to make changes, each one serving a "
"different purpose. Three types of cleaning methods are run during form "
"processing. These are normally executed when you call the ``is_valid()`` "
"method on a form. There are other things that can also trigger cleaning and "
"validation (accessing the ``errors`` attribute or calling ``full_clean()`` "
"directly), but normally they won't be needed."
msgstr ""

msgid ""
"In general, any cleaning method can raise ``ValidationError`` if there is a "
"problem with the data it is processing, passing the relevant information to "
"the ``ValidationError`` constructor. :ref:`See below <raising-validation-"
"error>` for the best practice in raising ``ValidationError``. If no "
"``ValidationError`` is raised, the method should return the cleaned "
"(normalized) data as a Python object."
msgstr ""

msgid ""
"Most validation can be done using `validators`_ - simple helpers that can be "
"reused easily. Validators are simple functions (or callables) that take a "
"single argument and raise ``ValidationError`` on invalid input. Validators "
"are run after the field's ``to_python`` and ``validate`` methods have been "
"called."
msgstr ""

msgid ""
"Validation of a form is split into several steps, which can be customized or "
"overridden:"
msgstr ""

msgid ""
"The ``to_python()`` method on a ``Field`` is the first step in every "
"validation. It coerces the value to a correct datatype and raises "
"``ValidationError`` if that is not possible. This method accepts the raw "
"value from the widget and returns the converted value. For example, a "
"``FloatField`` will turn the data into a Python ``float`` or raise a "
"``ValidationError``."
msgstr ""

msgid ""
"The ``validate()`` method on a ``Field`` handles field-specific validation "
"that is not suitable for a validator. It takes a value that has been coerced "
"to a correct datatype and raises ``ValidationError`` on any error. This "
"method does not return anything and shouldn't alter the value. You should "
"override it to handle validation logic that you can't or don't want to put "
"in a validator."
msgstr ""

msgid ""
"The ``run_validators()`` method on a ``Field`` runs all of the field's "
"validators and aggregates all the errors into a single ``ValidationError``. "
"You shouldn't need to override this method."
msgstr ""

msgid ""
"The ``clean()`` method on a ``Field`` subclass is responsible for running "
"``to_python()``, ``validate()``, and ``run_validators()`` in the correct "
"order and propagating their errors. If, at any time, any of the methods "
"raise ``ValidationError``, the validation stops and that error is raised. "
"This method returns the clean data, which is then inserted into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

msgid ""
"The ``clean_<fieldname>()`` method is called on a form subclass -- where "
"``<fieldname>`` is replaced with the name of the form field attribute. This "
"method does any cleaning that is specific to that particular attribute, "
"unrelated to the type of field that it is. This method is not passed any "
"parameters. You will need to look up the value of the field in ``self."
"cleaned_data`` and remember that it will be a Python object at this point, "
"not the original string submitted in the form (it will be in "
"``cleaned_data`` because the general field ``clean()`` method, above, has "
"already cleaned the data once)."
msgstr ""
"Metode `clean_<fieldname>()`` dipanggil di sebuah formulir subkelas -- "
"dimana ``<fieldname>`` diganti dengan nama dari atribut bidang formulir. "
"Metode ini melakukan pembersihan apapun yaitu khusus pada atribut tertentu, "
"tidak terkait pada jenis dari bidang bahwa itu adalah. Metode ini tidak "
"melewatkan parameter apapun. Anda akan butuh mencari nilai dari bidang di "
"``self.cleaned_data`` dan mengingat bahwa itu akan menjadi obyek Python pada "
"titik ini, bukan string asli yang diajukan di formulir (itu akan di "
"``cleaned_data`` karena metode ``clean()`` bidang umum, diatas, telah "
"membersihkan data sekali)."

msgid ""
"For example, if you wanted to validate that the contents of a ``CharField`` "
"called ``serialnumber`` was unique, ``clean_serialnumber()`` would be the "
"right place to do this. You don't need a specific field (it's just a "
"``CharField``), but you want a formfield-specific piece of validation and, "
"possibly, cleaning/normalizing the data."
msgstr ""

msgid ""
"The return value of this method replaces the existing value in "
"``cleaned_data``, so it must be the field's value from ``cleaned_data`` "
"(even if this method didn't change it) or a new cleaned value."
msgstr ""

msgid ""
"The form subclass's ``clean()`` method can perform validation that requires "
"access to multiple form fields. This is where you might put in checks such "
"as \"if field ``A`` is supplied, field ``B`` must contain a valid email "
"address\". This method can return a completely different dictionary if it "
"wishes, which will be used as the ``cleaned_data``."
msgstr ""

msgid ""
"Since the field validation methods have been run by the time ``clean()`` is "
"called, you also have access to the form's ``errors`` attribute which "
"contains all the errors raised by cleaning of individual fields."
msgstr ""

msgid ""
"Note that any errors raised by your :meth:`Form.clean()` override will not "
"be associated with any field in particular. They go into a special \"field"
"\" (called ``__all__``), which you can access via the :meth:`~django.forms."
"Form.non_field_errors` method if you need to. If you want to attach errors "
"to a specific field in the form, you need to call :meth:`~django.forms.Form."
"add_error()`."
msgstr ""

msgid ""
"Also note that there are special considerations when overriding the "
"``clean()`` method of a ``ModelForm`` subclass. (see the :ref:`ModelForm "
"documentation <overriding-modelform-clean-method>` for more information)"
msgstr ""

msgid ""
"These methods are run in the order given above, one field at a time.  That "
"is, for each field in the form (in the order they are declared in the form "
"definition), the ``Field.clean()`` method (or its override) is run, then "
"``clean_<fieldname>()``. Finally, once those two methods are run for every "
"field, the :meth:`Form.clean()` method, or its override, is executed whether "
"or not the previous methods have raised errors."
msgstr ""

msgid "Examples of each of these methods are provided below."
msgstr "Contoh dari setiap cara ini disediakan dibawah."

msgid ""
"As mentioned, any of these methods can raise a ``ValidationError``. For any "
"field, if the ``Field.clean()`` method raises a ``ValidationError``, any "
"field-specific cleaning method is not called. However, the cleaning methods "
"for all remaining fields are still executed."
msgstr ""

msgid "Raising ``ValidationError``"
msgstr "Membangkitkan ``ValidationError``"

msgid ""
"In order to make error messages flexible and easy to override, consider the "
"following guidelines:"
msgstr ""

msgid "Provide a descriptive error ``code`` to the constructor::"
msgstr ""

msgid ""
"Don't coerce variables into the message; use placeholders and the ``params`` "
"argument of the constructor::"
msgstr ""

msgid ""
"Use mapping keys instead of positional formatting. This enables putting the "
"variables in any order or omitting them altogether when rewriting the "
"message::"
msgstr ""

msgid "Wrap the message with ``gettext`` to enable translation::"
msgstr "Bungkus pesan dengan ``gettext`` untuk mengadakan terjemahan::"

msgid "Putting it all together::"
msgstr "Menaruh semua bersama::"

msgid ""
"Following these guidelines is particularly necessary if you write reusable "
"forms, form fields, and model fields."
msgstr ""

msgid ""
"While not recommended, if you are at the end of the validation chain (i.e. "
"your form ``clean()`` method) and you know you will *never* need to override "
"your error message you can still opt for the less verbose::"
msgstr ""

msgid ""
"The :meth:`Form.errors.as_data() <django.forms.Form.errors.as_data()>` and :"
"meth:`Form.errors.as_json() <django.forms.Form.errors.as_json()>` methods "
"greatly benefit from fully featured ``ValidationError``\\s (with a ``code`` "
"name and a ``params`` dictionary)."
msgstr ""

msgid "Raising multiple errors"
msgstr "Membangkitkan banyak kesalahan"

msgid ""
"If you detect multiple errors during a cleaning method and wish to signal "
"all of them to the form submitter, it is possible to pass a list of errors "
"to the ``ValidationError`` constructor."
msgstr ""

msgid ""
"As above, it is recommended to pass a list of ``ValidationError`` instances "
"with ``code``\\s and ``params`` but a list of strings will also work::"
msgstr ""

msgid "Using validation in practice"
msgstr ""

msgid ""
"The previous sections explained how validation works in general for forms. "
"Since it can sometimes be easier to put things into place by seeing each "
"feature in use, here are a series of small examples that use each of the "
"previous features."
msgstr ""

msgid "Using validators"
msgstr "Menggunakan pengesah"

msgid ""
"Django's form (and model) fields support use of simple utility functions and "
"classes known as validators. A validator is merely a callable object or "
"function that takes a value and simply returns nothing if the value is valid "
"or raises a :exc:`~django.core.exceptions.ValidationError` if not. These can "
"be passed to a field's constructor, via the field's ``validators`` argument, "
"or defined on the :class:`~django.forms.Field` class itself with the "
"``default_validators`` attribute."
msgstr ""

msgid ""
"Simple validators can be used to validate values inside the field, let's "
"have a look at Django's ``SlugField``::"
msgstr ""

msgid ""
"As you can see, ``SlugField`` is just a ``CharField`` with a customized "
"validator that validates that submitted text obeys to some character rules. "
"This can also be done on field definition so::"
msgstr ""

msgid "is equivalent to::"
msgstr "setara pada::"

msgid ""
"Common cases such as validating against an email or a regular expression can "
"be handled using existing validator classes available in Django. For "
"example, ``validators.validate_slug`` is an instance of a :class:`~django."
"core.validators.RegexValidator` constructed with the first argument being "
"the pattern: ``^[-a-zA-Z0-9_]+$``. See the section on :doc:`writing "
"validators </ref/validators>` to see a list of what is already available and "
"for an example of how to write a validator."
msgstr ""

msgid "Form field default cleaning"
msgstr ""

msgid ""
"Let's first create a custom form field that validates its input is a string "
"containing comma-separated email addresses. The full class looks like this::"
msgstr ""

msgid ""
"Every form that uses this field will have these methods run before anything "
"else can be done with the field's data. This is cleaning that is specific to "
"this type of field, regardless of how it is subsequently used."
msgstr ""

msgid ""
"Let's create a simple ``ContactForm`` to demonstrate how you'd use this "
"field::"
msgstr ""

msgid ""
"Simply use ``MultiEmailField`` like any other form field. When the "
"``is_valid()`` method is called on the form, the ``MultiEmailField.clean()`` "
"method will be run as part of the cleaning process and it will, in turn, "
"call the custom ``to_python()`` and ``validate()`` methods."
msgstr ""

msgid "Cleaning a specific field attribute"
msgstr "Membersihkan atribut bidang khusus"

msgid ""
"Continuing on from the previous example, suppose that in our "
"``ContactForm``, we want to make sure that the ``recipients`` field always "
"contains the address ``\"fred@example.com\"``. This is validation that is "
"specific to our form, so we don't want to put it into the general "
"``MultiEmailField`` class. Instead, we write a cleaning method that operates "
"on the ``recipients`` field, like so::"
msgstr ""

msgid "Cleaning and validating fields that depend on each other"
msgstr "Membersihkan dan memeriksa bidang yang tergantung satu sama lain"

msgid ""
"Suppose we add another requirement to our contact form: if the ``cc_myself`` "
"field is ``True``, the ``subject`` must contain the word ``\"help\"``. We "
"are performing validation on more than one field at a time, so the form's :"
"meth:`~Form.clean()` method is a good spot to do this. Notice that we are "
"talking about the ``clean()`` method on the form here, whereas earlier we "
"were writing a ``clean()`` method on a field. It's important to keep the "
"field and form difference clear when working out where to validate things. "
"Fields are single data points, forms are a collection of fields."
msgstr ""

msgid ""
"By the time the form's ``clean()`` method is called, all the individual "
"field clean methods will have been run (the previous two sections), so "
"``self.cleaned_data`` will be populated with any data that has survived so "
"far. So you also need to remember to allow for the fact that the fields you "
"are wanting to validate might not have survived the initial individual field "
"checks."
msgstr ""

msgid ""
"There are two ways to report any errors from this step. Probably the most "
"common method is to display the error at the top of the form. To create such "
"an error, you can raise a ``ValidationError`` from the ``clean()`` method. "
"For example::"
msgstr ""

msgid ""
"In this code, if the validation error is raised, the form will display an "
"error message at the top of the form (normally) describing the problem."
msgstr ""

msgid ""
"The call to ``super(ContactForm, self).clean()`` in the example code ensures "
"that any validation logic in parent classes is maintained. If your form "
"inherits another that doesn't return a ``cleaned_data`` dictionary in its "
"``clean()`` method (doing so is optional), then don't assign "
"``cleaned_data`` to the result of the ``super()`` call and use ``self."
"cleaned_data`` instead::"
msgstr ""

msgid ""
"The second approach for reporting validation errors might involve assigning "
"the error message to one of the fields. In this case, let's assign an error "
"message to both the \"subject\" and \"cc_myself\" rows in the form display. "
"Be careful when doing this in practice, since it can lead to confusing form "
"output. We're showing what is possible here and leaving it up to you and "
"your designers to work out what works effectively in your particular "
"situation. Our new code (replacing the previous sample) looks like this::"
msgstr ""

msgid ""
"The second argument of ``add_error()`` can be a simple string, or preferably "
"an instance of ``ValidationError``. See :ref:`raising-validation-error` for "
"more details. Note that ``add_error()`` automatically removes the field from "
"``cleaned_data``."
msgstr ""

msgid ""
"A widget is Django's representation of an HTML input element. The widget "
"handles the rendering of the HTML, and the extraction of data from a GET/"
"POST dictionary that corresponds to the widget."
msgstr ""

msgid ""
"The HTML generated by the built-in widgets uses HTML5 syntax, targeting ``<!"
"DOCTYPE html>``. For example, it uses boolean attributes such as ``checked`` "
"rather than the XHTML style of ``checked='checked'``."
msgstr ""

msgid ""
"Widgets should not be confused with the :doc:`form fields </ref/forms/"
"fields>`. Form fields deal with the logic of input validation and are used "
"directly in templates. Widgets deal with rendering of HTML form input "
"elements on the web page and extraction of raw submitted data. However, "
"widgets do need to be :ref:`assigned <widget-to-field>` to form fields."
msgstr ""

msgid "Specifying widgets"
msgstr "Menentukan widget"

msgid ""
"Whenever you specify a field on a form, Django will use a default widget "
"that is appropriate to the type of data that is to be displayed. To find "
"which widget is used on which field, see the documentation about :ref:`built-"
"in-fields`."
msgstr ""

msgid ""
"However, if you want to use a different widget for a field, you can just use "
"the :attr:`~Field.widget` argument on the field definition. For example::"
msgstr ""

msgid ""
"This would specify a form with a comment that uses a larger :class:"
"`Textarea` widget, rather than the default :class:`TextInput` widget."
msgstr ""
"Ini akan menentukan formulir dengan komentar yang menggunakan widget :class:"
"`Textarea`  terbesar, daripada widget :class:`TextInput` awal."

msgid "Setting arguments for widgets"
msgstr "Mengatur argumen untuk widget"

msgid ""
"Many widgets have optional extra arguments; they can be set when defining "
"the widget on the field. In the following example, the :attr:`~django.forms."
"SelectDateWidget.years` attribute is set for a :class:`~django.forms."
"SelectDateWidget`::"
msgstr ""

msgid ""
"See the :ref:`built-in widgets` for more information about which widgets are "
"available and which arguments they accept."
msgstr ""

msgid "Widgets inheriting from the ``Select`` widget"
msgstr "Widget warisan dari widget ``Select``"

msgid ""
"Widgets inheriting from the :class:`Select` widget deal with choices. They "
"present the user with a list of options to choose from. The different "
"widgets present this choice differently; the :class:`Select` widget itself "
"uses a ``<select>`` HTML list representation, while :class:`RadioSelect` "
"uses radio buttons."
msgstr ""

msgid ""
":class:`Select` widgets are used by default on :class:`ChoiceField` fields. "
"The choices displayed on the widget are inherited from the :class:"
"`ChoiceField` and changing :attr:`ChoiceField.choices` will update :attr:"
"`Select.choices`. For example::"
msgstr ""

msgid ""
"Widgets which offer a :attr:`~Select.choices` attribute can however be used "
"with fields which are not based on choice -- such as a :class:`CharField` -- "
"but it is recommended to use a :class:`ChoiceField`-based field when the "
"choices are inherent to the model and not just the representational widget."
msgstr ""

msgid "Customizing widget instances"
msgstr ""

msgid ""
"When Django renders a widget as HTML, it only renders very minimal markup - "
"Django doesn't add class names, or any other widget-specific attributes. "
"This means, for example, that all :class:`TextInput` widgets will appear the "
"same on your Web pages."
msgstr ""

msgid ""
"There are two ways to customize widgets: :ref:`per widget instance <styling-"
"widget-instances>` and :ref:`per widget class <styling-widget-classes>`."
msgstr ""

msgid "Styling widget instances"
msgstr ""

msgid ""
"If you want to make one widget instance look different from another, you "
"will need to specify additional attributes at the time when the widget "
"object is instantiated and assigned to a form field (and perhaps add some "
"rules to your CSS files)."
msgstr ""

msgid "For example, take the following simple form::"
msgstr "Sebagai contoh, ambil formulir sederhana berikut::"

msgid ""
"This form will include three default :class:`TextInput` widgets, with "
"default rendering -- no CSS class, no extra attributes. This means that the "
"input boxes provided for each widget will be rendered exactly the same::"
msgstr ""

msgid ""
"On a real Web page, you probably don't want every widget to look the same. "
"You might want a larger input element for the comment, and you might want "
"the 'name' widget to have some special CSS class. It is also possible to "
"specify the 'type' attribute to take advantage of the new HTML5 input "
"types.  To do this, you use the :attr:`Widget.attrs` argument when creating "
"the widget::"
msgstr ""

msgid "Django will then include the extra attributes in the rendered output:"
msgstr ""

msgid ""
"You can also set the HTML ``id`` using :attr:`~Widget.attrs`. See :attr:"
"`BoundField.id_for_label` for an example."
msgstr ""

msgid "Styling widget classes"
msgstr ""

msgid ""
"With widgets, it is possible to add assets (``css`` and ``javascript``) and "
"more deeply customize their appearance and behavior."
msgstr ""

msgid ""
"In a nutshell, you will need to subclass the widget and either :ref:`define "
"a \"Media\" inner class  <assets-as-a-static-definition>` or :ref:`create a "
"\"media\" property <dynamic-property>`."
msgstr ""

msgid ""
"These methods involve somewhat advanced Python programming and are described "
"in detail in the :doc:`Form Assets </topics/forms/media>` topic guide."
msgstr ""

msgid "Base widget classes"
msgstr ""

msgid ""
"Base widget classes :class:`Widget` and :class:`MultiWidget` are subclassed "
"by all the :ref:`built-in widgets <built-in widgets>` and may serve as a "
"foundation for custom widgets."
msgstr ""

msgid "``Widget``"
msgstr "``Widget``"

msgid ""
"This abstract class cannot be rendered, but provides the basic attribute :"
"attr:`~Widget.attrs`.  You may also implement or override the :meth:`~Widget."
"render()` method on custom widgets."
msgstr ""

msgid ""
"A dictionary containing HTML attributes to be set on the rendered widget."
msgstr ""

msgid ""
"If you assign a value of ``True`` or ``False`` to an attribute, it will be "
"rendered as an HTML5 boolean attribute::"
msgstr ""
"Jika anda memberikan sebuah nilai dari ``True`` atau ``False`` ke sebuah "
"atribut, itu akan dibangun sebagai sebuah atribut boolean HTML5::"

msgid ""
"An attribute that defaults to ``True``. If set to ``False``, the "
"microseconds part of :class:`~datetime.datetime` and :class:`~datetime.time` "
"values will be set to ``0``."
msgstr ""
"Sebuah atribut yang awalan menjadi ``True``. Jika disetel menjadi ``False``, "
"mikrodetik bagian dari nilai-nilai :class:`~datetime.datetime` dan :class:"
"`~datetime.time` akan disetel menjadi ``0``."

msgid ""
"Cleans and returns a value for use in the widget template. ``value`` isn't "
"guaranteed to be valid input, therefore subclass implementations should "
"program defensively."
msgstr ""

msgid ""
"In older versions, this method is a private API named ``_format_value()``. "
"The old name will work until Django 2.0."
msgstr ""
"Di versi terlama, metode ini adalah API pribadi bernama ``_format_value()``. "
"Nama lama akan bekerja sampai Django 2.0."

msgid ""
"Returns a dictionary of values to use when rendering the widget template. By "
"default, the dictionary contains a single key, ``'widget'``, which is a "
"dictionary representation of the widget containing the following keys:"
msgstr ""

msgid "``'name'``: The name of the field from the ``name`` argument."
msgstr ""

msgid ""
"``'is_hidden'``: A boolean indicating whether or not this widget is hidden."
msgstr ""

msgid ""
"``'required'``: A boolean indicating whether or not the field for this "
"widget is required."
msgstr ""

msgid "``'value'``: The value as returned by :meth:`format_value`."
msgstr ""

msgid ""
"``'attrs'``: HTML attributes to be set on the rendered widget. The "
"combination of the :attr:`attrs` attribute and the ``attrs`` argument."
msgstr ""

msgid "``'template_name'``: The value of ``self.template_name``."
msgstr ""

msgid ""
"``Widget`` subclasses can provide custom context values by overriding this "
"method."
msgstr ""

msgid ""
"Returns the HTML ID attribute of this widget for use by a ``<label>``, given "
"the ID of the field. Returns ``None`` if an ID isn't available."
msgstr ""
"Mengebalikan atribut ID HTML dari widget ini untuk digunakan oleh sebuah "
"``<label>``, diberikan ID dari bidang. Mengembalikan ``None`` jika sebuah ID "
"tidak tersedia."

msgid ""
"This hook is necessary because some widgets have multiple HTML elements and, "
"thus, multiple IDs. In that case, this method should return an ID value that "
"corresponds to the first ID in the widget's tags."
msgstr ""

msgid ""
"Renders a widget to HTML using the given renderer. If ``renderer`` is "
"``None``, the renderer from the :setting:`FORM_RENDERER` setting is used."
msgstr ""

msgid ""
"The ``renderer`` argument was added. Support for subclasses that don't "
"accept it will be removed in Django 2.1."
msgstr ""

msgid ""
"Given a dictionary of data and this widget's name, returns the value of this "
"widget. ``files`` may contain data coming from :attr:`request.FILES <django."
"http.HttpRequest.FILES>`. Returns ``None`` if a value wasn't provided. Note "
"also that ``value_from_datadict`` may be called more than once during "
"handling of form data, so if you customize it and add expensive processing, "
"you should implement some caching mechanism yourself."
msgstr ""

msgid ""
"Given ``data`` and ``files`` dictionaries and this widget's name, returns "
"whether or not there's data or files for the widget."
msgstr ""

msgid ""
"The method's result affects whether or not a field in a model form :ref:"
"`falls back to its default <topics-modelform-save>`."
msgstr ""
"Hasil metode mempengaruhi apakah atau tidak sebuah bidang di sebuah model "
"formulir :ref:`falls back to its default <topics-modelform-save>`."

msgid ""
"Special cases are :class:`~django.forms.CheckboxInput`, :class:`~django."
"forms.CheckboxSelectMultiple`, and :class:`~django.forms.SelectMultiple`, "
"which always return ``False`` because an unchecked checkbox and unselected "
"``<select multiple>`` don't appear in the data of an HTML form submission, "
"so it's unknown whether or not the user submitted a value."
msgstr ""

msgid ""
"Given a form field's ``initial`` value, returns whether or not the widget "
"can be rendered with the ``required`` HTML attribute. Forms use this method "
"along with :attr:`Field.required <django.forms.Field.required>` and :attr:"
"`Form.use_required_attribute <django.forms.Form.use_required_attribute>` to "
"determine whether or not to display the ``required`` attribute for each "
"field."
msgstr ""

msgid ""
"By default, returns ``False`` for hidden widgets and ``True`` otherwise. "
"Special cases are :class:`~django.forms.ClearableFileInput`, which returns "
"``False`` when ``initial`` is not set, and :class:`~django.forms."
"CheckboxSelectMultiple`, which always returns ``False`` because browser "
"validation would require all checkboxes to be checked instead of at least "
"one."
msgstr ""

msgid ""
"Override this method in custom widgets that aren't compatible with browser "
"validation. For example, a WSYSIWG text editor widget backed by a hidden "
"``textarea`` element may want to always return ``False`` to avoid browser "
"validation on the hidden field."
msgstr ""

msgid "``MultiWidget``"
msgstr "``MultiWidget``"

msgid ""
"A widget that is composed of multiple widgets. :class:`~django.forms."
"MultiWidget` works hand in hand with the :class:`~django.forms."
"MultiValueField`."
msgstr ""

msgid ":class:`MultiWidget` has one required argument:"
msgstr ":class:`MultiWidget` mempunyai satu argumen diwajibkan:"

msgid "An iterable containing the widgets needed."
msgstr ""

msgid "And one required method:"
msgstr "Dan satu cara diwajibkan:"

msgid ""
"This method takes a single \"compressed\" value from the field and returns a "
"list of \"decompressed\" values. The input value can be assumed valid, but "
"not necessarily non-empty."
msgstr ""

msgid ""
"This method **must be implemented** by the subclass, and since the value may "
"be empty, the implementation must be defensive."
msgstr ""

msgid ""
"The rationale behind \"decompression\" is that it is necessary to \"split\" "
"the combined value of the form field into the values for each widget."
msgstr ""

msgid ""
"An example of this is how :class:`SplitDateTimeWidget` turns a :class:"
"`~datetime.datetime` value into a list with date and time split into two "
"separate values::"
msgstr ""

msgid ""
"Note that :class:`~django.forms.MultiValueField` has a complementary method :"
"meth:`~django.forms.MultiValueField.compress` with the opposite "
"responsibility - to combine cleaned values of all member fields into one."
msgstr ""

msgid "It provides some custom context:"
msgstr "Itu menyediakan beberapa konteks penyesuaian:"

msgid ""
"In addition to the ``'widget'`` key described in :meth:`Widget.get_context`, "
"``MultiValueWidget`` adds a ``widget['subwidgets']`` key."
msgstr ""

msgid "These can be looped over in the widget template:"
msgstr "Ini dapat dilingkarkan dalam cetakan widget:"

msgid ""
"Here's an example widget which subclasses :class:`MultiWidget` to display a "
"date with the day, month, and year in different select boxes. This widget is "
"intended to be used with a :class:`~django.forms.DateField` rather than a :"
"class:`~django.forms.MultiValueField`, thus we have implemented :meth:"
"`~Widget.value_from_datadict`::"
msgstr ""

msgid ""
"The constructor creates several :class:`Select` widgets in a tuple. The "
"``super`` class uses this tuple to setup the widget."
msgstr ""

msgid ""
"The required method :meth:`~MultiWidget.decompress` breaks up a ``datetime."
"date`` value into the day, month, and year values corresponding to each "
"widget. Note how the method handles the case where ``value`` is ``None``."
msgstr ""

msgid ""
"The default implementation of :meth:`~Widget.value_from_datadict` returns a "
"list of values corresponding to each ``Widget``.  This is appropriate when "
"using a ``MultiWidget`` with a :class:`~django.forms.MultiValueField`, but "
"since we want to use this widget with a :class:`~django.forms.DateField` "
"which takes a single value, we have overridden this method to combine the "
"data of all the subwidgets into a ``datetime.date``. The method extracts "
"data from the ``POST`` dictionary and constructs and validates the date. If "
"it is valid, we return the string, otherwise, we return an empty string "
"which will cause ``form.is_valid`` to return ``False``."
msgstr ""

msgid "Built-in widgets"
msgstr "Widget pasang tetap"

msgid ""
"Django provides a representation of all the basic HTML widgets, plus some "
"commonly used groups of widgets in the ``django.forms.widgets`` module, "
"including :ref:`the input of text <text-widgets>`, :ref:`various checkboxes "
"and selectors <selector-widgets>`, :ref:`uploading files <file-upload-"
"widgets>`, and :ref:`handling of multi-valued input <composite-widgets>`."
msgstr ""

msgid "Widgets handling input of text"
msgstr "Widget menangani masukan dari teks"

msgid "These widgets make use of the HTML elements ``input`` and ``textarea``."
msgstr ""

msgid "``TextInput``"
msgstr "``TextInput``"

msgid "``input_type``: ``'text'``"
msgstr "``input_type``: ``'text'``"

msgid "``template_name``: ``'django/forms/widgets/text.html'``"
msgstr "``template_name``: ``'django/forms/widgets/text.html'``"

msgid "Renders as: ``<input type=\"text\" ...>``"
msgstr ""

msgid "``NumberInput``"
msgstr "``NumberInput``"

msgid "``input_type``: ``'number'``"
msgstr "``input_type``: ``'number'``"

msgid "``template_name``: ``'django/forms/widgets/number.html'``"
msgstr "``template_name``: ``'django/forms/widgets/number.html'``"

msgid "Renders as: ``<input type=\"number\" ...>``"
msgstr ""

msgid ""
"Beware that not all browsers support entering localized numbers in "
"``number`` input types. Django itself avoids using them for fields having "
"their :attr:`~django.forms.Field.localize` property set to ``True``."
msgstr ""

msgid "``EmailInput``"
msgstr "``EmailInput``"

msgid "``input_type``: ``'email'``"
msgstr "``input_type``: ``'email'``"

msgid "``template_name``: ``'django/forms/widgets/email.html'``"
msgstr "``template_name``: ``'django/forms/widgets/email.html'``"

msgid "Renders as: ``<input type=\"email\" ...>``"
msgstr ""

msgid "``URLInput``"
msgstr "``URLInput``"

msgid "``input_type``: ``'url'``"
msgstr "``input_type``: ``'url'``"

msgid "``template_name``: ``'django/forms/widgets/url.html'``"
msgstr "``template_name``: ``'django/forms/widgets/url.html'``"

msgid "Renders as: ``<input type=\"url\" ...>``"
msgstr ""

msgid "``PasswordInput``"
msgstr "``PasswordInput``"

msgid "``input_type``: ``'password'``"
msgstr "``input_type``: ``'password'``"

msgid "``template_name``: ``'django/forms/widgets/password.html'``"
msgstr "``template_name``: ``'django/forms/widgets/password.html'``"

msgid "Renders as: ``<input type=\"password\" ...>``"
msgstr ""

msgid ""
"Determines whether the widget will have a value filled in when the form is "
"re-displayed after a validation error (default is ``False``)."
msgstr ""

msgid "``HiddenInput``"
msgstr "``HiddenInput``"

msgid "``input_type``: ``'hidden'``"
msgstr "``input_type``: ``'hidden'``"

msgid "``template_name``: ``'django/forms/widgets/hidden.html'``"
msgstr "``template_name``: ``'django/forms/widgets/hidden.html'``"

msgid "Renders as: ``<input type=\"hidden\" ...>``"
msgstr ""

msgid ""
"Note that there also is a :class:`MultipleHiddenInput` widget that "
"encapsulates a set of hidden input elements."
msgstr ""

msgid "``DateInput``"
msgstr "``DateInput``"

msgid "``template_name``: ``'django/forms/widgets/date.html'``"
msgstr "``template_name``: ``'django/forms/widgets/date.html'``"

msgid ""
"Takes same arguments as :class:`TextInput`, with one more optional argument:"
msgstr ""

msgid "The format in which this field's initial value will be displayed."
msgstr ""

msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATE_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""

msgid "``DateTimeInput``"
msgstr "``DateTimeInput``"

msgid "``template_name``: ``'django/forms/widgets/datetime.html'``"
msgstr "``template_name``: ``'django/forms/widgets/datetime.html'``"

msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATETIME_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""

msgid ""
"By default, the microseconds part of the time value is always set to ``0``. "
"If microseconds are required, use a subclass with the :attr:`~Widget."
"supports_microseconds` attribute set to ``True``."
msgstr ""

msgid "``TimeInput``"
msgstr "``TimeInput``"

msgid "``template_name``: ``'django/forms/widgets/time.html'``"
msgstr "``template_name``: ``'django/forms/widgets/time.html'``"

msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`TIME_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""

msgid "For the treatment of microseconds, see :class:`DateTimeInput`."
msgstr "Untuk perlakuan dari mikro detik, lihat :class:`DateTimeInput`."

msgid "``Textarea``"
msgstr "``Textarea``"

msgid "``template_name``: ``'django/forms/widgets/textarea.html'``"
msgstr "``template_name``: ``'django/forms/widgets/textarea.html'``"

msgid "Renders as: ``<textarea>...</textarea>``"
msgstr ""

msgid "Selector and checkbox widgets"
msgstr ""

msgid ""
"These widgets make use of the HTML elements ``<select>``, ``<input type="
"\"checkbox\">``, and ``<input type=\"radio\">``."
msgstr ""

msgid ""
"Widgets that render multiple choices have an ``option_template_name`` "
"attribute that specifies the template used to render each choice. For "
"example, for the :class:`Select` widget, ``select_option.html`` renders the "
"``<option>`` for a ``<select>``."
msgstr ""

msgid "``CheckboxInput``"
msgstr "``CheckboxInput``"

msgid "``input_type``: ``'checkbox'``"
msgstr "``input_type``: ``'checkbox'``"

msgid "``template_name``: ``'django/forms/widgets/checkbox.html'``"
msgstr "``template_name``: ``'django/forms/widgets/checkbox.html'``"

msgid "Renders as: ``<input type=\"checkbox\" ...>``"
msgstr ""

msgid ""
"A callable that takes the value of the ``CheckboxInput`` and returns "
"``True`` if the checkbox should be checked for that value."
msgstr ""

msgid "``Select``"
msgstr "``Select``"

msgid "``template_name``: ``'django/forms/widgets/select.html'``"
msgstr "``template_name``: ``'django/forms/widgets/select.html'``"

msgid "``option_template_name``: ``'django/forms/widgets/select_option.html'``"
msgstr ""
"``option_template_name``: ``'django/forms/widgets/select_option.html'``"

msgid "Renders as: ``<select><option ...>...</select>``"
msgstr ""

msgid ""
"This attribute is optional when the form field does not have a ``choices`` "
"attribute. If it does, it will override anything you set here when the "
"attribute is updated on the :class:`Field`."
msgstr ""

msgid "``NullBooleanSelect``"
msgstr "``NullBooleanSelect``"

msgid "Select widget with options 'Unknown', 'Yes' and 'No'"
msgstr "Pilih widget dengan pilihan  'Tidak dikenal', 'Ya' dan 'Tidak'"

msgid "``SelectMultiple``"
msgstr "``SelectMultiple``"

msgid ""
"Similar to :class:`Select`, but allows multiple selection: ``<select "
"multiple=\"multiple\">...</select>``"
msgstr ""

msgid "``RadioSelect``"
msgstr "``RadioSelect``"

msgid "``template_name``: ``'django/forms/widgets/radio.html'``"
msgstr "``template_name``: ``'django/forms/widgets/radio.html'``"

msgid "``option_template_name``: ``'django/forms/widgets/radio_option.html'``"
msgstr "``option_template_name``: ``'django/forms/widgets/radio_option.html'``"

msgid ""
"Similar to :class:`Select`, but rendered as a list of radio buttons within "
"``<li>`` tags:"
msgstr ""

msgid ""
"For more granular control over the generated markup, you can loop over the "
"radio buttons in the template. Assuming a form ``myform`` with a field "
"``beatles`` that uses a ``RadioSelect`` as its widget:"
msgstr ""

msgid "This would generate the following HTML:"
msgstr "Ini akan membangkitkan HTML berikut:"

msgid ""
"That included the ``<label>`` tags. To get more granular, you can use each "
"radio button's ``tag``, ``choice_label`` and ``id_for_label`` attributes. "
"For example, this template..."
msgstr ""

msgid "...will result in the following HTML:"
msgstr "...akan menghasilkan HTML berikut:"

msgid ""
"If you decide not to loop over the radio buttons -- e.g., if your template "
"simply includes ``{{ myform.beatles }}`` -- they'll be output in a ``<ul>`` "
"with ``<li>`` tags, as above."
msgstr ""

msgid ""
"The outer ``<ul>`` container receives the ``id`` attribute of the widget, if "
"defined, or :attr:`BoundField.auto_id` otherwise."
msgstr ""

msgid ""
"When looping over the radio buttons, the ``label`` and ``input`` tags "
"include ``for`` and ``id`` attributes, respectively. Each radio button has "
"an ``id_for_label`` attribute to output the element's ID."
msgstr ""

msgid "``CheckboxSelectMultiple``"
msgstr "``CheckboxSelectMultiple``"

msgid "``template_name``: ``'django/forms/widgets/checkbox_select.html'``"
msgstr "``template_name``: ``'django/forms/widgets/checkbox_select.html'``"

msgid ""
"``option_template_name``: ``'django/forms/widgets/checkbox_option.html'``"
msgstr ""
"``option_template_name``: ``'django/forms/widgets/checkbox_option.html'``"

msgid ""
"Similar to :class:`SelectMultiple`, but rendered as a list of check buttons:"
msgstr ""

msgid ""
"Like :class:`RadioSelect`, you can loop over the individual checkboxes for "
"the widget's choices. Unlike :class:`RadioSelect`, the checkboxes won't "
"include the ``required`` HTML attribute if the field is required because "
"browser validation would require all checkboxes to be checked instead of at "
"least one."
msgstr ""

msgid ""
"When looping over the checkboxes, the ``label`` and ``input`` tags include "
"``for`` and ``id`` attributes, respectively. Each checkbox has an "
"``id_for_label`` attribute to output the element's ID."
msgstr ""

msgid "File upload widgets"
msgstr "Widget unggah berkas"

msgid "``FileInput``"
msgstr "``FileInput``"

msgid "``template_name``: ``'django/forms/widgets/file.html'``"
msgstr "``template_name``: ``'django/forms/widgets/file.html'``"

msgid "Renders as: ``<input type=\"file\" ...>``"
msgstr ""

msgid "``ClearableFileInput``"
msgstr "``ClearableFileInput``"

msgid "``template_name``: ``'django/forms/widgets/clearable_file_input.html'``"
msgstr ""
"``template_name``: ``'django/forms/widgets/clearable_file_input.html'``"

msgid ""
"Renders as: ``<input type=\"file\" ...>`` with an additional checkbox input "
"to clear the field's value, if the field is not required and has initial "
"data."
msgstr ""

msgid "Composite widgets"
msgstr ""

msgid "``MultipleHiddenInput``"
msgstr "``MultipleHiddenInput``"

msgid "``template_name``: ``'django/forms/widgets/multiple_hidden.html'``"
msgstr "``template_name``: ``'django/forms/widgets/multiple_hidden.html'``"

msgid "Renders as: multiple ``<input type=\"hidden\" ...>`` tags"
msgstr ""

msgid ""
"A widget that handles multiple hidden widgets for fields that have a list of "
"values."
msgstr ""

msgid "``SplitDateTimeWidget``"
msgstr "``SplitDateTimeWidget``"

msgid "``template_name``: ``'django/forms/widgets/splitdatetime.html'``"
msgstr "``template_name``: ``'django/forms/widgets/splitdatetime.html'``"

msgid ""
"Wrapper (using :class:`MultiWidget`) around two widgets: :class:`DateInput` "
"for the date, and :class:`TimeInput` for the time. Must be used with :class:"
"`SplitDateTimeField` rather than :class:`DateTimeField`."
msgstr ""

msgid "``SplitDateTimeWidget`` has two optional attributes:"
msgstr "``SplitDateTimeWidget`` mempunyai dua atribut pilihan:"

msgid "Similar to :attr:`DateInput.format`"
msgstr "Mirip ke :attr:`DateInput.format`"

msgid "Similar to :attr:`TimeInput.format`"
msgstr "Mirip ke :attr:`TimeInput.format`"

msgid "``SplitHiddenDateTimeWidget``"
msgstr "``SplitHiddenDateTimeWidget``"

msgid "``template_name``: ``'django/forms/widgets/splithiddendatetime.html'``"
msgstr "``template_name``: ``'django/forms/widgets/splithiddendatetime.html'``"

msgid ""
"Similar to :class:`SplitDateTimeWidget`, but uses :class:`HiddenInput` for "
"both date and time."
msgstr ""

msgid "``SelectDateWidget``"
msgstr "``SelectDateWidget``"

msgid "``template_name``: ``'django/forms/widgets/select_date.html'``"
msgstr "``template_name``: ``'django/forms/widgets/select_date.html'``"

msgid ""
"Wrapper around three :class:`~django.forms.Select` widgets: one each for "
"month, day, and year."
msgstr ""

msgid "Takes several optional arguments:"
msgstr "Mengambil beberapa argumen pilihan:"

msgid ""
"An optional list/tuple of years to use in the \"year\" select box. The "
"default is a list containing the current year and the next 9 years."
msgstr ""

msgid "An optional dict of months to use in the \"months\" select box."
msgstr ""

msgid ""
"The keys of the dict correspond to the month number (1-indexed) and the "
"values are the displayed months::"
msgstr ""

msgid ""
"If the :class:`~django.forms.DateField` is not required, :class:"
"`SelectDateWidget` will have an empty choice at the top of the list (which "
"is ``---`` by default). You can change the text of this label with the "
"``empty_label`` attribute. ``empty_label`` can be a ``string``, ``list``, or "
"``tuple``. When a string is used, all select boxes will each have an empty "
"choice with this label. If ``empty_label`` is a ``list`` or ``tuple`` of 3 "
"string elements, the select boxes will have their own custom label. The "
"labels should be in this order ``('year_label', 'month_label', "
"'day_label')``."
msgstr ""

msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""

msgid "Available middleware"
msgstr "Middleware tersedia"

msgid "Cache middleware"
msgstr "Middleware tembolok"

msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""

msgid "\"Common\" middleware"
msgstr "Middleware \"Umum\""

msgid "Adds a few conveniences for perfectionists:"
msgstr ""

msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of compiled regular expression objects."
msgstr ""

msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""
"Lakukan penulisan kembali URL pada pengaturan :setting:`APPEND_SLASH` dan :"
"setting:`PREPEND_WWW`."

msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""
"Jika :setting:`APPEND_SLASH` adalah ``True`` dan URL permulaan tidak "
"berakhir dengan garis miring, dan itu tidak ditemukan dalam URLconf, "
"kemudian URL baru dibentuk dengan menambahkan sebuah garis miring pada "
"akhiran. Jika URL baru ini ditemukan dalam URLconf, kemudian Django "
"mengalihkan permintaan ke URL baru ini. Sebaliknya, URL permulaan diolah "
"seperti biasa. "

msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""

msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""

msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""

msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""

msgid "Sets the ``Content-Length`` header for non-streaming responses."
msgstr ""

msgid "Older versions didn't set the ``Content-Length`` header."
msgstr ""

msgid ""
"The :setting:`USE_ETAGS` setting is deprecated in favor of using :class:"
"`~django.middleware.http.ConditionalGetMiddleware` for ETag processing."
msgstr ""

msgid ""
"Defaults to :class:`~django.http.HttpResponsePermanentRedirect`. Subclass "
"``CommonMiddleware`` and override the attribute to customize the redirects "
"issued by the middleware."
msgstr ""

msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` (see :doc:`/"
"howto/error-reporting`)."
msgstr ""

msgid "Exception middleware"
msgstr "Middleware pengecualian"

msgid ""
"Catches exceptions raised during the request/response cycle and returns the "
"appropriate response."
msgstr ""

msgid ""
":class:`~django.http.Http404` is processed by :data:`~django.conf.urls."
"handler404` (or a more friendly debug page if :setting:`DEBUG=True <DEBUG>`)."
msgstr ""

msgid ""
":class:`~django.core.exceptions.PermissionDenied` is processed by :data:"
"`~django.conf.urls.handler403`."
msgstr ""
":class:`~django.core.exceptions.PermissionDenied` diolah oleh :data:`~django."
"conf.urls.handler403`."

msgid ""
"``MultiPartParserError`` is processed by :data:`~django.conf.urls."
"handler400`."
msgstr ""
"``MultiPartParserError`` diolah oleh :data:`~django.conf.urls.handler400`."

msgid ""
":class:`~django.core.exceptions.SuspiciousOperation` is processed by :data:"
"`~django.conf.urls.handler400`  (or a more friendly debug page if :setting:"
"`DEBUG=True <DEBUG>`)."
msgstr ""

msgid ""
"Any other exception is processed by :data:`~django.conf.urls.handler500` (or "
"a more friendly debug page if :setting:`DEBUG=True <DEBUG>`)."
msgstr ""

msgid ""
"Django uses this middleware regardless of whether or not you include it in :"
"setting:`MIDDLEWARE`, however, you may want to subclass if your own "
"middleware needs to transform any of these exceptions into the appropriate "
"responses. :class:`~django.middleware.locale.LocaleMiddleware` does this, "
"for example."
msgstr ""

msgid "GZip middleware"
msgstr "Middleware GZip"

msgid ""
"Security researchers recently revealed that when compression techniques "
"(including ``GZipMiddleware``) are used on a website, the site may become "
"exposed to a number of possible attacks. Before using ``GZipMiddleware`` on "
"your site, you should consider very carefully whether you are subject to "
"these attacks. If you're in *any* doubt about whether you're affected, you "
"should avoid using ``GZipMiddleware``. For more details, see the `the BREACH "
"paper (PDF)`_ and `breachattack.com`_."
msgstr ""

msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""

msgid ""
"This middleware should be placed before any other middleware that need to "
"read or write the response body so that compression happens afterward."
msgstr ""

msgid "It will NOT compress content if any of the following are true:"
msgstr ""

msgid "The content body is less than 200 bytes long."
msgstr "Isi badan kurang dari panjang 200 byte."

msgid "The response has already set the ``Content-Encoding`` header."
msgstr "Tanggapan telah menyetel kepala ``Content-Encoding``."

msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""

msgid ""
"If the response has an ``ETag`` header, the ETag is made weak to comply "
"with :rfc:`7232#section-2.1`."
msgstr ""

msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.gzip.gzip_page()` decorator."
msgstr ""

msgid ""
"In older versions, Django's CSRF protection mechanism was vulnerable to "
"BREACH attacks when compression was used. This is no longer the case, but "
"you should still take care not to compromise your own secrets this way."
msgstr ""

msgid "Conditional GET middleware"
msgstr ""

msgid ""
"Handles conditional GET operations. If the response doesn't have an ``ETag`` "
"header, the middleware adds one if needed. If the response has a ``ETag`` or "
"``Last-Modified`` header, and the request has ``If-None-Match`` or ``If-"
"Modified-Since``, the response is replaced by an :class:`~django.http."
"HttpResponseNotModified`."
msgstr ""

msgid ""
"In older versions, the middleware set the ``Content-Length`` and ``Date`` "
"headers and didn't set the ``ETag`` header."
msgstr ""

msgid "Locale middleware"
msgstr "Middleware lokal"

msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/translation>`."
msgstr ""

msgid ""
"Defaults to :class:`~django.http.HttpResponseRedirect`. Subclass "
"``LocaleMiddleware`` and override the attribute to customize the redirects "
"issued by the middleware."
msgstr ""

msgid "Message middleware"
msgstr "Middleware pesan"

msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""

msgid "Security middleware"
msgstr "Middleware keamanan"

msgid ""
"If your deployment situation allows, it's usually a good idea to have your "
"front-end Web server perform the functionality provided by the "
"``SecurityMiddleware``. That way, if there are requests that aren't served "
"by Django (such as static media or user-uploaded files), they will have the "
"same protections as requests to your Django application."
msgstr ""

msgid ""
"The ``django.middleware.security.SecurityMiddleware`` provides several "
"security enhancements to the request/response cycle. Each one can be "
"independently enabled or disabled with a setting."
msgstr ""

msgid ":setting:`SECURE_BROWSER_XSS_FILTER`"
msgstr ":setting:`SECURE_BROWSER_XSS_FILTER`"

msgid ":setting:`SECURE_CONTENT_TYPE_NOSNIFF`"
msgstr ":setting:`SECURE_CONTENT_TYPE_NOSNIFF`"

msgid ":setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS`"
msgstr ":setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS`"

msgid ":setting:`SECURE_HSTS_PRELOAD`"
msgstr ":setting:`SECURE_HSTS_PRELOAD`"

msgid ":setting:`SECURE_HSTS_SECONDS`"
msgstr ":setting:`SECURE_HSTS_SECONDS`"

msgid ":setting:`SECURE_REDIRECT_EXEMPT`"
msgstr ":setting:`SECURE_REDIRECT_EXEMPT`"

msgid ":setting:`SECURE_SSL_HOST`"
msgstr ":setting:`SECURE_SSL_HOST`"

msgid ":setting:`SECURE_SSL_REDIRECT`"
msgstr ":setting:`SECURE_SSL_REDIRECT`"

msgid "HTTP Strict Transport Security"
msgstr ""

msgid ""
"For sites that should only be accessed over HTTPS, you can instruct modern "
"browsers to refuse to connect to your domain name via an insecure connection "
"(for a given period of time) by setting the `\"Strict-Transport-Security\" "
"header`_. This reduces your exposure to some SSL-stripping man-in-the-middle "
"(MITM) attacks."
msgstr ""

msgid ""
"``SecurityMiddleware`` will set this header for you on all HTTPS responses "
"if you set the :setting:`SECURE_HSTS_SECONDS` setting to a non-zero integer "
"value."
msgstr ""

msgid ""
"When enabling HSTS, it's a good idea to first use a small value for testing, "
"for example, :setting:`SECURE_HSTS_SECONDS = 3600<SECURE_HSTS_SECONDS>` for "
"one hour. Each time a Web browser sees the HSTS header from your site, it "
"will refuse to communicate non-securely (using HTTP) with your domain for "
"the given period of time. Once you confirm that all assets are served "
"securely on your site (i.e. HSTS didn't break anything), it's a good idea to "
"increase this value so that infrequent visitors will be protected (31536000 "
"seconds, i.e. 1 year, is common)."
msgstr ""

msgid ""
"Additionally, if you set the :setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS` "
"setting to ``True``, ``SecurityMiddleware`` will add the "
"``includeSubDomains`` directive to the ``Strict-Transport-Security`` header. "
"This is recommended (assuming all subdomains are served exclusively using "
"HTTPS), otherwise your site may still be vulnerable via an insecure "
"connection to a subdomain."
msgstr ""

msgid ""
"If you wish to submit your site to the `browser preload list`_, set the :"
"setting:`SECURE_HSTS_PRELOAD` setting to ``True``. That appends the "
"``preload`` directive to the ``Strict-Transport-Security`` header."
msgstr ""

msgid ""
"The HSTS policy applies to your entire domain, not just the URL of the "
"response that you set the header on. Therefore, you should only use it if "
"your entire domain is served via HTTPS only."
msgstr ""

msgid ""
"Browsers properly respecting the HSTS header will refuse to allow users to "
"bypass warnings and connect to a site with an expired, self-signed, or "
"otherwise invalid SSL certificate. If you use HSTS, make sure your "
"certificates are in good shape and stay that way!"
msgstr ""

msgid ""
"If you are deployed behind a load-balancer or reverse-proxy server, and the "
"``Strict-Transport-Security`` header is not being added to your responses, "
"it may be because Django doesn't realize that it's on a secure connection; "
"you may need to set the :setting:`SECURE_PROXY_SSL_HEADER` setting."
msgstr ""

msgid "``X-Content-Type-Options: nosniff``"
msgstr "``X-Content-Type-Options: nosniff``"

msgid ""
"Some browsers will try to guess the content types of the assets that they "
"fetch, overriding the ``Content-Type`` header. While this can help display "
"sites with improperly configured servers, it can also pose a security risk."
msgstr ""

msgid ""
"If your site serves user-uploaded files, a malicious user could upload a "
"specially-crafted file that would be interpreted as HTML or JavaScript by "
"the browser when you expected it to be something harmless."
msgstr ""

msgid ""
"To prevent the browser from guessing the content type and force it to always "
"use the type provided in the ``Content-Type`` header, you can pass the `X-"
"Content-Type-Options: nosniff`__ header.  ``SecurityMiddleware`` will do "
"this for all responses if the :setting:`SECURE_CONTENT_TYPE_NOSNIFF` setting "
"is ``True``."
msgstr ""

msgid ""
"Note that in most deployment situations where Django isn't involved in "
"serving user-uploaded files, this setting won't help you. For example, if "
"your :setting:`MEDIA_URL` is served directly by your front-end Web server "
"(nginx, Apache, etc.) then you'd want to set this header there. On the other "
"hand, if you are using Django to do something like require authorization in "
"order to download files and you cannot set the header using your Web server, "
"this setting will be useful."
msgstr ""

msgid "``X-XSS-Protection: 1; mode=block``"
msgstr "``X-XSS-Protection: 1; mode=block``"

msgid ""
"Some browsers have the ability to block content that appears to be an `XSS "
"attack`_. They work by looking for JavaScript content in the GET or POST "
"parameters of a page. If the JavaScript is replayed in the server's "
"response, the page is blocked from rendering and an error page is shown "
"instead."
msgstr ""

msgid ""
"The `X-XSS-Protection header`_ is used to control the operation of the XSS "
"filter."
msgstr ""

msgid ""
"To enable the XSS filter in the browser, and force it to always block "
"suspected XSS attacks, you can pass the ``X-XSS-Protection: 1; mode=block`` "
"header. ``SecurityMiddleware`` will do this for all responses if the :"
"setting:`SECURE_BROWSER_XSS_FILTER` setting is ``True``."
msgstr ""

msgid ""
"The browser XSS filter is a useful defense measure, but must not be relied "
"upon exclusively. It cannot detect all XSS attacks and not all browsers "
"support the header. Ensure you are still :ref:`validating and sanitizing "
"<cross-site-scripting>` all input to prevent XSS attacks."
msgstr ""

msgid "SSL Redirect"
msgstr "Pengalihan SSL"

msgid ""
"If your site offers both HTTP and HTTPS connections, most users will end up "
"with an unsecured connection by default. For best security, you should "
"redirect all HTTP connections to HTTPS."
msgstr ""

msgid ""
"If you set the :setting:`SECURE_SSL_REDIRECT` setting to True, "
"``SecurityMiddleware`` will permanently (HTTP 301) redirect all HTTP "
"connections to HTTPS."
msgstr ""

msgid ""
"For performance reasons, it's preferable to do these redirects outside of "
"Django, in a front-end load balancer or reverse-proxy server such as "
"`nginx`_. :setting:`SECURE_SSL_REDIRECT` is intended for the deployment "
"situations where this isn't an option."
msgstr ""

msgid ""
"If the :setting:`SECURE_SSL_HOST` setting has a value, all redirects will be "
"sent to that host instead of the originally-requested host."
msgstr ""

msgid ""
"If there are a few pages on your site that should be available over HTTP, "
"and not redirected to HTTPS, you can list regular expressions to match those "
"URLs in the :setting:`SECURE_REDIRECT_EXEMPT` setting."
msgstr ""

msgid ""
"If you are deployed behind a load-balancer or reverse-proxy server and "
"Django can't seem to tell when a request actually is already secure, you may "
"need to set the :setting:`SECURE_PROXY_SSL_HEADER` setting."
msgstr ""

msgid "Session middleware"
msgstr "Middleware sesi"

msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""
"Mengadakan dukungan sesi. Lihat :doc:`session documentation </topics/http/"
"sessions>`."

msgid ""
"Adds the ``site`` attribute representing the current site to every incoming "
"``HttpRequest`` object. See the :ref:`sites documentation <site-middleware>`."
msgstr ""

msgid "Authentication middleware"
msgstr "Middleware otentifikasi"

msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :ref:`Authentication in Web "
"requests <auth-web-requests>`."
msgstr ""

msgid ""
"Middleware for utilizing Web server provided authentication. See :doc:`/"
"howto/auth-remote-user` for usage details."
msgstr ""

msgid ""
"Middleware for utilizing Web server provided authentication when enabled "
"only on the login page. See :ref:`persistent-remote-user-middleware-howto` "
"for usage details."
msgstr ""

msgid "CSRF protection middleware"
msgstr "Middleware perlindungan CSRF"

msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/csrf>`."
msgstr ""

msgid "``X-Frame-Options`` middleware"
msgstr "Middleware ``X-Frame-Options``"

msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""
" :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>` sederhana."

msgid "Middleware ordering"
msgstr "Pengurutan middleware"

msgid ""
"Here are some hints about the ordering of various Django middleware classes:"
msgstr ""
"Disini adalah beberapa petunjuk tentang pengurutan beragam kelas-kelas "
"middleware Django:"

msgid ":class:`~django.middleware.security.SecurityMiddleware`"
msgstr ":class:`~django.middleware.security.SecurityMiddleware`"

msgid ""
"It should go near the top of the list if you're going to turn on the SSL "
"redirect as that avoids running through a bunch of other unnecessary "
"middleware."
msgstr ""

msgid ":class:`~django.middleware.cache.UpdateCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.UpdateCacheMiddleware`"

msgid ""
"Before those that modify the ``Vary`` header (``SessionMiddleware``, "
"``GZipMiddleware``, ``LocaleMiddleware``)."
msgstr ""

msgid ":class:`~django.middleware.gzip.GZipMiddleware`"
msgstr ":class:`~django.middleware.gzip.GZipMiddleware`"

msgid "Before any middleware that may change or use the response body."
msgstr ""

msgid "After ``UpdateCacheMiddleware``: Modifies ``Vary`` header."
msgstr "Setelah ``UpdateCacheMiddleware``: Rubah kepala ``Vary``."

msgid ":class:`~django.middleware.http.ConditionalGetMiddleware`"
msgstr ":class:`~django.middleware.http.ConditionalGetMiddleware`"

msgid ""
"Before ``CommonMiddleware``: uses its ``ETag`` header when :setting:"
"`USE_ETAGS` = ``True``."
msgstr ""

msgid ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"
msgstr ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"

msgid ":class:`~django.middleware.locale.LocaleMiddleware`"
msgstr ":class:`~django.middleware.locale.LocaleMiddleware`"

msgid ""
"One of the topmost, after ``SessionMiddleware`` (uses session data) and "
"``UpdateCacheMiddleware`` (modifies ``Vary`` header)."
msgstr ""

msgid ":class:`~django.middleware.common.CommonMiddleware`"
msgstr ":class:`~django.middleware.common.CommonMiddleware`"

msgid ""
"Before any middleware that may change the response (it calculates ``ETags``)."
msgstr ""

msgid ""
"After ``GZipMiddleware`` so it won't calculate an ``ETag`` header on gzipped "
"contents."
msgstr ""

msgid ""
"Close to the top: it redirects when :setting:`APPEND_SLASH` or :setting:"
"`PREPEND_WWW` are set to ``True``."
msgstr ""
"Tutup ke atas: Itu akan mengalihkan ketika :setting:`APPEND_SLASH` atau :"
"setting:`PREPEND_WWW` menjadi ``True``."

msgid ":class:`~django.middleware.csrf.CsrfViewMiddleware`"
msgstr ":class:`~django.middleware.csrf.CsrfViewMiddleware`"

msgid ""
"Before any view middleware that assumes that CSRF attacks have been dealt "
"with."
msgstr ""

msgid ""
"It must come after ``SessionMiddleware`` if you're using :setting:"
"`CSRF_USE_SESSIONS`."
msgstr ""

msgid ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"
msgstr ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"

msgid "After ``SessionMiddleware``: uses session storage."
msgstr "Setelah ``SessionMiddleware``: gunakan penyimpanan sesi."

msgid ":class:`~django.contrib.messages.middleware.MessageMiddleware`"
msgstr ":class:`~django.contrib.messages.middleware.MessageMiddleware`"

msgid "After ``SessionMiddleware``: can use session-based storage."
msgstr ""
"Setelah ``SessionMiddleware``: dapat menggunakan penyimpanan berdasar-sesi."

msgid ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"

msgid ""
"After any middleware that modifies the ``Vary`` header: that header is used "
"to pick a value for the cache hash-key."
msgstr ""

msgid ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"

msgid "Should be near the bottom as it's a last-resort type of middleware."
msgstr ""

msgid ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"

msgid "Migration Operations"
msgstr "Tindakan Perpindahan"

msgid ""
"Migration files are composed of one or more ``Operation``\\s, objects that "
"declaratively record what the migration should do to your database."
msgstr ""

msgid ""
"Django also uses these ``Operation`` objects to work out what your models "
"looked like historically, and to calculate what changes you've made to your "
"models since the last migration so it can automatically write your "
"migrations; that's why they're declarative, as it means Django can easily "
"load them all into memory and run through them without touching the database "
"to work out what your project should look like."
msgstr ""

msgid ""
"There are also more specialized ``Operation`` objects which are for things "
"like :ref:`data migrations <data-migrations>` and for advanced manual "
"database manipulation. You can also write your own ``Operation`` classes if "
"you want to encapsulate a custom change you commonly make."
msgstr ""

msgid ""
"If you need an empty migration file to write your own ``Operation`` objects "
"into, just use ``python manage.py makemigrations --empty yourappname``, but "
"be aware that manually adding schema-altering operations can confuse the "
"migration autodetector and make resulting runs of :djadmin:`makemigrations` "
"output incorrect code."
msgstr ""

msgid ""
"All of the core Django operations are available from the ``django.db."
"migrations.operations`` module."
msgstr ""
"Semua pekerjaan inti Django tersedia dari modul ``django.db.migrations."
"operations``."

msgid ""
"For introductory material, see the :doc:`migrations topic guide </topics/"
"migrations>`."
msgstr ""
"Untuk bahan perkenalan, lihat :doc:`migrations topic guide </topics/"
"migrations>`."

msgid "Schema Operations"
msgstr "Skema Pekerjaan"

msgid "``CreateModel``"
msgstr "``CreateModel``"

msgid ""
"Creates a new model in the project history and a corresponding table in the "
"database to match it."
msgstr ""

msgid ""
"``name`` is the model name, as would be written in the ``models.py`` file."
msgstr ""

msgid ""
"``fields`` is a list of 2-tuples of ``(field_name, field_instance)``. The "
"field instance should be an unbound field (so just ``models."
"CharField(...)``, rather than a field taken from another model)."
msgstr ""

msgid ""
"``options`` is an optional dictionary of values from the model's ``Meta`` "
"class."
msgstr ""

msgid ""
"``bases`` is an optional list of other classes to have this model inherit "
"from; it can contain both class objects as well as strings in the format ``"
"\"appname.ModelName\"`` if you want to depend on another model (so you "
"inherit from the historical version). If it's not supplied, it defaults to "
"just inheriting from the standard ``models.Model``."
msgstr ""

msgid ""
"``managers`` takes a list of 2-tuples of ``(manager_name, "
"manager_instance)``. The first manager in the list will be the default "
"manager for this model during migrations."
msgstr ""

msgid "``DeleteModel``"
msgstr "``DeleteModel``"

msgid ""
"Deletes the model from the project history and its table from the database."
msgstr ""

msgid "``RenameModel``"
msgstr "``RenameModel``"

msgid "Renames the model from an old name to a new one."
msgstr ""

msgid ""
"You may have to manually add this if you change the model's name and quite a "
"few of its fields at once; to the autodetector, this will look like you "
"deleted a model with the old name and added a new one with a different name, "
"and the migration it creates will lose any data in the old table."
msgstr ""

msgid "``AlterModelTable``"
msgstr "``AlterModelTable``"

msgid ""
"Changes the model's table name (the :attr:`~django.db.models.Options."
"db_table` option on the ``Meta`` subclass)."
msgstr ""

msgid "``AlterUniqueTogether``"
msgstr "``AlterUniqueTogether``"

msgid ""
"Changes the model's set of unique constraints (the :attr:`~django.db.models."
"Options.unique_together` option on the ``Meta`` subclass)."
msgstr ""

msgid "``AlterIndexTogether``"
msgstr "``AlterIndexTogether``"

msgid ""
"Changes the model's set of custom indexes (the :attr:`~django.db.models."
"Options.index_together` option on the ``Meta`` subclass)."
msgstr ""

msgid "``AlterOrderWithRespectTo``"
msgstr "``AlterOrderWithRespectTo``"

msgid ""
"Makes or deletes the ``_order`` column needed for the :attr:`~django.db."
"models.Options.order_with_respect_to` option on the ``Meta`` subclass."
msgstr ""

msgid "``AlterModelOptions``"
msgstr "``AlterModelOptions``"

msgid ""
"Stores changes to miscellaneous model options (settings on a model's "
"``Meta``) like ``permissions`` and ``verbose_name``. Does not affect the "
"database, but persists these changes for :class:`RunPython` instances to "
"use. ``options`` should be a dictionary mapping option names to values."
msgstr ""

msgid "``AlterModelManagers``"
msgstr "``AlterModelManagers``"

msgid "Alters the managers that are available during migrations."
msgstr ""

msgid "``AddField``"
msgstr "``AddField``"

msgid ""
"Adds a field to a model. ``model_name`` is the model's name, ``name`` is the "
"field's name, and ``field`` is an unbound Field instance (the thing you "
"would put in the field declaration in ``models.py`` - for example, ``models."
"IntegerField(null=True)``."
msgstr ""

msgid ""
"The ``preserve_default`` argument indicates whether the field's default "
"value is permanent and should be baked into the project state (``True``), or "
"if it is temporary and just for this migration (``False``) - usually because "
"the migration is adding a non-nullable field to a table and needs a default "
"value to put into existing rows. It does not affect the behavior of setting "
"defaults in the database directly - Django never sets database defaults and "
"always applies them in the Django ORM code."
msgstr ""

msgid "``RemoveField``"
msgstr "``RemoveField``"

msgid "Removes a field from a model."
msgstr "Memindahkan sebuah bidang dari sebuah model."

msgid ""
"Bear in mind that when reversed, this is actually adding a field to a model. "
"The operation is reversible (apart from any data loss, which of course is "
"irreversible) if the field is nullable or if it has a default value that can "
"be used to populate the recreated column. If the field is not nullable and "
"does not have a default value, the operation is irreversible."
msgstr ""

msgid "``AlterField``"
msgstr "``AlterField``"

msgid ""
"Alters a field's definition, including changes to its type, :attr:`~django."
"db.models.Field.null`, :attr:`~django.db.models.Field.unique`, :attr:"
"`~django.db.models.Field.db_column` and other field attributes."
msgstr ""

msgid ""
"The ``preserve_default`` argument indicates whether the field's default "
"value is permanent and should be baked into the project state (``True``), or "
"if it is temporary and just for this migration (``False``) - usually because "
"the migration is altering a nullable field to a non-nullable one and needs a "
"default value to put into existing rows. It does not affect the behavior of "
"setting defaults in the database directly - Django never sets database "
"defaults and always applies them in the Django ORM code."
msgstr ""

msgid ""
"Note that not all changes are possible on all databases - for example, you "
"cannot change a text-type field like ``models.TextField()`` into a number-"
"type field like ``models.IntegerField()`` on most databases."
msgstr ""

msgid "``RenameField``"
msgstr "``RenameField``"

msgid ""
"Changes a field's name (and, unless :attr:`~django.db.models.Field."
"db_column` is set, its column name)."
msgstr ""

msgid "``AddIndex``"
msgstr "``AddIndex``"

msgid ""
"Creates an index in the database table for the model with ``model_name``. "
"``index`` is an instance of the :class:`~django.db.models.Index` class."
msgstr ""

msgid "``RemoveIndex``"
msgstr "``RemoveIndex``"

msgid "Removes the index named ``name`` from the model with ``model_name``."
msgstr "Memindahkan indeks bernama ``name`` dari model dengan ``model_name``."

msgid "Special Operations"
msgstr "Pekerjaan Khusus"

msgid "``RunSQL``"
msgstr "``RunSQL``"

msgid ""
"Allows running of arbitrary SQL on the database - useful for more advanced "
"features of database backends that Django doesn't support directly, like "
"partial indexes."
msgstr ""

msgid ""
"``sql``, and ``reverse_sql`` if provided, should be strings of SQL to run on "
"the database. On most database backends (all but PostgreSQL), Django will "
"split the SQL into individual statements prior to executing them. This "
"requires installing the sqlparse_ Python library."
msgstr ""

msgid ""
"You can also pass a list of strings or 2-tuples. The latter is used for "
"passing queries and parameters in the same way as :ref:`cursor.execute() "
"<executing-custom-sql>`. These three operations are equivalent::"
msgstr ""

msgid ""
"If you want to include literal percent signs in the query, you have to "
"double them if you are passing parameters."
msgstr ""

msgid ""
"The ``reverse_sql`` queries are executed when the migration is unapplied, so "
"you can reverse the changes done in the forwards queries::"
msgstr ""

msgid ""
"The ``state_operations`` argument is so you can supply operations that are "
"equivalent to the SQL in terms of project state; for example, if you are "
"manually creating a column, you should pass in a list containing an "
"``AddField`` operation here so that the autodetector still has an up-to-date "
"state of the model (otherwise, when you next run ``makemigrations``, it "
"won't see any operation that adds that field and so will try to run it "
"again). For example::"
msgstr ""

msgid ""
"The optional ``hints`` argument will be passed as ``**hints`` to the :meth:"
"`allow_migrate` method of database routers to assist them in making routing "
"decisions. See :ref:`topics-db-multi-db-hints` for more details on database "
"hints."
msgstr ""

msgid ""
"The optional ``elidable`` argument determines whether or not the operation "
"will be removed (elided) when :ref:`squashing migrations <migration-"
"squashing>`."
msgstr ""

msgid ""
"Pass the ``RunSQL.noop`` attribute to ``sql`` or ``reverse_sql`` when you "
"want the operation not to do anything in the given direction. This is "
"especially useful in making the operation reversible."
msgstr ""

msgid "The ``elidable`` argument was added."
msgstr ""

msgid "``RunPython``"
msgstr "``RunPython``"

msgid ""
"Runs custom Python code in a historical context. ``code`` (and "
"``reverse_code`` if supplied) should be callable objects that accept two "
"arguments; the first is an instance of ``django.apps.registry.Apps`` "
"containing historical models that match the operation's place in the project "
"history, and the second is an instance of :class:`SchemaEditor <django.db."
"backends.base.schema.BaseDatabaseSchemaEditor>`."
msgstr ""
"Jalankan penyesuaian kode Python dalam konteks riwayat. ``code`` (dan "
"``reverse_code`` jika diberikan) harus berupa obyek callable yang menerima "
"dua argumen; pertama adalah sebuah instance dari ``django.apps.registry."
"Apps`` mengandung model riwayat yang cocok tempat tindakan di riwayat "
"proyek, dan kedua adalah sebuah instance dari :class:`SchemaEditor <django."
"db.backends.base.schema.BaseDatabaseSchemaEditor>`."

msgid ""
"The ``reverse_code`` argument is called when unapplying migrations. This "
"callable should undo what is done in the ``code`` callable so that the "
"migration is reversible."
msgstr ""

msgid ""
"The optional ``hints`` argument will be passed as ``**hints`` to the :meth:"
"`allow_migrate` method of database routers to assist them in making a "
"routing decision. See :ref:`topics-db-multi-db-hints` for more details on "
"database hints."
msgstr ""

msgid ""
"You are advised to write the code as a separate function above the "
"``Migration`` class in the migration file, and just pass it to "
"``RunPython``. Here's an example of using ``RunPython`` to create some "
"initial objects on a ``Country`` model::"
msgstr ""

msgid ""
"This is generally the operation you would use to create :ref:`data "
"migrations <data-migrations>`, run custom data updates and alterations, and "
"anything else you need access to an ORM and/or Python code for."
msgstr ""

msgid ""
"If you're upgrading from South, this is basically the South pattern as an "
"operation - one or two methods for forwards and backwards, with an ORM and "
"schema operations available. Most of the time, you should be able to "
"translate the ``orm.Model`` or ``orm[\"appname\", \"Model\"]`` references "
"from South directly into ``apps.get_model(\"appname\", \"Model\")`` "
"references here and leave most of the rest of the code unchanged for data "
"migrations. However, ``apps`` will only have references to models in the "
"current app unless migrations in other apps are added to the migration's "
"dependencies."
msgstr ""

msgid ""
"Much like :class:`RunSQL`, ensure that if you change schema inside here "
"you're either doing it outside the scope of the Django model system (e.g. "
"triggers) or that you use :class:`SeparateDatabaseAndState` to add in "
"operations that will reflect your changes to the model state - otherwise, "
"the versioned ORM and the autodetector will stop working correctly."
msgstr ""

msgid ""
"By default, ``RunPython`` will run its contents inside a transaction on "
"databases that do not support DDL transactions (for example, MySQL and "
"Oracle). This should be safe, but may cause a crash if you attempt to use "
"the ``schema_editor`` provided on these backends; in this case, pass "
"``atomic=False`` to the ``RunPython`` operation."
msgstr ""

msgid ""
"On databases that do support DDL transactions (SQLite and PostgreSQL), "
"``RunPython`` operations do not have any transactions automatically added "
"besides the transactions created for each migration. Thus, on PostgreSQL, "
"for example, you should avoid combining schema changes and ``RunPython`` "
"operations in the same migration or you may hit errors like "
"``OperationalError: cannot ALTER TABLE \"mytable\" because it has pending "
"trigger events``."
msgstr ""

msgid ""
"If you have a different database and aren't sure if it supports DDL "
"transactions, check the ``django.db.connection.features.can_rollback_ddl`` "
"attribute."
msgstr ""

msgid ""
"If the ``RunPython`` operation is part of a :ref:`non-atomic migration <non-"
"atomic-migrations>`, the operation will only be executed in a transaction if "
"``atomic=True`` is passed to the ``RunPython`` operation."
msgstr ""

msgid ""
"``RunPython`` does not magically alter the connection of the models for you; "
"any model methods you call will go to the default database unless you give "
"them the current database alias (available from ``schema_editor.connection."
"alias``, where ``schema_editor`` is the second argument to your function)."
msgstr ""

msgid ""
"Pass the ``RunPython.noop`` method to ``code`` or ``reverse_code`` when you "
"want the operation not to do anything in the given direction. This is "
"especially useful in making the operation reversible."
msgstr ""

msgid ""
"The ``atomic`` argument default was changed to ``None``, indicating that the "
"atomicity is controlled by the ``atomic`` attribute of the migration."
msgstr ""

msgid "``SeparateDatabaseAndState``"
msgstr "``SeparateDatabaseAndState``"

msgid ""
"A highly specialized operation that let you mix and match the database "
"(schema-changing) and state (autodetector-powering) aspects of operations."
msgstr ""

msgid ""
"It accepts two list of operations, and when asked to apply state will use "
"the state list, and when asked to apply changes to the database will use the "
"database list. Do not use this operation unless you're very sure you know "
"what you're doing."
msgstr ""

msgid "Writing your own"
msgstr "Menulis punya anda sendiri"

msgid ""
"Operations have a relatively simple API, and they're designed so that you "
"can easily write your own to supplement the built-in Django ones. The basic "
"structure of an ``Operation`` looks like this::"
msgstr ""

msgid ""
"You can take this template and work from it, though we suggest looking at "
"the built-in Django operations in ``django.db.migrations.operations`` - "
"they're easy to read and cover a lot of the example usage of semi-internal "
"aspects of the migration framework like ``ProjectState`` and the patterns "
"used to get historical models, as well as ``ModelState`` and the patterns "
"used to mutate historical models in ``state_forwards()``."
msgstr ""

msgid "Some things to note:"
msgstr "Beberapa hal untuk dicatat:"

msgid ""
"You don't need to learn too much about ``ProjectState`` to just write simple "
"migrations; just know that it has an ``apps`` property that gives access to "
"an app registry (which you can then call ``get_model`` on)."
msgstr ""
"Anda tidak butuh mempelajari terlalu banyak mengenai ``ProjectState`` "
"untukcukup menulis perpindahan sederhana; cukup diketahui bahwa itu "
"mempunyai sebuah sifat ``apps`` yang memberikan akses ke sebuah registrar "
"aplikasi (yang anda dapat kemudian memanggil ``get_model``). "

msgid ""
"``database_forwards`` and ``database_backwards`` both get two states passed "
"to them; these just represent the difference the ``state_forwards`` method "
"would have applied, but are given to you for convenience and speed reasons."
msgstr ""

msgid ""
"If you want to work with model classes or model instances from the "
"``from_state`` argument in ``database_forwards()`` or "
"``database_backwards()``, you must render model states using the "
"``clear_delayed_apps_cache()`` method to make related models available::"
msgstr ""

msgid "This requirement and the ``clear_delayed_apps_cache()`` method is new."
msgstr "Persyaratan ini dan metode ``clear_delayed_apps_cache()`` adalah baru."

msgid ""
"``to_state`` in the database_backwards method is the *older* state; that is, "
"the one that will be the current state once the migration has finished "
"reversing."
msgstr ""

msgid ""
"You might see implementations of ``references_model`` on the built-in "
"operations; this is part of the autodetection code and does not matter for "
"custom operations."
msgstr ""

msgid ""
"For performance reasons, the :class:`~django.db.models.Field` instances in "
"``ModelState.fields`` are reused across migrations. You must never change "
"the attributes on these instances. If you need to mutate a field in "
"``state_forwards()``, you must remove the old instance from ``ModelState."
"fields`` and add a new instance in its place. The same is true for the :"
"class:`~django.db.models.Manager` instances in ``ModelState.managers``."
msgstr ""

msgid ""
"As a simple example, let's make an operation that loads PostgreSQL "
"extensions (which contain some of PostgreSQL's more exciting features). It's "
"simple enough; there's no model state changes, and all it does is run one "
"command::"
msgstr ""

msgid "Model class reference"
msgstr ""

msgid ""
"This document covers features of the :class:`~django.db.models.Model` class. "
"For more information about models, see :doc:`the complete list of Model "
"reference guides </ref/models/index>`."
msgstr ""

msgid "``objects``"
msgstr "``objects``"

msgid ""
"Each non-abstract :class:`~django.db.models.Model` class must have a :class:"
"`~django.db.models.Manager` instance added to it. Django ensures that in "
"your model class you have  at least a default ``Manager`` specified. If you "
"don't add your own ``Manager``, Django will add an attribute ``objects`` "
"containing default :class:`~django.db.models.Manager` instance. If you add "
"your own :class:`~django.db.models.Manager` instance attribute, the default "
"one does not appear. Consider the following example::"
msgstr ""

msgid ""
"For more details on model managers see :doc:`Managers </topics/db/managers>` "
"and :ref:`Retrieving objects <retrieving-objects>`."
msgstr ""

msgid "Conditional Expressions"
msgstr "Pernyataan Bersyarat"

msgid ""
"Conditional expressions let you use :keyword:`if` ... :keyword:`elif` ... :"
"keyword:`else` logic within filters, annotations, aggregations, and updates. "
"A conditional expression evaluates a series of conditions for each row of a "
"table and returns the matching result expression. Conditional expressions "
"can also be combined and nested like other :doc:`expressions <expressions>`."
msgstr ""

msgid "The conditional expression classes"
msgstr "Kelas-kelas pernyataan bersyarat"

msgid "We'll be using the following model in the subsequent examples::"
msgstr ""

msgid "``When``"
msgstr "``When``"

msgid ""
"A ``When()`` object is used to encapsulate a condition and its result for "
"use in the conditional expression. Using a ``When()`` object is similar to "
"using the :meth:`~django.db.models.query.QuerySet.filter` method. The "
"condition can be specified using :ref:`field lookups <field-lookups>` or :"
"class:`~django.db.models.Q` objects. The result is provided using the "
"``then`` keyword."
msgstr ""

msgid "Keep in mind that each of these values can be an expression."
msgstr "Mengingat bahwa setiap nilai-nilai ini dapat berupa sebuah pernyataan."

msgid ""
"Since the ``then`` keyword argument is reserved for the result of the "
"``When()``, there is a potential conflict if a :class:`~django.db.models."
"Model` has a field named ``then``. This can be resolved in two ways::"
msgstr ""

msgid "``Case``"
msgstr "``Case``"

msgid ""
"A ``Case()`` expression is like the :keyword:`if` ... :keyword:`elif` ... :"
"keyword:`else` statement in ``Python``. Each ``condition`` in the provided "
"``When()`` objects is evaluated in order, until one evaluates to a truthful "
"value. The ``result`` expression from the matching ``When()`` object is "
"returned."
msgstr ""

msgid "A simple example::"
msgstr "Sebuah contoh sederhana::"

msgid ""
"``Case()`` accepts any number of ``When()`` objects as individual arguments. "
"Other options are provided using keyword arguments. If none of the "
"conditions evaluate to ``TRUE``, then the expression given with the "
"``default`` keyword argument is returned. If a ``default`` argument isn't "
"provided, ``None`` is used."
msgstr ""

msgid ""
"If we wanted to change our previous query to get the discount based on how "
"long the ``Client`` has been with us, we could do so using lookups::"
msgstr ""

msgid ""
"Remember that the conditions are evaluated in order, so in the above example "
"we get the correct result even though the second condition matches both Jane "
"Doe and Jack Black. This works just like an :keyword:`if` ... :keyword:"
"`elif` ... :keyword:`else` statement in ``Python``."
msgstr ""

msgid ""
"``Case()`` also works in a ``filter()`` clause. For example, to find gold "
"clients that registered more than a month ago and platinum clients that "
"registered more than a year ago::"
msgstr ""

msgid "Advanced queries"
msgstr "Permintaan lanjutan"

msgid ""
"Conditional expressions can be used in annotations, aggregations, lookups, "
"and updates. They can also be combined and nested with other expressions. "
"This allows you to make powerful conditional queries."
msgstr ""

msgid "Conditional update"
msgstr "Pembaharuan bersyarat"

msgid ""
"Let's say we want to change the ``account_type`` for our clients to match "
"their registration dates. We can do this using a conditional expression and "
"the :meth:`~django.db.models.query.QuerySet.update` method::"
msgstr ""

msgid "Conditional aggregation"
msgstr "Pengumpulan bersyarat"

msgid ""
"What if we want to find out how many clients there are for each "
"``account_type``? We can nest conditional expression within :ref:`aggregate "
"functions <aggregation-functions>` to achieve this::"
msgstr ""

msgid "Database Functions"
msgstr "Fungsi Basisdata"

msgid ""
"The classes documented below provide a way for users to use functions "
"provided by the underlying database as annotations, aggregations, or filters "
"in Django. Functions are also :doc:`expressions <expressions>`, so they can "
"be used and combined with other expressions like :ref:`aggregate functions "
"<aggregation-functions>`."
msgstr ""

msgid "We'll be using the following model in examples of each function::"
msgstr ""

msgid ""
"We don't usually recommend allowing ``null=True`` for ``CharField`` since "
"this allows the field to have two \"empty values\", but it's important for "
"the ``Coalesce`` example below."
msgstr ""

msgid "``Cast``"
msgstr "``Cast``"

msgid ""
"Forces the result type of ``expression`` to be the one from ``output_field``."
msgstr ""

msgid "``Coalesce``"
msgstr "``Coalesce``"

msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"first non-null value (note that an empty string is not considered a null "
"value). Each argument must be of a similar type, so mixing text and numbers "
"will result in a database error."
msgstr ""

msgid "Usage examples::"
msgstr "Contoh penggunaan::"

msgid ""
"A Python value passed to ``Coalesce`` on MySQL may be converted to an "
"incorrect type unless explicitly cast to the correct database type:"
msgstr ""

msgid "``Concat``"
msgstr "``Concat``"

msgid ""
"Accepts a list of at least two text fields or expressions and returns the "
"concatenated text. Each argument must be of a text or char type. If you want "
"to concatenate a ``TextField()`` with a ``CharField()``, then be sure to "
"tell Django that the ``output_field`` should be a ``TextField()``. This is "
"also required when concatenating a ``Value`` as in the example below."
msgstr ""

msgid ""
"This function will never have a null result. On backends where a null "
"argument results in the entire expression being null, Django will ensure "
"that each null part is converted to an empty string first."
msgstr ""

msgid "``Greatest``"
msgstr "``Greatest``"

msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"greatest value. Each argument must be of a similar type, so mixing text and "
"numbers will result in a database error."
msgstr ""

msgid ""
"``annotated_comment.last_updated`` will be the most recent of ``blog."
"modified`` and ``comment.modified``."
msgstr ""
"``annotated_comment.last_updated`` akan menjadi paling baru dari ``blog."
"modified`` dan ``comment.modified``."

msgid ""
"The behavior of ``Greatest`` when one or more expression may be ``null`` "
"varies between databases:"
msgstr ""

msgid ""
"PostgreSQL: ``Greatest`` will return the largest non-null expression, or "
"``null`` if all expressions are ``null``."
msgstr ""

msgid ""
"SQLite, Oracle, and MySQL: If any expression is ``null``, ``Greatest`` will "
"return ``null``."
msgstr ""

msgid ""
"The PostgreSQL behavior can be emulated using ``Coalesce`` if you know a "
"sensible minimum value to provide as a default."
msgstr ""

msgid "``Least``"
msgstr "``Least``"

msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"least value. Each argument must be of a similar type, so mixing text and "
"numbers will result in a database error."
msgstr ""

msgid ""
"The behavior of ``Least`` when one or more expression may be ``null`` varies "
"between databases:"
msgstr ""

msgid ""
"PostgreSQL: ``Least`` will return the smallest non-null expression, or "
"``null`` if all expressions are ``null``."
msgstr ""

msgid ""
"SQLite, Oracle, and MySQL: If any expression is ``null``, ``Least`` will "
"return ``null``."
msgstr ""

msgid ""
"The PostgreSQL behavior can be emulated using ``Coalesce`` if you know a "
"sensible maximum value to provide as a default."
msgstr ""

msgid ""
"Accepts a single text field or expression and returns the number of "
"characters the value has. If the expression is null, then the length will "
"also be null."
msgstr ""

msgid "It can also be registered as a transform. For example::"
msgstr ""

msgid "``Lower``"
msgstr "``Lower``"

msgid ""
"Accepts a single text field or expression and returns the lowercase "
"representation."
msgstr ""

msgid ""
"It can also be registered as a transform as described in :class:`Length`."
msgstr ""

msgid "``Now``"
msgstr "``Now``"

msgid ""
"Returns the database server's current date and time when the query is "
"executed, typically using the SQL ``CURRENT_TIMESTAMP``."
msgstr ""

msgid "PostgreSQL considerations"
msgstr "Pertimbangan PostgreSQL"

msgid ""
"On PostgreSQL, the SQL ``CURRENT_TIMESTAMP`` returns the time that the "
"current transaction started. Therefore for cross-database compatibility, "
"``Now()`` uses ``STATEMENT_TIMESTAMP`` instead. If you need the transaction "
"timestamp, use :class:`django.contrib.postgres.functions.TransactionNow`."
msgstr ""

msgid "``Substr``"
msgstr "``Substr``"

msgid ""
"Returns a substring of length ``length`` from the field or expression "
"starting at position ``pos``. The position is 1-indexed, so the position "
"must be greater than 0. If ``length`` is ``None``, then the rest of the "
"string will be returned."
msgstr ""

msgid "``Upper``"
msgstr "``Upper``"

msgid ""
"Accepts a single text field or expression and returns the uppercase "
"representation."
msgstr ""

msgid "Date Functions"
msgstr "Fungsi-fungsi Tanggal"

msgid "``Extract``"
msgstr "``Extract``"

msgid "Extracts a component of a date as a number."
msgstr ""

msgid ""
"Takes an ``expression`` representing a ``DateField`` or ``DateTimeField`` "
"and a ``lookup_name``, and returns the part of the date referenced by "
"``lookup_name`` as an ``IntegerField``. Django usually uses the databases' "
"extract function, so you may use any ``lookup_name`` that your database "
"supports. A ``tzinfo`` subclass, usually provided by ``pytz``, can be passed "
"to extract a value in a specific timezone."
msgstr ""

msgid ""
"Given the datetime ``2015-06-15 23:30:01.000321+00:00``, the built-in "
"``lookup_name``\\s return:"
msgstr ""

msgid "\"year\": 2015"
msgstr "\"year\": 2015"

msgid "\"month\": 6"
msgstr "\"month\": 6"

msgid "\"day\": 15"
msgstr "\"day\": 15"

msgid "\"week\": 25"
msgstr "\"week\": 25"

msgid "\"week_day\": 2"
msgstr ""

msgid "\"hour\": 23"
msgstr "\"hour\": 23"

msgid "\"minute\": 30"
msgstr "\"minute\": 30"

msgid "\"second\": 1"
msgstr "\"second\": 1"

msgid ""
"If a different timezone like ``Australia/Melbourne`` is active in Django, "
"then the datetime is converted to the timezone before the value is "
"extracted. The timezone offset for Melbourne in the example date above is "
"+10:00. The values returned when this timezone is active will be the same as "
"above except for:"
msgstr ""

msgid "\"day\": 16"
msgstr "\"day\": 16"

msgid "\"week_day\": 3"
msgstr "\"week_day\": 3"

msgid "\"hour\": 9"
msgstr ""

msgid "``week_day`` values"
msgstr "Nilai-nilai ``week_day``"

msgid ""
"The ``week_day`` ``lookup_type`` is calculated differently from most "
"databases and from Python's standard functions. This function will return "
"``1`` for Sunday, ``2`` for Monday, through ``7`` for Saturday."
msgstr ""

msgid "The equivalent calculation in Python is::"
msgstr ""

msgid "``week`` values"
msgstr "Nilai-nilai ``week``"

msgid ""
"The ``week`` ``lookup_type`` is calculated based on `ISO-8601 <https://en."
"wikipedia.org/wiki/ISO-8601>`_, i.e., a week starts on a Monday. The first "
"week is the one with the majority of the days, i.e., a week that starts on "
"or before Thursday. The value returned is in the range 1 to 52 or 53."
msgstr ""

msgid ""
"Each ``lookup_name`` above has a corresponding ``Extract`` subclass (listed "
"below) that should typically be used instead of the more verbose equivalent, "
"e.g. use ``ExtractYear(...)`` rather than ``Extract(..., "
"lookup_name='year')``."
msgstr ""

msgid "``DateField`` extracts"
msgstr "Kutipan ``DateField``"

msgid ""
"These are logically equivalent to ``Extract('date_field', lookup_name)``. "
"Each class is also a ``Transform`` registered on ``DateField`` and "
"``DateTimeField`` as ``__(lookup_name)``, e.g. ``__year``."
msgstr ""

msgid ""
"Since ``DateField``\\s don't have a time component, only ``Extract`` "
"subclasses that deal with date-parts can be used with ``DateField``::"
msgstr ""

msgid "``DateTimeField`` extracts"
msgstr "Kutipan ``DateTimeField``"

msgid ""
"In addition to the following, all extracts for ``DateField`` listed above "
"may also be used on ``DateTimeField``\\s ."
msgstr ""

msgid ""
"These are logically equivalent to ``Extract('datetime_field', "
"lookup_name)``. Each class is also a ``Transform`` registered on "
"``DateTimeField`` as ``__(lookup_name)``, e.g. ``__minute``."
msgstr ""

msgid "``DateTimeField`` examples::"
msgstr "Contoh-contoh ``DateTimeField``::"

msgid ""
"When :setting:`USE_TZ` is ``True`` then datetimes are stored in the database "
"in UTC. If a different timezone is active in Django, the datetime is "
"converted to that timezone before the value is extracted. The example below "
"converts to the Melbourne timezone (UTC +10:00), which changes the day, "
"weekday, and hour values that are returned::"
msgstr ""

msgid ""
"Explicitly passing the timezone to the ``Extract`` function behaves in the "
"same way, and takes priority over an active timezone::"
msgstr ""

msgid "``Trunc``"
msgstr "``Trunc``"

msgid "Truncates a date up to a significant component."
msgstr ""

msgid ""
"When you only care if something happened in a particular year, hour, or day, "
"but not the exact second, then ``Trunc`` (and its subclasses) can be useful "
"to filter or aggregate your data. For example, you can use ``Trunc`` to "
"calculate the number of sales per day."
msgstr ""

msgid ""
"``Trunc`` takes a single ``expression``, representing a ``DateField``, "
"``TimeField``, or ``DateTimeField``, a ``kind`` representing a date or time "
"part, and an ``output_field`` that's either ``DateTimeField()``, "
"``TimeField()``, or ``DateField()``. It returns a datetime, date, or time "
"depending on ``output_field``, with fields up to ``kind`` set to their "
"minimum value. If ``output_field`` is omitted, it will default to the "
"``output_field`` of ``expression``. A ``tzinfo`` subclass, usually provided "
"by ``pytz``, can be passed to truncate a value in a specific timezone."
msgstr ""

msgid ""
"Given the datetime ``2015-06-15 14:30:50.000321+00:00``, the built-in "
"``kind``\\s return:"
msgstr ""

msgid "\"year\": 2015-01-01 00:00:00+00:00"
msgstr "\"year\": 2015-01-01 00:00:00+00:00"

msgid "\"month\": 2015-06-01 00:00:00+00:00"
msgstr "\"month\": 2015-06-01 00:00:00+00:00"

msgid "\"day\": 2015-06-15 00:00:00+00:00"
msgstr "\"day\": 2015-06-15 00:00:00+00:00"

msgid "\"hour\": 2015-06-15 14:00:00+00:00"
msgstr ""

msgid "\"minute\": 2015-06-15 14:30:00+00:00"
msgstr "\"minute\": 2015-06-15 14:30:00+00:00"

msgid "\"second\": 2015-06-15 14:30:50+00:00"
msgstr ""

msgid ""
"If a different timezone like ``Australia/Melbourne`` is active in Django, "
"then the datetime is converted to the new timezone before the value is "
"truncated. The timezone offset for Melbourne in the example date above is "
"+10:00. The values returned when this timezone is active will be:"
msgstr ""

msgid "\"year\": 2015-01-01 00:00:00+11:00"
msgstr "\"year\": 2015-01-01 00:00:00+11:00"

msgid "\"month\": 2015-06-01 00:00:00+10:00"
msgstr "\"month\": 2015-06-01 00:00:00+10:00"

msgid "\"day\": 2015-06-16 00:00:00+10:00"
msgstr "\"day\": 2015-06-16 00:00:00+10:00"

msgid "\"hour\": 2015-06-16 00:00:00+10:00"
msgstr "\"hour\": 2015-06-16 00:00:00+10:00"

msgid "\"minute\": 2015-06-16 00:30:00+10:00"
msgstr "\"minute\": 2015-06-16 00:30:00+10:00"

msgid "\"second\": 2015-06-16 00:30:50+10:00"
msgstr ""

msgid ""
"The year has an offset of +11:00 because the result transitioned into "
"daylight saving time."
msgstr ""

msgid ""
"Each ``kind`` above has a corresponding ``Trunc`` subclass (listed below) "
"that should typically be used instead of the more verbose equivalent, e.g. "
"use ``TruncYear(...)`` rather than ``Trunc(..., kind='year')``."
msgstr ""

msgid ""
"The subclasses are all defined as transforms, but they aren't registered "
"with any fields, because the obvious lookup names are already reserved by "
"the ``Extract`` subclasses."
msgstr ""

msgid "``DateField`` truncation"
msgstr "Pemotongan ``DateField``"

msgid ""
"These are logically equivalent to ``Trunc('date_field', kind)``. They "
"truncate all parts of the date up to ``kind`` which allows grouping or "
"filtering dates with less precision. ``expression`` can have an "
"``output_field`` of either ``DateField`` or ``DateTimeField``."
msgstr ""

msgid ""
"Since ``DateField``\\s don't have a time component, only ``Trunc`` "
"subclasses that deal with date-parts can be used with ``DateField``::"
msgstr ""

msgid "``TimeField`` truncation"
msgstr "Pemotongan ``TimeField``"

msgid ""
"These are logically equivalent to ``Trunc('time_field', kind)``. They "
"truncate all parts of the time up to ``kind`` which allows grouping or "
"filtering times with less precision. ``expression`` can have an "
"``output_field`` of either ``TimeField`` or ``DateTimeField``."
msgstr ""

msgid ""
"Since ``TimeField``\\s don't have a date component, only ``Trunc`` "
"subclasses that deal with time-parts can be used with ``TimeField``::"
msgstr ""

msgid "``DateTimeField`` truncation"
msgstr "Pemotongan ``DateTimeField``"

msgid ""
"``TruncDate`` casts ``expression`` to a date rather than using the built-in "
"SQL truncate function. It's also registered as a transform on  "
"``DateTimeField`` as ``__date``."
msgstr ""

msgid ""
"``TruncTime`` casts ``expression`` to a time rather than using the built-in "
"SQL truncate function. It's also registered as a transform on "
"``DateTimeField`` as ``__time``."
msgstr ""

msgid ""
"These are logically equivalent to ``Trunc('datetime_field', kind)``. They "
"truncate all parts of the date up to ``kind`` and allow grouping or "
"filtering datetimes with less precision. ``expression`` must have an "
"``output_field`` of ``DateTimeField``."
msgstr ""

msgid "Query Expressions"
msgstr "Pernyataan Permintaan"

msgid ""
"Query expressions describe a value or a computation that can be used as part "
"of an update, create, filter, order by, annotation, or aggregate. There are "
"a number of built-in expressions (documented below) that can be used to help "
"you write queries. Expressions can be combined, or in some cases nested, to "
"form more complex computations."
msgstr ""

msgid "Supported arithmetic"
msgstr ""

msgid ""
"Django supports addition, subtraction, multiplication, division, modulo "
"arithmetic, and the power operator on query expressions, using Python "
"constants, variables, and even other expressions."
msgstr ""

msgid "Some examples"
msgstr "Beberapa contoh"

msgid "Built-in Expressions"
msgstr ""

msgid ""
"These expressions are defined in ``django.db.models.expressions`` and "
"``django.db.models.aggregates``, but for convenience they're available and "
"usually imported from :mod:`django.db.models`."
msgstr ""

msgid "``F()`` expressions"
msgstr "Pernyataan ``F()``"

msgid ""
"An ``F()`` object represents the value of a model field or annotated column. "
"It makes it possible to refer to model field values and perform  database "
"operations using them without actually having to pull them out of the  "
"database into Python memory."
msgstr ""

msgid ""
"Instead, Django uses the ``F()`` object to generate an SQL expression that "
"describes the required operation at the database level."
msgstr ""

msgid ""
"This is easiest to understand through an example. Normally, one might do "
"something like this::"
msgstr ""

msgid ""
"Here, we have pulled the value of ``reporter.stories_filed`` from the "
"database into memory and manipulated it using familiar Python operators, and "
"then saved the object back to the database. But instead we could also have "
"done::"
msgstr ""

msgid ""
"Although ``reporter.stories_filed = F('stories_filed') + 1`` looks like a "
"normal Python assignment of value to an instance attribute, in fact it's an "
"SQL construct describing an operation on the database."
msgstr ""

msgid ""
"When Django encounters an instance of ``F()``, it overrides the standard "
"Python operators to create an encapsulated SQL expression; in this case, one "
"which instructs the database to increment the database field represented by "
"``reporter.stories_filed``."
msgstr ""

msgid ""
"Whatever value is or was on ``reporter.stories_filed``, Python never gets to "
"know about it - it is dealt with entirely by the database. All Python does, "
"through Django's ``F()`` class, is create the SQL syntax to refer to the "
"field and describe the operation."
msgstr ""

msgid "To access the new value saved this way, the object must be reloaded::"
msgstr ""

msgid ""
"As well as being used in operations on single instances as above, ``F()`` "
"can be used on ``QuerySets`` of object instances, with ``update()``. This "
"reduces the two queries we were using above - the ``get()`` and the :meth:"
"`~Model.save()` - to just one::"
msgstr ""

msgid ""
"We can also use :meth:`~django.db.models.query.QuerySet.update()` to "
"increment the field value on multiple objects - which could be very much "
"faster than pulling them all into Python from the database, looping over "
"them, incrementing the field value of each one, and saving each one back to "
"the database::"
msgstr ""

msgid "``F()`` therefore can offer performance advantages by:"
msgstr ""

msgid "getting the database, rather than Python, to do work"
msgstr ""

msgid "reducing the number of queries some operations require"
msgstr ""

msgid "Avoiding race conditions using ``F()``"
msgstr ""

msgid ""
"Another useful benefit of ``F()`` is that having the database - rather than "
"Python - update a field's value avoids a *race condition*."
msgstr ""

msgid ""
"If two Python threads execute the code in the first example above, one "
"thread could retrieve, increment, and save a field's value after the other "
"has retrieved it from the database. The value that the second thread saves "
"will be based on the original value; the work of the first thread will "
"simply be lost."
msgstr ""

msgid ""
"If the database is responsible for updating the field, the process is more "
"robust: it will only ever update the field based on the value of the field "
"in the database when the :meth:`~Model.save()` or ``update()`` is executed, "
"rather than based on its value when the instance was retrieved."
msgstr ""

msgid "``F()`` assignments persist after ``Model.save()``"
msgstr ""

msgid ""
"``F()`` objects assigned to model fields persist after saving the model "
"instance and will be applied on each :meth:`~Model.save()`. For example::"
msgstr ""

msgid ""
"``stories_filed`` will be updated twice in this case. If it's initially "
"``1``, the final value will be ``3``."
msgstr ""

msgid "Using ``F()`` in filters"
msgstr "Menggunakan ``F()`` dalam penyaringan"

msgid ""
"``F()`` is also very useful in ``QuerySet`` filters, where they make it "
"possible to filter a set of objects against criteria based on their field "
"values, rather than on Python values."
msgstr ""

msgid ""
"This is documented in :ref:`using F() expressions in queries <using-f-"
"expressions-in-filters>`."
msgstr ""

msgid "Using ``F()`` with annotations"
msgstr "Menggunakan ``F()`` dengan keterangan"

msgid ""
"``F()`` can be used to create dynamic fields on your models by combining "
"different fields with arithmetic::"
msgstr ""

msgid ""
"If the fields that you're combining are of different types you'll need to "
"tell Django what kind of field will be returned. Since ``F()`` does not "
"directly support ``output_field`` you will need to wrap the expression with :"
"class:`ExpressionWrapper`::"
msgstr ""

msgid ""
"When referencing relational fields such as ``ForeignKey``, ``F()`` returns "
"the primary key value rather than a model instance::"
msgstr ""

msgid "``Func()`` expressions"
msgstr "Pernyataan ``Func()``"

msgid ""
"``Func()`` expressions are the base type of all expressions that involve "
"database functions like ``COALESCE`` and ``LOWER``, or aggregates like "
"``SUM``. They can be used directly::"
msgstr ""

msgid "or they can be used to build a library of database functions::"
msgstr ""

msgid ""
"But both cases will result in a queryset where each model is annotated with "
"an extra attribute ``field_lower`` produced, roughly, from the following "
"SQL::"
msgstr ""

msgid ""
"See :doc:`database-functions` for a list of built-in database functions."
msgstr ""

msgid "The ``Func`` API is as follows:"
msgstr ""

msgid ""
"A class attribute describing the function that will be generated. "
"Specifically, the ``function`` will be interpolated as the ``function`` "
"placeholder within :attr:`template`. Defaults to ``None``."
msgstr ""

msgid ""
"A class attribute, as a format string, that describes the SQL that is "
"generated for this function. Defaults to ``'%(function)s(%(expressions)s)'``."
msgstr ""

msgid ""
"If you're constructing SQL like ``strftime('%W', 'date')`` and need a "
"literal ``%`` character in the query, quadruple it (``%%%%``) in the "
"``template`` attribute because the string is interpolated twice: once during "
"the template interpolation in ``as_sql()`` and once in the SQL interpolation "
"with the query parameters in the database cursor."
msgstr ""

msgid ""
"A class attribute that denotes the character used to join the list of "
"``expressions`` together. Defaults to ``', '``."
msgstr ""

msgid ""
"A class attribute that denotes the number of arguments the function accepts. "
"If this attribute is set and the function is called with a different number "
"of expressions, ``TypeError`` will be raised. Defaults to ``None``."
msgstr ""

msgid "Generates the SQL for the database function."
msgstr ""

msgid ""
"The ``as_vendor()`` methods should use the ``function``, ``template``, "
"``arg_joiner``, and any other ``**extra_context`` parameters to customize "
"the SQL as needed. For example:"
msgstr ""

msgid ""
"Support for the ``arg_joiner`` and ``**extra_context`` parameters was added."
msgstr ""

msgid ""
"The ``*expressions`` argument is a list of positional expressions that the "
"function will be applied to. The expressions will be converted to strings, "
"joined together with ``arg_joiner``, and then interpolated into the "
"``template`` as the ``expressions`` placeholder."
msgstr ""

msgid ""
"Positional arguments can be expressions or Python values. Strings are "
"assumed to be column references and will be wrapped in ``F()`` expressions "
"while other values will be wrapped in ``Value()`` expressions."
msgstr ""

msgid ""
"The ``**extra`` kwargs are ``key=value`` pairs that can be interpolated into "
"the ``template`` attribute. The ``function``, ``template``, and "
"``arg_joiner`` keywords can be used to replace the attributes of the same "
"name without having to define your own class. ``output_field`` can be used "
"to define the expected return type."
msgstr ""

msgid "``Aggregate()`` expressions"
msgstr "Pernyataan ``Aggregate()``"

msgid ""
"An aggregate expression is a special case of a :ref:`Func() expression <func-"
"expressions>` that informs the query that a ``GROUP BY`` clause is required. "
"All of the :ref:`aggregate functions <aggregation-functions>`, like "
"``Sum()`` and ``Count()``, inherit from ``Aggregate()``."
msgstr ""

msgid ""
"Since ``Aggregate``\\s are expressions and wrap expressions, you can "
"represent some complex computations::"
msgstr ""

msgid "The ``Aggregate`` API is as follows:"
msgstr ""

msgid ""
"A class attribute, as a format string, that describes the SQL that is "
"generated for this aggregate. Defaults to "
"``'%(function)s( %(expressions)s )'``."
msgstr ""

msgid ""
"A class attribute describing the aggregate function that will be generated. "
"Specifically, the ``function`` will be interpolated as the ``function`` "
"placeholder within :attr:`template`. Defaults to ``None``."
msgstr ""

msgid ""
"The ``expression`` argument can be the name of a field on the model, or "
"another expression. It will be converted to a string and used as the "
"``expressions`` placeholder within the ``template``."
msgstr ""

msgid ""
"The ``output_field`` argument requires a model field instance, like "
"``IntegerField()`` or ``BooleanField()``, into which Django will load the "
"value after it's retrieved from the database. Usually no arguments are "
"needed when instantiating the model field as any arguments relating to data "
"validation (``max_length``, ``max_digits``, etc.) will not be enforced on "
"the expression's output value."
msgstr ""

msgid ""
"Note that ``output_field`` is only required when Django is unable to "
"determine what field type the result should be. Complex expressions that mix "
"field types should define the desired ``output_field``. For example, adding "
"an ``IntegerField()`` and a ``FloatField()`` together should probably have "
"``output_field=FloatField()`` defined."
msgstr ""

msgid ""
"The ``**extra`` kwargs are ``key=value`` pairs that can be interpolated into "
"the ``template`` attribute."
msgstr ""

msgid "Creating your own Aggregate Functions"
msgstr ""

msgid ""
"Creating your own aggregate is extremely easy. At a minimum, you need to "
"define ``function``, but you can also completely customize the SQL that is "
"generated. Here's a brief example::"
msgstr ""

msgid "``Value()`` expressions"
msgstr "Pernyataan ``Value()``"

msgid ""
"A ``Value()`` object represents the smallest possible component of an "
"expression: a simple value. When you need to represent the value of an "
"integer, boolean, or string within an expression, you can wrap that value "
"within a ``Value()``."
msgstr ""

msgid ""
"You will rarely need to use ``Value()`` directly. When you write the "
"expression ``F('field') + 1``, Django implicitly wraps the ``1`` in a "
"``Value()``, allowing simple values to be used in more complex expressions. "
"You will need to use ``Value()`` when you want to pass a string to an "
"expression. Most expressions interpret a string argument as the name of a "
"field, like ``Lower('name')``."
msgstr ""

msgid ""
"The ``value`` argument describes the value to be included in the expression, "
"such as ``1``, ``True``, or ``None``. Django knows how to convert these "
"Python values into their corresponding database type."
msgstr ""

msgid ""
"The ``output_field`` argument should be a model field instance, like "
"``IntegerField()`` or ``BooleanField()``, into which Django will load the "
"value after it's retrieved from the database. Usually no arguments are "
"needed when instantiating the model field as any arguments relating to data "
"validation (``max_length``, ``max_digits``, etc.) will not be enforced on "
"the expression's output value."
msgstr ""

msgid "``ExpressionWrapper()`` expressions"
msgstr "Pernyataan ``ExpressionWrapper()``"

msgid ""
"``ExpressionWrapper`` simply surrounds another expression and provides "
"access to properties, such as ``output_field``, that may not be available on "
"other expressions. ``ExpressionWrapper`` is necessary when using arithmetic "
"on ``F()`` expressions with different types as described in :ref:`using-f-"
"with-annotations`."
msgstr ""

msgid "Conditional expressions"
msgstr "Pernyataan bersyarat"

msgid ""
"Conditional expressions allow you to use :keyword:`if` ... :keyword:"
"`elif` ... :keyword:`else` logic in queries. Django natively supports SQL "
"``CASE`` expressions. For more details see :doc:`conditional-expressions`."
msgstr ""

msgid "``Subquery()`` expressions"
msgstr "Pernyataan ``Subquery()``"

msgid ""
"You can add an explicit subquery to a ``QuerySet`` using the ``Subquery`` "
"expression."
msgstr ""

msgid ""
"For example, to annotate each post with the email address of the author of "
"the newest comment on that post::"
msgstr ""

msgid "On PostgreSQL, the SQL looks like:"
msgstr "Pada PostgreSQL, SQL terlihat seperti:"

msgid ""
"The examples in this section are designed to show how to force Django to "
"execute a subquery. In some cases it may be possible to write an equivalent "
"queryset that performs the same task more clearly or efficiently."
msgstr ""

msgid "Referencing columns from the outer queryset"
msgstr ""

msgid ""
"Use ``OuterRef`` when a queryset in a ``Subquery`` needs to refer to a field "
"from the outer query. It acts like an :class:`F` expression except that the "
"check to see if it refers to a valid field isn't made until the outer "
"queryset is resolved."
msgstr ""

msgid ""
"Instances of ``OuterRef`` may be used in conjunction with nested instances "
"of ``Subquery`` to refer to a containing queryset that isn't the immediate "
"parent. For example, this queryset would need to be within a nested pair of "
"``Subquery`` instances to resolve correctly::"
msgstr ""

msgid "Limiting a subquery to a single column"
msgstr ""

msgid ""
"There are times when a single column must be returned from a ``Subquery``, "
"for instance, to use a ``Subquery`` as the target of an ``__in`` lookup. To "
"return all comments for posts published within the last day::"
msgstr ""

msgid ""
"In this case, the subquery must use :meth:`~.QuerySet.values` to return only "
"a single column: the primary key of the post."
msgstr ""

msgid "Limiting the subquery to a single row"
msgstr ""

msgid ""
"To prevent a subquery from returning multiple rows, a slice (``[:1]``) of "
"the queryset is used::"
msgstr ""

msgid ""
"In this case, the subquery must only return a single column *and* a single "
"row: the email address of the most recently created comment."
msgstr ""

msgid ""
"(Using :meth:`~.QuerySet.get` instead of a slice would fail because the "
"``OuterRef`` cannot be resolved until the queryset is used within a "
"``Subquery``.)"
msgstr ""

msgid "``Exists()`` subqueries"
msgstr "Subpermintaan ``Exists()``"

msgid ""
"``Exists`` is a ``Subquery`` subclass that uses an SQL ``EXISTS`` statement. "
"In many cases it will perform better than a subquery since the database is "
"able to stop evaluation of the subquery when a first matching row is found."
msgstr ""

msgid ""
"For example, to annotate each post with whether or not it has a comment from "
"within the last day::"
msgstr ""

msgid ""
"It's unnecessary to force ``Exists`` to refer to a single column, since the "
"columns are discarded and a boolean result is returned. Similarly, since "
"ordering is unimportant within an SQL ``EXISTS`` subquery and would only "
"degrade performance, it's automatically removed."
msgstr ""

msgid "You can query using ``NOT EXISTS`` with ``~Exists()``."
msgstr ""

msgid "Filtering on a ``Subquery`` expression"
msgstr ""

msgid ""
"It's not possible to filter directly using ``Subquery`` and ``Exists``, e."
"g.::"
msgstr ""

msgid ""
"You must filter on a subquery expression by first annotating the queryset "
"and then filtering based on that annotation::"
msgstr ""

msgid "Using aggregates within a ``Subquery`` expression"
msgstr ""

msgid ""
"Aggregates may be used within a ``Subquery``, but they require a specific "
"combination of :meth:`~.QuerySet.filter`, :meth:`~.QuerySet.values`, and :"
"meth:`~.QuerySet.annotate` to get the subquery grouping correct."
msgstr ""

msgid ""
"Assuming both models have a ``length`` field, to find posts where the post "
"length is greater than the total length of all combined comments::"
msgstr ""

msgid ""
"The initial ``filter(...)`` limits the subquery to the relevant parameters. "
"``order_by()`` removes the default :attr:`~django.db.models.Options."
"ordering` (if any) on the ``Comment`` model. ``values('post')`` aggregates "
"comments by ``Post``. Finally, ``annotate(...)`` performs the aggregation. "
"The order in which these queryset methods are applied is important. In this "
"case, since the subquery must be limited to a single column, "
"``values('total')`` is required."
msgstr ""

msgid ""
"This is the only way to perform an aggregation within a ``Subquery``, as "
"using :meth:`~.QuerySet.aggregate` attempts to evaluate the queryset (and if "
"there is an ``OuterRef``, this will not be possible to resolve)."
msgstr ""

msgid "Raw SQL expressions"
msgstr ""

msgid ""
"Sometimes database expressions can't easily express a complex ``WHERE`` "
"clause. In these edge cases, use the ``RawSQL`` expression. For example::"
msgstr ""

msgid ""
"These extra lookups may not be portable to different database engines "
"(because you're explicitly writing SQL code) and violate the DRY principle, "
"so you should avoid them if possible."
msgstr ""

msgid ""
"You should be very careful to escape any parameters that the user can "
"control by using ``params`` in order to protect against :ref:`SQL injection "
"attacks <sql-injection-protection>`. ``params`` is a required argument to "
"force you to acknowledge that you're not interpolating your SQL with user "
"provided data."
msgstr ""

msgid "Technical Information"
msgstr ""

msgid ""
"Below you'll find technical implementation details that may be useful to "
"library authors. The technical API and examples below will help with "
"creating generic query expressions that can extend the built-in "
"functionality that Django provides."
msgstr ""

msgid "Expression API"
msgstr ""

msgid ""
"Query expressions implement the :ref:`query expression API <query-"
"expression>`, but also expose a number of extra methods and attributes "
"listed below. All query expressions must inherit from ``Expression()`` or a "
"relevant subclass."
msgstr ""

msgid ""
"When a query expression wraps another expression, it is responsible for "
"calling the appropriate methods on the wrapped expression."
msgstr ""

msgid ""
"Tells Django that this expression contains an aggregate and that a ``GROUP "
"BY`` clause needs to be added to the query."
msgstr ""

msgid ""
"Provides the chance to do any pre-processing or validation of the expression "
"before it's added to the query. ``resolve_expression()`` must also be called "
"on any nested expressions. A ``copy()`` of ``self`` should be returned with "
"any necessary transformations."
msgstr ""

msgid "``query`` is the backend query implementation."
msgstr ""

msgid ""
"``allow_joins`` is a boolean that allows or denies the use of joins in the "
"query."
msgstr ""

msgid "``reuse`` is a set of reusable joins for multi-join scenarios."
msgstr ""

msgid ""
"``summarize`` is a boolean that, when ``True``, signals that the query being "
"computed is a terminal aggregate query."
msgstr ""

msgid "Returns an ordered list of inner expressions. For example::"
msgstr ""

msgid ""
"Takes a list of expressions and stores them such that "
"``get_source_expressions()`` can return them."
msgstr ""

msgid ""
"Returns a clone (copy) of ``self``, with any column aliases relabeled. "
"Column aliases are renamed when subqueries are created. "
"``relabeled_clone()`` should also be called on any nested expressions and "
"assigned to the clone."
msgstr ""

msgid "``change_map`` is a dictionary mapping old aliases to new aliases."
msgstr ""

msgid ""
"A hook allowing the expression to coerce ``value`` into a more appropriate "
"type."
msgstr ""

msgid ""
"Responsible for returning the list of columns references by this expression. "
"``get_group_by_cols()`` should be called on any nested expressions. ``F()`` "
"objects, in particular, hold a reference to a column."
msgstr ""

msgid "Returns the expression ready to be sorted in ascending order."
msgstr ""

msgid "``nulls_first`` and ``nulls_last`` define how null values are sorted."
msgstr ""

msgid "The ``nulls_last`` and ``nulls_first`` parameters were added."
msgstr ""

msgid "Returns the expression ready to be sorted in descending order."
msgstr ""

msgid "The ``nulls_first`` and ``nulls_last`` parameters were added."
msgstr ""

msgid ""
"Returns ``self`` with any modifications required to reverse the sort order "
"within an ``order_by`` call. As an example, an expression implementing "
"``NULLS LAST`` would change its value to be ``NULLS FIRST``. Modifications "
"are only required for expressions that implement sort order like "
"``OrderBy``. This method is called when :meth:`~django.db.models.query."
"QuerySet.reverse()` is called on a queryset."
msgstr ""

msgid "Writing your own Query Expressions"
msgstr ""

msgid ""
"You can write your own query expression classes that use, and can integrate "
"with, other query expressions. Let's step through an example by writing an "
"implementation of the ``COALESCE`` SQL function, without using the built-in :"
"ref:`Func() expressions <func-expressions>`."
msgstr ""

msgid ""
"The ``COALESCE`` SQL function is defined as taking a list of columns or "
"values. It will return the first column or value that isn't ``NULL``."
msgstr ""

msgid ""
"We'll start by defining the template to be used for SQL generation and an "
"``__init__()`` method to set some attributes::"
msgstr ""

msgid ""
"We do some basic validation on the parameters, including requiring at least "
"2 columns or values, and ensuring they are expressions. We are requiring "
"``output_field`` here so that Django knows what kind of model field to "
"assign the eventual result to."
msgstr ""

msgid ""
"Now we implement the pre-processing and validation. Since we do not have any "
"of our own validation at this point, we just delegate to the nested "
"expressions::"
msgstr ""

msgid "Next, we write the method responsible for generating the SQL::"
msgstr ""

msgid ""
"``as_sql()`` methods can support custom keyword arguments, allowing "
"``as_vendorname()`` methods to override data used to generate the SQL "
"string. Using ``as_sql()`` keyword arguments for customization is preferable "
"to mutating ``self`` within ``as_vendorname()`` methods as the latter can "
"lead to errors when running on different database backends. If your class "
"relies on class attributes to define data, consider allowing overrides in "
"your ``as_sql()`` method."
msgstr ""

msgid ""
"We generate the SQL for each of the ``expressions`` by using the ``compiler."
"compile()`` method, and join the result together with commas. Then the "
"template is filled out with our data and the SQL and parameters are returned."
msgstr ""

msgid ""
"We've also defined a custom implementation that is specific to the Oracle "
"backend. The ``as_oracle()`` function will be called instead of ``as_sql()`` "
"if the Oracle backend is in use."
msgstr ""

msgid ""
"Finally, we implement the rest of the methods that allow our query "
"expression to play nice with other query expressions::"
msgstr ""

msgid "Let's see how it works::"
msgstr "Mari kita lihat bagaimana itu bekerja::"

msgid "Adding support in third-party database backends"
msgstr "Menambahkan dukungan dalam backend basisdata pihak-ketiga"

msgid ""
"If you're using a database backend that uses a different SQL syntax for a "
"certain function, you can add support for it by monkey patching a new method "
"onto the function's class."
msgstr ""

msgid ""
"Let's say we're writing a backend for Microsoft's SQL Server which uses the "
"SQL ``LEN`` instead of ``LENGTH`` for the :class:`~functions.Length` "
"function. We'll monkey patch a new method called ``as_sqlserver()`` onto the "
"``Length`` class::"
msgstr ""

msgid ""
"You can also customize the SQL using the ``template`` parameter of "
"``as_sql()``."
msgstr ""

msgid ""
"We use ``as_sqlserver()`` because ``django.db.connection.vendor`` returns "
"``sqlserver`` for the backend."
msgstr ""

msgid ""
"Third-party backends can register their functions in the top level "
"``__init__.py`` file of the backend package or in a top level ``expressions."
"py`` file (or package) that is imported from the top level ``__init__.py``."
msgstr ""

msgid ""
"For user projects wishing to patch the backend that they're using, this code "
"should live in an :meth:`AppConfig.ready()<django.apps.AppConfig.ready>` "
"method."
msgstr ""

msgid "Model field reference"
msgstr ""

msgid ""
"This document contains all the API references of :class:`Field` including "
"the `field options`_ and `field types`_ Django offers."
msgstr ""

msgid ""
"If the built-in fields don't do the trick, you can try `django-localflavor "
"<https://github.com/django/django-localflavor>`_ (`documentation <https://"
"django-localflavor.readthedocs.io/>`_), which contains assorted pieces of "
"code that are useful for particular countries and cultures."
msgstr ""

msgid ""
"Also, you can easily :doc:`write your own custom model fields </howto/custom-"
"model-fields>`."
msgstr ""

msgid ""
"Technically, these models are defined in :mod:`django.db.models.fields`, but "
"for convenience they're imported into :mod:`django.db.models`; the standard "
"convention is to use ``from django.db import models`` and refer to fields as "
"``models.<Foo>Field``."
msgstr ""

msgid "Field options"
msgstr "Pilihan bidang"

msgid ""
"The following arguments are available to all field types. All are optional."
msgstr ""

msgid "``null``"
msgstr "``null``"

msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr ""
"Jika ``True``, Django akan menyimpan nilai-nilai kosong sebagai ``NULL`` di "
"basisdata. Awalan adalah ``False``."

msgid ""
"Avoid using :attr:`~Field.null` on string-based fields such as :class:"
"`CharField` and :class:`TextField`. If a string-based field has "
"``null=True``, that means it has two possible values for \"no data\": "
"``NULL``, and the empty string. In most cases, it's redundant to have two "
"possible values for \"no data;\" the Django convention is to use the empty "
"string, not ``NULL``. One exception is when a :class:`CharField` has both "
"``unique=True`` and ``blank=True`` set. In this situation, ``null=True`` is "
"required to avoid unique constraint violations when saving multiple objects "
"with blank values."
msgstr ""

msgid ""
"For both string-based and non-string-based fields, you will also need to set "
"``blank=True`` if you wish to permit empty values in forms, as the :attr:"
"`~Field.null` parameter only affects database storage (see :attr:`~Field."
"blank`)."
msgstr ""

msgid ""
"When using the Oracle database backend, the value ``NULL`` will be stored to "
"denote the empty string regardless of this attribute."
msgstr ""

msgid ""
"If you want to accept :attr:`~Field.null` values with :class:`BooleanField`, "
"use :class:`NullBooleanField` instead."
msgstr ""

msgid "``blank``"
msgstr "``blank``"

msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr ""
"Jika ``True``, bidang diizinkan menjadi kosong. Awalan adalah ``False``."

msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is "
"purely database-related, whereas :attr:`~Field.blank` is validation-related. "
"If a field has ``blank=True``, form validation will allow entry of an empty "
"value. If a field has ``blank=False``, the field will be required."
msgstr ""

msgid "``choices``"
msgstr "``choices``"

msgid ""
"An iterable (e.g., a list or tuple) consisting itself of iterables of "
"exactly two items (e.g. ``[(A, B), (A, B) ...]``) to use as choices for this "
"field. If this is given, the default form widget will be a select box with "
"these choices instead of the standard text field."
msgstr ""

msgid ""
"The first element in each tuple is the actual value to be set on the model, "
"and the second element is the human-readable name. For example::"
msgstr ""

msgid ""
"Generally, it's best to define choices inside a model class, and to define a "
"suitably-named constant for each value::"
msgstr ""

msgid ""
"Though you can define a choices list outside of a model class and then refer "
"to it, defining the choices and names for each choice inside the model class "
"keeps all of that information with the class that uses it, and makes the "
"choices easy to reference (e.g, ``Student.SOPHOMORE`` will work anywhere "
"that the ``Student`` model has been imported)."
msgstr ""

msgid ""
"You can also collect your available choices into named groups that can be "
"used for organizational purposes::"
msgstr ""

msgid ""
"The first element in each tuple is the name to apply to the group. The "
"second element is an iterable of 2-tuples, with each 2-tuple containing a "
"value and a human-readable name for an option. Grouped options may be "
"combined with ungrouped options within a single list (such as the `unknown` "
"option in this example)."
msgstr ""

msgid ""
"For each model field that has :attr:`~Field.choices` set, Django will add a "
"method to retrieve the human-readable name for the field's current value. "
"See :meth:`~django.db.models.Model.get_FOO_display` in the database API "
"documentation."
msgstr ""

msgid ""
"Note that choices can be any iterable object -- not necessarily a list or "
"tuple. This lets you construct choices dynamically. But if you find yourself "
"hacking :attr:`~Field.choices` to be dynamic, you're probably better off "
"using a proper database table with a :class:`ForeignKey`. :attr:`~Field."
"choices` is meant for static data that doesn't change much, if ever."
msgstr ""

msgid ""
"Unless :attr:`blank=False<Field.blank>` is set on the field along with a :"
"attr:`~Field.default` then a label containing ``\"---------\"`` will be "
"rendered with the select box. To override this behavior, add a tuple to "
"``choices`` containing ``None``; e.g. ``(None, 'Your String For Display')``. "
"Alternatively, you can use an empty string instead of ``None`` where this "
"makes sense - such as on a :class:`~django.db.models.CharField`."
msgstr ""

msgid "``db_column``"
msgstr "``db_column``"

msgid ""
"The name of the database column to use for this field. If this isn't given, "
"Django will use the field's name."
msgstr ""

msgid ""
"If your database column name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

msgid "``db_index``"
msgstr "``db_index``"

msgid "If ``True``, a database index will be created for this field."
msgstr "Jika``True``, indeks basisdata akan dibuat untuk bidang ini."

msgid "``db_tablespace``"
msgstr "``db_tablespace``"

msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this field's index, if this field is indexed. The default is the "
"project's :setting:`DEFAULT_INDEX_TABLESPACE` setting, if set, or the :attr:"
"`~Options.db_tablespace` of the model, if any. If the backend doesn't "
"support tablespaces for indexes, this option is ignored."
msgstr ""

msgid "``default``"
msgstr "``default``"

msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr ""
"Nilai awalan untuk bidang. Ini dapat berupa nilai atau obyek callable. Jika "
"callable itu akan dipanggil setiap waktu obyek baru dibuat."

msgid ""
"The default can't be a mutable object (model instance, ``list``, ``set``, "
"etc.), as a reference to the same instance of that object would be used as "
"the default value in all new model instances. Instead, wrap the desired "
"default in a callable. For example, if you want to specify a default "
"``dict`` for :class:`~django.contrib.postgres.fields.JSONField`, use a "
"function::"
msgstr ""

msgid ""
"``lambda``\\s can't be used for field options like ``default`` because they "
"can't be :ref:`serialized by migrations <migration-serializing>`. See that "
"documentation for other caveats."
msgstr ""

msgid ""
"For fields like :class:`ForeignKey` that map to model instances, defaults "
"should be the value of the field they reference (``pk`` unless :attr:"
"`~ForeignKey.to_field` is set) instead of model instances."
msgstr ""

msgid ""
"The default value is used when new model instances are created and a value "
"isn't provided for the field. When the field is a primary key, the default "
"is also used when the field is set to ``None``."
msgstr ""

msgid "``editable``"
msgstr "``editable``"

msgid ""
"If ``False``, the field will not be displayed in the admin or any other :"
"class:`~django.forms.ModelForm`. They are also skipped during :ref:`model "
"validation <validating-objects>`. Default is ``True``."
msgstr ""

msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override."
msgstr ""

msgid ""
"Error message keys include ``null``, ``blank``, ``invalid``, "
"``invalid_choice``, ``unique``, and ``unique_for_date``. Additional error "
"message keys are specified for each field in the `Field types`_ section "
"below."
msgstr ""

msgid ""
"These error messages often don't propagate to forms. See :ref:"
"`considerations-regarding-model-errormessages`."
msgstr ""

msgid ""
"Extra \"help\" text to be displayed with the form widget. It's useful for "
"documentation even if your field isn't used on a form."
msgstr ""
"Teks \"help\" tambahan untuk ditampilkan dengan widget formulir. Itu sangat "
"berguna untuk dokumentasi bahkan jika bidang anda tidak digunakan pada "
"formulir."

msgid ""
"Note that this value is *not* HTML-escaped in automatically-generated forms. "
"This lets you include HTML in :attr:`~Field.help_text` if you so desire. For "
"example::"
msgstr ""

msgid ""
"Alternatively you can use plain text and ``django.utils.html.escape()`` to "
"escape any HTML special characters. Ensure that you escape any help text "
"that may come from untrusted users to avoid a cross-site scripting attack."
msgstr ""

msgid "``primary_key``"
msgstr "``primary_key``"

msgid "If ``True``, this field is the primary key for the model."
msgstr "Jika ``True``, bidang ini adalah primary key untuk model."

msgid ""
"If you don't specify ``primary_key=True`` for any field in your model, "
"Django will automatically add an :class:`AutoField` to hold the primary key, "
"so you don't need to set ``primary_key=True`` on any of your fields unless "
"you want to override the default primary-key behavior. For more, see :ref:"
"`automatic-primary-key-fields`."
msgstr ""

msgid ""
"``primary_key=True`` implies :attr:`null=False <Field.null>` and :attr:"
"`unique=True <Field.unique>`. Only one primary key is allowed on an object."
msgstr ""

msgid ""
"The primary key field is read-only. If you change the value of the primary "
"key on an existing object and then save it, a new object will be created "
"alongside the old one."
msgstr ""

msgid "If ``True``, this field must be unique throughout the table."
msgstr "Jika ``True``, bidang ini harus unik diseluruh tabel."

msgid ""
"This is enforced at the database level and by model validation. If you try "
"to save a model with a duplicate value in a :attr:`~Field.unique` field, a :"
"exc:`django.db.IntegrityError` will be raised by the model's :meth:`~django."
"db.models.Model.save` method."
msgstr ""

msgid ""
"This option is valid on all field types except :class:`ManyToManyField` and :"
"class:`OneToOneField`."
msgstr ""

msgid ""
"Note that when ``unique`` is ``True``, you don't need to specify :attr:"
"`~Field.db_index`, because ``unique`` implies the creation of an index."
msgstr ""

msgid "In older versions, ``unique=True`` can't be used on :class:`FileField`."
msgstr ""

msgid "``unique_for_date``"
msgstr "``unique_for_date``"

msgid ""
"Set this to the name of a :class:`DateField` or :class:`DateTimeField` to "
"require that this field be unique for the value of the date field."
msgstr ""

msgid ""
"For example, if you have a field ``title`` that has ``unique_for_date="
"\"pub_date\"``, then Django wouldn't allow the entry of two records with the "
"same ``title`` and ``pub_date``."
msgstr ""

msgid ""
"Note that if you set this to point to a :class:`DateTimeField`, only the "
"date portion of the field will be considered. Besides, when :setting:"
"`USE_TZ` is ``True``, the check will be performed in the :ref:`current time "
"zone <default-current-time-zone>` at the time the object gets saved."
msgstr ""

msgid ""
"This is enforced by :meth:`Model.validate_unique()` during model validation "
"but not at the database level. If any :attr:`~Field.unique_for_date` "
"constraint involves fields that are not part of a :class:`~django.forms."
"ModelForm` (for example, if one of the fields is listed in ``exclude`` or "
"has :attr:`editable=False<Field.editable>`), :meth:`Model.validate_unique()` "
"will skip validation for that particular constraint."
msgstr ""

msgid "``unique_for_month``"
msgstr "``unique_for_month``"

msgid ""
"Like :attr:`~Field.unique_for_date`, but requires the field to be unique "
"with respect to the month."
msgstr ""

msgid "``unique_for_year``"
msgstr "``unique_for_year``"

msgid ""
"Like :attr:`~Field.unique_for_date` and :attr:`~Field.unique_for_month`."
msgstr ""

msgid "``verbose_name``"
msgstr ""

msgid ""
"A human-readable name for the field. If the verbose name isn't given, Django "
"will automatically create it using the field's attribute name, converting "
"underscores to spaces. See :ref:`Verbose field names <verbose-field-names>`."
msgstr ""

msgid ""
"A list of validators to run for this field. See the :doc:`validators "
"documentation </ref/validators>` for more information."
msgstr ""

msgid "Registering and fetching lookups"
msgstr ""

msgid ""
"``Field`` implements the :ref:`lookup registration API <lookup-registration-"
"api>`. The API can be used to customize which lookups are available for a "
"field class, and how lookups are fetched from a field."
msgstr ""

msgid "Field types"
msgstr "Jenis bidang"

msgid "``AutoField``"
msgstr "``AutoField``"

msgid ""
"An :class:`IntegerField` that automatically increments according to "
"available IDs. You usually won't need to use this directly; a primary key "
"field will automatically be added to your model if you don't specify "
"otherwise. See :ref:`automatic-primary-key-fields`."
msgstr ""

msgid "``BigAutoField``"
msgstr "``BigAutoField``"

msgid ""
"A 64-bit integer, much like an :class:`AutoField` except that it is "
"guaranteed to fit numbers from ``1`` to ``9223372036854775807``."
msgstr ""

msgid "``BigIntegerField``"
msgstr "``BigIntegerField``"

msgid ""
"A 64-bit integer, much like an :class:`IntegerField` except that it is "
"guaranteed to fit numbers from ``-9223372036854775808`` to "
"``9223372036854775807``. The default form widget for this field is a :class:"
"`~django.forms.TextInput`."
msgstr ""

msgid "``BinaryField``"
msgstr "``BinaryField``"

msgid ""
"A field to store raw binary data. It only supports ``bytes`` assignment. Be "
"aware that this field has limited functionality. For example, it is not "
"possible to filter a queryset on a ``BinaryField`` value. It is also not "
"possible to include a ``BinaryField`` in a :class:`~django.forms.ModelForm`."
msgstr ""

msgid "Abusing ``BinaryField``"
msgstr "Menyalahgunakan ``BinaryField``"

msgid ""
"Although you might think about storing files in the database, consider that "
"it is bad design in 99% of the cases. This field is *not* a replacement for "
"proper :doc:`static files </howto/static-files/index>` handling."
msgstr ""

msgid "A true/false field."
msgstr "Sebuah bidang true/false."

msgid ""
"The default form widget for this field is a :class:`~django.forms."
"CheckboxInput`."
msgstr ""

msgid ""
"If you need to accept :attr:`~Field.null` values then use :class:"
"`NullBooleanField` instead."
msgstr ""

msgid ""
"The default value of ``BooleanField`` is ``None`` when :attr:`Field.default` "
"isn't defined."
msgstr ""

msgid "A string field, for small- to large-sized strings."
msgstr ""

msgid "For large amounts of text, use :class:`~django.db.models.TextField`."
msgstr ""

msgid ""
"The default form widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""

msgid ":class:`CharField` has one extra required argument:"
msgstr ""

msgid ""
"The maximum length (in characters) of the field. The max_length is enforced "
"at the database level and in Django's validation."
msgstr ""

msgid ""
"If you are writing an application that must be portable to multiple database "
"backends, you should be aware that there are restrictions on ``max_length`` "
"for some backends. Refer to the :doc:`database backend notes </ref/"
"databases>` for details."
msgstr ""

msgid "``CommaSeparatedIntegerField``"
msgstr "``CommaSeparatedIntegerField``"

msgid ""
"This field is deprecated in favor of :class:`~django.db.models.CharField` "
"with ``validators=[``\\ :func:`validate_comma_separated_integer_list <django."
"core.validators.validate_comma_separated_integer_list>`\\ ``]``."
msgstr ""

msgid ""
"A field of integers separated by commas. As in :class:`CharField`, the :attr:"
"`~CharField.max_length` argument is required and the note about database "
"portability mentioned there should be heeded."
msgstr ""

msgid ""
"A date, represented in Python by a ``datetime.date`` instance. Has a few "
"extra, optional arguments:"
msgstr ""

msgid ""
"Automatically set the field to now every time the object is saved. Useful "
"for \"last-modified\" timestamps. Note that the current date is *always* "
"used; it's not just a default value that you can override."
msgstr ""

msgid ""
"The field is only automatically updated when calling :meth:`Model.save() "
"<django.db.models.Model.save>`. The field isn't updated when making updates "
"to other fields in other ways such as :meth:`QuerySet.update() <django.db."
"models.query.QuerySet.update>`, though you can specify a custom value for "
"the field in an update like that."
msgstr ""

msgid ""
"Automatically set the field to now when the object is first created. Useful "
"for creation of timestamps. Note that the current date is *always* used; "
"it's not just a default value that you can override. So even if you set a "
"value for this field when creating the object, it will be ignored. If you "
"want to be able to modify this field, set the following instead of "
"``auto_now_add=True``:"
msgstr ""

msgid ""
"For :class:`DateField`: ``default=date.today`` - from :meth:`datetime.date."
"today`"
msgstr ""
"Untuk :class:`DateField`: ``default=date.today`` - dari :meth:`datetime.date."
"today`"

msgid ""
"For :class:`DateTimeField`: ``default=timezone.now`` - from :func:`django."
"utils.timezone.now`"
msgstr ""

msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds a JavaScript calendar, and a shortcut for \"Today"
"\". Includes an additional ``invalid_date`` error message key."
msgstr ""

msgid ""
"The options ``auto_now_add``, ``auto_now``, and ``default`` are mutually "
"exclusive. Any combination of these options will result in an error."
msgstr ""

msgid ""
"As currently implemented, setting ``auto_now`` or ``auto_now_add`` to "
"``True`` will cause the field to have ``editable=False`` and ``blank=True`` "
"set."
msgstr ""

msgid ""
"The ``auto_now`` and ``auto_now_add`` options will always use the date in "
"the :ref:`default timezone <default-current-time-zone>` at the moment of "
"creation or update. If you need something different, you may want to "
"consider simply using your own callable default or overriding ``save()`` "
"instead of using ``auto_now`` or ``auto_now_add``; or using a "
"``DateTimeField`` instead of a ``DateField`` and deciding how to handle the "
"conversion from datetime to date at display time."
msgstr ""

msgid ""
"A date and time, represented in Python by a ``datetime.datetime`` instance. "
"Takes the same extra arguments as :class:`DateField`."
msgstr ""

msgid ""
"The default form widget for this field is a single :class:`~django.forms."
"TextInput`. The admin uses two separate :class:`~django.forms.TextInput` "
"widgets with JavaScript shortcuts."
msgstr ""
"Widget formulir awal untuk bidang ini adalah tunggal :class:`~django.forms."
"TextInput`. Admin menggunakan dua widget  :class:`~django.forms.TextInput` "
"terpisah dengan jalan pintas JavaScript."

msgid ""
"A fixed-precision decimal number, represented in Python by a :class:"
"`~decimal.Decimal` instance. Has two **required** arguments:"
msgstr ""

msgid ""
"The maximum number of digits allowed in the number. Note that this number "
"must be greater than or equal to ``decimal_places``."
msgstr ""

msgid "The number of decimal places to store with the number."
msgstr ""

msgid ""
"For example, to store numbers up to ``999`` with a resolution of 2 decimal "
"places, you'd use::"
msgstr ""

msgid ""
"And to store numbers up to approximately one billion with a resolution of 10 "
"decimal places::"
msgstr ""

msgid ""
"The default form widget for this field is a :class:`~django.forms."
"NumberInput` when :attr:`~django.forms.Field.localize` is ``False`` or :"
"class:`~django.forms.TextInput` otherwise."
msgstr ""

msgid ""
"For more information about the differences between the :class:`FloatField` "
"and :class:`DecimalField` classes, please see :ref:`FloatField vs. "
"DecimalField <floatfield_vs_decimalfield>`."
msgstr ""

msgid ""
"A field for storing periods of time - modeled in Python by :class:`~python:"
"datetime.timedelta`. When used on PostgreSQL, the data type used is an "
"``interval`` and on Oracle the data type is ``INTERVAL DAY(9) TO "
"SECOND(6)``. Otherwise a ``bigint`` of microseconds is used."
msgstr ""

msgid ""
"Arithmetic with ``DurationField`` works in most cases. However on all "
"databases other than PostgreSQL, comparing the value of a ``DurationField`` "
"to arithmetic on ``DateTimeField`` instances will not work as expected."
msgstr ""

msgid ""
"A :class:`CharField` that checks that the value is a valid email address. It "
"uses :class:`~django.core.validators.EmailValidator` to validate the input."
msgstr ""

msgid "A file-upload field."
msgstr "Sebuah bidang berkas-unggah"

msgid ""
"The ``primary_key`` argument isn't supported and will raise a an error if "
"used."
msgstr ""
"Argumen ``primary_key`` tidak didukung dan akan memunculkan sebuah kesalahan "
"jika digunakan."

msgid "Has two optional arguments:"
msgstr "Mempunyai dua argumen pilihan:"

msgid ""
"This attribute provides a way of setting the upload directory and file name, "
"and can be set in two ways. In both cases, the value is passed to the :meth:"
"`Storage.save() <django.core.files.storage.Storage.save>` method."
msgstr ""

msgid ""
"If you specify a string value, it may contain :func:`~time.strftime` "
"formatting, which will be replaced by the date/time of the file upload (so "
"that uploaded files don't fill up the given directory). For example::"
msgstr ""

msgid ""
"If you are using the default :class:`~django.core.files.storage."
"FileSystemStorage`, the string value will be appended to your :setting:"
"`MEDIA_ROOT` path to form the location on the local filesystem where "
"uploaded files will be stored. If you are using a different storage, check "
"that storage's documentation to see how it handles ``upload_to``."
msgstr ""

msgid ""
"``upload_to`` may also be a callable, such as a function. This will be "
"called to obtain the upload path, including the filename. This callable must "
"accept two arguments and return a Unix-style path (with forward slashes) to "
"be passed along to the storage system. The two arguments are:"
msgstr ""
"``upload_to`` mungkin juga dapat dipanggil, seperti sebuah fungsi. Ini akan "
"dipanggil untuk mendapatkan jalur unggahan, termasuk nama berkas. Panggilan "
"iniharus menerima dua argumen dan mengembalikan jalur gaya-Unix (dengan "
"garis miring didepan) untuk dilewatkan bersama ke sistem penyimpanan. Dua "
"argumen adalah:"

msgid "``instance``"
msgstr "``instance``"

msgid ""
"An instance of the model where the ``FileField`` is defined. More "
"specifically, this is the particular instance where the current file is "
"being attached."
msgstr ""

msgid ""
"In most cases, this object will not have been saved to the database yet, so "
"if it uses the default ``AutoField``, *it might not yet have a value for its "
"primary key field*."
msgstr ""
"Di kebanyakan kasus, obyek ini tidak akan disimpan ke basisdata dulu, jadi "
"jika itu menggunakan ``AutoField`` awal, *itu mungkin belum memiliki nilai "
"untuk bidang primary key nya*."

msgid "``filename``"
msgstr "``filename``"

msgid ""
"The filename that was originally given to the file. This may or may not be "
"taken into account when determining the final destination path."
msgstr ""

msgid ""
"A storage object, which handles the storage and retrieval of your files. "
"See :doc:`/topics/files` for details on how to provide this object."
msgstr ""

msgid ""
"The default form widget for this field is a :class:`~django.forms."
"ClearableFileInput`."
msgstr ""

msgid ""
"Using a :class:`FileField` or an :class:`ImageField` (see below) in a model "
"takes a few steps:"
msgstr ""

msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""
"Dalam berkas pengaturan anda, anda akan butuh menentukan :setting:"
"`MEDIA_ROOT` sebagai jalur penuh ke direktori dimana anda ingin menyimpan "
"berkas terunggah. (Untuk penampilan, berkas-berkas ini tidak disimpan di "
"basisdata.) Tentukan :setting:`MEDIA_URL` sebagai dasar URL umum dari "
"direktori itu. pastikan bahwa direktori ini dapat ditulis oleh Jaringan akun "
"pengguna peladen."

msgid ""
"Add the :class:`FileField` or :class:`ImageField` to your model, defining "
"the :attr:`~FileField.upload_to` option to specify a subdirectory of :"
"setting:`MEDIA_ROOT` to use for uploaded files."
msgstr ""

msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.db.models.fields.files.FieldFile.url` attribute provided by Django. "
"For example, if your :class:`ImageField` is called ``mug_shot``, you can get "
"the absolute path to your image in a template with ``{{ object.mug_shot."
"url }}``."
msgstr ""

msgid ""
"For example, say your :setting:`MEDIA_ROOT` is set to ``'/home/media'``, "
"and :attr:`~FileField.upload_to` is set to ``'photos/%Y/%m/%d'``. The ``'%Y/"
"%m/%d'`` part of :attr:`~FileField.upload_to` is :func:`~time.strftime` "
"formatting; ``'%Y'`` is the four-digit year, ``'%m'`` is the two-digit month "
"and ``'%d'`` is the two-digit day. If you upload a file on Jan. 15, 2007, it "
"will be saved in the directory ``/home/media/photos/2007/01/15``."
msgstr ""

msgid ""
"If you wanted to retrieve the uploaded file's on-disk filename, or the "
"file's size, you could use the :attr:`~django.core.files.File.name` and :"
"attr:`~django.core.files.File.size` attributes respectively; for more "
"information on the available attributes and methods, see the :class:`~django."
"core.files.File` class reference and the :doc:`/topics/files` topic guide."
msgstr ""

msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""

msgid ""
"The uploaded file's relative URL can be obtained using the :attr:`~django.db."
"models.fields.files.FieldFile.url` attribute. Internally, this calls the :"
"meth:`~django.core.files.storage.Storage.url` method of the underlying :"
"class:`~django.core.files.storage.Storage` class."
msgstr ""

msgid ""
"Note that whenever you deal with uploaded files, you should pay close "
"attention to where you're uploading them and what type of files they are, to "
"avoid security holes. *Validate all uploaded files* so that you're sure the "
"files are what you think they are. For example, if you blindly let somebody "
"upload files, without validation, to a directory that's within your Web "
"server's document root, then somebody could upload a CGI or PHP script and "
"execute that script by visiting its URL on your site. Don't allow that."
msgstr ""

msgid ""
"Also note that even an uploaded HTML file, since it can be executed by the "
"browser (though not by the server), can pose security threats that are "
"equivalent to XSS or CSRF attacks."
msgstr ""

msgid ""
":class:`FileField` instances are created in your database as ``varchar`` "
"columns with a default max length of 100 characters. As with other fields, "
"you can change the maximum length using the :attr:`~CharField.max_length` "
"argument."
msgstr ""

msgid "``FileField`` and ``FieldFile``"
msgstr "``FileField`` dan ``FieldFile``"

msgid ""
"When you access a :class:`~django.db.models.FileField` on a model, you are "
"given an instance of :class:`FieldFile` as a proxy for accessing the "
"underlying file."
msgstr ""

msgid ""
"The API of :class:`FieldFile` mirrors that of :class:`~django.core.files."
"File`, with one key difference: *The object wrapped by the class is not "
"necessarily a wrapper around Python's built-in file object.* Instead, it is "
"a wrapper around the result of the :attr:`Storage.open()<django.core.files."
"storage.Storage.open>` method, which may be a :class:`~django.core.files."
"File` object, or it may be a custom storage's implementation of the :class:"
"`~django.core.files.File` API."
msgstr ""

msgid ""
"In addition to the API inherited from :class:`~django.core.files.File` such "
"as ``read()`` and ``write()``, :class:`FieldFile` includes several methods "
"that can be used to interact with the underlying file:"
msgstr ""

msgid ""
"Two methods of this class, :meth:`~FieldFile.save` and :meth:`~FieldFile."
"delete`, default to saving the model object of the associated ``FieldFile`` "
"in the database."
msgstr ""

msgid ""
"The name of the file including the relative path from the root of the :class:"
"`~django.core.files.storage.Storage` of the associated :class:`~django.db."
"models.FileField`."
msgstr ""

msgid ""
"The result of the underlying :attr:`Storage.size() <django.core.files."
"storage.Storage.size>` method."
msgstr ""

msgid ""
"A read-only property to access the file's relative URL by calling the :meth:"
"`~django.core.files.storage.Storage.url` method of the underlying :class:"
"`~django.core.files.storage.Storage` class."
msgstr ""

msgid ""
"Opens or reopens the file associated with this instance in the specified "
"``mode``. Unlike the standard Python ``open()`` method, it doesn't return a "
"file descriptor."
msgstr ""

msgid ""
"Since the underlying file is opened implicitly when accessing it, it may be "
"unnecessary to call this method except to reset the pointer to the "
"underlying file or to change the ``mode``."
msgstr ""

msgid ""
"Behaves like the standard Python ``file.close()`` method and closes the file "
"associated with this instance."
msgstr ""

msgid ""
"This method takes a filename and file contents and passes them to the "
"storage class for the field, then associates the stored file with the model "
"field. If you want to manually associate file data with :class:`~django.db."
"models.FileField` instances on your model, the ``save()`` method is used to "
"persist that file data."
msgstr ""

msgid ""
"Takes two required arguments: ``name`` which is the name of the file, and "
"``content`` which is an object containing the file's contents.  The optional "
"``save`` argument controls whether or not the model instance is saved after "
"the file associated with this field has been altered. Defaults to ``True``."
msgstr ""

msgid ""
"Note that the ``content`` argument should be an instance of :class:`django."
"core.files.File`, not Python's built-in file object. You can construct a :"
"class:`~django.core.files.File` from an existing Python file object like "
"this::"
msgstr ""

msgid "Or you can construct one from a Python string like this::"
msgstr "Atau anda dapat membangun satu dari sebush string Python seperti ini::"

msgid "For more information, see :doc:`/topics/files`."
msgstr "Untuk informasi lebih, lihat :doc:`/topics/files`."

msgid ""
"Deletes the file associated with this instance and clears all attributes on "
"the field. Note: This method will close the file if it happens to be open "
"when ``delete()`` is called."
msgstr ""

msgid ""
"The optional ``save`` argument controls whether or not the model instance is "
"saved after the file associated with this field has been deleted. Defaults "
"to ``True``."
msgstr ""

msgid ""
"Note that when a model is deleted, related files are not deleted. If you "
"need to cleanup orphaned files, you'll need to handle it yourself (for "
"instance, with a custom management command that can be run manually or "
"scheduled to run periodically via e.g. cron)."
msgstr ""

msgid ""
"A :class:`CharField` whose choices are limited to the filenames in a certain "
"directory on the filesystem. Has three special arguments, of which the first "
"is **required**:"
msgstr ""

msgid ""
"Required. The absolute filesystem path to a directory from which this :class:"
"`FilePathField` should get its choices. Example: ``\"/home/images\"``."
msgstr ""

msgid ""
"Optional. A regular expression, as a string, that :class:`FilePathField` "
"will use to filter filenames. Note that the regex will be applied to the "
"base filename, not the full path. Example: ``\"foo.*\\.txt$\"``, which will "
"match a file called ``foo23.txt`` but not ``bar.txt`` or ``foo23.png``."
msgstr ""

msgid ""
"Optional. Either ``True`` or ``False``. Default is ``False``. Specifies "
"whether all subdirectories of :attr:`~FilePathField.path` should be included"
msgstr ""

msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``True``.  Specifies "
"whether files in the specified location should be included.  Either this or :"
"attr:`~FilePathField.allow_folders` must be ``True``."
msgstr ""

msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``False``.  Specifies "
"whether folders in the specified location should be included.  Either this "
"or :attr:`~FilePathField.allow_files` must be ``True``."
msgstr ""

msgid "Of course, these arguments can be used together."
msgstr ""

msgid ""
"The one potential gotcha is that :attr:`~FilePathField.match` applies to the "
"base filename, not the full path. So, this example::"
msgstr ""

msgid ""
"...will match ``/home/images/foo.png`` but not ``/home/images/foo/bar.png`` "
"because the :attr:`~FilePathField.match` applies to the base filename (``foo."
"png`` and ``bar.png``)."
msgstr ""

msgid ""
":class:`FilePathField` instances are created in your database as ``varchar`` "
"columns with a default max length of 100 characters. As with other fields, "
"you can change the maximum length using the :attr:`~CharField.max_length` "
"argument."
msgstr ""

msgid "A floating-point number represented in Python by a ``float`` instance."
msgstr ""

msgid "``FloatField`` vs. ``DecimalField``"
msgstr "``FloatField`` vs. ``DecimalField``"

msgid ""
"The :class:`FloatField` class is sometimes mixed up with the :class:"
"`DecimalField` class. Although they both represent real numbers, they "
"represent those numbers differently. ``FloatField`` uses Python's ``float`` "
"type internally, while ``DecimalField`` uses Python's ``Decimal`` type. For "
"information on the difference between the two, see Python's documentation "
"for the :mod:`decimal` module."
msgstr ""

msgid ""
"Inherits all attributes and methods from :class:`FileField`, but also "
"validates that the uploaded object is a valid image."
msgstr ""

msgid ""
"In addition to the special attributes that are available for :class:"
"`FileField`, an :class:`ImageField` also has ``height`` and ``width`` "
"attributes."
msgstr ""

msgid ""
"To facilitate querying on those attributes, :class:`ImageField` has two "
"extra optional arguments:"
msgstr ""

msgid ""
"Name of a model field which will be auto-populated with the height of the "
"image each time the model instance is saved."
msgstr ""

msgid ""
"Name of a model field which will be auto-populated with the width of the "
"image each time the model instance is saved."
msgstr ""

msgid "Requires the `Pillow`_ library."
msgstr "Membutuhkan pustaka `Pillow`_"

msgid ""
":class:`ImageField` instances are created in your database as ``varchar`` "
"columns with a default max length of 100 characters. As with other fields, "
"you can change the maximum length using the :attr:`~CharField.max_length` "
"argument."
msgstr ""

msgid ""
"An integer. Values from ``-2147483648`` to ``2147483647`` are safe in all "
"databases supported by Django. The default form widget for this field is a :"
"class:`~django.forms.NumberInput` when :attr:`~django.forms.Field.localize` "
"is ``False`` or :class:`~django.forms.TextInput` otherwise."
msgstr ""

msgid ""
"An IPv4 or IPv6 address, in string format (e.g. ``192.0.2.30`` or "
"``2a02:42fe::4``). The default form widget for this field is a :class:"
"`~django.forms.TextInput`."
msgstr ""

msgid ""
"Limits valid inputs to the specified protocol. Accepted values are "
"``'both'`` (default), ``'IPv4'`` or ``'IPv6'``. Matching is case insensitive."
msgstr ""

msgid ""
"If you allow for blank values, you have to allow for null values since blank "
"values are stored as null."
msgstr ""

msgid ""
"Like a :class:`BooleanField`, but allows ``NULL`` as one of the options. Use "
"this instead of a :class:`BooleanField` with ``null=True``. The default form "
"widget for this field is a :class:`~django.forms.NullBooleanSelect`."
msgstr ""

msgid "``PositiveIntegerField``"
msgstr "``PositiveIntegerField``"

msgid ""
"Like an :class:`IntegerField`, but must be either positive or zero (``0``). "
"Values from ``0`` to ``2147483647`` are safe in all databases supported by "
"Django. The value ``0`` is accepted for backward compatibility reasons."
msgstr ""

msgid "``PositiveSmallIntegerField``"
msgstr "``PositiveSmallIntegerField``"

msgid ""
"Like a :class:`PositiveIntegerField`, but only allows values under a certain "
"(database-dependent) point. Values from ``0`` to ``32767`` are safe in all "
"databases supported by Django."
msgstr ""

msgid ""
":term:`Slug` is a newspaper term. A slug is a short label for something, "
"containing only letters, numbers, underscores or hyphens. They're generally "
"used in URLs."
msgstr ""

msgid ""
"Like a CharField, you can specify :attr:`~CharField.max_length` (read the "
"note about database portability and :attr:`~CharField.max_length` in that "
"section, too). If :attr:`~CharField.max_length` is not specified, Django "
"will use a default length of 50."
msgstr ""

msgid "Implies setting :attr:`Field.db_index` to ``True``."
msgstr "menunjuk pengaturan :attr:`Field.db_index` ke ``True``."

msgid ""
"It is often useful to automatically prepopulate a SlugField based on the "
"value of some other value.  You can do this automatically in the admin "
"using :attr:`~django.contrib.admin.ModelAdmin.prepopulated_fields`."
msgstr ""
"Itu sering berguna untuk otomatis mengisi dimuka sebuah SlugField "
"berdasarkan pada nilai dari beberapa nilai lain. Anda dapat melakukan ini "
"otomatis di admin menggunakan :attr:`~django.contrib.admin.ModelAdmin."
"prepopulated_fields`."

msgid ""
"If ``True``, the field accepts Unicode letters in addition to ASCII letters. "
"Defaults to ``False``."
msgstr ""

msgid "``SmallIntegerField``"
msgstr "``SmallIntegerField``"

msgid ""
"Like an :class:`IntegerField`, but only allows values under a certain "
"(database-dependent) point. Values from ``-32768`` to ``32767`` are safe in "
"all databases supported by Django."
msgstr ""

msgid "``TextField``"
msgstr "``TextField``"

msgid ""
"A large text field. The default form widget for this field is a :class:"
"`~django.forms.Textarea`."
msgstr ""

msgid ""
"If you specify a ``max_length`` attribute, it will be reflected in the :"
"class:`~django.forms.Textarea` widget of the auto-generated form field. "
"However it is not enforced at the model or database level. Use a :class:"
"`CharField` for that."
msgstr ""
"Jika anda menentukan atribut ``max_length``, itu akan dipantulkan di widget :"
"class:`~django.forms.Textarea` dari bidang formulir dibangkitkan-otomatis. "
"Bagaimanapun itu tidak dipaksa pada model atau tingkatan basisdata. Gunakan :"
"class:`CharField` untuk itu."

msgid ""
"A time, represented in Python by a ``datetime.time`` instance. Accepts the "
"same auto-population options as :class:`DateField`."
msgstr ""

msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds some JavaScript shortcuts."
msgstr ""

msgid "A :class:`CharField` for a URL."
msgstr ""

msgid ""
"Like all :class:`CharField` subclasses, :class:`URLField` takes the "
"optional :attr:`~CharField.max_length` argument. If you don't specify :attr:"
"`~CharField.max_length`, a default of 200 is used."
msgstr ""

msgid ""
"A field for storing universally unique identifiers. Uses Python's :class:"
"`~python:uuid.UUID` class. When used on PostgreSQL, this stores in a "
"``uuid`` datatype, otherwise in a ``char(32)``."
msgstr ""

msgid ""
"Universally unique identifiers are a good alternative to :class:`AutoField` "
"for :attr:`~Field.primary_key`. The database will not generate the UUID for "
"you, so it is recommended to use :attr:`~Field.default`::"
msgstr ""

msgid ""
"Note that a callable (with the parentheses omitted) is passed to "
"``default``, not an instance of ``UUID``."
msgstr ""

msgid "Relationship fields"
msgstr "Bidang hubungan"

msgid "Django also defines a set of fields that represent relations."
msgstr "Django juga menentukan kumpulan bidang yang mewakili hubungan."

msgid "``ForeignKey``"
msgstr "``ForeignKey``"

msgid ""
"A many-to-one relationship. Requires a positional argument: the class to "
"which the model is related."
msgstr ""

msgid ""
"To create a recursive relationship -- an object that has a many-to-one "
"relationship with itself -- use ``models.ForeignKey('self', on_delete=models."
"CASCADE)``."
msgstr ""

msgid ""
"If you need to create a relationship on a model that has not yet been "
"defined, you can use the name of the model, rather than the model object "
"itself::"
msgstr ""

msgid ""
"Relationships defined this way on :ref:`abstract models <abstract-base-"
"classes>` are resolved when the model is subclassed as a concrete model and "
"are not relative to the abstract model's ``app_label``:"
msgstr ""

msgid ""
"To refer to models defined in another application, you can explicitly "
"specify a model with the full application label. For example, if the "
"``Manufacturer`` model above is defined in another application called "
"``production``, you'd need to use::"
msgstr ""

msgid ""
"This sort of reference can be useful when resolving circular import "
"dependencies between two applications."
msgstr ""

msgid ""
"A database index is automatically created on the ``ForeignKey``. You can "
"disable this by setting :attr:`~Field.db_index` to ``False``.  You may want "
"to avoid the overhead of an index if you are creating a foreign key for "
"consistency rather than joins, or if you will be creating an alternative "
"index like a partial or multiple column index."
msgstr ""

msgid "Database Representation"
msgstr "Perwakilan Basisdata"

msgid ""
"Behind the scenes, Django appends ``\"_id\"`` to the field name to create "
"its database column name. In the above example, the database table for the "
"``Car`` model will have a ``manufacturer_id`` column. (You can change this "
"explicitly by specifying :attr:`~Field.db_column`) However, your code should "
"never have to deal with the database column name, unless you write custom "
"SQL. You'll always deal with the field names of your model object."
msgstr ""

msgid "Arguments"
msgstr "Penjelasan"

msgid ""
":class:`ForeignKey` accepts other arguments that define the details of how "
"the relation works."
msgstr ""

msgid ""
"When an object referenced by a :class:`ForeignKey` is deleted, Django will "
"emulate the behavior of the SQL constraint specified by the :attr:"
"`on_delete` argument. For example, if you have a nullable :class:"
"`ForeignKey` and you want it to be set null when the referenced object is "
"deleted::"
msgstr ""

msgid ""
":attr:`~ForeignKey.on_delete` will become a required argument in Django 2.0. "
"In older versions it defaults to ``CASCADE``."
msgstr ""

msgid ""
"The possible values for :attr:`~ForeignKey.on_delete` are found in :mod:"
"`django.db.models`:"
msgstr ""

msgid ""
"Cascade deletes. Django emulates the behavior of the SQL constraint ON "
"DELETE CASCADE and also deletes the object containing the ForeignKey."
msgstr ""

msgid ""
"Prevent deletion of the referenced object by raising :exc:`~django.db.models."
"ProtectedError`, a subclass of :exc:`django.db.IntegrityError`."
msgstr ""

msgid ""
"Set the :class:`ForeignKey` null; this is only possible if :attr:`~Field."
"null` is ``True``."
msgstr ""

msgid ""
"Set the :class:`ForeignKey` to its default value; a default for the :class:"
"`ForeignKey` must be set."
msgstr ""

msgid ""
"Set the :class:`ForeignKey` to the value passed to :func:`~django.db.models."
"SET()`, or if a callable is passed in, the result of calling it. In most "
"cases, passing a callable will be necessary to avoid executing queries at "
"the time your models.py is imported::"
msgstr ""

msgid ""
"Take no action. If your database backend enforces referential integrity, "
"this will cause an :exc:`~django.db.IntegrityError` unless you manually add "
"an SQL ``ON DELETE`` constraint to the database field."
msgstr ""

msgid ""
"Sets a limit to the available choices for this field when this field is "
"rendered using a ``ModelForm`` or the admin (by default, all objects in the "
"queryset are available to choose). Either a dictionary, a :class:`~django.db."
"models.Q` object, or a callable returning a dictionary or :class:`~django.db."
"models.Q` object can be used."
msgstr ""

msgid ""
"causes the corresponding field on the ``ModelForm`` to list only ``Users`` "
"that have ``is_staff=True``. This may be helpful in the Django admin."
msgstr ""

msgid ""
"The callable form can be helpful, for instance, when used in conjunction "
"with the Python ``datetime`` module to limit selections by date range. For "
"example::"
msgstr ""

msgid ""
"If ``limit_choices_to`` is or returns a :class:`Q object <django.db.models."
"Q>`, which is useful for :ref:`complex queries <complex-lookups-with-q>`, "
"then it will only have an effect on the choices available in the admin when "
"the field is not listed in :attr:`~django.contrib.admin.ModelAdmin."
"raw_id_fields` in the ``ModelAdmin`` for the model."
msgstr ""

msgid ""
"If a callable is used for ``limit_choices_to``, it will be invoked every "
"time a new form is instantiated. It may also be invoked when a model is "
"validated, for example by management commands or the admin. The admin "
"constructs querysets to validate its form inputs in various edge cases "
"multiple times, so there is a possibility your callable may be invoked "
"several times."
msgstr ""

msgid ""
"The name to use for the relation from the related object back to this one. "
"It's also the default value for :attr:`related_query_name` (the name to use "
"for the reverse filter name from the target model). See the :ref:`related "
"objects documentation <backwards-related-objects>` for a full explanation "
"and example. Note that you must set this value when defining relations on :"
"ref:`abstract models <abstract-base-classes>`; and when you do so :ref:`some "
"special syntax <abstract-related-name>` is available."
msgstr ""

msgid ""
"If you'd prefer Django not to create a backwards relation, set "
"``related_name`` to ``'+'`` or end it with ``'+'``. For example, this will "
"ensure that the ``User`` model won't have a backwards relation to this "
"model::"
msgstr ""

msgid ""
"The name to use for the reverse filter name from the target model. It "
"defaults to the value of :attr:`related_name` or :attr:`~django.db.models."
"Options.default_related_name` if set, otherwise it defaults to the name of "
"the model::"
msgstr ""

msgid ""
"Like :attr:`related_name`, ``related_query_name`` supports app label and "
"class interpolation via :ref:`some special syntax <abstract-related-name>`."
msgstr ""

msgid ""
"The field on the related object that the relation is to. By default, Django "
"uses the primary key of the related object. If you reference a different "
"field, that field must have ``unique=True``."
msgstr ""

msgid ""
"Controls whether or not a constraint should be created in the database for "
"this foreign key. The default is ``True``, and that's almost certainly what "
"you want; setting this to ``False`` can be very bad for data integrity. That "
"said, here are some scenarios where you might want to do this:"
msgstr ""

msgid "You have legacy data that is not valid."
msgstr "Anda mempunyai warisan data yang tidak sah."

msgid "You're sharding your database."
msgstr ""

msgid ""
"If this is set to ``False``, accessing a related object that doesn't exist "
"will raise its ``DoesNotExist`` exception."
msgstr ""

msgid ""
"Controls the migration framework's reaction if this :class:`ForeignKey` is "
"pointing at a swappable model. If it is ``True`` - the default - then if "
"the :class:`ForeignKey` is pointing at a model which matches the current "
"value of ``settings.AUTH_USER_MODEL`` (or another swappable model setting) "
"the relationship will be stored in the migration using a reference to the "
"setting, not to the model directly."
msgstr ""

msgid ""
"You only want to override this to be ``False`` if you are sure your model "
"should always point towards the swapped-in model - for example, if it is a "
"profile model designed specifically for your custom user model."
msgstr ""

msgid ""
"Setting it to ``False`` does not mean you can reference a swappable model "
"even if it is swapped out - ``False`` just means that the migrations made "
"with this ForeignKey will always reference the exact model you specify (so "
"it will fail hard if the user tries to run with a User model you don't "
"support, for example)."
msgstr ""

msgid "If in doubt, leave it to its default of ``True``."
msgstr ""

msgid "``ManyToManyField``"
msgstr "``ManyToManyField``"

msgid ""
"A many-to-many relationship. Requires a positional argument: the class to "
"which the model is related, which works exactly the same as it does for :"
"class:`ForeignKey`, including :ref:`recursive <recursive-relationships>` "
"and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""

msgid ""
"Related objects can be added, removed, or created with the field's :class:"
"`~django.db.models.fields.related.RelatedManager`."
msgstr ""

msgid ""
"Behind the scenes, Django creates an intermediary join table to represent "
"the many-to-many relationship. By default, this table name is generated "
"using the name of the many-to-many field and the name of the table for the "
"model that contains it. Since some databases don't support table names above "
"a certain length, these table names will be automatically truncated to 64 "
"characters and a uniqueness hash will be used. This means you might see "
"table names like ``author_books_9cdf4``; this is perfectly normal.  You can "
"manually provide the name of the join table using the :attr:"
"`~ManyToManyField.db_table` option."
msgstr ""

msgid ""
":class:`ManyToManyField` accepts an extra set of arguments -- all optional "
"-- that control how the relationship functions."
msgstr ""

msgid "Same as :attr:`ForeignKey.related_name`."
msgstr "Sama seperti :attr:`ForeignKey.related_name`."

msgid "Same as :attr:`ForeignKey.related_query_name`."
msgstr "Sama seperti :attr:`ForeignKey.related_query_name`."

msgid "Same as :attr:`ForeignKey.limit_choices_to`."
msgstr "Sama seperti :attr:`ForeignKey.limit_choices_to`."

msgid ""
"``limit_choices_to`` has no effect when used on a ``ManyToManyField`` with a "
"custom intermediate table specified using the :attr:`~ManyToManyField."
"through` parameter."
msgstr ""

msgid ""
"Only used in the definition of ManyToManyFields on self. Consider the "
"following model::"
msgstr ""

msgid ""
"When Django processes this model, it identifies that it has a :class:"
"`ManyToManyField` on itself, and as a result, it doesn't add a "
"``person_set`` attribute to the ``Person`` class. Instead, the :class:"
"`ManyToManyField` is assumed to be symmetrical -- that is, if I am your "
"friend, then you are my friend."
msgstr ""

msgid ""
"If you do not want symmetry in many-to-many relationships with ``self``, "
"set :attr:`~ManyToManyField.symmetrical` to ``False``. This will force "
"Django to add the descriptor for the reverse relationship, allowing :class:"
"`ManyToManyField` relationships to be non-symmetrical."
msgstr ""

msgid ""
"Django will automatically generate a table to manage many-to-many "
"relationships. However, if you want to manually specify the intermediary "
"table, you can use the :attr:`~ManyToManyField.through` option to specify "
"the Django model that represents the intermediate table that you want to use."
msgstr ""

msgid ""
"The most common use for this option is when you want to associate :ref:"
"`extra data with a many-to-many relationship <intermediary-manytomany>`."
msgstr ""

msgid ""
"If you don't specify an explicit ``through`` model, there is still an "
"implicit ``through`` model class you can use to directly access the table "
"created to hold the association. It has three fields to link the models."
msgstr ""

msgid ""
"If the source and target models differ, the following fields are generated:"
msgstr ""

msgid "``id``: the primary key of the relation."
msgstr ""

msgid ""
"``<containing_model>_id``: the ``id`` of the model that declares the "
"``ManyToManyField``."
msgstr ""

msgid ""
"``<other_model>_id``: the ``id`` of the model that the ``ManyToManyField`` "
"points to."
msgstr ""

msgid ""
"If the ``ManyToManyField`` points from and to the same model, the following "
"fields are generated:"
msgstr ""

msgid ""
"``from_<model>_id``: the ``id`` of the instance which points at the model (i."
"e. the source instance)."
msgstr ""

msgid ""
"``to_<model>_id``: the ``id`` of the instance to which the relationship "
"points (i.e. the target model instance)."
msgstr ""

msgid ""
"This class can be used to query associated records for a given model "
"instance like a normal model."
msgstr ""

msgid ""
"Only used when a custom intermediary model is specified. Django will "
"normally determine which fields of the intermediary model to use in order to "
"establish a many-to-many relationship automatically. However, consider the "
"following models::"
msgstr ""

msgid ""
"``Membership`` has *two* foreign keys to ``Person`` (``person`` and "
"``inviter``), which makes the relationship ambiguous and Django can't know "
"which one to use. In this case, you must explicitly specify which foreign "
"keys Django should use using ``through_fields``, as in the example above."
msgstr ""

msgid ""
"``through_fields`` accepts a 2-tuple ``('field1', 'field2')``, where "
"``field1`` is the name of the foreign key to the model the :class:"
"`ManyToManyField` is defined on (``group`` in this case), and ``field2`` the "
"name of the foreign key to the target model (``person`` in this case)."
msgstr ""

msgid ""
"When you have more than one foreign key on an intermediary model to any (or "
"even both) of the models participating in a many-to-many relationship, you "
"*must* specify ``through_fields``. This also applies to :ref:`recursive "
"relationships <recursive-relationships>` when an intermediary model is used "
"and there are more than two foreign keys to the model, or you want to "
"explicitly specify which two Django should use."
msgstr ""

msgid ""
"Recursive relationships using an intermediary model are always defined as "
"non-symmetrical -- that is, with :attr:`symmetrical=False <ManyToManyField."
"symmetrical>` -- therefore, there is the concept of a \"source\" and a "
"\"target\". In that case ``'field1'`` will be treated as the \"source\" of "
"the relationship and ``'field2'`` as the \"target\"."
msgstr ""

msgid ""
"The name of the table to create for storing the many-to-many data. If this "
"is not provided, Django will assume a default name based upon the names of: "
"the table for the model defining the relationship and the name of the field "
"itself."
msgstr ""

msgid ""
"Controls whether or not constraints should be created in the database for "
"the foreign keys in the intermediary table. The default is ``True``, and "
"that's almost certainly what you want; setting this to ``False`` can be very "
"bad for data integrity. That said, here are some scenarios where you might "
"want to do this:"
msgstr ""

msgid "It is an error to pass both ``db_constraint`` and ``through``."
msgstr ""

msgid ""
"Controls the migration framework's reaction if this :class:`ManyToManyField` "
"is pointing at a swappable model. If it is ``True`` - the default - then if "
"the :class:`ManyToManyField` is pointing at a model which matches the "
"current value of ``settings.AUTH_USER_MODEL`` (or another swappable model "
"setting) the relationship will be stored in the migration using a reference "
"to the setting, not to the model directly."
msgstr ""

msgid ":class:`ManyToManyField` does not support :attr:`~Field.validators`."
msgstr ":class:`ManyToManyField` tidak mendukung :attr:`~Field.validators`."

msgid ""
":attr:`~Field.null` has no effect since there is no way to require a "
"relationship at the database level."
msgstr ""

msgid "``OneToOneField``"
msgstr "``OneToOneField``"

msgid ""
"A one-to-one relationship. Conceptually, this is similar to a :class:"
"`ForeignKey` with :attr:`unique=True <Field.unique>`, but the \"reverse\" "
"side of the relation will directly return a single object."
msgstr ""

msgid ""
"This is most useful as the primary key of a model which \"extends\" another "
"model in some way; :ref:`multi-table-inheritance` is implemented by adding "
"an implicit one-to-one relation from the child model to the parent model, "
"for example."
msgstr ""

msgid ""
"One positional argument is required: the class to which the model will be "
"related. This works exactly the same as it does for :class:`ForeignKey`, "
"including all the options regarding :ref:`recursive <recursive-"
"relationships>` and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""

msgid ""
"If you do not specify the :attr:`~ForeignKey.related_name` argument for the "
"``OneToOneField``, Django will use the lower-case name of the current model "
"as default value."
msgstr ""

msgid "With the following example::"
msgstr "Dengan contoh berikut::"

msgid "your resulting ``User`` model will have the following attributes::"
msgstr ""

msgid ""
"A ``DoesNotExist`` exception is raised when accessing the reverse "
"relationship if an entry in the related table doesn't exist. For example, if "
"a user doesn't have a supervisor designated by ``MySpecialUser``::"
msgstr ""

msgid ""
"Additionally, ``OneToOneField`` accepts all of the extra arguments accepted "
"by :class:`ForeignKey`, plus one extra argument:"
msgstr ""

msgid ""
"When ``True`` and used in a model which inherits from another :term:"
"`concrete model`, indicates that this field should be used as the link back "
"to the parent class, rather than the extra ``OneToOneField`` which would "
"normally be implicitly created by subclassing."
msgstr ""

msgid ""
"See :doc:`One-to-one relationships </topics/db/examples/one_to_one>` for "
"usage examples of ``OneToOneField``."
msgstr ""

msgid "Field API reference"
msgstr ""

msgid ""
"``Field`` is an abstract class that represents a database table column. "
"Django uses fields to create the database table (:meth:`db_type`), to map "
"Python types to database (:meth:`get_prep_value`) and vice-versa (:meth:"
"`from_db_value`)."
msgstr ""

msgid ""
"A field is thus a fundamental piece in different Django APIs, notably, :"
"class:`models <django.db.models.Model>` and :class:`querysets <django.db."
"models.query.QuerySet>`."
msgstr ""

msgid ""
"In models, a field is instantiated as a class attribute and represents a "
"particular table column, see :doc:`/topics/db/models`. It has attributes "
"such as :attr:`null` and :attr:`unique`, and methods that Django uses to map "
"the field value to database-specific values."
msgstr ""

msgid ""
"A ``Field`` is a subclass of :class:`~django.db.models.lookups."
"RegisterLookupMixin` and thus both :class:`~django.db.models.Transform` and :"
"class:`~django.db.models.Lookup` can be registered on it to be used in "
"``QuerySet``\\s (e.g. ``field_name__exact=\"foo\"``). All :ref:`built-in "
"lookups <field-lookups>` are registered by default."
msgstr ""

msgid ""
"All of Django's built-in fields, such as :class:`CharField`, are particular "
"implementations of ``Field``. If you need a custom field, you can either "
"subclass any of the built-in fields or write a ``Field`` from scratch. In "
"either case, see :doc:`/howto/custom-model-fields`."
msgstr ""

msgid ""
"A verbose description of the field, e.g. for the :mod:`django.contrib."
"admindocs` application."
msgstr ""

msgid "The description can be of the form::"
msgstr ""

msgid "where the arguments are interpolated from the field's ``__dict__``."
msgstr ""

msgid ""
"To map a ``Field`` to a database-specific type, Django exposes several "
"methods:"
msgstr ""

msgid ""
"Returns a string naming this field for backend specific purposes. By "
"default, it returns the class name."
msgstr ""

msgid "See :ref:`emulating-built-in-field-types` for usage in custom fields."
msgstr ""

msgid ""
"Returns the database column data type for the :class:`Field`, taking into "
"account the ``connection``."
msgstr ""

msgid "See :ref:`custom-database-types` for usage in custom fields."
msgstr ""

msgid ""
"Returns the database column data type for fields such as ``ForeignKey`` and "
"``OneToOneField`` that point to the :class:`Field`, taking into account the "
"``connection``."
msgstr ""

msgid ""
"There are three main situations where Django needs to interact with the "
"database backend and fields:"
msgstr ""

msgid "when it queries the database (Python value -> database backend value)"
msgstr ""

msgid ""
"when it loads data from the database (database backend value -> Python value)"
msgstr ""

msgid "when it saves to the database (Python value -> database backend value)"
msgstr ""

msgid ""
"When querying, :meth:`get_db_prep_value` and :meth:`get_prep_value` are used:"
msgstr ""

msgid ""
"``value`` is the current value of the model's attribute, and the method "
"should return data in a format that has been prepared for use as a parameter "
"in a query."
msgstr ""

msgid "See :ref:`converting-python-objects-to-query-values` for usage."
msgstr ""

msgid ""
"Converts ``value`` to a backend-specific value. By default it returns "
"``value`` if ``prepared=True`` and :meth:`~Field.get_prep_value` if is "
"``False``."
msgstr ""

msgid "See :ref:`converting-query-values-to-database-values` for usage."
msgstr ""
"Lihat :ref:`converting-query-values-to-database-values` untuk penggunaan."

msgid "When loading data, :meth:`from_db_value` is used:"
msgstr "Ketika memuat data, :meth:`from_db_value` digunakan:"

msgid ""
"Converts a value as returned by the database to a Python object. It is the "
"reverse of :meth:`get_prep_value`."
msgstr ""

msgid ""
"This method is not used for most built-in fields as the database backend "
"already returns the correct Python type, or the backend itself does the "
"conversion."
msgstr ""

msgid "See :ref:`converting-values-to-python-objects` for usage."
msgstr "Lihat :ref:`converting-values-to-python-objects` untuk penggunaan."

msgid ""
"For performance reasons, ``from_db_value`` is not implemented as a no-op on "
"fields which do not require it (all Django fields). Consequently you may not "
"call ``super`` in your definition."
msgstr ""

msgid "When saving, :meth:`pre_save` and :meth:`get_db_prep_save` are used:"
msgstr ""
"Ketika menyimpan,  :meth:`pre_save` dan :meth:`get_db_prep_save` digunakan:"

msgid ""
"Same as the :meth:`get_db_prep_value`, but called when the field value must "
"be *saved* to the database. By default returns :meth:`get_db_prep_value`."
msgstr ""

msgid ""
"Method called prior to :meth:`get_db_prep_save` to prepare the value before "
"being saved (e.g. for :attr:`DateField.auto_now`)."
msgstr ""

msgid ""
"``model_instance`` is the instance this field belongs to and ``add`` is "
"whether the instance is being saved to the database for the first time."
msgstr ""

msgid ""
"It should return the value of the appropriate attribute from "
"``model_instance`` for this field. The attribute name is in ``self.attname`` "
"(this is set up by :class:`~django.db.models.Field`)."
msgstr ""

msgid "See :ref:`preprocessing-values-before-saving` for usage."
msgstr "Lihat :ref:`preprocessing-values-before-saving` untuk penggunaan."

msgid ""
"Fields often receive their values as a different type, either from "
"serialization or from forms."
msgstr ""

msgid ""
"Converts the value into the correct Python object. It acts as the reverse "
"of :meth:`value_to_string`, and is also called in :meth:`~django.db.models."
"Model.clean`."
msgstr ""

msgid ""
"Besides saving to the database, the field also needs to know how to "
"serialize its value:"
msgstr ""

msgid "Converts ``obj`` to a string. Used to serialize the value of the field."
msgstr ""

msgid "See :ref:`converting-model-field-to-serialization` for usage."
msgstr ""

msgid ""
"When using :class:`model forms <django.forms.ModelForm>`, the ``Field`` "
"needs to know which form field it should be represented by:"
msgstr ""

msgid ""
"Returns the default :class:`django.forms.Field` of this field for :class:"
"`~django.forms.ModelForm`."
msgstr ""

msgid ""
"By default, if both ``form_class`` and ``choices_form_class`` are ``None``, "
"it uses :class:`~django.forms.CharField`. If the field has :attr:`~django.db."
"models.Field.choices` and ``choices_form_class`` isn't specified, it uses :"
"class:`~django.forms.TypedChoiceField`."
msgstr ""

msgid "See :ref:`specifying-form-field-for-model-field` for usage."
msgstr "Lihat :ref:`specifying-form-field-for-model-field`  untuk penggunaan."

msgid "Returns a 4-tuple with enough information to recreate the field:"
msgstr ""

msgid "The name of the field on the model."
msgstr ""

msgid ""
"The import path of the field (e.g. ``\"django.db.models.IntegerField\"``). "
"This should be the most portable version, so less specific may be better."
msgstr ""

msgid "A list of positional arguments."
msgstr ""

msgid "A dict of keyword arguments."
msgstr ""

msgid ""
"This method must be added to fields prior to 1.7 to migrate its data using :"
"doc:`/topics/migrations`."
msgstr ""

msgid "Field attribute reference"
msgstr ""

msgid ""
"Every ``Field`` instance contains several attributes that allow "
"introspecting its behavior. Use these attributes instead of ``isinstance`` "
"checks when you need to write code that depends on a field's functionality. "
"These attributes can be used together with the :ref:`Model._meta API <model-"
"meta-field-api>` to narrow down a search for specific field types. Custom "
"model fields should implement these flags."
msgstr ""

msgid "Attributes for fields"
msgstr "Atribut untuk bidang"

msgid ""
"Boolean flag that indicates if the field was automatically created, such as "
"the ``OneToOneField`` used by model inheritance."
msgstr ""

msgid ""
"Boolean flag that indicates if the field has a database column associated "
"with it."
msgstr ""
"Bendera Boolean mengindikasikan jika bidang mempunyai kolom terkait dengan "
"itu."

msgid ""
"Boolean flag that indicates if a field is used to back another non-hidden "
"field's functionality (e.g. the ``content_type`` and ``object_id`` fields "
"that make up a ``GenericForeignKey``). The ``hidden`` flag is used to "
"distinguish what constitutes the public subset of fields on the model from "
"all the fields on the model."
msgstr ""

msgid ""
":meth:`Options.get_fields() <django.db.models.options.Options.get_fields()>` "
"excludes hidden fields by default. Pass in ``include_hidden=True`` to return "
"hidden fields in the results."
msgstr ""

msgid ""
"Boolean flag that indicates if a field contains references to one or more "
"other models for its functionality (e.g. ``ForeignKey``, "
"``ManyToManyField``, ``OneToOneField``, etc.)."
msgstr ""

msgid ""
"Returns the model on which the field is defined. If a field is defined on a "
"superclass of a model, ``model`` will refer to the superclass, not the class "
"of the instance."
msgstr ""

msgid "Attributes for fields with relations"
msgstr "Atribut untuk bidang dengan hubungan"

msgid ""
"These attributes are used to query for the cardinality and other details of "
"a relation. These attribute are present on all fields; however, they will "
"only have boolean values (rather than ``None``) if the field is a relation "
"type (:attr:`Field.is_relation=True <Field.is_relation>`)."
msgstr ""

msgid ""
"Boolean flag that is ``True`` if the field has a many-to-many relation; "
"``False`` otherwise. The only field included with Django where this is "
"``True`` is ``ManyToManyField``."
msgstr ""

msgid ""
"Boolean flag that is ``True`` if the field has a many-to-one relation, such "
"as a ``ForeignKey``; ``False`` otherwise."
msgstr ""

msgid ""
"Boolean flag that is ``True`` if the field has a one-to-many relation, such "
"as a ``GenericRelation`` or the reverse of a ``ForeignKey``; ``False`` "
"otherwise."
msgstr ""

msgid ""
"Boolean flag that is ``True`` if the field has a one-to-one relation, such "
"as a ``OneToOneField``; ``False`` otherwise."
msgstr ""

msgid ""
"Points to the model the field relates to. For example, ``Author`` in "
"``ForeignKey(Author, on_delete=models.CASCADE)``. The ``related_model`` for "
"a ``GenericForeignKey`` is always ``None``."
msgstr ""

msgid ""
"Model API reference. For introductory material, see :doc:`/topics/db/models`."
msgstr ""

msgid "Model index reference"
msgstr ""

msgid ""
"Index classes ease creating database indexes. They can be added using the :"
"attr:`Meta.indexes <django.db.models.Options.indexes>` option. This document "
"explains the API references of :class:`Index` which includes the `index "
"options`_."
msgstr ""

msgid "Referencing built-in indexes"
msgstr ""

msgid ""
"Indexes are defined in ``django.db.models.indexes``, but for convenience "
"they're imported into :mod:`django.db.models`. The standard convention is to "
"use ``from django.db import models`` and refer to the indexes as ``models."
"<IndexClass>``."
msgstr ""

msgid "``Index`` options"
msgstr "Pilihan ``Index``"

msgid "Creates an index (B-Tree) in the database."
msgstr "Membuat sebuah index (B-tree) dalam basisdata."

msgid "A list of the name of the fields on which the index is desired."
msgstr ""

msgid ""
"By default, indexes are created with an ascending order for each column. To "
"define an index with a descending order for a column, add a hyphen before "
"the field's name."
msgstr ""

msgid ""
"For example ``Index(fields=['headline', '-pub_date'])`` would create SQL "
"with ``(headline, pub_date DESC)``. Index ordering isn't supported on MySQL. "
"In that case, a descending index is created as a normal index."
msgstr ""

msgid "Support for column ordering on SQLite"
msgstr ""

msgid ""
"Column ordering is supported on SQLite 3.3.0+ and only for some database "
"file formats. Refer to the `SQLite docs <https://www.sqlite.org/"
"lang_createindex.html>`_ for specifics."
msgstr ""

msgid ""
"The name of the index. If ``name`` isn't provided Django will auto-generate "
"a name. For compatibility with different databases, index names cannot be "
"longer than 30 characters and shouldn't start with a number (0-9) or "
"underscore (_)."
msgstr ""

msgid ""
"For a list of PostgreSQL-specific indexes, see :mod:`django.contrib.postgres."
"indexes`."
msgstr ""

msgid "Model instance reference"
msgstr ""

msgid ""
"This document describes the details of the ``Model`` API. It builds on the "
"material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

msgid ""
"Throughout this reference we'll use the :ref:`example Weblog models "
"<queryset-model-example>` presented in the :doc:`database query guide </"
"topics/db/queries>`."
msgstr ""

msgid "Creating objects"
msgstr "membuat obyek"

msgid ""
"To create a new instance of a model, just instantiate it like any other "
"Python class:"
msgstr ""

msgid ""
"The keyword arguments are simply the names of the fields you've defined on "
"your model. Note that instantiating a model in no way touches your database; "
"for that, you need to :meth:`~Model.save()`."
msgstr ""

msgid ""
"You may be tempted to customize the model by overriding the ``__init__`` "
"method. If you do so, however, take care not to change the calling signature "
"as any change may prevent the model instance from being saved. Rather than "
"overriding ``__init__``, try using one of these approaches:"
msgstr ""

msgid "Add a classmethod on the model class::"
msgstr ""

msgid "Add a method on a custom manager (usually preferred)::"
msgstr ""

msgid "Customizing model loading"
msgstr ""

msgid ""
"The ``from_db()`` method can be used to customize model instance creation "
"when loading from the database."
msgstr ""

msgid ""
"The ``db`` argument contains the database alias for the database the model "
"is loaded from, ``field_names`` contains the names of all loaded fields, and "
"``values`` contains the loaded values for each field in ``field_names``. The "
"``field_names`` are in the same order as the ``values``. If all of the "
"model's fields are present, then ``values`` are guaranteed to be in the "
"order ``__init__()`` expects them. That is, the instance can be created by "
"``cls(*values)``. If any fields are deferred, they won't appear in "
"``field_names``. In that case, assign a value of ``django.db.models."
"DEFERRED`` to each of the missing fields."
msgstr ""

msgid ""
"In addition to creating the new model, the ``from_db()`` method must set the "
"``adding`` and ``db`` flags in the new instance's ``_state`` attribute."
msgstr ""

msgid ""
"Below is an example showing how to record the initial values of fields that "
"are loaded from the database::"
msgstr ""

msgid ""
"The example above shows a full ``from_db()`` implementation to clarify how "
"that is done. In this case it would of course be possible to just use "
"``super()`` call in the ``from_db()`` method."
msgstr ""

msgid ""
"In older versions, you could check if all fields were loaded by consulting "
"``cls._deferred``. This attribute is removed and ``django.db.models."
"DEFERRED`` is new."
msgstr ""

msgid "Refreshing objects from database"
msgstr ""

msgid ""
"If you delete a field from a model instance, accessing it again reloads the "
"value from the database::"
msgstr ""

msgid ""
"In older versions, accessing a deleted field raised ``AttributeError`` "
"instead of reloading it."
msgstr ""

msgid ""
"If you need to reload a model's values from the database, you can use the "
"``refresh_from_db()`` method. When this method is called without arguments "
"the following is done:"
msgstr ""

msgid ""
"All non-deferred fields of the model are updated to the values currently "
"present in the database."
msgstr ""

msgid ""
"The previously loaded related instances for which the relation's value is no "
"longer valid are removed from the reloaded instance. For example, if you "
"have a foreign key from the reloaded instance to another model with name "
"``Author``, then if ``obj.author_id != obj.author.id``, ``obj.author`` will "
"be thrown away, and when next accessed it will be reloaded with the value of "
"``obj.author_id``."
msgstr ""

msgid ""
"Only fields of the model are reloaded from the database. Other database-"
"dependent values such as annotations aren't reloaded. Any :func:"
"`@cached_property <django.utils.functional.cached_property>` attributes "
"aren't cleared either."
msgstr ""

msgid ""
"The reloading happens from the database the instance was loaded from, or "
"from the default database if the instance wasn't loaded from the database. "
"The ``using`` argument can be used to force the database used for reloading."
msgstr ""

msgid ""
"It is possible to force the set of fields to be loaded by using the "
"``fields`` argument."
msgstr ""

msgid ""
"For example, to test that an ``update()`` call resulted in the expected "
"update, you could write a test similar to this::"
msgstr ""

msgid ""
"Note that when deferred fields are accessed, the loading of the deferred "
"field's value happens through this method. Thus it is possible to customize "
"the way deferred loading happens. The example below shows how one can reload "
"all of the instance's fields when a deferred field is reloaded::"
msgstr ""

msgid ""
"A helper method that returns a set containing the attribute names of all "
"those fields that are currently deferred for this model."
msgstr ""

msgid "Validating objects"
msgstr "Mensahkan obyek-obyek"

msgid "There are three steps involved in validating a model:"
msgstr "Ada tidak langkah terlibat dalam mengesahkan sebuah model:"

msgid "Validate the model fields - :meth:`Model.clean_fields()`"
msgstr "Mensahkan bidang-bidang model - :meth:`Model.clean_fields()`"

msgid "Validate the model as a whole - :meth:`Model.clean()`"
msgstr ""
"Mensahkan model sebagai sebuah keseluruhan - :meth:`Model.clean_fields()`"

msgid "Validate the field uniqueness - :meth:`Model.validate_unique()`"
msgstr "Mensahkan keunikan bidang - :meth:`Model.validate_unique()`"

msgid ""
"All three steps are performed when you call a model's :meth:`~Model."
"full_clean()` method."
msgstr ""

msgid ""
"When you use a :class:`~django.forms.ModelForm`, the call to :meth:`~django."
"forms.Form.is_valid()` will perform these validation steps for all the "
"fields that are included on the form. See the :doc:`ModelForm documentation "
"</topics/forms/modelforms>` for more information. You should only need to "
"call a model's :meth:`~Model.full_clean()` method if you plan to handle "
"validation errors yourself, or if you have excluded fields from the :class:"
"`~django.forms.ModelForm` that require validation."
msgstr ""

msgid ""
"This method calls :meth:`Model.clean_fields()`, :meth:`Model.clean()`, and :"
"meth:`Model.validate_unique()` (if ``validate_unique`` is ``True``), in that "
"order and raises a :exc:`~django.core.exceptions.ValidationError` that has a "
"``message_dict`` attribute containing errors from all three stages."
msgstr ""

msgid ""
"The optional ``exclude`` argument can be used to provide a list of field "
"names that can be excluded from validation and cleaning. :class:`~django."
"forms.ModelForm` uses this argument to exclude fields that aren't present on "
"your form from being validated since any errors raised could not be "
"corrected by the user."
msgstr ""

msgid ""
"Note that ``full_clean()`` will *not* be called automatically when you call "
"your model's :meth:`~Model.save()` method. You'll need to call it manually "
"when you want to run one-step model validation for your own manually created "
"models. For example::"
msgstr ""

msgid ""
"The first step ``full_clean()`` performs is to clean each individual field."
msgstr ""

msgid ""
"This method will validate all fields on your model. The optional ``exclude`` "
"argument lets you provide a list of field names to exclude from validation. "
"It will raise a :exc:`~django.core.exceptions.ValidationError` if any fields "
"fail validation."
msgstr ""

msgid ""
"The second step ``full_clean()`` performs is to call :meth:`Model.clean()`. "
"This method should be overridden to perform custom validation on your model."
msgstr ""

msgid ""
"This method should be used to provide custom model validation, and to modify "
"attributes on your model if desired. For instance, you could use it to "
"automatically provide a value for a field, or to do validation that requires "
"access to more than a single field::"
msgstr ""

msgid ""
"Note, however, that like :meth:`Model.full_clean()`, a model's ``clean()`` "
"method is not invoked when you call your model's :meth:`~Model.save()` "
"method."
msgstr ""

msgid ""
"In the above example, the :exc:`~django.core.exceptions.ValidationError` "
"exception raised by ``Model.clean()`` was instantiated with a string, so it "
"will be stored in a special error dictionary key, :data:`~django.core."
"exceptions.NON_FIELD_ERRORS`. This key is used for errors that are tied to "
"the entire model instead of to a specific field::"
msgstr ""

msgid ""
"To assign exceptions to a specific field, instantiate the :exc:`~django.core."
"exceptions.ValidationError` with a dictionary, where the keys are the field "
"names. We could update the previous example to assign the error to the "
"``pub_date`` field::"
msgstr ""

msgid ""
"If you detect errors in multiple fields during ``Model.clean()``, you can "
"also pass a dictionary mapping field names to errors::"
msgstr ""

msgid ""
"Finally, ``full_clean()`` will check any unique constraints on your model."
msgstr ""

msgid ""
"How to raise field-specific validation errors if those fields don't appear "
"in a ``ModelForm``"
msgstr ""

msgid ""
"You can't raise validation errors in ``Model.clean()`` for fields that don't "
"appear in a model form (a form may limit its fields using ``Meta.fields`` or "
"``Meta.exclude``). Doing so will raise a ``ValueError`` because the "
"validation error won't be able to be associated with the excluded field."
msgstr ""

msgid ""
"To work around this dilemma, instead override :meth:`Model.clean_fields() "
"<django.db.models.Model.clean_fields>` as it receives the list of fields "
"that are excluded from validation. For example::"
msgstr ""

msgid ""
"This method is similar to :meth:`~Model.clean_fields`, but validates all "
"uniqueness constraints on your model instead of individual field values. The "
"optional ``exclude`` argument allows you to provide a list of field names to "
"exclude from validation. It will raise a :exc:`~django.core.exceptions."
"ValidationError` if any fields fail validation."
msgstr ""

msgid ""
"Note that if you provide an ``exclude`` argument to ``validate_unique()``, "
"any :attr:`~django.db.models.Options.unique_together` constraint involving "
"one of the fields you provided will not be checked."
msgstr ""

msgid "Saving objects"
msgstr "Menyimpan obyek"

msgid "To save an object back to the database, call ``save()``:"
msgstr ""
"Untuk menyimpan sebuah obyek kembali ke basisdata, panggil ``save()``: "

msgid ""
"If you want customized saving behavior, you can override this ``save()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

msgid ""
"The model save process also has some subtleties; see the sections below."
msgstr ""

msgid "Auto-incrementing primary keys"
msgstr ""

msgid ""
"If a model has an :class:`~django.db.models.AutoField` — an auto-"
"incrementing primary key — then that auto-incremented value will be "
"calculated and saved as an attribute on your object the first time you call "
"``save()``::"
msgstr ""

msgid ""
"There's no way to tell what the value of an ID will be before you call "
"``save()``, because that value is calculated by your database, not by Django."
msgstr ""

msgid ""
"For convenience, each model has an :class:`~django.db.models.AutoField` "
"named ``id`` by default unless you explicitly specify ``primary_key=True`` "
"on a field in your model. See the documentation for :class:`~django.db."
"models.AutoField` for more details."
msgstr ""

msgid "The ``pk`` property"
msgstr "Sifat ``pk``"

msgid ""
"Regardless of whether you define a primary key field yourself, or let Django "
"supply one for you, each model will have a property called ``pk``. It "
"behaves like a normal attribute on the model, but is actually an alias for "
"whichever attribute is the primary key field for the model. You can read and "
"set this value, just as you would for any other attribute, and it will "
"update the correct field in the model."
msgstr ""

msgid "Explicitly specifying auto-primary-key values"
msgstr ""

msgid ""
"If a model has an :class:`~django.db.models.AutoField` but you want to "
"define a new object's ID explicitly when saving, just define it explicitly "
"before saving, rather than relying on the auto-assignment of the ID::"
msgstr ""

msgid ""
"If you assign auto-primary-key values manually, make sure not to use an "
"already-existing primary-key value! If you create a new object with an "
"explicit primary-key value that already exists in the database, Django will "
"assume you're changing the existing record rather than creating a new one."
msgstr ""

msgid ""
"Given the above ``'Cheddar Talk'`` blog example, this example would override "
"the previous record in the database::"
msgstr ""

msgid ""
"See `How Django knows to UPDATE vs. INSERT`_, below, for the reason this "
"happens."
msgstr ""

msgid ""
"Explicitly specifying auto-primary-key values is mostly useful for bulk-"
"saving objects, when you're confident you won't have primary-key collision."
msgstr ""

msgid ""
"If you're using PostgreSQL, the sequence associated with the primary key "
"might need to be updated; see :ref:`manually-specified-autoincrement-pk`."
msgstr ""

msgid "What happens when you save?"
msgstr "Apa yang terjadi ketika anda menyimpan?"

msgid "When you save an object, Django performs the following steps:"
msgstr ""
"Ketika anda menyimpan sebuah obyek, Django melakukan langkah-langkah berikut:"

msgid ""
"**Emit a pre-save signal.** The :data:`~django.db.models.signals.pre_save` "
"signal is sent, allowing any functions listening for that signal to do "
"something."
msgstr ""

msgid ""
"**Preprocess the data.** Each field's :meth:`~django.db.models.Field."
"pre_save` method is called to perform any automated data modification that's "
"needed. For example, the date/time fields override ``pre_save()`` to "
"implement :attr:`~django.db.models.DateField.auto_now_add` and :attr:"
"`~django.db.models.DateField.auto_now`."
msgstr ""

msgid ""
"**Prepare the data for the database.** Each field's :meth:`~django.db.models."
"Field.get_db_prep_save` method is asked to provide its current value in a "
"data type that can be written to the database."
msgstr ""

msgid ""
"Most fields don't require data preparation. Simple data types, such as "
"integers and strings, are 'ready to write' as a Python object. However, more "
"complex data types often require some modification."
msgstr ""

msgid ""
"For example, :class:`~django.db.models.DateField` fields use a Python "
"``datetime`` object to store data. Databases don't store ``datetime`` "
"objects, so the field value must be converted into an ISO-compliant date "
"string for insertion into the database."
msgstr ""

msgid ""
"**Insert the data into the database.** The preprocessed, prepared data is "
"composed into an SQL statement for insertion into the database."
msgstr ""

msgid ""
"**Emit a post-save signal.** The :data:`~django.db.models.signals.post_save` "
"signal is sent, allowing any functions listening for that signal to do "
"something."
msgstr ""

msgid "How Django knows to UPDATE vs. INSERT"
msgstr "Bagaimana Django mengetahui untuk UPDATE lawan INSERT"

msgid ""
"You may have noticed Django database objects use the same ``save()`` method "
"for creating and changing objects. Django abstracts the need to use "
"``INSERT`` or ``UPDATE`` SQL statements. Specifically, when you call "
"``save()``, Django follows this algorithm:"
msgstr ""

msgid ""
"If the object's primary key attribute is set to a value that evaluates to "
"``True`` (i.e., a value other than ``None`` or the empty string), Django "
"executes an ``UPDATE``."
msgstr ""

msgid ""
"If the object's primary key attribute is *not* set or if the ``UPDATE`` "
"didn't update anything, Django executes an ``INSERT``."
msgstr ""

msgid ""
"The one gotcha here is that you should be careful not to specify a primary-"
"key value explicitly when saving new objects, if you cannot guarantee the "
"primary-key value is unused. For more on this nuance, see `Explicitly "
"specifying auto-primary-key values`_ above and `Forcing an INSERT or "
"UPDATE`_ below."
msgstr ""

msgid ""
"In Django 1.5 and earlier, Django did a ``SELECT`` when the primary key "
"attribute was set. If the ``SELECT`` found a row, then Django did an "
"``UPDATE``, otherwise it did an ``INSERT``. The old algorithm results in one "
"more query in the ``UPDATE`` case. There are some rare cases where the "
"database doesn't report that a row was updated even if the database contains "
"a row for the object's primary key value. An example is the PostgreSQL ``ON "
"UPDATE`` trigger which returns ``NULL``. In such cases it is possible to "
"revert to the old algorithm by setting the :attr:`~django.db.models.Options."
"select_on_save` option to ``True``."
msgstr ""

msgid "Forcing an INSERT or UPDATE"
msgstr "Memaksa sebuah INSERT atau UPDATE"

msgid ""
"In some rare circumstances, it's necessary to be able to force the :meth:"
"`~Model.save()` method to perform an SQL ``INSERT`` and not fall back to "
"doing an ``UPDATE``. Or vice-versa: update, if possible, but not insert a "
"new row. In these cases you can pass the ``force_insert=True`` or "
"``force_update=True`` parameters to the :meth:`~Model.save()` method. "
"Obviously, passing both parameters is an error: you cannot both insert *and* "
"update at the same time!"
msgstr ""

msgid ""
"It should be very rare that you'll need to use these parameters. Django will "
"almost always do the right thing and trying to override that will lead to "
"errors that are difficult to track down. This feature is for advanced use "
"only."
msgstr ""

msgid ""
"Using ``update_fields`` will force an update similarly to ``force_update``."
msgstr ""
"Menggunakan ``update_fields`` akan memaksa sebuah perbaharuan mirip pada "
"``force_update``."

msgid "Updating attributes based on existing fields"
msgstr "Memperbaharui atribut berdasarkan pada bidang yang ada"

msgid ""
"Sometimes you'll need to perform a simple arithmetic task on a field, such "
"as incrementing or decrementing the current value. The obvious way to "
"achieve this is to do something like::"
msgstr ""

msgid ""
"If the old ``number_sold`` value retrieved from the database was 10, then "
"the value of 11 will be written back to the database."
msgstr ""

msgid ""
"The process can be made robust, :ref:`avoiding a race condition <avoiding-"
"race-conditions-using-f>`, as well as slightly faster by expressing the "
"update relative to the original field value, rather than as an explicit "
"assignment of a new value. Django provides :class:`F expressions <django.db."
"models.F>` for performing this kind of relative update. Using :class:`F "
"expressions <django.db.models.F>`, the previous example is expressed as::"
msgstr ""

msgid ""
"For more details, see the documentation on :class:`F expressions <django.db."
"models.F>` and their :ref:`use in update queries <topics-db-queries-update>`."
msgstr ""

msgid "Specifying which fields to save"
msgstr "Menentukan bidang-bidang mana yang disimpan"

msgid ""
"If ``save()`` is passed a list of field names in keyword argument "
"``update_fields``, only the fields named in that list will be updated. This "
"may be desirable if you want to update just one or a few fields on an "
"object. There will be a slight performance benefit from preventing all of "
"the model fields from being updated in the database. For example::"
msgstr ""

msgid ""
"The ``update_fields`` argument can be any iterable containing strings. An "
"empty ``update_fields`` iterable will skip the save. A value of None will "
"perform an update on all fields."
msgstr ""

msgid "Specifying ``update_fields`` will force an update."
msgstr ""

msgid ""
"When saving a model fetched through deferred model loading (:meth:`~django."
"db.models.query.QuerySet.only()` or :meth:`~django.db.models.query.QuerySet."
"defer()`) only the fields loaded from the DB will get updated. In effect "
"there is an automatic ``update_fields`` in this case. If you assign or "
"change any deferred field value, the field will be added to the updated "
"fields."
msgstr ""

msgid "Deleting objects"
msgstr "menghapus obyek"

msgid ""
"Issues an SQL ``DELETE`` for the object. This only deletes the object in the "
"database; the Python instance will still exist and will still have data in "
"its fields. This method returns the number of objects deleted and a "
"dictionary with the number of deletions per object type."
msgstr ""

msgid ""
"For more details, including how to delete objects in bulk, see :ref:`topics-"
"db-queries-delete`."
msgstr ""

msgid ""
"If you want customized deletion behavior, you can override the ``delete()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

msgid ""
"Sometimes with :ref:`multi-table inheritance <multi-table-inheritance>` you "
"may want to delete only a child model's data. Specifying "
"``keep_parents=True`` will keep the parent model's data."
msgstr ""

msgid "Pickling objects"
msgstr ""

msgid ""
"When you :mod:`pickle` a model, its current state is pickled. When you "
"unpickle it, it'll contain the model instance at the moment it was pickled, "
"rather than the data that's currently in the database."
msgstr ""

msgid "You can't share pickles between versions"
msgstr ""

msgid ""
"Pickles of models are only valid for the version of Django that was used to "
"generate them. If you generate a pickle using Django version N, there is no "
"guarantee that pickle will be readable with Django version N+1. Pickles "
"should not be used as part of a long-term archival strategy."
msgstr ""

msgid ""
"Since pickle compatibility errors can be difficult to diagnose, such as "
"silently corrupted objects, a ``RuntimeWarning`` is raised when you try to "
"unpickle a model in a Django version that is different than the one in which "
"it was pickled."
msgstr ""

msgid "Other model instance methods"
msgstr ""

msgid "A few object methods have special purposes."
msgstr ""

msgid "``__str__()``"
msgstr "``__str__()``"

msgid ""
"The ``__str__()`` method is called whenever you call ``str()`` on an object. "
"Django uses ``str(obj)`` in a number of places. Most notably, to display an "
"object in the Django admin site and as the value inserted into a template "
"when it displays an object. Thus, you should always return a nice, human-"
"readable representation of the model from the ``__str__()`` method."
msgstr ""

msgid ""
"If you'd like compatibility with Python 2, you can decorate your model class "
"with :func:`~django.utils.encoding.python_2_unicode_compatible` as shown "
"above."
msgstr ""

msgid "``__eq__()``"
msgstr "``__eq__()``"

msgid ""
"The equality method is defined such that instances with the same primary key "
"value and the same concrete class are considered equal, except that "
"instances with a primary key value of ``None`` aren't equal to anything "
"except themselves. For proxy models, concrete class is defined as the "
"model's first non-proxy parent; for all other models it's simply the model's "
"class."
msgstr ""

msgid "``__hash__()``"
msgstr "``__hash__()``"

msgid ""
"The ``__hash__()`` method is based on the instance's primary key value. It "
"is effectively ``hash(obj.pk)``. If the instance doesn't have a primary key "
"value then a ``TypeError`` will be raised (otherwise the ``__hash__()`` "
"method would return different values before and after the instance is saved, "
"but changing the :meth:`~object.__hash__` value of an instance is forbidden "
"in Python."
msgstr ""

msgid "``get_absolute_url()``"
msgstr "``get_absolute_url()``"

msgid ""
"Define a ``get_absolute_url()`` method to tell Django how to calculate the "
"canonical URL for an object. To callers, this method should appear to return "
"a string that can be used to refer to the object over HTTP."
msgstr ""

msgid ""
"While this code is correct and simple, it may not be the most portable way "
"to to write this kind of method. The :func:`~django.urls.reverse` function "
"is usually the best approach."
msgstr ""

msgid ""
"One place Django uses ``get_absolute_url()`` is in the admin app. If an "
"object defines this method, the object-editing page will have a \"View on "
"site\" link that will jump you directly to the object's public view, as "
"given by ``get_absolute_url()``."
msgstr ""

msgid ""
"Similarly, a couple of other bits of Django, such as the :doc:`syndication "
"feed framework </ref/contrib/syndication>`, use ``get_absolute_url()`` when "
"it is defined. If it makes sense for your model's instances to each have a "
"unique URL, you should define ``get_absolute_url()``."
msgstr ""

msgid ""
"You should avoid building the URL from unvalidated user input, in order to "
"reduce possibilities of link or redirect poisoning::"
msgstr ""

msgid ""
"If ``self.name`` is ``'/example.com'`` this returns ``'//example.com/'`` "
"which, in turn, is a valid schema relative URL but not the expected ``'/"
"%2Fexample.com/'``."
msgstr ""

msgid ""
"It's good practice to use ``get_absolute_url()`` in templates, instead of "
"hard-coding your objects' URLs. For example, this template code is bad:"
msgstr ""

msgid "This template code is much better:"
msgstr "Kode cetakan ini jauh lebih baik:"

msgid ""
"The logic here is that if you change the URL structure of your objects, even "
"for something simple such as correcting a spelling error, you don't want to "
"have to track down every place that the URL might be created. Specify it "
"once, in ``get_absolute_url()`` and have all your other code call that one "
"place."
msgstr ""

msgid ""
"The string you return from ``get_absolute_url()`` **must** contain only "
"ASCII characters (required by the URI specification, :rfc:`2396`) and be URL-"
"encoded, if necessary."
msgstr ""

msgid ""
"Code and templates calling ``get_absolute_url()`` should be able to use the "
"result directly without any further processing. You may wish to use the "
"``django.utils.encoding.iri_to_uri()`` function to help with this if you are "
"using unicode strings containing characters outside the ASCII range at all."
msgstr ""

msgid "Extra instance methods"
msgstr ""

msgid ""
"In addition to :meth:`~Model.save()`, :meth:`~Model.delete()`, a model "
"object might have some of the following methods:"
msgstr ""

msgid ""
"For every field that has :attr:`~django.db.models.Field.choices` set, the "
"object will have a ``get_FOO_display()`` method, where ``FOO`` is the name "
"of the field. This method returns the \"human-readable\" value of the field."
msgstr ""

msgid ""
"For every :class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` that does not have :attr:`null=True <django.db.models.Field."
"null>`, the object will have ``get_next_by_FOO()`` and "
"``get_previous_by_FOO()`` methods, where ``FOO`` is the name of the field. "
"This returns the next and previous object with respect to the date field, "
"raising a :exc:`~django.db.models.Model.DoesNotExist` exception when "
"appropriate."
msgstr ""

msgid ""
"Both of these methods will perform their queries using the default manager "
"for the model. If you need to emulate filtering used by a custom manager, or "
"want to perform one-off custom filtering, both methods also accept optional "
"keyword arguments, which should be in the format described in :ref:`Field "
"lookups <field-lookups>`."
msgstr ""

msgid ""
"Note that in the case of identical date values, these methods will use the "
"primary key as a tie-breaker. This guarantees that no records are skipped or "
"duplicated. That also means you cannot use those methods on unsaved objects."
msgstr ""

msgid "Other attributes"
msgstr "Atribut-atribut lain"

msgid "``DoesNotExist``"
msgstr "``DoesNotExist``"

msgid ""
"This exception is raised by the ORM in a couple places, for example by :meth:"
"`QuerySet.get() <django.db.models.query.QuerySet.get>` when an object is not "
"found for the given query parameters."
msgstr ""

msgid ""
"Django provides a ``DoesNotExist`` exception as an attribute of each model "
"class to identify the class of object that could not be found and to allow "
"you to catch a particular model class with ``try/except``. The exception is "
"a subclass of :exc:`django.core.exceptions.ObjectDoesNotExist`."
msgstr ""

msgid "Lookup API reference"
msgstr ""

msgid ""
"This document has the API references of lookups, the Django API for building "
"the ``WHERE`` clause of a database query. To learn how to *use* lookups, "
"see :doc:`/topics/db/queries`; to learn how to *create* new lookups, see :"
"doc:`/howto/custom-lookups`."
msgstr ""

msgid ""
"The lookup API has two components: a :class:`~lookups.RegisterLookupMixin` "
"class that registers lookups, and the :ref:`Query Expression API <query-"
"expression>`, a set of methods that a class has to implement to be "
"registrable as a lookup."
msgstr ""

msgid ""
"Django has two base classes that follow the query expression API and from "
"where all Django builtin lookups are derived:"
msgstr ""

msgid ""
":class:`Lookup`: to lookup a field (e.g. the ``exact`` of "
"``field_name__exact``)"
msgstr ""

msgid ":class:`Transform`: to transform a field"
msgstr ""

msgid "A lookup expression consists of three parts:"
msgstr ""

msgid ""
"Fields part (e.g. ``Book.objects.filter(author__best_friends__first_name..."
"``);"
msgstr ""

msgid ""
"Transforms part (may be omitted) (e.g. ``__lower__first3chars__reversed``);"
msgstr ""

msgid ""
"A lookup (e.g. ``__icontains``) that, if omitted, defaults to ``__exact``."
msgstr ""

msgid "Registration API"
msgstr ""

msgid ""
"Django uses :class:`~lookups.RegisterLookupMixin` to give a class the "
"interface to register lookups on itself. The two prominent examples are :"
"class:`~django.db.models.Field`, the base class of all model fields, and "
"``Aggregate``, the base class of all Django aggregates."
msgstr ""

msgid "A mixin that implements the lookup API on a class."
msgstr ""

msgid ""
"Registers a new lookup in the class. For example ``DateField."
"register_lookup(YearExact)`` will register ``YearExact`` lookup on "
"``DateField``. It overrides a lookup that already exists with the same name. "
"``lookup_name`` will be used for this lookup if provided, otherwise ``lookup."
"lookup_name`` will be used."
msgstr ""

msgid ""
"Returns the :class:`Lookup` named ``lookup_name`` registered in the class. "
"The default implementation looks recursively on all parent classes and "
"checks if any has a registered lookup named ``lookup_name``, returning the "
"first match."
msgstr ""

msgid ""
"Returns a :class:`Transform` named ``transform_name``. The default "
"implementation looks recursively on all parent classes to check if any has "
"the registered transform named ``transform_name``, returning the first match."
msgstr ""

msgid ""
"For a class to be a lookup, it must follow the :ref:`Query Expression API "
"<query-expression>`. :class:`~Lookup` and :class:`~Transform` naturally "
"follow this API."
msgstr ""

msgid "The Query Expression API"
msgstr ""

msgid ""
"The query expression API is a common set of methods that classes define to "
"be usable in query expressions to translate themselves into SQL expressions. "
"Direct field references, aggregates, and ``Transform`` are examples that "
"follow this API. A class is said to follow the query expression API when it "
"implements the following methods:"
msgstr ""

msgid ""
"Responsible for producing the query string and parameters for the "
"expression. The ``compiler`` is an ``SQLCompiler`` object, which has a "
"``compile()`` method that can be used to compile other expressions. The "
"``connection`` is the connection used to execute the query."
msgstr ""

msgid ""
"Calling ``expression.as_sql()`` is usually incorrect - instead ``compiler."
"compile(expression)`` should be used. The ``compiler.compile()`` method will "
"take care of calling vendor-specific methods of the expression."
msgstr ""

msgid ""
"Custom keyword arguments may be defined on this method if it's likely that "
"``as_vendorname()`` methods or subclasses will need to supply data to "
"override the generation of the SQL string. See :meth:`Func.as_sql` for "
"example usage."
msgstr ""

msgid ""
"Works like ``as_sql()`` method. When an expression is compiled by ``compiler."
"compile()``, Django will first try to call ``as_vendorname()``, where "
"``vendorname`` is the vendor name of the backend used for executing the "
"query. The ``vendorname`` is one of ``postgresql``, ``oracle``, ``sqlite``, "
"or ``mysql`` for Django's built-in backends."
msgstr ""

msgid ""
"Must return the lookup named ``lookup_name``. For instance, by returning "
"``self.output_field.get_lookup(lookup_name)``."
msgstr ""

msgid ""
"Must return the lookup named ``transform_name``. For instance, by returning "
"``self.output_field.get_transform(transform_name)``."
msgstr ""

msgid ""
"Defines the type of class returned by the ``get_lookup()`` method. It must "
"be a :class:`~django.db.models.Field` instance."
msgstr ""

msgid "``Transform`` reference"
msgstr ""

msgid ""
"A ``Transform`` is a generic class to implement field transformations. A "
"prominent example is ``__year`` that transforms a ``DateField`` into a "
"``IntegerField``."
msgstr ""

msgid ""
"The notation to use a ``Transform`` in an lookup expression is "
"``<expression>__<transformation>`` (e.g. ``date__year``)."
msgstr ""

msgid ""
"This class follows the :ref:`Query Expression API <query-expression>`, which "
"implies that you can use ``<expression>__<transform1>__<transform2>``. It's "
"a specialized :ref:`Func() expression <func-expressions>` that only accepts "
"one argument.  It can also be used on the right hand side of a filter or "
"directly as an annotation."
msgstr ""

msgid ""
"A boolean indicating whether this transformation should apply to both "
"``lhs`` and ``rhs``. Bilateral transformations will be applied to ``rhs`` in "
"the same order as they appear in the lookup expression. By default it is set "
"to ``False``. For example usage, see :doc:`/howto/custom-lookups`."
msgstr ""

msgid ""
"The left-hand side - what is being transformed. It must follow the :ref:"
"`Query Expression API <query-expression>`."
msgstr ""

msgid ""
"The name of the lookup, used for identifying it on parsing query "
"expressions. It cannot contain the string ``\"__\"``."
msgstr ""

msgid ""
"Defines the class this transformation outputs. It must be a :class:`~django."
"db.models.Field` instance. By default is the same as its ``lhs."
"output_field``."
msgstr ""

msgid "``Lookup`` reference"
msgstr ""

msgid ""
"A ``Lookup`` is a generic class to implement lookups. A lookup is a query "
"expression with a left-hand side, :attr:`lhs`; a right-hand side, :attr:"
"`rhs`; and a ``lookup_name`` that is used to produce a boolean comparison "
"between ``lhs`` and ``rhs`` such as ``lhs in rhs`` or ``lhs > rhs``."
msgstr ""

msgid ""
"The notation to use a lookup in an expression is "
"``<lhs>__<lookup_name>=<rhs>``."
msgstr ""

msgid ""
"This class doesn't follow the :ref:`Query Expression API <query-expression>` "
"since it has ``=<rhs>`` on its construction: lookups are always the end of a "
"lookup expression."
msgstr ""

msgid ""
"The left-hand side - what is being looked up. The object must follow the :"
"ref:`Query Expression API <query-expression>`."
msgstr ""

msgid ""
"The right-hand side - what ``lhs`` is being compared against. It can be a "
"plain value, or something that compiles into SQL, typically an ``F()`` "
"object or a ``QuerySet``."
msgstr ""

msgid ""
"The name of this lookup, used to identify it on parsing query expressions. "
"It cannot contain the string ``\"__\"``."
msgstr ""

msgid ""
"Returns a tuple ``(lhs_string, lhs_params)``, as returned by ``compiler."
"compile(lhs)``. This method can be overridden to tune how the ``lhs`` is "
"processed."
msgstr ""

msgid ""
"``compiler`` is an ``SQLCompiler`` object, to be used like ``compiler."
"compile(lhs)`` for compiling ``lhs``. The ``connection`` can be used for "
"compiling vendor specific SQL. If ``lhs`` is not ``None``, use it as the "
"processed ``lhs`` instead of ``self.lhs``."
msgstr ""

msgid "Behaves the same way as :meth:`process_lhs`, for the right-hand side."
msgstr ""

msgid "Model ``_meta`` API"
msgstr ""

msgid ""
"The model ``_meta`` API is at the core of the Django ORM. It enables other "
"parts of the system such as lookups, queries, forms, and the admin to "
"understand the capabilities of each model. The API is accessible through the "
"``_meta`` attribute of each model class, which is an instance of an ``django."
"db.models.options.Options`` object."
msgstr ""

msgid "Methods that it provides can be used to:"
msgstr ""

msgid "Retrieve all field instances of a model"
msgstr ""

msgid "Retrieve a single field instance of a model by name"
msgstr ""

msgid "Field access API"
msgstr ""

msgid "Retrieving a single field instance of a model by name"
msgstr ""

msgid "Returns the field instance given a name of a field."
msgstr ""

msgid ""
"``field_name`` can be the name of a field on the model, a field on an "
"abstract or inherited model, or a field defined on another model that points "
"to the model. In the latter case, the ``field_name`` will be the "
"``related_name`` defined by the user or the name automatically generated by "
"Django itself."
msgstr ""

msgid ""
":attr:`Hidden fields <django.db.models.Field.hidden>` cannot be retrieved by "
"name."
msgstr ""

msgid ""
"If a field with the given name is not found a :class:`~django.core."
"exceptions.FieldDoesNotExist` exception will be raised."
msgstr ""

msgid "Retrieving all field instances of a model"
msgstr "Mengambil semua instance bidang dari sebuah model"

msgid ""
"Returns a tuple of fields associated with a model. ``get_fields()`` accepts "
"two parameters that can be used to control which fields are returned:"
msgstr ""

msgid "``include_parents``"
msgstr "``include_parents``"

msgid ""
"``True`` by default. Recursively includes fields defined on parent classes. "
"If set to ``False``, ``get_fields()`` will only search for fields declared "
"directly on the current model. Fields from models that directly inherit from "
"abstract models or proxy classes are considered to be local, not on the "
"parent."
msgstr ""

msgid "``include_hidden``"
msgstr "``include_hidden``"

msgid ""
"``False`` by default. If set to ``True``, ``get_fields()`` will include "
"fields that are used to back other field's functionality. This will also "
"include any fields that have a ``related_name`` (such as :class:`~django.db."
"models.ManyToManyField`, or :class:`~django.db.models.ForeignKey`) that "
"start with a \"+\"."
msgstr ""

msgid "Migrating from the old API"
msgstr "Berpindah dari API lama"

msgid ""
"As part of the formalization of the ``Model._meta`` API (from the :class:"
"`django.db.models.options.Options` class), a number of methods and "
"properties have been deprecated and will be removed in Django 1.10."
msgstr ""

msgid "These old APIs can be replicated by either:"
msgstr ""

msgid ""
"invoking :meth:`Options.get_field() <django.db.models.options.Options."
"get_field()>`, or;"
msgstr ""

msgid ""
"invoking :meth:`Options.get_fields() <django.db.models.options.Options."
"get_fields()>` to retrieve a list of all fields, and then filtering this "
"list using the :ref:`field attributes <model-field-attributes>` that "
"describe (or retrieve, in the case of ``_with_model`` variants) the "
"properties of the desired fields."
msgstr ""

msgid ""
"Although it's possible to make strictly equivalent replacements of the old "
"methods, that might not be the best approach. Taking the time to refactor "
"any field loops to make better use of the new API - and possibly include "
"fields that were previously excluded - will almost certainly result in "
"better code."
msgstr ""

msgid ""
"Assuming you have a model named ``MyModel``, the following substitutions can "
"be made to convert your code to the new API:"
msgstr ""

msgid "``MyModel._meta.get_field(name)`` becomes::"
msgstr "``MyModel._meta.get_field(name)`` menjadi::"

msgid "then check if:"
msgstr "kemudian periksa jika:"

msgid ""
"``f.auto_created == False``, because the new ``get_field()`` API will find "
"\"reverse\" relations, and:"
msgstr ""

msgid ""
"``f.is_relation and f.related_model is None``, because the new "
"``get_field()`` API will find :class:`~django.contrib.contenttypes.fields."
"GenericForeignKey` relations."
msgstr ""

msgid ""
"``MyModel._meta.get_field_by_name(name)`` returns a tuple of these four "
"values with the following replacements:"
msgstr ""

msgid "``field`` can be found by ``MyModel._meta.get_field(name)``"
msgstr ""

msgid ""
"``model`` can be found through the :attr:`~django.db.models.Field.model` "
"attribute on the field."
msgstr ""
"``model`` dapat ditemukan melalui atribut  :attr:`~django.db.models.Field."
"model` pada bidang."

msgid ""
"``direct`` can be found by: ``not field.auto_created or field.concrete``"
msgstr ""
"``direct`` dapat ditemukan oleh: ``not field.auto_created or field.concrete``"

msgid ""
"The :attr:`~django.db.models.Field.auto_created` check excludes all \"forward"
"\" and \"reverse\" relations that are created by Django, but this also "
"includes ``AutoField`` and ``OneToOneField`` on proxy models. We avoid "
"filtering out these attributes using the :attr:`concrete <django.db.models."
"Field.concrete>` attribute."
msgstr ""

msgid ""
"``m2m`` can be found through the :attr:`~django.db.models.Field."
"many_to_many` attribute on the field."
msgstr ""

msgid "``MyModel._meta.get_fields_with_model()`` becomes::"
msgstr "``MyModel._meta.get_fields_with_model()`` menjadi::"

msgid "``MyModel._meta.get_concrete_fields_with_model()`` becomes::"
msgstr "``MyModel._meta.get_concrete_fields_with_model()`` menjadi::"

msgid "``MyModel._meta.get_m2m_with_model()`` becomes::"
msgstr "``MyModel._meta.get_m2m_with_model()`` menjadi::"

msgid "``MyModel._meta.get_all_related_objects()`` becomes::"
msgstr "``MyModel._meta.get_all_related_objects()`` menjadi::"

msgid "``MyModel._meta.get_all_related_objects_with_model()`` becomes::"
msgstr "``MyModel._meta.get_all_related_objects_with_model()`` menjadi::"

msgid "``MyModel._meta.get_all_related_many_to_many_objects()`` becomes::"
msgstr "``MyModel._meta.get_all_related_many_to_many_objects()`` menjadi::"

msgid "``MyModel._meta.get_all_related_m2m_objects_with_model()`` becomes::"
msgstr "``MyModel._meta.get_all_related_m2m_objects_with_model()`` menjadi::"

msgid "``MyModel._meta.get_all_field_names()`` becomes::"
msgstr "``MyModel._meta.get_all_field_names()`` menjadi::"

msgid ""
"This provides a 100% backwards compatible replacement, ensuring that both "
"field names and attribute names ``ForeignKey``\\s are included, but fields "
"associated with ``GenericForeignKey``\\s are not. A simpler version would "
"be::"
msgstr ""

msgid ""
"While this isn't 100% backwards compatible, it may be sufficient in many "
"situations."
msgstr ""

msgid "Model ``Meta`` options"
msgstr "Pilihan-pilihan ``Meta`` model"

msgid ""
"This document explains all the possible :ref:`metadata options <meta-"
"options>` that you can give your model in its internal ``class Meta``."
msgstr ""

msgid "Available ``Meta`` options"
msgstr "Pilihan-pilihan ``Meta`` tersedia"

msgid "``abstract``"
msgstr "``abstract``"

msgid ""
"If ``abstract = True``, this model will be an :ref:`abstract base class "
"<abstract-base-classes>`."
msgstr ""
"Jika ``abstract = True``, model ini akan menjadi sebuah :ref:`abstract base "
"class <abstract-base-classes>`."

msgid ""
"If a model is defined outside of an application in :setting:"
"`INSTALLED_APPS`, it must declare which app it belongs to::"
msgstr ""
"Jika sebuah model ditentukan diluar dari sebuah aplikasi dalam :setting:"
"`INSTALLED_APPS`, itu harus menyatakan aplikasi mana miliknya:"

msgid ""
"If you want to represent a model with the format ``app_label.object_name`` "
"or ``app_label.model_name`` you can use ``model._meta.label`` or ``model."
"_meta.label_lower`` respectively."
msgstr ""

msgid "``base_manager_name``"
msgstr "``base_manager_name``"

msgid ""
"The name of the manager to use for the model's :attr:`~django.db.models."
"Model._base_manager`."
msgstr ""

msgid "``db_table``"
msgstr "``db_table``"

msgid "The name of the database table to use for the model::"
msgstr "Nama dari tabel basisdata untuk digunakan untuk model::"

msgid ""
"To save you time, Django automatically derives the name of the database "
"table from the name of your model class and the app that contains it. A "
"model's database table name is constructed by joining the model's \"app label"
"\" -- the name you used in :djadmin:`manage.py startapp <startapp>` -- to "
"the model's class name, with an underscore between them."
msgstr ""

msgid ""
"For example, if you have an app ``bookstore`` (as created by ``manage.py "
"startapp bookstore``), a model defined as ``class Book`` will have a "
"database table named ``bookstore_book``."
msgstr ""

msgid ""
"To override the database table name, use the ``db_table`` parameter in "
"``class Meta``."
msgstr ""

msgid ""
"If your database table name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

msgid "Use lowercase table names for MySQL"
msgstr "Gunakan nama-nama tabel huruf kecil untuk MySQL"

msgid ""
"It is strongly advised that you use lowercase table names when you override "
"the table name via ``db_table``, particularly if you are using the MySQL "
"backend. See the :ref:`MySQL notes <mysql-notes>` for more details."
msgstr ""

msgid "Table name quoting for Oracle"
msgstr ""

msgid ""
"In order to meet the 30-char limitation Oracle has on table names, and match "
"the usual conventions for Oracle databases, Django may shorten table names "
"and turn them all-uppercase. To prevent such transformations, use a quoted "
"name as the value for ``db_table``::"
msgstr ""

msgid ""
"Such quoted names can also be used with Django's other supported database "
"backends; except for Oracle, however, the quotes have no effect. See the :"
"ref:`Oracle notes <oracle-notes>` for more details."
msgstr ""

msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this model. The default is the project's :setting:`DEFAULT_TABLESPACE` "
"setting, if set. If the backend doesn't support tablespaces, this option is "
"ignored."
msgstr ""

msgid "``default_manager_name``"
msgstr "``default_manager_name``"

msgid ""
"The name of the manager to use for the model's :attr:`~django.db.models."
"Model._default_manager`."
msgstr ""
"Nama dari pengelola untuk digunakan untuk :attr:`~django.db.models.Model."
"_default_manager` model."

msgid "``default_related_name``"
msgstr "``default_related_name``"

msgid ""
"The name that will be used by default for the relation from a related object "
"back to this one. The default is ``<model_name>_set``."
msgstr ""

msgid "This option also sets :attr:`~ForeignKey.related_query_name`."
msgstr "Pilihan ini juga menyetel :attr:`~ForeignKey.related_query_name`."

msgid ""
"As the reverse name for a field should be unique, be careful if you intend "
"to subclass your model. To work around name collisions, part of the name "
"should contain ``'%(app_label)s'`` and ``'%(model_name)s'``, which are "
"replaced respectively by the name of the application the model is in, and "
"the name of the model, both lowercased. See the paragraph on :ref:`related "
"names for abstract models <abstract-related-name>`."
msgstr ""

msgid ""
"This attribute now affects ``related_query_name``. The old query lookup name "
"is deprecated::"
msgstr ""

msgid "``get_latest_by``"
msgstr "``get_latest_by``"

msgid ""
"The name of an orderable field in the model, typically a :class:"
"`DateField`, :class:`DateTimeField`, or :class:`IntegerField`. This "
"specifies the default field to use in your model :class:`Manager`’s :meth:"
"`~django.db.models.query.QuerySet.latest` and :meth:`~django.db.models.query."
"QuerySet.earliest` methods."
msgstr ""

msgid "See the :meth:`~django.db.models.query.QuerySet.latest` docs for more."
msgstr ""
"Lihat dokumentasi :meth:`~django.db.models.query.QuerySet.latest` untuk "
"lebih."

msgid "``managed``"
msgstr "``managed``"

msgid ""
"Defaults to ``True``, meaning Django will create the appropriate database "
"tables in :djadmin:`migrate` or as part of migrations and remove them as "
"part of a :djadmin:`flush` management command. That is, Django *manages* the "
"database tables' lifecycles."
msgstr ""

msgid ""
"If ``False``, no database table creation or deletion operations will be "
"performed for this model. This is useful if the model represents an existing "
"table or a database view that has been created by some other means. This is "
"the *only* difference when ``managed=False``. All other aspects of model "
"handling are exactly the same as normal. This includes"
msgstr ""

msgid ""
"Adding an automatic primary key field to the model if you don't declare it.  "
"To avoid confusion for later code readers, it's recommended to specify all "
"the columns from the database table you are modeling when using unmanaged "
"models."
msgstr ""

msgid ""
"If a model with ``managed=False`` contains a :class:`~django.db.models."
"ManyToManyField` that points to another unmanaged model, then the "
"intermediate table for the many-to-many join will also not be created. "
"However, the intermediary table between one managed and one unmanaged model "
"*will* be created."
msgstr ""

msgid ""
"If you need to change this default behavior, create the intermediary table "
"as an explicit model (with ``managed`` set as needed) and use the :attr:"
"`ManyToManyField.through` attribute to make the relation use your custom "
"model."
msgstr ""

msgid ""
"For tests involving models with ``managed=False``, it's up to you to ensure "
"the correct tables are created as part of the test setup."
msgstr ""

msgid ""
"If you're interested in changing the Python-level behavior of a model class, "
"you *could* use ``managed=False`` and create a copy of an existing model. "
"However, there's a better approach for that situation: :ref:`proxy-models`."
msgstr ""

msgid "``order_with_respect_to``"
msgstr "``order_with_respect_to``"

msgid ""
"Makes this object orderable with respect to the given field, usually a "
"``ForeignKey``. This can be used to make related objects orderable with "
"respect to a parent object. For example, if an ``Answer`` relates to a "
"``Question`` object, and a question has more than one answer, and the order "
"of answers matters, you'd do this::"
msgstr ""

msgid ""
"When ``order_with_respect_to`` is set, two additional methods are provided "
"to retrieve and to set the order of the related objects: "
"``get_RELATED_order()`` and ``set_RELATED_order()``, where ``RELATED`` is "
"the lowercased model name. For example, assuming that a ``Question`` object "
"has multiple related ``Answer`` objects, the list returned contains the "
"primary keys of the related ``Answer`` objects::"
msgstr ""

msgid ""
"The order of a ``Question`` object's related ``Answer`` objects can be set "
"by passing in a list of ``Answer`` primary keys::"
msgstr ""

msgid ""
"The related objects also get two methods, ``get_next_in_order()`` and "
"``get_previous_in_order()``, which can be used to access those objects in "
"their proper order. Assuming the ``Answer`` objects are ordered by ``id``::"
msgstr ""

msgid "``order_with_respect_to`` implicitly sets the ``ordering`` option"
msgstr ""

msgid ""
"Internally, ``order_with_respect_to`` adds an additional field/database "
"column named ``_order`` and sets the model's :attr:`~Options.ordering` "
"option to this field. Consequently, ``order_with_respect_to`` and "
"``ordering`` cannot be used together, and the ordering added by "
"``order_with_respect_to`` will apply whenever you obtain a list of objects "
"of this model."
msgstr ""

msgid "Changing ``order_with_respect_to``"
msgstr ""

msgid ""
"Because ``order_with_respect_to`` adds a new database column, be sure to "
"make and apply the appropriate migrations if you add or change "
"``order_with_respect_to`` after your initial :djadmin:`migrate`."
msgstr ""

msgid "``ordering``"
msgstr "``ordering``"

msgid ""
"The default ordering for the object, for use when obtaining lists of "
"objects::"
msgstr ""

msgid ""
"This is a tuple or list of strings. Each string is a field name with an "
"optional \"-\" prefix, which indicates descending order. Fields without a "
"leading \"-\" will be ordered ascending. Use the string \"?\" to order "
"randomly."
msgstr ""

msgid "For example, to order by a ``pub_date`` field ascending, use this::"
msgstr ""
"Sebagai contoh, untuk mengurutkan berdasarkan bidang ``pub_date`` menaik, "
"gunakan ini::"

msgid "To order by ``pub_date`` descending, use this::"
msgstr "Untuk mengurutkan berdasarkan ``pub_date`` menurun, gunakan ini::"

msgid ""
"To order by ``pub_date`` descending, then by ``author`` ascending, use this::"
msgstr ""
"Untuk mengurutkan berdasarkan ``pub_date`` menurun, kemudian berdasarkan "
"``author`` menaik gunakan ini::"

msgid ""
"Default ordering also affects :ref:`aggregation queries <aggregation-"
"ordering-interaction>`."
msgstr "Pengurutan awalan juga mempengaruhi :ref:`aggregation queries 1`."

msgid ""
"Ordering is not a free operation. Each field you add to the ordering incurs "
"a cost to your database. Each foreign key you add will implicitly include "
"all of its default orderings as well."
msgstr ""

msgid ""
"If a query doesn't have an ordering specified, results are returned from the "
"database in an unspecified order. A particular ordering is guaranteed only "
"when ordering by a set of fields that uniquely identify each object in the "
"results. For example, if a ``name`` field isn't unique, ordering by it won't "
"guarantee objects with the same name always appear in the same order."
msgstr ""

msgid "``permissions``"
msgstr "``permissions``"

msgid ""
"Extra permissions to enter into the permissions table when creating this "
"object. Add, delete and change permissions are automatically created for "
"each model. This example specifies an extra permission, "
"``can_deliver_pizzas``::"
msgstr ""

msgid ""
"This is a list or tuple of 2-tuples in the format ``(permission_code, "
"human_readable_permission_name)``."
msgstr ""

msgid "``default_permissions``"
msgstr "``default_permissions``"

msgid ""
"Defaults to ``('add', 'change', 'delete')``. You may customize this list, "
"for example, by setting this to an empty list if your app doesn't require "
"any of the default permissions. It must be specified on the model before the "
"model is created by :djadmin:`migrate` in order to prevent any omitted "
"permissions from being created."
msgstr ""

msgid "``proxy``"
msgstr "``proxy``"

msgid ""
"If ``proxy = True``, a model which subclasses another model will be treated "
"as a :ref:`proxy model <proxy-models>`."
msgstr ""

msgid "``required_db_features``"
msgstr "``required_db_features``"

msgid ""
"List of database features that the current connection should have so that "
"the model is considered during the migration phase. For example, if you set "
"this list to ``['gis_enabled']``, the model will only be synchronized on GIS-"
"enabled databases. It's also useful to skip some models when testing with "
"several database backends. Avoid relations between models that may or may "
"not be created as the ORM doesn't handle this."
msgstr ""

msgid "``required_db_vendor``"
msgstr "``required_db_vendor``"

msgid ""
"Name of a supported database vendor that this model is specific to. Current "
"built-in vendor names are: ``sqlite``, ``postgresql``, ``mysql``, "
"``oracle``. If this attribute is not empty and the current connection vendor "
"doesn't match it, the model will not be synchronized."
msgstr ""

msgid "``select_on_save``"
msgstr "``select_on_save``"

msgid ""
"Determines if Django will use the pre-1.6 :meth:`django.db.models.Model."
"save()` algorithm. The old algorithm uses ``SELECT`` to determine if there "
"is an existing row to be updated. The new algorithm tries an ``UPDATE`` "
"directly. In some rare cases the ``UPDATE`` of an existing row isn't visible "
"to Django. An example is the PostgreSQL ``ON UPDATE`` trigger which returns "
"``NULL``. In such cases the new algorithm will end up doing an ``INSERT`` "
"even when a row exists in the database."
msgstr ""

msgid ""
"Usually there is no need to set this attribute. The default is ``False``."
msgstr "Biasanya tidak perlu menyetel atribut ini. Awalan adalah ``False``. "

msgid ""
"See :meth:`django.db.models.Model.save()` for more about the old and new "
"saving algorithm."
msgstr ""
"Lihat :meth:`django.db.models.Model.save()` untuk lebih tentang algoritma "
"penyimpanan lama dan baru."

msgid "``indexes``"
msgstr "``indexes``"

msgid ""
"A list of :doc:`indexes </ref/models/indexes>` that you want to define on "
"the model::"
msgstr ""
"Sebuah daftar dari :doc:`indexes 1` yang anda ingin tentukan pada model::"

msgid "``unique_together``"
msgstr "``unique_together``"

msgid "Sets of field names that, taken together, must be unique::"
msgstr ""
"Sekumpulan dari nama-nama bidang yang, diambil bersama-sama, harus unik::"

msgid ""
"This is a tuple of tuples that must be unique when considered together. It's "
"used in the Django admin and is enforced at the database level (i.e., the "
"appropriate ``UNIQUE`` statements are included in the ``CREATE TABLE`` "
"statement)."
msgstr ""

msgid ""
"For convenience, unique_together can be a single tuple when dealing with a "
"single set of fields::"
msgstr ""

msgid ""
"A :class:`~django.db.models.ManyToManyField` cannot be included in "
"unique_together. (It's not clear what that would even mean!) If you need to "
"validate uniqueness related to a :class:`~django.db.models.ManyToManyField`, "
"try using a signal or an explicit :attr:`through <ManyToManyField.through>` "
"model."
msgstr ""

msgid ""
"The ``ValidationError`` raised during model validation when the constraint "
"is violated has the ``unique_together`` error code."
msgstr ""

msgid "``index_together``"
msgstr "``index_together``"

msgid "Sets of field names that, taken together, are indexed::"
msgstr ""

msgid ""
"This list of fields will be indexed together (i.e. the appropriate ``CREATE "
"INDEX`` statement will be issued.)"
msgstr ""

msgid ""
"For convenience, ``index_together`` can be a single list when dealing with a "
"single set of fields::"
msgstr ""

msgid "A human-readable name for the object, singular::"
msgstr ""

msgid ""
"If this isn't given, Django will use a munged version of the class name: "
"``CamelCase`` becomes ``camel case``."
msgstr ""

msgid "``verbose_name_plural``"
msgstr "``verbose_name_plural``"

msgid "The plural name for the object::"
msgstr ""

msgid ""
"If this isn't given, Django will use :attr:`~Options.verbose_name` + ``\"s"
"\"``."
msgstr ""

msgid "Read-only ``Meta`` attributes"
msgstr "Atribut ``Meta`` hanya-baca"

msgid ""
"Representation of the object, returns ``app_label.object_name``, e.g. "
"``'polls.Question'``."
msgstr ""

msgid "``label_lower``"
msgstr "``label_lower``"

msgid ""
"Representation of the model, returns ``app_label.model_name``, e.g. ``'polls."
"question'``."
msgstr ""

msgid "``QuerySet`` API reference"
msgstr ""

msgid ""
"This document describes the details of the ``QuerySet`` API. It builds on "
"the material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

msgid "When ``QuerySet``\\s are evaluated"
msgstr ""

msgid ""
"Internally, a ``QuerySet`` can be constructed, filtered, sliced, and "
"generally passed around without actually hitting the database. No database "
"activity actually occurs until you do something to evaluate the queryset."
msgstr ""

msgid "You can evaluate a ``QuerySet`` in the following ways:"
msgstr ""

msgid ""
"**Iteration.** A ``QuerySet`` is iterable, and it executes its database "
"query the first time you iterate over it. For example, this will print the "
"headline of all entries in the database::"
msgstr ""

msgid ""
"Note: Don't use this if all you want to do is determine if at least one "
"result exists. It's more efficient to use :meth:`~QuerySet.exists`."
msgstr ""

msgid ""
"**Slicing.** As explained in :ref:`limiting-querysets`, a ``QuerySet`` can "
"be sliced, using Python's array-slicing syntax. Slicing an unevaluated "
"``QuerySet`` usually returns another unevaluated ``QuerySet``, but Django "
"will execute the database query if you use the \"step\" parameter of slice "
"syntax, and will return a list. Slicing a ``QuerySet`` that has been "
"evaluated also returns a list."
msgstr ""

msgid ""
"Also note that even though slicing an unevaluated ``QuerySet`` returns "
"another unevaluated ``QuerySet``, modifying it further (e.g., adding more "
"filters, or modifying ordering) is not allowed, since that does not "
"translate well into SQL and it would not have a clear meaning either."
msgstr ""

msgid ""
"**Pickling/Caching.** See the following section for details of what is "
"involved when `pickling QuerySets`_. The important thing for the purposes of "
"this section is that the results are read from the database."
msgstr ""

msgid ""
"**repr().** A ``QuerySet`` is evaluated when you call ``repr()`` on it. This "
"is for convenience in the Python interactive interpreter, so you can "
"immediately see your results when using the API interactively."
msgstr ""

msgid ""
"**len().** A ``QuerySet`` is evaluated when you call ``len()`` on it. This, "
"as you might expect, returns the length of the result list."
msgstr ""

msgid ""
"Note: If you only need to determine the number of records in the set (and "
"don't need the actual objects), it's much more efficient to handle a count "
"at the database level using SQL's ``SELECT COUNT(*)``. Django provides a :"
"meth:`~QuerySet.count` method for precisely this reason."
msgstr ""

msgid ""
"**list().** Force evaluation of a ``QuerySet`` by calling ``list()`` on it. "
"For example::"
msgstr ""

msgid ""
"**bool().** Testing a ``QuerySet`` in a boolean context, such as using "
"``bool()``, ``or``, ``and`` or an ``if`` statement, will cause the query to "
"be executed. If there is at least one result, the ``QuerySet`` is ``True``, "
"otherwise ``False``. For example::"
msgstr ""

msgid ""
"Note: If you only want to determine if at least one result exists (and don't "
"need the actual objects), it's more efficient to use :meth:`~QuerySet."
"exists`."
msgstr ""

msgid "Pickling ``QuerySet``\\s"
msgstr ""

msgid ""
"If you :mod:`pickle` a ``QuerySet``, this will force all the results to be "
"loaded into memory prior to pickling. Pickling is usually used as a "
"precursor to caching and when the cached queryset is reloaded, you want the "
"results to already be present and ready for use (reading from the database "
"can take some time, defeating the purpose of caching). This means that when "
"you unpickle a ``QuerySet``, it contains the results at the moment it was "
"pickled, rather than the results that are currently in the database."
msgstr ""

msgid ""
"If you only want to pickle the necessary information to recreate the "
"``QuerySet`` from the database at a later time, pickle the ``query`` "
"attribute of the ``QuerySet``. You can then recreate the original "
"``QuerySet`` (without any results loaded) using some code like this::"
msgstr ""

msgid ""
"The ``query`` attribute is an opaque object. It represents the internals of "
"the query construction and is not part of the public API. However, it is "
"safe (and fully supported) to pickle and unpickle the attribute's contents "
"as described here."
msgstr ""

msgid ""
"Pickles of ``QuerySets`` are only valid for the version of Django that was "
"used to generate them. If you generate a pickle using Django version N, "
"there is no guarantee that pickle will be readable with Django version N+1. "
"Pickles should not be used as part of a long-term archival strategy."
msgstr ""

msgid ""
"Since pickle compatibility errors can be difficult to diagnose, such as "
"silently corrupted objects, a ``RuntimeWarning`` is raised when you try to "
"unpickle a queryset in a Django version that is different than the one in "
"which it was pickled."
msgstr ""

msgid "``QuerySet`` API"
msgstr "API ``QuerySet``"

msgid "Here's the formal declaration of a ``QuerySet``:"
msgstr ""

msgid ""
"Usually when you'll interact with a ``QuerySet`` you'll use it by :ref:"
"`chaining filters <chaining-filters>`. To make this work, most ``QuerySet`` "
"methods return new querysets. These methods are covered in detail later in "
"this section."
msgstr ""

msgid ""
"The ``QuerySet`` class has two public attributes you can use for "
"introspection:"
msgstr ""

msgid ""
"``True`` if the ``QuerySet`` is ordered — i.e. has an :meth:`order_by()` "
"clause or a default ordering on the model. ``False`` otherwise."
msgstr ""

msgid "The database that will be used if this query is executed now."
msgstr "Basisdata yang akan digunakan jika permintaan ini dijalankan sekarang."

msgid ""
"The ``query`` parameter to :class:`QuerySet` exists so that specialized "
"query subclasses such as :class:`~django.contrib.gis.db.models.GeoQuerySet` "
"can reconstruct internal query state. The value of the parameter is an "
"opaque representation of that query state and is not part of a public API. "
"To put it simply: if you need to ask, you don't need to use it."
msgstr ""

msgid "Methods that return new ``QuerySet``\\s"
msgstr ""

msgid ""
"Django provides a range of ``QuerySet`` refinement methods that modify "
"either the types of results returned by the ``QuerySet`` or the way its SQL "
"query is executed."
msgstr ""

msgid "``filter()``"
msgstr "``filter()``"

msgid ""
"Returns a new ``QuerySet`` containing objects that match the given lookup "
"parameters."
msgstr ""

msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement."
msgstr ""

msgid ""
"If you need to execute more complex queries (for example, queries with "
"``OR`` statements), you can use :class:`Q objects <django.db.models.Q>`."
msgstr ""

msgid "``exclude()``"
msgstr "``exclude()``"

msgid ""
"Returns a new ``QuerySet`` containing objects that do *not* match the given "
"lookup parameters."
msgstr ""

msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement, and the whole thing is enclosed in a ``NOT()``."
msgstr ""

msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"AND whose ``headline`` is \"Hello\"::"
msgstr ""

msgid "In SQL terms, that evaluates to::"
msgstr "Dalam istilah SQL, yang menilai ke::"

msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"OR whose headline is \"Hello\"::"
msgstr ""

msgid "Note the second example is more restrictive."
msgstr "Catat bahwa contoh kedua lebih bersifat membatasi."

msgid "``annotate()``"
msgstr "``annotate()``"

msgid ""
"Annotates each object in the ``QuerySet`` with the provided list of :doc:"
"`query expressions </ref/models/expressions>`. An expression may be a simple "
"value, a reference to a field on the model (or any related models), or an "
"aggregate expression (averages, sums, etc.) that has been computed over the "
"objects that are related to the objects in the ``QuerySet``."
msgstr ""

msgid ""
"Each argument to ``annotate()`` is an annotation that will be added to each "
"object in the ``QuerySet`` that is returned."
msgstr ""

msgid ""
"The aggregation functions that are provided by Django are described in "
"`Aggregation Functions`_ below."
msgstr ""

msgid ""
"Annotations specified using keyword arguments will use the keyword as the "
"alias for the annotation. Anonymous arguments will have an alias generated "
"for them based upon the name of the aggregate function and the model field "
"that is being aggregated. Only aggregate expressions that reference a single "
"field can be anonymous arguments. Everything else must be a keyword argument."
msgstr ""

msgid ""
"For example, if you were manipulating a list of blogs, you may want to "
"determine how many entries have been made in each blog::"
msgstr ""

msgid ""
"The ``Blog`` model doesn't define an ``entry__count`` attribute by itself, "
"but by using a keyword argument to specify the aggregate function, you can "
"control the name of the annotation::"
msgstr ""

msgid ""
"For an in-depth discussion of aggregation, see :doc:`the topic guide on "
"Aggregation </topics/db/aggregation>`."
msgstr ""

msgid "``order_by()``"
msgstr "``order_by()``"

msgid ""
"By default, results returned by a ``QuerySet`` are ordered by the ordering "
"tuple given by the ``ordering`` option in the model's ``Meta``. You can "
"override this on a per-``QuerySet`` basis by using the ``order_by`` method."
msgstr ""

msgid ""
"The result above will be ordered by ``pub_date`` descending, then by "
"``headline`` ascending. The negative sign in front of ``\"-pub_date\"`` "
"indicates *descending* order. Ascending order is implied. To order randomly, "
"use ``\"?\"``, like so::"
msgstr ""

msgid ""
"Note: ``order_by('?')`` queries may be expensive and slow, depending on the "
"database backend you're using."
msgstr ""

msgid ""
"To order by a field in a different model, use the same syntax as when you "
"are querying across model relations. That is, the name of the field, "
"followed by a double underscore (``__``), followed by the name of the field "
"in the new model, and so on for as many models as you want to join. For "
"example::"
msgstr ""

msgid ""
"If you try to order by a field that is a relation to another model, Django "
"will use the default ordering on the related model, or order by the related "
"model's primary key if there is no :attr:`Meta.ordering <django.db.models."
"Options.ordering>` specified. For example, since the ``Blog`` model has no "
"default ordering specified::"
msgstr ""

msgid "...is identical to::"
msgstr "... mirip ke::"

msgid ""
"If ``Blog`` had ``ordering = ['name']``, then the first queryset would be "
"identical to::"
msgstr ""

msgid ""
"It is also possible to order a queryset by a related field, without "
"incurring the cost of a JOIN, by referring to the ``_id`` of the related "
"field::"
msgstr ""

msgid ""
"You can also order by :doc:`query expressions </ref/models/expressions>` by "
"calling ``asc()`` or ``desc()`` on the expression::"
msgstr ""

msgid ""
"Be cautious when ordering by fields in related models if you are also using :"
"meth:`distinct()`. See the note in :meth:`distinct` for an explanation of "
"how related model ordering can change the expected results."
msgstr ""

msgid ""
"It is permissible to specify a multi-valued field to order the results by "
"(for example, a :class:`~django.db.models.ManyToManyField` field, or the "
"reverse relation of a :class:`~django.db.models.ForeignKey` field)."
msgstr ""

msgid "Consider this case::"
msgstr "Pertimbangkan kasus ini::"

msgid ""
"Here, there could potentially be multiple ordering data for each ``Event``; "
"each ``Event`` with multiple ``children`` will be returned multiple times "
"into the new ``QuerySet`` that ``order_by()`` creates. In other words, using "
"``order_by()`` on the ``QuerySet`` could return more items than you were "
"working on to begin with - which is probably neither expected nor useful."
msgstr ""

msgid ""
"Thus, take care when using multi-valued field to order the results. **If** "
"you can be sure that there will only be one ordering piece of data for each "
"of the items you're ordering, this approach should not present problems. If "
"not, make sure the results are what you expect."
msgstr ""

msgid ""
"There's no way to specify whether ordering should be case sensitive. With "
"respect to case-sensitivity, Django will order results however your database "
"backend normally orders them."
msgstr ""

msgid ""
"You can order by a field converted to lowercase with :class:`~django.db."
"models.functions.Lower` which will achieve case-consistent ordering::"
msgstr ""

msgid ""
"If you don't want any ordering to be applied to a query, not even the "
"default ordering, call :meth:`order_by()` with no parameters."
msgstr ""

msgid ""
"You can tell if a query is ordered or not by checking the :attr:`.QuerySet."
"ordered` attribute, which will be ``True`` if the ``QuerySet`` has been "
"ordered in any way."
msgstr ""

msgid ""
"Each ``order_by()`` call will clear any previous ordering. For example, this "
"query will be ordered by ``pub_date`` and not ``headline``::"
msgstr ""

msgid "``reverse()``"
msgstr "``reverse()``"

msgid ""
"Use the ``reverse()`` method to reverse the order in which a queryset's "
"elements are returned. Calling ``reverse()`` a second time restores the "
"ordering back to the normal direction."
msgstr ""

msgid "To retrieve the \"last\" five items in a queryset, you could do this::"
msgstr ""

msgid ""
"Note that this is not quite the same as slicing from the end of a sequence "
"in Python. The above example will return the last item first, then the "
"penultimate item and so on. If we had a Python sequence and looked at "
"``seq[-5:]``, we would see the fifth-last item first. Django doesn't support "
"that mode of access (slicing from the end), because it's not possible to do "
"it efficiently in SQL."
msgstr ""

msgid ""
"Also, note that ``reverse()`` should generally only be called on a "
"``QuerySet`` which has a defined ordering (e.g., when querying against a "
"model which defines a default ordering, or when using :meth:`order_by()`). "
"If no such ordering is defined for a given ``QuerySet``, calling "
"``reverse()`` on it has no real effect (the ordering was undefined prior to "
"calling ``reverse()``, and will remain undefined afterward)."
msgstr ""

msgid "``distinct()``"
msgstr "``distinct()``"

msgid ""
"Returns a new ``QuerySet`` that uses ``SELECT DISTINCT`` in its SQL query. "
"This eliminates duplicate rows from the query results."
msgstr ""

msgid ""
"By default, a ``QuerySet`` will not eliminate duplicate rows. In practice, "
"this is rarely a problem, because simple queries such as ``Blog.objects."
"all()`` don't introduce the possibility of duplicate result rows. However, "
"if your query spans multiple tables, it's possible to get duplicate results "
"when a ``QuerySet`` is evaluated. That's when you'd use ``distinct()``."
msgstr ""

msgid ""
"Any fields used in an :meth:`order_by` call are included in the SQL "
"``SELECT`` columns. This can sometimes lead to unexpected results when used "
"in conjunction with ``distinct()``. If you order by fields from a related "
"model, those fields will be added to the selected columns and they may make "
"otherwise duplicate rows appear to be distinct. Since the extra columns "
"don't appear in the returned results (they are only there to support "
"ordering), it sometimes looks like non-distinct results are being returned."
msgstr ""

msgid ""
"Similarly, if you use a :meth:`values()` query to restrict the columns "
"selected, the columns used in any :meth:`order_by()` (or default model "
"ordering) will still be involved and may affect uniqueness of the results."
msgstr ""

msgid ""
"The moral here is that if you are using ``distinct()`` be careful about "
"ordering by related models. Similarly, when using ``distinct()`` and :meth:"
"`values()` together, be careful when ordering by fields not in the :meth:"
"`values()` call."
msgstr ""

msgid ""
"On PostgreSQL only, you can pass positional arguments (``*fields``) in order "
"to specify the names of fields to which the ``DISTINCT`` should apply. This "
"translates to a ``SELECT DISTINCT ON`` SQL query. Here's the difference. For "
"a normal ``distinct()`` call, the database compares *each* field in each row "
"when determining which rows are distinct. For a ``distinct()`` call with "
"specified field names, the database will only compare the specified field "
"names."
msgstr ""

msgid ""
"When you specify field names, you *must* provide an ``order_by()`` in the "
"``QuerySet``, and the fields in ``order_by()`` must start with the fields in "
"``distinct()``, in the same order."
msgstr ""

msgid ""
"For example, ``SELECT DISTINCT ON (a)`` gives you the first row for each "
"value in column ``a``. If you don't specify an order, you'll get some "
"arbitrary row."
msgstr ""

msgid "Examples (those after the first will only work on PostgreSQL)::"
msgstr ""

msgid ""
"Keep in mind that :meth:`order_by` uses any default related model ordering "
"that has been defined. You might have to explicitly order by the relation "
"``_id`` or referenced field to make sure the ``DISTINCT ON`` expressions "
"match those at the beginning of the ``ORDER BY`` clause. For example, if the "
"``Blog`` model defined an :attr:`~django.db.models.Options.ordering` by "
"``name``::"
msgstr ""

msgid ""
"...wouldn't work because the query would be ordered by ``blog__name`` thus "
"mismatching the ``DISTINCT ON`` expression. You'd have to explicitly order "
"by the relation `_id` field (``blog_id`` in this case) or the referenced one "
"(``blog__pk``) to make sure both expressions match."
msgstr ""

msgid "``values()``"
msgstr "``values()``"

msgid ""
"Returns a ``QuerySet`` that returns dictionaries, rather than model "
"instances, when used as an iterable."
msgstr ""

msgid ""
"Each of those dictionaries represents an object, with the keys corresponding "
"to the attribute names of model objects."
msgstr ""

msgid ""
"This example compares the dictionaries of ``values()`` with the normal model "
"objects::"
msgstr ""
"Contoh ini membandingkan kamus-kamus dari ``values()`` dengan obyek model "
"biasa::"

msgid ""
"The ``values()`` method takes optional positional arguments, ``*fields``, "
"which specify field names to which the ``SELECT`` should be limited. If you "
"specify the fields, each dictionary will contain only the field keys/values "
"for the fields you specify. If you don't specify the fields, each dictionary "
"will contain a key and value for every field in the database table."
msgstr ""

msgid ""
"The ``values()`` method also takes optional keyword arguments, "
"``**expressions``, which are passed through to :meth:`annotate`::"
msgstr ""

msgid ""
"An aggregate within a ``values()`` clause is applied before other arguments "
"within the same ``values()`` clause. If you need to group by another value, "
"add it to an earlier ``values()`` clause instead. For example::"
msgstr ""

msgid "A few subtleties that are worth mentioning:"
msgstr ""

msgid ""
"If you have a field called ``foo`` that is a :class:`~django.db.models."
"ForeignKey`, the default ``values()`` call will return a dictionary key "
"called ``foo_id``, since this is the name of the hidden model attribute that "
"stores the actual value (the ``foo`` attribute refers to the related model). "
"When you are calling ``values()`` and passing in field names, you can pass "
"in either ``foo`` or ``foo_id`` and you will get back the same thing (the "
"dictionary key will match the field name you passed in)."
msgstr ""

msgid ""
"When using ``values()`` together with :meth:`distinct()`, be aware that "
"ordering can affect the results. See the note in :meth:`distinct` for "
"details."
msgstr ""

msgid ""
"If you use a ``values()`` clause after an :meth:`extra()` call, any fields "
"defined by a ``select`` argument in the :meth:`extra()` must be explicitly "
"included in the ``values()`` call. Any :meth:`extra()` call made after a "
"``values()`` call will have its extra selected fields ignored."
msgstr ""

msgid ""
"Calling :meth:`only()` and :meth:`defer()` after ``values()`` doesn't make "
"sense, so doing so will raise a ``NotImplementedError``."
msgstr ""

msgid ""
"It is useful when you know you're only going to need values from a small "
"number of the available fields and you won't need the functionality of a "
"model instance object. It's more efficient to select only the fields you "
"need to use."
msgstr ""

msgid ""
"Finally, note that you can call ``filter()``, ``order_by()``, etc. after the "
"``values()`` call, that means that these two calls are identical::"
msgstr ""

msgid ""
"The people who made Django prefer to put all the SQL-affecting methods "
"first, followed (optionally) by any output-affecting methods (such as "
"``values()``), but it doesn't really matter. This is your chance to really "
"flaunt your individualism."
msgstr ""

msgid ""
"You can also refer to fields on related models with reverse relations "
"through ``OneToOneField``, ``ForeignKey`` and ``ManyToManyField`` "
"attributes::"
msgstr ""

msgid ""
"Because :class:`~django.db.models.ManyToManyField` attributes and reverse "
"relations can have multiple related rows, including these can have a "
"multiplier effect on the size of your result set. This will be especially "
"pronounced if you include multiple such fields in your ``values()`` query, "
"in which case all possible combinations will be returned."
msgstr ""

msgid "Support for ``**expressions`` was added."
msgstr "Dukungan untuk ``**expressions`` telah ditambahkan."

msgid "``values_list()``"
msgstr "``values_list()``"

msgid ""
"This is similar to ``values()`` except that instead of returning "
"dictionaries, it returns tuples when iterated over. Each tuple contains the "
"value from the respective field or expression passed into the "
"``values_list()`` call — so the first item is the first field, etc. For "
"example::"
msgstr ""

msgid ""
"If you only pass in a single field, you can also pass in the ``flat`` "
"parameter. If ``True``, this will mean the returned results are single "
"values, rather than one-tuples. An example should make the difference "
"clearer::"
msgstr ""

msgid "It is an error to pass in ``flat`` when there is more than one field."
msgstr ""
"Itu adalah sebuah kesalahan melewatkan dalam ``flat`` ketika ada lebih dari "
"satu bidang."

msgid ""
"If you don't pass any values to ``values_list()``, it will return all the "
"fields in the model, in the order they were declared."
msgstr ""

msgid ""
"A common need is to get a specific field value of a certain model instance. "
"To achieve that, use ``values_list()`` followed by a ``get()`` call::"
msgstr ""

msgid ""
"``values()`` and ``values_list()`` are both intended as optimizations for a "
"specific use case: retrieving a subset of data without the overhead of "
"creating a model instance. This metaphor falls apart when dealing with many-"
"to-many and other multivalued relations (such as the one-to-many relation of "
"a reverse foreign key) because the \"one row, one object\" assumption "
"doesn't hold."
msgstr ""

msgid ""
"For example, notice the behavior when querying across a :class:`~django.db."
"models.ManyToManyField`::"
msgstr ""

msgid ""
"Authors with multiple entries appear multiple times and authors without any "
"entries have ``None`` for the entry headline."
msgstr ""

msgid ""
"Similarly, when querying a reverse foreign key, ``None`` appears for entries "
"not having any author::"
msgstr ""

msgid "Support for expressions in ``*fields`` was added."
msgstr ""

msgid "``dates()``"
msgstr "``dates()``"

msgid ""
"Returns a ``QuerySet`` that evaluates to a list of :class:`datetime.date` "
"objects representing all available dates of a particular kind within the "
"contents of the ``QuerySet``."
msgstr ""

msgid ""
"``field`` should be the name of a ``DateField`` of your model. ``kind`` "
"should be either ``\"year\"``, ``\"month\"`` or ``\"day\"``. Each ``datetime."
"date`` object in the result list is \"truncated\" to the given ``type``."
msgstr ""

msgid "``\"year\"`` returns a list of all distinct year values for the field."
msgstr ""

msgid ""
"``\"month\"`` returns a list of all distinct year/month values for the field."
msgstr ""

msgid ""
"``\"day\"`` returns a list of all distinct year/month/day values for the "
"field."
msgstr ""

msgid ""
"``order``, which defaults to ``'ASC'``, should be either ``'ASC'`` or "
"``'DESC'``. This specifies how to order the results."
msgstr ""

msgid "``datetimes()``"
msgstr "``datetimes()``"

msgid ""
"Returns a ``QuerySet`` that evaluates to a list of :class:`datetime."
"datetime` objects representing all available dates of a particular kind "
"within the contents of the ``QuerySet``."
msgstr ""

msgid "``field_name`` should be the name of a ``DateTimeField`` of your model."
msgstr ""

msgid ""
"``kind`` should be either ``\"year\"``, ``\"month\"``, ``\"day\"``, ``\"hour"
"\"``, ``\"minute\"`` or ``\"second\"``. Each ``datetime.datetime`` object in "
"the result list is \"truncated\" to the given ``type``."
msgstr ""

msgid ""
"``tzinfo`` defines the time zone to which datetimes are converted prior to "
"truncation. Indeed, a given datetime has different representations depending "
"on the time zone in use. This parameter must be a :class:`datetime.tzinfo` "
"object. If it's ``None``, Django uses the :ref:`current time zone <default-"
"current-time-zone>`. It has no effect when :setting:`USE_TZ` is ``False``."
msgstr ""

msgid ""
"This function performs time zone conversions directly in the database. As a "
"consequence, your database must be able to interpret the value of ``tzinfo."
"tzname(None)``. This translates into the following requirements:"
msgstr ""

msgid ""
"SQLite: no requirements. Conversions are performed in Python with pytz_ "
"(installed when you install Django)."
msgstr ""

msgid "PostgreSQL: no requirements (see `Time Zones`_)."
msgstr "PostgreSQL: tidak ada persyaratan (lihat `Time Zones`_)."

msgid "Oracle: no requirements (see `Choosing a Time Zone File`_)."
msgstr "Oracle: tidak ada persyaratan (lihat `Choosing a Time Zone File`_)."

msgid "MySQL: load the time zone tables with `mysql_tzinfo_to_sql`_."
msgstr "MySQL: memuat tabel zona waktu dengan `mysql_tzinfo_to_sql`_."

msgid "``none()``"
msgstr "``none()``"

msgid ""
"Calling none() will create a queryset that never returns any objects and no "
"query will be executed when accessing the results. A qs.none() queryset is "
"an instance of ``EmptyQuerySet``."
msgstr ""

msgid "``all()``"
msgstr "``all()``"

msgid ""
"Returns a *copy* of the current ``QuerySet`` (or ``QuerySet`` subclass).  "
"This can be useful in situations where you might want to pass in either a "
"model manager or a ``QuerySet`` and do further filtering on the result. "
"After calling ``all()`` on either object, you'll definitely have a "
"``QuerySet`` to work with."
msgstr ""

msgid ""
"When a ``QuerySet`` is :ref:`evaluated <when-querysets-are-evaluated>`, it "
"typically caches its results. If the data in the database might have changed "
"since a ``QuerySet`` was evaluated, you can get updated results for the same "
"query by calling ``all()`` on a previously evaluated ``QuerySet``."
msgstr ""

msgid "``union()``"
msgstr "``union()``"

msgid ""
"Uses SQL's ``UNION`` operator to combine the results of two or more "
"``QuerySet``\\s. For example:"
msgstr ""

msgid ""
"The ``UNION`` operator selects only distinct values by default. To allow "
"duplicate values, use the ``all=True`` argument."
msgstr ""

msgid ""
"``union()``, ``intersection()``, and ``difference()`` return model instances "
"of the type of the first ``QuerySet`` even if the arguments are ``QuerySet``"
"\\s of other models. Passing different models works as long as the "
"``SELECT`` list is the same in all ``QuerySet``\\s (at least the types, the "
"names don't matter as long as the types in the same order)."
msgstr ""

msgid ""
"In addition, only ``LIMIT``, ``OFFSET``, ``COUNT(*)``, and ``ORDER BY`` (i."
"e. slicing, :meth:`count`, and :meth:`order_by`) are allowed on the "
"resulting ``QuerySet``. Further, databases place restrictions on what "
"operations are allowed in the combined queries. For example, most databases "
"don't allow ``LIMIT`` or ``OFFSET`` in the combined queries."
msgstr ""

msgid "``COUNT(*)`` support was added."
msgstr ""

msgid "``intersection()``"
msgstr "``intersection()``"

msgid ""
"Uses SQL's ``INTERSECT`` operator to return the shared elements of two or "
"more ``QuerySet``\\s. For example:"
msgstr ""

msgid "See :meth:`union` for some restrictions."
msgstr "Lihat :meth:`union` untuk beberapa pembatasan."

msgid "``difference()``"
msgstr "``difference()``"

msgid ""
"Uses SQL's ``EXCEPT`` operator to keep only elements present in the "
"``QuerySet`` but not in some other ``QuerySet``\\s. For example::"
msgstr ""

msgid "``select_related()``"
msgstr "``select_related()``"

msgid ""
"Returns a ``QuerySet`` that will \"follow\" foreign-key relationships, "
"selecting additional related-object data when it executes its query. This is "
"a performance booster which results in a single more complex query but means "
"later use of foreign-key relationships won't require database queries."
msgstr ""

msgid ""
"The following examples illustrate the difference between plain lookups and "
"``select_related()`` lookups. Here's standard lookup::"
msgstr ""

msgid "And here's ``select_related`` lookup::"
msgstr ""

msgid "You can use ``select_related()`` with any queryset of objects::"
msgstr ""

msgid ""
"The order of ``filter()`` and ``select_related()`` chaining isn't important. "
"These querysets are equivalent::"
msgstr ""

msgid ""
"You can follow foreign keys in a similar way to querying them. If you have "
"the following models::"
msgstr ""

msgid ""
"... then a call to ``Book.objects.select_related('author__hometown')."
"get(id=4)`` will cache the related ``Person`` *and* the related ``City``::"
msgstr ""

msgid ""
"You can refer to any :class:`~django.db.models.ForeignKey` or :class:"
"`~django.db.models.OneToOneField` relation in the list of fields passed to "
"``select_related()``."
msgstr ""

msgid ""
"You can also refer to the reverse direction of a :class:`~django.db.models."
"OneToOneField` in the list of fields passed to ``select_related`` — that is, "
"you can traverse a :class:`~django.db.models.OneToOneField` back to the "
"object on which the field is defined. Instead of specifying the field name, "
"use the :attr:`related_name <django.db.models.ForeignKey.related_name>` for "
"the field on the related object."
msgstr ""

msgid ""
"There may be some situations where you wish to call ``select_related()`` "
"with a lot of related objects, or where you don't know all of the relations. "
"In these cases it is possible to call ``select_related()`` with no "
"arguments. This will follow all non-null foreign keys it can find - nullable "
"foreign keys must be specified. This is not recommended in most cases as it "
"is likely to make the underlying query more complex, and return more data, "
"than is actually needed."
msgstr ""

msgid ""
"If you need to clear the list of related fields added by past calls of "
"``select_related`` on a ``QuerySet``, you can pass ``None`` as a parameter::"
msgstr ""

msgid ""
"Chaining ``select_related`` calls works in a similar way to other methods - "
"that is that ``select_related('foo', 'bar')`` is equivalent to "
"``select_related('foo').select_related('bar')``."
msgstr ""

msgid "``prefetch_related()``"
msgstr "``prefetch_related()``"

msgid ""
"Returns a ``QuerySet`` that will automatically retrieve, in a single batch, "
"related objects for each of the specified lookups."
msgstr ""

msgid ""
"This has a similar purpose to ``select_related``, in that both are designed "
"to stop the deluge of database queries that is caused by accessing related "
"objects, but the strategy is quite different."
msgstr ""

msgid ""
"``select_related`` works by creating an SQL join and including the fields of "
"the related object in the ``SELECT`` statement. For this reason, "
"``select_related`` gets the related objects in the same database query. "
"However, to avoid the much larger result set that would result from joining "
"across a 'many' relationship, ``select_related`` is limited to single-valued "
"relationships - foreign key and one-to-one."
msgstr ""

msgid ""
"``prefetch_related``, on the other hand, does a separate lookup for each "
"relationship, and does the 'joining' in Python. This allows it to prefetch "
"many-to-many and many-to-one objects, which cannot be done using "
"``select_related``, in addition to the foreign key and one-to-one "
"relationships that are supported by ``select_related``. It also supports "
"prefetching of :class:`~django.contrib.contenttypes.fields.GenericRelation` "
"and :class:`~django.contrib.contenttypes.fields.GenericForeignKey`, however, "
"it must be restricted to a homogeneous set of results. For example, "
"prefetching objects referenced by a ``GenericForeignKey`` is only supported "
"if the query is restricted to one ``ContentType``."
msgstr ""
"``prefetch_related``, di sisi lain, melakukan pencarian terpisah untuk "
"setiap hubungan, dan melakukan 'joining' di Python. Ini mengizinkan itu "
"untuk mengambil obyek many-to-one, yang tidak dapat diselesaikan menggunakan "
"``select_related``, sebagai tambahan pada foreign key dan hubungan one-to-"
"one yang didukung oleh ``select_related``. Itu juga mendukung pengambilan "
"dari :class:`~django.contrib.contenttypes.fields.GenericRelation` dan :class:"
"`~django.contrib.contenttypes.fields.GenericForeignKey`, bagaimanapun, itu "
"harus dibatasi pada kumpulan sama jenis dari hasil. Sebagai contoh, "
"mengambil obyek diacukan oleh ``GenericForeignKey`` hanya didukung jika "
"permintaan dibatasi pada satu ``ContentType``."

msgid "For example, suppose you have these models::"
msgstr "Sebagai contoh, andaikan anda mempunyai dua model ini::"

msgid "and run::"
msgstr "dan jalankan::"

msgid ""
"The problem with this is that every time ``Pizza.__str__()`` asks for ``self."
"toppings.all()`` it has to query the database, so ``Pizza.objects.all()`` "
"will run a query on the Toppings table for **every** item in the Pizza "
"``QuerySet``."
msgstr ""
"Masalah dengan ini adalah bahwa setiap kali ``Pizza.__str__()`` bertanya "
"untuk ``self.toppings.all()`` itu harus meminta basisdata, jadi ``Pizza."
"objects.all()`` akan menjalankan sebuah permintaan pada tabel Toppings untuk "
"**setiap** barang dalam ``QuerySet`` Pizza."

msgid "We can reduce to just two queries using ``prefetch_related``:"
msgstr ""
"Kami dapat mengurangi hanya dua permintaan menggunakan ``prefetch_related``:"

msgid ""
"This implies a ``self.toppings.all()`` for each ``Pizza``; now each time "
"``self.toppings.all()`` is called, instead of having to go to the database "
"for the items, it will find them in a prefetched ``QuerySet`` cache that was "
"populated in a single query."
msgstr ""
"Ini mengartikan sebuah ``self.toppings.all()`` untuk setiap ``Pizza``, "
"sekarang setiap kali ``self.toppings.all()`` dipanggil, daripada harus pergi "
"ke basisdata untuk barang-barang, itu akan menemukan mereka dalam pra "
"pengambilan cache ``QuerySet`` yang dikumpulkan dalam sebuah permintaan "
"tunggal."

msgid ""
"That is, all the relevant toppings will have been fetched in a single query, "
"and used to make ``QuerySets`` that have a pre-filled cache of the relevant "
"results; these ``QuerySets`` are then used in the ``self.toppings.all()`` "
"calls."
msgstr ""
"Yaitu, semua taburan berhubungan akan diambil dalam sebuah permintaan "
"tunggal, dan digunakan untuk membuat ``QuerySets`` yang mempunyai cache pra-"
"diisi dari hasil terkait; ``QuerySet`` ini kemudian digunakan dalam "
"panggilan ``self.toppings.all()``."

msgid ""
"The additional queries in ``prefetch_related()`` are executed after the "
"``QuerySet`` has begun to be evaluated and the primary query has been "
"executed."
msgstr ""
"Permintaan-permintaan tambahan dalam ``prefetch_related()`` dijalankan "
"setelah ``QuerySet`` telah mulai dinilai dan permintaan utama telah "
"dijalankan."

msgid ""
"If you have an iterable of model instances, you can prefetch related "
"attributes on those instances using the :func:`~django.db.models."
"prefetch_related_objects` function."
msgstr ""
"Jika anda mempunyai sebuah perulangan dari instance model, anda dapat "
"mengambil atribut terkait pada instance tersebut menggunakan fungsi :func:"
"`~django.db.models.prefetch_related_objects`."

msgid ""
"Note that the result cache of the primary ``QuerySet`` and all specified "
"related objects will then be fully loaded into memory. This changes the "
"typical behavior of ``QuerySets``, which normally try to avoid loading all "
"objects into memory before they are needed, even after a query has been "
"executed in the database."
msgstr ""

msgid ""
"Remember that, as always with ``QuerySets``, any subsequent chained methods "
"which imply a different database query will ignore previously cached "
"results, and retrieve data using a fresh database query. So, if you write "
"the following:"
msgstr ""

msgid ""
"...then the fact that ``pizza.toppings.all()`` has been prefetched will not "
"help you. The ``prefetch_related('toppings')`` implied ``pizza.toppings."
"all()``, but ``pizza.toppings.filter()`` is a new and different query. The "
"prefetched cache can't help here; in fact it hurts performance, since you "
"have done a database query that you haven't used. So use this feature with "
"caution!"
msgstr ""
"...kemudian fakta bahwa ``pizza.toppings.all()`` telah di pengambilan tidak "
"akan membantu anda. ``prefetch_related('toppings')`` menyisipkan ``pizza."
"toppings.all()``, tetapi ``pizza.toppings.filter()`` adalah sebuah baru dan "
"permintaan berbeda. Cache pra pengambilan tidak dapat membantu disini; "
"faktanya itu melukai penampilan, sejak anda telah selesai sebuah permintaan "
"basisdata yang anda belum gunakan. Jadi gunakan fitur ini dengan waspada!"

msgid ""
"Also, if you call the database-altering methods :meth:`~django.db.models."
"fields.related.RelatedManager.add`, :meth:`~django.db.models.fields.related."
"RelatedManager.remove`, :meth:`~django.db.models.fields.related."
"RelatedManager.clear` or :meth:`~django.db.models.fields.related."
"RelatedManager.set`, on :class:`related managers<django.db.models.fields."
"related.RelatedManager>`, any prefetched cache for the relation will be "
"cleared."
msgstr ""

msgid "The clearing of the prefetched cache described above was added."
msgstr ""

msgid ""
"You can also use the normal join syntax to do related fields of related "
"fields. Suppose we have an additional model to the example above::"
msgstr ""

msgid "The following are all legal:"
msgstr "Berikut ini adalah semua sah:"

msgid ""
"This will prefetch all pizzas belonging to restaurants, and all toppings "
"belonging to those pizzas. This will result in a total of 3 database queries "
"- one for the restaurants, one for the pizzas, and one for the toppings."
msgstr ""
"Ini akan mengambil semua pizza milik restoran, dan semua taburan melik ke "
"pizza tersebut. Ini akan menghasilkan sejumlah 3 permintaan basisdata - satu "
"untuk restoran, satu untuk pizza, dan satu untuk taburan."

msgid ""
"This will fetch the best pizza and all the toppings for the best pizza for "
"each restaurant. This will be done in 3 database queries - one for the "
"restaurants, one for the 'best pizzas', and one for one for the toppings."
msgstr ""
"Ini akan mengambil pizza terbaik dan semua taburan untuk pizza terbaik untuk "
"setiap restoran. Ini akan selesai dalam 3 permintaan basisdata - satu untuk "
"restoran, satu untuk 'best pizzas', dan satu untuk satu untuk taburan."

msgid ""
"Of course, the ``best_pizza`` relationship could also be fetched using "
"``select_related`` to reduce the query count to 2:"
msgstr ""

msgid ""
"Since the prefetch is executed after the main query (which includes the "
"joins needed by ``select_related``), it is able to detect that the "
"``best_pizza`` objects have already been fetched, and it will skip fetching "
"them again."
msgstr ""
"Sejak pengambilan dijalankan setelah permintaan utama (yang menyertakan "
"penggabungan dibutuhkan oleh ``select_related``), itu dapat mengenali bahwa "
"obyek ``best_pizza`` telah diambil, dan itu akan melewati pengambilan "
"kembali."

msgid ""
"Chaining ``prefetch_related`` calls will accumulate the lookups that are "
"prefetched. To clear any ``prefetch_related`` behavior, pass ``None`` as a "
"parameter:"
msgstr ""
"Mengikat panggilan ``prefetch_related`` akan mengumpulkan pencarian yang "
"diambil. Untuk membersihkan perilaku ``prefetch_related`` apapun, melewatkan "
"``None`` sebagai sebuah parameter:"

msgid ""
"One difference to note when using ``prefetch_related`` is that objects "
"created by a query can be shared between the different objects that they are "
"related to i.e. a single Python model instance can appear at more than one "
"point in the tree of objects that are returned. This will normally happen "
"with foreign key relationships. Typically this behavior will not be a "
"problem, and will in fact save both memory and CPU time."
msgstr ""
"Satu perbedaan untuk dicatat ketika menggunakan ``prefetch_related`` adalah "
"bahwa obyek dibuat oleh sebuah permintaan dapat dibagi diantara obyek-obyek "
"berbeda yang mereka terkait pada yaitu instance model Python tunggal dapat "
"muncul lebih dari satu titik dalam pohon dari obyek yang dikembalikan. Ini "
"akan biasanya terjadi dengan hubungan foreign key. Khususnya perilaku ini "
"akan tidak menjadi sebuah masalah, dan akan dalam faktanya menyimpan kedua "
"memori dan waktu CPU."

msgid ""
"While ``prefetch_related`` supports prefetching ``GenericForeignKey`` "
"relationships, the number of queries will depend on the data. Since a "
"``GenericForeignKey`` can reference data in multiple tables, one query per "
"table referenced is needed, rather than one query for all the items. There "
"could be additional queries on the ``ContentType`` table if the relevant "
"rows have not already been fetched."
msgstr ""
"Selagi ``prefetch_related`` mendukung pengambilan hubungan "
"``GenericForeignKey``, sejumlah permintaan akan bergantung pada data. Sejak "
"sebuah ``GenericForeignKey`` dapat mengacu data dalam banyak tabel, satu "
"permiintaan per tabel acuan adalah dibutuhkan, daripada satu permintaan "
"untuk semua barang. Ada mungkin permintaan tambahan pada tabel "
"``ContentType`` jika baris bersangkutan belum siambil."

msgid ""
"``prefetch_related`` in most cases will be implemented using an SQL query "
"that uses the 'IN' operator. This means that for a large ``QuerySet`` a "
"large 'IN' clause could be generated, which, depending on the database, "
"might have performance problems of its own when it comes to parsing or "
"executing the SQL query. Always profile for your use case!"
msgstr ""
"``prefetch_related`` dalam kebanyakan kasus akan diterapkan menggunakan "
"sebuah permintaan SQL yang menggunakan penghubung 'IN'. Ini berarti bahwa "
"untuk ``QuerySet`` besar sebuah klausa 'IN' besar dapat dibangkitkan, yang, "
"bergantung pada basisdata, mungkin memiliki masalah penampilan dari miliknya "
"sendiri ketika itu datang mengurai atau menjalankan permintaan SQL. Selalu "
"profil untuk kasus penggunaan anda!"

msgid ""
"Note that if you use ``iterator()`` to run the query, ``prefetch_related()`` "
"calls will be ignored since these two optimizations do not make sense "
"together."
msgstr ""
"Catat bahwa jika anda menggunakan ``iterator()`` untuk menjalankan "
"permintaan, panggilan ``prefetch_related()`` akan diabaikan sejak dua "
"optimasisasi ini tidak masuk akal bersama-sama."

msgid ""
"You can use the :class:`~django.db.models.Prefetch` object to further "
"control the prefetch operation."
msgstr ""
"Anda dapat menggunakan obyek :class:`~django.db.models.Prefetch` untuk lebih "
"lanjut mengendalikan tindakan pengambilan."

msgid ""
"In its simplest form ``Prefetch`` is equivalent to the traditional string "
"based lookups:"
msgstr ""
"Dalam formulir termudahnya ``Prefetch`` setara pada pencarian berdasarkan "
"string tradisional:"

msgid ""
"You can provide a custom queryset with the optional ``queryset`` argument. "
"This can be used to change the default ordering of the queryset:"
msgstr ""

msgid ""
"Or to call :meth:`~django.db.models.query.QuerySet.select_related()` when "
"applicable to reduce the number of queries even further:"
msgstr ""

msgid ""
"You can also assign the prefetched result to a custom attribute with the "
"optional ``to_attr`` argument. The result will be stored directly in a list."
msgstr ""
"Anda dapat juga memberikan hasil pengambilan pada atribut penyesuaian dengan "
"pilihan argumen ``to_attr``. Hasil akan disimpan langsung dalam sebuah "
"daftar."

msgid ""
"This allows prefetching the same relation multiple times with a different "
"``QuerySet``; for instance:"
msgstr ""
"Ini mengizinkan mengambil hubungan sama banyak kali dengan ``QuerySet`` "
"berbeda; sebagai contoh:"

msgid ""
"Lookups created with custom ``to_attr`` can still be traversed as usual by "
"other lookups:"
msgstr ""

msgid ""
"Using ``to_attr`` is recommended when filtering down the prefetch result as "
"it is less ambiguous than storing a filtered result in the related manager's "
"cache:"
msgstr ""
"Menggunakan ``to_attr`` dianjurkan ketika menyaring turun hasil pengambilan "
"ketika itu sedikit membingungkan daripada menyimpan hasil disaring dalam "
"cache pengelola terkait:"

msgid ""
"Custom prefetching also works with single related relations like forward "
"``ForeignKey`` or ``OneToOneField``. Generally you'll want to use :meth:"
"`select_related()` for these relations, but there are a number of cases "
"where prefetching with a custom ``QuerySet`` is useful:"
msgstr ""
"Pengambilan penyesuaian juga bekerja dengan hubungan terkait tunggal seperti "
"menyampaikan ``ForeignKey`` atau ``OneToOneField``. Umumnya anda akan ingin "
"menggunakan :meth:`select_related()` untuk hubungan ini, tetapi ada sejumlah "
"kasus dimana pengambilan dengan ``QuerySet`` penyesuaian berguna:"

msgid ""
"You want to use a ``QuerySet`` that performs further prefetching on related "
"models."
msgstr ""
"Anda ingin menggunakan sebuah ``QuerySet`` yang melakukan pengambilan lebih "
"lanjut pada model terkait."

msgid "You want to prefetch only a subset of the related objects."
msgstr ""
"Anda ingin hanya mengambil sebah sub kumpulan dari obyek-obyek terkait."

msgid ""
"You want to use performance optimization techniques like :meth:`deferred "
"fields <defer()>`:"
msgstr ""

msgid "The ordering of lookups matters."
msgstr ""

msgid "Take the following examples:"
msgstr "Ambil contoh-contoh berikut:"

msgid ""
"This works even though it's unordered because ``'pizzas__toppings'`` already "
"contains all the needed information, therefore the second argument "
"``'pizzas'`` is actually redundant."
msgstr ""
"Ini bekerja meskipun itu adalah tidak berurutan karena "
"``'pizzas__toppings'`` sudah mengandung semua informasi yang dibutuhkan, "
"oleh karena itu argumen kedua ``'pizzas'`` adalah sebenarnya berulang."

msgid ""
"This will raise a ``ValueError`` because of the attempt to redefine the "
"queryset of a previously seen lookup. Note that an implicit queryset was "
"created to traverse ``'pizzas'`` as part of the ``'pizzas__toppings'`` "
"lookup."
msgstr ""
"Ini akan memunculkan sebuah ``ValueError`` karena dari usaha untuk "
"menentukan kembali queryset dari sebelumnya dicari. Catat bahwa sebuah "
"queryset tersirat telah dibuat untuk melintasi ``'pizzas'`` sebagai bagian "
"dari pencarian ``'pizzas__toppings'``."

msgid ""
"This will trigger an ``AttributeError`` because ``'pizza_list'`` doesn't "
"exist yet when ``'pizza_list__toppings'`` is being processed."
msgstr ""
"Ini akan memicu sebuah ``AttributeError`` karena ``'pizza_list'`` tidak ada "
"ketika ``'pizza_list__toppings'`` sedang diolah."

msgid ""
"This consideration is not limited to the use of ``Prefetch`` objects. Some "
"advanced techniques may require that the lookups be performed in a specific "
"order to avoid creating extra queries; therefore it's recommended to always "
"carefully order ``prefetch_related`` arguments."
msgstr ""
"Pertimbangan ini tidak terbatas untuk digunakan dari obyek ``Prefetch``. "
"Beberapa teknik tingkat lanjut mungkin membutuhkan bahwa pencarian dilakukan "
"dalam perintah khusus untuk menghindari permintaan tambahan; oleh karena itu "
"dianjurkan untuk selalu berhari-hari memesan argumen ``prefetch_related``."

msgid "``extra()``"
msgstr "``extra()``"

msgid ""
"Sometimes, the Django query syntax by itself can't easily express a complex "
"``WHERE`` clause. For these edge cases, Django provides the ``extra()`` "
"``QuerySet`` modifier — a hook for injecting specific clauses into the SQL "
"generated by a ``QuerySet``."
msgstr ""

msgid "Use this method as a last resort"
msgstr ""

msgid ""
"This is an old API that we aim to deprecate at some point in the future. Use "
"it only if you cannot express your query using other queryset methods. If "
"you do need to use it, please `file a ticket <https://code.djangoproject.com/"
"newticket>`_ using the `QuerySet.extra keyword <https://code.djangoproject."
"com/query?status=assigned&status=new&keywords=~QuerySet.extra>`_ with your "
"use case (please check the list of existing tickets first) so that we can "
"enhance the QuerySet API to allow removing ``extra()``. We are no longer "
"improving or fixing bugs for this method."
msgstr ""

msgid "For example, this use of ``extra()``::"
msgstr "Sebagai contoh, ini menggunakan ``extra()``::"

msgid ""
"The main benefit of using :class:`~django.db.models.expressions.RawSQL` is "
"that you can set ``output_field`` if needed. The main downside is that if "
"you refer to some table alias of the queryset in the raw SQL, then it is "
"possible that Django might change that alias (for example, when the queryset "
"is used as a subquery in yet another query)."
msgstr ""

msgid ""
"You should be very careful whenever you use ``extra()``. Every time you use "
"it, you should escape any parameters that the user can control by using "
"``params`` in order to protect against SQL injection attacks . Please read "
"more about :ref:`SQL injection protection <sql-injection-protection>`."
msgstr ""

msgid ""
"By definition, these extra lookups may not be portable to different database "
"engines (because you're explicitly writing SQL code) and violate the DRY "
"principle, so you should avoid them if possible."
msgstr ""

msgid ""
"Specify one or more of ``params``, ``select``, ``where`` or ``tables``. None "
"of the arguments is required, but you should use at least one of them."
msgstr ""

msgid "``select``"
msgstr "``select``"

msgid ""
"The ``select`` argument lets you put extra fields in the ``SELECT`` clause.  "
"It should be a dictionary mapping attribute names to SQL clauses to use to "
"calculate that attribute."
msgstr ""

msgid ""
"As a result, each ``Entry`` object will have an extra attribute, "
"``is_recent``, a boolean representing whether the entry's ``pub_date`` is "
"greater than Jan. 1, 2006."
msgstr ""

msgid ""
"Django inserts the given SQL snippet directly into the ``SELECT`` statement, "
"so the resulting SQL of the above example would be something like::"
msgstr ""

msgid ""
"The next example is more advanced; it does a subquery to give each resulting "
"``Blog`` object an ``entry_count`` attribute, an integer count of associated "
"``Entry`` objects::"
msgstr ""

msgid ""
"In this particular case, we're exploiting the fact that the query will "
"already contain the ``blog_blog`` table in its ``FROM`` clause."
msgstr ""

msgid "The resulting SQL of the above example would be::"
msgstr "Hasil SQL dari contoh diatas akan menjadi::"

msgid ""
"Note that the parentheses required by most database engines around "
"subqueries are not required in Django's ``select`` clauses. Also note that "
"some database backends, such as some MySQL versions, don't support "
"subqueries."
msgstr ""

msgid ""
"In some rare cases, you might wish to pass parameters to the SQL fragments "
"in ``extra(select=...)``. For this purpose, use the ``select_params`` "
"parameter. Since ``select_params`` is a sequence and the ``select`` "
"attribute is a dictionary, some care is required so that the parameters are "
"matched up correctly with the extra select pieces. In this situation, you "
"should use a :class:`collections.OrderedDict` for the ``select`` value, not "
"just a normal Python dictionary."
msgstr ""

msgid "This will work, for example::"
msgstr "Ini akan bekerja, sebagai contoh::"

msgid ""
"If you need to use a literal ``%s`` inside your select string, use the "
"sequence ``%%s``."
msgstr ""

msgid "``where`` / ``tables``"
msgstr "``where`` / ``tables``"

msgid ""
"You can define explicit SQL ``WHERE`` clauses — perhaps to perform non-"
"explicit joins — by using ``where``. You can manually add tables to the SQL "
"``FROM`` clause by using ``tables``."
msgstr ""

msgid ""
"``where`` and ``tables`` both take a list of strings. All ``where`` "
"parameters are \"AND\"ed to any other search criteria."
msgstr ""

msgid "...translates (roughly) into the following SQL::"
msgstr ""

msgid ""
"Be careful when using the ``tables`` parameter if you're specifying tables "
"that are already used in the query. When you add extra tables via the "
"``tables`` parameter, Django assumes you want that table included an extra "
"time, if it is already included. That creates a problem, since the table "
"name will then be given an alias. If a table appears multiple times in an "
"SQL statement, the second and subsequent occurrences must use aliases so the "
"database can tell them apart. If you're referring to the extra table you "
"added in the extra ``where`` parameter this is going to cause errors."
msgstr ""

msgid ""
"Normally you'll only be adding extra tables that don't already appear in the "
"query. However, if the case outlined above does occur, there are a few "
"solutions. First, see if you can get by without including the extra table "
"and use the one already in the query. If that isn't possible, put your "
"``extra()`` call at the front of the queryset construction so that your "
"table is the first use of that table. Finally, if all else fails, look at "
"the query produced and rewrite your ``where`` addition to use the alias "
"given to your extra table. The alias will be the same each time you "
"construct the queryset in the same way, so you can rely upon the alias name "
"to not change."
msgstr ""

msgid "``order_by``"
msgstr "``order_by``"

msgid ""
"If you need to order the resulting queryset using some of the new fields or "
"tables you have included via ``extra()`` use the ``order_by`` parameter to "
"``extra()`` and pass in a sequence of strings. These strings should either "
"be model fields (as in the normal :meth:`order_by()` method on querysets), "
"of the form ``table_name.column_name`` or an alias for a column that you "
"specified in the ``select`` parameter to ``extra()``."
msgstr ""

msgid ""
"This would sort all the items for which ``is_recent`` is true to the front "
"of the result set (``True`` sorts before ``False`` in a descending ordering)."
msgstr ""

msgid ""
"This shows, by the way, that you can make multiple calls to ``extra()`` and "
"it will behave as you expect (adding new constraints each time)."
msgstr ""

msgid "``params``"
msgstr "``params``"

msgid ""
"The ``where`` parameter described above may use standard Python database "
"string placeholders — ``'%s'`` to indicate parameters the database engine "
"should automatically quote. The ``params`` argument is a list of any extra "
"parameters to be substituted."
msgstr ""

msgid ""
"Always use ``params`` instead of embedding values directly into ``where`` "
"because ``params`` will ensure values are quoted correctly according to your "
"particular backend. For example, quotes will be escaped correctly."
msgstr ""

msgid "Bad::"
msgstr "Buruk::"

msgid "Good::"
msgstr "Baik::"

msgid ""
"If you are performing queries on MySQL, note that MySQL's silent type "
"coercion may cause unexpected results when mixing types. If you query on a "
"string type column, but with an integer value, MySQL will coerce the types "
"of all values in the table to an integer before performing the comparison. "
"For example, if your table contains the values ``'abc'``, ``'def'`` and you "
"query for ``WHERE mycolumn=0``, both rows will match. To prevent this, "
"perform the correct typecasting before using the value in a query."
msgstr ""
"Jika anda sedang melakukan permintaan pada MySQL, catat bahwa paksaan jenis "
"diam MySQL mungkin menyebabkan hasil tidak diharapkan ketika mencampur "
"jenis. Jika anda meminta pada sebuah kolom jenis string, tetapi dengan "
"sebuah nilai integer, MySQL akan memaksa jenis-jenis dari semua nilai dalam "
"tabel ke integer sebelum melakukan perbandingan. Sebagai contoh, jika tabel "
"anda mengandung nilai-nilai ``'abc'``, ``'def'`` dan anda meminta untuk "
"``WHERE mycolumn=0``, kedua baris akan cocok. Untuk mencegah ini, lakukan "
"pembenaran typecast sebelum menggunakan nilai dalam sebuah permintaan."

msgid "``defer()``"
msgstr "``defer()``"

msgid ""
"In some complex data-modeling situations, your models might contain a lot of "
"fields, some of which could contain a lot of data (for example, text "
"fields), or require expensive processing to convert them to Python objects. "
"If you are using the results of a queryset in some situation where you don't "
"know if you need those particular fields when you initially fetch the data, "
"you can tell Django not to retrieve them from the database."
msgstr ""

msgid ""
"This is done by passing the names of the fields to not load to ``defer()``::"
msgstr ""

msgid ""
"A queryset that has deferred fields will still return model instances. Each "
"deferred field will be retrieved from the database if you access that field "
"(one at a time, not all the deferred fields at once)."
msgstr ""

msgid ""
"You can make multiple calls to ``defer()``. Each call adds new fields to the "
"deferred set::"
msgstr ""

msgid ""
"The order in which fields are added to the deferred set does not matter. "
"Calling ``defer()`` with a field name that has already been deferred is "
"harmless (the field will still be deferred)."
msgstr ""

msgid ""
"You can defer loading of fields in related models (if the related models are "
"loading via :meth:`select_related()`) by using the standard double-"
"underscore notation to separate related fields::"
msgstr ""

msgid ""
"If you want to clear the set of deferred fields, pass ``None`` as a "
"parameter to ``defer()``::"
msgstr ""

msgid ""
"Some fields in a model won't be deferred, even if you ask for them. You can "
"never defer the loading of the primary key. If you are using :meth:"
"`select_related()` to retrieve related models, you shouldn't defer the "
"loading of the field that connects from the primary model to the related "
"one, doing so will result in an error."
msgstr ""

msgid ""
"The ``defer()`` method (and its cousin, :meth:`only()`, below) are only for "
"advanced use-cases. They provide an optimization for when you have analyzed "
"your queries closely and understand *exactly* what information you need and "
"have measured that the difference between returning the fields you need and "
"the full set of fields for the model will be significant."
msgstr ""

msgid ""
"Even if you think you are in the advanced use-case situation, **only use "
"defer() when you cannot, at queryset load time, determine if you will need "
"the extra fields or not**. If you are frequently loading and using a "
"particular subset of your data, the best choice you can make is to normalize "
"your models and put the non-loaded data into a separate model (and database "
"table). If the columns *must* stay in the one table for some reason, create "
"a model with ``Meta.managed = False`` (see the :attr:`managed attribute "
"<django.db.models.Options.managed>` documentation) containing just the "
"fields you normally need to load and use that where you might otherwise call "
"``defer()``. This makes your code more explicit to the reader, is slightly "
"faster and consumes a little less memory in the Python process."
msgstr ""

msgid ""
"For example, both of these models use the same underlying database table::"
msgstr ""

msgid ""
"If many fields need to be duplicated in the unmanaged model, it may be best "
"to create an abstract model with the shared fields and then have the "
"unmanaged and managed models inherit from the abstract model."
msgstr ""

msgid ""
"When calling :meth:`~django.db.models.Model.save()` for instances with "
"deferred fields, only the loaded fields will be saved. See :meth:`~django.db."
"models.Model.save()` for more details."
msgstr ""

msgid "``only()``"
msgstr "``only()``"

msgid ""
"The ``only()`` method is more or less the opposite of :meth:`defer()`. You "
"call it with the fields that should *not* be deferred when retrieving a "
"model.  If you have a model where almost all the fields need to be deferred, "
"using ``only()`` to specify the complementary set of fields can result in "
"simpler code."
msgstr ""

msgid ""
"Suppose you have a model with fields ``name``, ``age`` and ``biography``. "
"The following two querysets are the same, in terms of deferred fields::"
msgstr ""

msgid ""
"Whenever you call ``only()`` it *replaces* the set of fields to load "
"immediately. The method's name is mnemonic: **only** those fields are loaded "
"immediately; the remainder are deferred. Thus, successive calls to "
"``only()`` result in only the final fields being considered::"
msgstr ""

msgid ""
"Since ``defer()`` acts incrementally (adding fields to the deferred list), "
"you can combine calls to ``only()`` and ``defer()`` and things will behave "
"logically::"
msgstr ""

msgid ""
"All of the cautions in the note for the :meth:`defer` documentation apply to "
"``only()`` as well. Use it cautiously and only after exhausting your other "
"options."
msgstr ""

msgid ""
"Using :meth:`only` and omitting a field requested using :meth:"
"`select_related` is an error as well."
msgstr ""

msgid "``using()``"
msgstr "``using()``"

msgid ""
"This method is for controlling which database the ``QuerySet`` will be "
"evaluated against if you are using more than one database.  The only "
"argument this method takes is the alias of a database, as defined in :"
"setting:`DATABASES`."
msgstr ""

msgid "``select_for_update()``"
msgstr "``select_for_update()``"

msgid ""
"Returns a queryset that will lock rows until the end of the transaction, "
"generating a ``SELECT ... FOR UPDATE`` SQL statement on supported databases."
msgstr ""

msgid ""
"All matched entries will be locked until the end of the transaction block, "
"meaning that other transactions will be prevented from changing or acquiring "
"locks on them."
msgstr ""

msgid ""
"Usually, if another transaction has already acquired a lock on one of the "
"selected rows, the query will block until the lock is released. If this is "
"not the behavior you want, call ``select_for_update(nowait=True)``. This "
"will make the call non-blocking. If a conflicting lock is already acquired "
"by another transaction, :exc:`~django.db.DatabaseError` will be raised when "
"the queryset is evaluated. You can also ignore locked rows by using "
"``select_for_update(skip_locked=True)`` instead. The ``nowait`` and "
"``skip_locked`` are mutually exclusive and attempts to call "
"``select_for_update()`` with both options enabled will result in a :exc:"
"`ValueError`."
msgstr ""

msgid ""
"Currently, the ``postgresql``, ``oracle``, and ``mysql`` database backends "
"support ``select_for_update()``. However, MySQL doesn't support the "
"``nowait`` and ``skip_locked`` arguments."
msgstr ""

msgid ""
"Passing ``nowait=True`` or ``skip_locked=True`` to ``select_for_update()`` "
"using database backends that do not support these options, such as MySQL, "
"will cause a :exc:`~django.db.DatabaseError` to be raised. This prevents "
"code from unexpectedly blocking."
msgstr ""

msgid ""
"Evaluating a queryset with ``select_for_update()`` in autocommit mode on "
"backends which support ``SELECT ... FOR UPDATE`` is a :exc:`~django.db."
"transaction.TransactionManagementError` error because the rows are not "
"locked in that case. If allowed, this would facilitate data corruption and "
"could easily be caused by calling code that expects to be run in a "
"transaction outside of one."
msgstr ""

msgid ""
"Using ``select_for_update()`` on backends which do not support ``SELECT ... "
"FOR UPDATE`` (such as SQLite) will have no effect. ``SELECT ... FOR UPDATE`` "
"will not be added to the query, and an error isn't raised if "
"``select_for_update()`` is used in autocommit mode."
msgstr ""

msgid ""
"Although ``select_for_update()`` normally fails in autocommit mode, since :"
"class:`~django.test.TestCase` automatically wraps each test in a "
"transaction, calling ``select_for_update()`` in a ``TestCase`` even outside "
"an :func:`~django.db.transaction.atomic()` block will (perhaps unexpectedly) "
"pass without raising a ``TransactionManagementError``. To properly test "
"``select_for_update()`` you should use :class:`~django.test."
"TransactionTestCase`."
msgstr ""

msgid "The ``skip_locked`` argument was added."
msgstr "Argumen ``skip_locked`` telah ditambahkan."

msgid "``raw()``"
msgstr "``raw()``"

msgid ""
"Takes a raw SQL query, executes it, and returns a ``django.db.models.query."
"RawQuerySet`` instance. This ``RawQuerySet`` instance can be iterated over "
"just like an normal ``QuerySet`` to provide object instances."
msgstr ""

msgid "See the :doc:`/topics/db/sql` for more information."
msgstr "Lihat :doc:`/topics/db/sql` untuk informasi lebih."

msgid ""
"``raw()`` always triggers a new query and doesn't account for previous "
"filtering. As such, it should generally be called from the ``Manager`` or "
"from a fresh ``QuerySet`` instance."
msgstr ""

msgid "Methods that do not return ``QuerySet``\\s"
msgstr "Metode-metode yang tidak mengembalikan ``QuerySet``"

msgid ""
"The following ``QuerySet`` methods evaluate the ``QuerySet`` and return "
"something *other than* a ``QuerySet``."
msgstr ""

msgid ""
"These methods do not use a cache (see :ref:`caching-and-querysets`). Rather, "
"they query the database each time they're called."
msgstr ""

msgid ""
"Returns the object matching the given lookup parameters, which should be in "
"the format described in `Field lookups`_."
msgstr ""

msgid ""
"``get()`` raises :exc:`~django.core.exceptions.MultipleObjectsReturned` if "
"more than one object was found. The :exc:`~django.core.exceptions."
"MultipleObjectsReturned` exception is an attribute of the model class."
msgstr ""

msgid ""
"``get()`` raises a :exc:`~django.db.models.Model.DoesNotExist` exception if "
"an object wasn't found for the given parameters. This exception is an "
"attribute of the model class. Example::"
msgstr ""

msgid ""
"The :exc:`~django.db.models.Model.DoesNotExist` exception inherits from :exc:"
"`django.core.exceptions.ObjectDoesNotExist`, so you can target multiple :exc:"
"`~django.db.models.Model.DoesNotExist` exceptions. Example::"
msgstr ""

msgid ""
"If you expect a queryset to return one row, you can use ``get()`` without "
"any arguments to return the object for that row::"
msgstr ""

msgid "``create()``"
msgstr "``create()``"

msgid ""
"A convenience method for creating an object and saving it all in one step.  "
"Thus::"
msgstr ""

msgid "are equivalent."
msgstr "adalah setara."

msgid ""
"The :ref:`force_insert <ref-models-force-insert>` parameter is documented "
"elsewhere, but all it means is that a new object will always be created. "
"Normally you won't need to worry about this. However, if your model contains "
"a manual primary key value that you set and if that value already exists in "
"the database, a call to ``create()`` will fail with an :exc:`~django.db."
"IntegrityError` since primary keys must be unique. Be prepared to handle the "
"exception if you are using manual primary keys."
msgstr ""

msgid "``get_or_create()``"
msgstr "``get_or_create()``"

msgid ""
"A convenience method for looking up an object with the given ``kwargs`` (may "
"be empty if your model has defaults for all fields), creating one if "
"necessary."
msgstr ""

msgid ""
"Returns a tuple of ``(object, created)``, where ``object`` is the retrieved "
"or created object and ``created`` is a boolean specifying whether a new "
"object was created."
msgstr ""

msgid "This is meant as a shortcut to boilerplatish code. For example::"
msgstr ""

msgid ""
"This pattern gets quite unwieldy as the number of fields in a model goes up. "
"The above example can be rewritten using ``get_or_create()`` like so::"
msgstr ""

msgid ""
"Any keyword arguments passed to ``get_or_create()`` — *except* an optional "
"one called ``defaults`` — will be used in a :meth:`get()` call. If an object "
"is found, ``get_or_create()`` returns a tuple of that object and ``False``. "
"If multiple objects are found, ``get_or_create`` raises :exc:`~django.core."
"exceptions.MultipleObjectsReturned`. If an object is *not* found, "
"``get_or_create()`` will instantiate and save a new object, returning a "
"tuple of the new object and ``True``. The new object will be created roughly "
"according to this algorithm::"
msgstr ""

msgid ""
"In English, that means start with any non-``'defaults'`` keyword argument "
"that doesn't contain a double underscore (which would indicate a non-exact "
"lookup). Then add the contents of ``defaults``, overriding any keys if "
"necessary, and use the result as the keyword arguments to the model class. "
"If there are any callables in ``defaults``, evaluate them. As hinted at "
"above, this is a simplification of the algorithm that is used, but it "
"contains all the pertinent details. The internal implementation has some "
"more error-checking than this and handles some extra edge-conditions; if "
"you're interested, read the code."
msgstr ""

msgid ""
"If you have a field named ``defaults`` and want to use it as an exact lookup "
"in ``get_or_create()``, just use ``'defaults__exact'``, like so::"
msgstr ""

msgid ""
"The ``get_or_create()`` method has similar error behavior to :meth:"
"`create()` when you're using manually specified primary keys. If an object "
"needs to be created and the key already exists in the database, an :exc:"
"`~django.db.IntegrityError` will be raised."
msgstr ""

msgid ""
"This method is atomic assuming correct usage, correct database "
"configuration, and correct behavior of the underlying database. However, if "
"uniqueness is not enforced at the database level for the ``kwargs`` used in "
"a ``get_or_create`` call (see :attr:`~django.db.models.Field.unique` or :"
"attr:`~django.db.models.Options.unique_together`), this method is prone to a "
"race-condition which can result in multiple rows with the same parameters "
"being inserted simultaneously."
msgstr ""

msgid ""
"If you are using MySQL, be sure to use the ``READ COMMITTED`` isolation "
"level rather than ``REPEATABLE READ`` (the default), otherwise you may see "
"cases where ``get_or_create`` will raise an :exc:`~django.db.IntegrityError` "
"but the object won't appear in a subsequent :meth:`~django.db.models.query."
"QuerySet.get` call."
msgstr ""

msgid ""
"Finally, a word on using ``get_or_create()`` in Django views. Please make "
"sure to use it only in ``POST`` requests unless you have a good reason not "
"to. ``GET`` requests shouldn't have any effect on data. Instead, use "
"``POST`` whenever a request to a page has a side effect on your data. For "
"more, see :rfc:`Safe methods <7231#section-4.2.1>` in the HTTP spec."
msgstr ""

msgid ""
"You can use ``get_or_create()`` through :class:`~django.db.models."
"ManyToManyField` attributes and reverse relations. In that case you will "
"restrict the queries inside the context of that relation. That could lead "
"you to some integrity problems if you don't use it consistently."
msgstr ""

msgid "Being the following models::"
msgstr "Menjadi model berikut::"

msgid ""
"You can use ``get_or_create()`` through Book's chapters field, but it only "
"fetches inside the context of that book::"
msgstr ""

msgid ""
"This is happening because it's trying to get or create \"Chapter 1\" through "
"the book \"Ulysses\", but it can't do any of them: the relation can't fetch "
"that chapter because it isn't related to that book, but it can't create it "
"either because ``title`` field should be unique."
msgstr ""

msgid "Added support for callable values in ``defaults``."
msgstr ""

msgid "``update_or_create()``"
msgstr "``update_or_create()``"

msgid ""
"A convenience method for updating an object with the given ``kwargs``, "
"creating a new one if necessary. The ``defaults`` is a dictionary of (field, "
"value) pairs used to update the object. The values in ``defaults`` can be "
"callables."
msgstr ""

msgid ""
"Returns a tuple of ``(object, created)``, where ``object`` is the created or "
"updated object and ``created`` is a boolean specifying whether a new object "
"was created."
msgstr ""

msgid ""
"The ``update_or_create`` method tries to fetch an object from database based "
"on the given ``kwargs``. If a match is found, it updates the fields passed "
"in the ``defaults`` dictionary."
msgstr ""

msgid ""
"This pattern gets quite unwieldy as the number of fields in a model goes up. "
"The above example can be rewritten using ``update_or_create()`` like so::"
msgstr ""

msgid ""
"For detailed description how names passed in ``kwargs`` are resolved see :"
"meth:`get_or_create`."
msgstr ""

msgid ""
"As described above in :meth:`get_or_create`, this method is prone to a race-"
"condition which can result in multiple rows being inserted simultaneously if "
"uniqueness is not enforced at the database level."
msgstr ""

msgid "``bulk_create()``"
msgstr "``bulk_create()``"

msgid ""
"This method inserts the provided list of objects into the database in an "
"efficient manner (generally only 1 query, no matter how many objects there "
"are)::"
msgstr ""

msgid "This has a number of caveats though:"
msgstr ""

msgid ""
"The model's ``save()`` method will not be called, and the ``pre_save`` and "
"``post_save`` signals will not be sent."
msgstr ""

msgid ""
"It does not work with child models in a multi-table inheritance scenario."
msgstr ""

msgid ""
"If the model's primary key is an :class:`~django.db.models.AutoField` it "
"does not retrieve and set the primary key attribute, as ``save()`` does, "
"unless the database backend supports it (currently PostgreSQL)."
msgstr ""

msgid "It does not work with many-to-many relationships."
msgstr ""

msgid ""
"Support for setting primary keys on objects created using ``bulk_create()`` "
"when using PostgreSQL was added."
msgstr ""

msgid ""
"The ``batch_size`` parameter controls how many objects are created in single "
"query. The default is to create all objects in one batch, except for SQLite "
"where the default is such that at most 999 variables per query are used."
msgstr ""

msgid "``count()``"
msgstr "``count()``"

msgid ""
"Returns an integer representing the number of objects in the database "
"matching the ``QuerySet``. The ``count()`` method never raises exceptions."
msgstr ""

msgid ""
"A ``count()`` call performs a ``SELECT COUNT(*)`` behind the scenes, so you "
"should always use ``count()`` rather than loading all of the record into "
"Python objects and calling ``len()`` on the result (unless you need to load "
"the objects into memory anyway, in which case ``len()`` will be faster)."
msgstr ""

msgid ""
"Depending on which database you're using (e.g. PostgreSQL vs. MySQL), "
"``count()`` may return a long integer instead of a normal Python integer. "
"This is an underlying implementation quirk that shouldn't pose any real-"
"world problems."
msgstr ""

msgid ""
"Note that if you want the number of items in a ``QuerySet`` and are also "
"retrieving model instances from it (for example, by iterating over it), it's "
"probably more efficient to use ``len(queryset)`` which won't cause an extra "
"database query like ``count()`` would."
msgstr ""

msgid "``in_bulk()``"
msgstr "``in_bulk()``"

msgid ""
"Takes a list of primary-key values and returns a dictionary mapping each "
"primary-key value to an instance of the object with the given ID. If a list "
"isn't provided, all objects in the queryset are returned."
msgstr ""

msgid ""
"If you pass ``in_bulk()`` an empty list, you'll get an empty dictionary."
msgstr ""
"Jika anda melewatkan ``in_bulk()`` sebuah daftar kosong, anda akan "
"mendapatkan kamus kosong."

msgid "In older versions, ``id_list`` was a required argument."
msgstr "Dalam versi terlama, ``id_list`` adalah argumen dibutuhkan."

msgid "``iterator()``"
msgstr "``iterator()``"

msgid ""
"Evaluates the ``QuerySet`` (by performing the query) and returns an iterator "
"(see :pep:`234`) over the results. A ``QuerySet`` typically caches its "
"results internally so that repeated evaluations do not result in additional "
"queries. In contrast, ``iterator()`` will read results directly, without "
"doing any caching at the ``QuerySet`` level (internally, the default "
"iterator calls ``iterator()`` and caches the return value). For a "
"``QuerySet`` which returns a large number of objects that you only need to "
"access once, this can result in better performance and a significant "
"reduction in memory."
msgstr ""

msgid ""
"Note that using ``iterator()`` on a ``QuerySet`` which has already been "
"evaluated will force it to evaluate again, repeating the query."
msgstr ""

msgid ""
"Also, use of ``iterator()`` causes previous ``prefetch_related()`` calls to "
"be ignored since these two optimizations do not make sense together."
msgstr ""
"Juga, penggunaan ``iterator()`` menyebabkan panggilan ``prefetch_related()`` "
"sebelumnya dapat diabaikan sejak dua optimalisasi ini tidak masuk akan "
"bersama-sama."

msgid ""
"Depending on the database backend, query results will either be loaded all "
"at once or streamed from the database using server-side cursors."
msgstr ""

msgid "With server-side cursors"
msgstr "Dengan jarum sisi-peladen"

msgid ""
"Oracle and :ref:`PostgreSQL <postgresql-server-side-cursors>` use server-"
"side cursors to stream results from the database without loading the entire "
"result set into memory."
msgstr ""

msgid "The Oracle database driver always uses server-side cursors."
msgstr "Driver basisdata Oracle selalu menggunakan jarum sisi-peladen."

msgid ""
"On PostgreSQL, server-side cursors will only be used when the :setting:"
"`DISABLE_SERVER_SIDE_CURSORS <DATABASE-DISABLE_SERVER_SIDE_CURSORS>` setting "
"is ``False``. Read :ref:`transaction-pooling-server-side-cursors` if you're "
"using a connection pooler configured in transaction pooling mode. When "
"server-side cursors are disabled, the behavior is the same as databases that "
"don't support server-side cursors."
msgstr ""

msgid "Without server-side cursors"
msgstr "Tanpa jarum sisi-peladen"

msgid ""
"MySQL and SQLite don't support streaming results, hence the Python database "
"drivers load the entire result set into memory. The result set is then "
"transformed into Python row objects by the database adapter using the "
"``fetchmany()`` method defined in :pep:`249`."
msgstr ""

msgid "PostgreSQL support for server-side cursors was added."
msgstr "Dukungan PostgreSQL untuk jarum sisi-peladen telah ditambahkan."

msgid "``latest()``"
msgstr "``latest()``"

msgid ""
"Returns the latest object in the table, by date, using the ``field_name`` "
"provided as the date field."
msgstr ""

msgid ""
"This example returns the latest ``Entry`` in the table, according to the "
"``pub_date`` field::"
msgstr ""

msgid ""
"If your model's :ref:`Meta <meta-options>` specifies :attr:`~django.db."
"models.Options.get_latest_by`, you can leave off the ``field_name`` argument "
"to ``earliest()`` or ``latest()``. Django will use the field specified in :"
"attr:`~django.db.models.Options.get_latest_by` by default."
msgstr ""

msgid ""
"Like :meth:`get()`, ``earliest()`` and ``latest()`` raise :exc:`~django.db."
"models.Model.DoesNotExist` if there is no object with the given parameters."
msgstr ""

msgid ""
"Note that ``earliest()`` and ``latest()`` exist purely for convenience and "
"readability."
msgstr ""

msgid "``earliest()`` and ``latest()`` may return instances with null dates."
msgstr ""
"``earliest()`` dan ``latest()`` mungkin mengembalikan instance dengan "
"tanggal null."

msgid ""
"Since ordering is delegated to the database, results on fields that allow "
"null values may be ordered differently if you use different databases. For "
"example, PostgreSQL and MySQL sort null values as if they are higher than "
"non-null values, while SQLite does the opposite."
msgstr ""

msgid "You may want to filter out null values::"
msgstr "Anda mungkin ingin menyaring nilai-nilai null::"

msgid "``earliest()``"
msgstr "``earliest()``"

msgid ""
"Works otherwise like :meth:`~django.db.models.query.QuerySet.latest` except "
"the direction is changed."
msgstr ""

msgid "``first()``"
msgstr "``first()``"

msgid ""
"Returns the first object matched by the queryset, or ``None`` if there is no "
"matching object. If the ``QuerySet`` has no ordering defined, then the "
"queryset is automatically ordered by the primary key."
msgstr ""

msgid ""
"Note that ``first()`` is a convenience method, the following code sample is "
"equivalent to the above example::"
msgstr ""

msgid "``last()``"
msgstr "``last()``"

msgid ""
"Works like  :meth:`first()`, but returns the last object in the queryset."
msgstr ""

msgid "``aggregate()``"
msgstr "``aggregate()``"

msgid ""
"Returns a dictionary of aggregate values (averages, sums, etc.) calculated "
"over the ``QuerySet``. Each argument to ``aggregate()`` specifies a value "
"that will be included in the dictionary that is returned."
msgstr ""

msgid ""
"The aggregation functions that are provided by Django are described in "
"`Aggregation Functions`_ below. Since aggregates are also :doc:`query "
"expressions </ref/models/expressions>`, you may combine aggregates with "
"other aggregates or values to create complex aggregates."
msgstr ""

msgid ""
"Aggregates specified using keyword arguments will use the keyword as the "
"name for the annotation. Anonymous arguments will have a name generated for "
"them based upon the name of the aggregate function and the model field that "
"is being aggregated. Complex aggregates cannot use anonymous arguments and "
"must specify a keyword argument as an alias."
msgstr ""

msgid ""
"For example, when you are working with blog entries, you may want to know "
"the number of authors that have contributed blog entries::"
msgstr ""

msgid ""
"By using a keyword argument to specify the aggregate function, you can "
"control the name of the aggregation value that is returned::"
msgstr ""

msgid "``exists()``"
msgstr "``exists()``"

msgid ""
"Returns ``True`` if the :class:`.QuerySet` contains any results, and "
"``False`` if not. This tries to perform the query in the simplest and "
"fastest way possible, but it *does* execute nearly the same query as a "
"normal :class:`.QuerySet` query."
msgstr ""

msgid ""
":meth:`~.QuerySet.exists` is useful for searches relating to both object "
"membership in a :class:`.QuerySet` and to the existence of any objects in a :"
"class:`.QuerySet`, particularly in the context of a large :class:`.QuerySet`."
msgstr ""

msgid ""
"The most efficient method of finding whether a model with a unique field (e."
"g. ``primary_key``) is a member of a :class:`.QuerySet` is::"
msgstr ""

msgid ""
"Which will be faster than the following which requires evaluating and "
"iterating through the entire queryset::"
msgstr ""

msgid "And to find whether a queryset contains any items::"
msgstr ""

msgid "Which will be faster than::"
msgstr "Yang akan menjadi lebih cepat daripada::"

msgid ""
"... but not by a large degree (hence needing a large queryset for efficiency "
"gains)."
msgstr ""

msgid ""
"Additionally, if a ``some_queryset`` has not yet been evaluated, but you "
"know that it will be at some point, then using ``some_queryset.exists()`` "
"will do more overall work (one query for the existence check plus an extra "
"one to later retrieve the results) than simply using "
"``bool(some_queryset)``, which retrieves the results and then checks if any "
"were returned."
msgstr ""

msgid "``update()``"
msgstr "``update()``"

msgid ""
"Performs an SQL update query for the specified fields, and returns the "
"number of rows matched (which may not be equal to the number of rows updated "
"if some rows already have the new value)."
msgstr ""

msgid ""
"For example, to turn comments off for all blog entries published in 2010, "
"you could do this::"
msgstr ""

msgid ""
"(This assumes your ``Entry`` model has fields ``pub_date`` and "
"``comments_on``.)"
msgstr ""

msgid ""
"You can update multiple fields — there's no limit on how many. For example, "
"here we update the ``comments_on`` and ``headline`` fields::"
msgstr ""

msgid ""
"The ``update()`` method is applied instantly, and the only restriction on "
"the :class:`.QuerySet` that is updated is that it can only update columns in "
"the model's main table, not on related models. You can't do this, for "
"example::"
msgstr ""

msgid "Filtering based on related fields is still possible, though::"
msgstr ""

msgid ""
"You cannot call ``update()`` on a :class:`.QuerySet` that has had a slice "
"taken or can otherwise no longer be filtered."
msgstr ""

msgid "The ``update()`` method returns the number of affected rows::"
msgstr "Cara ``update()`` mengembalikan sejumlah dari baris yang terpengaruh::"

msgid ""
"If you're just updating a record and don't need to do anything with the "
"model object, the most efficient approach is to call ``update()``, rather "
"than loading the model object into memory. For example, instead of doing "
"this::"
msgstr ""

msgid "...do this::"
msgstr "...lakukan ini::"

msgid ""
"Using ``update()`` also prevents a race condition wherein something might "
"change in your database in the short period of time between loading the "
"object and calling ``save()``."
msgstr ""

msgid ""
"Finally, realize that ``update()`` does an update at the SQL level and, "
"thus, does not call any ``save()`` methods on your models, nor does it emit "
"the :attr:`~django.db.models.signals.pre_save` or :attr:`~django.db.models."
"signals.post_save` signals (which are a consequence of calling :meth:`Model."
"save() <django.db.models.Model.save>`). If you want to update a bunch of "
"records for a model that has a custom :meth:`~django.db.models.Model.save()` "
"method, loop over them and call :meth:`~django.db.models.Model.save()`, like "
"this::"
msgstr ""

msgid ""
"Performs an SQL delete query on all rows in the :class:`.QuerySet` and "
"returns the number of objects deleted and a dictionary with the number of "
"deletions per object type."
msgstr ""

msgid ""
"The ``delete()`` is applied instantly. You cannot call ``delete()`` on a :"
"class:`.QuerySet` that has had a slice taken or can otherwise no longer be "
"filtered."
msgstr ""

msgid "For example, to delete all the entries in a particular blog::"
msgstr ""

msgid ""
"By default, Django's :class:`~django.db.models.ForeignKey` emulates the SQL "
"constraint ``ON DELETE CASCADE`` — in other words, any objects with foreign "
"keys pointing at the objects to be deleted will be deleted along with them. "
"For example::"
msgstr ""

msgid ""
"This cascade behavior is customizable via the :attr:`~django.db.models."
"ForeignKey.on_delete` argument to the :class:`~django.db.models.ForeignKey`."
msgstr ""
"Kebiasaan turunan ini dapat di sesuaikan melalui argumen :attr:`~django.db."
"models.ForeignKey.on_delete` ke :class:`~django.db.models.ForeignKey`."

msgid ""
"The ``delete()`` method does a bulk delete and does not call any "
"``delete()`` methods on your models. It does, however, emit the :data:"
"`~django.db.models.signals.pre_delete` and :data:`~django.db.models.signals."
"post_delete` signals for all deleted objects (including cascaded deletions)."
msgstr ""

msgid ""
"Django needs to fetch objects into memory to send signals and handle "
"cascades. However, if there are no cascades and no signals, then Django may "
"take a fast-path and delete objects without fetching into memory. For large "
"deletes this can result in significantly reduced memory usage. The amount of "
"executed queries can be reduced, too."
msgstr ""

msgid ""
"ForeignKeys which are set to :attr:`~django.db.models.ForeignKey.on_delete` "
"``DO_NOTHING`` do not prevent taking the fast-path in deletion."
msgstr ""

msgid ""
"Note that the queries generated in object deletion is an implementation "
"detail subject to change."
msgstr ""

msgid "``as_manager()``"
msgstr "``as_manager()``"

msgid ""
"Class method that returns an instance of :class:`~django.db.models.Manager` "
"with a copy of the ``QuerySet``’s methods. See :ref:`create-manager-with-"
"queryset-methods` for more details."
msgstr ""

msgid "``Field`` lookups"
msgstr "Pencarian ``Field``"

msgid ""
"Field lookups are how you specify the meat of an SQL ``WHERE`` clause. "
"They're specified as keyword arguments to the ``QuerySet`` methods :meth:"
"`filter()`, :meth:`exclude()` and :meth:`get()`."
msgstr ""

msgid ""
"For an introduction, see :ref:`models and database queries documentation "
"<field-lookups-intro>`."
msgstr ""
"Untuk sebuah perkenalan, lihat :ref:`models and database queries "
"documentation 1`."

msgid ""
"Django's built-in lookups are listed below. It is also possible to write :"
"doc:`custom lookups </howto/custom-lookups>` for model fields."
msgstr ""

msgid ""
"As a convenience when no lookup type is provided (like in ``Entry.objects."
"get(id=14)``) the lookup type is assumed to be :lookup:`exact`."
msgstr ""

msgid "``exact``"
msgstr "``exact``"

msgid ""
"Exact match. If the value provided for comparison is ``None``, it will be "
"interpreted as an SQL ``NULL`` (see :lookup:`isnull` for more details)."
msgstr ""

msgid "SQL equivalents::"
msgstr "SQL setara::"

msgid "MySQL comparisons"
msgstr "Perbandingan MySQL"

msgid ""
"In MySQL, a database table's \"collation\" setting determines whether "
"``exact`` comparisons are case-sensitive. This is a database setting, *not* "
"a Django setting. It's possible to configure your MySQL tables to use case-"
"sensitive comparisons, but some trade-offs are involved. For more "
"information about this, see the :ref:`collation section <mysql-collation>` "
"in the :doc:`databases </ref/databases>` documentation."
msgstr ""

msgid "``iexact``"
msgstr "``iexact``"

msgid ""
"Case-insensitive exact match. If the value provided for comparison is "
"``None``, it will be interpreted as an SQL ``NULL`` (see :lookup:`isnull` "
"for more details)."
msgstr ""

msgid ""
"Note the first query will match ``'Beatles Blog'``, ``'beatles blog'``, "
"``'BeAtLes BLoG'``, etc."
msgstr ""

msgid "SQLite users"
msgstr "Pengguna SQLite "

msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons. "
"SQLite does not do case-insensitive matching for Unicode strings."
msgstr ""

msgid "Case-sensitive containment test."
msgstr ""

msgid "SQL equivalent::"
msgstr "SQL setara::"

msgid ""
"Note this will match the headline ``'Lennon honored today'`` but not "
"``'lennon honored today'``."
msgstr ""

msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``contains`` acts "
"like ``icontains`` for SQLite. See the :ref:`database note <sqlite-string-"
"matching>` for more information."
msgstr ""

msgid "``icontains``"
msgstr "``icontains``"

msgid "Case-insensitive containment test."
msgstr ""

msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons."
msgstr ""

msgid "``in``"
msgstr "``in``"

msgid "In a given list."
msgstr "Dalam daftar yang diberikan."

msgid ""
"You can also use a queryset to dynamically evaluate the list of values "
"instead of providing a list of literal values::"
msgstr ""

msgid "This queryset will be evaluated as subselect statement::"
msgstr ""

msgid ""
"If you pass in a ``QuerySet`` resulting from ``values()`` or "
"``values_list()`` as the value to an ``__in`` lookup, you need to ensure you "
"are only extracting one field in the result. For example, this will work "
"(filtering on the blog names)::"
msgstr ""

msgid ""
"This example will raise an exception, since the inner query is trying to "
"extract two field values, where only one is expected::"
msgstr ""

msgid "Performance considerations"
msgstr "Pertimbangan penampilan"

msgid ""
"Be cautious about using nested queries and understand your database server's "
"performance characteristics (if in doubt, benchmark!). Some database "
"backends, most notably MySQL, don't optimize nested queries very well. It is "
"more efficient, in those cases, to extract a list of values and then pass "
"that into the second query. That is, execute two queries instead of one::"
msgstr ""

msgid ""
"Note the ``list()`` call around the Blog ``QuerySet`` to force execution of "
"the first query. Without it, a nested query would be executed, because :ref:"
"`querysets-are-lazy`."
msgstr ""

msgid "``gt``"
msgstr "``gt``"

msgid "Greater than."
msgstr "Lebih besar dari"

msgid "``gte``"
msgstr "``gte``"

msgid "Greater than or equal to."
msgstr "Lebih besar dari atau sama dengan."

msgid "``lt``"
msgstr "``lt``"

msgid "Less than."
msgstr "Kurang dari"

msgid "``lte``"
msgstr "``lte``"

msgid "Less than or equal to."
msgstr "Kurang dari atau sama dengan."

msgid "Case-sensitive starts-with."
msgstr ""

msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``startswith`` "
"acts like ``istartswith`` for SQLite."
msgstr ""

msgid "``istartswith``"
msgstr "``istartswith``"

msgid "Case-insensitive starts-with."
msgstr ""

msgid "Case-sensitive ends-with."
msgstr ""

msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``endswith`` acts "
"like ``iendswith`` for SQLite. Refer to the :ref:`database note <sqlite-"
"string-matching>` documentation for more."
msgstr ""

msgid "``iendswith``"
msgstr "``iendswith``"

msgid "Case-insensitive ends-with."
msgstr ""

msgid "``range``"
msgstr "``range``"

msgid "Range test (inclusive)."
msgstr ""

msgid ""
"You can use ``range`` anywhere you can use ``BETWEEN`` in SQL — for dates, "
"numbers and even characters."
msgstr ""

msgid ""
"Filtering a ``DateTimeField`` with dates won't include items on the last "
"day, because the bounds are interpreted as \"0am on the given date\". If "
"``pub_date`` was a ``DateTimeField``, the above expression would be turned "
"into this SQL::"
msgstr ""

msgid "Generally speaking, you can't mix dates and datetimes."
msgstr ""

msgid "``date``"
msgstr "``date``"

msgid ""
"For datetime fields, casts the value as date. Allows chaining additional "
"field lookups. Takes a date value."
msgstr ""

msgid ""
"(No equivalent SQL code fragment is included for this lookup because "
"implementation of the relevant query varies among different database "
"engines.)"
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``True``, fields are converted to the current time "
"zone before filtering."
msgstr ""

msgid "``year``"
msgstr "``year``"

msgid ""
"For date and datetime fields, an exact year match. Allows chaining "
"additional field lookups. Takes an integer year."
msgstr ""

msgid "(The exact SQL syntax varies for each database engine.)"
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``True``, datetime fields are converted to the "
"current time zone before filtering."
msgstr ""

msgid "``month``"
msgstr "``month``"

msgid ""
"For date and datetime fields, an exact month match. Allows chaining "
"additional field lookups. Takes an integer 1 (January) through 12 (December)."
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``True``, datetime fields are converted to the "
"current time zone before filtering. This requires :ref:`time zone "
"definitions in the database <database-time-zone-definitions>`."
msgstr ""

msgid "``day``"
msgstr "``day``"

msgid ""
"For date and datetime fields, an exact day match. Allows chaining additional "
"field lookups. Takes an integer day."
msgstr ""

msgid ""
"Note this will match any record with a pub_date on the third day of the "
"month, such as January 3, July 3, etc."
msgstr ""

msgid "``week``"
msgstr "``week``"

msgid ""
"For date and datetime fields, return the week number (1-52 or 53) according "
"to `ISO-8601 <https://en.wikipedia.org/wiki/ISO-8601>`_, i.e., weeks start "
"on a Monday and the first week starts on or before Thursday."
msgstr ""

msgid "``week_day``"
msgstr "``week_day``"

msgid ""
"For date and datetime fields, a 'day of the week' match. Allows chaining "
"additional field lookups."
msgstr ""

msgid ""
"Takes an integer value representing the day of week from 1 (Sunday) to 7 "
"(Saturday)."
msgstr ""

msgid ""
"Note this will match any record with a ``pub_date`` that falls on a Monday "
"(day 2 of the week), regardless of the month or year in which it occurs. "
"Week days are indexed with day 1 being Sunday and day 7 being Saturday."
msgstr ""

msgid "``time``"
msgstr "``time``"

msgid ""
"For datetime fields, casts the value as time. Allows chaining additional "
"field lookups. Takes a :class:`datetime.time` value."
msgstr ""

msgid "``hour``"
msgstr "``hour``"

msgid ""
"For datetime and time fields, an exact hour match. Allows chaining "
"additional field lookups. Takes an integer between 0 and 23."
msgstr ""

msgid ""
"For datetime fields, when :setting:`USE_TZ` is ``True``, values are "
"converted to the current time zone before filtering."
msgstr ""

msgid "``minute``"
msgstr "``minute``"

msgid ""
"For datetime and time fields, an exact minute match. Allows chaining "
"additional field lookups. Takes an integer between 0 and 59."
msgstr ""

msgid ""
"For datetime fields, When :setting:`USE_TZ` is ``True``, values are "
"converted to the current time zone before filtering."
msgstr ""

msgid "``second``"
msgstr "``second``"

msgid ""
"For datetime and time fields, an exact second match. Allows chaining "
"additional field lookups. Takes an integer between 0 and 59."
msgstr ""

msgid "``isnull``"
msgstr "``isnull``"

msgid ""
"Takes either ``True`` or ``False``, which correspond to SQL queries of ``IS "
"NULL`` and ``IS NOT NULL``, respectively."
msgstr ""

msgid "``search``"
msgstr "``search``"

msgid ""
"See :ref:`the 1.10 release notes <search-lookup-replacement>` for how to "
"replace it."
msgstr ""
"Lihat :ref:`the 1.10 release notes <search-lookup-replacement>` untuk "
"bagaimana menggantinya."

msgid ""
"A boolean full-text search, taking advantage of full-text indexing. This is "
"like :lookup:`contains` but is significantly faster due to full-text "
"indexing."
msgstr ""

msgid ""
"Note this is only available in MySQL and requires direct manipulation of the "
"database to add the full-text index. By default Django uses BOOLEAN MODE for "
"full text searches. See the `MySQL documentation`_ for additional details."
msgstr ""
"Catat ini hanya tersedia di MySQL dan membutuhkan manipulasi langsung dari "
"basisdata untuk menambahkan indeks full-text. Secara awal Django menggunakan "
"BOOLEAN MODE untuk pencarian teks penuh. Lihat `MySQL documentation`_ untuk "
"tambahan rincian."

msgid "``regex``"
msgstr "``regex``"

msgid "Case-sensitive regular expression match."
msgstr ""

msgid ""
"The regular expression syntax is that of the database backend in use. In the "
"case of SQLite, which has no built in regular expression support, this "
"feature is provided by a (Python) user-defined REGEXP function, and the "
"regular expression syntax is therefore that of Python's ``re`` module."
msgstr ""

msgid ""
"Using raw strings (e.g., ``r'foo'`` instead of ``'foo'``) for passing in the "
"regular expression syntax is recommended."
msgstr ""

msgid "``iregex``"
msgstr "``iregex``"

msgid "Case-insensitive regular expression match."
msgstr ""

msgid "Aggregation functions"
msgstr "Fungsi-fungsi pengumpulan"

msgid ""
"Django provides the following aggregation functions in the ``django.db."
"models`` module. For details on how to use these aggregate functions, see :"
"doc:`the topic guide on aggregation </topics/db/aggregation>`. See the :"
"class:`~django.db.models.Aggregate` documentation to learn how to create "
"your aggregates."
msgstr ""

msgid ""
"SQLite can't handle aggregation on date/time fields out of the box. This is "
"because there are no native date/time fields in SQLite and Django currently "
"emulates these features using a text field. Attempts to use aggregation on "
"date/time fields in SQLite will raise ``NotImplementedError``."
msgstr ""

msgid ""
"Aggregation functions return ``None`` when used with an empty ``QuerySet``. "
"For example, the ``Sum`` aggregation function returns ``None`` instead of "
"``0`` if the ``QuerySet`` contains no entries. An exception is ``Count``, "
"which does return ``0`` if the ``QuerySet`` is empty."
msgstr ""

msgid "All aggregates have the following parameters in common:"
msgstr "Semua pengumpulan mempunyai parameter berikut secara umum:"

msgid "``expression``"
msgstr "``expression``"

msgid ""
"A string that references a field on the model, or a :doc:`query expression </"
"ref/models/expressions>`."
msgstr ""
"Sebuah string yang mengacu sebuah bidang pada model, atau :doc:`query "
"expression 1`."

msgid "``output_field``"
msgstr "``output_field``"

msgid ""
"An optional argument that represents the :doc:`model field </ref/models/"
"fields>` of the return value"
msgstr ""
"Sebuah argumen pilihan yang mewakili :doc:`model field 1` dari nilai balikan"

msgid ""
"When combining multiple field types, Django can only determine the "
"``output_field`` if all fields are of the same type. Otherwise, you must "
"provide the ``output_field`` yourself."
msgstr ""

msgid "``**extra``"
msgstr "``**extra``"

msgid ""
"Keyword arguments that can provide extra context for the SQL generated by "
"the aggregate."
msgstr ""

msgid "``Avg``"
msgstr "``Avg``"

msgid ""
"Returns the mean value of the given expression, which must be numeric unless "
"you specify a different ``output_field``."
msgstr ""

msgid "Default alias: ``<field>__avg``"
msgstr "Nama lain awalan: ``1__avg``"

msgid ""
"Return type: ``float`` (or the type of whatever ``output_field`` is "
"specified)"
msgstr ""
"Jenis balikan: ``float`` (atau jenis dari apapun ``output_field`` yang "
"didukung)"

msgid "``Count``"
msgstr "``Count``"

msgid ""
"Returns the number of objects that are related through the provided "
"expression."
msgstr ""
"Mengembalikan sejumlah obyek yang terkait melalui pernyataan yang disediakan."

msgid "Default alias: ``<field>__count``"
msgstr "Nama lain awalan: ``1__count``"

msgid "Return type: ``int``"
msgstr "Jenis kembalian: ``int``"

msgid ""
"If ``distinct=True``, the count will only include unique instances. This is "
"the SQL equivalent of ``COUNT(DISTINCT <field>)``. The default value is "
"``False``."
msgstr ""

msgid "``Max``"
msgstr "``Max``"

msgid "Returns the maximum value of the given expression."
msgstr "Mengembalikan nilai maksimal dari pernyataan yang diberikan."

msgid "Default alias: ``<field>__max``"
msgstr "Nama lain awalan: ``1__max``"

msgid "Return type: same as input field, or ``output_field`` if supplied"
msgstr ""
"Jenis balikan: sama seperti bidang masukan, atau ``output_field`` jika "
"didukung"

msgid "``Min``"
msgstr "``Min``"

msgid "Returns the minimum value of the given expression."
msgstr "Mengembalikan nilai minimal dari pernyataan yang diberikan."

msgid "Default alias: ``<field>__min``"
msgstr "Nama lain awalan: ``1__min``"

msgid "``StdDev``"
msgstr "``StdDev``"

msgid "Returns the standard deviation of the data in the provided expression."
msgstr ""
"Mengembalikan selisih standar dari data dalam pernyataan yang disediakan."

msgid "Default alias: ``<field>__stddev``"
msgstr "Nama lain awalan: ``1__stddev``"

msgid "Return type: ``float``"
msgstr "Jenis kembalian: ``float``"

msgid ""
"By default, ``StdDev`` returns the population standard deviation. However, "
"if ``sample=True``, the return value will be the sample standard deviation."
msgstr ""

msgid ""
"SQLite doesn't provide ``StdDev`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

msgid "``Sum``"
msgstr "``Sum``"

msgid "Computes the sum of all values of the given expression."
msgstr ""

msgid "Default alias: ``<field>__sum``"
msgstr "Nama lain awalan: ``1__sum``"

msgid "``Variance``"
msgstr "``Variance``"

msgid "Returns the variance of the data in the provided expression."
msgstr ""

msgid "Default alias: ``<field>__variance``"
msgstr "Nama lain awalan: ``1__variance``"

msgid ""
"By default, ``Variance`` returns the population variance. However, if "
"``sample=True``, the return value will be the sample variance."
msgstr ""

msgid ""
"SQLite doesn't provide ``Variance`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

msgid "Query-related tools"
msgstr ""

msgid ""
"This section provides reference material for query-related tools not "
"documented elsewhere."
msgstr ""

msgid "``Q()`` objects"
msgstr "Obyek ``Q()``"

msgid ""
"A ``Q()`` object, like an :class:`~django.db.models.F` object, encapsulates "
"a SQL expression in a Python object that can be used in database-related "
"operations."
msgstr ""

msgid ""
"In general, ``Q() objects`` make it possible to define and reuse conditions. "
"This permits the :ref:`construction of complex database queries <complex-"
"lookups-with-q>` using ``|`` (``OR``) and ``&`` (``AND``) operators; in "
"particular, it is not otherwise possible to use ``OR`` in ``QuerySets``."
msgstr ""

msgid "``Prefetch()`` objects"
msgstr "Obyek ``Prefetch()``"

msgid ""
"The ``Prefetch()`` object can be used to control the operation of :meth:"
"`~django.db.models.query.QuerySet.prefetch_related()`."
msgstr ""
"Obyek ``Prefetch()`` dapat digunakan mengendalikan tindakan dari :meth:"
"`~django.db.models.query.QuerySet.prefetch_related()`."

msgid ""
"The ``lookup`` argument describes the relations to follow and works the same "
"as the string based lookups passed to :meth:`~django.db.models.query."
"QuerySet.prefetch_related()`. For example:"
msgstr ""
"Argumen ``lookup`` menggambarkan hubungan untuk mengikuti dan bekerja sama "
"seperti pencarian berdasarkan string dilewatkan ke :meth:`~django.db.models."
"query.QuerySet.prefetch_related()`. Sebagai contoh:"

msgid ""
"The ``queryset`` argument supplies a base ``QuerySet`` for the given lookup. "
"This is useful to further filter down the prefetch operation, or to call :"
"meth:`~django.db.models.query.QuerySet.select_related()` from the prefetched "
"relation, hence reducing the number of queries even further:"
msgstr ""
"Argumen ``queryset`` memasok dasar ``QuerySet`` untuk pencarian diberikan. "
"Ini berguna untuk menyaring lebih lanjut tindakan pengambilan, atau "
"memanggil :meth:`~django.db.models.query.QuerySet.select_related()` dari "
"hubungan pengambilan, dengan demikian mengurangi sejumlah permintaan lebih "
"jauh:"

msgid ""
"The ``to_attr`` argument sets the result of the prefetch operation to a "
"custom attribute:"
msgstr ""
"Argumen ``to_attr`` menyetel hasil daro tindakan pengambilan pada atribut "
"penyesuaian:"

msgid ""
"When using ``to_attr`` the prefetched result is stored in a list. This can "
"provide a significant speed improvement over traditional "
"``prefetch_related`` calls which store the cached result within a "
"``QuerySet`` instance."
msgstr ""
"Ketika menggunakan ``to_attr`` hasil pengambilan disimpan dalam sebuah "
"daftar. Ini dapat menyediakan peningkatan kecepatan yang signifikan terhadap "
"panggilan ``prefetch_related`` tradisional yang menyimpan hasil cache dalam "
"sebuah instance ``QuerySet``."

msgid "``prefetch_related_objects()``"
msgstr "``prefetch_related_objects()``"

msgid ""
"Prefetches the given lookups on an iterable of model instances. This is "
"useful in code that receives a list of model instances as opposed to a "
"``QuerySet``; for example, when fetching models from a cache or "
"instantiating them manually."
msgstr ""
"Pengambilan pencarian diberikan pada perulangan instance model. Ini berguna "
"dalam kode yang menerima sebuah daftar dari instance model sebagai lawan "
"pada sebuah ``QuerySet``; sebagai contoh, ketika mengambil model-model dari "
"sebuah cache atau menginstansiasi mereka manual."

msgid ""
"Pass an iterable of model instances (must all be of the same class) and the "
"lookups or :class:`Prefetch` objects you want to prefetch for. For example::"
msgstr ""
"Lewatkan sebuah perulangan dari instance model (harus semua jadi kelas sama) "
"dan pencarian atau obyek :class:`Prefetch` anda ingin ambil. Sebagai contoh::"

msgid "Related objects reference"
msgstr ""

msgid ""
"A \"related manager\" is a manager used in a one-to-many or many-to-many "
"related context. This happens in two cases:"
msgstr ""

msgid ""
"The \"other side\" of a :class:`~django.db.models.ForeignKey` relation. That "
"is::"
msgstr ""
"\"other side\" dari sebuah hubungan :class:`~django.db.models.ForeignKey`. "
"Yaitu::"

msgid ""
"In the above example, the methods below will be available on the manager "
"``reporter.article_set``."
msgstr ""
"Dalam contoh diatas, metode-metode dibawah akan tersedia pada pengelola "
"``reporter.article_set``."

msgid "Both sides of a :class:`~django.db.models.ManyToManyField` relation::"
msgstr "Kedua sisi dari hubungan :class:`~django.db.models.ManyToManyField`::"

msgid ""
"In this example, the methods below will be available both on ``topping."
"pizza_set`` and on ``pizza.toppings``."
msgstr ""
"Dalam contoh ini, metode-metode dibawah akan tersedia kedua pada ``topping."
"pizza_set`` dan pada ``pizza.toppings``."

msgid "Adds the specified model objects to the related object set."
msgstr "Menambahkan obyek model ditentukan ke kumpulan obyek terkait."

msgid ""
"In the example above, in the case of a :class:`~django.db.models.ForeignKey` "
"relationship, :meth:`QuerySet.update() <django.db.models.query.QuerySet."
"update>` is used to perform the update. This requires the objects to already "
"be saved."
msgstr ""

msgid ""
"You can use the ``bulk=False`` argument to instead have the related manager "
"perform the update by calling ``e.save()``."
msgstr ""
"Anda dapat menggunakan argumen ``bulk=False`` daripada memiliki pengelola "
"terkait melakukan pembaharuan dengan memanggil ``e.save()``."

msgid ""
"Using ``add()`` with a many-to-many relationship, however, will not call any "
"``save()`` methods, but rather create the relationships using :meth:"
"`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>`. If "
"you need to execute some custom logic when a relationship is created, listen "
"to the :data:`~django.db.models.signals.m2m_changed` signal."
msgstr ""

msgid ""
"Creates a new object, saves it and puts it in the related object set. "
"Returns the newly created object::"
msgstr ""

msgid "This is equivalent to (but much simpler than)::"
msgstr "Ini adalah setara pada (tetapi lebih sederhana dari)::"

msgid ""
"Note that there's no need to specify the keyword argument of the model that "
"defines the relationship. In the above example, we don't pass the parameter "
"``blog`` to ``create()``. Django figures out that the new ``Entry`` object's "
"``blog`` field should be set to ``b``."
msgstr ""

msgid "Removes the specified model objects from the related object set::"
msgstr ""

msgid ""
"Similar to :meth:`add()`, ``e.save()`` is called in the example above to "
"perform the update. Using ``remove()`` with a many-to-many relationship, "
"however, will delete the relationships using :meth:`QuerySet.delete()<django."
"db.models.query.QuerySet.delete>` which means no model ``save()`` methods "
"are called; listen to the :data:`~django.db.models.signals.m2m_changed` "
"signal if you wish to execute custom code when a relationship is deleted."
msgstr ""

msgid ""
"For :class:`~django.db.models.ForeignKey` objects, this method only exists "
"if ``null=True``. If the related field can't be set to ``None`` (``NULL``), "
"then an object can't be removed from a relation without being added to "
"another. In the above example, removing ``e`` from ``b.entry_set()`` is "
"equivalent to doing ``e.blog = None``, and because the ``blog`` :class:"
"`~django.db.models.ForeignKey` doesn't have ``null=True``, this is invalid."
msgstr ""

msgid ""
"For :class:`~django.db.models.ForeignKey` objects, this method accepts a "
"``bulk`` argument to control how to perform the operation. If ``True`` (the "
"default), ``QuerySet.update()`` is used. If ``bulk=False``, the ``save()`` "
"method of each individual model instance is called instead. This triggers "
"the :data:`~django.db.models.signals.pre_save` and :data:`~django.db.models."
"signals.post_save` signals and comes at the expense of performance."
msgstr ""

msgid "Removes all objects from the related object set::"
msgstr ""

msgid ""
"Note this doesn't delete the related objects -- it just disassociates them."
msgstr ""

msgid ""
"Just like ``remove()``, ``clear()`` is only available on :class:`~django.db."
"models.ForeignKey`\\s where ``null=True`` and it also accepts the ``bulk`` "
"keyword argument."
msgstr ""

msgid "Replace the set of related objects::"
msgstr ""

msgid ""
"This method accepts a ``clear`` argument to control how to perform the "
"operation. If ``False`` (the default), the elements missing from the new set "
"are removed using ``remove()`` and only the new ones are added. If "
"``clear=True``, the ``clear()`` method is called instead and the whole set "
"is added at once."
msgstr ""

msgid "The ``bulk`` argument is passed on to :meth:`add`."
msgstr "Argumen ``bulk`` dilewatkan pada :meth:`add`."

msgid ""
"Note that since ``set()`` is a compound operation, it is subject to race "
"conditions. For instance, new objects may be added to the database in "
"between the call to ``clear()`` and the call to ``add()``."
msgstr ""

msgid ""
"Note that ``add()``, ``create()``, ``remove()``, ``clear()``, and ``set()`` "
"all apply database changes immediately for all types of related fields. In "
"other words, there is no need to call ``save()`` on either end of the "
"relationship."
msgstr ""

msgid ""
"Also, if you are using :ref:`an intermediate model <intermediary-"
"manytomany>` for a many-to-many relationship, then the ``add()``, "
"``create()``, ``remove()``, and ``set()`` methods are disabled."
msgstr ""

msgid ""
"If you use :meth:`~django.db.models.query.QuerySet.prefetch_related`, the "
"``add()``, ``remove()``, ``clear()``, and ``set()`` methods clear the "
"prefetched cache."
msgstr ""

msgid "Direct Assignment"
msgstr "Penugasan Langsung"

msgid ""
"A related object set can be replaced in bulk with one operation by assigning "
"a new iterable of objects to it::"
msgstr ""

msgid ""
"If the foreign key relationship has ``null=True``, then the related manager "
"will first disassociate any existing objects in the related set before "
"adding the contents of ``new_list``. Otherwise the objects in ``new_list`` "
"will be added to the existing related object set."
msgstr ""

msgid ""
"Direct assignment is deprecated in favor of the :meth:`~django.db.models."
"fields.related.RelatedManager.set` method::"
msgstr ""

msgid ""
"This prevents confusion about an assignment resulting in an implicit save."
msgstr ""
"Ini mencegah kebingungan tentang sebuah penugasan menghasilkan sebuah "
"tersirat tersimpan."

msgid "Request and response objects"
msgstr ""

msgid "Quick overview"
msgstr "Ikhtisar cepat"

msgid ""
"Django uses request and response objects to pass state through the system."
msgstr ""

msgid ""
"When a page is requested, Django creates an :class:`HttpRequest` object that "
"contains metadata about the request. Then Django loads the appropriate view, "
"passing the :class:`HttpRequest` as the first argument to the view function. "
"Each view is responsible for returning an :class:`HttpResponse` object."
msgstr ""

msgid ""
"This document explains the APIs for :class:`HttpRequest` and :class:"
"`HttpResponse` objects, which are defined in the :mod:`django.http` module."
msgstr ""

msgid "``HttpRequest`` objects"
msgstr "Obyek ``HttpRequest``"

msgid "All attributes should be considered read-only, unless stated otherwise."
msgstr ""

msgid ""
"A string representing the scheme of the request (``http`` or ``https`` "
"usually)."
msgstr ""

msgid ""
"The raw HTTP request body as a byte string. This is useful for processing "
"data in different ways than conventional HTML forms: binary images, XML "
"payload etc. For processing conventional form data, use :attr:`HttpRequest."
"POST`."
msgstr ""

msgid ""
"You can also read from an ``HttpRequest`` using a file-like interface. See :"
"meth:`HttpRequest.read()`."
msgstr ""

msgid ""
"A string representing the full path to the requested page, not including the "
"scheme or domain."
msgstr ""

msgid "Example: ``\"/music/bands/the_beatles/\"``"
msgstr "Contoh: ``\"/music/bands/the_beatles/\"``"

msgid ""
"Under some Web server configurations, the portion of the URL after the host "
"name is split up into a script prefix portion and a path info portion. The "
"``path_info`` attribute always contains the path info portion of the path, "
"no matter what Web server is being used. Using this instead of :attr:"
"`~HttpRequest.path` can make your code easier to move between test and "
"deployment servers."
msgstr ""

msgid ""
"For example, if the ``WSGIScriptAlias`` for your application is set to ``\"/"
"minfo\"``, then ``path`` might be ``\"/minfo/music/bands/the_beatles/\"`` "
"and ``path_info`` would be ``\"/music/bands/the_beatles/\"``."
msgstr ""

msgid ""
"A string representing the HTTP method used in the request. This is "
"guaranteed to be uppercase. For example::"
msgstr ""

msgid ""
"A string representing the current encoding used to decode form submission "
"data (or ``None``, which means the :setting:`DEFAULT_CHARSET` setting is "
"used). You can write to this attribute to change the encoding used when "
"accessing the form data. Any subsequent attribute accesses (such as reading "
"from :attr:`GET` or :attr:`POST`) will use the new ``encoding`` value. "
"Useful if you know the form data is not in the :setting:`DEFAULT_CHARSET` "
"encoding."
msgstr ""

msgid ""
"A string representing the MIME type of the request, parsed from the "
"``CONTENT_TYPE`` header."
msgstr ""

msgid ""
"A dictionary of key/value parameters included in the ``CONTENT_TYPE`` header."
msgstr ""

msgid ""
"A dictionary-like object containing all given HTTP GET parameters. See the :"
"class:`QueryDict` documentation below."
msgstr ""

msgid ""
"A dictionary-like object containing all given HTTP POST parameters, "
"providing that the request contains form data. See the :class:`QueryDict` "
"documentation below. If you need to access raw or non-form data posted in "
"the request, access this through the :attr:`HttpRequest.body` attribute "
"instead."
msgstr ""

msgid ""
"It's possible that a request can come in via POST with an empty ``POST`` "
"dictionary -- if, say, a form is requested via the POST HTTP method but does "
"not include form data. Therefore, you shouldn't use ``if request.POST`` to "
"check for use of the POST method; instead, use ``if request.method == \"POST"
"\"`` (see :attr:`HttpRequest.method`)."
msgstr ""

msgid "``POST`` does *not* include file-upload information. See :attr:`FILES`."
msgstr ""

msgid "A dictionary containing all cookies. Keys and values are strings."
msgstr ""

msgid ""
"A dictionary-like object containing all uploaded files. Each key in "
"``FILES`` is the ``name`` from the ``<input type=\"file\" name=\"\" />``. "
"Each value in ``FILES`` is an :class:`~django.core.files.uploadedfile."
"UploadedFile`."
msgstr ""

msgid "See :doc:`/topics/files` for more information."
msgstr "Lihat :doc:`/topics/files` untuk informasi lebih."

msgid ""
"``FILES`` will only contain data if the request method was POST and the "
"``<form>`` that posted to the request had ``enctype=\"multipart/form-data"
"\"``. Otherwise, ``FILES`` will be a blank dictionary-like object."
msgstr ""

msgid ""
"A dictionary containing all available HTTP headers. Available headers depend "
"on the client and server, but here are some examples:"
msgstr ""

msgid "``CONTENT_LENGTH`` -- The length of the request body (as a string)."
msgstr "``CONTENT_LENGTH`` -- Panjang dari badan peminta (sebagai string)."

msgid "``CONTENT_TYPE`` -- The MIME type of the request body."
msgstr "``CONTENT_TYPE`` -- Jenis MIME dari badan peminta."

msgid "``HTTP_ACCEPT`` -- Acceptable content types for the response."
msgstr "``HTTP_ACCEPT`` -- Jenis-jenis isi diterima untuk tanggapan."

msgid "``HTTP_ACCEPT_ENCODING`` -- Acceptable encodings for the response."
msgstr "``HTTP_ACCEPT_ENCODING`` -- Penyandian yang diterima untuk tanggapan."

msgid "``HTTP_ACCEPT_LANGUAGE`` -- Acceptable languages for the response."
msgstr "``HTTP_ACCEPT_LANGUAGE`` -- Bahasa yang diterima untuk tanggapan."

msgid "``HTTP_HOST`` -- The HTTP Host header sent by the client."
msgstr "``HTTP_HOST`` -- Kepala HTTP Host dikirim oleh klien."

msgid "``HTTP_REFERER`` -- The referring page, if any."
msgstr "``HTTP_REFERER`` -- Halaman acuan, jika ada."

msgid "``HTTP_USER_AGENT`` -- The client's user-agent string."
msgstr "``HTTP_USER_AGENT`` -- String agen-user klien."

msgid "``QUERY_STRING`` -- The query string, as a single (unparsed) string."
msgstr ""
"``QUERY_STRING`` -- String permintaan, sebagai tunggal (tidak diurai) string."

msgid "``REMOTE_ADDR`` -- The IP address of the client."
msgstr "``REMOTE_ADDR`` -- Alamat IP dari klien."

msgid "``REMOTE_HOST`` -- The hostname of the client."
msgstr "``REMOTE_HOST`` -- Hostname dari klien."

msgid "``REMOTE_USER`` -- The user authenticated by the Web server, if any."
msgstr ""
"``REMOTE_USER`` -- Pengguna diautentifikasi oleh peladen Jaringan, jika ada."

msgid "``REQUEST_METHOD`` -- A string such as ``\"GET\"`` or ``\"POST\"``."
msgstr ""
"``REQUEST_METHOD`` -- Sebuah string seperti ``\"GET\"`` atau ``\"POST\"``."

msgid "``SERVER_NAME`` -- The hostname of the server."
msgstr "``SERVER_NAME`` -- Hostname dari peladen."

msgid "``SERVER_PORT`` -- The port of the server (as a string)."
msgstr "``SERVER_PORT`` -- Port dari peladen (sebagai string)."

msgid ""
"With the exception of ``CONTENT_LENGTH`` and ``CONTENT_TYPE``, as given "
"above, any HTTP headers in the request are converted to ``META`` keys by "
"converting all characters to uppercase, replacing any hyphens with "
"underscores and adding an ``HTTP_`` prefix to the name. So, for example, a "
"header called ``X-Bender`` would be mapped to the ``META`` key "
"``HTTP_X_BENDER``."
msgstr ""

msgid ""
"Note that :djadmin:`runserver` strips all headers with underscores in the "
"name, so you won't see them in ``META``. This prevents header-spoofing based "
"on ambiguity between underscores and dashes both being normalizing to "
"underscores in WSGI environment variables. It matches the behavior of Web "
"servers like Nginx and Apache 2.4+."
msgstr ""

msgid ""
"An instance of :class:`~django.urls.ResolverMatch` representing the resolved "
"URL. This attribute is only set after URL resolving took place, which means "
"it's available in all views but not in middleware which are executed before "
"URL resolving takes place (you can use it in :meth:`process_view` though)."
msgstr ""

msgid "Attributes set by application code"
msgstr "Atribut-atribut disetel oleh kode aplikasi"

msgid ""
"Django doesn't set these attributes itself but makes use of them if set by "
"your application."
msgstr ""
"Django tidak menyetel atribut ini sendiri tetapi menggunakan mereka jika "
"disetel oleh aplikasi anda."

msgid ""
"The :ttag:`url` template tag will use its value as the ``current_app`` "
"argument to :func:`~django.urls.reverse()`."
msgstr ""
"Etiket cetakan :ttag:`url` akan menggunakan nilainya sebagai argumen "
"``current_app`` pada :func:`~django.urls.reverse()`."

msgid ""
"This will be used as the root URLconf for the current request, overriding "
"the :setting:`ROOT_URLCONF` setting. See :ref:`how-django-processes-a-"
"request` for details."
msgstr ""

msgid ""
"``urlconf`` can be set to ``None`` to revert any changes made by previous "
"middleware and return to using the :setting:`ROOT_URLCONF`."
msgstr ""

msgid "Attributes set by middleware"
msgstr "Atribut-atribut disetel oleh middleware"

msgid ""
"Some of the middleware included in Django's contrib apps set attributes on "
"the request. If you don't see the attribute on a request, be sure the "
"appropriate middleware class is listed in :setting:`MIDDLEWARE`."
msgstr ""

msgid ""
"From the :class:`~django.contrib.sessions.middleware.SessionMiddleware`: A "
"readable and writable, dictionary-like object that represents the current "
"session."
msgstr ""

msgid ""
"From the :class:`~django.contrib.sites.middleware.CurrentSiteMiddleware`: An "
"instance of :class:`~django.contrib.sites.models.Site` or :class:`~django."
"contrib.sites.requests.RequestSite` as returned by :func:`~django.contrib."
"sites.shortcuts.get_current_site()` representing the current site."
msgstr ""

msgid ""
"From the :class:`~django.contrib.auth.middleware.AuthenticationMiddleware`: "
"An instance of :setting:`AUTH_USER_MODEL` representing the currently logged-"
"in user. If the user isn't currently logged in, ``user`` will be set to an "
"instance of :class:`~django.contrib.auth.models.AnonymousUser`. You can tell "
"them apart with :attr:`~django.contrib.auth.models.User.is_authenticated`, "
"like so::"
msgstr ""

msgid ""
"Returns the originating host of the request using information from the "
"``HTTP_X_FORWARDED_HOST`` (if :setting:`USE_X_FORWARDED_HOST` is enabled) "
"and ``HTTP_HOST`` headers, in that order. If they don't provide a value, the "
"method uses a combination of ``SERVER_NAME`` and ``SERVER_PORT`` as detailed "
"in :pep:`3333`."
msgstr ""

msgid "Example: ``\"127.0.0.1:8000\"``"
msgstr "Contoh: ``\"127.0.0.1:8000\"``"

msgid ""
"The :meth:`~HttpRequest.get_host()` method fails when the host is behind "
"multiple proxies. One solution is to use middleware to rewrite the proxy "
"headers, as in the following example::"
msgstr ""

msgid ""
"This middleware should be positioned before any other middleware that relies "
"on the value of :meth:`~HttpRequest.get_host()` -- for instance, :class:"
"`~django.middleware.common.CommonMiddleware` or :class:`~django.middleware."
"csrf.CsrfViewMiddleware`."
msgstr ""

msgid ""
"Returns the originating port of the request using information from the "
"``HTTP_X_FORWARDED_PORT`` (if :setting:`USE_X_FORWARDED_PORT` is enabled) "
"and ``SERVER_PORT`` ``META`` variables, in that order."
msgstr ""

msgid "Returns the ``path``, plus an appended query string, if applicable."
msgstr ""

msgid "Example: ``\"/music/bands/the_beatles/?print=true\"``"
msgstr "Contoh: ``\"/music/bands/the_beatles/?print=true\"``"

msgid ""
"Returns the absolute URI form of ``location``. If no location is provided, "
"the location will be set to ``request.get_full_path()``."
msgstr ""

msgid ""
"If the location is already an absolute URI, it will not be altered. "
"Otherwise the absolute URI is built using the server variables available in "
"this request."
msgstr ""

msgid ""
"Example: ``\"https://example.com/music/bands/the_beatles/?print=true\"``"
msgstr ""
"Contoh: ``\"https://example.com/music/bands/the_beatles/?print=true\"``"

msgid ""
"Mixing HTTP and HTTPS on the same site is discouraged, therefore :meth:"
"`~HttpRequest.build_absolute_uri()` will always generate an absolute URI "
"with the same scheme the current request has. If you need to redirect users "
"to HTTPS, it's best to let your Web server redirect all HTTP traffic to "
"HTTPS."
msgstr ""

msgid ""
"Returns a cookie value for a signed cookie, or raises a ``django.core."
"signing.BadSignature`` exception if the signature is no longer valid. If you "
"provide the ``default`` argument the exception will be suppressed and that "
"default value will be returned instead."
msgstr ""

msgid ""
"The optional ``salt`` argument can be used to provide extra protection "
"against brute force attacks on your secret key. If supplied, the ``max_age`` "
"argument will be checked against the signed timestamp attached to the cookie "
"value to ensure the cookie is not older than ``max_age`` seconds."
msgstr ""

msgid ""
"See :doc:`cryptographic signing </topics/signing>` for more information."
msgstr ""
"Lihat  :doc:`penandatangan kriptograpi </topics/signing>`  untuk informasi "
"lebih."

msgid ""
"Returns ``True`` if the request is secure; that is, if it was made with "
"HTTPS."
msgstr ""

msgid ""
"Returns ``True`` if the request was made via an ``XMLHttpRequest``, by "
"checking the ``HTTP_X_REQUESTED_WITH`` header for the string "
"``'XMLHttpRequest'``. Most modern JavaScript libraries send this header. If "
"you write your own ``XMLHttpRequest`` call (on the browser side), you'll "
"have to set this header manually if you want ``is_ajax()`` to work."
msgstr ""

msgid ""
"If a response varies on whether or not it's requested via AJAX and you are "
"using some form of caching like Django's :mod:`cache middleware <django."
"middleware.cache>`, you should decorate the view with :func:"
"`vary_on_headers('X-Requested-With') <django.views.decorators.vary."
"vary_on_headers>` so that the responses are properly cached."
msgstr ""

msgid ""
"Methods implementing a file-like interface for reading from an "
"``HttpRequest`` instance. This makes it possible to consume an incoming "
"request in a streaming fashion. A common use-case would be to process a big "
"XML payload with an iterative parser without constructing a whole XML tree "
"in memory."
msgstr ""

msgid ""
"Given this standard interface, an ``HttpRequest`` instance can be passed "
"directly to an XML parser such as :class:`~xml.etree.ElementTree."
"ElementTree`::"
msgstr ""

msgid "``QueryDict`` objects"
msgstr "Obyek ``QueryDict``"

msgid ""
"In an :class:`HttpRequest` object, the :attr:`~HttpRequest.GET` and :attr:"
"`~HttpRequest.POST` attributes are instances of ``django.http.QueryDict``, a "
"dictionary-like class customized to deal with multiple values for the same "
"key. This is necessary because some HTML form elements, notably ``<select "
"multiple>``, pass multiple values for the same key."
msgstr ""

msgid ""
"The ``QueryDict``\\ s at ``request.POST`` and ``request.GET`` will be "
"immutable when accessed in a normal request/response cycle. To get a mutable "
"version you need to use :meth:`QueryDict.copy`."
msgstr ""

msgid ""
":class:`QueryDict` implements all the standard dictionary methods because "
"it's a subclass of dictionary. Exceptions are outlined here:"
msgstr ""

msgid "Instantiates a ``QueryDict`` object based on ``query_string``."
msgstr ""

msgid ""
"If ``query_string`` is not passed in, the resulting ``QueryDict`` will be "
"empty (it will have no keys or values)."
msgstr ""

msgid ""
"Most ``QueryDict``\\ s you encounter, and in particular those at ``request."
"POST`` and ``request.GET``, will be immutable. If you are instantiating one "
"yourself, you can make it mutable by passing ``mutable=True`` to its "
"``__init__()``."
msgstr ""

msgid ""
"Strings for setting both keys and values will be converted from ``encoding`` "
"to unicode. If ``encoding`` is not set, it defaults to :setting:"
"`DEFAULT_CHARSET`."
msgstr ""

msgid ""
"Creates a new ``QueryDict`` with keys from ``iterable`` and each value equal "
"to ``value``. For example::"
msgstr ""

msgid ""
"Returns the value for the given key. If the key has more than one value, it "
"returns the last value. Raises ``django.utils.datastructures."
"MultiValueDictKeyError`` if the key does not exist. (This is a subclass of "
"Python's standard :exc:`KeyError`, so you can stick to catching "
"``KeyError``.)"
msgstr ""

msgid ""
"Sets the given key to ``[value]`` (a list whose single element is "
"``value``). Note that this, as other dictionary functions that have side "
"effects, can only be called on a mutable ``QueryDict`` (such as one that was "
"created via :meth:`QueryDict.copy`)."
msgstr ""

msgid ""
"Returns ``True`` if the given key is set. This lets you do, e.g., ``if \"foo"
"\" in request.GET``."
msgstr ""

msgid ""
"Uses the same logic as :meth:`__getitem__`, with a hook for returning a "
"default value if the key doesn't exist."
msgstr ""

msgid ""
"Like :meth:`dict.setdefault`, except it uses :meth:`__setitem__` internally."
msgstr ""

msgid ""
"Takes either a ``QueryDict`` or a dictionary. Like :meth:`dict.update`, "
"except it *appends* to the current dictionary items rather than replacing "
"them. For example::"
msgstr ""

msgid ""
"Like :meth:`dict.items`, except this uses the same last-value logic as :meth:"
"`__getitem__`. For example::"
msgstr ""

msgid ""
"Like ``dict.iteritems()``, except this uses the same last-value logic as :"
"meth:`__getitem__`."
msgstr ""

msgid "Available only on Python 2."
msgstr "Tersedia hanya pada Python 2."

msgid ""
"Like :meth:`QueryDict.iteritems()` except it includes all values, as a list, "
"for each member of the dictionary."
msgstr ""

msgid ""
"Like :meth:`dict.values`, except this uses the same last-value logic as :"
"meth:`__getitem__`. For example::"
msgstr ""

msgid "Just like :meth:`QueryDict.values()`, except an iterator."
msgstr ""

msgid "In addition, ``QueryDict`` has the following methods:"
msgstr ""

msgid ""
"Returns a copy of the object using :func:`copy.deepcopy`. This copy will be "
"mutable even if the original was not."
msgstr ""

msgid ""
"Returns a list of the data with the requested key. Returns an empty list if "
"the key doesn't exist and a default value wasn't provided. It's guaranteed "
"to return a list unless the default value provided isn't a list."
msgstr ""

msgid "Sets the given key to ``list_`` (unlike :meth:`__setitem__`)."
msgstr ""

msgid "Appends an item to the internal list associated with key."
msgstr ""

msgid ""
"Like :meth:`setdefault`, except it takes a list of values instead of a "
"single value."
msgstr ""

msgid ""
"Like :meth:`items()`, except it includes all values, as a list, for each "
"member of the dictionary. For example::"
msgstr ""

msgid ""
"Returns a list of values for the given key and removes them from the "
"dictionary. Raises ``KeyError`` if the key does not exist. For example::"
msgstr ""

msgid ""
"Removes an arbitrary member of the dictionary (since there's no concept of "
"ordering), and returns a two value tuple containing the key and a list of "
"all values for the key. Raises ``KeyError`` when called on an empty "
"dictionary. For example::"
msgstr ""

msgid ""
"Returns a ``dict`` representation of ``QueryDict``. For every (key, list) "
"pair in ``QueryDict``, ``dict`` will have (key, item), where item is one "
"element of the list, using the same logic as :meth:`QueryDict.__getitem__`::"
msgstr ""

msgid "Returns a string of the data in query string format. For example::"
msgstr ""

msgid ""
"Use the ``safe`` parameter to pass characters which don't require encoding. "
"For example::"
msgstr ""

msgid "``HttpResponse`` objects"
msgstr "Obyek ``HttpResponse``"

msgid ""
"In contrast to :class:`HttpRequest` objects, which are created automatically "
"by Django, :class:`HttpResponse` objects are your responsibility. Each view "
"you write is responsible for instantiating, populating, and returning an :"
"class:`HttpResponse`."
msgstr ""

msgid "The :class:`HttpResponse` class lives in the :mod:`django.http` module."
msgstr "Kelas :class:`HttpResponse` berada di modul :mod:`django.http`"

msgid "Passing strings"
msgstr "Melewatkan string"

msgid ""
"Typical usage is to pass the contents of the page, as a string, to the :"
"class:`HttpResponse` constructor::"
msgstr ""

msgid ""
"But if you want to add content incrementally, you can use ``response`` as a "
"file-like object::"
msgstr ""

msgid "Passing iterators"
msgstr ""

msgid ""
"Finally, you can pass ``HttpResponse`` an iterator rather than strings. "
"``HttpResponse`` will consume the iterator immediately, store its content as "
"a string, and discard it. Objects with a ``close()`` method such as files "
"and generators are immediately closed."
msgstr ""

msgid ""
"If you need the response to be streamed from the iterator to the client, you "
"must use the :class:`StreamingHttpResponse` class instead."
msgstr ""

msgid ""
"Objects with a ``close()`` method used to be closed when the WSGI server "
"called ``close()`` on the response."
msgstr ""

msgid "Setting header fields"
msgstr "Mengatur bidang kepala"

msgid ""
"To set or remove a header field in your response, treat it like a "
"dictionary::"
msgstr ""

msgid ""
"Note that unlike a dictionary, ``del`` doesn't raise ``KeyError`` if the "
"header field doesn't exist."
msgstr ""

msgid ""
"For setting the ``Cache-Control`` and ``Vary`` header fields, it is "
"recommended to use the :func:`~django.utils.cache.patch_cache_control` and :"
"func:`~django.utils.cache.patch_vary_headers` methods from :mod:`django."
"utils.cache`, since these fields can have multiple, comma-separated values. "
"The \"patch\" methods ensure that other values, e.g. added by a middleware, "
"are not removed."
msgstr ""

msgid ""
"HTTP header fields cannot contain newlines. An attempt to set a header field "
"containing a newline character (CR or LF) will raise ``BadHeaderError``"
msgstr ""

msgid "Telling the browser to treat the response as a file attachment"
msgstr ""

msgid ""
"To tell the browser to treat the response as a file attachment, use the "
"``content_type`` argument and set the ``Content-Disposition`` header. For "
"example, this is how you might return a Microsoft Excel spreadsheet::"
msgstr ""

msgid ""
"There's nothing Django-specific about the ``Content-Disposition`` header, "
"but it's easy to forget the syntax, so we've included it here."
msgstr ""

msgid ""
"A bytestring representing the content, encoded from a Unicode object if "
"necessary."
msgstr ""

msgid ""
"A string denoting the charset in which the response will be encoded. If not "
"given at ``HttpResponse`` instantiation time, it will be extracted from "
"``content_type`` and if that is unsuccessful, the :setting:`DEFAULT_CHARSET` "
"setting will be used."
msgstr ""

msgid "The :rfc:`HTTP status code <7231#section-6>` for the response."
msgstr ""

msgid ""
"Unless :attr:`reason_phrase` is explicitly set, modifying the value of "
"``status_code`` outside the constructor will also modify the value of "
"``reason_phrase``."
msgstr ""

msgid ""
"The HTTP reason phrase for the response. It uses the :rfc:`HTTP standard's "
"<7231#section-6.1>` default reason phrases."
msgstr ""

msgid ""
"Unless explicitly set, ``reason_phrase`` is determined by the value of :attr:"
"`status_code`."
msgstr ""

msgid "This is always ``False``."
msgstr "Ini selalu ``False``."

msgid ""
"This attribute exists so middleware can treat streaming responses "
"differently from regular responses."
msgstr ""

msgid "``True`` if the response has been closed."
msgstr "``True`` jika tanggapan telah ditutup."

msgid ""
"Instantiates an ``HttpResponse`` object with the given page content and "
"content type."
msgstr ""

msgid ""
"``content`` should be an iterator or a string. If it's an iterator, it "
"should return strings, and those strings will be joined together to form the "
"content of the response. If it is not an iterator or a string, it will be "
"converted to a string when accessed."
msgstr ""

msgid ""
"``content_type`` is the MIME type optionally completed by a character set "
"encoding and is used to fill the HTTP ``Content-Type`` header. If not "
"specified, it is formed by the :setting:`DEFAULT_CONTENT_TYPE` and :setting:"
"`DEFAULT_CHARSET` settings, by default: \"`text/html; charset=utf-8`\"."
msgstr ""

msgid ""
"``status`` is the :rfc:`HTTP status code <7231#section-6>` for the response."
msgstr ""
"``status`` adalah :rfc:`HTTP status code <7231#section-6>` untuk tanggapan."

msgid ""
"``reason`` is the HTTP response phrase. If not provided, a default phrase "
"will be used."
msgstr ""

msgid ""
"``charset`` is the charset in which the response will be encoded. If not "
"given it will be extracted from ``content_type``, and if that is "
"unsuccessful, the :setting:`DEFAULT_CHARSET` setting will be used."
msgstr ""

msgid ""
"Sets the given header name to the given value. Both ``header`` and ``value`` "
"should be strings."
msgstr ""

msgid ""
"Deletes the header with the given name. Fails silently if the header doesn't "
"exist. Case-insensitive."
msgstr ""

msgid "Returns the value for the given header name. Case-insensitive."
msgstr ""

msgid ""
"Returns ``True`` or ``False`` based on a case-insensitive check for a header "
"with the given name."
msgstr ""

msgid "Sets a header unless it has already been set."
msgstr ""

msgid ""
"Sets a cookie. The parameters are the same as in the :class:`~http.cookies."
"Morsel` cookie object in the Python standard library."
msgstr ""

msgid ""
"``max_age`` should be a number of seconds, or ``None`` (default) if the "
"cookie should last only as long as the client's browser session. If "
"``expires`` is not specified, it will be calculated."
msgstr ""

msgid ""
"``expires`` should either be a string in the format ``\"Wdy, DD-Mon-YY HH:MM:"
"SS GMT\"`` or a ``datetime.datetime`` object in UTC. If ``expires`` is a "
"``datetime`` object, the ``max_age`` will be calculated."
msgstr ""

msgid ""
"Use ``domain`` if you want to set a cross-domain cookie. For example, "
"``domain=\".lawrence.com\"`` will set a cookie that is readable by the "
"domains www.lawrence.com, blogs.lawrence.com and calendars.lawrence.com. "
"Otherwise, a cookie will only be readable by the domain that set it."
msgstr ""

msgid ""
"Use ``httponly=True`` if you want to prevent client-side JavaScript from "
"having access to the cookie."
msgstr ""

msgid ""
"HTTPOnly_ is a flag included in a Set-Cookie HTTP response header. It is not "
"part of the :rfc:`2109` standard for cookies, and it isn't honored "
"consistently by all browsers. However, when it is honored, it can be a "
"useful way to mitigate the risk of a client-side script from accessing the "
"protected cookie data."
msgstr ""

msgid ""
"Both :rfc:`2109` and :rfc:`6265` state that user agents should support "
"cookies of at least 4096 bytes. For many browsers this is also the maximum "
"size. Django will not raise an exception if there's an attempt to store a "
"cookie of more than 4096 bytes, but many browsers will not set the cookie "
"correctly."
msgstr ""

msgid ""
"Like :meth:`~HttpResponse.set_cookie()`, but :doc:`cryptographic signing </"
"topics/signing>` the cookie before setting it. Use in conjunction with :meth:"
"`HttpRequest.get_signed_cookie`. You can use the optional ``salt`` argument "
"for added key strength, but you will need to remember to pass it to the "
"corresponding :meth:`HttpRequest.get_signed_cookie` call."
msgstr ""

msgid ""
"Deletes the cookie with the given key. Fails silently if the key doesn't "
"exist."
msgstr ""
"Menghapus kue dengan kunci yang diberikan. Gagal secara diam jika kunci "
"tidak ada."

msgid ""
"Due to the way cookies work, ``path`` and ``domain`` should be the same "
"values you used in ``set_cookie()`` -- otherwise the cookie may not be "
"deleted."
msgstr ""

msgid "This method makes an :class:`HttpResponse` instance a file-like object."
msgstr ""
"Metode ini membuat sebuah instance :class:`HttpResponse` sebuah obyek "
"seperti-berkas."

msgid ""
"Returns the value of :attr:`HttpResponse.content`. This method makes an :"
"class:`HttpResponse` instance a stream-like object."
msgstr ""
"Mengembalikan nilai dari :attr:`HttpResponse.content`. Metode ini membuat "
"sebuah instance :class:`HttpResponse` sebuah obyek seperti-aliran."

msgid ""
"Always ``False``. This method makes an :class:`HttpResponse` instance a "
"stream-like object."
msgstr ""

msgid ""
"Always ``True``. This method makes an :class:`HttpResponse` instance a "
"stream-like object."
msgstr ""

msgid ""
"Writes a list of lines to the response. Line separators are not added. This "
"method makes an :class:`HttpResponse` instance a stream-like object."
msgstr ""

msgid "``HttpResponse`` subclasses"
msgstr "Subkelas ``HttpResponse``"

msgid ""
"Django includes a number of ``HttpResponse`` subclasses that handle "
"different types of HTTP responses. Like ``HttpResponse``, these subclasses "
"live in :mod:`django.http`."
msgstr ""

msgid ""
"The first argument to the constructor is required -- the path to redirect "
"to. This can be a fully qualified URL (e.g. ``'https://www.yahoo.com/"
"search/'``), an absolute path with no domain (e.g. ``'/search/'``), or even "
"a relative path (e.g. ``'search/'``). In that last case, the client browser "
"will reconstruct the full URL itself according to the current path. See :"
"class:`HttpResponse` for other optional constructor arguments. Note that "
"this returns an HTTP status code 302."
msgstr ""

msgid ""
"This read-only attribute represents the URL the response will redirect to "
"(equivalent to the ``Location`` response header)."
msgstr ""

msgid ""
"Like :class:`HttpResponseRedirect`, but it returns a permanent redirect "
"(HTTP status code 301) instead of a \"found\" redirect (status code 302)."
msgstr ""

msgid ""
"The constructor doesn't take any arguments and no content should be added to "
"this response. Use this to designate that a page hasn't been modified since "
"the user's last request (status code 304)."
msgstr ""

msgid "Acts just like :class:`HttpResponse` but uses a 400 status code."
msgstr ""
"Bertindak seperti :class:`HttpResponse` tetapi menggunakan kode keadaan 400."

msgid "Acts just like :class:`HttpResponse` but uses a 404 status code."
msgstr ""
"Bertindak seperti :class:`HttpResponse` tetapi menggunakan kode keadaan 404."

msgid "Acts just like :class:`HttpResponse` but uses a 403 status code."
msgstr ""
"Bertindak seperti :class:`HttpResponse` tetapi menggunakan kode keadaan 403."

msgid ""
"Like :class:`HttpResponse`, but uses a 405 status code. The first argument "
"to the constructor is required: a list of permitted methods (e.g. ``['GET', "
"'POST']``)."
msgstr ""

msgid "Acts just like :class:`HttpResponse` but uses a 410 status code."
msgstr ""
"Bertindak seperti :class:`HttpResponse` tetapi menggunakan kode keadaan 410."

msgid "Acts just like :class:`HttpResponse` but uses a 500 status code."
msgstr ""
"Bertindak seperti :class:`HttpResponse` tetapi menggunakan kode keadaan 500."

msgid ""
"If a custom subclass of :class:`HttpResponse` implements a ``render`` "
"method, Django will treat it as emulating a :class:`~django.template."
"response.SimpleTemplateResponse`, and the ``render`` method must itself "
"return a valid response object."
msgstr ""

msgid "``JsonResponse`` objects"
msgstr "Obyek ``JsonResponse``"

msgid ""
"An :class:`HttpResponse` subclass that helps to create a JSON-encoded "
"response. It inherits most behavior from its superclass with a couple "
"differences:"
msgstr ""

msgid "Its default ``Content-Type`` header is set to ``application/json``."
msgstr ""

msgid ""
"The first parameter, ``data``, should be a ``dict`` instance. If the "
"``safe`` parameter is set to ``False`` (see below) it can be any JSON-"
"serializable object."
msgstr ""

msgid ""
"The ``encoder``, which defaults to :class:`django.core.serializers.json."
"DjangoJSONEncoder`, will be used to serialize the data. See :ref:`JSON "
"serialization <serialization-formats-json>` for more details about this "
"serializer."
msgstr ""

msgid ""
"The ``safe`` boolean parameter defaults to ``True``. If it's set to "
"``False``, any object can be passed for serialization (otherwise only "
"``dict`` instances are allowed). If ``safe`` is ``True`` and a non-``dict`` "
"object is passed as the first argument, a :exc:`TypeError` will be raised."
msgstr ""

msgid ""
"The ``json_dumps_params`` parameter is a dictionary of keyword arguments to "
"pass to the ``json.dumps()`` call used to generate the response."
msgstr ""

msgid "Typical usage could look like::"
msgstr "Penggunaan tertentu dapat terlihat seperti::"

msgid "Serializing non-dictionary objects"
msgstr ""

msgid ""
"In order to serialize objects other than ``dict`` you must set the ``safe`` "
"parameter to ``False``::"
msgstr ""

msgid "Without passing ``safe=False``, a :exc:`TypeError` will be raised."
msgstr ""
"Tanpa melewatkan ``safe=False``, sebuah :exc:`TypeError` akan dimunculkan."

msgid ""
"Before the `5th edition of ECMAScript <http://www.ecma-international.org/"
"ecma-262/5.1/index.html#sec-11.1.4>`_ it was possible to poison the "
"JavaScript ``Array`` constructor. For this reason, Django does not allow "
"passing non-dict objects to the :class:`~django.http.JsonResponse` "
"constructor by default.  However, most modern browsers implement EcmaScript "
"5 which removes this attack vector. Therefore it is possible to disable this "
"security precaution."
msgstr ""

msgid "Changing the default JSON encoder"
msgstr "Merubah penyandi JSON awalan"

msgid ""
"If you need to use a different JSON encoder class you can pass the "
"``encoder`` parameter to the constructor method::"
msgstr ""
"Anda butuh menggunakan kelas penyandi JSON berbeda anda dapat lewatkan "
"parameter ``encoder`` ke metode pembangun::"

msgid "``StreamingHttpResponse`` objects"
msgstr "Obyek ``StreamingHttpResponse``"

msgid ""
"The :class:`StreamingHttpResponse` class is used to stream a response from "
"Django to the browser. You might want to do this if generating the response "
"takes too long or uses too much memory. For instance, it's useful for :ref:"
"`generating large CSV files <streaming-csv-files>`."
msgstr ""

msgid ""
"Django is designed for short-lived requests. Streaming responses will tie a "
"worker process for the entire duration of the response. This may result in "
"poor performance."
msgstr ""

msgid ""
"Generally speaking, you should perform expensive tasks outside of the "
"request-response cycle, rather than resorting to a streamed response."
msgstr ""

msgid ""
"The :class:`StreamingHttpResponse` is not a subclass of :class:"
"`HttpResponse`, because it features a slightly different API. However, it is "
"almost identical, with the following notable differences:"
msgstr ""

msgid "It should be given an iterator that yields strings as content."
msgstr ""

msgid ""
"You cannot access its content, except by iterating the response object "
"itself. This should only occur when the response is returned to the client."
msgstr ""

msgid ""
"It has no ``content`` attribute. Instead, it has a :attr:"
"`~StreamingHttpResponse.streaming_content` attribute."
msgstr ""

msgid ""
"You cannot use the file-like object ``tell()`` or ``write()`` methods. Doing "
"so will raise an exception."
msgstr ""

msgid ""
":class:`StreamingHttpResponse` should only be used in situations where it is "
"absolutely required that the whole content isn't iterated before "
"transferring the data to the client. Because the content can't be accessed, "
"many middlewares can't function normally. For example the ``ETag`` and "
"``Content-Length`` headers can't be generated for streaming responses."
msgstr ""

msgid "An iterator of strings representing the content."
msgstr ""

msgid "This is always ``True``."
msgstr "Ini selalu ``True``."

msgid "``FileResponse`` objects"
msgstr "Obyek ``FileResponse``"

msgid ""
":class:`FileResponse` is a subclass of :class:`StreamingHttpResponse` "
"optimized for binary files. It uses `wsgi.file_wrapper`_ if provided by the "
"wsgi server, otherwise it streams the file out in small chunks."
msgstr ""

msgid "``FileResponse`` expects a file open in binary mode like so::"
msgstr ""

msgid "``SchemaEditor``"
msgstr "``SchemaEditor``"

msgid ""
"Django's migration system is split into two parts; the logic for calculating "
"and storing what operations should be run (``django.db.migrations``), and "
"the database abstraction layer that turns things like \"create a model\" or "
"\"delete a field\" into SQL - which is the job of the ``SchemaEditor``."
msgstr ""

msgid ""
"It's unlikely that you will want to interact directly with ``SchemaEditor`` "
"as a normal developer using Django, but if you want to write your own "
"migration system, or have more advanced needs, it's a lot nicer than writing "
"SQL."
msgstr ""

msgid ""
"Each database backend in Django supplies its own version of "
"``SchemaEditor``, and it's always accessible via the ``connection."
"schema_editor()`` context manager::"
msgstr ""

msgid ""
"It must be used via the context manager as this allows it to manage things "
"like transactions and deferred SQL (like creating ``ForeignKey`` "
"constraints)."
msgstr ""

msgid ""
"It exposes all possible operations as methods, that should be called in the "
"order you wish changes to be applied. Some possible operations or types of "
"change are not possible on all databases - for example, MyISAM does not "
"support foreign key constraints."
msgstr ""

msgid ""
"If you are writing or maintaining a third-party database backend for Django, "
"you will need to provide a ``SchemaEditor`` implementation in order to work "
"with 1.7's migration functionality - however, as long as your database is "
"relatively standard in its use of SQL and relational design, you should be "
"able to subclass one of the built-in Django ``SchemaEditor`` classes and "
"just tweak the syntax a little. Also note that there are a few new database "
"features that migrations will look for: ``can_rollback_ddl`` and "
"``supports_combined_alters`` are the most important."
msgstr ""

msgid "``execute()``"
msgstr "``execute()``"

msgid ""
"Executes the SQL statement passed in, with parameters if supplied. This is a "
"simple wrapper around the normal database cursors that allows capture of the "
"SQL to a ``.sql`` file if the user wishes."
msgstr ""

msgid "``create_model()``"
msgstr "``create_model()``"

msgid ""
"Creates a new table in the database for the provided model, along with any "
"unique constraints or indexes it requires."
msgstr ""

msgid "``delete_model()``"
msgstr "``delete_model()``"

msgid ""
"Drops the model's table in the database along with any unique constraints or "
"indexes it has."
msgstr ""

msgid "``add_index()``"
msgstr "``add_index()``"

msgid "Adds ``index`` to ``model``’s table."
msgstr "Tambah ``index`` ke tabel ``model``. "

msgid "``remove_index()``"
msgstr "``remove_index()``"

msgid "Removes ``index`` from ``model``’s table."
msgstr "Pindah ``index`` ke tabel ``model``. "

msgid "``alter_unique_together()``"
msgstr "``alter_unique_together()``"

msgid ""
"Changes a model's :attr:`~django.db.models.Options.unique_together` value; "
"this will add or remove unique constraints from the model's table until they "
"match the new value."
msgstr ""

msgid "``alter_index_together()``"
msgstr "``alter_index_together()``"

msgid ""
"Changes a model's :attr:`~django.db.models.Options.index_together` value; "
"this will add or remove indexes from the model's table until they match the "
"new value."
msgstr ""

msgid "``alter_db_table()``"
msgstr "``alter_db_table()``"

msgid "Renames the model's table from ``old_db_table`` to ``new_db_table``."
msgstr ""

msgid "``alter_db_tablespace()``"
msgstr "``alter_db_tablespace()``"

msgid "Moves the model's table from one tablespace to another."
msgstr ""

msgid "``add_field()``"
msgstr "``add_field()``"

msgid ""
"Adds a column (or sometimes multiple) to the model's table to represent the "
"field. This will also add indexes or a unique constraint if the field has "
"``db_index=True`` or ``unique=True``."
msgstr ""

msgid ""
"If the field is a ``ManyToManyField`` without a value for ``through``, "
"instead of creating a column, it will make a table to represent the "
"relationship. If ``through`` is provided, it is a no-op."
msgstr ""

msgid ""
"If the field is a ``ForeignKey``, this will also add the foreign key "
"constraint to the column."
msgstr ""

msgid "``remove_field()``"
msgstr "``remove_field()``"

msgid ""
"Removes the column(s) representing the field from the model's table, along "
"with any unique constraints, foreign key constraints, or indexes caused by "
"that field."
msgstr ""

msgid ""
"If the field is a ManyToManyField without a value for ``through``, it will "
"remove the table created to track the relationship. If ``through`` is "
"provided, it is a no-op."
msgstr ""

msgid "``alter_field()``"
msgstr "``alter_field()``"

msgid ""
"This transforms the field on the model from the old field to the new one. "
"This includes changing the name of the column (the :attr:`~django.db.models."
"Field.db_column` attribute), changing the type of the field (if the field "
"class changes), changing the ``NULL`` status of the field, adding or "
"removing field-only unique constraints and indexes, changing primary key, "
"and changing the destination of ``ForeignKey`` constraints."
msgstr ""

msgid ""
"The most common transformation this cannot do is transforming a "
"``ManyToManyField`` into a normal Field or vice-versa; Django cannot do this "
"without losing data, and so it will refuse to do it. Instead, :meth:`."
"remove_field` and :meth:`.add_field` should be called separately."
msgstr ""

msgid ""
"If the database has the ``supports_combined_alters``, Django will try and do "
"as many of these in a single database call as possible; otherwise, it will "
"issue a separate ALTER statement for each change, but will not issue ALTERs "
"where no change is required (as South often did)."
msgstr ""

msgid "All attributes should be considered read-only unless stated otherwise."
msgstr ""

msgid "``connection``"
msgstr "``connection``"

msgid ""
"A connection object to the database. A useful attribute of the connection is "
"``alias`` which can be used to determine the name of the database being "
"accessed."
msgstr ""

msgid ""
"This is useful when doing data migrations for :ref:`migrations with multiple "
"databases <data-migrations-and-multiple-databases>`."
msgstr ""

msgid ""
"Be careful when you override settings, especially when the default value is "
"a non-empty list or dictionary, such as :setting:`MIDDLEWARE_CLASSES` and :"
"setting:`STATICFILES_FINDERS`. Make sure you keep the components required by "
"the features of Django you wish to use."
msgstr ""

msgid "Core Settings"
msgstr "Pengaturan Inti"

msgid ""
"Here's a list of settings available in Django core and their default values. "
"Settings provided by contrib apps are listed below, followed by a topical "
"index of the core settings. For introductory material, see the :doc:"
"`settings topic guide </topics/settings>`."
msgstr ""

msgid "``ABSOLUTE_URL_OVERRIDES``"
msgstr "``ABSOLUTE_URL_OVERRIDES``"

msgid "Default: ``{}`` (Empty dictionary)"
msgstr "Awalan: ``{}`` (Kamus kosong)"

msgid ""
"A dictionary mapping ``\"app_label.model_name\"`` strings to functions that "
"take a model object and return its URL. This is a way of inserting or "
"overriding ``get_absolute_url()`` methods on a per-installation basis. "
"Example::"
msgstr ""

msgid ""
"Note that the model name used in this setting should be all lower-case, "
"regardless of the case of the actual model class name."
msgstr ""

msgid "``ADMINS``"
msgstr "``ADMINS``"

msgid "Default: ``[]`` (Empty list)"
msgstr "Awalan: ``{}`` (Daftar kosong)"

msgid ""
"A list of all the people who get code error notifications. When "
"``DEBUG=False`` and a view raises an exception, Django will email these "
"people with the full exception information. Each item in the list should be "
"a tuple of (Full name, email address). Example::"
msgstr ""

msgid ""
"Note that Django will email *all* of these people whenever an error happens. "
"See :doc:`/howto/error-reporting` for more information."
msgstr ""

msgid "``ALLOWED_HOSTS``"
msgstr "``ALLOWED_HOSTS``"

msgid ""
"A list of strings representing the host/domain names that this Django site "
"can serve. This is a security measure to prevent :ref:`HTTP Host header "
"attacks <host-headers-virtual-hosting>`, which are possible even under many "
"seemingly-safe web server configurations."
msgstr ""

msgid ""
"Values in this list can be fully qualified names (e.g. ``'www.example."
"com'``), in which case they will be matched against the request's ``Host`` "
"header exactly (case-insensitive, not including port). A value beginning "
"with a period can be used as a subdomain wildcard: ``'.example.com'`` will "
"match ``example.com``, ``www.example.com``, and any other subdomain of "
"``example.com``. A value of ``'*'`` will match anything; in this case you "
"are responsible to provide your own validation of the ``Host`` header "
"(perhaps in a middleware; if so this middleware must be listed first in :"
"setting:`MIDDLEWARE`)."
msgstr ""

msgid ""
"Django also allows the `fully qualified domain name (FQDN)`_ of any entries. "
"Some browsers include a trailing dot in the ``Host`` header which Django "
"strips when performing host validation."
msgstr ""

msgid ""
"If the ``Host`` header (or ``X-Forwarded-Host`` if :setting:"
"`USE_X_FORWARDED_HOST` is enabled) does not match any value in this list, "
"the :meth:`django.http.HttpRequest.get_host()` method will raise :exc:"
"`~django.core.exceptions.SuspiciousOperation`."
msgstr ""

msgid ""
"When :setting:`DEBUG` is ``True`` and ``ALLOWED_HOSTS`` is empty, the host "
"is validated against ``['localhost', '127.0.0.1', '[::1]']``."
msgstr ""

msgid ""
"``ALLOWED_HOSTS`` is also :ref:`checked when running tests <topics-testing-"
"advanced-multiple-hosts>`."
msgstr ""
"``ALLOWED_HOSTS`` adalah juga :ref:`checked when running tests <topics-"
"testing-advanced-multiple-hosts>`."

msgid ""
"This validation only applies via :meth:`~django.http.HttpRequest."
"get_host()`; if your code accesses the ``Host`` header directly from "
"``request.META`` you are bypassing this security protection."
msgstr ""

msgid "In older versions, ``ALLOWED_HOSTS`` wasn't checked when running tests."
msgstr ""
"Dalam versi terlama, ``ALLOWED_HOSTS`` tidak diperiksa ketika menjalankan "
"percobaan. "

msgid ""
"In older versions, ``ALLOWED_HOSTS`` wasn't checked if ``DEBUG=True``. This "
"was also changed in Django 1.10.3, 1.9.11, and 1.8.16 to prevent a DNS "
"rebinding attack."
msgstr ""

msgid "``APPEND_SLASH``"
msgstr "``APPEND_SLASH``"

msgid "Default: ``True``"
msgstr "Awal: ``True``"

msgid ""
"When set to ``True``, if the request URL does not match any of the patterns "
"in the URLconf and it doesn't end in a slash, an HTTP redirect is issued to "
"the same URL with a slash appended. Note that the redirect may cause any "
"data submitted in a POST request to be lost."
msgstr ""
"Ketika disetel menjadi ``True``, jika URL diminta tidak cocok salah satu "
"dari pola dalam URLconf dan itu tidak berakhir dalam sebuah garis miring, "
"sebuah pengalihan HTTP diterbitkan ke URL sama dengan sebuah garis miring "
"ditambahkan. Catat bahwa pengalihan mungkin menyebabkan data apapun diajukan "
"dalam sebuah permintaan POST menjadi hilang. "

msgid ""
"The :setting:`APPEND_SLASH` setting is only used if :class:`~django."
"middleware.common.CommonMiddleware` is installed (see :doc:`/topics/http/"
"middleware`). See also :setting:`PREPEND_WWW`."
msgstr ""
"Pengaturan :setting:`APPEND_SLASH` hanya digunakan jika :class:`~django."
"middleware.common.CommonMiddleware` dipasang (lihat :doc:`/topics/http/"
"middleware`). Lihat juga :setting:`PREPEND_WWW`."

msgid "``CACHES``"
msgstr "``CACHES``"

msgid ""
"A dictionary containing the settings for all caches to be used with Django. "
"It is a nested dictionary whose contents maps cache aliases to a dictionary "
"containing the options for an individual cache."
msgstr ""

msgid ""
"The :setting:`CACHES` setting must configure a ``default`` cache; any number "
"of additional caches may also be specified. If you are using a cache backend "
"other than the local memory cache, or you need to define multiple caches, "
"other options will be required. The following cache options are available."
msgstr ""

msgid "``BACKEND``"
msgstr "``BACKEND``"

msgid "Default: ``''`` (Empty string)"
msgstr "Awalan: ``''`` (String kosong)"

msgid "The cache backend to use. The built-in cache backends are:"
msgstr ""

msgid "``'django.core.cache.backends.db.DatabaseCache'``"
msgstr "``'django.core.cache.backends.db.DatabaseCache'``"

msgid "``'django.core.cache.backends.dummy.DummyCache'``"
msgstr "``'django.core.cache.backends.dummy.DummyCache'``"

msgid "``'django.core.cache.backends.filebased.FileBasedCache'``"
msgstr "``'django.core.cache.backends.filebased.FileBasedCache'``"

msgid "``'django.core.cache.backends.locmem.LocMemCache'``"
msgstr "``'django.core.cache.backends.locmem.LocMemCache'``"

msgid "``'django.core.cache.backends.memcached.MemcachedCache'``"
msgstr "``'django.core.cache.backends.memcached.MemcachedCache'``"

msgid "``'django.core.cache.backends.memcached.PyLibMCCache'``"
msgstr "``'django.core.cache.backends.memcached.PyLibMCCache'``"

msgid ""
"You can use a cache backend that doesn't ship with Django by setting :"
"setting:`BACKEND <CACHES-BACKEND>` to a fully-qualified path of a cache "
"backend class (i.e. ``mypackage.backends.whatever.WhateverCache``)."
msgstr ""

msgid "``KEY_FUNCTION``"
msgstr "``KEY_FUNCTION``"

msgid ""
"A string containing a dotted path to a function (or any callable) that "
"defines how to compose a prefix, version and key into a final cache key. The "
"default implementation is equivalent to the function::"
msgstr ""

msgid ""
"You may use any key function you want, as long as it has the same argument "
"signature."
msgstr ""

msgid ""
"See the :ref:`cache documentation <cache_key_transformation>` for more "
"information."
msgstr ""
"Lihat :ref:`cache documentation <cache_key_transformation>` untuk informasi "
"lebih."

msgid "``KEY_PREFIX``"
msgstr "``KEY_PREFIX``"

msgid ""
"A string that will be automatically included (prepended by default) to all "
"cache keys used by the Django server."
msgstr ""

msgid ""
"See the :ref:`cache documentation <cache_key_prefixing>` for more "
"information."
msgstr ""
"Lihat :ref:`cache documentation <cache_key_prefixing>` untuk informasi lebih."

msgid "``LOCATION``"
msgstr "``LOCATION``"

msgid ""
"The location of the cache to use. This might be the directory for a file "
"system cache, a host and port for a memcache server, or simply an "
"identifying name for a local memory cache. e.g.::"
msgstr ""

msgid "``OPTIONS``"
msgstr "``OPTIONS``"

msgid "Default: ``None``"
msgstr "Awalan: ``None``"

msgid ""
"Extra parameters to pass to the cache backend. Available parameters vary "
"depending on your cache backend."
msgstr ""

msgid ""
"Some information on available parameters can be found in the :ref:`cache "
"arguments <cache_arguments>` documentation. For more information, consult "
"your backend module's own documentation."
msgstr ""

msgid "``TIMEOUT``"
msgstr "``TIMEOUT``"

msgid "Default: ``300``"
msgstr "Awalan: ``300``"

msgid ""
"The number of seconds before a cache entry is considered stale. If the value "
"of this settings is ``None``, cache entries will not expire."
msgstr ""

msgid "``VERSION``"
msgstr "``VERSION``"

msgid "Default: ``1``"
msgstr "Awalan: ``1``"

msgid ""
"The default version number for cache keys generated by the Django server."
msgstr ""

msgid ""
"See the :ref:`cache documentation <cache_versioning>` for more information."
msgstr ""
"Lihat the :ref:`cache documentation <cache_versioning>` untuk informasi "
"lebih."

msgid "``CACHE_MIDDLEWARE_ALIAS``"
msgstr "``CACHE_MIDDLEWARE_ALIAS``"

msgid "Default: ``default``"
msgstr "Awal: ``default``"

msgid ""
"The cache connection to use for the :ref:`cache middleware <the-per-site-"
"cache>`."
msgstr ""

msgid "``CACHE_MIDDLEWARE_KEY_PREFIX``"
msgstr "``CACHE_MIDDLEWARE_KEY_PREFIX``"

msgid ""
"A string which will be prefixed to the cache keys generated by the :ref:"
"`cache middleware <the-per-site-cache>`. This prefix is combined with the :"
"setting:`KEY_PREFIX <CACHES-KEY_PREFIX>` setting; it does not replace it."
msgstr ""

msgid "See :doc:`/topics/cache`."
msgstr "Lihat :doc:`/topics/cache`."

msgid "``CACHE_MIDDLEWARE_SECONDS``"
msgstr "``CACHE_MIDDLEWARE_SECONDS``"

msgid "Default: ``600``"
msgstr "Awalan: ``600``"

msgid ""
"The default number of seconds to cache a page for the :ref:`cache middleware "
"<the-per-site-cache>`."
msgstr ""

msgid "``CSRF_COOKIE_AGE``"
msgstr "``CSRF_COOKIE_AGE``"

msgid "Default: ``31449600`` (approximately 1 year, in seconds)"
msgstr "Awalan: ``31449600`` (maksimal 1 tahun, dalam detik)"

msgid "The age of CSRF cookies, in seconds."
msgstr "Umur kue CSRF, dalam detik."

msgid ""
"The reason for setting a long-lived expiration time is to avoid problems in "
"the case of a user closing a browser or bookmarking a page and then loading "
"that page from a browser cache. Without persistent cookies, the form "
"submission would fail in this case."
msgstr ""

msgid ""
"Some browsers (specifically Internet Explorer) can disallow the use of "
"persistent cookies or can have the indexes to the cookie jar corrupted on "
"disk, thereby causing CSRF protection checks to (sometimes intermittently) "
"fail. Change this setting to ``None`` to use session-based CSRF cookies, "
"which keep the cookies in-memory instead of on persistent storage."
msgstr ""

msgid "``CSRF_COOKIE_DOMAIN``"
msgstr "``CSRF_COOKIE_DOMAIN``"

msgid ""
"The domain to be used when setting the CSRF cookie.  This can be useful for "
"easily allowing cross-subdomain requests to be excluded from the normal "
"cross site request forgery protection.  It should be set to a string such as "
"``\".example.com\"`` to allow a POST request from a form on one subdomain to "
"be accepted by a view served from another subdomain."
msgstr ""

msgid ""
"Please note that the presence of this setting does not imply that Django's "
"CSRF protection is safe from cross-subdomain attacks by default - please see "
"the :ref:`CSRF limitations <csrf-limitations>` section."
msgstr ""

msgid "``CSRF_COOKIE_HTTPONLY``"
msgstr "``CSRF_COOKIE_HTTPONLY``"

msgid "Default: ``False``"
msgstr "Awal: ``False``"

msgid ""
"Whether to use ``HttpOnly`` flag on the CSRF cookie. If this is set to "
"``True``, client-side JavaScript will not to be able to access the CSRF "
"cookie."
msgstr ""

msgid ""
"Designating the CSRF cookie as ``HttpOnly`` doesn't offer any practical "
"protection because CSRF is only to protect against cross-domain attacks. If "
"an attacker can read the cookie via JavaScript, they're already on the same "
"domain as far as the browser knows, so they can do anything they like "
"anyway. (XSS is a much bigger hole than CSRF.)"
msgstr ""

msgid ""
"Although the setting offers little practical benefit, it's sometimes "
"required by security auditors."
msgstr ""

msgid ""
"If you enable this and need to send the value of the CSRF token with an AJAX "
"request, your JavaScript must pull the value from a hidden CSRF token form "
"input on the page instead of from the cookie."
msgstr ""

msgid "See :setting:`SESSION_COOKIE_HTTPONLY` for details on ``HttpOnly``."
msgstr ""

msgid "``CSRF_COOKIE_NAME``"
msgstr "``CSRF_COOKIE_NAME``"

msgid "Default: ``'csrftoken'``"
msgstr "Awalan: ``csrftoken``"

msgid ""
"The name of the cookie to use for the CSRF authentication token. This can be "
"whatever you want (as long as it's different from the other cookie names in "
"your application). See :doc:`/ref/csrf`."
msgstr ""

msgid "``CSRF_COOKIE_PATH``"
msgstr "``CSRF_COOKIE_PATH``"

msgid "Default: ``'/'``"
msgstr "Awalan: ``'/'``"

msgid ""
"The path set on the CSRF cookie. This should either match the URL path of "
"your Django installation or be a parent of that path."
msgstr ""

msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own CSRF cookie."
msgstr ""

msgid "``CSRF_COOKIE_SECURE``"
msgstr "``CSRF_COOKIE_SECURE``"

msgid ""
"Whether to use a secure cookie for the CSRF cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent with an HTTPS connection."
msgstr ""

msgid "``CSRF_USE_SESSIONS``"
msgstr "``CSRF_USE_SESSIONS``"

msgid ""
"Whether to store the CSRF token in the user's session instead of in a "
"cookie. It requires the use of :mod:`django.contrib.sessions`."
msgstr ""

msgid ""
"Storing the CSRF token in a cookie (Django's default) is safe, but storing "
"it in the session is common practice in other web frameworks and therefore "
"sometimes demanded by security auditors."
msgstr ""

msgid "``CSRF_FAILURE_VIEW``"
msgstr "``CSRF_FAILURE_VIEW``"

msgid "Default: ``'django.views.csrf.csrf_failure'``"
msgstr "Awalan: ``'django.views.csrf.csrf_failure'``"

msgid ""
"A dotted path to the view function to be used when an incoming request is "
"rejected by the :doc:`CSRF protection </ref/csrf>`. The function should have "
"this signature::"
msgstr ""

msgid ""
"where ``reason`` is a short message (intended for developers or logging, not "
"for end users) indicating the reason the request was rejected. It should "
"return an :class:`~django.http.HttpResponseForbidden`."
msgstr ""

msgid ""
"``django.views.csrf.csrf_failure()`` accepts an additional ``template_name`` "
"parameter that defaults to ``'403_csrf.html'``. If a template with that name "
"exists, it will be used to render the page."
msgstr ""

msgid ""
"The ``template_name`` parameter and the behavior of searching for a template "
"called ``403_csrf.html`` were added to ``csrf_failure()``."
msgstr ""

msgid "``CSRF_HEADER_NAME``"
msgstr "``CSRF_HEADER_NAME``"

msgid "Default: ``'HTTP_X_CSRFTOKEN'``"
msgstr "Awalan: ``'HTTP_X_CSRFTOKEN'``"

msgid "The name of the request header used for CSRF authentication."
msgstr "Nama dari kepala peminta digunakan untuk autentifikasi CSRF."

msgid ""
"As with other HTTP headers in ``request.META``, the header name received "
"from the server is normalized by converting all characters to uppercase, "
"replacing any hyphens with underscores, and adding an ``'HTTP_'`` prefix to "
"the name. For example, if your client sends a ``'X-XSRF-TOKEN'`` header, the "
"setting should be ``'HTTP_X_XSRF_TOKEN'``."
msgstr ""

msgid "``CSRF_TRUSTED_ORIGINS``"
msgstr "``CSRF_TRUSTED_ORIGINS``"

msgid ""
"A list of hosts which are trusted origins for unsafe requests (e.g. "
"``POST``). For a :meth:`secure <django.http.HttpRequest.is_secure>` unsafe "
"request, Django's CSRF protection requires that the request have a "
"``Referer`` header that matches the origin present in the ``Host`` header. "
"This prevents, for example, a ``POST`` request from ``subdomain.example."
"com`` from succeeding against ``api.example.com``. If you need cross-origin "
"unsafe requests over HTTPS, continuing the example, add ``\"subdomain."
"example.com\"`` to this list. The setting also supports subdomains, so you "
"could add ``\".example.com\"``, for example, to allow access from all "
"subdomains of ``example.com``."
msgstr ""

msgid "``DATABASES``"
msgstr "``DATABASES``"

msgid ""
"A dictionary containing the settings for all databases to be used with "
"Django. It is a nested dictionary whose contents map a database alias to a "
"dictionary containing the options for an individual database."
msgstr ""

msgid ""
"The :setting:`DATABASES` setting must configure a ``default`` database; any "
"number of additional databases may also be specified."
msgstr ""
"Pengaturan :setting:`DATABASES` harus mengkonfigurasi sebuah basisdata "
"``default``; angka apapun dari basisdata tambahan mungkin juga ditentukan."

msgid ""
"The simplest possible settings file is for a single-database setup using "
"SQLite. This can be configured using the following::"
msgstr ""

msgid ""
"When connecting to other database backends, such as MySQL, Oracle, or "
"PostgreSQL, additional connection parameters will be required. See the :"
"setting:`ENGINE <DATABASE-ENGINE>` setting below on how to specify other "
"database types. This example is for PostgreSQL::"
msgstr ""

msgid ""
"The following inner options that may be required for more complex "
"configurations are available:"
msgstr ""

msgid "``ATOMIC_REQUESTS``"
msgstr "``ATOMIC_REQUESTS``"

msgid ""
"Set this to ``True`` to wrap each view in a transaction on this database. "
"See :ref:`tying-transactions-to-http-requests`."
msgstr ""

msgid "``AUTOCOMMIT``"
msgstr "``AUTOCOMMIT``"

msgid ""
"Set this to ``False`` if you want to :ref:`disable Django's transaction "
"management <deactivate-transaction-management>` and implement your own."
msgstr ""

msgid "``ENGINE``"
msgstr "``ENGINE``"

msgid "The database backend to use. The built-in database backends are:"
msgstr ""
"Backend basisdata untuk digunakan. Backend basisdata siap-pakai adalah:"

msgid "``'django.db.backends.postgresql'``"
msgstr "``'django.db.backends.postgresql'``"

msgid "``'django.db.backends.mysql'``"
msgstr "``'django.db.backends.mysql'``"

msgid "``'django.db.backends.sqlite3'``"
msgstr "``'django.db.backends.sqlite3'``"

msgid "``'django.db.backends.oracle'``"
msgstr "``'django.db.backends.oracle'``"

msgid ""
"You can use a database backend that doesn't ship with Django by setting "
"``ENGINE`` to a fully-qualified path (i.e. ``mypackage.backends.whatever``)."
msgstr ""

msgid "``HOST``"
msgstr "``HOST``"

msgid ""
"Which host to use when connecting to the database. An empty string means "
"localhost. Not used with SQLite."
msgstr ""

msgid ""
"If this value starts with a forward slash (``'/'``) and you're using MySQL, "
"MySQL will connect via a Unix socket to the specified socket. For example::"
msgstr ""
"Jika nilai ini dimulai dengan garis depan (``'/'``) dan anda sedang "
"menggunakan MySQL, MySQLakan terhubung melalui sebuah soket unix pada soket "
"yang ditentukan. Sebagi contoh:: "

msgid ""
"If you're using MySQL and this value *doesn't* start with a forward slash, "
"then this value is assumed to be the host."
msgstr ""
"Jika anda menggunakan MySQL dan nilai ini *tidak* dimulai dengan garis "
"miring depan, kemudian nilai ini dianggap menjadi rumah."

msgid ""
"If you're using PostgreSQL, by default (empty :setting:`HOST`), the "
"connection to the database is done through UNIX domain sockets ('local' "
"lines in ``pg_hba.conf``). If your UNIX domain socket is not in the standard "
"location, use the same value of ``unix_socket_directory`` from ``postgresql."
"conf``. If you want to connect through TCP sockets, set :setting:`HOST` to "
"'localhost' or '127.0.0.1' ('host' lines in ``pg_hba.conf``). On Windows, "
"you should always define :setting:`HOST`, as UNIX domain sockets are not "
"available."
msgstr ""

msgid "``NAME``"
msgstr "``NAME``"

msgid ""
"The name of the database to use. For SQLite, it's the full path to the "
"database file. When specifying the path, always use forward slashes, even on "
"Windows (e.g. ``C:/homes/user/mysite/sqlite3.db``)."
msgstr ""
"Nama dari basisdata untuk digunakan. Untuk SQLite, itu adalah jalur penuh "
"pada berkas basisdata. Ketika menentukan jalur, selalu gunakan garis miring "
"depan, bahkan pada Windows (sebagai contoh. `C:/homes/user/mysite/sqlite3."
"db``)."

msgid "``CONN_MAX_AGE``"
msgstr "``CONN_MAX_AGE``"

msgid "Default: ``0``"
msgstr "Awal: ``0``"

msgid ""
"The lifetime of a database connection, in seconds. Use ``0`` to close "
"database connections at the end of each request — Django's historical "
"behavior — and ``None`` for unlimited persistent connections."
msgstr ""

msgid ""
"Extra parameters to use when connecting to the database. Available "
"parameters vary depending on your database backend."
msgstr ""

msgid ""
"Some information on available parameters can be found in the :doc:`Database "
"Backends </ref/databases>` documentation. For more information, consult your "
"backend module's own documentation."
msgstr ""

msgid "``PASSWORD``"
msgstr "``PASSWORD``"

msgid ""
"The password to use when connecting to the database. Not used with SQLite."
msgstr ""

msgid "``PORT``"
msgstr "``PORT``"

msgid ""
"The port to use when connecting to the database. An empty string means the "
"default port. Not used with SQLite."
msgstr ""

msgid "``TIME_ZONE``"
msgstr "``TIME_ZONE``"

msgid ""
"A string representing the time zone for datetimes stored in this database "
"(assuming that it doesn't support time zones) or ``None``. The same values "
"are accepted as in the general :setting:`TIME_ZONE` setting."
msgstr ""

msgid ""
"This allows interacting with third-party databases that store datetimes in "
"local time rather than UTC. To avoid issues around DST changes, you "
"shouldn't set this option for databases managed by Django."
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``True`` and the database doesn't support time "
"zones (e.g. SQLite, MySQL, Oracle), Django reads and writes datetimes in "
"local time according to this option if it is set and in UTC if it isn't."
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``True`` and the database supports time zones (e."
"g. PostgreSQL), it is an error to set this option."
msgstr ""

msgid "When :setting:`USE_TZ` is ``False``, it is an error to set this option."
msgstr ""

msgid "``DISABLE_SERVER_SIDE_CURSORS``"
msgstr "``DISABLE_SERVER_SIDE_CURSORS``"

msgid ""
"Set this to ``True`` if you want to disable the use of server-side cursors "
"with :meth:`.QuerySet.iterator`. :ref:`transaction-pooling-server-side-"
"cursors` describes the use case."
msgstr ""

msgid "This is a PostgreSQL-specific setting."
msgstr ""

msgid "``USER``"
msgstr "``USER``"

msgid ""
"The username to use when connecting to the database. Not used with SQLite."
msgstr ""

msgid "``TEST``"
msgstr "``TEST``"

msgid ""
"A dictionary of settings for test databases; for more details about the "
"creation and use of test databases, see :ref:`the-test-database`."
msgstr ""

msgid "Here's an example with a test database configuration::"
msgstr ""

msgid "The following keys in the ``TEST`` dictionary are available:"
msgstr ""

msgid "``CHARSET``"
msgstr "``CHARSET``"

msgid ""
"The character set encoding used to create the test database. The value of "
"this string is passed directly through to the database, so its format is "
"backend-specific."
msgstr ""

msgid ""
"Supported by the PostgreSQL_ (``postgresql``) and MySQL_ (``mysql``) "
"backends."
msgstr ""

msgid "``COLLATION``"
msgstr "``COLLATION``"

msgid ""
"The collation order to use when creating the test database. This value is "
"passed directly to the backend, so its format is backend-specific."
msgstr ""

msgid ""
"Only supported for the ``mysql`` backend (see the `MySQL manual`_ for "
"details)."
msgstr ""

msgid "``DEPENDENCIES``"
msgstr "``DEPENDENCIES``"

msgid ""
"Default: ``['default']``, for all databases other than ``default``, which "
"has no dependencies."
msgstr ""

msgid ""
"The creation-order dependencies of the database. See the documentation on :"
"ref:`controlling the creation order of test databases <topics-testing-"
"creation-dependencies>` for details."
msgstr ""

msgid "``MIRROR``"
msgstr "``MIRROR``"

msgid ""
"The alias of the database that this database should mirror during testing."
msgstr ""

msgid ""
"This setting exists to allow for testing of primary/replica (referred to as "
"master/slave by some databases) configurations of multiple databases. See "
"the documentation on :ref:`testing primary/replica configurations <topics-"
"testing-primaryreplica>` for details."
msgstr ""

msgid "The name of database to use when running the test suite."
msgstr ""

msgid ""
"If the default value (``None``) is used with the SQLite database engine, the "
"tests will use a memory resident database. For all other database engines "
"the test database will use the name ``'test_' + DATABASE_NAME``."
msgstr ""

msgid "See :ref:`the-test-database`."
msgstr ""

msgid "``SERIALIZE``"
msgstr ""

msgid ""
"Boolean value to control whether or not the default test runner serializes "
"the database into an in-memory JSON string before running tests (used to "
"restore the database state between tests if you don't have transactions). "
"You can set this to ``False`` to speed up creation time if you don't have "
"any test classes with :ref:`serialized_rollback=True <test-case-serialized-"
"rollback>`."
msgstr ""

msgid "``TEMPLATE``"
msgstr ""

msgid ""
"The name of a `template`_ (e.g. ``'template0'``) from which to create the "
"test database."
msgstr ""

msgid "``CREATE_DB``"
msgstr ""

msgid "This is an Oracle-specific setting."
msgstr ""

msgid ""
"If it is set to ``False``, the test tablespaces won't be automatically "
"created at the beginning of the tests or dropped at the end."
msgstr ""

msgid "``CREATE_USER``"
msgstr ""

msgid ""
"If it is set to ``False``, the test user won't be automatically created at "
"the beginning of the tests and dropped at the end."
msgstr ""

msgid ""
"The username to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will use ``'test_' + USER``."
msgstr ""

msgid ""
"The password to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will generate a random password."
msgstr ""

msgid ""
"Older versions used a hardcoded default password. This was also changed in "
"1.10.3, 1.9.11, and 1.8.16 to fix possible security implications."
msgstr ""

msgid "``TBLSPACE``"
msgstr ""

msgid ""
"The name of the tablespace that will be used when running tests. If not "
"provided, Django will use ``'test_' + USER``."
msgstr ""

msgid "``TBLSPACE_TMP``"
msgstr ""

msgid ""
"The name of the temporary tablespace that will be used when running tests. "
"If not provided, Django will use ``'test_' + USER + '_temp'``."
msgstr ""

msgid "``DATAFILE``"
msgstr ""

msgid ""
"The name of the datafile to use for the TBLSPACE. If not provided, Django "
"will use ``TBLSPACE + '.dbf'``."
msgstr ""

msgid "``DATAFILE_TMP``"
msgstr ""

msgid ""
"The name of the datafile to use for the TBLSPACE_TMP. If not provided, "
"Django will use ``TBLSPACE_TMP + '.dbf'``."
msgstr ""

msgid "``DATAFILE_MAXSIZE``"
msgstr ""

msgid "Default: ``'500M'``"
msgstr ""

msgid "The maximum size that the DATAFILE is allowed to grow to."
msgstr ""

msgid "``DATAFILE_TMP_MAXSIZE``"
msgstr ""

msgid "The maximum size that the DATAFILE_TMP is allowed to grow to."
msgstr ""

msgid "DATA_UPLOAD_MAX_MEMORY_SIZE"
msgstr ""

msgid "Default: ``2621440`` (i.e. 2.5 MB)."
msgstr ""

msgid ""
"The maximum size in bytes that a request body may be before a :exc:`~django."
"core.exceptions.SuspiciousOperation` (``RequestDataTooBig``) is raised. The "
"check is done when accessing ``request.body`` or ``request.POST`` and is "
"calculated against the total request size excluding any file upload data. "
"You can set this to ``None`` to disable the check. Applications that are "
"expected to receive unusually large form posts should tune this setting."
msgstr ""

msgid ""
"The amount of request data is correlated to the amount of memory needed to "
"process the request and populate the GET and POST dictionaries. Large "
"requests could be used as a denial-of-service attack vector if left "
"unchecked. Since web servers don't typically perform deep request "
"inspection, it's not possible to perform a similar check at that level."
msgstr ""

msgid "See also :setting:`FILE_UPLOAD_MAX_MEMORY_SIZE`."
msgstr ""

msgid "DATA_UPLOAD_MAX_NUMBER_FIELDS"
msgstr ""

msgid "Default: ``1000``"
msgstr ""

msgid ""
"The maximum number of parameters that may be received via GET or POST before "
"a :exc:`~django.core.exceptions.SuspiciousOperation` (``TooManyFields``) is "
"raised. You can set this to ``None`` to disable the check. Applications that "
"are expected to receive an unusually large number of form fields should tune "
"this setting."
msgstr ""

msgid ""
"The number of request parameters is correlated to the amount of time needed "
"to process the request and populate the GET and POST dictionaries. Large "
"requests could be used as a denial-of-service attack vector if left "
"unchecked. Since web servers don't typically perform deep request "
"inspection, it's not possible to perform a similar check at that level."
msgstr ""

msgid "``DATABASE_ROUTERS``"
msgstr ""

msgid ""
"The list of routers that will be used to determine which database to use "
"when performing a database query."
msgstr ""

msgid ""
"See the documentation on :ref:`automatic database routing in multi database "
"configurations <topics-db-multi-db-routing>`."
msgstr ""

msgid "``DATE_FORMAT``"
msgstr ""

msgid "Default: ``'N j, Y'`` (e.g. ``Feb. 4, 2003``)"
msgstr ""

msgid ""
"The default formatting to use for displaying date fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

msgid ""
"See also :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATE_FORMAT`."
msgstr ""

msgid "``DATE_INPUT_FORMATS``"
msgstr ""

msgid ""
"A list of formats that will be accepted when inputting data on a date field. "
"Formats will be tried in order, using the first valid one. Note that these "
"format strings use Python's :ref:`datetime module syntax <strftime-strptime-"
"behavior>`, not the format strings from the :tfilter:`date` template filter."
msgstr ""

msgid ""
"When :setting:`USE_L10N` is ``True``, the locale-dictated format has higher "
"precedence and will be applied instead."
msgstr ""

msgid ""
"See also :setting:`DATETIME_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

msgid "``DATETIME_FORMAT``"
msgstr ""

msgid "Default: ``'N j, Y, P'`` (e.g. ``Feb. 4, 2003, 4 p.m.``)"
msgstr ""

msgid ""
"The default formatting to use for displaying datetime fields in any part of "
"the system. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"locale-dictated format has higher precedence and will be applied instead. "
"See :tfilter:`allowed date format strings <date>`."
msgstr ""

msgid ""
"See also :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATETIME_FORMAT`."
msgstr ""

msgid "``DATETIME_INPUT_FORMATS``"
msgstr ""

msgid ""
"A list of formats that will be accepted when inputting data on a datetime "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's :ref:`datetime module syntax <strftime-"
"strptime-behavior>`, not the format strings from the :tfilter:`date` "
"template filter."
msgstr ""

msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

msgid "A boolean that turns on/off debug mode."
msgstr ""

msgid "Never deploy a site into production with :setting:`DEBUG` turned on."
msgstr ""

msgid ""
"Did you catch that? NEVER deploy a site into production with :setting:"
"`DEBUG` turned on."
msgstr ""

msgid ""
"One of the main features of debug mode is the display of detailed error "
"pages. If your app raises an exception when :setting:`DEBUG` is ``True``, "
"Django will display a detailed traceback, including a lot of metadata about "
"your environment, such as all the currently defined Django settings (from "
"``settings.py``)."
msgstr ""

msgid ""
"As a security measure, Django will *not* include settings that might be "
"sensitive, such as :setting:`SECRET_KEY`. Specifically, it will exclude any "
"setting whose name includes any of the following:"
msgstr ""

msgid "``'API'``"
msgstr ""

msgid "``'KEY'``"
msgstr ""

msgid "``'PASS'``"
msgstr ""

msgid "``'SECRET'``"
msgstr ""

msgid "``'SIGNATURE'``"
msgstr ""

msgid "``'TOKEN'``"
msgstr ""

msgid ""
"Note that these are *partial* matches. ``'PASS'`` will also match PASSWORD, "
"just as ``'TOKEN'`` will also match TOKENIZED and so on."
msgstr ""

msgid ""
"Still, note that there are always going to be sections of your debug output "
"that are inappropriate for public consumption. File paths, configuration "
"options and the like all give attackers extra information about your server."
msgstr ""

msgid ""
"It is also important to remember that when running with :setting:`DEBUG` "
"turned on, Django will remember every SQL query it executes. This is useful "
"when you're debugging, but it'll rapidly consume memory on a production "
"server."
msgstr ""

msgid ""
"Finally, if :setting:`DEBUG` is ``False``, you also need to properly set "
"the :setting:`ALLOWED_HOSTS` setting. Failing to do so will result in all "
"requests being returned as \"Bad Request (400)\"."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` sets ``DEBUG = True`` for convenience."
msgstr ""

msgid "``DEBUG_PROPAGATE_EXCEPTIONS``"
msgstr ""

msgid ""
"If set to ``True``, Django's exception handling of view functions (:data:"
"`~django.conf.urls.handler500`, or the debug view if :setting:`DEBUG` is "
"``True``) and logging of 500 responses (:ref:`django-request-logger`) is "
"skipped and exceptions propagate upwards."
msgstr ""

msgid ""
"This can be useful for some test setups. It shouldn't be used on a live site "
"unless you want your web server (instead of Django) to generate \"Internal "
"Server Error\" responses. In that case, make sure your server doesn't show "
"the stack trace or other sensitive information in the response."
msgstr ""

msgid "``DECIMAL_SEPARATOR``"
msgstr ""

msgid "Default: ``'.'`` (Dot)"
msgstr ""

msgid "Default decimal separator used when formatting decimal numbers."
msgstr ""

msgid ""
"Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead."
msgstr ""

msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

msgid "``DEFAULT_CHARSET``"
msgstr ""

msgid "Default: ``'utf-8'``"
msgstr ""

msgid ""
"Default charset to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CONTENT_TYPE` to "
"construct the ``Content-Type`` header."
msgstr ""

msgid "``DEFAULT_CONTENT_TYPE``"
msgstr ""

msgid "Default: ``'text/html'``"
msgstr ""

msgid ""
"Default content type to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CHARSET` to construct "
"the ``Content-Type`` header."
msgstr ""

msgid "``DEFAULT_EXCEPTION_REPORTER_FILTER``"
msgstr ""

msgid ""
"Default: ``'``:class:`django.views.debug.SafeExceptionReporterFilter`\\ ``'``"
msgstr ""

msgid ""
"Default exception reporter filter class to be used if none has been assigned "
"to the :class:`~django.http.HttpRequest` instance yet. See :ref:`Filtering "
"error reports<filtering-error-reports>`."
msgstr ""

msgid "``DEFAULT_FILE_STORAGE``"
msgstr ""

msgid ""
"Default: ``'``:class:`django.core.files.storage.FileSystemStorage`\\ ``'``"
msgstr ""

msgid ""
"Default file storage class to be used for any file-related operations that "
"don't specify a particular storage system. See :doc:`/topics/files`."
msgstr ""

msgid "``DEFAULT_FROM_EMAIL``"
msgstr ""

msgid "Default: ``'webmaster@localhost'``"
msgstr ""

msgid ""
"Default email address to use for various automated correspondence from the "
"site manager(s). This doesn't include error messages sent to :setting:"
"`ADMINS` and :setting:`MANAGERS`; for that, see :setting:`SERVER_EMAIL`."
msgstr ""

msgid "``DEFAULT_INDEX_TABLESPACE``"
msgstr ""

msgid ""
"Default tablespace to use for indexes on fields that don't specify one, if "
"the backend supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

msgid "``DEFAULT_TABLESPACE``"
msgstr ""

msgid ""
"Default tablespace to use for models that don't specify one, if the backend "
"supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

msgid "``DISALLOWED_USER_AGENTS``"
msgstr ""

msgid ""
"List of compiled regular expression objects representing User-Agent strings "
"that are not allowed to visit any page, systemwide. Use this for bad robots/"
"crawlers. This is only used if ``CommonMiddleware`` is installed (see :doc:`/"
"topics/http/middleware`)."
msgstr ""

msgid "``EMAIL_BACKEND``"
msgstr ""

msgid ""
"Default: ``'``:class:`django.core.mail.backends.smtp.EmailBackend`\\ ``'``"
msgstr ""

msgid ""
"The backend to use for sending emails. For the list of available backends "
"see :doc:`/topics/email`."
msgstr ""

msgid "``EMAIL_FILE_PATH``"
msgstr ""

msgid "Default: Not defined"
msgstr ""

msgid "The directory used by the ``file`` email backend to store output files."
msgstr ""

msgid "``EMAIL_HOST``"
msgstr ""

msgid "Default: ``'localhost'``"
msgstr ""

msgid "The host to use for sending email."
msgstr ""

msgid "See also :setting:`EMAIL_PORT`."
msgstr ""

msgid "``EMAIL_HOST_PASSWORD``"
msgstr ""

msgid ""
"Password to use for the SMTP server defined in :setting:`EMAIL_HOST`. This "
"setting is used in conjunction with :setting:`EMAIL_HOST_USER` when "
"authenticating to the SMTP server. If either of these settings is empty, "
"Django won't attempt authentication."
msgstr ""

msgid "See also :setting:`EMAIL_HOST_USER`."
msgstr ""

msgid "``EMAIL_HOST_USER``"
msgstr ""

msgid ""
"Username to use for the SMTP server defined in :setting:`EMAIL_HOST`. If "
"empty, Django won't attempt authentication."
msgstr ""

msgid "See also :setting:`EMAIL_HOST_PASSWORD`."
msgstr ""

msgid "``EMAIL_PORT``"
msgstr ""

msgid "Default: ``25``"
msgstr ""

msgid "Port to use for the SMTP server defined in :setting:`EMAIL_HOST`."
msgstr ""

msgid "``EMAIL_SUBJECT_PREFIX``"
msgstr ""

msgid "Default: ``'[Django] '``"
msgstr ""

msgid ""
"Subject-line prefix for email messages sent with ``django.core.mail."
"mail_admins`` or ``django.core.mail.mail_managers``. You'll probably want to "
"include the trailing space."
msgstr ""

msgid "``EMAIL_USE_LOCALTIME``"
msgstr ""

msgid ""
"Whether to send the SMTP ``Date`` header of email messages in the local time "
"zone (``True``) or in UTC (``False``)."
msgstr ""

msgid "``EMAIL_USE_TLS``"
msgstr ""

msgid ""
"Whether to use a TLS (secure) connection when talking to the SMTP server. "
"This is used for explicit TLS connections, generally on port 587. If you are "
"experiencing hanging connections, see the implicit TLS setting :setting:"
"`EMAIL_USE_SSL`."
msgstr ""

msgid "``EMAIL_USE_SSL``"
msgstr ""

msgid ""
"Whether to use an implicit TLS (secure) connection when talking to the SMTP "
"server. In most email documentation this type of TLS connection is referred "
"to as SSL. It is generally used on port 465. If you are experiencing "
"problems, see the explicit TLS setting :setting:`EMAIL_USE_TLS`."
msgstr ""

msgid ""
"Note that :setting:`EMAIL_USE_TLS`/:setting:`EMAIL_USE_SSL` are mutually "
"exclusive, so only set one of those settings to ``True``."
msgstr ""

msgid "``EMAIL_SSL_CERTFILE``"
msgstr ""

msgid ""
"If :setting:`EMAIL_USE_SSL` or :setting:`EMAIL_USE_TLS` is ``True``, you can "
"optionally specify the path to a PEM-formatted certificate chain file to use "
"for the SSL connection."
msgstr ""

msgid "``EMAIL_SSL_KEYFILE``"
msgstr ""

msgid ""
"If :setting:`EMAIL_USE_SSL` or :setting:`EMAIL_USE_TLS` is ``True``, you can "
"optionally specify the path to a PEM-formatted private key file to use for "
"the SSL connection."
msgstr ""

msgid ""
"Note that setting :setting:`EMAIL_SSL_CERTFILE` and :setting:"
"`EMAIL_SSL_KEYFILE` doesn't result in any certificate checking. They're "
"passed to the underlying SSL connection. Please refer to the documentation "
"of Python's :func:`python:ssl.wrap_socket` function for details on how the "
"certificate chain file and private key file are handled."
msgstr ""

msgid "``EMAIL_TIMEOUT``"
msgstr ""

msgid ""
"Specifies a timeout in seconds for blocking operations like the connection "
"attempt."
msgstr ""

msgid "``FILE_CHARSET``"
msgstr ""

msgid ""
"The character encoding used to decode any files read from disk. This "
"includes template files and initial SQL data files."
msgstr ""

msgid "``FILE_UPLOAD_HANDLERS``"
msgstr ""

msgid ""
"A list of handlers to use for uploading. Changing this setting allows "
"complete customization -- even replacement -- of Django's upload process."
msgstr ""

msgid "See :doc:`/topics/files` for details."
msgstr ""

msgid "``FILE_UPLOAD_MAX_MEMORY_SIZE``"
msgstr ""

msgid ""
"The maximum size (in bytes) that an upload will be before it gets streamed "
"to the file system. See :doc:`/topics/files` for details."
msgstr ""

msgid "See also :setting:`DATA_UPLOAD_MAX_MEMORY_SIZE`."
msgstr ""

msgid "``FILE_UPLOAD_DIRECTORY_PERMISSIONS``"
msgstr ""

msgid ""
"The numeric mode to apply to directories created in the process of uploading "
"files."
msgstr ""

msgid ""
"This setting also determines the default permissions for collected static "
"directories when using the :djadmin:`collectstatic` management command. See :"
"djadmin:`collectstatic` for details on overriding it."
msgstr ""

msgid ""
"This value mirrors the functionality and caveats of the :setting:"
"`FILE_UPLOAD_PERMISSIONS` setting."
msgstr ""

msgid "``FILE_UPLOAD_PERMISSIONS``"
msgstr ""

msgid ""
"The numeric mode (i.e. ``0o644``) to set newly uploaded files to. For more "
"information about what these modes mean, see the documentation for :func:`os."
"chmod`."
msgstr ""

msgid ""
"If this isn't given or is ``None``, you'll get operating-system dependent "
"behavior. On most platforms, temporary files will have a mode of ``0o600``, "
"and files saved from memory will be saved using the system's standard umask."
msgstr ""
"Jika ini tidak diberika atau ``None``, anda akan mendapatkan kebiasan "
"ketergantungan sistem-operasi. Pada kebanyakan serambi, berkas sementara "
"akan memiliki suasana dari ``0o600``, dan berkas-berkas disimpan dari "
"penyimpanan akan disimpan menggunakan umask standar sistem."

msgid ""
"For security reasons, these permissions aren't applied to the temporary "
"files that are stored in :setting:`FILE_UPLOAD_TEMP_DIR`."
msgstr ""

msgid ""
"This setting also determines the default permissions for collected static "
"files when using the :djadmin:`collectstatic` management command. See :"
"djadmin:`collectstatic` for details on overriding it."
msgstr ""

msgid "**Always prefix the mode with a 0.**"
msgstr ""

msgid ""
"If you're not familiar with file modes, please note that the leading ``0`` "
"is very important: it indicates an octal number, which is the way that modes "
"must be specified. If you try to use ``644``, you'll get totally incorrect "
"behavior."
msgstr ""

msgid "``FILE_UPLOAD_TEMP_DIR``"
msgstr ""

msgid ""
"The directory to store data to (typically files larger than :setting:"
"`FILE_UPLOAD_MAX_MEMORY_SIZE`) temporarily while uploading files. If "
"``None``, Django will use the standard temporary directory for the operating "
"system. For example, this will default to ``/tmp`` on \\*nix-style operating "
"systems."
msgstr ""

msgid "``FIRST_DAY_OF_WEEK``"
msgstr ""

msgid "Default: ``0`` (Sunday)"
msgstr ""

msgid ""
"A number representing the first day of the week. This is especially useful "
"when displaying a calendar. This value is only used when not using format "
"internationalization, or when a format cannot be found for the current "
"locale."
msgstr ""

msgid ""
"The value must be an integer from 0 to 6, where 0 means Sunday, 1 means "
"Monday and so on."
msgstr ""

msgid "``FIXTURE_DIRS``"
msgstr ""

msgid ""
"List of directories searched for fixture files, in addition to the "
"``fixtures`` directory of each application, in search order."
msgstr ""

msgid ""
"Note that these paths should use Unix-style forward slashes, even on Windows."
msgstr ""
"Catat bahwa jalur-jalur ini harus menggunakan garis miring didepan gaya-"
"Unix, bahkan pada Windows."

msgid ""
"See :ref:`initial-data-via-fixtures` and :ref:`topics-testing-fixtures`."
msgstr ""

msgid "``FORCE_SCRIPT_NAME``"
msgstr ""

msgid ""
"If not ``None``, this will be used as the value of the ``SCRIPT_NAME`` "
"environment variable in any HTTP request. This setting can be used to "
"override the server-provided value of ``SCRIPT_NAME``, which may be a "
"rewritten version of the preferred value or not supplied at all. It is also "
"used by :func:`django.setup()` to set the URL resolver script prefix outside "
"of the request/response cycle (e.g. in management commands and standalone "
"scripts) to generate correct URLs when ``SCRIPT_NAME`` is not ``/``."
msgstr ""

msgid "The setting's use in :func:`django.setup()` was added."
msgstr ""

msgid "``FORM_RENDERER``"
msgstr ""

msgid "Default: ``'``:class:`django.forms.renderers.DjangoTemplates`\\ ``'``"
msgstr ""

msgid ""
"The class that renders form widgets. It must implement :ref:`the low-level "
"render API <low-level-widget-render-api>`."
msgstr ""

msgid "``FORMAT_MODULE_PATH``"
msgstr ""

msgid ""
"A full Python path to a Python package that contains format definitions for "
"project locales. If not ``None``, Django will check for a ``formats.py`` "
"file, under the directory named as the current locale, and will use the "
"formats defined in this file."
msgstr ""

msgid ""
"For example, if :setting:`FORMAT_MODULE_PATH` is set to ``mysite.formats``, "
"and current language is ``en`` (English), Django will expect a directory "
"tree like::"
msgstr ""

msgid "You can also set this setting to a list of Python paths, for example::"
msgstr ""

msgid ""
"When Django searches for a certain format, it will go through all given "
"Python paths until it finds a module that actually defines the given format. "
"This means that formats defined in packages farther up in the list will take "
"precedence over the same formats in packages farther down."
msgstr ""

msgid ""
"Available formats are :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`YEAR_MONTH_FORMAT`, :setting:"
"`MONTH_DAY_FORMAT`, :setting:`SHORT_DATE_FORMAT`, :setting:"
"`SHORT_DATETIME_FORMAT`, :setting:`FIRST_DAY_OF_WEEK`, :setting:"
"`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :setting:"
"`NUMBER_GROUPING`."
msgstr ""

msgid "``IGNORABLE_404_URLS``"
msgstr ""

msgid ""
"List of compiled regular expression objects describing URLs that should be "
"ignored when reporting HTTP 404 errors via email (see :doc:`/howto/error-"
"reporting`). Regular expressions are matched against :meth:`request's full "
"paths <django.http.HttpRequest.get_full_path>` (including query string, if "
"any). Use this if your site does not provide a commonly requested file such "
"as ``favicon.ico`` or ``robots.txt``, or if it gets hammered by script "
"kiddies."
msgstr ""

msgid ""
"This is only used if :class:`~django.middleware.common."
"BrokenLinkEmailsMiddleware` is enabled (see :doc:`/topics/http/middleware`)."
msgstr ""

msgid "``INSTALLED_APPS``"
msgstr ""

msgid ""
"A list of strings designating all applications that are enabled in this "
"Django installation. Each string should be a dotted Python path to:"
msgstr ""

msgid "an application configuration class (preferred), or"
msgstr ""

msgid "a package containing an application."
msgstr "paket mengandung sebuah aplikasi."

msgid ":doc:`Learn more about application configurations </ref/applications>`."
msgstr ""

msgid "Use the application registry for introspection"
msgstr "Gunakan registrar aplikasi untuk introspeksi"

msgid ""
"Your code should never access :setting:`INSTALLED_APPS` directly. Use :attr:"
"`django.apps.apps` instead."
msgstr ""

msgid ""
"Application names and labels must be unique in             :setting:"
"`INSTALLED_APPS`"
msgstr ""

msgid ""
"Application :attr:`names <django.apps.AppConfig.name>` — the dotted Python "
"path to the application package — must be unique. There is no way to include "
"the same application twice, short of duplicating its code under another name."
msgstr ""

msgid ""
"Application :attr:`labels <django.apps.AppConfig.label>` — by default the "
"final part of the name — must be unique too. For example, you can't include "
"both ``django.contrib.auth`` and ``myproject.auth``. However, you can "
"relabel an application with a custom configuration that defines a different :"
"attr:`~django.apps.AppConfig.label`."
msgstr ""

msgid ""
"These rules apply regardless of whether :setting:`INSTALLED_APPS` references "
"application configuration classes or application packages."
msgstr ""

msgid ""
"When several applications provide different versions of the same resource "
"(template, static file, management command, translation), the application "
"listed first in :setting:`INSTALLED_APPS` has precedence."
msgstr ""

msgid "``INTERNAL_IPS``"
msgstr ""

msgid "A list of IP addresses, as strings, that:"
msgstr ""

msgid ""
"Allow the :func:`~django.template.context_processors.debug` context "
"processor to add some variables to the template context."
msgstr ""

msgid ""
"Can use the :ref:`admindocs bookmarklets <admindocs-bookmarklets>` even if "
"not logged in as a staff user."
msgstr ""

msgid ""
"Are marked as \"internal\" (as opposed to \"EXTERNAL\") in :class:`~django."
"utils.log.AdminEmailHandler` emails."
msgstr ""

msgid "``LANGUAGE_CODE``"
msgstr ""

msgid "Default: ``'en-us'``"
msgstr ""

msgid ""
"A string representing the language code for this installation. This should "
"be in standard :term:`language ID format <language code>`. For example, U.S. "
"English is ``\"en-us\"``. See also the `list of language identifiers`_ and :"
"doc:`/topics/i18n/index`."
msgstr ""

msgid ":setting:`USE_I18N` must be active for this setting to have any effect."
msgstr ""

msgid "It serves two purposes:"
msgstr ""

msgid ""
"If the locale middleware isn't in use, it decides which translation is "
"served to all users."
msgstr ""

msgid ""
"If the locale middleware is active, it provides a fallback language in case "
"the user's preferred language can't be determined or is not supported by the "
"website. It also provides the fallback translation when a translation for a "
"given literal doesn't exist for the user's preferred language."
msgstr ""

msgid "See :ref:`how-django-discovers-language-preference` for more details."
msgstr ""

msgid "``LANGUAGE_COOKIE_AGE``"
msgstr ""

msgid "Default: ``None`` (expires at browser close)"
msgstr ""

msgid "The age of the language cookie, in seconds."
msgstr ""

msgid "``LANGUAGE_COOKIE_DOMAIN``"
msgstr ""

msgid ""
"The domain to use for the language cookie. Set this to a string such as ``\"."
"example.com\"`` (note the leading dot!) for cross-domain cookies, or use "
"``None`` for a standard domain cookie."
msgstr ""

msgid ""
"Be cautious when updating this setting on a production site. If you update "
"this setting to enable cross-domain cookies on a site that previously used "
"standard domain cookies, existing user cookies that have the old domain will "
"not be updated. This will result in site users being unable to switch the "
"language as long as these cookies persist. The only safe and reliable option "
"to perform the switch is to change the language cookie name permanently (via "
"the :setting:`LANGUAGE_COOKIE_NAME` setting) and to add a middleware that "
"copies the value from the old cookie to a new one and then deletes the old "
"one."
msgstr ""

msgid "``LANGUAGE_COOKIE_NAME``"
msgstr ""

msgid "Default: ``'django_language'``"
msgstr ""

msgid ""
"The name of the cookie to use for the language cookie. This can be whatever "
"you want (as long as it's different from the other cookie names in your "
"application). See :doc:`/topics/i18n/index`."
msgstr ""

msgid "``LANGUAGE_COOKIE_PATH``"
msgstr ""

msgid ""
"The path set on the language cookie. This should either match the URL path "
"of your Django installation or be a parent of that path."
msgstr ""

msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths and each instance will only "
"see its own language cookie."
msgstr ""

msgid ""
"Be cautious when updating this setting on a production site. If you update "
"this setting to use a deeper path than it previously used, existing user "
"cookies that have the old path will not be updated. This will result in site "
"users being unable to switch the language as long as these cookies persist. "
"The only safe and reliable option to perform the switch is to change the "
"language cookie name permanently (via the :setting:`LANGUAGE_COOKIE_NAME` "
"setting), and to add a middleware that copies the value from the old cookie "
"to a new one and then deletes the one."
msgstr ""

msgid "``LANGUAGES``"
msgstr ""

msgid ""
"Default: A list of all available languages. This list is continually growing "
"and including a copy here would inevitably become rapidly out of date. You "
"can see the current list of translated languages by looking in ``django/conf/"
"global_settings.py`` (or view the `online source`_)."
msgstr ""

msgid ""
"The list is a list of two-tuples in the format (:term:`language "
"code<language code>`, ``language name``) -- for example, ``('ja', "
"'Japanese')``. This specifies which languages are available for language "
"selection. See :doc:`/topics/i18n/index`."
msgstr ""

msgid ""
"Generally, the default value should suffice. Only set this setting if you "
"want to restrict language selection to a subset of the Django-provided "
"languages."
msgstr ""

msgid ""
"If you define a custom :setting:`LANGUAGES` setting, you can mark the "
"language names as translation strings using the :func:`~django.utils."
"translation.ugettext_lazy` function."
msgstr ""

msgid "Here's a sample settings file::"
msgstr "Ini adalah contoh sebuah berkas pengaturan::"

msgid "``LOCALE_PATHS``"
msgstr ""

msgid ""
"A list of directories where Django looks for translation files. See :ref:"
"`how-django-discovers-translations`."
msgstr ""

msgid ""
"Django will look within each of these paths for the ``<locale_code>/"
"LC_MESSAGES`` directories containing the actual translation files."
msgstr ""

msgid "``LOGGING``"
msgstr ""

msgid "Default: A logging configuration dictionary."
msgstr ""

msgid ""
"A data structure containing configuration information. The contents of this "
"data structure will be passed as the argument to the configuration method "
"described in :setting:`LOGGING_CONFIG`."
msgstr ""

msgid ""
"Among other things, the default logging configuration passes HTTP 500 server "
"errors to an email log handler when :setting:`DEBUG` is ``False``. See also :"
"ref:`configuring-logging`."
msgstr ""

msgid ""
"You can see the default logging configuration by looking in ``django/utils/"
"log.py`` (or view the `online source`__)."
msgstr ""

msgid "``LOGGING_CONFIG``"
msgstr ""

msgid "Default: ``'logging.config.dictConfig'``"
msgstr ""

msgid ""
"A path to a callable that will be used to configure logging in the Django "
"project. Points at a instance of Python's :ref:`dictConfig <logging-config-"
"dictschema>` configuration method by default."
msgstr ""

msgid ""
"If you set :setting:`LOGGING_CONFIG` to ``None``, the logging configuration "
"process will be skipped."
msgstr ""

msgid "``MANAGERS``"
msgstr ""

msgid ""
"A list in the same format as :setting:`ADMINS` that specifies who should get "
"broken link notifications when :class:`~django.middleware.common."
"BrokenLinkEmailsMiddleware` is enabled."
msgstr ""

msgid "``MEDIA_ROOT``"
msgstr ""

msgid ""
"Absolute filesystem path to the directory that will hold :doc:`user-uploaded "
"files </topics/files>`."
msgstr ""

msgid "Example: ``\"/var/www/example.com/media/\"``"
msgstr ""

msgid "See also :setting:`MEDIA_URL`."
msgstr "Lihat juga :setting:`MEDIA_URL`."

msgid ""
":setting:`MEDIA_ROOT` and :setting:`STATIC_ROOT` must have different values. "
"Before :setting:`STATIC_ROOT` was introduced, it was common to rely or "
"fallback on :setting:`MEDIA_ROOT` to also serve static files; however, since "
"this can have serious security implications, there is a validation check to "
"prevent it."
msgstr ""

msgid "``MEDIA_URL``"
msgstr ""

msgid ""
"URL that handles the media served from :setting:`MEDIA_ROOT`, used for :doc:"
"`managing stored files </topics/files>`. It must end in a slash if set to a "
"non-empty value. You will need to :ref:`configure these files to be served "
"<serving-uploaded-files-in-development>` in both development and production "
"environments."
msgstr ""
"URL yang menangani media dilayani dari :setting:`MEDIA_ROOT`, digunakan "
"untuk :doc:`managing stored files 1`. Itu harus berakhir dalam sebuah garis "
"miring jika menyetel ke nilai bukan-kosong. Anda akan butuh :ref:`configure "
"these files to be served 2` dalam kedua lingkungan pengembangan dan produksi."

msgid ""
"If you want to use ``{{ MEDIA_URL }}`` in your templates, add ``'django."
"template.context_processors.media'`` in the ``'context_processors'`` option "
"of :setting:`TEMPLATES`."
msgstr ""

msgid "Example: ``\"http://media.example.com/\"``"
msgstr "Contoh: ``\"http://media.example.com/\"``"

msgid ""
"There are security risks if you are accepting uploaded content from "
"untrusted users! See the security guide's topic on :ref:`user-uploaded-"
"content-security` for mitigation details."
msgstr ""

msgid ""
":setting:`MEDIA_URL` and :setting:`STATIC_URL` must have different values. "
"See :setting:`MEDIA_ROOT` for more details."
msgstr ""

msgid "``MIDDLEWARE``"
msgstr ""

msgid "A list of middleware to use. See :doc:`/topics/http/middleware`."
msgstr ""

msgid "``MIDDLEWARE_CLASSES``"
msgstr ""

msgid ""
"Old-style middleware that uses  ``settings.MIDDLEWARE_CLASSES`` are "
"deprecated. :ref:`Adapt old, custom middleware <upgrading-middleware>` and "
"use the :setting:`MIDDLEWARE` setting."
msgstr ""

msgid ""
"A list of middleware classes to use. This was the default setting used in "
"Django 1.9 and earlier. Django 1.10 introduced a new style of middleware. If "
"you have an older project using this setting you should :ref:`update any "
"middleware you've written yourself <upgrading-middleware>` to the new style "
"and then use the :setting:`MIDDLEWARE` setting."
msgstr ""

msgid "``MIGRATION_MODULES``"
msgstr ""

msgid ""
"A dictionary specifying the package where migration modules can be found on "
"a per-app basis. The default value of this setting is an empty dictionary, "
"but the default package name for migration modules is ``migrations``."
msgstr ""

msgid ""
"In this case, migrations pertaining to the ``blog`` app will be contained in "
"the ``blog.db_migrations`` package."
msgstr ""

msgid ""
"If you provide the ``app_label`` argument, :djadmin:`makemigrations` will "
"automatically create the package if it doesn't already exist."
msgstr ""

msgid ""
"When you supply ``None`` as a value for an app, Django will consider the app "
"as an app without migrations regardless of an existing ``migrations`` "
"submodule. This can be used, for example, in a test settings file to skip "
"migrations while testing (tables will still be created for the apps' "
"models). If this is used in your general project settings, remember to use "
"the :option:`migrate --run-syncdb` option if you want to create tables for "
"the app."
msgstr ""

msgid "``MONTH_DAY_FORMAT``"
msgstr ""

msgid "Default: ``'F j'``"
msgstr ""

msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the month and day are displayed."
msgstr ""

msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given day displays the day and month. "
"Different locales have different formats. For example, U.S. English would "
"say \"January 1,\" whereas Spanish might say \"1 Enero.\""
msgstr ""

msgid ""
"Note that if :setting:`USE_L10N` is set to ``True``, then the corresponding "
"locale-dictated format has higher precedence and will be applied."
msgstr ""

msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`YEAR_MONTH_FORMAT`."
msgstr ""

msgid "``NUMBER_GROUPING``"
msgstr ""

msgid "Number of digits grouped together on the integer part of a number."
msgstr ""

msgid ""
"Common use is to display a thousand separator. If this setting is ``0``, "
"then no grouping will be applied to the number. If this setting is greater "
"than ``0``, then :setting:`THOUSAND_SEPARATOR` will be used as the separator "
"between those groups."
msgstr ""

msgid ""
"Some locales use non-uniform digit grouping, e.g. ``10,00,00,000`` in "
"``en_IN``. For this case, you can provide a sequence with the number of "
"digit group sizes to be applied. The first number defines the size of the "
"group preceding the decimal delimiter, and each number that follows defines "
"the size of preceding groups. If the sequence is terminated with ``-1``, no "
"further grouping is performed. If the sequence terminates with a ``0``, the "
"last group size is used for the remainder of the number."
msgstr ""

msgid "Example tuple for ``en_IN``::"
msgstr ""

msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

msgid "Support for non-uniform digit grouping was added."
msgstr ""

msgid "``PREPEND_WWW``"
msgstr ""

msgid ""
"Whether to prepend the \"www.\" subdomain to URLs that don't have it. This "
"is only used if :class:`~django.middleware.common.CommonMiddleware` is "
"installed (see :doc:`/topics/http/middleware`). See also :setting:"
"`APPEND_SLASH`."
msgstr ""
"Apakah untuk menambahkan subranah \"www.\" ke URL yang tidak memilikinya. "
"Ini hanya digunakan jika :class:`~django.middleware.common.CommonMiddleware` "
"terpasang (lihat :doc:`/topics/http/middleware`). Lihat juga :setting:"
"`APPEND_SLASH`."

msgid "``ROOT_URLCONF``"
msgstr ""

msgid ""
"A string representing the full Python import path to your root URLconf. For "
"example: ``\"mydjangoapps.urls\"``. Can be overridden on a per-request basis "
"by setting the attribute ``urlconf`` on the incoming ``HttpRequest`` object. "
"See :ref:`how-django-processes-a-request` for details."
msgstr ""

msgid "``SECRET_KEY``"
msgstr ""

msgid ""
"A secret key for a particular Django installation. This is used to provide :"
"doc:`cryptographic signing </topics/signing>`, and should be set to a "
"unique, unpredictable value."
msgstr ""

msgid ""
":djadmin:`django-admin startproject <startproject>` automatically adds a "
"randomly-generated ``SECRET_KEY`` to each new project."
msgstr ""

msgid ""
"Uses of the key shouldn't assume that it's text or bytes. Every use should "
"go through :func:`~django.utils.encoding.force_text` or :func:`~django.utils."
"encoding.force_bytes` to convert it to the desired type."
msgstr ""

msgid "Django will refuse to start if :setting:`SECRET_KEY` is not set."
msgstr ""

msgid "**Keep this value secret.**"
msgstr ""

msgid ""
"Running Django with a known :setting:`SECRET_KEY` defeats many of Django's "
"security protections, and can lead to privilege escalation and remote code "
"execution vulnerabilities."
msgstr ""

msgid "The secret key is used for:"
msgstr ""

msgid ""
"All :doc:`sessions </topics/http/sessions>` if you are using any other "
"session backend than ``django.contrib.sessions.backends.cache``, or are "
"using the default :meth:`~django.contrib.auth.models.AbstractBaseUser."
"get_session_auth_hash()`."
msgstr ""

msgid ""
"All :doc:`messages </ref/contrib/messages>` if you are using :class:`~django."
"contrib.messages.storage.cookie.CookieStorage` or :class:`~django.contrib."
"messages.storage.fallback.FallbackStorage`."
msgstr ""

msgid "All :class:`~django.contrib.auth.views.PasswordResetView` tokens."
msgstr ""

msgid ""
"Any usage of :doc:`cryptographic signing </topics/signing>`, unless a "
"different key is provided."
msgstr ""

msgid ""
"If you rotate your secret key, all of the above will be invalidated. Secret "
"keys are not used for passwords of users and key rotation will not affect "
"them."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` creates a unique ``SECRET_KEY`` for convenience."
msgstr ""

msgid "``SECURE_BROWSER_XSS_FILTER``"
msgstr ""

msgid ""
"If ``True``, the :class:`~django.middleware.security.SecurityMiddleware` "
"sets the :ref:`x-xss-protection` header on all responses that do not already "
"have it."
msgstr ""

msgid "``SECURE_CONTENT_TYPE_NOSNIFF``"
msgstr ""

msgid ""
"If ``True``, the :class:`~django.middleware.security.SecurityMiddleware` "
"sets the :ref:`x-content-type-options` header on all responses that do not "
"already have it."
msgstr ""

msgid "``SECURE_HSTS_INCLUDE_SUBDOMAINS``"
msgstr ""

msgid ""
"If ``True``, the :class:`~django.middleware.security.SecurityMiddleware` "
"adds the ``includeSubDomains`` directive to the :ref:`http-strict-transport-"
"security` header. It has no effect unless :setting:`SECURE_HSTS_SECONDS` is "
"set to a non-zero value."
msgstr ""

msgid ""
"Setting this incorrectly can irreversibly (for the value of :setting:"
"`SECURE_HSTS_SECONDS`) break your site. Read the :ref:`http-strict-transport-"
"security` documentation first."
msgstr ""

msgid "``SECURE_HSTS_PRELOAD``"
msgstr ""

msgid ""
"If ``True``, the :class:`~django.middleware.security.SecurityMiddleware` "
"adds the ``preload`` directive to the :ref:`http-strict-transport-security` "
"header. It has no effect unless :setting:`SECURE_HSTS_SECONDS` is set to a "
"non-zero value."
msgstr ""

msgid "``SECURE_HSTS_SECONDS``"
msgstr ""

msgid ""
"If set to a non-zero integer value, the :class:`~django.middleware.security."
"SecurityMiddleware` sets the :ref:`http-strict-transport-security` header on "
"all responses that do not already have it."
msgstr ""

msgid ""
"Setting this incorrectly can irreversibly (for some time) break your site. "
"Read the :ref:`http-strict-transport-security` documentation first."
msgstr ""

msgid "``SECURE_PROXY_SSL_HEADER``"
msgstr ""

msgid ""
"A tuple representing a HTTP header/value combination that signifies a "
"request is secure. This controls the behavior of the request object's "
"``is_secure()`` method."
msgstr ""

msgid ""
"This takes some explanation. By default, ``is_secure()`` is able to "
"determine whether a request is secure by looking at whether the requested "
"URL uses \"https://\". This is important for Django's CSRF protection, and "
"may be used by your own code or third-party apps."
msgstr ""
"Ini mengambil beberapa penjelasan. Secara awal, ``is_secure()`` dapat "
"menentukan apakah sebuah permintaan aman dengan mencari apakah URL diminta "
"menggunakan \"https://\". Ini adalah penting untuk perlindungan CSRF Django, "
"dan mungkin digunakan oleh kode anda sendiri atau aplikasi pihak ketiga."

msgid ""
"If your Django app is behind a proxy, though, the proxy may be \"swallowing"
"\" the fact that a request is HTTPS, using a non-HTTPS connection between "
"the proxy and Django. In this case, ``is_secure()`` would always return "
"``False`` -- even for requests that were made via HTTPS by the end user."
msgstr ""

msgid ""
"In this situation, you'll want to configure your proxy to set a custom HTTP "
"header that tells Django whether the request came in via HTTPS, and you'll "
"want to set ``SECURE_PROXY_SSL_HEADER`` so that Django knows what header to "
"look for."
msgstr ""

msgid ""
"You'll need to set a tuple with two elements -- the name of the header to "
"look for and the required value. For example::"
msgstr ""

msgid ""
"Here, we're telling Django that we trust the ``X-Forwarded-Proto`` header "
"that comes from our proxy, and any time its value is ``'https'``, then the "
"request is guaranteed to be secure (i.e., it originally came in via HTTPS). "
"Obviously, you should *only* set this setting if you control your proxy or "
"have some other guarantee that it sets/strips this header appropriately."
msgstr ""

msgid ""
"Note that the header needs to be in the format as used by ``request.META`` "
"-- all caps and likely starting with ``HTTP_``. (Remember, Django "
"automatically adds ``'HTTP_'`` to the start of x-header names before making "
"the header available in ``request.META``.)"
msgstr ""

msgid ""
"**You will probably open security holes in your site if you set this without "
"knowing what you're doing. And if you fail to set it when you should. "
"Seriously.**"
msgstr ""

msgid ""
"Make sure ALL of the following are true before setting this (assuming the "
"values from the example above):"
msgstr ""

msgid "Your Django app is behind a proxy."
msgstr ""

msgid ""
"Your proxy strips the ``X-Forwarded-Proto`` header from all incoming "
"requests. In other words, if end users include that header in their "
"requests, the proxy will discard it."
msgstr ""

msgid ""
"Your proxy sets the ``X-Forwarded-Proto`` header and sends it to Django, but "
"only for requests that originally come in via HTTPS."
msgstr ""

msgid ""
"If any of those are not true, you should keep this setting set to ``None`` "
"and find another way of determining HTTPS, perhaps via custom middleware."
msgstr ""

msgid "``SECURE_REDIRECT_EXEMPT``"
msgstr ""

msgid ""
"If a URL path matches a regular expression in this list, the request will "
"not be redirected to HTTPS. If :setting:`SECURE_SSL_REDIRECT` is ``False``, "
"this setting has no effect."
msgstr ""

msgid "``SECURE_SSL_HOST``"
msgstr ""

msgid ""
"If a string (e.g. ``secure.example.com``), all SSL redirects will be "
"directed to this host rather than the originally-requested host (e.g. ``www."
"example.com``). If :setting:`SECURE_SSL_REDIRECT` is ``False``, this setting "
"has no effect."
msgstr ""

msgid "``SECURE_SSL_REDIRECT``"
msgstr ""

msgid ""
"If ``True``, the :class:`~django.middleware.security.SecurityMiddleware` :"
"ref:`redirects <ssl-redirect>` all non-HTTPS requests to HTTPS (except for "
"those URLs matching a regular expression listed in :setting:"
"`SECURE_REDIRECT_EXEMPT`)."
msgstr ""

msgid ""
"If turning this to ``True`` causes infinite redirects, it probably means "
"your site is running behind a proxy and can't tell which requests are secure "
"and which are not. Your proxy likely sets a header to indicate secure "
"requests; you can correct the problem by finding out what that header is and "
"configuring the :setting:`SECURE_PROXY_SSL_HEADER` setting accordingly."
msgstr ""

msgid "``SERIALIZATION_MODULES``"
msgstr ""

msgid ""
"A dictionary of modules containing serializer definitions (provided as "
"strings), keyed by a string identifier for that serialization type. For "
"example, to define a YAML serializer, use::"
msgstr ""

msgid "``SERVER_EMAIL``"
msgstr ""

msgid "Default: ``'root@localhost'``"
msgstr "Awal: ``'root@localhost'``"

msgid ""
"The email address that error messages come from, such as those sent to :"
"setting:`ADMINS` and :setting:`MANAGERS`."
msgstr ""

msgid "Why are my emails sent from a different address?"
msgstr ""

msgid ""
"This address is used only for error messages. It is *not* the address that "
"regular email messages sent with :meth:`~django.core.mail.send_mail()` come "
"from; for that, see :setting:`DEFAULT_FROM_EMAIL`."
msgstr ""

msgid "``SHORT_DATE_FORMAT``"
msgstr ""

msgid "Default: ``'m/d/Y'`` (e.g. ``12/31/2003``)"
msgstr ""

msgid ""
"An available formatting that can be used for displaying date fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATETIME_FORMAT`."
msgstr ""

msgid "``SHORT_DATETIME_FORMAT``"
msgstr ""

msgid "Default: ``'m/d/Y P'`` (e.g. ``12/31/2003 4 p.m.``)"
msgstr ""

msgid ""
"An available formatting that can be used for displaying datetime fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATE_FORMAT`."
msgstr "Lihat juga :setting:`DATE_FORMAT` dan :setting:`SHORT_DATE_FORMAT`."

msgid "``SIGNING_BACKEND``"
msgstr ""

msgid "Default: ``'django.core.signing.TimestampSigner'``"
msgstr ""

msgid "The backend used for signing cookies and other data."
msgstr ""

msgid "See also the :doc:`/topics/signing` documentation."
msgstr "Lihat juga dokumentasi  :doc:`/topics/signing`."

msgid "``SILENCED_SYSTEM_CHECKS``"
msgstr ""

msgid ""
"A list of identifiers of messages generated by the system check framework (i."
"e. ``[\"models.W001\"]``) that you wish to permanently acknowledge and "
"ignore. Silenced checks will not be output to the console."
msgstr ""
"Sebuah daftar penciri dari pesan-pesan dibangkitkan oleh kerangka sistem "
"pemeriksaan (yaitu `[\"models.W001\"]``) yang anda harapkan secara tetap "
"mengakui dan mengabaikan. Pemeriksaan diam-diam tidak akan dikeluarkan ke "
"konsol."

msgid "See also the :doc:`/ref/checks` documentation."
msgstr "Lihat juga dokumentasi :doc:`/ref/checks`."

msgid "``TEMPLATES``"
msgstr ""

msgid ""
"A list containing the settings for all template engines to be used with "
"Django. Each item of the list is a dictionary containing the options for an "
"individual engine."
msgstr ""

msgid ""
"Here's a simple setup that tells the Django template engine to load "
"templates from the ``templates`` subdirectory inside each installed "
"application::"
msgstr ""

msgid "The following options are available for all backends."
msgstr ""

msgid "The template backend to use. The built-in template backends are:"
msgstr ""

msgid "``'django.template.backends.django.DjangoTemplates'``"
msgstr "``'django.template.backends.django.DjangoTemplates'``"

msgid "``'django.template.backends.jinja2.Jinja2'``"
msgstr "``'django.template.backends.jinja2.Jinja2'``"

msgid ""
"You can use a template backend that doesn't ship with Django by setting "
"``BACKEND`` to a fully-qualified path (i.e. ``'mypackage.whatever."
"Backend'``)."
msgstr ""

msgid "Default: see below"
msgstr ""

msgid ""
"The alias for this particular template engine. It's an identifier that "
"allows selecting an engine for rendering. Aliases must be unique across all "
"configured template engines."
msgstr ""

msgid ""
"It defaults to the name of the module defining the engine class, i.e. the "
"next to last piece of :setting:`BACKEND <TEMPLATES-BACKEND>`, when it isn't "
"provided. For example if the backend is ``'mypackage.whatever.Backend'`` "
"then its default name is ``'whatever'``."
msgstr ""

msgid "``DIRS``"
msgstr ""

msgid ""
"Directories where the engine should look for template source files, in "
"search order."
msgstr ""

msgid "``APP_DIRS``"
msgstr ""

msgid ""
"Whether the engine should look for template source files inside installed "
"applications."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` sets ``'APP_DIRS': True``."
msgstr ""

msgid "Default: ``{}`` (Empty dict)"
msgstr ""

msgid ""
"Extra parameters to pass to the template backend. Available parameters vary "
"depending on the template backend. See :class:`~django.template.backends."
"django.DjangoTemplates` and :class:`~django.template.backends.jinja2.Jinja2` "
"for the options of the built-in backends."
msgstr ""

msgid "``TEST_RUNNER``"
msgstr ""

msgid "Default: ``'django.test.runner.DiscoverRunner'``"
msgstr ""

msgid ""
"The name of the class to use for starting the test suite. See :ref:`other-"
"testing-frameworks`."
msgstr ""

msgid "``TEST_NON_SERIALIZED_APPS``"
msgstr ""

msgid ""
"In order to restore the database state between tests for "
"``TransactionTestCase``\\s and database backends without transactions, "
"Django will :ref:`serialize the contents of all apps <test-case-serialized-"
"rollback>` when it starts the test run so it can then reload from that copy "
"before running tests that need it."
msgstr ""

msgid ""
"This slows down the startup time of the test runner; if you have apps that "
"you know don't need this feature, you can add their full names in here (e.g. "
"``'django.contrib.contenttypes'``) to exclude them from this serialization "
"process."
msgstr ""

msgid "``THOUSAND_SEPARATOR``"
msgstr ""

msgid "Default: ``','`` (Comma)"
msgstr ""

msgid ""
"Default thousand separator used when formatting numbers. This setting is "
"used only when :setting:`USE_THOUSAND_SEPARATOR` is ``True`` and :setting:"
"`NUMBER_GROUPING` is greater than ``0``."
msgstr ""

msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`DECIMAL_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

msgid "``TIME_FORMAT``"
msgstr ""

msgid "Default: ``'P'`` (e.g. ``4 p.m.``)"
msgstr ""

msgid ""
"The default formatting to use for displaying time fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

msgid "See also :setting:`DATE_FORMAT` and :setting:`DATETIME_FORMAT`."
msgstr ""

msgid "``TIME_INPUT_FORMATS``"
msgstr ""

msgid ""
"A list of formats that will be accepted when inputting data on a time field. "
"Formats will be tried in order, using the first valid one. Note that these "
"format strings use Python's :ref:`datetime module syntax <strftime-strptime-"
"behavior>`, not the format strings from the :tfilter:`date` template filter."
msgstr ""

msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`DATETIME_INPUT_FORMATS`."
msgstr ""

msgid "Default: ``'America/Chicago'``"
msgstr ""

msgid ""
"A string representing the time zone for this installation. See the `list of "
"time zones`_."
msgstr ""

msgid ""
"Since Django was first released with the :setting:`TIME_ZONE` set to "
"``'America/Chicago'``, the global setting (used if nothing is defined in "
"your project's ``settings.py``) remains ``'America/Chicago'`` for backwards "
"compatibility. New project templates default to ``'UTC'``."
msgstr ""

msgid ""
"Note that this isn't necessarily the time zone of the server. For example, "
"one server may serve multiple Django-powered sites, each with a separate "
"time zone setting."
msgstr ""

msgid ""
"When :setting:`USE_TZ` is ``False``, this is the time zone in which Django "
"will store all datetimes. When :setting:`USE_TZ` is ``True``, this is the "
"default time zone that Django will use to display datetimes in templates and "
"to interpret datetimes entered in forms."
msgstr ""

msgid ""
"On Unix environments (where :func:`time.tzset` is implemented), Django sets "
"the ``os.environ['TZ']`` variable to the time zone you specify in the :"
"setting:`TIME_ZONE` setting. Thus, all your views and models will "
"automatically operate in this time zone. However, Django won't set the "
"``TZ`` environment variable if you're using the manual configuration option "
"as described in :ref:`manually configuring settings <settings-without-django-"
"settings-module>`. If Django doesn't set the ``TZ`` environment variable, "
"it's up to you to ensure your processes are running in the correct "
"environment."
msgstr ""

msgid ""
"Django cannot reliably use alternate time zones in a Windows environment. If "
"you're running Django on Windows, :setting:`TIME_ZONE` must be set to match "
"the system time zone."
msgstr ""

msgid "``USE_ETAGS``"
msgstr ""

msgid ""
"A boolean that specifies whether to output the ``ETag`` header. This saves "
"bandwidth but slows down performance. This is used by the :class:`~django."
"middleware.common.CommonMiddleware` and in the :doc:`cache framework </"
"topics/cache>`."
msgstr ""

msgid ""
"This setting is deprecated in favor of using ``ConditionalGetMiddleware``, "
"which sets an ETag regardless of this setting."
msgstr ""

msgid "``USE_I18N``"
msgstr ""

msgid ""
"A boolean that specifies whether Django's translation system should be "
"enabled. This provides an easy way to turn it off, for performance. If this "
"is set to ``False``, Django will make some optimizations so as not to load "
"the translation machinery."
msgstr ""

msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_L10N` and :setting:`USE_TZ`."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` includes ``USE_I18N = True`` for convenience."
msgstr ""

msgid "``USE_L10N``"
msgstr ""

msgid ""
"A boolean that specifies if localized formatting of data will be enabled by "
"default or not. If this is set to ``True``, e.g. Django will display numbers "
"and dates using the format of the current locale."
msgstr ""

msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_I18N` and :setting:`USE_TZ`."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` includes ``USE_L10N = True`` for convenience."
msgstr ""

msgid "``USE_THOUSAND_SEPARATOR``"
msgstr ""

msgid ""
"A boolean that specifies whether to display numbers using a thousand "
"separator. When :setting:`USE_L10N` is set to ``True`` and if this is also "
"set to ``True``, Django will use the values of :setting:`THOUSAND_SEPARATOR` "
"and :setting:`NUMBER_GROUPING` to format numbers unless the locale already "
"has an existing thousands separator. If there is a thousands separator in "
"the locale format, it will have higher precedence and will be applied "
"instead."
msgstr ""

msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`NUMBER_GROUPING` and :"
"setting:`THOUSAND_SEPARATOR`."
msgstr ""

msgid "``USE_TZ``"
msgstr ""

msgid ""
"A boolean that specifies if datetimes will be timezone-aware by default or "
"not. If this is set to ``True``, Django will use timezone-aware datetimes "
"internally. Otherwise, Django will use naive datetimes in local time."
msgstr ""

msgid ""
"See also :setting:`TIME_ZONE`, :setting:`USE_I18N` and :setting:`USE_L10N`."
msgstr ""

msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` includes ``USE_TZ = True`` for convenience."
msgstr ""

msgid "``USE_X_FORWARDED_HOST``"
msgstr ""

msgid ""
"A boolean that specifies whether to use the ``X-Forwarded-Host`` header in "
"preference to the ``Host`` header. This should only be enabled if a proxy "
"which sets this header is in use."
msgstr ""

msgid ""
"This setting takes priority over :setting:`USE_X_FORWARDED_PORT`. Per :rfc:"
"`7239#page-7`, the ``X-Forwarded-Host`` header can include the port number, "
"in which case you shouldn't use :setting:`USE_X_FORWARDED_PORT`."
msgstr ""

msgid "``USE_X_FORWARDED_PORT``"
msgstr ""

msgid ""
"A boolean that specifies whether to use the ``X-Forwarded-Port`` header in "
"preference to the ``SERVER_PORT`` ``META`` variable. This should only be "
"enabled if a proxy which sets this header is in use."
msgstr ""

msgid ":setting:`USE_X_FORWARDED_HOST` takes priority over this setting."
msgstr ""

msgid "``WSGI_APPLICATION``"
msgstr ""

msgid ""
"The full Python path of the WSGI application object that Django's built-in "
"servers (e.g. :djadmin:`runserver`) will use. The :djadmin:`django-admin "
"startproject <startproject>` management command will create a simple ``wsgi."
"py`` file with an ``application`` callable in it, and point this setting to "
"that ``application``."
msgstr ""

msgid ""
"If not set, the return value of ``django.core.wsgi.get_wsgi_application()`` "
"will be used. In this case, the behavior of :djadmin:`runserver` will be "
"identical to previous Django versions."
msgstr ""

msgid "``YEAR_MONTH_FORMAT``"
msgstr ""

msgid "Default: ``'F Y'``"
msgstr ""

msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the year and month are displayed."
msgstr ""

msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given month displays the month and the "
"year. Different locales have different formats. For example, U.S. English "
"would say \"January 2006,\" whereas another locale might say \"2006/January."
"\""
msgstr ""

msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`MONTH_DAY_FORMAT`."
msgstr ""

msgid "``X_FRAME_OPTIONS``"
msgstr ""

msgid "Default: ``'SAMEORIGIN'``"
msgstr ""

msgid ""
"The default value for the X-Frame-Options header used by :class:`~django."
"middleware.clickjacking.XFrameOptionsMiddleware`. See the :doc:`clickjacking "
"protection </ref/clickjacking/>` documentation."
msgstr ""

msgid "Auth"
msgstr "Sahih"

msgid "Settings for :mod:`django.contrib.auth`."
msgstr ""

msgid "``AUTHENTICATION_BACKENDS``"
msgstr ""

msgid "Default: ``['django.contrib.auth.backends.ModelBackend']``"
msgstr ""

msgid ""
"A list of authentication backend classes (as strings) to use when attempting "
"to authenticate a user. See the :ref:`authentication backends documentation "
"<authentication-backends>` for details."
msgstr ""

msgid "``AUTH_USER_MODEL``"
msgstr ""

msgid "Default: ``'auth.User'``"
msgstr ""

msgid "The model to use to represent a User. See :ref:`auth-custom-user`."
msgstr ""

msgid ""
"You cannot change the AUTH_USER_MODEL setting during the lifetime of a "
"project (i.e. once you have made and migrated models that depend on it) "
"without serious effort. It is intended to be set at the project start, and "
"the model it refers to must be available in the first migration of the app "
"that it lives in. See :ref:`auth-custom-user` for more details."
msgstr ""

msgid "``LOGIN_REDIRECT_URL``"
msgstr ""

msgid "Default: ``'/accounts/profile/'``"
msgstr ""

msgid ""
"The URL where requests are redirected after login when the ``contrib.auth."
"login`` view gets no ``next`` parameter."
msgstr ""

msgid ""
"This is used by the :func:`~django.contrib.auth.decorators.login_required` "
"decorator, for example."
msgstr ""

msgid ""
"This setting also accepts :ref:`named URL patterns <naming-url-patterns>` "
"which can be used to reduce configuration duplication since you don't have "
"to define the URL in two places (``settings`` and URLconf)."
msgstr ""

msgid "``LOGIN_URL``"
msgstr ""

msgid "Default: ``'/accounts/login/'``"
msgstr ""

msgid ""
"The URL where requests are redirected for login, especially when using the :"
"func:`~django.contrib.auth.decorators.login_required` decorator."
msgstr ""

msgid "``LOGOUT_REDIRECT_URL``"
msgstr ""

msgid ""
"The URL where requests are redirected after a user logs out using :class:"
"`~django.contrib.auth.views.LogoutView` (if the view doesn't get a "
"``next_page`` argument)."
msgstr ""

msgid ""
"If ``None``, no redirect will be performed and the logout view will be "
"rendered."
msgstr ""

msgid "``PASSWORD_RESET_TIMEOUT_DAYS``"
msgstr ""

msgid "Default: ``3``"
msgstr ""

msgid ""
"The number of days a password reset link is valid for. Used by the :mod:"
"`django.contrib.auth` password reset mechanism."
msgstr ""

msgid "``PASSWORD_HASHERS``"
msgstr ""

msgid "See :ref:`auth_password_storage`."
msgstr ""

msgid "The following hashers were removed from the defaults::"
msgstr ""

msgid ""
"Consider using a :ref:`wrapped password hasher <wrapping-password-hashers>` "
"to strengthen the hashes in your database. If that's not feasible, add this "
"setting to your project and add back any hashers that you need."
msgstr ""

msgid "Also, the ``Argon2PasswordHasher`` was added."
msgstr ""

msgid "``AUTH_PASSWORD_VALIDATORS``"
msgstr ""

msgid ""
"The list of validators that are used to check the strength of user's "
"passwords. See :ref:`password-validation` for more details. By default, no "
"validation is performed and all passwords are accepted."
msgstr ""

msgid "Messages"
msgstr "Pesan"

msgid "Settings for :mod:`django.contrib.messages`."
msgstr ""

msgid "``MESSAGE_LEVEL``"
msgstr ""

msgid "Default: ``messages.INFO``"
msgstr ""

msgid ""
"Sets the minimum message level that will be recorded by the messages "
"framework. See :ref:`message levels <message-level>` for more details."
msgstr ""

msgid "Important"
msgstr ""

msgid ""
"If you override ``MESSAGE_LEVEL`` in your settings file and rely on any of "
"the built-in constants, you must import the constants module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

msgid ""
"If desired, you may specify the numeric values for the constants directly "
"according to the values in the above :ref:`constants table <message-level-"
"constants>`."
msgstr ""

msgid "``MESSAGE_STORAGE``"
msgstr ""

msgid "Default: ``'django.contrib.messages.storage.fallback.FallbackStorage'``"
msgstr ""

msgid "Controls where Django stores message data. Valid values are:"
msgstr ""

msgid "``'django.contrib.messages.storage.fallback.FallbackStorage'``"
msgstr "``'django.contrib.messages.storage.fallback.FallbackStorage'``"

msgid "``'django.contrib.messages.storage.session.SessionStorage'``"
msgstr "``'django.contrib.messages.storage.session.SessionStorage'``"

msgid "``'django.contrib.messages.storage.cookie.CookieStorage'``"
msgstr "``'django.contrib.messages.storage.cookie.CookieStorage'``"

msgid ""
"See :ref:`message storage backends <message-storage-backends>` for more "
"details."
msgstr ""
"Lihat :ref:`message storage backends <message-storage-backends>` untuk lebih "
"rinci."

msgid ""
"The backends that use cookies -- :class:`~django.contrib.messages.storage."
"cookie.CookieStorage` and :class:`~django.contrib.messages.storage.fallback."
"FallbackStorage` -- use the value of :setting:`SESSION_COOKIE_DOMAIN`, :"
"setting:`SESSION_COOKIE_SECURE` and :setting:`SESSION_COOKIE_HTTPONLY` when "
"setting their cookies."
msgstr ""

msgid "``MESSAGE_TAGS``"
msgstr ""

msgid ""
"This sets the mapping of message level to message tag, which is typically "
"rendered as a CSS class in HTML. If you specify a value, it will extend the "
"default. This means you only have to specify those values which you need to "
"override. See :ref:`message-displaying` above for more details."
msgstr ""

msgid ""
"If you override ``MESSAGE_TAGS`` in your settings file and rely on any of "
"the built-in constants, you must import the ``constants`` module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

msgid "Sessions"
msgstr "Sesi"

msgid "Settings for :mod:`django.contrib.sessions`."
msgstr ""

msgid "``SESSION_CACHE_ALIAS``"
msgstr ""

msgid "Default: ``'default'``"
msgstr ""

msgid ""
"If you're using :ref:`cache-based session storage <cached-sessions-"
"backend>`, this selects the cache to use."
msgstr ""

msgid "``SESSION_COOKIE_AGE``"
msgstr ""

msgid "Default: ``1209600`` (2 weeks, in seconds)"
msgstr ""

msgid "The age of session cookies, in seconds."
msgstr ""

msgid "``SESSION_COOKIE_DOMAIN``"
msgstr ""

msgid ""
"The domain to use for session cookies. Set this to a string such as ``\"."
"example.com\"`` (note the leading dot!) for cross-domain cookies, or use "
"``None`` for a standard domain cookie."
msgstr ""

msgid ""
"Be cautious when updating this setting on a production site. If you update "
"this setting to enable cross-domain cookies on a site that previously used "
"standard domain cookies, existing user cookies will be set to the old "
"domain. This may result in them being unable to log in as long as these "
"cookies persist."
msgstr ""

msgid ""
"This setting also affects cookies set by :mod:`django.contrib.messages`."
msgstr ""

msgid "``SESSION_COOKIE_HTTPONLY``"
msgstr ""

msgid ""
"Whether to use ``HTTPOnly`` flag on the session cookie. If this is set to "
"``True``, client-side JavaScript will not to be able to access the session "
"cookie."
msgstr ""

msgid ""
"HTTPOnly_ is a flag included in a Set-Cookie HTTP response header. It is not "
"part of the :rfc:`2109` standard for cookies, and it isn't honored "
"consistently by all browsers. However, when it is honored, it can be a "
"useful way to mitigate the risk of a client side script accessing the "
"protected cookie data."
msgstr ""

msgid ""
"Turning it on makes it less trivial for an attacker to escalate a cross-site "
"scripting vulnerability into full hijacking of a user's session. There's not "
"much excuse for leaving this off, either: if your code depends on reading "
"session cookies from JavaScript, you're probably doing it wrong."
msgstr ""

msgid "``SESSION_COOKIE_NAME``"
msgstr ""

msgid "Default: ``'sessionid'``"
msgstr ""

msgid ""
"The name of the cookie to use for sessions. This can be whatever you want "
"(as long as it's different from the other cookie names in your application)."
msgstr ""

msgid "``SESSION_COOKIE_PATH``"
msgstr ""

msgid ""
"The path set on the session cookie. This should either match the URL path of "
"your Django installation or be parent of that path."
msgstr ""

msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own session cookie."
msgstr ""

msgid "``SESSION_COOKIE_SECURE``"
msgstr ""

msgid ""
"Whether to use a secure cookie for the session cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent under an HTTPS connection."
msgstr ""

msgid ""
"Since it's trivial for a packet sniffer (e.g. `Firesheep`_) to hijack a "
"user's session if the session cookie is sent unencrypted, there's really no "
"good excuse to leave this off. It will prevent you from using sessions on "
"insecure requests and that's a good thing."
msgstr ""
"Sejak itu adalah sepele untuk sebuah paket sniffer (sebagai contoh "
"`Firesheep`_) untuk membajak sesi pengguna jika kue sesi dikirim tidak "
"terenkripsi, ada benar-benar tidak alasan baik meninggalkan ini. Itu akan "
"mencegah anda dari menggunakan sesi pada permintaan tidak aman dan itu "
"adalah hal baik."

msgid "``SESSION_ENGINE``"
msgstr ""

msgid "Default: ``'django.contrib.sessions.backends.db'``"
msgstr ""

msgid "Controls where Django stores session data. Included engines are:"
msgstr ""

msgid "``'django.contrib.sessions.backends.db'``"
msgstr "``'django.contrib.sessions.backends.db'``"

msgid "``'django.contrib.sessions.backends.file'``"
msgstr "``'django.contrib.sessions.backends.file'``"

msgid "``'django.contrib.sessions.backends.cache'``"
msgstr "``'django.contrib.sessions.backends.cache'``"

msgid "``'django.contrib.sessions.backends.cached_db'``"
msgstr "``'django.contrib.sessions.backends.cached_db'``"

msgid "``'django.contrib.sessions.backends.signed_cookies'``"
msgstr "``'django.contrib.sessions.backends.signed_cookies'``"

msgid "See :ref:`configuring-sessions` for more details."
msgstr "Lihat :ref:`configuring-sessions` untuk rincian lebih."

msgid "``SESSION_EXPIRE_AT_BROWSER_CLOSE``"
msgstr ""

msgid ""
"Whether to expire the session when the user closes their browser. See :ref:"
"`browser-length-vs-persistent-sessions`."
msgstr ""

msgid "``SESSION_FILE_PATH``"
msgstr ""

msgid ""
"If you're using file-based session storage, this sets the directory in which "
"Django will store session data. When the default value (``None``) is used, "
"Django will use the standard temporary directory for the system."
msgstr ""

msgid "``SESSION_SAVE_EVERY_REQUEST``"
msgstr ""

msgid ""
"Whether to save the session data on every request. If this is ``False`` "
"(default), then the session data will only be saved if it has been modified "
"-- that is, if any of its dictionary values have been assigned or deleted. "
"Empty sessions won't be created, even if this setting is active."
msgstr ""

msgid "``SESSION_SERIALIZER``"
msgstr ""

msgid "Default: ``'django.contrib.sessions.serializers.JSONSerializer'``"
msgstr ""

msgid ""
"Full import path of a serializer class to use for serializing session data. "
"Included serializers are:"
msgstr ""

msgid "``'django.contrib.sessions.serializers.PickleSerializer'``"
msgstr "``'django.contrib.sessions.serializers.PickleSerializer'``"

msgid "``'django.contrib.sessions.serializers.JSONSerializer'``"
msgstr "``'django.contrib.sessions.serializers.JSONSerializer'``"

msgid ""
"See :ref:`session_serialization` for details, including a warning regarding "
"possible remote code execution when using :class:`~django.contrib.sessions."
"serializers.PickleSerializer`."
msgstr ""

msgid "Sites"
msgstr "Situs"

msgid "Settings for :mod:`django.contrib.sites`."
msgstr "Pengaturan untuk :mod:`django.contrib.sites`."

msgid "``SITE_ID``"
msgstr ""

msgid ""
"The ID, as an integer, of the current site in the ``django_site`` database "
"table. This is used so that application data can hook into specific sites "
"and a single database can manage content for multiple sites."
msgstr ""

msgid "Static Files"
msgstr "Bidang Tetap"

msgid "Settings for :mod:`django.contrib.staticfiles`."
msgstr "Pengaturan untuk :mod:`django.contrib.staticfiles`."

msgid "``STATIC_ROOT``"
msgstr ""

msgid ""
"The absolute path to the directory where :djadmin:`collectstatic` will "
"collect static files for deployment."
msgstr ""

msgid "Example: ``\"/var/www/example.com/static/\"``"
msgstr "Contoh: ``\"/var/www/example.com/static/\"``"

msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(as in the default project template), the :djadmin:`collectstatic` "
"management command will collect static files into this directory. See the "
"how-to on :doc:`managing static files</howto/static-files/index>` for more "
"details about usage."
msgstr ""

msgid ""
"This should be an initially empty destination directory for collecting your "
"static files from their permanent locations into one directory for ease of "
"deployment; it is **not** a place to store your static files permanently. "
"You should do that in directories that will be found by :doc:`staticfiles</"
"ref/contrib/staticfiles>`’s :setting:`finders<STATICFILES_FINDERS>`, which "
"by default, are ``'static/'`` app sub-directories and any directories you "
"include in :setting:`STATICFILES_DIRS`)."
msgstr ""

msgid "``STATIC_URL``"
msgstr ""

msgid ""
"URL to use when referring to static files located in :setting:`STATIC_ROOT`."
msgstr ""

msgid "Example: ``\"/static/\"`` or ``\"http://static.example.com/\"``"
msgstr ""

msgid ""
"If not ``None``, this will be used as the base path for :ref:`asset "
"definitions<form-asset-paths>` (the ``Media`` class) and the :doc:"
"`staticfiles app</ref/contrib/staticfiles>`."
msgstr ""

msgid "It must end in a slash if set to a non-empty value."
msgstr ""
"Itu harus berakhir dalam sebuah garis miring jika disetel ke nilai bukan-"
"kosong."

msgid ""
"You may need to :ref:`configure these files to be served in development "
"<serving-static-files-in-development>` and will definitely need to do so :"
"doc:`in production </howto/static-files/deployment>`."
msgstr ""

msgid "``STATICFILES_DIRS``"
msgstr ""

msgid ""
"This setting defines the additional locations the staticfiles app will "
"traverse if the ``FileSystemFinder`` finder is enabled, e.g. if you use the :"
"djadmin:`collectstatic` or :djadmin:`findstatic` management command or use "
"the static file serving view."
msgstr ""

msgid ""
"This should be set to a list of strings that contain full paths to your "
"additional files directory(ies) e.g.::"
msgstr ""

msgid ""
"Note that these paths should use Unix-style forward slashes, even on Windows "
"(e.g. ``\"C:/Users/user/mysite/extra_static_content\"``)."
msgstr ""
"Catat bahwa jalur-jalur ini harus menggunakan garis miring depan gaya-Unix, "
"bahkan pada Windows (sebagai contoh. ``\"C:/Users/user/mysite/"
"extra_static_content\"``)."

msgid "Prefixes (optional)"
msgstr ""

msgid ""
"In case you want to refer to files in one of the locations with an "
"additional namespace, you can **optionally** provide a prefix as ``(prefix, "
"path)`` tuples, e.g.::"
msgstr ""

msgid ""
"For example, assuming you have :setting:`STATIC_URL` set to ``'/static/'``, "
"the :djadmin:`collectstatic` management command would collect the \"stats\" "
"files in a ``'downloads'`` subdirectory of :setting:`STATIC_ROOT`."
msgstr ""

msgid ""
"This would allow you to refer to the local file ``'/opt/webfiles/stats/"
"polls_20101022.tar.gz'`` with ``'/static/downloads/polls_20101022.tar.gz'`` "
"in your templates, e.g.:"
msgstr ""

msgid "``STATICFILES_STORAGE``"
msgstr ""

msgid "Default: ``'django.contrib.staticfiles.storage.StaticFilesStorage'``"
msgstr ""

msgid ""
"The file storage engine to use when collecting static files with the :"
"djadmin:`collectstatic` management command."
msgstr ""

msgid ""
"A ready-to-use instance of the storage backend defined in this setting can "
"be found at ``django.contrib.staticfiles.storage.staticfiles_storage``."
msgstr ""

msgid "For an example, see :ref:`staticfiles-from-cdn`."
msgstr ""

msgid "``STATICFILES_FINDERS``"
msgstr ""

msgid ""
"The list of finder backends that know how to find static files in various "
"locations."
msgstr ""

msgid ""
"The default will find files stored in the :setting:`STATICFILES_DIRS` "
"setting (using ``django.contrib.staticfiles.finders.FileSystemFinder``) and "
"in a ``static`` subdirectory of each app (using ``django.contrib.staticfiles."
"finders.AppDirectoriesFinder``). If multiple files with the same name are "
"present, the first file that is found will be used."
msgstr ""

msgid ""
"One finder is disabled by default: ``django.contrib.staticfiles.finders."
"DefaultStorageFinder``. If added to your :setting:`STATICFILES_FINDERS` "
"setting, it will look for static files in the default file storage as "
"defined by the :setting:`DEFAULT_FILE_STORAGE` setting."
msgstr ""

msgid ""
"When using the ``AppDirectoriesFinder`` finder, make sure your apps can be "
"found by staticfiles. Simply add the app to the :setting:`INSTALLED_APPS` "
"setting of your site."
msgstr ""

msgid ""
"Static file finders are currently considered a private interface, and this "
"interface is thus undocumented."
msgstr ""

msgid "Core Settings Topical Index"
msgstr ""

msgid "Cache"
msgstr "Tembolok"

msgid ":setting:`CACHES`"
msgstr ":setting:`CACHES`"

msgid ":setting:`CACHE_MIDDLEWARE_ALIAS`"
msgstr ":setting:`CACHE_MIDDLEWARE_ALIAS`"

msgid ":setting:`CACHE_MIDDLEWARE_KEY_PREFIX`"
msgstr ":setting:`CACHE_MIDDLEWARE_KEY_PREFIX`"

msgid ":setting:`CACHE_MIDDLEWARE_SECONDS`"
msgstr ":setting:`CACHE_MIDDLEWARE_SECONDS`"

msgid ":setting:`DATABASES`"
msgstr ":setting:`DATABASES`"

msgid ":setting:`DATABASE_ROUTERS`"
msgstr ":setting:`DATABASE_ROUTERS`"

msgid ":setting:`DEFAULT_INDEX_TABLESPACE`"
msgstr ":setting:`DEFAULT_INDEX_TABLESPACE`"

msgid ":setting:`DEFAULT_TABLESPACE`"
msgstr ":setting:`DEFAULT_TABLESPACE`"

msgid "Debugging"
msgstr ""

msgid ":setting:`DEBUG`"
msgstr ":setting:`DEBUG`"

msgid ":setting:`DEBUG_PROPAGATE_EXCEPTIONS`"
msgstr ":setting:`DEBUG_PROPAGATE_EXCEPTIONS`"

msgid "Email"
msgstr "Surel"

msgid ":setting:`ADMINS`"
msgstr ":setting:`ADMINS`"

msgid ":setting:`DEFAULT_CHARSET`"
msgstr ":setting:`DEFAULT_CHARSET`"

msgid ":setting:`DEFAULT_FROM_EMAIL`"
msgstr ":setting:`DEFAULT_FROM_EMAIL`"

msgid ":setting:`EMAIL_BACKEND`"
msgstr ":setting:`EMAIL_BACKEND`"

msgid ":setting:`EMAIL_FILE_PATH`"
msgstr ":setting:`EMAIL_FILE_PATH`"

msgid ":setting:`EMAIL_HOST`"
msgstr ":setting:`EMAIL_HOST`"

msgid ":setting:`EMAIL_HOST_PASSWORD`"
msgstr ":setting:`EMAIL_HOST_PASSWORD`"

msgid ":setting:`EMAIL_HOST_USER`"
msgstr ":setting:`EMAIL_HOST_USER`"

msgid ":setting:`EMAIL_PORT`"
msgstr ":setting:`EMAIL_PORT`"

msgid ":setting:`EMAIL_SSL_CERTFILE`"
msgstr ":setting:`EMAIL_SSL_CERTFILE`"

msgid ":setting:`EMAIL_SSL_KEYFILE`"
msgstr ":setting:`EMAIL_SSL_KEYFILE`"

msgid ":setting:`EMAIL_SUBJECT_PREFIX`"
msgstr ":setting:`EMAIL_SUBJECT_PREFIX`"

msgid ":setting:`EMAIL_TIMEOUT`"
msgstr ":setting:`EMAIL_TIMEOUT`"

msgid ":setting:`EMAIL_USE_LOCALTIME`"
msgstr ""

msgid ":setting:`EMAIL_USE_TLS`"
msgstr ":setting:`EMAIL_USE_TLS`"

msgid ":setting:`MANAGERS`"
msgstr ":setting:`MANAGERS`"

msgid ":setting:`SERVER_EMAIL`"
msgstr ":setting:`SERVER_EMAIL`"

msgid "Error reporting"
msgstr "Pelaporan kesalahan"

msgid ":setting:`DEFAULT_EXCEPTION_REPORTER_FILTER`"
msgstr ":setting:`DEFAULT_EXCEPTION_REPORTER_FILTER`"

msgid ":setting:`IGNORABLE_404_URLS`"
msgstr ":setting:`IGNORABLE_404_URLS`"

msgid ":setting:`SILENCED_SYSTEM_CHECKS`"
msgstr ":setting:`SILENCED_SYSTEM_CHECKS`"

msgid "File uploads"
msgstr "Unggah berkas"

msgid ":setting:`DEFAULT_FILE_STORAGE`"
msgstr ":setting:`DEFAULT_FILE_STORAGE`"

msgid ":setting:`FILE_CHARSET`"
msgstr ":setting:`FILE_CHARSET`"

msgid ":setting:`FILE_UPLOAD_HANDLERS`"
msgstr ":setting:`FILE_UPLOAD_HANDLERS`"

msgid ":setting:`FILE_UPLOAD_MAX_MEMORY_SIZE`"
msgstr ":setting:`FILE_UPLOAD_MAX_MEMORY_SIZE`"

msgid ":setting:`FILE_UPLOAD_PERMISSIONS`"
msgstr ":setting:`FILE_UPLOAD_PERMISSIONS`"

msgid ":setting:`FILE_UPLOAD_TEMP_DIR`"
msgstr ":setting:`FILE_UPLOAD_TEMP_DIR`"

msgid ":setting:`MEDIA_ROOT`"
msgstr ":setting:`MEDIA_ROOT`"

msgid ":setting:`MEDIA_URL`"
msgstr ":setting:`MEDIA_URL`"

msgid ":setting:`FORM_RENDERER`"
msgstr ""

msgid "Globalization (``i18n``/``l10n``)"
msgstr ""

msgid ":setting:`DATE_FORMAT`"
msgstr ":setting:`DATE_FORMAT`"

msgid ":setting:`DATE_INPUT_FORMATS`"
msgstr ":setting:`DATE_INPUT_FORMATS`"

msgid ":setting:`DATETIME_FORMAT`"
msgstr ":setting:`DATETIME_FORMAT`"

msgid ":setting:`DATETIME_INPUT_FORMATS`"
msgstr ":setting:`DATETIME_INPUT_FORMATS`"

msgid ":setting:`DECIMAL_SEPARATOR`"
msgstr ":setting:`DECIMAL_SEPARATOR`"

msgid ":setting:`FIRST_DAY_OF_WEEK`"
msgstr ":setting:`FIRST_DAY_OF_WEEK`"

msgid ":setting:`FORMAT_MODULE_PATH`"
msgstr ":setting:`FORMAT_MODULE_PATH`"

msgid ":setting:`LANGUAGE_CODE`"
msgstr ":setting:`LANGUAGE_CODE`"

msgid ":setting:`LANGUAGE_COOKIE_AGE`"
msgstr ":setting:`LANGUAGE_COOKIE_AGE`"

msgid ":setting:`LANGUAGE_COOKIE_DOMAIN`"
msgstr ":setting:`LANGUAGE_COOKIE_DOMAIN`"

msgid ":setting:`LANGUAGE_COOKIE_NAME`"
msgstr ":setting:`LANGUAGE_COOKIE_NAME`"

msgid ":setting:`LANGUAGE_COOKIE_PATH`"
msgstr ":setting:`LANGUAGE_COOKIE_PATH`"

msgid ":setting:`LANGUAGES`"
msgstr ":setting:`LANGUAGES`"

msgid ":setting:`LOCALE_PATHS`"
msgstr ":setting:`LOCALE_PATHS`"

msgid ":setting:`MONTH_DAY_FORMAT`"
msgstr ":setting:`MONTH_DAY_FORMAT`"

msgid ":setting:`NUMBER_GROUPING`"
msgstr ":setting:`NUMBER_GROUPING`"

msgid ":setting:`SHORT_DATE_FORMAT`"
msgstr ":setting:`SHORT_DATE_FORMAT`"

msgid ":setting:`SHORT_DATETIME_FORMAT`"
msgstr ":setting:`SHORT_DATETIME_FORMAT`"

msgid ":setting:`THOUSAND_SEPARATOR`"
msgstr ":setting:`THOUSAND_SEPARATOR`"

msgid ":setting:`TIME_FORMAT`"
msgstr ":setting:`TIME_FORMAT`"

msgid ":setting:`TIME_INPUT_FORMATS`"
msgstr ":setting:`TIME_INPUT_FORMATS`"

msgid ":setting:`TIME_ZONE`"
msgstr ":setting:`TIME_ZONE`"

msgid ":setting:`USE_I18N`"
msgstr ":setting:`USE_I18N`"

msgid ":setting:`USE_L10N`"
msgstr ":setting:`USE_L10N`"

msgid ":setting:`USE_THOUSAND_SEPARATOR`"
msgstr ":setting:`USE_THOUSAND_SEPARATOR`"

msgid ":setting:`USE_TZ`"
msgstr ":setting:`USE_TZ`"

msgid ":setting:`YEAR_MONTH_FORMAT`"
msgstr ":setting:`YEAR_MONTH_FORMAT`"

msgid "HTTP"
msgstr "HTTP"

msgid ":setting:`DATA_UPLOAD_MAX_MEMORY_SIZE`"
msgstr ""

msgid ":setting:`DATA_UPLOAD_MAX_NUMBER_FIELDS`"
msgstr ""

msgid ":setting:`DEFAULT_CONTENT_TYPE`"
msgstr ":setting:`DEFAULT_CONTENT_TYPE`"

msgid ":setting:`DISALLOWED_USER_AGENTS`"
msgstr ":setting:`DISALLOWED_USER_AGENTS`"

msgid ":setting:`FORCE_SCRIPT_NAME`"
msgstr ":setting:`FORCE_SCRIPT_NAME`"

msgid ":setting:`INTERNAL_IPS`"
msgstr ":setting:`INTERNAL_IPS`"

msgid ":setting:`MIDDLEWARE`"
msgstr ""

msgid ":setting:`MIDDLEWARE_CLASSES`"
msgstr ":setting:`MIDDLEWARE_CLASSES`"

msgid ":setting:`SECURE_PROXY_SSL_HEADER`"
msgstr ":setting:`SECURE_PROXY_SSL_HEADER`"

msgid ":setting:`SIGNING_BACKEND`"
msgstr ":setting:`SIGNING_BACKEND`"

msgid ":setting:`USE_ETAGS`"
msgstr ":setting:`USE_ETAGS`"

msgid ":setting:`USE_X_FORWARDED_HOST`"
msgstr ":setting:`USE_X_FORWARDED_HOST`"

msgid ":setting:`USE_X_FORWARDED_PORT`"
msgstr ":setting:`USE_X_FORWARDED_PORT`"

msgid ":setting:`WSGI_APPLICATION`"
msgstr ":setting:`WSGI_APPLICATION`"

msgid "Logging"
msgstr "Pencatatan"

msgid ":setting:`LOGGING`"
msgstr ":setting:`LOGGING`"

msgid ":setting:`LOGGING_CONFIG`"
msgstr ":setting:`LOGGING_CONFIG`"

msgid ":setting:`ABSOLUTE_URL_OVERRIDES`"
msgstr ":setting:`ABSOLUTE_URL_OVERRIDES`"

msgid ":setting:`FIXTURE_DIRS`"
msgstr ":setting:`FIXTURE_DIRS`"

msgid ":setting:`INSTALLED_APPS`"
msgstr ":setting:`INSTALLED_APPS`"

msgid "Cross Site Request Forgery Protection"
msgstr ""

msgid ":setting:`SECRET_KEY`"
msgstr ":setting:`SECRET_KEY`"

msgid ":setting:`X_FRAME_OPTIONS`"
msgstr ":setting:`X_FRAME_OPTIONS`"

msgid "Serialization"
msgstr "Serialisasi"

msgid ":setting:`SERIALIZATION_MODULES`"
msgstr ":setting:`SERIALIZATION_MODULES`"

msgid ":setting:`TEMPLATES`"
msgstr ":setting:`TEMPLATES`"

msgid "Database: :setting:`TEST <DATABASE-TEST>`"
msgstr ""

msgid ":setting:`TEST_NON_SERIALIZED_APPS`"
msgstr ":setting:`TEST_NON_SERIALIZED_APPS`"

msgid ":setting:`TEST_RUNNER`"
msgstr ":setting:`TEST_RUNNER`"

msgid ":setting:`APPEND_SLASH`"
msgstr ":setting:`APPEND_SLASH`"

msgid ":setting:`PREPEND_WWW`"
msgstr ":setting:`PREPEND_WWW`"

msgid ":setting:`ROOT_URLCONF`"
msgstr ":setting:`ROOT_URLCONF`"

msgid ""
"A list of all the signals that Django sends. All built-in signals are sent "
"using the :meth:`~django.dispatch.Signal.send` method."
msgstr ""

msgid ""
"See the documentation on the :doc:`signal dispatcher </topics/signals>` for "
"information regarding how to register for and receive signals."
msgstr ""

msgid ""
"The :doc:`authentication framework </topics/auth/index>` sends :ref:`signals "
"when a user is logged in / out <topics-auth-signals>`."
msgstr ""

msgid "Model signals"
msgstr ""

msgid ""
"The :mod:`django.db.models.signals` module defines a set of signals sent by "
"the model system."
msgstr ""

msgid ""
"Many of these signals are sent by various model methods like ``__init__()`` "
"or :meth:`~django.db.models.Model.save` that you can override in your own "
"code."
msgstr ""

msgid ""
"If you override these methods on your model, you must call the parent class' "
"methods for this signals to be sent."
msgstr ""

msgid ""
"Note also that Django stores signal handlers as weak references by default, "
"so if your handler is a local function, it may be garbage collected.  To "
"prevent this, pass ``weak=False`` when you call the signal's :meth:`~django."
"dispatch.Signal.connect`."
msgstr ""

msgid ""
"Model signals ``sender`` model can be lazily referenced when connecting a "
"receiver by specifying its full application label. For example, an "
"``Answer`` model defined in the ``polls`` application could be referenced as "
"``'polls.Answer'``. This sort of reference can be quite handy when dealing "
"with circular import dependencies and swappable models."
msgstr ""

msgid "``pre_init``"
msgstr ""

msgid ""
"Whenever you instantiate a Django model, this signal is sent at the "
"beginning of the model's ``__init__()`` method."
msgstr ""

msgid "The model class that just had an instance created."
msgstr ""

msgid "``args``"
msgstr "``args``"

msgid "A list of positional arguments passed to ``__init__()``:"
msgstr ""

msgid "``kwargs``"
msgstr "``kwargs``"

msgid "A dictionary of keyword arguments passed to ``__init__()``:"
msgstr ""

msgid "For example, the :doc:`tutorial </intro/tutorial01>` has this line::"
msgstr ""

msgid "The arguments sent to a :data:`pre_init` handler would be:"
msgstr ""

msgid "``Poll`` (the class itself)"
msgstr ""

msgid ""
"``[]`` (an empty list because there were no positional arguments passed to "
"``__init__()``.)"
msgstr ""

msgid "``{'question': \"What's up?\", 'pub_date': datetime.now()}``"
msgstr ""

msgid "``post_init``"
msgstr ""

msgid ""
"Like pre_init, but this one is sent when the ``__init__()`` method finishes."
msgstr ""

msgid "As above: the model class that just had an instance created."
msgstr ""

msgid "The actual instance of the model that's just been created."
msgstr ""

msgid "``pre_save``"
msgstr ""

msgid ""
"This is sent at the beginning of a model's :meth:`~django.db.models.Model."
"save` method."
msgstr ""

msgid "The model class."
msgstr ""

msgid "The actual instance being saved."
msgstr ""

msgid "``raw``"
msgstr "``raw``"

msgid ""
"A boolean; ``True`` if the model is saved exactly as presented (i.e. when "
"loading a fixture). One should not query/modify other records in the "
"database as the database might not be in a consistent state yet."
msgstr ""

msgid "The database alias being used."
msgstr ""

msgid "``update_fields``"
msgstr "``update_fields``"

msgid ""
"The set of fields to update as passed to :meth:`.Model.save`, or ``None`` if "
"``update_fields`` wasn't passed to ``save()``."
msgstr ""

msgid "``post_save``"
msgstr ""

msgid ""
"Like :data:`pre_save`, but sent at the end of the :meth:`~django.db.models."
"Model.save` method."
msgstr ""

msgid "``created``"
msgstr "``created``"

msgid "A boolean; ``True`` if a new record was created."
msgstr ""

msgid "``pre_delete``"
msgstr ""

msgid ""
"Sent at the beginning of a model's :meth:`~django.db.models.Model.delete` "
"method and a queryset's :meth:`~django.db.models.query.QuerySet.delete` "
"method."
msgstr ""

msgid "The actual instance being deleted."
msgstr ""

msgid "``post_delete``"
msgstr ""

msgid ""
"Like :data:`pre_delete`, but sent at the end of a model's :meth:`~django.db."
"models.Model.delete` method and a queryset's :meth:`~django.db.models.query."
"QuerySet.delete` method."
msgstr ""

msgid ""
"Note that the object will no longer be in the database, so be very careful "
"what you do with this instance."
msgstr ""

msgid "``m2m_changed``"
msgstr ""

msgid ""
"Sent when a :class:`~django.db.models.ManyToManyField` is changed on a model "
"instance. Strictly speaking, this is not a model signal since it is sent by "
"the :class:`~django.db.models.ManyToManyField`, but since it complements "
"the :data:`pre_save`/:data:`post_save` and :data:`pre_delete`/:data:"
"`post_delete` when it comes to tracking changes to models, it is included "
"here."
msgstr ""

msgid ""
"The intermediate model class describing the :class:`~django.db.models."
"ManyToManyField`. This class is automatically created when a many-to-many "
"field is defined; you can access it using the ``through`` attribute on the "
"many-to-many field."
msgstr ""

msgid ""
"The instance whose many-to-many relation is updated. This can be an instance "
"of the ``sender``, or of the class the :class:`~django.db.models."
"ManyToManyField` is related to."
msgstr ""

msgid "``action``"
msgstr "``action``"

msgid ""
"A string indicating the type of update that is done on the relation. This "
"can be one of the following:"
msgstr ""

msgid "``\"pre_add\"``"
msgstr "``\"pre_add\"``"

msgid "Sent *before* one or more objects are added to the relation."
msgstr ""

msgid "``\"post_add\"``"
msgstr "``\"post_add\"``"

msgid "Sent *after* one or more objects are added to the relation."
msgstr ""

msgid "``\"pre_remove\"``"
msgstr "``\"pre_remove\"``"

msgid "Sent *before* one or more objects are removed from the relation."
msgstr ""

msgid "``\"post_remove\"``"
msgstr "``\"post_remove\"``"

msgid "Sent *after* one or more objects are removed from the relation."
msgstr ""

msgid "``\"pre_clear\"``"
msgstr "``\"pre_clear\"``"

msgid "Sent *before* the relation is cleared."
msgstr ""

msgid "``\"post_clear\"``"
msgstr "``\"post_clear\"``"

msgid "Sent *after* the relation is cleared."
msgstr ""

msgid ""
"Indicates which side of the relation is updated (i.e., if it is the forward "
"or reverse relation that is being modified)."
msgstr ""

msgid ""
"The class of the objects that are added to, removed from or cleared from the "
"relation."
msgstr ""

msgid "``pk_set``"
msgstr "``pk_set``"

msgid ""
"For the ``pre_add``, ``post_add``, ``pre_remove`` and ``post_remove`` "
"actions, this is a set of primary key values that have been added to or "
"removed from the relation."
msgstr ""

msgid "For the ``pre_clear`` and ``post_clear`` actions, this is ``None``."
msgstr ""

msgid ""
"For example, if a ``Pizza`` can have multiple ``Topping`` objects, modeled "
"like this::"
msgstr ""
"Sebagai contoh, jika sebuah ``Pizza`` dapat memiliki banyak obyek "
"``Topping``, dimodelkan seperti ini::"

msgid "If we connected a handler like this::"
msgstr ""

msgid "and then did something like this::"
msgstr ""

msgid ""
"the arguments sent to a :data:`m2m_changed` handler (``toppings_changed`` in "
"the example above) would be:"
msgstr ""
"argumen-argumen dikirim ke penangan :data:`m2m_changed` "
"(``toppings_changed`` dalam contoh diatas) akan menjadi:"

msgid "``Pizza.toppings.through`` (the intermediate m2m class)"
msgstr "``Pizza.toppings.through`` (kelas m2m menengah)"

msgid "``p`` (the ``Pizza`` instance being modified)"
msgstr ""

msgid "``\"pre_add\"`` (followed by a separate signal with ``\"post_add\"``)"
msgstr ""

msgid ""
"``False`` (``Pizza`` contains the :class:`~django.db.models."
"ManyToManyField`, so this call modifies the forward relation)"
msgstr ""

msgid "``Topping`` (the class of the objects added to the ``Pizza``)"
msgstr "``Topping`` (kelas dari obyek ditambahkan pada ``Pizza``)"

msgid "``{t.id}`` (since only ``Topping t`` was added to the relation)"
msgstr "``{t.id}`` (sejak hanya ``Topping t`` yang ditambahkan ke hubungan)"

msgid "``\"default\"`` (since the default router sends writes here)"
msgstr ""

msgid "And if we would then do something like this::"
msgstr ""

msgid "the arguments sent to a :data:`m2m_changed` handler would be:"
msgstr ""

msgid "``t`` (the ``Topping`` instance being modified)"
msgstr "``t`` (instance ``Topping`` sedang dirubah)"

msgid ""
"``\"pre_remove\"`` (followed by a separate signal with ``\"post_remove\"``)"
msgstr ""

msgid ""
"``True`` (``Pizza`` contains the :class:`~django.db.models.ManyToManyField`, "
"so this call modifies the reverse relation)"
msgstr ""

msgid "``Pizza`` (the class of the objects removed from the ``Topping``)"
msgstr "``Pizza`` (kelas dari obyek dipindahkan dari ``Topping``)"

msgid "``{p.id}`` (since only ``Pizza p`` was removed from the relation)"
msgstr ""

msgid "``class_prepared``"
msgstr ""

msgid ""
"Sent whenever a model class has been \"prepared\" -- that is, once model has "
"been defined and registered with Django's model system. Django uses this "
"signal internally; it's not generally used in third-party applications."
msgstr ""

msgid ""
"Since this signal is sent during the app registry population process, and :"
"meth:`AppConfig.ready() <django.apps.AppConfig.ready>` runs after the app "
"registry is fully populated, receivers cannot be connected in that method. "
"One possibility is to connect them ``AppConfig.__init__()`` instead, taking "
"care not to import models or trigger calls to the app registry."
msgstr ""
"Sejak sinyal ini dikirim selama pengolahan pengumpulan registrar aplikasi, "
"dan :meth:`AppConfig.ready() <django.apps.AppConfig.ready>` berjalan setelah "
"registrar sepenuhnya dikumpulkan, penerima tidak dapat dihubungkan di metode "
"itu. Satu kemungkinan adalah menghubungkan mereka ``AppConfig.__init__()`` "
"sebagai gantinya, merawat tidak untuk mengimpor model atau panggilan pemicu "
"pada registrar aplikasi."

msgid "Arguments that are sent with this signal:"
msgstr ""

msgid "The model class which was just prepared."
msgstr "Kelas model yang telah dipersiapkan."

msgid "Management signals"
msgstr "Pengelolaan sinyal"

msgid "Signals sent by :doc:`django-admin </ref/django-admin>`."
msgstr ""

msgid "``pre_migrate``"
msgstr ""

msgid ""
"Sent by the :djadmin:`migrate` command before it starts to install an "
"application. It's not emitted for applications that lack a ``models`` module."
msgstr ""

msgid ""
"An :class:`~django.apps.AppConfig` instance for the application about to be "
"migrated/synced."
msgstr ""

msgid "``app_config``"
msgstr "``app_config``"

msgid "Same as ``sender``."
msgstr ""

msgid "``verbosity``"
msgstr ""

msgid ""
"Indicates how much information manage.py is printing on screen. See the :"
"option:`--verbosity` flag for details."
msgstr ""

msgid ""
"Functions which listen for :data:`pre_migrate` should adjust what they "
"output to the screen based on the value of this argument."
msgstr ""

msgid "``interactive``"
msgstr "``interactive``"

msgid ""
"If ``interactive`` is ``True``, it's safe to prompt the user to input things "
"on the command line. If ``interactive`` is ``False``, functions which listen "
"for this signal should not try to prompt for anything."
msgstr ""

msgid ""
"For example, the :mod:`django.contrib.auth` app only prompts to create a "
"superuser when ``interactive`` is ``True``."
msgstr ""

msgid "The alias of database on which a command will operate."
msgstr ""

msgid "``plan``"
msgstr ""

msgid ""
"The migration plan that is going to be used for the migration run. While the "
"plan is not public API, this allows for the rare cases when it is necessary "
"to know the plan. A plan is a list of two-tuples with the first item being "
"the instance of a migration class and the second item showing if the "
"migration was rolled back (``True``) or applied (``False``)."
msgstr ""

msgid "``apps``"
msgstr ""

msgid ""
"An instance of :data:`Apps <django.apps>` containing the state of the "
"project before the migration run. It should be used instead of the global :"
"attr:`apps <django.apps.apps>` registry to retrieve the models you want to "
"perform operations on."
msgstr ""
"Sebuah instance dari :data:`Apps <django.apps>` mengandung keadaan dari "
"proyek sebelum perpindahan berjalan. Itu harus digunakan sebagai gantinya "
"dari registrar :attr:`apps <django.apps.apps>` global untuk mengambil model "
"yang anda ingin lakukan tindakan."

msgid "``post_migrate``"
msgstr ""

msgid ""
"Sent at the end of the :djadmin:`migrate` (even if no migrations are run) "
"and :djadmin:`flush` commands. It's not emitted for applications that lack a "
"``models`` module."
msgstr ""

msgid ""
"Handlers of this signal must not perform database schema alterations as "
"doing so may cause the :djadmin:`flush` command to fail if it runs during "
"the :djadmin:`migrate` command."
msgstr ""

msgid ""
"An :class:`~django.apps.AppConfig` instance for the application that was "
"just installed."
msgstr ""

msgid ""
"Functions which listen for :data:`post_migrate` should adjust what they "
"output to the screen based on the value of this argument."
msgstr ""

msgid ""
"The database alias used for synchronization. Defaults to the ``default`` "
"database."
msgstr ""

msgid ""
"The migration plan that was used for the migration run. While the plan is "
"not public API, this allows for the rare cases when it is necessary to know "
"the plan. A plan is a list of two-tuples with the first item being the "
"instance of a migration class and the second item showing if the migration "
"was rolled back (``True``) or applied (``False``)."
msgstr ""

msgid ""
"An instance of :data:`Apps <django.apps.apps>` containing the state of the "
"project after the migration run. It should be used instead of the global :"
"attr:`apps <django.apps.apps>` registry to retrieve the models you want to "
"perform operations on."
msgstr ""
"Sebuah instance dari :data:`Apps <django.apps>` mengandung keadaan dari "
"proyek setelah perpindahan berjalan. Itu harus digunakan sebagai gantinya "
"dari registrar :attr:`apps <django.apps.apps>` global untuk mengambil model "
"yang anda ingin lakukan tindakan."

msgid ""
"For example, you could register a callback in an :class:`~django.apps."
"AppConfig` like this::"
msgstr ""

msgid ""
"If you provide an :class:`~django.apps.AppConfig` instance as the sender "
"argument, please ensure that the signal is registered in :meth:`~django.apps."
"AppConfig.ready`. ``AppConfig``\\s are recreated for tests that run with a "
"modified set of :setting:`INSTALLED_APPS` (such as when settings are "
"overridden) and such signals should be connected for each new ``AppConfig`` "
"instance."
msgstr ""

msgid "Request/response signals"
msgstr "Sinyal permintaan/tanggapan"

msgid "Signals sent by the core framework when processing a request."
msgstr ""

msgid "``request_started``"
msgstr ""

msgid "Sent when Django begins processing an HTTP request."
msgstr ""

msgid ""
"The handler class -- e.g. ``django.core.handlers.wsgi.WsgiHandler`` -- that "
"handled the request."
msgstr ""

msgid "``environ``"
msgstr ""

msgid "The ``environ`` dictionary provided to the request."
msgstr ""

msgid "``request_finished``"
msgstr ""

msgid "Sent when Django finishes delivering an HTTP response to the client."
msgstr ""

msgid "The handler class, as above."
msgstr ""

msgid "``got_request_exception``"
msgstr ""

msgid ""
"This signal is sent whenever Django encounters an exception while processing "
"an incoming HTTP request."
msgstr ""

msgid "The :class:`~django.http.HttpRequest` object."
msgstr "Obyek :class:`~django.http.HttpRequest`"

msgid "Test signals"
msgstr ""

msgid "Signals only sent when :ref:`running tests <running-tests>`."
msgstr ""

msgid "``setting_changed``"
msgstr ""

msgid ""
"This signal is sent when the value of a setting is changed through the "
"``django.test.TestCase.settings()`` context manager or the :func:`django."
"test.override_settings` decorator/context manager."
msgstr ""

msgid ""
"It's actually sent twice: when the new value is applied (\"setup\") and when "
"the original value is restored (\"teardown\"). Use the ``enter`` argument to "
"distinguish between the two."
msgstr ""

msgid ""
"You can also import this signal from ``django.core.signals`` to avoid "
"importing from ``django.test`` in non-test situations."
msgstr ""

msgid "The settings handler."
msgstr ""

msgid "``setting``"
msgstr ""

msgid "The name of the setting."
msgstr ""

msgid ""
"The value of the setting after the change. For settings that initially don't "
"exist, in the \"teardown\" phase, ``value`` is ``None``."
msgstr ""

msgid "``enter``"
msgstr "``enter``"

msgid "A boolean; ``True`` if the setting is applied, ``False`` if restored."
msgstr ""

msgid "``template_rendered``"
msgstr "``template_rendered``"

msgid ""
"Sent when the test system renders a template. This signal is not emitted "
"during normal operation of a Django server -- it is only available during "
"testing."
msgstr ""

msgid "The :class:`~django.template.Template` object which was rendered."
msgstr ""

msgid "``template``"
msgstr "``template``"

msgid "Same as sender"
msgstr ""

msgid "``context``"
msgstr "``context``"

msgid ""
"The :class:`~django.template.Context` with which the template was rendered."
msgstr ""

msgid "Database Wrappers"
msgstr ""

msgid ""
"Signals sent by the database wrapper when a database connection is initiated."
msgstr ""

msgid "``connection_created``"
msgstr "``connection_created``"

msgid ""
"Sent when the database wrapper makes the initial connection to the "
"database.  This is particularly useful if you'd like to send any post "
"connection commands to the SQL backend."
msgstr ""

msgid ""
"The database wrapper class -- i.e. ``django.db.backends.postgresql."
"DatabaseWrapper`` or ``django.db.backends.mysql.DatabaseWrapper``, etc."
msgstr ""

msgid ""
"The database connection that was opened. This can be used in a multiple-"
"database configuration to differentiate connection signals from different "
"databases."
msgstr ""

msgid "``TemplateResponse`` and ``SimpleTemplateResponse``"
msgstr ""

msgid ""
"Standard :class:`~django.http.HttpResponse` objects are static structures. "
"They are provided with a block of pre-rendered content at time of "
"construction, and while that content can be modified, it isn't in a form "
"that makes it easy to perform modifications."
msgstr ""

msgid ""
"However, it can sometimes be beneficial to allow decorators or middleware to "
"modify a response *after* it has been constructed by the view. For example, "
"you may want to change the template that is used, or put additional data "
"into the context."
msgstr ""

msgid ""
"TemplateResponse provides a way to do just that. Unlike basic :class:"
"`~django.http.HttpResponse` objects, TemplateResponse objects retain the "
"details of the template and context that was provided by the view to compute "
"the response. The final output of the response is not computed until it is "
"needed, later in the response process."
msgstr ""

msgid "``SimpleTemplateResponse`` objects"
msgstr "Obyek ``SimpleTemplateResponse``"

msgid ""
"The name of the template to be rendered. Accepts a backend-dependent "
"template object (such as those returned by :func:`~django.template.loader."
"get_template()`), the name of a template, or a list of template names."
msgstr ""

msgid "Example: ``['foo.html', 'path/to/bar.html']``"
msgstr "Contoh: ``['foo.html', 'path/to/bar.html']``"

msgid ""
"The context data to be used when rendering the template. It must be a :class:"
"`dict`."
msgstr ""

msgid "Example: ``{'foo': 123}``"
msgstr "Contoh: ``{'foo': 123}``"

msgid ""
"The current rendered value of the response content, using the current "
"template and context data."
msgstr ""

msgid "A boolean indicating whether the response content has been rendered."
msgstr ""

msgid ""
"Instantiates a :class:`~django.template.response.SimpleTemplateResponse` "
"object with the given template, context, content type, HTTP status, and "
"charset."
msgstr ""

msgid ""
"A backend-dependent template object (such as those returned by :func:"
"`~django.template.loader.get_template()`), the name of a template, or a list "
"of template names."
msgstr ""

msgid ""
"A :class:`dict` of values to add to the template context. By default, this "
"is an empty dictionary."
msgstr ""

msgid "``content_type``"
msgstr "``content_type``"

msgid ""
"The value included in the HTTP ``Content-Type`` header, including the MIME "
"type specification and the character set encoding. If ``content_type`` is "
"specified, then its value is used. Otherwise, :setting:"
"`DEFAULT_CONTENT_TYPE` is used."
msgstr ""

msgid "``status``"
msgstr "``status``"

msgid "The HTTP status code for the response."
msgstr ""

msgid "``charset``"
msgstr "``charset``"

msgid ""
"The charset in which the response will be encoded. If not given it will be "
"extracted from ``content_type``, and if that is unsuccessful, the :setting:"
"`DEFAULT_CHARSET` setting will be used."
msgstr ""

msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template."
msgstr ""

msgid ""
"Preprocesses context data that will be used for rendering a template. "
"Accepts a :class:`dict` of context data. By default, returns the same :class:"
"`dict`."
msgstr ""

msgid "Override this method in order to customize the context."
msgstr ""

msgid ""
"Resolves the template instance to use for rendering. Accepts a backend-"
"dependent template object (such as those returned by :func:`~django.template."
"loader.get_template()`), the name of a template, or a list of template names."
msgstr ""

msgid "Returns the backend-dependent template object instance to be rendered."
msgstr ""

msgid "Override this method in order to customize template loading."
msgstr ""

msgid ""
"Add a callback that will be invoked after rendering has taken place. This "
"hook can be used to defer certain processing operations (such as caching) "
"until after rendering has occurred."
msgstr ""

msgid ""
"If the :class:`~django.template.response.SimpleTemplateResponse` has already "
"been rendered, the callback will be invoked immediately."
msgstr ""

msgid ""
"When called, callbacks will be passed a single argument -- the rendered :"
"class:`~django.template.response.SimpleTemplateResponse` instance."
msgstr ""

msgid ""
"If the callback returns a value that is not ``None``, this will be used as "
"the response instead of the original response object (and will be passed to "
"the next post rendering callback etc.)"
msgstr ""

msgid ""
"Sets ``response.content`` to the result obtained by :attr:"
"`SimpleTemplateResponse.rendered_content`, runs all post-rendering "
"callbacks, and returns the resulting response object."
msgstr ""

msgid ""
"``render()`` will only have an effect the first time it is called. On "
"subsequent calls, it will return the result obtained from the first call."
msgstr ""

msgid "``TemplateResponse`` objects"
msgstr "Obyek ``TemplateResponse``"

msgid ""
"``TemplateResponse`` is a subclass of :class:`~django.template.response."
"SimpleTemplateResponse` that knows about the current :class:`~django.http."
"HttpRequest`."
msgstr ""

msgid ""
"Instantiates a :class:`~django.template.response.TemplateResponse` object "
"with the given request, template, context, content type, HTTP status, and "
"charset."
msgstr ""

msgid "An :class:`~django.http.HttpRequest` instance."
msgstr ""

msgid "The rendering process"
msgstr "Pengolahan membangun"

msgid ""
"Before a :class:`~django.template.response.TemplateResponse` instance can be "
"returned to the client, it must be rendered. The rendering process takes the "
"intermediate representation of template and context, and turns it into the "
"final byte stream that can be served to the client."
msgstr ""

msgid ""
"There are three circumstances under which a ``TemplateResponse`` will be "
"rendered:"
msgstr ""

msgid ""
"When the ``TemplateResponse`` instance is explicitly rendered, using the :"
"meth:`SimpleTemplateResponse.render()` method."
msgstr ""

msgid ""
"When the content of the response is explicitly set by assigning ``response."
"content``."
msgstr ""

msgid ""
"After passing through template response middleware, but before passing "
"through response middleware."
msgstr ""

msgid ""
"A ``TemplateResponse`` can only be rendered once. The first call to :meth:"
"`SimpleTemplateResponse.render` sets the content of the response; subsequent "
"rendering calls do not change the response content."
msgstr ""

msgid ""
"However, when ``response.content`` is explicitly assigned, the change is "
"always applied. If you want to force the content to be re-rendered, you can "
"re-evaluate the rendered content, and assign the content of the response "
"manually::"
msgstr ""

msgid "Post-render callbacks"
msgstr ""

msgid ""
"Some operations -- such as caching -- cannot be performed on an unrendered "
"template. They must be performed on a fully complete and rendered response."
msgstr ""

msgid ""
"If you're using middleware, the solution is easy. Middleware provides "
"multiple opportunities to process a response on exit from a view. If you put "
"behavior in the response middleware, it's guaranteed to execute after "
"template rendering has taken place."
msgstr ""

msgid ""
"However, if you're using a decorator, the same opportunities do not exist. "
"Any behavior defined in a decorator is handled immediately."
msgstr ""

msgid ""
"To compensate for this (and any other analogous use cases), :class:"
"`TemplateResponse` allows you to register callbacks that will be invoked "
"when rendering has completed. Using this callback, you can defer critical "
"processing until a point where you can guarantee that rendered content will "
"be available."
msgstr ""

msgid ""
"To define a post-render callback, just define a function that takes a single "
"argument -- response -- and register that function with the template "
"response::"
msgstr ""

msgid ""
"``my_render_callback()`` will be invoked after the ``mytemplate.html`` has "
"been rendered, and will be provided the fully rendered :class:"
"`TemplateResponse` instance as an argument."
msgstr ""

msgid ""
"If the template has already been rendered, the callback will be invoked "
"immediately."
msgstr ""

msgid "Using ``TemplateResponse`` and ``SimpleTemplateResponse``"
msgstr "Menggunakan ``TemplateResponse`` dan ``SimpleTemplateResponse``"

msgid ""
"A :class:`TemplateResponse` object can be used anywhere that a normal :class:"
"`django.http.HttpResponse` can be used. It can also be used as an "
"alternative to calling :func:`~django.shortcuts.render()`."
msgstr ""

msgid ""
"For example, the following simple view returns a :class:`TemplateResponse` "
"with a simple template and a context containing a queryset::"
msgstr ""

msgid "The Django template language: for Python programmers"
msgstr "Bahasa cetakan Django: untuk pemrogram Python"

msgid ""
"This document explains the Django template system from a technical "
"perspective -- how it works and how to extend it. If you're just looking for "
"reference on the language syntax, see :doc:`/ref/templates/language`."
msgstr ""

msgid ""
"It assumes an understanding of templates, contexts, variables, tags, and "
"rendering. Start with the :ref:`introduction to the Django template language "
"<template-language-intro>` if you aren't familiar with these concepts."
msgstr ""

msgid "Using the template system in Python is a three-step process:"
msgstr ""

msgid "You configure an :class:`Engine`."
msgstr ""

msgid "You compile template code into a :class:`Template`."
msgstr ""

msgid "You render the template with a :class:`Context`."
msgstr ""

msgid ""
"Django projects generally rely on the :ref:`high level, backend agnostic "
"APIs <template-engines>` for each of these steps instead of the template "
"system's lower level APIs:"
msgstr ""

msgid ""
"For each :class:`~django.template.backends.django.DjangoTemplates` backend "
"in the :setting:`TEMPLATES` setting, Django instantiates an :class:"
"`Engine`. :class:`~django.template.backends.django.DjangoTemplates` wraps :"
"class:`Engine` and adapts it to the common template backend API."
msgstr ""

msgid ""
"The :mod:`django.template.loader` module provides functions such as :func:"
"`~django.template.loader.get_template` for loading templates. They return a "
"``django.template.backends.django.Template`` which wraps the actual :class:"
"`django.template.Template`."
msgstr ""

msgid ""
"The ``Template`` obtained in the previous step has a :meth:`~django.template."
"backends.base.Template.render` method which marshals a context and possibly "
"a request into a :class:`Context` and delegates the rendering to the "
"underlying :class:`Template`."
msgstr ""

msgid "Configuring an engine"
msgstr ""

msgid ""
"If you are simply using the :class:`~django.template.backends.django."
"DjangoTemplates` backend, this probably isn't the documentation you're "
"looking for. An instance of the ``Engine`` class described below is "
"accessible using the ``engine`` attribute of that backend and any attribute "
"defaults mentioned below are overridden by what's passed by :class:`~django."
"template.backends.django.DjangoTemplates`."
msgstr ""

msgid ""
"When instantiating an ``Engine`` all arguments must be passed as keyword "
"arguments:"
msgstr ""

msgid ""
"``dirs`` is a list of directories where the engine should look for template "
"source files. It is used to configure :class:`filesystem.Loader <django."
"template.loaders.filesystem.Loader>`."
msgstr ""

msgid "It defaults to an empty list."
msgstr ""

msgid "``app_dirs`` only affects the default value of ``loaders``. See below."
msgstr ""

msgid "It defaults to ``False``."
msgstr ""

msgid "``autoescape`` controls whether HTML autoescaping is enabled."
msgstr ""

msgid "It defaults to ``True``."
msgstr ""

msgid "Only set it to ``False`` if you're rendering non-HTML templates!"
msgstr ""

msgid "The ``autoescape`` option was added."
msgstr ""

msgid ""
"``context_processors`` is a list of dotted Python paths to callables that "
"are used to populate the context when a template is rendered with a request. "
"These callables take a request object as their argument and return a :class:"
"`dict` of items to be merged into the context."
msgstr ""

msgid "See :class:`~django.template.RequestContext` for more information."
msgstr "Lihat :class:`~django.template.RequestContext` untuk informasi lebih."

msgid ""
"``debug`` is a boolean that turns on/off template debug mode. If it is "
"``True``, the template engine will store additional debug information which "
"can be used to display a detailed report for any exception raised during "
"template rendering."
msgstr ""

msgid ""
"``loaders`` is a list of template loader classes, specified as strings. Each "
"``Loader`` class knows how to import templates from a particular source. "
"Optionally, a tuple can be used instead of a string. The first item in the "
"tuple should be the ``Loader`` class name, subsequent items are passed to "
"the ``Loader`` during initialization."
msgstr ""

msgid "It defaults to a list containing:"
msgstr ""

msgid "``'django.template.loaders.filesystem.Loader'``"
msgstr "``'django.template.loaders.filesystem.Loader'``"

msgid ""
"``'django.template.loaders.app_directories.Loader'`` if and only if "
"``app_dirs`` is ``True``."
msgstr ""

msgid ""
"If ``debug`` is ``False``, these loaders are wrapped in :class:`django."
"template.loaders.cached.Loader`."
msgstr ""

msgid "See :ref:`template-loaders` for details."
msgstr "Lihat :ref:`template-loaders`  untuk lebih rinci."

msgid ""
"Enabling of the cached template loader when ``debug`` is ``False`` was added."
msgstr ""

msgid ""
"``string_if_invalid`` is the output, as a string, that the template system "
"should use for invalid (e.g. misspelled) variables."
msgstr ""

msgid "It defaults to the empty string."
msgstr ""

msgid "See :ref:`invalid-template-variables` for details."
msgstr "Lihat :ref:`invalid-template-variables` untuk rincian."

msgid "``file_charset`` is the charset used to read template files on disk."
msgstr ""

msgid "It defaults to ``'utf-8'``."
msgstr ""

msgid ""
"``'libraries'``: A dictionary of labels and dotted Python paths of template "
"tag modules to register with the template engine. This is used to add new "
"libraries or provide alternate labels for existing ones. For example::"
msgstr ""

msgid ""
"Libraries can be loaded by passing the corresponding dictionary key to the :"
"ttag:`{% load %}<load>` tag."
msgstr ""

msgid ""
"``'builtins'``: A list of dotted Python paths of template tag modules to add "
"to :doc:`built-ins </ref/templates/builtins>`. For example::"
msgstr ""

msgid ""
"Tags and filters from built-in libraries can be used without first calling "
"the :ttag:`{% load %}<load>` tag."
msgstr ""

msgid ""
"When a Django project configures one and only one :class:`~django.template."
"backends.django.DjangoTemplates` engine, this method returns the underlying :"
"class:`Engine`. In other circumstances it will raise :exc:`~django.core."
"exceptions.ImproperlyConfigured`."
msgstr ""

msgid ""
"It's required for preserving APIs that rely on a globally available, "
"implicitly configured engine. Any other use is strongly discouraged."
msgstr ""

msgid ""
"Compiles the given template code and returns a :class:`Template` object."
msgstr ""

msgid ""
"Loads a template with the given name, compiles it and returns a :class:"
"`Template` object."
msgstr ""

msgid ""
"Like :meth:`~Engine.get_template`, except it takes a list of names and "
"returns the first template that was found."
msgstr ""

msgid "Loading a template"
msgstr "Memuat sebuah cetakan"

msgid ""
"The recommended way to create a :class:`Template` is by calling the factory "
"methods of the :class:`Engine`: :meth:`~Engine.get_template`, :meth:`~Engine."
"select_template` and :meth:`~Engine.from_string`."
msgstr ""

msgid ""
"In a Django project where the :setting:`TEMPLATES` setting defines exactly "
"one :class:`~django.template.backends.django.DjangoTemplates` engine, it's "
"possible to instantiate a :class:`Template` directly."
msgstr ""

msgid ""
"This class lives at ``django.template.Template``. The constructor takes one "
"argument — the raw template code::"
msgstr ""

msgid "Behind the scenes"
msgstr "Dibalik layar"

msgid ""
"The system only parses your raw template code once -- when you create the "
"``Template`` object. From then on, it's stored internally as a tree "
"structure for performance."
msgstr ""

msgid ""
"Even the parsing itself is quite fast. Most of the parsing happens via a "
"single call to a single, short, regular expression."
msgstr ""

msgid "Rendering a context"
msgstr ""

msgid ""
"Once you have a compiled :class:`Template` object, you can render a context "
"with it. You can reuse the same template to render it several times with "
"different contexts."
msgstr ""

msgid ""
"The constructor of ``django.template.Context`` takes an optional argument — "
"a dictionary mapping variable names to variable values."
msgstr ""

msgid "For details, see :ref:`playing-with-context` below."
msgstr ""

msgid ""
"Call the :class:`Template` object's ``render()`` method with a :class:"
"`Context` to \"fill\" the template::"
msgstr ""

msgid "Variables and lookups"
msgstr ""

msgid ""
"Variable names must consist of any letter (A-Z), any digit (0-9), an "
"underscore (but they must not start with an underscore) or a dot."
msgstr ""

msgid ""
"Dots have a special meaning in template rendering. A dot in a variable name "
"signifies a **lookup**. Specifically, when the template system encounters a "
"dot in a variable name, it tries the following lookups, in this order:"
msgstr ""

msgid "Dictionary lookup. Example: ``foo[\"bar\"]``"
msgstr ""

msgid "Attribute lookup. Example: ``foo.bar``"
msgstr ""

msgid "List-index lookup. Example: ``foo[bar]``"
msgstr ""

msgid ""
"Note that \"bar\" in a template expression like ``{{ foo.bar }}`` will be "
"interpreted as a literal string and not using the value of the variable \"bar"
"\", if one exists in the template context."
msgstr ""

msgid ""
"The template system uses the first lookup type that works. It's short-"
"circuit logic. Here are a few examples::"
msgstr ""

msgid ""
"If any part of the variable is callable, the template system will try "
"calling it. Example::"
msgstr ""

msgid ""
"Callable variables are slightly more complex than variables which only "
"require straight lookups. Here are some things to keep in mind:"
msgstr ""

msgid ""
"If the variable raises an exception when called, the exception will be "
"propagated, unless the exception has an attribute "
"``silent_variable_failure`` whose value is ``True``. If the exception *does* "
"have a ``silent_variable_failure`` attribute whose value is ``True``, the "
"variable will render as the value of the engine's ``string_if_invalid`` "
"configuration option (an empty string, by default). Example::"
msgstr ""

msgid ""
"Note that :exc:`django.core.exceptions.ObjectDoesNotExist`, which is the "
"base class for all Django database API ``DoesNotExist`` exceptions, has "
"``silent_variable_failure = True``. So if you're using Django templates with "
"Django model objects, any ``DoesNotExist`` exception will fail silently."
msgstr ""

msgid ""
"A variable can only be called if it has no required arguments. Otherwise, "
"the system will return the value of the engine's ``string_if_invalid`` "
"option."
msgstr ""

msgid ""
"Obviously, there can be side effects when calling some variables, and it'd "
"be either foolish or a security hole to allow the template system to access "
"them."
msgstr ""

msgid ""
"A good example is the :meth:`~django.db.models.Model.delete` method on each "
"Django model object. The template system shouldn't be allowed to do "
"something like this::"
msgstr ""

msgid ""
"To prevent this, set an ``alters_data`` attribute on the callable variable. "
"The template system won't call a variable if it has ``alters_data=True`` "
"set, and will instead replace the variable with ``string_if_invalid``, "
"unconditionally.  The dynamically-generated :meth:`~django.db.models.Model."
"delete` and :meth:`~django.db.models.Model.save` methods on Django model "
"objects get ``alters_data=True`` automatically. Example::"
msgstr ""

msgid ""
"Occasionally you may want to turn off this feature for other reasons, and "
"tell the template system to leave a variable uncalled no matter what.  To do "
"so, set a ``do_not_call_in_templates`` attribute on the callable with the "
"value ``True``.  The template system then will act as if your variable is "
"not callable (allowing you to access attributes of the callable, for "
"example)."
msgstr ""

msgid "How invalid variables are handled"
msgstr ""

msgid ""
"Generally, if a variable doesn't exist, the template system inserts the "
"value of the engine's ``string_if_invalid`` configuration option, which is "
"set to ``''`` (the empty string) by default."
msgstr ""

msgid ""
"Filters that are applied to an invalid variable will only be applied if "
"``string_if_invalid`` is set to ``''`` (the empty string). If "
"``string_if_invalid`` is set to any other value, variable filters will be "
"ignored."
msgstr ""

msgid ""
"This behavior is slightly different for the ``if``, ``for`` and ``regroup`` "
"template tags. If an invalid variable is provided to one of these template "
"tags, the variable will be interpreted as ``None``. Filters are always "
"applied to invalid variables within these template tags."
msgstr ""

msgid ""
"If ``string_if_invalid`` contains a ``'%s'``, the format marker will be "
"replaced with the name of the invalid variable."
msgstr ""

msgid "For debug purposes only!"
msgstr ""

msgid ""
"While ``string_if_invalid`` can be a useful debugging tool, it is a bad idea "
"to turn it on as a 'development default'."
msgstr ""

msgid ""
"Many templates, including those in the Admin site, rely upon the silence of "
"the template system when a non-existent variable is encountered. If you "
"assign a value other than ``''`` to ``string_if_invalid``, you will "
"experience rendering problems with these templates and sites."
msgstr ""

msgid ""
"Generally, ``string_if_invalid`` should only be enabled in order to debug a "
"specific template problem, then cleared once debugging is complete."
msgstr ""

msgid "Built-in variables"
msgstr ""

msgid ""
"Every context contains ``True``, ``False`` and ``None``. As you would "
"expect, these variables resolve to the corresponding Python objects."
msgstr ""

msgid "Limitations with string literals"
msgstr ""

msgid ""
"Django's template language has no way to escape the characters used for its "
"own syntax. For example, the :ttag:`templatetag` tag is required if you need "
"to output character sequences like ``{%`` and ``%}``."
msgstr ""

msgid ""
"A similar issue exists if you want to include these sequences in template "
"filter or tag arguments. For example, when parsing a block tag, Django's "
"template parser looks for the first occurrence of ``%}`` after a ``{%``. "
"This prevents the use of ``\"%}\"`` as a string literal. For example, a "
"``TemplateSyntaxError`` will be raised for the following expressions::"
msgstr ""

msgid ""
"The same issue can be triggered by using a reserved sequence in filter "
"arguments::"
msgstr ""

msgid ""
"If you need to use strings with these sequences, store them in template "
"variables or use a custom template tag or filter to workaround the "
"limitation."
msgstr ""

msgid "Playing with ``Context`` objects"
msgstr ""

msgid ""
"Most of the time, you'll instantiate :class:`Context` objects by passing in "
"a fully-populated dictionary to ``Context()``. But you can add and delete "
"items from a ``Context`` object once it's been instantiated, too, using "
"standard dictionary syntax::"
msgstr ""

msgid ""
"Returns the value for ``key`` if ``key`` is in the context, else returns "
"``otherwise``."
msgstr ""

msgid ""
"If ``key`` is in the context, returns its value. Otherwise inserts ``key`` "
"with a value of ``default`` and returns ``default``."
msgstr ""

msgid ""
"A ``Context`` object is a stack. That is, you can ``push()`` and ``pop()`` "
"it. If you ``pop()`` too much, it'll raise ``django.template."
"ContextPopException``::"
msgstr ""

msgid ""
"You can also use ``push()`` as a context manager to ensure a matching "
"``pop()`` is called."
msgstr ""

msgid ""
"All arguments passed to ``push()`` will be passed to the ``dict`` "
"constructor used to build the new context level."
msgstr ""

msgid ""
"In addition to ``push()`` and ``pop()``, the ``Context`` object also defines "
"an ``update()`` method. This works like ``push()`` but takes a dictionary as "
"an argument and pushes that dictionary onto the stack instead of an empty "
"one."
msgstr ""

msgid ""
"Like ``push()``, you can use ``update()`` as a context manager to ensure a "
"matching ``pop()`` is called."
msgstr ""

msgid ""
"Using a ``Context`` as a stack comes in handy in :ref:`some custom template "
"tags <howto-writing-custom-template-tags>`."
msgstr ""

msgid ""
"Using ``flatten()`` method you can get whole ``Context`` stack as one "
"dictionary including builtin variables."
msgstr ""

msgid ""
"A ``flatten()`` method is also internally used to make ``Context`` objects "
"comparable."
msgstr ""

msgid ""
"Result from ``flatten()`` can be useful in unit tests to compare ``Context`` "
"against ``dict``::"
msgstr ""

msgid "Using ``RequestContext``"
msgstr ""

msgid ""
"Django comes with a special ``Context`` class, ``django.template."
"RequestContext``, that acts slightly differently from the normal ``django."
"template.Context``. The first difference is that it takes an :class:`~django."
"http.HttpRequest` as its first argument. For example::"
msgstr ""

msgid ""
"The second difference is that it automatically populates the context with a "
"few variables, according to the engine's ``context_processors`` "
"configuration option."
msgstr ""

msgid ""
"The ``context_processors`` option is a list of callables -- called **context "
"processors** -- that take a request object as their argument and return a "
"dictionary of items to be merged into the context. In the default generated "
"settings file, the default template engine contains the following context "
"processors::"
msgstr ""

msgid ""
"In addition to these, :class:`RequestContext` always enables ``'django."
"template.context_processors.csrf'``.  This is a security related context "
"processor required by the admin and other contrib apps, and, in case of "
"accidental misconfiguration, it is deliberately hardcoded in and cannot be "
"turned off in the ``context_processors`` option."
msgstr ""

msgid ""
"Each processor is applied in order. That means, if one processor adds a "
"variable to the context and a second processor adds a variable with the same "
"name, the second will override the first. The default processors are "
"explained below."
msgstr ""

msgid "When context processors are applied"
msgstr ""

msgid ""
"Context processors are applied on top of context data. This means that a "
"context processor may overwrite variables you've supplied to your :class:"
"`Context` or :class:`RequestContext`, so take care to avoid variable names "
"that overlap with those supplied by your context processors."
msgstr ""

msgid ""
"If you want context data to take priority over context processors, use the "
"following pattern::"
msgstr ""

msgid ""
"Django does this to allow context data to override context processors in "
"APIs such as :func:`~django.shortcuts.render` and :class:`~django.template."
"response.TemplateResponse`."
msgstr ""

msgid ""
"Also, you can give :class:`RequestContext` a list of additional processors, "
"using the optional, third positional argument, ``processors``. In this "
"example, the :class:`RequestContext` instance gets a ``ip_address`` "
"variable::"
msgstr ""

msgid "Built-in template context processors"
msgstr ""

msgid "Here's what each of the built-in processors does:"
msgstr ""

msgid "``django.contrib.auth.context_processors.auth``"
msgstr "``django.contrib.auth.context_processors.auth``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain these "
"variables:"
msgstr ""

msgid ""
"``user`` -- An ``auth.User`` instance representing the currently logged-in "
"user (or an ``AnonymousUser`` instance, if the client isn't logged in)."
msgstr ""

msgid ""
"``perms`` -- An instance of ``django.contrib.auth.context_processors."
"PermWrapper``, representing the permissions that the currently logged-in "
"user has."
msgstr ""

msgid "``django.template.context_processors.debug``"
msgstr "``django.template.context_processors.debug``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain these "
"two variables -- but only if your :setting:`DEBUG` setting is set to "
"``True`` and the request's IP address (``request.META['REMOTE_ADDR']``) is "
"in the :setting:`INTERNAL_IPS` setting:"
msgstr ""

msgid ""
"``debug`` -- ``True``. You can use this in templates to test whether you're "
"in :setting:`DEBUG` mode."
msgstr ""

msgid ""
"``sql_queries`` -- A list of ``{'sql': ..., 'time': ...}`` dictionaries, "
"representing every SQL query that has happened so far during the request and "
"how long it took. The list is in order by database alias and then by query. "
"It's lazily generated on access."
msgstr ""

msgid ""
"In older versions, only the queries for the default database alias were "
"included."
msgstr ""

msgid "``django.template.context_processors.i18n``"
msgstr "``django.template.context_processors.i18n``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain these "
"two variables:"
msgstr ""

msgid "``LANGUAGES`` -- The value of the :setting:`LANGUAGES` setting."
msgstr "``LANGUAGES`` -- Nilai dari pengaturan :setting:`LANGUAGES`."

msgid ""
"``LANGUAGE_CODE`` -- ``request.LANGUAGE_CODE``, if it exists. Otherwise, the "
"value of the :setting:`LANGUAGE_CODE` setting."
msgstr ""
"``LANGUAGE_CODE`` -- ``request.LANGUAGE_CODE``, jika dia ada. Sebaliknya, "
"nilai dari pengaturan :setting:`LANGUAGE_CODE`."

msgid "See :doc:`/topics/i18n/index` for more."
msgstr "Lihat :doc:`/topics/i18n/index` untuk lebih."

msgid "``django.template.context_processors.media``"
msgstr "``django.template.context_processors.media``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain a "
"variable ``MEDIA_URL``, providing the value of the :setting:`MEDIA_URL` "
"setting."
msgstr ""

msgid "``django.template.context_processors.static``"
msgstr "``django.template.context_processors.static``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain a "
"variable ``STATIC_URL``, providing the value of the :setting:`STATIC_URL` "
"setting."
msgstr ""

msgid "``django.template.context_processors.csrf``"
msgstr "``django.template.context_processors.csrf``"

msgid ""
"This processor adds a token that is needed by the :ttag:`csrf_token` "
"template tag for protection against :doc:`Cross Site Request Forgeries </ref/"
"csrf>`."
msgstr ""

msgid "``django.template.context_processors.request``"
msgstr "``django.template.context_processors.request``"

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain a "
"variable ``request``, which is the current :class:`~django.http.HttpRequest`."
msgstr ""

msgid "``django.template.context_processors.tz``"
msgstr ""

msgid ""
"If this processor is enabled, every ``RequestContext`` will contain a "
"variable ``TIME_ZONE``, providing the name of the currently active time zone."
msgstr ""

msgid "``django.contrib.messages.context_processors.messages``"
msgstr "``django.contrib.messages.context_processors.messages``"

msgid ""
"``messages`` -- A list of messages (as strings) that have been set via the :"
"doc:`messages framework </ref/contrib/messages>`."
msgstr ""

msgid ""
"``DEFAULT_MESSAGE_LEVELS`` -- A mapping of the message level names to :ref:"
"`their numeric value <message-level-constants>`."
msgstr ""

msgid "Writing your own context processors"
msgstr ""

msgid ""
"A context processor has a very simple interface: It's a Python function that "
"takes one argument, an :class:`~django.http.HttpRequest` object, and returns "
"a dictionary that gets added to the template context. Each context processor "
"*must* return a dictionary."
msgstr ""

msgid ""
"Custom context processors can live anywhere in your code base. All Django "
"cares about is that your custom context processors are pointed to by the "
"``'context_processors'`` option in your :setting:`TEMPLATES` setting — or "
"the ``context_processors`` argument of :class:`~django.template.Engine` if "
"you're using it directly."
msgstr ""

msgid "Loading templates"
msgstr "Memuat cetakan"

msgid ""
"Generally, you'll store templates in files on your filesystem rather than "
"using the low-level :class:`~django.template.Template` API yourself. Save "
"templates in a directory specified as a **template directory**."
msgstr ""

msgid ""
"Django searches for template directories in a number of places, depending on "
"your template loading settings (see \"Loader types\" below), but the most "
"basic way of specifying template directories is by using the :setting:`DIRS "
"<TEMPLATES-DIRS>` option."
msgstr ""

msgid "The :setting:`DIRS <TEMPLATES-DIRS>` option"
msgstr "Pilihan :setting:`DIRS <TEMPLATES-DIRS>`"

msgid ""
"Tell Django what your template directories are by using the :setting:`DIRS "
"<TEMPLATES-DIRS>` option in the :setting:`TEMPLATES` setting in your "
"settings file — or the ``dirs`` argument of :class:`~django.template."
"Engine`. This should be set to a list of strings that contain full paths to "
"your template directories::"
msgstr ""

msgid ""
"Your templates can go anywhere you want, as long as the directories and "
"templates are readable by the Web server. They can have any extension you "
"want, such as ``.html`` or ``.txt``, or they can have no extension at all."
msgstr ""

msgid "Loader types"
msgstr ""

msgid ""
"By default, Django uses a filesystem-based template loader, but Django comes "
"with a few other template loaders, which know how to load templates from "
"other sources."
msgstr ""
"Secara awal, Django menggunakan pemuat cetakan bedasarkan sistem berkas, "
"tetapi Django datang dengan sedikit pemuat cetakan lain, uang mengetahui "
"bagaimana memuat cetakan dari sumber-sumber lain."

msgid ""
"Some of these other loaders are disabled by default, but you can activate "
"them by adding a ``'loaders'`` option to your ``DjangoTemplates`` backend in "
"the :setting:`TEMPLATES` setting or passing a ``loaders`` argument to :class:"
"`~django.template.Engine`. ``loaders`` should be a list of strings or "
"tuples, where each represents a template loader class. Here are the template "
"loaders that come with Django:"
msgstr ""

msgid "``django.template.loaders.filesystem.Loader``"
msgstr "``django.template.loaders.filesystem.Loader``"

msgid ""
"Loads templates from the filesystem, according to :setting:`DIRS <TEMPLATES-"
"DIRS>`."
msgstr ""

msgid ""
"This loader is enabled by default. However it won't find any templates until "
"you set :setting:`DIRS <TEMPLATES-DIRS>` to a non-empty list::"
msgstr ""

msgid ""
"You can also override ``'DIRS'`` and specify specific directories for a "
"particular filesystem loader::"
msgstr ""

msgid ""
"The ability to specify directories for a particular filesystem loader was "
"added."
msgstr ""

msgid "``django.template.loaders.app_directories.Loader``"
msgstr "``django.template.loaders.app_directories.Loader``"

msgid ""
"Loads templates from Django apps on the filesystem. For each app in :setting:"
"`INSTALLED_APPS`, the loader looks for a ``templates`` subdirectory. If the "
"directory exists, Django looks for templates in there."
msgstr ""

msgid ""
"This means you can store templates with your individual apps. This also "
"makes it easy to distribute Django apps with default templates."
msgstr ""

msgid "For example, for this setting::"
msgstr "Sebagai contoh, untuk pengaturan ini::"

msgid ""
"...then ``get_template('foo.html')`` will look for ``foo.html`` in these "
"directories, in this order:"
msgstr ""

msgid "``/path/to/myproject/polls/templates/``"
msgstr "``/path/to/myproject/polls/templates/``"

msgid "``/path/to/myproject/music/templates/``"
msgstr "``/path/to/myproject/music/templates/``"

msgid "... and will use the one it finds first."
msgstr "... dan akan menggunakan satu itu temukan pertama kali."

msgid ""
"The order of :setting:`INSTALLED_APPS` is significant! For example, if you "
"want to customize the Django admin, you might choose to override the "
"standard ``admin/base_site.html`` template, from ``django.contrib.admin``, "
"with your own ``admin/base_site.html`` in ``myproject.polls``. You must then "
"make sure that your ``myproject.polls`` comes *before* ``django.contrib."
"admin`` in :setting:`INSTALLED_APPS`, otherwise ``django.contrib.admin``’s "
"will be loaded first and yours will be ignored."
msgstr ""

msgid ""
"Note that the loader performs an optimization when it first runs: it caches "
"a list of which :setting:`INSTALLED_APPS` packages have a ``templates`` "
"subdirectory."
msgstr ""

msgid ""
"You can enable this loader simply by setting :setting:`APP_DIRS <TEMPLATES-"
"APP_DIRS>` to ``True``::"
msgstr ""

msgid "``django.template.loaders.eggs.Loader``"
msgstr "``django.template.loaders.eggs.Loader``"

msgid "Distributing applications as eggs is not recommended."
msgstr ""

msgid ""
"Just like ``app_directories`` above, but it loads templates from Python eggs "
"rather than from the filesystem."
msgstr ""

msgid "This loader is disabled by default."
msgstr ""

msgid "``django.template.loaders.cached.Loader``"
msgstr "``django.template.loaders.cached.Loader``"

msgid ""
"By default (when :setting:`DEBUG` is ``True``), the template system reads "
"and compiles your templates every time they're rendered. While the Django "
"template system is quite fast, the overhead from reading and compiling "
"templates can add up."
msgstr ""

msgid ""
"You configure the cached template loader with a list of other loaders that "
"it should wrap. The wrapped loaders are used to locate unknown templates "
"when they're first encountered. The cached loader then stores the compiled "
"``Template`` in memory. The cached ``Template`` instance is returned for "
"subsequent requests to load the same template."
msgstr ""

msgid ""
"This loader is automatically enabled if :setting:`DEBUG` is ``False`` and :"
"setting:`OPTIONS['loaders'] <TEMPLATES-OPTIONS>` isn't specified."
msgstr ""

msgid ""
"You can also enable template caching with some custom template loaders using "
"settings like this::"
msgstr ""

msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or that you wrote yourself, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations <template_tag_thread_safety>`."
msgstr ""

msgid ""
"The automatic enabling of the cached template loader when ``debug`` is "
"``False`` was added."
msgstr ""

msgid "``django.template.loaders.locmem.Loader``"
msgstr "``django.template.loaders.locmem.Loader``"

msgid "Loads templates from a Python dictionary. This is useful for testing."
msgstr ""

msgid "This loader takes a dictionary of templates as its first argument::"
msgstr ""

msgid ""
"Django uses the template loaders in order according to the ``'loaders'`` "
"option. It uses each loader until a loader finds a match."
msgstr ""

msgid "Custom loaders"
msgstr ""

msgid ""
"It's possible to load templates from additional sources using custom "
"template loaders. Custom ``Loader`` classes should inherit from ``django."
"template.loaders.base.Loader`` and define the ``get_contents()`` and "
"``get_template_sources()`` methods."
msgstr ""

msgid "Loader methods"
msgstr ""

msgid ""
"Loads templates from a given source, such as the filesystem or a database."
msgstr ""

msgid ""
"A method that takes a ``template_name`` and yields :class:`~django.template."
"base.Origin` instances for each possible source."
msgstr ""

msgid ""
"For example, the filesystem loader may receive ``'index.html'`` as a "
"``template_name`` argument.  This method would yield origins for the full "
"path of ``index.html`` as it appears in each template directory the loader "
"looks at."
msgstr ""

msgid ""
"The method doesn't need to verify that the template exists at a given path, "
"but it should ensure the path is valid. For instance, the filesystem loader "
"makes sure the path lies under a valid template directory."
msgstr ""

msgid ""
"Returns the contents for a template given a :class:`~django.template.base."
"Origin` instance."
msgstr ""

msgid ""
"This is where a filesystem loader would read contents from the filesystem, "
"or a database loader would read from the database. If a matching template "
"doesn't exist, this should raise a :exc:`~django.template."
"TemplateDoesNotExist` error."
msgstr ""

msgid ""
"Returns a ``Template`` object for a given ``template_name`` by looping "
"through results from :meth:`get_template_sources` and calling :meth:"
"`get_contents`. This returns the first matching template. If no template is "
"found, :exc:`~django.template.TemplateDoesNotExist` is raised."
msgstr ""

msgid ""
"The optional ``skip`` argument is a list of origins to ignore when extending "
"templates. This allow templates to extend other templates of the same name. "
"It also used to avoid recursion errors."
msgstr ""

msgid ""
"In general, it is enough to define :meth:`get_template_sources` and :meth:"
"`get_contents` for custom template loaders. ``get_template()`` will usually "
"not need to be overridden."
msgstr ""

msgid ""
"Returns a tuple of (``template_string``, ``template_origin``), where "
"``template_string`` is a string containing the template contents, and "
"``template_origin`` is a string identifying the template source. A "
"filesystem-based loader may return the full path to the file as the "
"``template_origin``, for example."
msgstr ""

msgid ""
"``template_dirs`` is an optional argument used to control which directories "
"the loader will search."
msgstr ""

msgid ""
"This method is called automatically by :meth:`load_template` and should be "
"overridden when writing custom template loaders."
msgstr ""

msgid ""
"Custom loaders should use :meth:`get_template` and :meth:`get_contents` "
"instead."
msgstr ""

msgid ""
"Returns a tuple of (``template``, ``template_origin``), where ``template`` "
"is a ``Template`` object and ``template_origin`` is a string identifying the "
"template source. A filesystem-based loader may return the full path to the "
"file as the ``template_origin``, for example."
msgstr ""

msgid "Building your own"
msgstr "Membangun milik anda"

msgid "For examples, `read the source code for Django's built-in loaders`_."
msgstr ""

msgid "Template origin"
msgstr "Cetakan asli"

msgid ""
"Templates have an ``origin`` containing attributes depending on the source "
"they are loaded from."
msgstr ""

msgid ""
"The path to the template as returned by the template loader. For loaders "
"that read from the file system, this is the full path to the template."
msgstr ""

msgid ""
"If the template is instantiated directly rather than through a template "
"loader, this is a string value of ``<unknown_source>``."
msgstr ""

msgid "The relative path to the template as passed into the template loader."
msgstr ""

msgid ""
"If the template is instantiated directly rather than through a template "
"loader, this is ``None``."
msgstr ""

msgid "Built-in template tags and filters"
msgstr ""

msgid ""
"This document describes Django's built-in template tags and filters. It is "
"recommended that you use the :doc:`automatic documentation </ref/contrib/"
"admin/admindocs>`, if available, as this will also include documentation for "
"any custom tags or filters installed."
msgstr ""

msgid "Built-in tag reference"
msgstr ""

msgid "``autoescape``"
msgstr "``autoescape``"

msgid ""
"Controls the current auto-escaping behavior. This tag takes either ``on`` or "
"``off`` as an argument and that determines whether auto-escaping is in "
"effect inside the block. The block is closed with an ``endautoescape`` "
"ending tag."
msgstr ""

msgid ""
"When auto-escaping is in effect, all variable content has HTML escaping "
"applied to it before placing the result into the output (but after any "
"filters have been applied). This is equivalent to manually applying the :"
"tfilter:`escape` filter to each variable."
msgstr ""

msgid ""
"The only exceptions are variables that are already marked as \"safe\" from "
"escaping, either by the code that populated the variable, or because it has "
"had the :tfilter:`safe` or :tfilter:`escape` filters applied."
msgstr ""

msgid "Sample usage::"
msgstr "Contoh penggunaan::"

msgid "``block``"
msgstr "``block``"

msgid ""
"Defines a block that can be overridden by child templates. See :ref:"
"`Template inheritance <template-inheritance>` for more information."
msgstr ""

msgid "``comment``"
msgstr "``comment``"

msgid ""
"Ignores everything between ``{% comment %}`` and ``{% endcomment %}``. An "
"optional note may be inserted in the first tag. For example, this is useful "
"when commenting out code for documenting why the code was disabled."
msgstr ""

msgid "``comment`` tags cannot be nested."
msgstr ""

msgid "``csrf_token``"
msgstr "``csrf_token``"

msgid ""
"This tag is used for CSRF protection, as described in the documentation for :"
"doc:`Cross Site Request Forgeries </ref/csrf>`."
msgstr ""

msgid "``cycle``"
msgstr "``cycle``"

msgid ""
"Produces one of its arguments each time this tag is encountered. The first "
"argument is produced on the first encounter, the second argument on the "
"second encounter, and so forth. Once all arguments are exhausted, the tag "
"cycles to the first argument and produces it again."
msgstr ""

msgid "This tag is particularly useful in a loop::"
msgstr ""

msgid ""
"The first iteration produces HTML that refers to class ``row1``, the second "
"to ``row2``, the third to ``row1`` again, and so on for each iteration of "
"the loop."
msgstr ""

msgid ""
"You can use variables, too. For example, if you have two template variables, "
"``rowvalue1`` and ``rowvalue2``, you can alternate between their values like "
"this::"
msgstr ""

msgid ""
"Variables included in the cycle will be escaped.  You can disable auto-"
"escaping with::"
msgstr ""

msgid "You can mix variables and strings::"
msgstr ""

msgid ""
"In some cases you might want to refer to the current value of a cycle "
"without advancing to the next value. To do this, just give the ``{% cycle %}"
"`` tag a name, using \"as\", like this::"
msgstr ""

msgid ""
"From then on, you can insert the current value of the cycle wherever you'd "
"like in your template by referencing the cycle name as a context variable. "
"If you want to move the cycle to the next value independently of the "
"original ``cycle`` tag, you can use another ``cycle`` tag and specify the "
"name of the variable. So, the following template::"
msgstr ""

msgid "would output::"
msgstr "akan mengeluarkan::"

msgid ""
"You can use any number of values in a ``cycle`` tag, separated by spaces. "
"Values enclosed in single quotes (``'``) or double quotes (``\"``) are "
"treated as string literals, while values without quotes are treated as "
"template variables."
msgstr ""

msgid ""
"By default, when you use the ``as`` keyword with the cycle tag, the usage of "
"``{% cycle %}`` that initiates the cycle will itself produce the first value "
"in the cycle. This could be a problem if you want to use the value in a "
"nested loop or an included template. If you only want to declare the cycle "
"but not produce the first value, you can add a ``silent`` keyword as the "
"last keyword in the tag. For example::"
msgstr ""

msgid ""
"This will output a list of ``<tr>`` elements with ``class`` alternating "
"between ``row1`` and ``row2``. The subtemplate will have access to "
"``rowcolors`` in its context and the value will match the class of the "
"``<tr>`` that encloses it. If the ``silent`` keyword were to be omitted, "
"``row1`` and ``row2`` would be emitted as normal text, outside the ``<tr>`` "
"element."
msgstr ""

msgid ""
"When the silent keyword is used on a cycle definition, the silence "
"automatically applies to all subsequent uses of that specific cycle tag. The "
"following template would output *nothing*, even though the second call to "
"``{% cycle %}`` doesn't specify ``silent``::"
msgstr ""

msgid ""
"You can use the :ttag:`resetcycle` tag to make a ``{% cycle %}`` tag restart "
"from its first value when it's next encountered."
msgstr ""

msgid ""
"Outputs a whole load of debugging information, including the current context "
"and imported modules."
msgstr ""

msgid "``extends``"
msgstr "``extends``"

msgid "Signals that this template extends a parent template."
msgstr ""

msgid "This tag can be used in two ways:"
msgstr ""

msgid ""
"``{% extends \"base.html\" %}`` (with quotes) uses the literal value ``"
"\"base.html\"`` as the name of the parent template to extend."
msgstr ""

msgid ""
"``{% extends variable %}`` uses the value of ``variable``. If the variable "
"evaluates to a string, Django will use that string as the name of the parent "
"template. If the variable evaluates to a ``Template`` object, Django will "
"use that object as the parent template."
msgstr ""

msgid "See :ref:`template-inheritance` for more information."
msgstr "Lihat :ref:`template-inheritance` untuk informasi lebih."

msgid ""
"Normally the template name is relative to the template loader's root "
"directory. A string argument may also be a relative path starting with ``./"
"`` or ``../``. For example, assume the following directory structure::"
msgstr ""

msgid "In ``template.html``, the following paths would be valid::"
msgstr ""

msgid "The ability to use relative paths was added."
msgstr ""

msgid "``filter``"
msgstr "``filter``"

msgid ""
"Filters the contents of the block through one or more filters. Multiple "
"filters can be specified with pipes and filters can have arguments, just as "
"in variable syntax."
msgstr ""

msgid ""
"Note that the block includes *all* the text between the ``filter`` and "
"``endfilter`` tags."
msgstr ""

msgid ""
"The :tfilter:`escape` and :tfilter:`safe` filters are not acceptable "
"arguments. Instead, use the :ttag:`autoescape` tag to manage autoescaping "
"for blocks of template code."
msgstr ""

msgid "``firstof``"
msgstr "``firstof``"

msgid ""
"Outputs the first argument variable that is not ``False``. Outputs nothing "
"if all the passed variables are ``False``."
msgstr ""

msgid "This is equivalent to::"
msgstr ""

msgid ""
"You can also use a literal string as a fallback value in case all passed "
"variables are False::"
msgstr ""

msgid ""
"This tag auto-escapes variable values. You can disable auto-escaping with::"
msgstr ""

msgid "Or if only some variables should be escaped, you can use::"
msgstr ""

msgid ""
"You can use the syntax ``{% firstof var1 var2 var3 as value %}`` to store "
"the output inside a variable."
msgstr ""

msgid "``for``"
msgstr "``for``"

msgid ""
"Loops over each item in an array, making the item available in a context "
"variable. For example, to display a list of athletes provided in "
"``athlete_list``::"
msgstr ""

msgid ""
"You can loop over a list in reverse by using ``{% for obj in list reversed %}"
"``."
msgstr ""

msgid ""
"If you need to loop over a list of lists, you can unpack the values in each "
"sublist into individual variables. For example, if your context contains a "
"list of (x,y) coordinates called ``points``, you could use the following to "
"output the list of points::"
msgstr ""

msgid ""
"This can also be useful if you need to access the items in a dictionary. For "
"example, if your context contained a dictionary ``data``, the following "
"would display the keys and values of the dictionary::"
msgstr ""

msgid ""
"Keep in mind that for the dot operator, dictionary key lookup takes "
"precedence over method lookup. Therefore if the ``data`` dictionary contains "
"a key named ``'items'``, ``data.items`` will return ``data['items']`` "
"instead of ``data.items()``. Avoid adding keys that are named like "
"dictionary methods if you want to use those methods in a template "
"(``items``, ``values``, ``keys``, etc.). Read more about the lookup order of "
"the dot operator in the :ref:`documentation of template variables <template-"
"variables>`."
msgstr ""

msgid "The for loop sets a number of variables available within the loop:"
msgstr ""

msgid "Variable"
msgstr "Variabel"

msgid "``forloop.counter``"
msgstr "``forloop.counter``"

msgid "The current iteration of the loop (1-indexed)"
msgstr ""

msgid "``forloop.counter0``"
msgstr "``forloop.counter0``"

msgid "The current iteration of the loop (0-indexed)"
msgstr ""

msgid "``forloop.revcounter``"
msgstr "``forloop.revcounter``"

msgid "The number of iterations from the end of the loop (1-indexed)"
msgstr ""

msgid "``forloop.revcounter0``"
msgstr "``forloop.revcounter0``"

msgid "The number of iterations from the end of the loop (0-indexed)"
msgstr ""

msgid "``forloop.first``"
msgstr "``forloop.first``"

msgid "True if this is the first time through the loop"
msgstr ""

msgid "``forloop.last``"
msgstr "``forloop.last``"

msgid "True if this is the last time through the loop"
msgstr ""

msgid "``forloop.parentloop``"
msgstr "``forloop.parentloop``"

msgid "For nested loops, this is the loop surrounding the current one"
msgstr ""

msgid "``for`` ... ``empty``"
msgstr "``for`` ... ``empty``"

msgid ""
"The ``for`` tag can take an optional ``{% empty %}`` clause whose text is "
"displayed if the given array is empty or could not be found::"
msgstr ""

msgid ""
"The above is equivalent to -- but shorter, cleaner, and possibly faster than "
"-- the following::"
msgstr ""

msgid "``if``"
msgstr "``if``"

msgid ""
"The ``{% if %}`` tag evaluates a variable, and if that variable is \"true"
"\" (i.e. exists, is not empty, and is not a false boolean value) the "
"contents of the block are output::"
msgstr ""

msgid ""
"In the above, if ``athlete_list`` is not empty, the number of athletes will "
"be displayed by the ``{{ athlete_list|length }}`` variable."
msgstr ""

msgid ""
"As you can see, the ``if`` tag may take one or several ``{% elif %}`` "
"clauses, as well as an ``{% else %}`` clause that will be displayed if all "
"previous conditions fail. These clauses are optional."
msgstr ""

msgid "Boolean operators"
msgstr ""

msgid ""
":ttag:`if` tags may use ``and``, ``or`` or ``not`` to test a number of "
"variables or to negate a given variable::"
msgstr ""
"Etiket :ttag:`if` tags may use ``and``, ``or`` or ``not`` to test a number "
"of variables mungkin menggunakan ``and``, ``or`` atau ``not`` untuk mencoba "
"sejumlah variabel atau meniadakan variabel yang diberikan::"

msgid ""
"Use of both ``and`` and ``or`` clauses within the same tag is allowed, with "
"``and`` having higher precedence than ``or`` e.g.::"
msgstr ""

msgid "will be interpreted like:"
msgstr ""

msgid ""
"Use of actual parentheses in the :ttag:`if` tag is invalid syntax. If you "
"need them to indicate precedence, you should use nested :ttag:`if` tags."
msgstr ""

msgid ""
":ttag:`if` tags may also use the operators ``==``, ``!=``, ``<``, ``>``, "
"``<=``, ``>=``, ``in``, ``not in``, ``is``, and ``is not`` which work as "
"follows:"
msgstr ""

msgid "``==`` operator"
msgstr "Penghubung ``==``"

msgid "Equality. Example::"
msgstr ""

msgid "``!=`` operator"
msgstr "Penghubung ``!=``"

msgid "Inequality. Example::"
msgstr ""

msgid "``<`` operator"
msgstr "Penghubung ``<``"

msgid "Less than. Example::"
msgstr ""

msgid "``>`` operator"
msgstr "Penghubung ``>``"

msgid "Greater than. Example::"
msgstr ""

msgid "``<=`` operator"
msgstr "Penghubung ``<=``"

msgid "Less than or equal to. Example::"
msgstr ""

msgid "``>=`` operator"
msgstr "Penghubung ``>=``"

msgid "Greater than or equal to. Example::"
msgstr ""

msgid "``in`` operator"
msgstr "Penghubung ``in``"

msgid ""
"Contained within. This operator is supported by many Python containers to "
"test whether the given value is in the container. The following are some "
"examples of how ``x in y`` will be interpreted::"
msgstr ""

msgid "``not in`` operator"
msgstr "Penghubung ``not in``"

msgid "Not contained within. This is the negation of the ``in`` operator."
msgstr ""

msgid "``is`` operator"
msgstr ""

msgid "Object identity. Tests if two values are the same object. Example::"
msgstr ""

msgid "``is not`` operator"
msgstr ""

msgid ""
"Negated object identity. Tests if two values are not the same object. This "
"is the negation of the ``is`` operator. Example::"
msgstr ""
"Ditiadakan penciri obyek. Percobaan jika dua nilai bukan obyek sama. Ini "
"adalah meniadakan dari penghubung ``is``. Contoh::"

msgid "Filters"
msgstr "Filter"

msgid "You can also use filters in the :ttag:`if` expression. For example::"
msgstr ""

msgid "Complex expressions"
msgstr ""

msgid ""
"All of the above can be combined to form complex expressions. For such "
"expressions, it can be important to know how the operators are grouped when "
"the expression is evaluated - that is, the precedence rules. The precedence "
"of the operators, from lowest to highest, is as follows:"
msgstr ""

msgid "``or``"
msgstr "``or``"

msgid "``and``"
msgstr "``and``"

msgid "``not``"
msgstr "``not``"

msgid "``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``"
msgstr "``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``"

msgid ""
"(This follows Python exactly). So, for example, the following complex :ttag:"
"`if` tag::"
msgstr ""

msgid "...will be interpreted as:"
msgstr ""

msgid ""
"If you need different precedence, you will need to use nested :ttag:`if` "
"tags. Sometimes that is better for clarity anyway, for the sake of those who "
"do not know the precedence rules."
msgstr ""

msgid ""
"The comparison operators cannot be 'chained' like in Python or in "
"mathematical notation. For example, instead of using::"
msgstr ""

msgid "you should use::"
msgstr "anda harus menggunakan::"

msgid "``ifequal`` and ``ifnotequal``"
msgstr "``ifequal`` dan ``ifnotequal``"

msgid ""
"``{% ifequal a b %} ... {% endifequal %}`` is an obsolete way to write ``{% "
"if a == b %} ... {% endif %}``. Likewise, ``{% ifnotequal a b %} ... {% "
"endifnotequal %}`` is superseded by ``{% if a != b %} ... {% endif %}``. The "
"``ifequal`` and ``ifnotequal`` tags will be deprecated in a future release."
msgstr ""

msgid "``ifchanged``"
msgstr "``ifchanged``"

msgid "Check if a value has changed from the last iteration of a loop."
msgstr ""

msgid ""
"The ``{% ifchanged %}`` block tag is used within a loop. It has two possible "
"uses."
msgstr ""

msgid ""
"Checks its own rendered contents against its previous state and only "
"displays the content if it has changed. For example, this displays a list of "
"days, only displaying the month if it changes::"
msgstr ""

msgid ""
"If given one or more variables, check whether any variable has changed. For "
"example, the following shows the date every time it changes, while showing "
"the hour if either the hour or the date has changed::"
msgstr ""

msgid ""
"The ``ifchanged`` tag can also take an optional ``{% else %}`` clause that "
"will be displayed if the value has not changed::"
msgstr ""

msgid "``include``"
msgstr "``include``"

msgid ""
"Loads a template and renders it with the current context. This is a way of "
"\"including\" other templates within a template."
msgstr ""

msgid ""
"The template name can either be a variable or a hard-coded (quoted) string, "
"in either single or double quotes."
msgstr ""

msgid ""
"This example includes the contents of the template ``\"foo/bar.html\"``::"
msgstr ""

msgid ""
"Normally the template name is relative to the template loader's root "
"directory. A string argument may also be a relative path starting with ``./"
"`` or ``../`` as described in the :ttag:`extends` tag."
msgstr ""

msgid "The ability to use a relative path was added."
msgstr ""

msgid ""
"This example includes the contents of the template whose name is contained "
"in the variable ``template_name``::"
msgstr ""

msgid ""
"The variable may also be any object with a ``render()`` method that accepts "
"a context. This allows you to reference a compiled ``Template`` in your "
"context."
msgstr ""

msgid ""
"An included template is rendered within the context of the template that "
"includes it. This example produces the output ``\"Hello, John!\"``:"
msgstr ""

msgid ""
"Context: variable ``person`` is set to ``\"John\"`` and variable "
"``greeting`` is set to ``\"Hello\"``."
msgstr ""

msgid "Template::"
msgstr "Cetakan::"

msgid "The ``name_snippet.html`` template::"
msgstr "Cetakan ``name_snippet.html``::"

msgid ""
"You can pass additional context to the template using keyword arguments::"
msgstr ""

msgid ""
"If you want to render the context only with the variables provided (or even "
"no variables at all), use the ``only`` option. No other variables are "
"available to the included template::"
msgstr ""

msgid ""
"If the included template causes an exception while it's rendered (including "
"if it's missing or has syntax errors), the behavior varies depending on the :"
"class:`template engine's <django.template.Engine>` ``debug`` option (if not "
"set, this option defaults to the value of :setting:`DEBUG`). When debug mode "
"is turned on, an exception like :exc:`~django.template.TemplateDoesNotExist` "
"or :exc:`~django.template.TemplateSyntaxError` will be raised. When debug "
"mode is turned off, ``{% include %}`` logs a warning to the ``django."
"template`` logger with the exception that happens while rendering the "
"included template and returns an empty string."
msgstr ""
"Jika cetakan disertakan menyebabkan sebuah pengecualian selagi dibangun "
"(termasuk jika itu hilang atau mempunyai kesalahan sintaksis), kebiasaan "
"beragam tergantung pada pilihan :class:`template engine's <django.template."
"Engine>` ``debug`` (jika tidak disetel, awal pilihan ini pada nilai dari :"
"setting:`DEBUG`). Ketika suasana mencari kesalahan dinyalakan, sebuah "
"pengecualian seperti :exc:`~django.template.TemplateDoesNotExist` atau :exc:"
"`~django.template.TemplateSyntaxError` akan muncul. Ketika suasana mencari "
"kesalahan dimatikan, ``{% include %}`` mencatat sebuah peringatan pada "
"pencatat ``django.template`` denagn pengecualian yang terjadi selagi "
"membangun cetakan disertakan dan mengembalikan sebuah deretan karakter "
"kosong."

msgid ""
"Silencing exceptions raised while rendering the ``{% include %}`` template "
"tag is deprecated. In Django 2.1, the exception will be raised."
msgstr ""

msgid ""
"The :ttag:`include` tag should be considered as an implementation of "
"\"render this subtemplate and include the HTML\", not as \"parse this "
"subtemplate and include its contents as if it were part of the parent\". "
"This means that there is no shared state between included templates -- each "
"include is a completely independent rendering process."
msgstr ""

msgid ""
"Blocks are evaluated *before* they are included. This means that a template "
"that includes blocks from another will contain blocks that have *already "
"been evaluated and rendered* - not blocks that can be overridden by, for "
"example, an extending template."
msgstr ""

msgid "``load``"
msgstr "``load``"

msgid "Loads a custom template tag set."
msgstr ""

msgid ""
"For example, the following template would load all the tags and filters "
"registered in ``somelibrary`` and ``otherlibrary`` located in package "
"``package``::"
msgstr ""

msgid ""
"You can also selectively load individual filters or tags from a library, "
"using the ``from`` argument. In this example, the template tags/filters "
"named ``foo`` and ``bar`` will be loaded from ``somelibrary``::"
msgstr ""

msgid ""
"See :doc:`Custom tag and filter libraries </howto/custom-template-tags>` for "
"more information."
msgstr ""

msgid "``lorem``"
msgstr "``lorem``"

msgid ""
"Displays random \"lorem ipsum\" Latin text. This is useful for providing "
"sample data in templates."
msgstr ""

msgid ""
"The ``{% lorem %}`` tag can be used with zero, one, two or three arguments. "
"The arguments are:"
msgstr ""

msgid "``count``"
msgstr "``count``"

msgid ""
"A number (or variable) containing the number of paragraphs or words to "
"generate (default is 1)."
msgstr ""

msgid "``method``"
msgstr "``method``"

msgid ""
"Either ``w`` for words, ``p`` for HTML paragraphs or ``b`` for plain-text "
"paragraph blocks (default is ``b``)."
msgstr ""

msgid "``random``"
msgstr "``random``"

msgid ""
"The word ``random``, which if given, does not use the common paragraph "
"(\"Lorem ipsum dolor sit amet...\") when generating text."
msgstr ""

msgid "``{% lorem %}`` will output the common \"lorem ipsum\" paragraph."
msgstr ""

msgid ""
"``{% lorem 3 p %}`` will output the common \"lorem ipsum\" paragraph and two "
"random paragraphs each wrapped in HTML ``<p>`` tags."
msgstr ""

msgid "``{% lorem 2 w random %}`` will output two random Latin words."
msgstr ""

msgid "``now``"
msgstr "``now``"

msgid ""
"Displays the current date and/or time, using a format according to the given "
"string. Such string can contain format specifiers characters as described in "
"the :tfilter:`date` filter section."
msgstr ""

msgid ""
"Note that you can backslash-escape a format string if you want to use the "
"\"raw\" value. In this example, both \"o\" and \"f\" are backslash-escaped, "
"because otherwise each is a format string that displays the year and the "
"time, respectively::"
msgstr ""
"Catat bahwa anda dapat meloloskan-garis-miring-terbalik sebuah bentuk string "
"jika anda ingin menggunakan nilai \"mentah\". Dalam contoh ini, kedua \"o\" "
"dan \"f\" adalah meloloskan-garis-miring-terbalik, karena sebaliknya "
"setiapnya adalah bentuk string yang menampilkan tahun dan waktu, masing-"
"masing::"

msgid "This would display as \"It is the 4th of September\"."
msgstr ""

msgid ""
"The format passed can also be one of the predefined ones :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :"
"setting:`SHORT_DATETIME_FORMAT`. The predefined formats may vary depending "
"on the current locale and if :doc:`/topics/i18n/formatting` is enabled, e."
"g.::"
msgstr ""

msgid ""
"You can also use the syntax ``{% now \"Y\" as current_year %}`` to store the "
"output (as a string) inside a variable. This is useful if you want to use "
"``{% now %}`` inside a template tag like :ttag:`blocktrans` for example::"
msgstr ""

msgid "``regroup``"
msgstr "``regroup``"

msgid "Regroups a list of alike objects by a common attribute."
msgstr ""

msgid ""
"This complex tag is best illustrated by way of an example: say that "
"``cities`` is a list of cities represented by dictionaries containing ``"
"\"name\"``, ``\"population\"``, and ``\"country\"`` keys:"
msgstr ""

msgid ""
"...and you'd like to display a hierarchical list that is ordered by country, "
"like this:"
msgstr ""

msgid "India"
msgstr "India"

msgid "Mumbai: 19,000,000"
msgstr "Mumbai: 19,000,000"

msgid "Calcutta: 15,000,000"
msgstr "Calcutta: 15,000,000"

msgid "USA"
msgstr "USA"

msgid "New York: 20,000,000"
msgstr "New York: 20,000,000"

msgid "Chicago: 7,000,000"
msgstr "Chicago: 7,000,000"

msgid "Japan"
msgstr "Jepang"

msgid "Tokyo: 33,000,000"
msgstr "Tokyo: 33,000,000"

msgid ""
"You can use the ``{% regroup %}`` tag to group the list of cities by "
"country. The following snippet of template code would accomplish this::"
msgstr ""

msgid ""
"Let's walk through this example. ``{% regroup %}`` takes three arguments: "
"the list you want to regroup, the attribute to group by, and the name of the "
"resulting list. Here, we're regrouping the ``cities`` list by the "
"``country`` attribute and calling the result ``country_list``."
msgstr ""

msgid ""
"``{% regroup %}`` produces a list (in this case, ``country_list``) of "
"**group objects**. Group objects are instances of :py:func:`~collections."
"namedtuple` with two fields:"
msgstr ""

msgid ""
"``grouper`` -- the item that was grouped by (e.g., the string \"India\" or "
"\"Japan\")."
msgstr ""

msgid ""
"``list`` -- a list of all items in this group (e.g., a list of all cities "
"with country='India')."
msgstr ""

msgid ""
"The group object was changed from a dictionary to a :py:func:`~collections."
"namedtuple`."
msgstr ""

msgid ""
"Because ``{% regroup %}`` produces :py:func:`~collections.namedtuple` "
"objects, you can also write the previous example as::"
msgstr ""

msgid ""
"Note that ``{% regroup %}`` does not order its input! Our example relies on "
"the fact that the ``cities`` list was ordered by ``country`` in the first "
"place. If the ``cities`` list did *not* order its members by ``country``, "
"the regrouping would naively display more than one group for a single "
"country. For example, say the ``cities`` list was set to this (note that the "
"countries are not grouped together):"
msgstr ""

msgid ""
"With this input for ``cities``, the example ``{% regroup %}`` template code "
"above would result in the following output:"
msgstr ""

msgid ""
"The easiest solution to this gotcha is to make sure in your view code that "
"the data is ordered according to how you want to display it."
msgstr ""

msgid ""
"Another solution is to sort the data in the template using the :tfilter:"
"`dictsort` filter, if your data is in a list of dictionaries::"
msgstr ""

msgid "Grouping on other properties"
msgstr ""

msgid ""
"Any valid template lookup is a legal grouping attribute for the regroup tag, "
"including methods, attributes, dictionary keys and list items. For example, "
"if the \"country\" field is a foreign key to a class with an attribute "
"\"description,\" you could use::"
msgstr ""

msgid ""
"Or, if ``country`` is a field with ``choices``, it will have a :meth:"
"`~django.db.models.Model.get_FOO_display` method available as an attribute, "
"allowing  you to group on the display string rather than the ``choices`` "
"key::"
msgstr ""

msgid ""
"``{{ country.grouper }}`` will now display the value fields from the "
"``choices`` set rather than the keys."
msgstr ""

msgid "``resetcycle``"
msgstr ""

msgid ""
"Resets a previous `cycle`_ so that it restarts from its first item at its "
"next encounter. Without arguments, ``{% resetcycle %}`` will reset the last "
"``{% cycle %}`` defined in the template."
msgstr ""

msgid "This example would return this HTML::"
msgstr "Contoh ini akan mengembalikan HTML ini::"

msgid ""
"Notice how the first block ends with ``class=\"odd\"`` and the new one "
"starts with ``class=\"odd\"``. Without the ``{% resetcycle %}`` tag, the "
"second block would start with ``class=\"even\"``."
msgstr ""

msgid "You can also reset named cycle tags::"
msgstr ""

msgid ""
"In this example, we have both the alternating odd/even rows and a \"major\" "
"row every fifth row. Only the five-row cycle is reset when a category "
"changes."
msgstr ""

msgid "``spaceless``"
msgstr "``spaceless``"

msgid ""
"Removes whitespace between HTML tags. This includes tab characters and "
"newlines."
msgstr ""
"Memindahkan ruang kosong diantara etiket HTML. Ini menyertakan karakter tab "
"dan baris baru."

msgid ""
"Only space between *tags* is removed -- not space between tags and text. In "
"this example, the space around ``Hello`` won't be stripped::"
msgstr ""

msgid "``templatetag``"
msgstr "``templatetag``"

msgid "Outputs one of the syntax characters used to compose template tags."
msgstr ""

msgid ""
"Since the template system has no concept of \"escaping\", to display one of "
"the bits used in template tags, you must use the ``{% templatetag %}`` tag."
msgstr ""

msgid "The argument tells which template bit to output:"
msgstr ""

msgid "Outputs"
msgstr "Keluaran"

msgid "``openblock``"
msgstr "``openblock``"

msgid "``{%``"
msgstr "``{%``"

msgid "``closeblock``"
msgstr "``closeblock``"

msgid "``%}``"
msgstr "``%}``"

msgid "``openvariable``"
msgstr "``openvariable``"

msgid "``{{``"
msgstr "``{{``"

msgid "``closevariable``"
msgstr "``closevariable``"

msgid "``}}``"
msgstr "``}}``"

msgid "``openbrace``"
msgstr "``openbrace``"

msgid "``{``"
msgstr "``{``"

msgid "``closebrace``"
msgstr "``closebrace``"

msgid "``}``"
msgstr "``}``"

msgid "``opencomment``"
msgstr "``opencomment``"

msgid "``{#``"
msgstr "``{#``"

msgid "``closecomment``"
msgstr "``closecomment``"

msgid "``#}``"
msgstr "``#}``"

msgid "``url``"
msgstr "``url``"

msgid ""
"Returns an absolute path reference (a URL without the domain name) matching "
"a given view and optional parameters. Any special characters in the "
"resulting path will be encoded using :func:`~django.utils.encoding."
"iri_to_uri`."
msgstr ""

msgid ""
"This is a way to output links without violating the DRY principle by having "
"to hard-code URLs in your templates::"
msgstr ""

msgid ""
"The first argument is a :func:`~django.conf.urls.url` ``name``. It can be a "
"quoted literal or any other context variable. Additional arguments are "
"optional and should be space-separated values that will be used as arguments "
"in the URL. The example above shows passing positional arguments. "
"Alternatively you may use keyword syntax::"
msgstr ""

msgid ""
"Do not mix both positional and keyword syntax in a single call. All "
"arguments required by the URLconf should be present."
msgstr ""

msgid ""
"For example, suppose you have a view, ``app_views.client``, whose URLconf "
"takes a client ID (here, ``client()`` is a method inside the views file "
"``app_views.py``). The URLconf line might look like this:"
msgstr ""

msgid ""
"If this app's URLconf is included into the project's URLconf under a path "
"such as this:"
msgstr ""

msgid "...then, in a template, you can create a link to this view like this::"
msgstr ""
"...kemudian, dalam cetakan, anda dapat membuat sebuah tautan ke tampilan "
"seperti ini::"

msgid "The template tag will output the string ``/clients/client/123/``."
msgstr ""
"Etiket cetakan akan mengeluarkan deretan karakter ``/clients/client/123/``."

msgid ""
"Note that if the URL you're reversing doesn't exist, you'll get an :exc:"
"`~django.urls.NoReverseMatch` exception raised, which will cause your site "
"to display an error page."
msgstr ""

msgid ""
"If you'd like to retrieve a URL without displaying it, you can use a "
"slightly different call::"
msgstr ""

msgid ""
"The scope of the variable created by the  ``as var`` syntax is the ``{% "
"block %}`` in which the ``{% url %}`` tag appears."
msgstr ""

msgid ""
"This ``{% url ... as var %}`` syntax will *not* cause an error if the view "
"is missing. In practice you'll use this to link to views that are optional::"
msgstr ""

msgid ""
"If you'd like to retrieve a namespaced URL, specify the fully qualified "
"name::"
msgstr ""

msgid ""
"This will follow the normal :ref:`namespaced URL resolution strategy <topics-"
"http-reversing-url-namespaces>`, including using any hints provided by the "
"context as to the current application."
msgstr ""

msgid ""
"Don't forget to put quotes around the :func:`~django.conf.urls.url` "
"``name``, otherwise the value will be interpreted as a context variable!"
msgstr ""

msgid "``verbatim``"
msgstr "``verbatim``"

msgid ""
"Stops the template engine from rendering the contents of this block tag."
msgstr ""

msgid ""
"A common use is to allow a JavaScript template layer that collides with "
"Django's syntax. For example::"
msgstr ""

msgid ""
"You can also designate a specific closing tag, allowing the use of ``{% "
"endverbatim %}`` as part of the unrendered contents::"
msgstr ""

msgid "``widthratio``"
msgstr "``widthratio``"

msgid ""
"For creating bar charts and such, this tag calculates the ratio of a given "
"value to a maximum value, and then applies that ratio to a constant."
msgstr ""

msgid ""
"If ``this_value`` is 175, ``max_value`` is 200, and ``max_width`` is 100, "
"the image in the above example will be 88 pixels wide (because 175/200 "
"= .875; .875 * 100 = 87.5 which is rounded up to 88)."
msgstr ""

msgid ""
"In some cases you might want to capture the result of ``widthratio`` in a "
"variable. It can be useful, for instance, in a :ttag:`blocktrans` like this::"
msgstr ""

msgid "``with``"
msgstr "``with``"

msgid ""
"Caches a complex variable under a simpler name. This is useful when "
"accessing an \"expensive\" method (e.g., one that hits the database) "
"multiple times."
msgstr ""

msgid ""
"The populated variable (in the example above, ``total``) is only available "
"between the ``{% with %}`` and ``{% endwith %}`` tags."
msgstr ""

msgid "You can assign more than one context variable::"
msgstr ""

msgid ""
"The previous more verbose format is still supported: ``{% with business."
"employees.count as total %}``"
msgstr ""

msgid "Built-in filter reference"
msgstr ""

msgid "``add``"
msgstr "``add``"

msgid "Adds the argument to the value."
msgstr ""

msgid "If ``value`` is ``4``, then the output will be ``6``."
msgstr "Jika ``value`` adalah ``4``, kemudian keluaran akan menjadi ``6``."

msgid ""
"This filter will first try to coerce both values to integers. If this fails, "
"it'll attempt to add the values together anyway. This will work on some data "
"types (strings, list, etc.) and fail on others. If it fails, the result will "
"be an empty string."
msgstr ""

msgid "For example, if we have::"
msgstr "Sebagai contoh, jika kami mempunyai::"

msgid ""
"and ``first`` is ``[1, 2, 3]`` and ``second`` is ``[4, 5, 6]``, then the "
"output will be ``[1, 2, 3, 4, 5, 6]``."
msgstr ""

msgid ""
"Strings that can be coerced to integers will be **summed**, not "
"concatenated, as in the first example above."
msgstr ""

msgid "``addslashes``"
msgstr "``addslashes``"

msgid ""
"Adds slashes before quotes. Useful for escaping strings in CSV, for example."
msgstr ""
"Tambah garis miring sebelum kutipan. Berguna untuk pelolosan string dalam "
"CSV, sebagai contoh."

msgid ""
"If ``value`` is ``\"I'm using Django\"``, the output will be ``\"I\\'m using "
"Django\"``."
msgstr ""

msgid "``capfirst``"
msgstr "``capfirst``"

msgid ""
"Capitalizes the first character of the value. If the first character is not "
"a letter, this filter has no effect."
msgstr ""

msgid "If ``value`` is ``\"django\"``, the output will be ``\"Django\"``."
msgstr ""
"Jika ``value`` adalah ``\"django\"``, keluaran akan menjadi ``\"Django\"``."

msgid "``center``"
msgstr "``center``"

msgid "Centers the value in a field of a given width."
msgstr "Tengahkan nilai di bidang dari lebar yang diberikan."

msgid ""
"If ``value`` is ``\"Django\"``, the output will be ``\"     Django    \"``."
msgstr ""
"Jika ``value`` adalah ``\"Django\"``, keluaran akan menjadi ``\" Django \"``."

msgid "``cut``"
msgstr "``cut``"

msgid "Removes all values of arg from the given string."
msgstr ""

msgid ""
"If ``value`` is ``\"String with spaces\"``, the output will be ``"
"\"Stringwithspaces\"``."
msgstr ""

msgid "Formats a date according to the given format."
msgstr ""

msgid ""
"Uses a similar format as PHP's ``date()`` function (https://php.net/date) "
"with some differences."
msgstr ""

msgid ""
"These format characters are not used in Django outside of templates. They "
"were designed to be compatible with PHP to ease transitioning for designers."
msgstr ""

msgid "Available format strings:"
msgstr ""

msgid "Format character"
msgstr "Bentuk karakter"

msgid "Example output"
msgstr "Contoh keluaran"

msgid "a"
msgstr "a"

msgid ""
"``'a.m.'`` or ``'p.m.'`` (Note that this is slightly different than PHP's "
"output, because this includes periods to match Associated Press style.)"
msgstr ""

msgid "``'a.m.'``"
msgstr "``'a.m.'``"

msgid "A"
msgstr "A"

msgid "``'AM'`` or ``'PM'``."
msgstr "``'AM'`` atau ``'PM'``."

msgid "``'AM'``"
msgstr "``'AM'``"

msgid "b"
msgstr "b"

msgid "Month, textual, 3 letters, lowercase."
msgstr ""

msgid "``'jan'``"
msgstr "``'jan'``"

msgid "Not implemented."
msgstr "Tidak diterapkan."

msgid "c"
msgstr "c"

msgid ""
"ISO 8601 format. (Note: unlike others formatters, such as \"Z\", \"O\" or \"r"
"\", the \"c\" formatter will not add timezone offset if value is a naive "
"datetime (see :class:`datetime.tzinfo`)."
msgstr ""

msgid ""
"``2008-01-02T10:30:00.000123+02:00``, or ``2008-01-02T10:30:00.000123`` if "
"the datetime is naive"
msgstr ""

msgid "d"
msgstr "d"

msgid "Day of the month, 2 digits with leading zeros."
msgstr "Hari dari bulan, 2 angka dengan dimulai nol."

msgid "``'01'`` to ``'31'``"
msgstr "``'01'`` sampai ``'31'``"

msgid "D"
msgstr "D"

msgid "Day of the week, textual, 3 letters."
msgstr ""

msgid "``'Fri'``"
msgstr ""

msgid "e"
msgstr ""

msgid ""
"Timezone name. Could be in any format, or might return an empty string, "
"depending on the datetime."
msgstr ""

msgid "``''``, ``'GMT'``, ``'-500'``, ``'US/Eastern'``, etc."
msgstr "``''``, ``'GMT'``, ``'-500'``, ``'US/Eastern'``, etc."

msgid "E"
msgstr "E"

msgid ""
"Month, locale specific alternative representation usually used for long date "
"representation."
msgstr ""

msgid "``'listopada'`` (for Polish locale, as opposed to ``'Listopad'``)"
msgstr ""

msgid "f"
msgstr "f"

msgid ""
"Time, in 12-hour hours and minutes, with minutes left off if they're zero. "
"Proprietary extension."
msgstr ""

msgid "``'1'``, ``'1:30'``"
msgstr "``'1'``, ``'1:30'``"

msgid "F"
msgstr "F"

msgid "Month, textual, long."
msgstr ""

msgid "``'January'``"
msgstr "``'Januari'``"

msgid "g"
msgstr "g"

msgid "Hour, 12-hour format without leading zeros."
msgstr ""

msgid "``'1'`` to ``'12'``"
msgstr "``'1'`` sampai ``'12'``"

msgid "G"
msgstr "G"

msgid "Hour, 24-hour format without leading zeros."
msgstr ""

msgid "``'0'`` to ``'23'``"
msgstr "``'0'`` sampai ``'23'``"

msgid "h"
msgstr "h"

msgid "Hour, 12-hour format."
msgstr ""

msgid "``'01'`` to ``'12'``"
msgstr "``'01'`` sampai ``'12'``"

msgid "H"
msgstr "H"

msgid "Hour, 24-hour format."
msgstr ""

msgid "``'00'`` to ``'23'``"
msgstr "``'00'`` sampai ``'23'``"

msgid "i"
msgstr "i"

msgid "Minutes."
msgstr "Menit."

msgid "``'00'`` to ``'59'``"
msgstr "``'00'`` sampai ``'59'``"

msgid "I"
msgstr "I"

msgid "Daylight Savings Time, whether it's in effect or not."
msgstr ""

msgid "``'1'`` or ``'0'``"
msgstr "``'1'`` atau ``'0'``"

msgid "j"
msgstr "j"

msgid "Day of the month without leading zeros."
msgstr ""

msgid "``'1'`` to ``'31'``"
msgstr "``'1'`` sampai ``'31'``"

msgid "l"
msgstr "I"

msgid "Day of the week, textual, long."
msgstr ""

msgid "``'Friday'``"
msgstr "``'Jumat'``"

msgid "L"
msgstr "L"

msgid "Boolean for whether it's a leap year."
msgstr ""

msgid "``True`` or ``False``"
msgstr "``True`` atau ``False``"

msgid "m"
msgstr "m"

msgid "Month, 2 digits with leading zeros."
msgstr ""

msgid "M"
msgstr "M"

msgid "Month, textual, 3 letters."
msgstr ""

msgid "``'Jan'``"
msgstr "``'Jan'``"

msgid "n"
msgstr "n"

msgid "Month without leading zeros."
msgstr "Bulan tanpa dimulai dengan nol."

msgid "Month abbreviation in Associated Press style. Proprietary extension."
msgstr ""

msgid "``'Jan.'``, ``'Feb.'``, ``'March'``, ``'May'``"
msgstr "``'Jan.'``, ``'Feb.'``, ``'Maret'``, ``'Mei'``"

msgid "o"
msgstr "o"

msgid ""
"ISO-8601 week-numbering year, corresponding to the ISO-8601 week number (W) "
"which uses leap weeks. See Y for the more common year format."
msgstr ""

msgid "``'1999'``"
msgstr "``'1999'``"

msgid "O"
msgstr "O"

msgid "Difference to Greenwich time in hours."
msgstr ""

msgid "``'+0200'``"
msgstr "``'+0200'``"

msgid "P"
msgstr "P"

msgid ""
"Time, in 12-hour hours, minutes and 'a.m.'/'p.m.', with minutes left off if "
"they're zero and the special-case strings 'midnight' and 'noon' if "
"appropriate. Proprietary extension."
msgstr ""

msgid ""
"``'1 a.m.'``, ``'1:30 p.m.'``, ``'midnight'``, ``'noon'``, ``'12:30 p.m.'``"
msgstr ""

msgid "r"
msgstr "r"

msgid ":rfc:`5322` formatted date."
msgstr ""

msgid "``'Thu, 21 Dec 2000 16:01:07 +0200'``"
msgstr "``'Kam, 21 Des 2000 16:01:07 +0200'``"

msgid "s"
msgstr "s"

msgid "Seconds, 2 digits with leading zeros."
msgstr ""

msgid "S"
msgstr "S"

msgid "English ordinal suffix for day of the month, 2 characters."
msgstr ""

msgid "``'st'``, ``'nd'``, ``'rd'`` or ``'th'``"
msgstr ""

msgid "t"
msgstr "t"

msgid "Number of days in the given month."
msgstr ""

msgid "``28`` to ``31``"
msgstr "``28`` sampai ``31``"

msgid "T"
msgstr "T"

msgid "Time zone of this machine."
msgstr "Zona waktu dari mesin ini."

msgid "``'EST'``, ``'MDT'``"
msgstr ""

msgid "u"
msgstr "u"

msgid "Microseconds."
msgstr "Mikrodetik"

msgid "``000000`` to ``999999``"
msgstr "``000000`` sampai ``999999``"

msgid "U"
msgstr "U"

msgid "Seconds since the Unix Epoch (January 1 1970 00:00:00 UTC)."
msgstr ""

msgid "w"
msgstr "w"

msgid "Day of the week, digits without leading zeros."
msgstr ""

msgid "``'0'`` (Sunday) to ``'6'`` (Saturday)"
msgstr "``'0'`` (Minggu) sampai ``'6'`` (Sabtu)"

msgid "W"
msgstr "W"

msgid "ISO-8601 week number of year, with weeks starting on Monday."
msgstr ""

msgid "``1``, ``53``"
msgstr "``1``, ``53``"

msgid "y"
msgstr "y"

msgid "Year, 2 digits."
msgstr "Tahun, 2 angka."

msgid "``'99'``"
msgstr "``'99'``"

msgid "Y"
msgstr "Y"

msgid "Year, 4 digits."
msgstr "Tahun, 4 angka."

msgid "z"
msgstr "z"

msgid "Day of the year."
msgstr "Hari dari tahun."

msgid "``0`` to ``365``"
msgstr "``0`` sampai ``365``"

msgid "Z"
msgstr "Z"

msgid ""
"Time zone offset in seconds. The offset for timezones west of UTC is always "
"negative, and for those east of UTC is always positive."
msgstr ""

msgid "``-43200`` to ``43200``"
msgstr "``-43200`` sampai ``43200``"

msgid ""
"If ``value`` is a :py:class:`~datetime.datetime` object (e.g., the result of "
"``datetime.datetime.now()``), the output will be the string ``'Wed 09 Jan "
"2008'``."
msgstr ""

msgid ""
"The format passed can be one of the predefined ones :setting:`DATE_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :setting:"
"`SHORT_DATETIME_FORMAT`, or a custom format that uses the format specifiers "
"shown in the table above. Note that predefined formats may vary depending on "
"the current locale."
msgstr ""

msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"es\"``, then for::"
msgstr ""

msgid ""
"the output would be the string ``\"09/01/2008\"`` (the ``\"SHORT_DATE_FORMAT"
"\"`` format specifier for the ``es`` locale as shipped with Django is ``\"d/"
"m/Y\"``)."
msgstr ""

msgid ""
"When used without a format string, the ``DATE_FORMAT`` format specifier is "
"used. Assuming the same settings as the previous example::"
msgstr ""

msgid ""
"outputs ``9 de Enero de 2008`` (the ``DATE_FORMAT`` format specifier for the "
"``es`` locale is ``r'j \\d\\e F \\d\\e Y'``."
msgstr ""

msgid ""
"In older versions, the :setting:`DATE_FORMAT` setting (without localization) "
"is always used when a format string isn't given."
msgstr ""

msgid ""
"You can combine ``date`` with the :tfilter:`time` filter to render a full "
"representation of a ``datetime`` value. E.g.::"
msgstr ""

msgid ""
"If value evaluates to ``False``, uses the given default. Otherwise, uses the "
"value."
msgstr ""
"Jika nilai dinilai ke ``False``, gunakan awal yang diberikan. Sebaliknya, "
"gunakan nilai."

msgid ""
"If ``value`` is ``\"\"`` (the empty string), the output will be ``nothing``."
msgstr ""

msgid "``default_if_none``"
msgstr "``default_if_none``"

msgid ""
"If (and only if) value is ``None``, uses the given default. Otherwise, uses "
"the value."
msgstr ""
"Jika (dan hanya jika) nilai adalah ``None``, gunakan awal yang diberikan. "
"Sebaliknya, gunakan nilai."

msgid ""
"Note that if an empty string is given, the default value will *not* be used. "
"Use the :tfilter:`default` filter if you want to fallback for empty strings."
msgstr ""

msgid "If ``value`` is ``None``, the output will be ``nothing``."
msgstr ""

msgid "``dictsort``"
msgstr "``dictsort``"

msgid ""
"Takes a list of dictionaries and returns that list sorted by the key given "
"in the argument."
msgstr ""

msgid "If ``value`` is:"
msgstr "Jika ``value`` adalah:"

msgid "then the output would be:"
msgstr "kemudian keluarannya akan menjadi:"

msgid "You can also do more complicated things like::"
msgstr ""

msgid "If ``books`` is:"
msgstr "Jika ``books`` adalah:"

msgid "then the output would be::"
msgstr "kemudian keluarannya akan menjadi::"

msgid ""
"``dictsort`` can also order a list of lists (or any other object "
"implementing ``__getitem__()``) by elements at specified index. For example::"
msgstr ""

msgid ""
"You must pass the index as an integer rather than a string. The following "
"produce empty output::"
msgstr ""

msgid "The ability to order a list of lists was added."
msgstr ""

msgid "``dictsortreversed``"
msgstr "``dictsortreversed``"

msgid ""
"Takes a list of dictionaries and returns that list sorted in reverse order "
"by the key given in the argument. This works exactly the same as the above "
"filter, but the returned value will be in reverse order."
msgstr ""

msgid "``divisibleby``"
msgstr "``divisibleby``"

msgid "Returns ``True`` if the value is divisible by the argument."
msgstr ""

msgid "If ``value`` is ``21``, the output would be ``True``."
msgstr "Jika ``value`` adalah ``21``, keluaran akan menjadi ``True``."

msgid "``escape``"
msgstr "``escape``"

msgid "Escapes a string's HTML. Specifically, it makes these replacements:"
msgstr ""

msgid "``<`` is converted to ``&lt;``"
msgstr ""

msgid "``>`` is converted to ``&gt;``"
msgstr ""

msgid "``'`` (single quote) is converted to ``&#39;``"
msgstr ""

msgid "``\"`` (double quote) is converted to ``&quot;``"
msgstr ""

msgid "``&`` is converted to ``&amp;``"
msgstr ""

msgid ""
"The escaping is only applied when the string is output, so it does not "
"matter where in a chained sequence of filters you put ``escape``: it will "
"always be applied as though it were the last filter. If you want escaping to "
"be applied immediately, use the :tfilter:`force_escape` filter."
msgstr ""

msgid ""
"Applying ``escape`` to a variable that would normally have auto-escaping "
"applied to the result will only result in one round of escaping being done. "
"So it is safe to use this function even in auto-escaping environments. If "
"you want multiple escaping passes to be applied, use the :tfilter:"
"`force_escape` filter."
msgstr ""

msgid ""
"For example, you can apply ``escape`` to fields when :ttag:`autoescape` is "
"off::"
msgstr ""

msgid ""
"The \"lazy\" behavior of the ``escape`` filter is deprecated. It will change "
"to immediately apply :func:`~django.utils.html.conditional_escape` in Django "
"2.0."
msgstr ""

msgid "``escapejs``"
msgstr "``escapejs``"

msgid ""
"Escapes characters for use in JavaScript strings. This does *not* make the "
"string safe for use in HTML, but does protect you from syntax errors when "
"using templates to generate JavaScript/JSON."
msgstr ""

msgid ""
"If ``value`` is ``\"testing\\r\\njavascript \\'string\" <b>escaping</b>\"``, "
"the output will be ``\"testing\\\\u000D\\\\u000Ajavascript \\\\u0027string\\"
"\\u0022 \\\\u003Cb\\\\u003Eescaping\\\\u003C/b\\\\u003E\"``."
msgstr ""

msgid "``filesizeformat``"
msgstr "``filesizeformat``"

msgid ""
"Formats the value like a 'human-readable' file size (i.e. ``'13 KB'``, "
"``'4.1 MB'``, ``'102 bytes'``, etc.)."
msgstr ""

msgid "If ``value`` is 123456789, the output would be ``117.7 MB``."
msgstr ""

msgid "File sizes and SI units"
msgstr ""

msgid ""
"Strictly speaking, ``filesizeformat`` does not conform to the International "
"System of Units which recommends using KiB, MiB, GiB, etc. when byte sizes "
"are calculated in powers of 1024 (which is the case here). Instead, Django "
"uses traditional unit names (KB, MB, GB, etc.) corresponding to names that "
"are more commonly used."
msgstr ""

msgid "``first``"
msgstr "``first``"

msgid "Returns the first item in a list."
msgstr ""

msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be ``'a'``."
msgstr ""

msgid "``floatformat``"
msgstr "``floatformat``"

msgid ""
"When used without an argument, rounds a floating-point number to one decimal "
"place -- but only if there's a decimal part to be displayed. For example:"
msgstr ""

msgid "Template"
msgstr "Cetakan"

msgid "Output"
msgstr "Keluaran"

msgid "``34.23234``"
msgstr "``34.23234``"

msgid "``{{ value|floatformat }}``"
msgstr "``{{ value|floatformat }}``"

msgid "``34.2``"
msgstr "``34.2``"

msgid "``34.00000``"
msgstr "``34.00000``"

msgid "``34``"
msgstr "``34``"

msgid "``34.26000``"
msgstr "``34.26000``"

msgid "``34.3``"
msgstr "``34.3``"

msgid ""
"If used with a numeric integer argument, ``floatformat`` rounds a number to "
"that many decimal places. For example:"
msgstr ""

msgid "``{{ value|floatformat:3 }}``"
msgstr "``{{ value|floatformat:3 }}``"

msgid "``34.232``"
msgstr "``34.232``"

msgid "``34.000``"
msgstr "``34.000``"

msgid "``34.260``"
msgstr ""

msgid ""
"Particularly useful is passing 0 (zero) as the argument which will round the "
"float to the nearest integer."
msgstr ""

msgid "``{{ value|floatformat:\"0\" }}``"
msgstr "``{{ value|floatformat:\"0\" }}``"

msgid "``39.56000``"
msgstr "``39.56000``"

msgid "``40``"
msgstr "``40``"

msgid ""
"If the argument passed to ``floatformat`` is negative, it will round a "
"number to that many decimal places -- but only if there's a decimal part to "
"be displayed. For example:"
msgstr ""

msgid "``{{ value|floatformat:\"-3\" }}``"
msgstr "``{{ value|floatformat:\"-3\" }}``"

msgid ""
"Using ``floatformat`` with no argument is equivalent to using "
"``floatformat`` with an argument of ``-1``."
msgstr ""

msgid "``force_escape``"
msgstr "``force_escape``"

msgid ""
"Applies HTML escaping to a string (see the :tfilter:`escape` filter for "
"details). This filter is applied *immediately* and returns a new, escaped "
"string. This is useful in the rare cases where you need multiple escaping or "
"want to apply other filters to the escaped results. Normally, you want to "
"use the :tfilter:`escape` filter."
msgstr ""

msgid ""
"For example, if you want to catch the ``<p>`` HTML elements created by the :"
"tfilter:`linebreaks` filter::"
msgstr ""

msgid "``get_digit``"
msgstr "``get_digit``"

msgid ""
"Given a whole number, returns the requested digit, where 1 is the right-most "
"digit, 2 is the second-right-most digit, etc. Returns the original value for "
"invalid input (if input or argument is not an integer, or if argument is "
"less than 1). Otherwise, output is always an integer."
msgstr ""

msgid "If ``value`` is ``123456789``, the output will be ``8``."
msgstr "Jika ``value`` adalah ``123456789``, keluaran akan menjadi ``8``."

msgid "``iriencode``"
msgstr "``iriencode``"

msgid ""
"Converts an IRI (Internationalized Resource Identifier) to a string that is "
"suitable for including in a URL. This is necessary if you're trying to use "
"strings containing non-ASCII characters in a URL."
msgstr ""

msgid ""
"It's safe to use this filter on a string that has already gone through the :"
"tfilter:`urlencode` filter."
msgstr ""

msgid ""
"If ``value`` is ``\"?test=1&me=2\"``, the output will be ``\"?test=1&amp;"
"me=2\"``."
msgstr ""
"Jika ``value`` adalah ``\"?test=1&me=2\"``, keluaran akan menjadi ``\"?"
"test=1&amp;me=2\"``."

msgid "``join``"
msgstr "``join``"

msgid "Joins a list with a string, like Python's ``str.join(list)``"
msgstr ""

msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be the string "
"``\"a // b // c\"``."
msgstr ""
"Jika ``value`` adalah daftar ``['a', 'b', 'c']``, keluaran akan menjadi "
"deretan karakter ``\"a // b // c\"``."

msgid "``last``"
msgstr "``last``"

msgid "Returns the last item in a list."
msgstr "Mengembalikan barang terakhir di daftar."

msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output will be the "
"string ``\"d\"``."
msgstr ""
"Jika ``value`` adalah daftar ``['a', 'b', 'c', 'd']``, keluaran akan menjadi "
"deretan karakter ``\"d\"``."

msgid "Returns the length of the value. This works for both strings and lists."
msgstr ""
"Mengembalikan panjang nilai. Ini bekerja pada kedua deretan karakter dan "
"daftar."

msgid ""
"If ``value`` is ``['a', 'b', 'c', 'd']`` or ``\"abcd\"``, the output will be "
"``4``."
msgstr ""
"Jika ``value`` adalah ``['a', 'b', 'c', 'd']`` atau ``\"abcd\"``, keluaran "
"akan menjadi ``4``."

msgid "The filter returns ``0`` for an undefined variable."
msgstr ""

msgid "``length_is``"
msgstr "``length_is``"

msgid ""
"Returns ``True`` if the value's length is the argument, or ``False`` "
"otherwise."
msgstr ""

msgid ""
"If ``value`` is ``['a', 'b', 'c', 'd']`` or ``\"abcd\"``, the output will be "
"``True``."
msgstr ""
"Jika ``value`` adalah ``['a', 'b', 'c', 'd']`` atau ``\"abcd\"``, keluaran "
"akan menjadi ``True``."

msgid "``linebreaks``"
msgstr "``linebreaks``"

msgid ""
"Replaces line breaks in plain text with appropriate HTML; a single newline "
"becomes an HTML line break (``<br />``) and a new line followed by a blank "
"line becomes a paragraph break (``</p>``)."
msgstr ""

msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``<p>Joel<br />is a "
"slug</p>``."
msgstr ""

msgid "``linebreaksbr``"
msgstr "``linebreaksbr``"

msgid ""
"Converts all newlines in a piece of plain text to HTML line breaks (``<br /"
">``)."
msgstr ""

msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``Joel<br />is a "
"slug``."
msgstr ""

msgid "``linenumbers``"
msgstr "``linenumbers``"

msgid "Displays text with line numbers."
msgstr ""

msgid "If ``value`` is::"
msgstr "Jika ``value`` adalah::"

msgid "the output will be::"
msgstr "keluaran akan menjadi::"

msgid "``ljust``"
msgstr "``ljust``"

msgid "Left-aligns the value in a field of a given width."
msgstr ""

msgid "**Argument:** field size"
msgstr ""

msgid "If ``value`` is ``Django``, the output will be ``\"Django    \"``."
msgstr ""

msgid "``lower``"
msgstr "``lower``"

msgid "Converts a string into all lowercase."
msgstr ""

msgid ""
"If ``value`` is ``Totally LOVING this Album!``, the output will be ``totally "
"loving this album!``."
msgstr ""

msgid "``make_list``"
msgstr "``make_list``"

msgid ""
"Returns the value turned into a list. For a string, it's a list of "
"characters. For an integer, the argument is cast into an unicode string "
"before creating a list."
msgstr ""

msgid ""
"If ``value`` is the string ``\"Joel\"``, the output would be the list "
"``['J', 'o', 'e', 'l']``. If ``value`` is ``123``, the output will be the "
"list ``['1', '2', '3']``."
msgstr ""

msgid "``phone2numeric``"
msgstr "``phone2numeric``"

msgid ""
"Converts a phone number (possibly containing letters) to its numerical "
"equivalent."
msgstr ""

msgid ""
"The input doesn't have to be a valid phone number. This will happily convert "
"any string."
msgstr ""

msgid "If ``value`` is ``800-COLLECT``, the output will be ``800-2655328``."
msgstr ""

msgid "``pluralize``"
msgstr "``pluralize``"

msgid ""
"Returns a plural suffix if the value is not 1. By default, this suffix is "
"``'s'``."
msgstr ""

msgid ""
"If ``num_messages`` is ``1``, the output will be ``You have 1 message.`` If "
"``num_messages`` is ``2``  the output will be ``You have 2 messages.``"
msgstr ""

msgid ""
"For words that require a suffix other than ``'s'``, you can provide an "
"alternate suffix as a parameter to the filter."
msgstr ""

msgid ""
"For words that don't pluralize by simple suffix, you can specify both a "
"singular and plural suffix, separated by a comma."
msgstr ""

msgid "Use :ttag:`blocktrans` to pluralize translated strings."
msgstr ""

msgid "``pprint``"
msgstr "``pprint``"

msgid "A wrapper around :func:`pprint.pprint` -- for debugging, really."
msgstr ""

msgid "Returns a random item from the given list."
msgstr ""

msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output could be ``\"b"
"\"``."
msgstr ""

msgid "``rjust``"
msgstr "``rjust``"

msgid "Right-aligns the value in a field of a given width."
msgstr ""

msgid "If ``value`` is ``Django``, the output will be ``\"    Django\"``."
msgstr ""
"Jika ``value`` adalah ``Django``, keluaran akan menjadi ``\" Django\"``."

msgid "``safe``"
msgstr "``safe``"

msgid ""
"Marks a string as not requiring further HTML escaping prior to output. When "
"autoescaping is off, this filter has no effect."
msgstr ""

msgid ""
"If you are chaining filters, a filter applied after ``safe`` can make the "
"contents unsafe again. For example, the following code prints the variable "
"as is, unescaped::"
msgstr ""

msgid "``safeseq``"
msgstr "``safeseq``"

msgid ""
"Applies the :tfilter:`safe` filter to each element of a sequence. Useful in "
"conjunction with other filters that operate on sequences, such as :tfilter:"
"`join`. For example::"
msgstr ""

msgid ""
"You couldn't use the :tfilter:`safe` filter directly in this case, as it "
"would first convert the variable into a string, rather than working with the "
"individual elements of the sequence."
msgstr ""

msgid "``slice``"
msgstr "``slice``"

msgid "Returns a slice of the list."
msgstr ""

msgid ""
"Uses the same syntax as Python's list slicing. See http://www."
"diveintopython3.net/native-datatypes.html#slicinglists for an introduction."
msgstr ""

msgid ""
"If ``some_list`` is ``['a', 'b', 'c']``, the output will be ``['a', 'b']``."
msgstr ""

msgid "``slugify``"
msgstr "``slugify``"

msgid ""
"Converts to ASCII. Converts spaces to hyphens. Removes characters that "
"aren't alphanumerics, underscores, or hyphens. Converts to lowercase. Also "
"strips leading and trailing whitespace."
msgstr ""
"Merubah ke ASCII. Merubah ruang menjadi tanda garis. Memindahkan karakter "
"yang tidak alphanumerik, garis bawah, atau tanda garis. Merubah ke huruf "
"kecil. Juga melucuti terkemuka dan buntutan ruang kosong."

msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"joel-is-a-slug"
"\"``."
msgstr ""

msgid "``stringformat``"
msgstr "``stringformat``"

msgid ""
"Formats the variable according to the argument, a string formatting "
"specifier. This specifier uses the :ref:`old-string-formatting` syntax, with "
"the exception that the leading \"%\" is dropped."
msgstr ""

msgid "If ``value`` is ``10``, the output will be ``1.000000E+01``."
msgstr ""

msgid "``striptags``"
msgstr "``striptags``"

msgid "Makes all possible efforts to strip all [X]HTML tags."
msgstr ""

msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"``, "
"the output will be ``\"Joel is a slug\"``."
msgstr ""

msgid "No safety guarantee"
msgstr ""

msgid ""
"Note that ``striptags`` doesn't give any guarantee about its output being "
"HTML safe, particularly with non valid HTML input. So **NEVER** apply the "
"``safe`` filter to a ``striptags`` output. If you are looking for something "
"more robust, you can use the ``bleach`` Python library, notably its `clean`_ "
"method."
msgstr ""

msgid "Formats a time according to the given format."
msgstr ""

msgid ""
"Given format can be the predefined one :setting:`TIME_FORMAT`, or a custom "
"format, same as the :tfilter:`date` filter. Note that the predefined format "
"is locale-dependent."
msgstr ""

msgid ""
"If ``value`` is equivalent to ``datetime.datetime.now()``, the output will "
"be the string ``\"01:23\"``."
msgstr ""

msgid "Another example:"
msgstr "Contoh lain:"

msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"de\"``, then for::"
msgstr ""

msgid ""
"the output will be the string ``\"01:23\"`` (The ``\"TIME_FORMAT\"`` format "
"specifier for the ``de`` locale as shipped with Django is ``\"H:i\"``)."
msgstr ""

msgid ""
"The ``time`` filter will only accept parameters in the format string that "
"relate to the time of day, not the date (for obvious reasons). If you need "
"to format a ``date`` value, use the :tfilter:`date` filter instead (or along "
"``time`` if you need to render a full :py:class:`~datetime.datetime` value)."
msgstr ""

msgid ""
"There is one exception the above rule: When passed a ``datetime`` value with "
"attached timezone information (a :ref:`time-zone-aware "
"<naive_vs_aware_datetimes>` ``datetime`` instance) the ``time`` filter will "
"accept the timezone-related :ref:`format specifiers <date-and-time-"
"formatting-specifiers>` ``'e'``, ``'O'`` , ``'T'`` and ``'Z'``."
msgstr ""

msgid ""
"When used without a format string, the ``TIME_FORMAT`` format specifier is "
"used::"
msgstr ""

msgid "is the same as::"
msgstr ""

msgid ""
"In older versions, the :setting:`TIME_FORMAT` setting (without localization) "
"is always used when a format string isn't given."
msgstr ""

msgid "``timesince``"
msgstr "``timesince``"

msgid "Formats a date as the time since that date (e.g., \"4 days, 6 hours\")."
msgstr ""

msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (without the argument, the comparison point is *now*). "
"For example, if ``blog_date`` is a date instance representing midnight on 1 "
"June 2006, and ``comment_date`` is a date instance for 08:00 on 1 June 2006, "
"then the following would return \"8 hours\"::"
msgstr ""

msgid ""
"Comparing offset-naive and offset-aware datetimes will return an empty "
"string."
msgstr ""

msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the future relative to the comparison point."
msgstr ""

msgid "``timeuntil``"
msgstr "``timeuntil``"

msgid ""
"Similar to ``timesince``, except that it measures the time from now until "
"the given date or datetime. For example, if today is 1 June 2006 and "
"``conference_date`` is a date instance holding 29 June 2006, then "
"``{{ conference_date|timeuntil }}`` will return \"4 weeks\"."
msgstr ""

msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (instead of *now*). If ``from_date`` contains 22 June "
"2006, then the following will return \"1 week\"::"
msgstr ""

msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the past relative to the comparison point."
msgstr ""

msgid ""
"Converts a string into titlecase by making words start with an uppercase "
"character and the remaining characters lowercase. This tag makes no effort "
"to keep \"trivial words\" in lowercase."
msgstr ""

msgid ""
"If ``value`` is ``\"my FIRST post\"``, the output will be ``\"My First Post"
"\"``."
msgstr ""

msgid "``truncatechars``"
msgstr "``truncatechars``"

msgid ""
"Truncates a string if it is longer than the specified number of characters. "
"Truncated strings will end with a translatable ellipsis sequence (\"...\")."
msgstr ""

msgid "**Argument:** Number of characters to truncate to"
msgstr ""

msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel i...\"``."
msgstr ""

msgid "``truncatechars_html``"
msgstr "``truncatechars_html``"

msgid ""
"Similar to :tfilter:`truncatechars`, except that it is aware of HTML tags. "
"Any tags that are opened in the string and not closed before the truncation "
"point are closed immediately after the truncation."
msgstr ""

msgid ""
"If ``value`` is ``\"<p>Joel is a slug</p>\"``, the output will be ``"
"\"<p>Joel i...</p>\"``."
msgstr ""

msgid "Newlines in the HTML content will be preserved."
msgstr ""

msgid "``truncatewords``"
msgstr "``truncatewords``"

msgid "Truncates a string after a certain number of words."
msgstr ""

msgid "**Argument:** Number of words to truncate after"
msgstr ""

msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel is ..."
"\"``."
msgstr ""

msgid "Newlines within the string will be removed."
msgstr ""

msgid "``truncatewords_html``"
msgstr "``truncatewords_html``"

msgid ""
"Similar to :tfilter:`truncatewords`, except that it is aware of HTML tags. "
"Any tags that are opened in the string and not closed before the truncation "
"point, are closed immediately after the truncation."
msgstr ""

msgid ""
"This is less efficient than :tfilter:`truncatewords`, so should only be used "
"when it is being passed HTML text."
msgstr ""

msgid ""
"If ``value`` is ``\"<p>Joel is a slug</p>\"``, the output will be ``"
"\"<p>Joel is ...</p>\"``."
msgstr ""

msgid "``unordered_list``"
msgstr "``unordered_list``"

msgid ""
"Recursively takes a self-nested list and returns an HTML unordered list -- "
"WITHOUT opening and closing <ul> tags."
msgstr ""

msgid ""
"The list is assumed to be in the proper format. For example, if ``var`` "
"contains ``['States', ['Kansas', ['Lawrence', 'Topeka'], 'Illinois']]``, "
"then ``{{ var|unordered_list }}`` would return::"
msgstr ""

msgid "``upper``"
msgstr "``upper``"

msgid "Converts a string into all uppercase."
msgstr ""

msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"JOEL IS A SLUG"
"\"``."
msgstr ""

msgid "``urlencode``"
msgstr "``urlencode``"

msgid "Escapes a value for use in a URL."
msgstr ""

msgid ""
"If ``value`` is ``\"https://www.example.org/foo?a=b&c=d\"``, the output will "
"be ``\"https%3A//www.example.org/foo%3Fa%3Db%26c%3Dd\"``."
msgstr ""

msgid ""
"An optional argument containing the characters which should not be escaped "
"can be provided."
msgstr ""

msgid ""
"If not provided, the '/' character is assumed safe. An empty string can be "
"provided when *all* characters should be escaped. For example::"
msgstr ""

msgid ""
"If ``value`` is ``\"https://www.example.org/\"``, the output will be ``"
"\"https%3A%2F%2Fwww.example.org%2F\"``."
msgstr ""

msgid "``urlize``"
msgstr "``urlize``"

msgid "Converts URLs and email addresses in text into clickable links."
msgstr ""

msgid ""
"This template tag works on links prefixed with ``http://``, ``https://``, or "
"``www.``. For example, ``https://goo.gl/aia1t`` will get converted but ``goo."
"gl/aia1t`` won't."
msgstr ""

msgid ""
"It also supports domain-only links ending in one of the original top level "
"domains (``.com``, ``.edu``, ``.gov``, ``.int``, ``.mil``, ``.net``, and ``."
"org``). For example, ``djangoproject.com`` gets converted."
msgstr ""

msgid ""
"Links can have trailing punctuation (periods, commas, close-parens) and "
"leading punctuation (opening parens), and ``urlize`` will still do the right "
"thing."
msgstr ""

msgid ""
"Links generated by ``urlize`` have a ``rel=\"nofollow\"`` attribute added to "
"them."
msgstr ""

msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output will be "
"``\"Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangoproject.com</a>\"``."
msgstr ""

msgid ""
"In addition to web links, ``urlize`` also converts email addresses into "
"``mailto:`` links. If ``value`` is ``\"Send questions to foo@example.com"
"\"``, the output will be ``\"Send questions to <a href=\"mailto:foo@example."
"com\">foo@example.com</a>\"``."
msgstr ""

msgid ""
"The ``urlize`` filter also takes an optional parameter ``autoescape``. If "
"``autoescape`` is ``True``, the link text and URLs will be escaped using "
"Django's built-in :tfilter:`escape` filter. The default value for "
"``autoescape`` is ``True``."
msgstr ""

msgid ""
"If ``urlize`` is applied to text that already contains HTML markup, things "
"won't work as expected. Apply this filter only to plain text."
msgstr ""

msgid "``urlizetrunc``"
msgstr "``urlizetrunc``"

msgid ""
"Converts URLs and email addresses into clickable links just like urlize_, "
"but truncates URLs longer than the given character limit."
msgstr ""

msgid ""
"**Argument:** Number of characters that link text should be truncated to, "
"including the ellipsis that's added if truncation is necessary."
msgstr ""

msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output would be "
"``'Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangopr...</a>'``."
msgstr ""

msgid "As with urlize_, this filter should only be applied to plain text."
msgstr ""

msgid "``wordcount``"
msgstr "``wordcount``"

msgid "Returns the number of words."
msgstr "Mengembalikan sejumlah kata."

msgid "If ``value`` is ``\"Joel is a slug\"``, the output will be ``4``."
msgstr ""
"Jika ``value`` adalah ``\"Joel is a slug\"``, keluaran akan menjadi ``4``."

msgid "``wordwrap``"
msgstr "``wordwrap``"

msgid "Wraps words at specified line length."
msgstr ""

msgid "**Argument:** number of characters at which to wrap the text"
msgstr ""

msgid "If ``value`` is ``Joel is a slug``, the output would be::"
msgstr "Jika ``value`` is ``Joel is a slug``, keluaran akan menjadi::"

msgid "``yesno``"
msgstr "``yesno``"

msgid ""
"Maps values for ``True``, ``False``, and (optionally) ``None``, to the "
"strings \"yes\", \"no\", \"maybe\", or a custom mapping passed as a comma-"
"separated list, and returns one of those strings according to the value:"
msgstr ""

msgid "``True``"
msgstr "``True``"

msgid "``yes``"
msgstr "``yes``"

msgid "``\"yeah,no,maybe\"``"
msgstr "``\"yeah,no,maybe\"``"

msgid "``yeah``"
msgstr "``yeah``"

msgid "``False``"
msgstr "``False``"

msgid "``no``"
msgstr "``no``"

msgid "``maybe``"
msgstr "``maybe``"

msgid "``\"yeah,no\"``"
msgstr "``\"yeah,no\"``"

msgid ""
"``no`` (converts ``None`` to ``False`` if no mapping for ``None`` is given)"
msgstr ""

msgid "Internationalization tags and filters"
msgstr ""

msgid ""
"Django provides template tags and filters to control each aspect of :doc:"
"`internationalization </topics/i18n/index>` in templates. They allow for "
"granular control of translations, formatting, and time zone conversions."
msgstr ""

msgid "``i18n``"
msgstr "``i18n``"

msgid ""
"This library allows specifying translatable text in templates. To enable it, "
"set :setting:`USE_I18N` to ``True``, then load it with ``{% load i18n %}``."
msgstr ""

msgid "See :ref:`specifying-translation-strings-in-template-code`."
msgstr "Lihat :ref:`specifying-translation-strings-in-template-code`."

msgid "``l10n``"
msgstr ""

msgid ""
"This library provides control over the localization of values in templates. "
"You only need to load the library using ``{% load l10n %}``, but you'll "
"often set :setting:`USE_L10N` to ``True`` so that localization is active by "
"default."
msgstr ""

msgid "See :ref:`topic-l10n-templates`."
msgstr ""

msgid "``tz``"
msgstr ""

msgid ""
"This library provides control over time zone conversions in templates. Like "
"``l10n``, you only need to load the library using ``{% load tz %}``, but "
"you'll usually also set :setting:`USE_TZ` to ``True`` so that conversion to "
"local time happens by default."
msgstr ""

msgid "See :ref:`time-zones-in-templates`."
msgstr "Lihat :ref:`time-zones-in-templates`."

msgid "Other tags and filters libraries"
msgstr ""

msgid ""
"Django comes with a couple of other template-tag libraries that you have to "
"enable explicitly in your :setting:`INSTALLED_APPS` setting and enable in "
"your template with the :ttag:`{% load %}<load>` tag."
msgstr ""

msgid ""
"A set of Django template filters useful for adding a \"human touch\" to "
"data. See :doc:`/ref/contrib/humanize`."
msgstr ""

msgid "``static``"
msgstr "``static``"

msgid ""
"To link to static files that are saved in :setting:`STATIC_ROOT` Django "
"ships with a :ttag:`static` template tag. If the :mod:`django.contrib."
"staticfiles` app is installed, the tag will serve files using ``url()`` "
"method of the storage specified by :setting:`STATICFILES_STORAGE`. For "
"example::"
msgstr ""

msgid ""
"It is also able to consume standard context variables, e.g. assuming a "
"``user_stylesheet`` variable is passed to the template::"
msgstr ""

msgid ""
"If you'd like to retrieve a static URL without displaying it, you can use a "
"slightly different call::"
msgstr ""

msgid "Using Jinja2 templates?"
msgstr "Menggunakan cetakan Jinja2?"

msgid ""
"See :class:`~django.template.backends.jinja2.Jinja2` for information on "
"using the ``static`` tag with Jinja2."
msgstr ""

msgid ""
"In older versions, you had to use ``{% load static from staticfiles %}`` in "
"your template to serve files from the storage defined in :setting:"
"`STATICFILES_STORAGE`. This is no longer required."
msgstr ""

msgid "``get_static_prefix``"
msgstr "``get_static_prefix``"

msgid ""
"You should prefer the :ttag:`static` template tag, but if you need more "
"control over exactly where and how :setting:`STATIC_URL` is injected into "
"the template, you can use the :ttag:`get_static_prefix` template tag::"
msgstr ""

msgid ""
"There's also a second form you can use to avoid extra processing if you need "
"the value multiple times::"
msgstr ""

msgid "``get_media_prefix``"
msgstr "``get_media_prefix``"

msgid ""
"Similar to the :ttag:`get_static_prefix`, ``get_media_prefix`` populates a "
"template variable with the media prefix :setting:`MEDIA_URL`, e.g.::"
msgstr ""

msgid ""
"By storing the value in a data attribute, we ensure it's escaped "
"appropriately if we want to use it in a JavaScript context."
msgstr ""

msgid ""
"Django's template engine provides a powerful mini-language for defining the "
"user-facing layer of your application, encouraging a clean separation of "
"application and presentation logic. Templates can be maintained by anyone "
"with an understanding of HTML; no knowledge of Python is required. For "
"introductory material, see :doc:`/topics/templates` topic guide."
msgstr ""

msgid ""
"For information on writing your own custom tags and filters, see :doc:`/"
"howto/custom-template-tags`."
msgstr ""

msgid ""
"To learn how to override templates in other Django applications, see :doc:`/"
"howto/overriding-templates`."
msgstr ""

msgid "The Django template language"
msgstr "Bahasa cetakan Django"

msgid ""
"This document explains the language syntax of the Django template system. If "
"you're looking for a more technical perspective on how it works and how to "
"extend it, see :doc:`/ref/templates/api`."
msgstr ""

msgid ""
"Django's template language is designed to strike a balance between power and "
"ease. It's designed to feel comfortable to those used to working with HTML. "
"If you have any exposure to other text-based template languages, such as "
"Smarty_ or Jinja2_, you should feel right at home with Django's templates."
msgstr ""

msgid "Philosophy"
msgstr "Filosofi"

msgid ""
"If you have a background in programming, or if you're used to languages "
"which mix programming code directly into HTML, you'll want to bear in mind "
"that the Django template system is not simply Python embedded into HTML. "
"This is by design: the template system is meant to express presentation, not "
"program logic."
msgstr ""

msgid ""
"The Django template system provides tags which function similarly to some "
"programming constructs -- an :ttag:`if` tag for boolean tests, a :ttag:`for` "
"tag for looping, etc. -- but these are not simply executed as the "
"corresponding Python code, and the template system will not execute "
"arbitrary Python expressions. Only the tags, filters and syntax listed below "
"are supported by default (although you can add :doc:`your own extensions </"
"howto/custom-template-tags>` to the template language as needed)."
msgstr ""

msgid ""
"A template is simply a text file. It can generate any text-based format "
"(HTML, XML, CSV, etc.)."
msgstr ""

msgid ""
"A template contains **variables**, which get replaced with values when the "
"template is evaluated, and **tags**, which control the logic of the template."
msgstr ""

msgid ""
"Below is a minimal template that illustrates a few basics. Each element will "
"be explained later in this document."
msgstr ""

msgid ""
"Why use a text-based template instead of an XML-based one (like Zope's TAL)? "
"We wanted Django's template language to be usable for more than just XML/"
"HTML templates. At World Online, we use it for emails, JavaScript and CSV. "
"You can use the template language for any text-based format."
msgstr ""

msgid "Oh, and one more thing: making humans edit XML is sadistic!"
msgstr ""

msgid "Variables"
msgstr "Variabel"

msgid ""
"Variables look like this: ``{{ variable }}``. When the template engine "
"encounters a variable, it evaluates that variable and replaces it with the "
"result. Variable names consist of any combination of alphanumeric characters "
"and the underscore (``\"_\"``). The dot (``\".\"``) also appears in variable "
"sections, although that has a special meaning, as indicated below. "
"Importantly, *you cannot have spaces or punctuation characters in variable "
"names.*"
msgstr ""

msgid "Use a dot (``.``) to access attributes of a variable."
msgstr ""
"Gunakan sebuah titik (``.``) untuk mengakses atribut-atribut dari sebuah "
"variabel."

msgid ""
"Technically, when the template system encounters a dot, it tries the "
"following lookups, in this order:"
msgstr ""

msgid "Dictionary lookup"
msgstr "Kamus pencarian"

msgid "Attribute or method lookup"
msgstr "Atribut atau metode pencarian"

msgid "Numeric index lookup"
msgstr "Indeks numerik pencarian"

msgid ""
"If the resulting value is callable, it is called with no arguments. The "
"result of the call becomes the template value."
msgstr ""

msgid ""
"This lookup order can cause some unexpected behavior with objects that "
"override dictionary lookup. For example, consider the following code snippet "
"that attempts to loop over a ``collections.defaultdict``::"
msgstr ""

msgid ""
"Because dictionary lookup happens first, that behavior kicks in and provides "
"a default value instead of using the intended ``.iteritems()`` method. In "
"this case, consider converting to a dictionary first."
msgstr ""

msgid ""
"In the above example, ``{{ section.title }}`` will be replaced with the "
"``title`` attribute of the ``section`` object."
msgstr ""

msgid ""
"If you use a variable that doesn't exist, the template system will insert "
"the value of the ``string_if_invalid`` option, which is set to ``''`` (the "
"empty string) by default."
msgstr ""

msgid "You can modify variables for display by using **filters**."
msgstr ""
"Anda dapat merubah variabel-variabel untuk ditampilkan dengan menggunakan "
"**filters**."

msgid ""
"Filters look like this: ``{{ name|lower }}``. This displays the value of the "
"``{{ name }}`` variable after being filtered through the :tfilter:`lower` "
"filter, which converts text to lowercase. Use a pipe (``|``) to apply a "
"filter."
msgstr ""

msgid ""
"Filters can be \"chained.\" The output of one filter is applied to the next. "
"``{{ text|escape|linebreaks }}`` is a common idiom for escaping text "
"contents, then converting line breaks to ``<p>`` tags."
msgstr ""

msgid ""
"Some filters take arguments. A filter argument looks like this: ``{{ bio|"
"truncatewords:30 }}``. This will display the first 30 words of the ``bio`` "
"variable."
msgstr ""

msgid ""
"Filter arguments that contain spaces must be quoted; for example, to join a "
"list with commas and spaces you'd use ``{{ list|join:\", \" }}``."
msgstr ""

msgid ""
"Django provides about sixty built-in template filters. You can read all "
"about them in the :ref:`built-in filter reference <ref-templates-builtins-"
"filters>`. To give you a taste of what's available, here are some of the "
"more commonly used template filters:"
msgstr ""

msgid ":tfilter:`default`"
msgstr ":tfilter:`default`"

msgid ""
"If a variable is false or empty, use given default. Otherwise, use the value "
"of the variable. For example::"
msgstr ""

msgid ""
"If ``value`` isn't provided or is empty, the above will display \"``nothing``"
"\"."
msgstr ""

msgid ":tfilter:`length`"
msgstr ":tfilter:`length`"

msgid ""
"Returns the length of the value. This works for both strings and lists. For "
"example::"
msgstr ""

msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``4``."
msgstr ""
"Jika ``value`` adalah ``['a', 'b', 'c', 'd']``, keluaran akan menjadi ``4``."

msgid ":tfilter:`filesizeformat`"
msgstr ":tfilter:`filesizeformat`"

msgid ""
"Formats the value like a \"human-readable\" file size (i.e. ``'13 KB'``, "
"``'4.1 MB'``, ``'102 bytes'``, etc.). For example::"
msgstr ""

msgid ""
"Again, these are just a few examples; see the :ref:`built-in filter "
"reference <ref-templates-builtins-filters>` for the complete list."
msgstr ""

msgid ""
"You can also create your own custom template filters; see :doc:`/howto/"
"custom-template-tags`."
msgstr ""

msgid ""
"Django's admin interface can include a complete reference of all template "
"tags and filters available for a given site. See :doc:`/ref/contrib/admin/"
"admindocs`."
msgstr ""

msgid "Tags"
msgstr "Tag"

msgid ""
"Tags look like this: ``{% tag %}``. Tags are more complex than variables: "
"Some create text in the output, some control flow by performing loops or "
"logic, and some load external information into the template to be used by "
"later variables."
msgstr ""

msgid ""
"Some tags require beginning and ending tags (i.e. ``{% tag %} ... tag "
"contents ... {% endtag %}``)."
msgstr ""

msgid ""
"Django ships with about two dozen built-in template tags. You can read all "
"about them in the :ref:`built-in tag reference <ref-templates-builtins-"
"tags>`. To give you a taste of what's available, here are some of the more "
"commonly used tags:"
msgstr ""

msgid ":ttag:`for`"
msgstr ":ttag:`for`"

msgid ""
"Loop over each item in an array.  For example, to display a list of athletes "
"provided in ``athlete_list``::"
msgstr ""

msgid ":ttag:`if`, ``elif``, and ``else``"
msgstr ":ttag:`if`, ``elif``, dan ``else``"

msgid ""
"Evaluates a variable, and if that variable is \"true\" the contents of the "
"block are displayed::"
msgstr ""

msgid ""
"In the above, if ``athlete_list`` is not empty, the number of athletes will "
"be displayed by the ``{{ athlete_list|length }}`` variable. Otherwise, if "
"``athlete_in_locker_room_list`` is not empty, the message \"Athletes should "
"be out...\" will be displayed. If both lists are empty, \"No athletes.\" "
"will be displayed."
msgstr ""

msgid "You can also use filters and various operators in the :ttag:`if` tag::"
msgstr ""

msgid ""
"While the above example works, be aware that most template filters return "
"strings, so mathematical comparisons using filters will generally not work "
"as you expect. :tfilter:`length` is an exception."
msgstr ""

msgid ":ttag:`block` and :ttag:`extends`"
msgstr ":ttag:`block` dan :ttag:`extends`"

msgid ""
"Set up `template inheritance`_ (see below), a powerful way of cutting down "
"on \"boilerplate\" in templates."
msgstr ""

msgid ""
"Again, the above is only a selection of the whole list; see the :ref:`built-"
"in tag reference <ref-templates-builtins-tags>` for the complete list."
msgstr ""

msgid ""
"You can also create your own custom template tags; see :doc:`/howto/custom-"
"template-tags`."
msgstr ""

msgid "Comments"
msgstr "Komentar"

msgid ""
"To comment-out part of a line in a template, use the comment syntax: ``{# #}"
"``."
msgstr ""

msgid "For example, this template would render as ``'hello'``::"
msgstr ""

msgid "A comment can contain any template code, invalid or not. For example::"
msgstr ""

msgid ""
"This syntax can only be used for single-line comments (no newlines are "
"permitted between the ``{#`` and ``#}`` delimiters). If you need to comment "
"out a multiline portion of the template, see the :ttag:`comment` tag."
msgstr ""

msgid "Template inheritance"
msgstr ""

msgid ""
"The most powerful -- and thus the most complex -- part of Django's template "
"engine is template inheritance. Template inheritance allows you to build a "
"base \"skeleton\" template that contains all the common elements of your "
"site and defines **blocks** that child templates can override."
msgstr ""

msgid ""
"It's easiest to understand template inheritance by starting with an example::"
msgstr ""

msgid ""
"This template, which we'll call ``base.html``, defines a simple HTML "
"skeleton document that you might use for a simple two-column page. It's the "
"job of \"child\" templates to fill the empty blocks with content."
msgstr ""

msgid ""
"In this example, the :ttag:`block` tag defines three blocks that child "
"templates can fill in. All the :ttag:`block` tag does is to tell the "
"template engine that a child template may override those portions of the "
"template."
msgstr ""

msgid "A child template might look like this::"
msgstr ""

msgid ""
"The :ttag:`extends` tag is the key here. It tells the template engine that "
"this template \"extends\" another template. When the template system "
"evaluates this template, first it locates the parent -- in this case, \"base."
"html\"."
msgstr ""

msgid ""
"At that point, the template engine will notice the three :ttag:`block` tags "
"in ``base.html`` and replace those blocks with the contents of the child "
"template. Depending on the value of ``blog_entries``, the output might look "
"like::"
msgstr ""

msgid ""
"Note that since the child template didn't define the ``sidebar`` block, the "
"value from the parent template is used instead. Content within a ``{% block "
"%}`` tag in a parent template is always used as a fallback."
msgstr ""

msgid ""
"You can use as many levels of inheritance as needed. One common way of using "
"inheritance is the following three-level approach:"
msgstr ""

msgid ""
"Create a ``base.html`` template that holds the main look-and-feel of your "
"site."
msgstr ""

msgid ""
"Create a ``base_SECTIONNAME.html`` template for each \"section\" of your "
"site. For example, ``base_news.html``, ``base_sports.html``. These templates "
"all extend ``base.html`` and include section-specific styles/design."
msgstr ""

msgid ""
"Create individual templates for each type of page, such as a news article or "
"blog entry. These templates extend the appropriate section template."
msgstr ""

msgid ""
"This approach maximizes code reuse and makes it easy to add items to shared "
"content areas, such as section-wide navigation."
msgstr ""

msgid "Here are some tips for working with inheritance:"
msgstr ""

msgid ""
"If you use :ttag:`{% extends %}<extends>` in a template, it must be the "
"first template tag in that template. Template inheritance won't work, "
"otherwise."
msgstr ""

msgid ""
"More :ttag:`{% block %}<block>` tags in your base templates are better. "
"Remember, child templates don't have to define all parent blocks, so you can "
"fill in reasonable defaults in a number of blocks, then only define the ones "
"you need later. It's better to have more hooks than fewer hooks."
msgstr ""

msgid ""
"If you find yourself duplicating content in a number of templates, it "
"probably means you should move that content to a ``{% block %}`` in a parent "
"template."
msgstr ""

msgid ""
"If you need to get the content of the block from the parent template, the "
"``{{ block.super }}`` variable will do the trick. This is useful if you want "
"to add to the contents of a parent block instead of completely overriding "
"it. Data inserted using ``{{ block.super }}`` will not be automatically "
"escaped (see the `next section`_), since it was already escaped, if "
"necessary, in the parent template."
msgstr ""

msgid ""
"Variables created outside of a :ttag:`{% block %}<block>` using the template "
"tag ``as`` syntax can't be used inside the block. For example, this template "
"doesn't render anything::"
msgstr ""

msgid ""
"For extra readability, you can optionally give a *name* to your ``{% "
"endblock %}`` tag. For example::"
msgstr ""

msgid ""
"In larger templates, this technique helps you see which ``{% block %}`` tags "
"are being closed."
msgstr ""

msgid ""
"Finally, note that you can't define multiple :ttag:`block` tags with the "
"same name in the same template. This limitation exists because a block tag "
"works in \"both\" directions. That is, a block tag doesn't just provide a "
"hole to fill -- it also defines the content that fills the hole in the "
"*parent*. If there were two similarly-named :ttag:`block` tags in a "
"template, that template's parent wouldn't know which one of the blocks' "
"content to use."
msgstr ""

msgid "Automatic HTML escaping"
msgstr ""

msgid ""
"When generating HTML from templates, there's always a risk that a variable "
"will include characters that affect the resulting HTML. For example, "
"consider this template fragment::"
msgstr ""

msgid ""
"At first, this seems like a harmless way to display a user's name, but "
"consider what would happen if the user entered their name as this::"
msgstr ""

msgid "With this name value, the template would be rendered as::"
msgstr ""

msgid "...which means the browser would pop-up a JavaScript alert box!"
msgstr ""

msgid "Similarly, what if the name contained a ``'<'`` symbol, like this?"
msgstr ""

msgid "That would result in a rendered template like this::"
msgstr ""

msgid ""
"...which, in turn, would result in the remainder of the Web page being "
"bolded!"
msgstr ""

msgid ""
"Clearly, user-submitted data shouldn't be trusted blindly and inserted "
"directly into your Web pages, because a malicious user could use this kind "
"of hole to do potentially bad things. This type of security exploit is "
"called a `Cross Site Scripting`_ (XSS) attack."
msgstr ""

msgid "To avoid this problem, you have two options:"
msgstr ""

msgid ""
"One, you can make sure to run each untrusted variable through the :tfilter:"
"`escape` filter (documented below), which converts potentially harmful HTML "
"characters to unharmful ones. This was the default solution in Django for "
"its first few years, but the problem is that it puts the onus on *you*, the "
"developer / template author, to ensure you're escaping everything. It's easy "
"to forget to escape data."
msgstr ""

msgid ""
"Two, you can take advantage of Django's automatic HTML escaping. The "
"remainder of this section describes how auto-escaping works."
msgstr ""

msgid ""
"By default in Django, every template automatically escapes the output of "
"every variable tag. Specifically, these five characters are escaped:"
msgstr ""

msgid ""
"Again, we stress that this behavior is on by default. If you're using "
"Django's template system, you're protected."
msgstr ""

msgid "How to turn it off"
msgstr "Bagaimana mematikannya"

msgid ""
"If you don't want data to be auto-escaped, on a per-site, per-template level "
"or per-variable level, you can turn it off in several ways."
msgstr ""

msgid ""
"Why would you want to turn it off? Because sometimes, template variables "
"contain data that you *intend* to be rendered as raw HTML, in which case you "
"don't want their contents to be escaped. For example, you might store a blob "
"of HTML in your database and want to embed that directly into your template. "
"Or, you might be using Django's template system to produce text that is "
"*not* HTML -- like an email message, for instance."
msgstr ""

msgid "For individual variables"
msgstr "Untuk variabel-variabel tersendiri"

msgid ""
"To disable auto-escaping for an individual variable, use the :tfilter:`safe` "
"filter::"
msgstr ""

msgid ""
"Think of *safe* as shorthand for *safe from further escaping* or *can be "
"safely interpreted as HTML*. In this example, if ``data`` contains "
"``'<b>'``, the output will be::"
msgstr ""

msgid "For template blocks"
msgstr "Untuk cetakan blok"

msgid ""
"To control auto-escaping for a template, wrap the template (or just a "
"particular section of the template) in the :ttag:`autoescape` tag, like so::"
msgstr ""

msgid ""
"The :ttag:`autoescape` tag takes either ``on`` or ``off`` as its argument. "
"At times, you might want to force auto-escaping when it would otherwise be "
"disabled. Here is an example template::"
msgstr ""

msgid ""
"The auto-escaping tag passes its effect onto templates that extend the "
"current one as well as templates included via the :ttag:`include` tag, just "
"like all block tags. For example:"
msgstr ""

msgid ""
"Because auto-escaping is turned off in the base template, it will also be "
"turned off in the child template, resulting in the following rendered HTML "
"when the ``greeting`` variable contains the string ``<b>Hello!</b>``::"
msgstr ""

msgid ""
"Generally, template authors don't need to worry about auto-escaping very "
"much. Developers on the Python side (people writing views and custom "
"filters) need to think about the cases in which data shouldn't be escaped, "
"and mark data appropriately, so things Just Work in the template."
msgstr ""

msgid ""
"If you're creating a template that might be used in situations where you're "
"not sure whether auto-escaping is enabled, then add an :tfilter:`escape` "
"filter to any variable that needs escaping. When auto-escaping is on, "
"there's no danger of the :tfilter:`escape` filter *double-escaping* data -- "
"the :tfilter:`escape` filter does not affect auto-escaped variables."
msgstr ""

msgid "String literals and automatic escaping"
msgstr ""

msgid "As we mentioned earlier, filter arguments can be strings::"
msgstr ""

msgid ""
"All string literals are inserted **without** any automatic escaping into the "
"template -- they act as if they were all passed through the :tfilter:`safe` "
"filter. The reasoning behind this is that the template author is in control "
"of what goes into the string literal, so they can make sure the text is "
"correctly escaped when the template is written."
msgstr ""

msgid "This means you would write ::"
msgstr "Ini berarti anda akan menulis ::"

msgid "...rather than::"
msgstr "...daripada::"

msgid ""
"This doesn't affect what happens to data coming from the variable itself. "
"The variable's contents are still automatically escaped, if necessary, "
"because they're beyond the control of the template author."
msgstr ""

msgid "Accessing method calls"
msgstr "Mengakses panggilan metode"

msgid ""
"Most method calls attached to objects are also available from within "
"templates. This means that templates have access to much more than just "
"class attributes (like field names) and variables passed in from views. For "
"example, the Django ORM provides the :ref:`\"entry_set\"<topics-db-queries-"
"related>` syntax for finding a collection of objects related on a foreign "
"key. Therefore, given a model called \"comment\" with a foreign key "
"relationship to a model called \"task\" you can loop through all comments "
"attached to a given task like this::"
msgstr ""

msgid ""
"Similarly, :doc:`QuerySets</ref/models/querysets>` provide a ``count()`` "
"method to count the number of objects they contain. Therefore, you can "
"obtain a count of all comments related to the current task with::"
msgstr ""

msgid ""
"And of course you can easily access methods you've explicitly defined on "
"your own models:"
msgstr ""

msgid ""
"Because Django intentionally limits the amount of logic processing available "
"in the template language, it is not possible to pass arguments to method "
"calls accessed from within templates. Data should be calculated in views, "
"then passed to templates for display."
msgstr ""

msgid "Custom tag and filter libraries"
msgstr ""

msgid ""
"Certain applications provide custom tag and filter libraries. To access them "
"in a template, ensure the application is in :setting:`INSTALLED_APPS` (we'd "
"add ``'django.contrib.humanize'`` for this example), and then use the :ttag:"
"`load` tag in a template::"
msgstr ""

msgid ""
"In the above, the :ttag:`load` tag loads the ``humanize`` tag library, which "
"then makes the ``intcomma`` filter available for use. If you've enabled :mod:"
"`django.contrib.admindocs`, you can consult the documentation area in your "
"admin to find the list of custom libraries in your installation."
msgstr ""

msgid ""
"The :ttag:`load` tag can take multiple library names, separated by spaces. "
"Example::"
msgstr ""

msgid ""
"See :doc:`/howto/custom-template-tags` for information on writing your own "
"custom template libraries."
msgstr ""
"Lihat :doc:`/howto/custom-template-tags` untuk informasi pada menulis "
"pustaka cetakan penyesuaian anda sendiri."

msgid "Custom libraries and template inheritance"
msgstr "Pustaka-pustaka penyesuaian dan cetakan warisan"

msgid ""
"When you load a custom tag or filter library, the tags/filters are only made "
"available to the current template -- not any parent or child templates along "
"the template-inheritance path."
msgstr ""
"Ketika anda memuat sebuah etiket penyesuaian atau pustaka penyaring, etiket/"
"penyaring hanya membuat tersedia pada cetakan saat ini -- bukan cetakan "
"induk atau anak apapun bersama jalur warisan-cetakan."

msgid ""
"For example, if a template ``foo.html`` has ``{% load humanize %}``, a child "
"template (e.g., one that has ``{% extends \"foo.html\" %}``) will *not* have "
"access to the humanize template tags and filters. The child template is "
"responsible for its own ``{% load humanize %}``."
msgstr ""

msgid "This is a feature for the sake of maintainability and sanity."
msgstr ""

msgid ":doc:`The Templates Reference </ref/templates/index>`"
msgstr ":doc:`The Templates Reference </ref/templates/index>`"

msgid ""
"Covers built-in tags, built-in filters, using an alternative template, "
"language, and more."
msgstr ""

msgid "Upgrading templates to Django 1.8"
msgstr "Meningkatkan cetakan ke Django 1.8"

msgid ""
"Django's template system was overhauled in Django 1.8 when it gained support "
"for multiple template engines. This document complements the :doc:`release "
"notes </releases/1.8>` with detailed upgrade instructions on some topics."
msgstr ""

msgid "The :setting:`TEMPLATES` settings"
msgstr "Pengaturan :setting:`TEMPLATES`"

msgid ""
"A new setting was introduced in Django 1.8: :setting:`TEMPLATES`. All "
"existing template-related settings were deprecated."
msgstr ""

msgid ""
"During the deprecation period, Django will create a backwards-compatible :"
"setting:`TEMPLATES` based on the ``TEMPLATE_*`` settings if you don't define "
"it yourself."
msgstr ""

msgid "Here's how to define :setting:`TEMPLATES` in your settings module."
msgstr ""
"Disini bagaimana menentukan :setting:`TEMPLATES` dalam modul pengaturan anda."

msgid ""
"If you're using the default value of ``TEMPLATE_LOADERS``, that is, if it "
"isn't defined in your settings file or if it's set to::"
msgstr ""

msgid "then you should define :setting:`TEMPLATES` as follows::"
msgstr "kemudian anda harus menentukan :setting:`TEMPLATES` sebagai berikut::"

msgid ""
"If you aren't using the default value of ``TEMPLATE_LOADERS``, then you "
"should define :setting:`TEMPLATES` as follows::"
msgstr ""

msgid ""
"Furthermore you should replace ``django.core.context_processors`` with "
"``django.template.context_processors`` in the names of context processors."
msgstr ""

msgid ""
"If your settings module defines ``ALLOWED_INCLUDE_ROOTS`` or "
"``TEMPLATE_STRING_IF_INVALID``, include their values under the "
"``'allowed_include_roots'`` and ``'string_if_invalid'`` keys in the "
"``'OPTIONS'`` dictionary."
msgstr ""

msgid ""
"If it sets ``TEMPLATE_DEBUG`` to a value that differs from :setting:`DEBUG`, "
"include that value under the ``'debug'`` key in ``'OPTIONS'``."
msgstr ""

msgid ""
"Once you have defined :setting:`TEMPLATES`, you can safely remove "
"``ALLOWED_INCLUDE_ROOTS``, ``TEMPLATE_CONTEXT_PROCESSORS``, "
"``TEMPLATE_DEBUG``, ``TEMPLATE_DIRS``, ``TEMPLATE_LOADERS``, and "
"``TEMPLATE_STRING_IF_INVALID``."
msgstr ""

msgid ""
"If you are overriding some of these settings in tests, you should override "
"the entire :setting:`TEMPLATES` setting instead."
msgstr ""

msgid ":mod:`django.template.loader`"
msgstr ":mod:`django.template.loader`"

msgid ""
":func:`~django.template.loader.get_template` and :func:`~django.template."
"loader.select_template`"
msgstr ""
":func:`~django.template.loader.get_template` dan :func:`~django.template."
"loader.select_template`"

msgid ""
"In Django 1.8 :func:`~django.template.loader.get_template` and :func:"
"`~django.template.loader.select_template` return a backend-dependent "
"``Template`` instead of a :class:`django.template.Template`."
msgstr ""

msgid ""
"For example, if :func:`~django.template.loader.get_template` loads a "
"template with a :class:`~django.template.backends.django.DjangoTemplates` "
"backend, then it returns a ``django.template.backends.django.Template``."
msgstr ""

msgid ""
"``Template`` objects must provide a :meth:`~django.template.backends.base."
"Template.render` method whose signature differs slightly from the Django "
"template language's :meth:`~django.template.Template.render`."
msgstr ""

msgid "Instead of::"
msgstr "Daripada::"

msgid "You should write::"
msgstr "Anda harus menulis::"

msgid "And instead of::"
msgstr "Dan daripada::"

msgid ""
"Passing a :class:`~django.template.Context` or a :class:`~django.template."
"RequestContext` is still possible when the template is loaded by a :class:"
"`~django.template.backends.django.DjangoTemplates` backend but it's "
"deprecated and won't be supported in Django 1.10."
msgstr ""

msgid ""
"If you're loading a template while you're rendering another template with "
"the Django template language and you have access to the current context, for "
"instance in the ``render()`` method of a template tag, you can use the "
"current :class:`~django.template.Engine` directly. Instead of::"
msgstr ""

msgid "You can write::"
msgstr "Anda dapat menulis::"

msgid ""
"This will load the template with the current engine without triggering the "
"multiple template engines machinery, which is usually the desired behavior. "
"Unlike previous solutions, this returns a :class:`django.template.Template`, "
"like :func:`~django.template.loader.get_template` used to in Django 1.7 and "
"earlier, avoiding all backwards-compatibility problems."
msgstr ""

msgid "``get_template_from_string()``"
msgstr "``get_template_from_string()``"

msgid ""
"Private API ``get_template_from_string(template_code)`` was removed in "
"Django 1.8 because it had no way to choose an engine to compile the template."
msgstr ""

msgid "Three alternatives are available."
msgstr "Tiga jalan lain tersedia."

msgid ""
"If you control the project's setting, you can use one of the configured "
"engines::"
msgstr ""
"Jika anda mengendalikan pengaturan proyek, anda dapat menggunakan satu dari "
"mesin yang dikonfigurasikan::"

msgid "This returns a backend-dependent ``Template`` object."
msgstr ""

msgid ""
"For trivial templates that don't need context processors nor anything else, "
"you can create a bare-bones engine and use its ``from_string()`` method::"
msgstr ""

msgid ""
"This returns a :class:`django.template.Template` because :class:`~django."
"template.Engine` is part of the Django template language's APIs. The "
"multiple template engines machinery isn't involved here."
msgstr ""

msgid ""
"Finally, if you have access to the current context, you can use the same "
"trick as above::"
msgstr ""

msgid "``Template()``"
msgstr "``Template()``"

msgid ""
"To a lesser extent, instantiating a template with "
"``Template(template_code)`` suffers from the same issue as "
"``get_template_from_string()``."
msgstr ""

msgid ""
"It still works when the :setting:`TEMPLATES` setting defines exactly one :"
"class:`~django.template.backends.django.DjangoTemplates` backend, but "
"pluggable applications can't control this requirement."
msgstr ""

msgid ""
"The last two solutions described in the previous section are recommended in "
"that case."
msgstr ""
"Dua pemecahan terakhir digambarkan dalam bagian sebelumnya dianjurkan dalam "
"kasus itu."

msgid "Unicode data"
msgstr "Data Unicode"

msgid ""
"Django natively supports Unicode data everywhere. Providing your database "
"can somehow store the data, you can safely pass around Unicode strings to "
"templates, models and the database."
msgstr ""

msgid ""
"This document tells you what you need to know if you're writing applications "
"that use data or templates that are encoded in something other than ASCII."
msgstr ""

msgid "Creating the database"
msgstr "Membuat basisdata"

msgid ""
"Make sure your database is configured to be able to store arbitrary string "
"data. Normally, this means giving it an encoding of UTF-8 or UTF-16. If you "
"use a more restrictive encoding -- for example, latin1 (iso8859-1) -- you "
"won't be able to store certain characters in the database, and information "
"will be lost."
msgstr ""

msgid ""
"MySQL users, refer to the `MySQL manual`_ for details on how to set or alter "
"the database character set encoding."
msgstr ""

msgid ""
"PostgreSQL users, refer to the `PostgreSQL manual`_ (section 22.3.2 in "
"PostgreSQL 9) for details on creating databases with the correct encoding."
msgstr ""

msgid ""
"Oracle users, refer to the `Oracle manual`_ for details on how to set "
"(`section 2`_) or alter (`section 11`_) the database character set encoding."
msgstr ""

msgid ""
"SQLite users, there is nothing you need to do. SQLite always uses UTF-8 for "
"internal encoding."
msgstr ""

msgid ""
"All of Django's database backends automatically convert Unicode strings into "
"the appropriate encoding for talking to the database. They also "
"automatically convert strings retrieved from the database into Python "
"Unicode strings. You don't even need to tell Django what encoding your "
"database uses: that is handled transparently."
msgstr ""

msgid "For more, see the section \"The database API\" below."
msgstr "Untuk lebih, lihat bagian \"The database API\" dibawah."

msgid "General string handling"
msgstr ""

msgid ""
"Whenever you use strings with Django -- e.g., in database lookups, template "
"rendering or anywhere else -- you have two choices for encoding those "
"strings. You can use Unicode strings, or you can use normal strings "
"(sometimes called \"bytestrings\") that are encoded using UTF-8."
msgstr ""

msgid ""
"In Python 3, the logic is reversed, that is normal strings are Unicode, and "
"when you want to specifically create a bytestring, you have to prefix the "
"string with a 'b'. As we are doing in Django code from version 1.5, we "
"recommend that you import ``unicode_literals`` from the __future__ library "
"in your code. Then, when you specifically want to create a bytestring "
"literal, prefix the string with 'b'."
msgstr ""

msgid "Python 2 legacy::"
msgstr "Warisan Python2::"

msgid "Python 2 with unicode literals or Python 3::"
msgstr ""

msgid "See also :doc:`Python 3 compatibility </topics/python3>`."
msgstr "Lihat juga :doc:`Python 3 compatibility 1`."

msgid ""
"A bytestring does not carry any information with it about its encoding. For "
"that reason, we have to make an assumption, and Django assumes that all "
"bytestrings are in UTF-8."
msgstr ""

msgid ""
"If you pass a string to Django that has been encoded in some other format, "
"things will go wrong in interesting ways. Usually, Django will raise a "
"``UnicodeDecodeError`` at some point."
msgstr ""

msgid ""
"If your code only uses ASCII data, it's safe to use your normal strings, "
"passing them around at will, because ASCII is a subset of UTF-8."
msgstr ""

msgid ""
"Don't be fooled into thinking that if your :setting:`DEFAULT_CHARSET` "
"setting is set to something other than ``'utf-8'`` you can use that other "
"encoding in your bytestrings! :setting:`DEFAULT_CHARSET` only applies to the "
"strings generated as the result of template rendering (and email). Django "
"will always assume UTF-8 encoding for internal bytestrings. The reason for "
"this is that the :setting:`DEFAULT_CHARSET` setting is not actually under "
"your control (if you are the application developer). It's under the control "
"of the person installing and using your application -- and if that person "
"chooses a different setting, your code must still continue to work. Ergo, it "
"cannot rely on that setting."
msgstr ""

msgid ""
"In most cases when Django is dealing with strings, it will convert them to "
"Unicode strings before doing anything else. So, as a general rule, if you "
"pass in a bytestring, be prepared to receive a Unicode string back in the "
"result."
msgstr ""

msgid "Translated strings"
msgstr "String terjemahan"

msgid ""
"Aside from Unicode strings and bytestrings, there's a third type of string-"
"like object you may encounter when using Django. The framework's "
"internationalization features introduce the concept of a \"lazy translation"
"\" -- a string that has been marked as translated but whose actual "
"translation result isn't determined until the object is used in a string. "
"This feature is useful in cases where the translation locale is unknown "
"until the string is used, even though the string might have originally been "
"created when the code was first imported."
msgstr ""

msgid ""
"Normally, you won't have to worry about lazy translations. Just be aware "
"that if you examine an object and it claims to be a ``django.utils."
"functional.__proxy__`` object, it is a lazy translation. Calling "
"``unicode()`` with the lazy translation as the argument will generate a "
"Unicode string in the current locale."
msgstr ""

msgid ""
"For more details about lazy translation objects, refer to the :doc:"
"`internationalization </topics/i18n/index>` documentation."
msgstr ""

msgid "Useful utility functions"
msgstr "Fungsi-fungsi kegunaan berguna"

msgid ""
"Because some string operations come up again and again, Django ships with a "
"few useful functions that should make working with Unicode and bytestring "
"objects a bit easier."
msgstr ""

msgid "Conversion functions"
msgstr "Fungsi-fungsi perubahan"

msgid ""
"The ``django.utils.encoding`` module contains a few functions that are handy "
"for converting back and forth between Unicode and bytestrings."
msgstr ""

msgid ""
"``smart_text(s, encoding='utf-8', strings_only=False, errors='strict')`` "
"converts its input to a Unicode string. The ``encoding`` parameter specifies "
"the input encoding. (For example, Django uses this internally when "
"processing form input data, which might not be UTF-8 encoded.) The "
"``strings_only`` parameter, if set to True, will result in Python numbers, "
"booleans and ``None`` not being converted to a string (they keep their "
"original types). The ``errors`` parameter takes any of the values that are "
"accepted by Python's ``unicode()`` function for its error handling."
msgstr ""

msgid ""
"If you pass ``smart_text()`` an object that has a ``__unicode__`` method, it "
"will use that method to do the conversion."
msgstr ""

msgid ""
"``force_text(s, encoding='utf-8', strings_only=False, errors='strict')`` is "
"identical to ``smart_text()`` in almost all cases. The difference is when "
"the first argument is a :ref:`lazy translation <lazy-translations>` "
"instance. While ``smart_text()`` preserves lazy translations, "
"``force_text()`` forces those objects to a Unicode string (causing the "
"translation to occur). Normally, you'll want to use ``smart_text()``. "
"However, ``force_text()`` is useful in template tags and filters that "
"absolutely *must* have a string to work with, not just something that can be "
"converted to a string."
msgstr ""

msgid ""
"``smart_bytes(s, encoding='utf-8', strings_only=False, errors='strict')`` is "
"essentially the opposite of ``smart_text()``. It forces the first argument "
"to a bytestring. The ``strings_only`` parameter has the same behavior as for "
"``smart_text()`` and ``force_text()``. This is slightly different semantics "
"from Python's builtin ``str()`` function, but the difference is needed in a "
"few places within Django's internals."
msgstr ""

msgid ""
"Normally, you'll only need to use ``force_text()``. Call it as early as "
"possible on any input data that might be either Unicode or a bytestring, and "
"from then on, you can treat the result as always being Unicode."
msgstr ""

msgid "URI and IRI handling"
msgstr "Penanganan URI dan IRI"

msgid ""
"Web frameworks have to deal with URLs (which are a type of IRI_). One "
"requirement of URLs is that they are encoded using only ASCII characters. "
"However, in an international environment, you might need to construct a URL "
"from an IRI_ -- very loosely speaking, a URI_ that can contain Unicode "
"characters. Quoting and converting an IRI to URI can be a little tricky, so "
"Django provides some assistance."
msgstr ""

msgid ""
"The function :func:`django.utils.encoding.iri_to_uri()` implements the "
"conversion from IRI to URI as required by the specification (:rfc:"
"`3987#section-3.1`)."
msgstr ""
"Fungsi :func:`django.utils.encoding.iri_to_uri()` menerapkan perubahan dari "
"IRI ke URI sebagai diwajibkan oleh spesifikasi (:rfc:`3987#section-3.1`)."

msgid ""
"The functions :func:`django.utils.http.urlquote()` and :func:`django.utils."
"http.urlquote_plus()` are versions of Python's standard ``urllib.quote()`` "
"and ``urllib.quote_plus()`` that work with non-ASCII characters. (The data "
"is converted to UTF-8 prior to encoding.)"
msgstr ""

msgid ""
"These two groups of functions have slightly different purposes, and it's "
"important to keep them straight. Normally, you would use ``urlquote()`` on "
"the individual portions of the IRI or URI path so that any reserved "
"characters such as '&' or '%' are correctly encoded. Then, you apply "
"``iri_to_uri()`` to the full IRI and it converts any non-ASCII characters to "
"the correct encoded values."
msgstr ""

msgid ""
"Technically, it isn't correct to say that ``iri_to_uri()`` implements the "
"full algorithm in the IRI specification. It doesn't (yet) perform the "
"international domain name encoding portion of the algorithm."
msgstr ""

msgid ""
"The ``iri_to_uri()`` function will not change ASCII characters that are "
"otherwise permitted in a URL. So, for example, the character '%' is not "
"further encoded when passed to ``iri_to_uri()``. This means you can pass a "
"full URL to this function and it will not mess up the query string or "
"anything like that."
msgstr ""

msgid "An example might clarify things here::"
msgstr ""

msgid ""
"If you look carefully, you can see that the portion that was generated by "
"``urlquote()`` in the second example was not double-quoted when passed to "
"``iri_to_uri()``. This is a very important and useful feature. It means that "
"you can construct your IRI without worrying about whether it contains non-"
"ASCII characters and then, right at the end, call ``iri_to_uri()`` on the "
"result."
msgstr ""

msgid ""
"Similarly, Django provides :func:`django.utils.encoding.uri_to_iri()` which "
"implements the conversion from URI to IRI as per :rfc:`3987#section-3.2`. It "
"decodes all percent-encodings except those that don't represent a valid "
"UTF-8 sequence."
msgstr ""

msgid "An example to demonstrate::"
msgstr ""

msgid ""
"In the first example, the UTF-8 characters and reserved characters are "
"unquoted. In the second, the percent-encoding remains unchanged because it "
"lies outside the valid UTF-8 range."
msgstr ""

msgid ""
"Both ``iri_to_uri()`` and ``uri_to_iri()`` functions are idempotent, which "
"means the following is always true::"
msgstr ""

msgid ""
"So you can safely call it multiple times on the same URI/IRI without risking "
"double-quoting problems."
msgstr ""

msgid ""
"Because all strings are returned from the database as Unicode strings, model "
"fields that are character based (CharField, TextField, URLField, etc.) will "
"contain Unicode values when Django retrieves data from the database. This is "
"*always* the case, even if the data could fit into an ASCII bytestring."
msgstr ""

msgid ""
"You can pass in bytestrings when creating a model or populating a field, and "
"Django will convert it to Unicode when it needs to."
msgstr ""

msgid "Choosing between ``__str__()`` and ``__unicode__()``"
msgstr "Memilih diantara ``__str__()`` dan ``__unicode__()``"

msgid ""
"If you are on Python 3, you can skip this section because you'll always "
"create ``__str__()`` rather than ``__unicode__()``. If you'd like "
"compatibility with Python 2, you can decorate your model class with :func:"
"`~django.utils.encoding.python_2_unicode_compatible`."
msgstr ""

msgid ""
"One consequence of using Unicode by default is that you have to take some "
"care when printing data from the model."
msgstr ""

msgid ""
"In particular, rather than giving your model a ``__str__()`` method, we "
"recommended you implement a ``__unicode__()`` method. In the "
"``__unicode__()`` method, you can quite safely return the values of all your "
"fields without having to worry about whether they fit into a bytestring or "
"not. (The way Python works, the result of ``__str__()`` is *always* a "
"bytestring, even if you accidentally try to return a Unicode object)."
msgstr ""

msgid ""
"You can still create a ``__str__()`` method on your models if you want, of "
"course, but you shouldn't need to do this unless you have a good reason. "
"Django's ``Model`` base class automatically provides a ``__str__()`` "
"implementation that calls ``__unicode__()`` and encodes the result into "
"UTF-8. This means you'll normally only need to implement a ``__unicode__()`` "
"method and let Django handle the coercion to a bytestring when required."
msgstr ""

msgid "Taking care in ``get_absolute_url()``"
msgstr "Merawat di ``get_absolute_url()``"

msgid ""
"URLs can only contain ASCII characters. If you're constructing a URL from "
"pieces of data that might be non-ASCII, be careful to encode the results in "
"a way that is suitable for a URL. The :func:`~django.urls.reverse` function "
"handles this for you automatically."
msgstr ""

msgid ""
"If you're constructing a URL manually (i.e., *not* using the ``reverse()`` "
"function), you'll need to take care of the encoding yourself. In this case, "
"use the ``iri_to_uri()`` and ``urlquote()`` functions that were documented "
"above_. For example::"
msgstr ""

msgid ""
"This function returns a correctly encoded URL even if ``self.location`` is "
"something like \"Jack visited Paris & Orléans\". (In fact, the "
"``iri_to_uri()`` call isn't strictly necessary in the above example, because "
"all the non-ASCII characters would have been removed in quoting in the first "
"line.)"
msgstr ""

msgid "The database API"
msgstr "API basisdata"

msgid ""
"You can pass either Unicode strings or UTF-8 bytestrings as arguments to "
"``filter()`` methods and the like in the database API. The following two "
"querysets are identical::"
msgstr ""

msgid ""
"You can use either Unicode or bytestrings when creating templates manually::"
msgstr ""

msgid ""
"But the common case is to read templates from the filesystem, and this "
"creates a slight complication: not all filesystems store their data encoded "
"as UTF-8. If your template files are not stored with a UTF-8 encoding, set "
"the :setting:`FILE_CHARSET` setting to the encoding of the files on disk. "
"When Django reads in a template file, it will convert the data from this "
"encoding to Unicode. (:setting:`FILE_CHARSET` is set to ``'utf-8'`` by "
"default.)"
msgstr ""

msgid ""
"The :setting:`DEFAULT_CHARSET` setting controls the encoding of rendered "
"templates. This is set to UTF-8 by default."
msgstr ""

msgid "Template tags and filters"
msgstr ""

msgid ""
"A couple of tips to remember when writing your own template tags and filters:"
msgstr ""

msgid ""
"Always return Unicode strings from a template tag's ``render()`` method and "
"from template filters."
msgstr ""

msgid ""
"Use ``force_text()`` in preference to ``smart_text()`` in these places. Tag "
"rendering and filter calls occur as the template is being rendered, so there "
"is no advantage to postponing the conversion of lazy translation objects "
"into strings. It's easier to work solely with Unicode strings at that point."
msgstr ""

msgid "Files"
msgstr "Berkas"

msgid ""
"If you intend to allow users to upload files, you must ensure that the "
"environment used to run Django is configured to work with non-ASCII file "
"names. If your environment isn't configured correctly, you'll encounter "
"``UnicodeEncodeError`` exceptions when saving files with file names that "
"contain non-ASCII characters."
msgstr ""

msgid ""
"Filesystem support for UTF-8 file names varies and might depend on the "
"environment. Check your current configuration in an interactive Python shell "
"by running::"
msgstr ""

msgid "This should output \"UTF-8\"."
msgstr "Ini harusnya mengeluarkan \"UTF-8\"."

msgid ""
"The ``LANG`` environment variable is responsible for setting the expected "
"encoding on Unix platforms. Consult the documentation for your operating "
"system and application server for the appropriate syntax and location to set "
"this variable."
msgstr ""
"Variabel lingkungan ``LANG`` bertanggungjawab untuk mengatur penyandian "
"diharapkan pada serambi Unix. Diskusikan dokumentasi untuk sistem operasi "
"anda dan peladen aplikasi untuk sintaksis yang sesuai dan tempat untuk "
"menyetel variabel ini."

msgid ""
"In your development environment, you might need to add a setting to your ``~."
"bashrc`` analogous to:::"
msgstr ""

msgid ""
"Django's email framework (in ``django.core.mail``) supports Unicode "
"transparently. You can use Unicode data in the message bodies and any "
"headers. However, you're still obligated to respect the requirements of the "
"email specifications, so, for example, email addresses should use only ASCII "
"characters."
msgstr ""

msgid ""
"The following code example demonstrates that everything except email "
"addresses can be non-ASCII::"
msgstr ""

msgid "Form submission"
msgstr "Pengajuan formulir"

msgid ""
"HTML form submission is a tricky area. There's no guarantee that the "
"submission will include encoding information, which means the framework "
"might have to guess at the encoding of submitted data."
msgstr ""

msgid ""
"Django adopts a \"lazy\" approach to decoding form data. The data in an "
"``HttpRequest`` object is only decoded when you access it. In fact, most of "
"the data is not decoded at all. Only the ``HttpRequest.GET`` and "
"``HttpRequest.POST`` data structures have any decoding applied to them. "
"Those two fields will return their members as Unicode data. All other "
"attributes and methods of ``HttpRequest`` return data exactly as it was "
"submitted by the client."
msgstr ""

msgid ""
"By default, the :setting:`DEFAULT_CHARSET` setting is used as the assumed "
"encoding for form data. If you need to change this for a particular form, "
"you can set the ``encoding`` attribute on an ``HttpRequest`` instance. For "
"example::"
msgstr ""

msgid ""
"You can even change the encoding after having accessed ``request.GET`` or "
"``request.POST``, and all subsequent accesses will use the new encoding."
msgstr ""

msgid ""
"Most developers won't need to worry about changing form encoding, but this "
"is a useful feature for applications that talk to legacy systems whose "
"encoding you cannot control."
msgstr ""

msgid ""
"Django does not decode the data of file uploads, because that data is "
"normally treated as collections of bytes, rather than strings. Any automatic "
"decoding there would alter the meaning of the stream of bytes."
msgstr ""

msgid "``django.urls`` utility functions"
msgstr "Fungsi-fungsi kegunaan ``django.urls``"

msgid ""
"In older versions, these functions are located in ``django.core."
"urlresolvers``. Importing from the old location will continue to work until "
"Django 2.0."
msgstr ""

msgid ""
"If you need to use something similar to the :ttag:`url` template tag in your "
"code, Django provides the following function:"
msgstr ""

msgid ""
"``viewname`` can be a :ref:`URL pattern name <naming-url-patterns>` or the "
"callable view object. For example, given the following ``url``::"
msgstr ""

msgid "you can use any of the following to reverse the URL::"
msgstr ""

msgid ""
"If the URL accepts arguments, you may pass them in ``args``. For example::"
msgstr ""

msgid "You can also pass ``kwargs`` instead of ``args``. For example::"
msgstr ""

msgid ""
"``args`` and ``kwargs`` cannot be passed to ``reverse()`` at the same time."
msgstr ""

msgid ""
"If no match can be made, ``reverse()`` raises a :class:`~django.urls."
"NoReverseMatch` exception."
msgstr ""

msgid ""
"The ``reverse()`` function can reverse a large variety of regular expression "
"patterns for URLs, but not every possible one. The main restriction at the "
"moment is that the pattern cannot contain alternative choices using the "
"vertical bar (``\"|\"``) character. You can quite happily use such patterns "
"for matching against incoming URLs and sending them off to views, but you "
"cannot reverse such patterns."
msgstr ""

msgid ""
"The ``current_app`` argument allows you to provide a hint to the resolver "
"indicating the application to which the currently executing view belongs. "
"This ``current_app`` argument is used as a hint to resolve application "
"namespaces into URLs on specific application instances, according to the :"
"ref:`namespaced URL resolution strategy <topics-http-reversing-url-"
"namespaces>`."
msgstr ""

msgid ""
"The ``urlconf`` argument is the URLconf module containing the URL patterns "
"to use for reversing. By default, the root URLconf for the current thread is "
"used."
msgstr ""

msgid ""
"The string returned by ``reverse()`` is already :ref:`urlquoted <uri-and-iri-"
"handling>`. For example::"
msgstr ""

msgid ""
"Applying further encoding (such as :meth:`~django.utils.http.urlquote` or "
"``urllib.quote``) to the output of ``reverse()`` may produce undesirable "
"results."
msgstr ""

msgid "``reverse_lazy()``"
msgstr "``reverse_lazy()``"

msgid "A lazily evaluated version of `reverse()`_."
msgstr ""

msgid ""
"It is useful for when you need to use a URL reversal before your project's "
"URLConf is loaded. Some common cases where this function is necessary are:"
msgstr ""

msgid ""
"providing a reversed URL as the ``url`` attribute of a generic class-based "
"view."
msgstr ""

msgid ""
"providing a reversed URL to a decorator (such as the ``login_url`` argument "
"for the :func:`django.contrib.auth.decorators.permission_required` "
"decorator)."
msgstr ""

msgid ""
"providing a reversed URL as a default value for a parameter in a function's "
"signature."
msgstr ""

msgid "``resolve()``"
msgstr "``resolve()``"

msgid ""
"The ``resolve()`` function can be used for resolving URL paths to the "
"corresponding view functions. It has the following signature:"
msgstr ""

msgid ""
"``path`` is the URL path you want to resolve. As with :func:`~django.urls."
"reverse`, you don't need to worry about the ``urlconf`` parameter. The "
"function returns a :class:`ResolverMatch` object that allows you to access "
"various metadata about the resolved URL."
msgstr ""

msgid ""
"If the URL does not resolve, the function raises a :exc:`~django.urls."
"Resolver404` exception (a subclass of :class:`~django.http.Http404`) ."
msgstr ""

msgid "The view function that would be used to serve the URL"
msgstr ""

msgid ""
"The arguments that would be passed to the view function, as parsed from the "
"URL."
msgstr ""

msgid ""
"The keyword arguments that would be passed to the view function, as parsed "
"from the URL."
msgstr ""

msgid "The name of the URL pattern that matches the URL."
msgstr ""

msgid "The application namespace for the URL pattern that matches the URL."
msgstr ""

msgid ""
"The list of individual namespace components in the full application "
"namespace for the URL pattern that matches the URL. For example, if the "
"``app_name`` is ``'foo:bar'``, then ``app_names`` will be ``['foo', 'bar']``."
msgstr ""

msgid "The instance namespace for the URL pattern that matches the URL."
msgstr ""

msgid ""
"The list of individual namespace components in the full instance namespace "
"for the URL pattern that matches the URL. i.e., if the namespace is ``foo:"
"bar``, then namespaces will be ``['foo', 'bar']``."
msgstr ""

msgid ""
"The name of the view that matches the URL, including the namespace if there "
"is one."
msgstr ""

msgid ""
"A :class:`ResolverMatch` object can then be interrogated to provide "
"information about the URL pattern that matches a URL::"
msgstr ""

msgid "A :class:`ResolverMatch` object can also be assigned to a triple::"
msgstr ""

msgid ""
"One possible use of :func:`~django.urls.resolve` would be to test whether a "
"view would raise a ``Http404`` error before redirecting to it::"
msgstr ""

msgid "``get_script_prefix()``"
msgstr "``get_script_prefix()``"

msgid ""
"Normally, you should always use :func:`~django.urls.reverse` to define URLs "
"within your application. However, if your application constructs part of the "
"URL hierarchy itself, you may occasionally need to generate URLs. In that "
"case, you need to be able to find the base URL of the Django project within "
"its Web server (normally, :func:`~django.urls.reverse` takes care of this "
"for you). In that case, you can call ``get_script_prefix()``, which will "
"return the script prefix portion of the URL for your Django project. If your "
"Django project is at the root of its web server, this is always ``\"/\"``."
msgstr ""

msgid "``django.conf.urls`` utility functions"
msgstr "Fungsi-fungsi kegunaan ``django.conf.urls``"

msgid "``static()``"
msgstr "``static()``"

msgid ""
"Helper function to return a URL pattern for serving files in debug mode::"
msgstr ""

msgid "``url()``"
msgstr "``url()``"

msgid "``urlpatterns`` should be a list of ``url()`` instances. For example::"
msgstr ""

msgid ""
"The ``regex`` parameter should be a string or :func:`~django.utils."
"translation.ugettext_lazy()` (see :ref:`translating-urlpatterns`) that "
"contains a regular expression compatible with Python's :py:mod:`re` module. "
"Strings typically use raw string syntax (``r''``) so that they can contain "
"sequences like ``\\d`` without the need to escape the backslash with another "
"backslash."
msgstr ""
"Parameter ``regex`` harus berupa string atau :func:`~django.utils."
"translation.ugettext_lazy()` (lihat :ref:`translating-urlpatterns`) yang "
"mengandung kecocokan regular expression dengan modul :py:mod:`re` Python. "
"String khususnya menggunakan sintaksis string mentah (``r''``) sehingga "
"mereka dapat mengandung urutan seperti ``\\d`` tanpa butuh meloloskan garis "
"miring dengan garis miring lain. "

msgid ""
"The ``view`` parameter is a view function or the result of :meth:`~django."
"views.generic.base.View.as_view` for class-based views. It can also be an :"
"func:`include`."
msgstr ""

msgid ""
"The ``kwargs`` parameter allows you to pass additional arguments to the view "
"function or method. See :ref:`views-extra-options` for an example."
msgstr ""

msgid ""
"See :ref:`Naming URL patterns <naming-url-patterns>` for why the ``name`` "
"parameter is useful."
msgstr ""

msgid "``include()``"
msgstr "``include()``"

msgid ""
"A function that takes a full Python import path to another URLconf module "
"that should be \"included\" in this place. Optionally, the :term:"
"`application namespace` and :term:`instance namespace` where the entries "
"will be included into can also be specified."
msgstr ""

msgid ""
"Usually, the application namespace should be specified by the included "
"module. If an application namespace is set, the ``namespace`` argument can "
"be used to set a different instance namespace."
msgstr ""

msgid ""
"``include()`` also accepts as an argument either an iterable that returns "
"URL patterns, a 2-tuple containing such iterable plus the names of the "
"application namespaces, or a 3-tuple containing the iterable and the names "
"of both the application and instance namespace."
msgstr ""

msgid "URLconf module (or module name)"
msgstr ""

msgid "Instance namespace for the URL entries being included"
msgstr ""

msgid "Application namespace for the URL entries being included"
msgstr ""

msgid "Iterable of :func:`django.conf.urls.url` instances"
msgstr ""

msgid "See :ref:`including-other-urlconfs` and :ref:`namespaces-and-include`."
msgstr ""

msgid ""
"Support for the ``app_name`` argument is deprecated and will be removed in "
"Django 2.0. Specify the ``app_name`` as explained in :ref:`namespaces-and-"
"include` instead."
msgstr ""

msgid ""
"Support for passing a 3-tuple is also deprecated and will be removed in "
"Django 2.0. Pass a 2-tuple containing the pattern list and application "
"namespace, and use the ``namespace`` argument instead."
msgstr ""

msgid ""
"Lastly, support for an instance namespace without an application namespace "
"has been deprecated and will be removed in Django 2.0. Specify the "
"application namespace or remove the instance namespace."
msgstr ""

msgid "``handler400``"
msgstr "``handler400``"

msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if the HTTP client has sent a request that caused an "
"error condition and a response with a status code of 400."
msgstr ""

msgid ""
"By default, this is ``'django.views.defaults.bad_request'``. If you "
"implement a custom view, be sure it returns an :class:`~django.http."
"HttpResponseBadRequest`."
msgstr ""

msgid ""
"See the documentation about :ref:`the 400 (bad request) view "
"<http_bad_request_view>` for more information."
msgstr ""

msgid "``handler403``"
msgstr "``handler403``"

msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if the user doesn't have the permissions required to "
"access a resource."
msgstr ""

msgid ""
"By default, this is ``'django.views.defaults.permission_denied'``. If you "
"implement a custom view, be sure it returns an :class:`~django.http."
"HttpResponseForbidden`."
msgstr ""

msgid ""
"See the documentation about :ref:`the 403 (HTTP Forbidden) view "
"<http_forbidden_view>` for more information."
msgstr ""

msgid "``handler404``"
msgstr "``handler404``"

msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if none of the URL patterns match."
msgstr ""

msgid ""
"By default, this is ``'django.views.defaults.page_not_found'``. If you "
"implement a custom view, be sure it returns an :class:`~django.http."
"HttpResponseNotFound`."
msgstr ""

msgid ""
"See the documentation about :ref:`the 404 (HTTP Not Found) view "
"<http_not_found_view>` for more information."
msgstr ""

msgid "``handler500``"
msgstr "``handler500``"

msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called in case of server errors. Server errors happen when "
"you have runtime errors in view code."
msgstr ""

msgid ""
"By default, this is ``'django.views.defaults.server_error'``. If you "
"implement a custom view, be sure it returns an :class:`~django.http."
"HttpResponseServerError`."
msgstr ""

msgid ""
"See the documentation about :ref:`the 500 (HTTP Internal Server Error) view "
"<http_internal_server_error_view>` for more information."
msgstr ""

msgid "Django Utils"
msgstr "Perlengkapan Django"

msgid ""
"This document covers all stable modules in ``django.utils``. Most of the "
"modules in ``django.utils`` are designed for internal use and only the "
"following parts can be considered stable and thus backwards compatible as "
"per the :ref:`internal release deprecation policy <internal-release-"
"deprecation-policy>`."
msgstr ""

msgid "``django.utils.cache``"
msgstr ""

msgid ""
"This module contains helper functions for controlling caching. It does so by "
"managing the ``Vary`` header of responses. It includes functions to patch "
"the header of response objects directly and decorators that change functions "
"to do that header-patching themselves."
msgstr ""

msgid "For information on the ``Vary`` header, see :rfc:`7231#section-7.1.4`."
msgstr ""

msgid ""
"Essentially, the ``Vary`` HTTP header defines which headers a cache should "
"take into account when building its cache key. Requests with the same path "
"but different header content for headers named in ``Vary`` need to get "
"different cache keys to prevent delivery of wrong content."
msgstr ""

msgid ""
"For example, :doc:`internationalization </topics/i18n/index>` middleware "
"would need to distinguish caches by the ``Accept-language`` header."
msgstr ""

msgid ""
"This function patches the ``Cache-Control`` header by adding all keyword "
"arguments to it. The transformation is as follows:"
msgstr ""

msgid ""
"All keyword parameter names are turned to lowercase, and underscores are "
"converted to hyphens."
msgstr ""

msgid ""
"If the value of a parameter is ``True`` (exactly ``True``, not just a true "
"value), only the parameter name is added to the header."
msgstr ""

msgid ""
"All other parameters are added with their value, after applying ``str()`` to "
"it."
msgstr ""

msgid ""
"Returns the max-age from the response Cache-Control header as an integer (or "
"``None`` if it wasn't found or wasn't an integer)."
msgstr ""

msgid "Adds some useful headers to the given ``HttpResponse`` object:"
msgstr ""

msgid "``ETag``"
msgstr "``ETag``"

msgid "``Expires``"
msgstr "``Expires``"

msgid "``Cache-Control``"
msgstr "``Cache-Control``"

msgid "Each header is only added if it isn't already set."
msgstr ""

msgid ""
"``cache_timeout`` is in seconds. The :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting is used by default."
msgstr ""

msgid "In older versions, the ``Last-Modified`` header was also set."
msgstr "Dalam versi terlamam, kepala ``Last-Modified`` juga disetel."

msgid ""
"Since the ``USE_ETAGS`` setting is deprecated, this function won't set the "
"``ETag`` header when the deprecation ends in Django 2.1."
msgstr ""

msgid ""
"Adds a ``Cache-Control: max-age=0, no-cache, no-store, must-revalidate`` "
"header to a response to indicate that a page should never be cached."
msgstr ""

msgid ""
"Adds (or updates) the ``Vary`` header in the given ``HttpResponse`` object. "
"``newheaders`` is a list of header names that should be in ``Vary``. "
"Existing headers in ``Vary`` aren't removed."
msgstr ""

msgid ""
"Returns a cache key based on the request path. It can be used in the request "
"phase because it pulls the list of headers to take into account from the "
"global path registry and uses those to build a cache key to check against."
msgstr ""
"Mengembalikan sebuah kunci cache pada jalur permintaan. Itu dapat digunakan "
"di tahapan permintaan karena itu mengambil daftar dari kepala untuk diambil "
"kedalam akun dari registrar jalur global dan menggunakan mereka untuk "
"membangun sebuah kunci cache untuk memeriksa."

msgid ""
"If there is no headerlist stored, the page needs to be rebuilt, so this "
"function returns ``None``."
msgstr ""

msgid ""
"Learns what headers to take into account for some request path from the "
"response object. It stores those headers in a global path registry so that "
"later access to that path will know what headers to take into account "
"without building the response object itself. The headers are named in the "
"``Vary`` header of the response, but we want to prevent response generation."
msgstr ""

msgid ""
"The list of headers to use for cache key generation is stored in the same "
"cache as the pages themselves. If the cache ages some data out of the cache, "
"this just means that we have to build the response once to get at the Vary "
"header and so at the list of headers to use for the cache key."
msgstr ""

msgid "``django.utils.dateparse``"
msgstr "``django.utils.dateparse``"

msgid "The functions defined in this module share the following properties:"
msgstr ""

msgid ""
"They raise :exc:`ValueError` if their input is well formatted but isn't a "
"valid date or time."
msgstr ""

msgid "They return ``None`` if it isn't well formatted at all."
msgstr ""

msgid ""
"They accept up to picosecond resolution in input, but they truncate it to "
"microseconds, since that's what Python supports."
msgstr ""

msgid "Parses a string and returns a :class:`datetime.date`."
msgstr "Mengurai string dan mengembalikan :class:`datetime.date`."

msgid "Parses a string and returns a :class:`datetime.time`."
msgstr "Mengurai string dan mengembalikan :class:`datetime.time`."

msgid ""
"UTC offsets aren't supported; if ``value`` describes one, the result is "
"``None``."
msgstr ""

msgid "Parses a string and returns a :class:`datetime.datetime`."
msgstr "Mengurai string dan mengembalikan :class:`datetime.datetime`."

msgid ""
"UTC offsets are supported; if ``value`` describes one, the result's "
"``tzinfo`` attribute is a :class:`~django.utils.timezone.FixedOffset` "
"instance."
msgstr ""

msgid "Parses a string and returns a :class:`datetime.timedelta`."
msgstr "Mengurai string dan mengembalikan :class:`datetime.timedelta`."

msgid ""
"Expects data in the format ``\"DD HH:MM:SS.uuuuuu\"`` or as specified by ISO "
"8601 (e.g. ``P4DT1H15M20S`` which is equivalent to ``4 1:15:20``)."
msgstr ""

msgid "``django.utils.decorators``"
msgstr "``django.utils.decorators``"

msgid ""
"Converts a function decorator into a method decorator. It can be used to "
"decorate methods or classes; in the latter case, ``name`` is the name of the "
"method to be decorated and is required."
msgstr ""

msgid ""
"``decorator`` may also be a list or tuple of functions. They are wrapped in "
"reverse order so that the call order is the order in which the functions "
"appear in the list/tuple."
msgstr ""

msgid ""
"See :ref:`decorating class based views <decorating-class-based-views>` for "
"example usage."
msgstr ""
"Lihat :ref:`decorating class based views <decorating-class-based-views>` "
"untuk contoh penggunaan."

msgid ""
"Given a middleware class, returns a view decorator. This lets you use "
"middleware functionality on a per-view basis. The middleware is created with "
"no params passed."
msgstr ""

msgid ""
"It assumes middleware that's compatible with the old style of Django 1.9 and "
"earlier (having methods like ``process_request()``, ``process_exception()``, "
"and ``process_response()``)."
msgstr ""

msgid ""
"Like ``decorator_from_middleware``, but returns a function that accepts the "
"arguments to be passed to the middleware_class. For example, the :func:"
"`~django.views.decorators.cache.cache_page` decorator is created from the "
"``CacheMiddleware`` like this::"
msgstr ""

msgid "``django.utils.encoding``"
msgstr "``django.utils.encoding``"

msgid ""
"A decorator that defines ``__unicode__`` and ``__str__`` methods under "
"Python 2. Under Python 3 it does nothing."
msgstr ""

msgid ""
"To support Python 2 and 3 with a single code base, define a ``__str__`` "
"method returning text (use ``six.text_type()`` if you're doing some casting) "
"and apply this decorator to the class."
msgstr ""

msgid ""
"Returns a text object representing ``s`` -- ``unicode`` on Python 2 and "
"``str`` on Python 3. Treats bytestrings using the ``encoding`` codec."
msgstr ""

msgid ""
"If ``strings_only`` is ``True``, don't convert (some) non-string-like "
"objects."
msgstr ""

msgid "Historical name of :func:`smart_text`. Only available under Python 2."
msgstr ""

msgid "Determine if the object instance is of a protected type."
msgstr "Tentukan jika instance obyek adalah jenis dilindungi."

msgid ""
"Objects of protected types are preserved as-is when passed to "
"``force_text(strings_only=True)``."
msgstr ""

msgid ""
"Similar to ``smart_text``, except that lazy instances are resolved to "
"strings, rather than kept as lazy objects."
msgstr ""

msgid "Historical name of :func:`force_text`. Only available under Python 2."
msgstr ""

msgid ""
"Returns a bytestring version of ``s``, encoded as specified in ``encoding``."
msgstr ""

msgid ""
"Similar to ``smart_bytes``, except that lazy instances are resolved to "
"bytestrings, rather than kept as lazy objects."
msgstr ""

msgid ""
"Alias of :func:`smart_bytes` on Python 2 and :func:`smart_text` on Python 3. "
"This function returns a ``str`` or a lazy string."
msgstr ""

msgid ""
"For instance, this is  suitable for writing to :data:`sys.stdout` on Python "
"2 and 3."
msgstr ""

msgid ""
"Alias of :func:`force_bytes` on Python 2 and :func:`force_text` on Python 3. "
"This function always returns a ``str``."
msgstr ""

msgid ""
"Convert an Internationalized Resource Identifier (IRI) portion to a URI "
"portion that is suitable for inclusion in a URL."
msgstr ""

msgid ""
"This is the algorithm from section 3.1 of :rfc:`3987#section-3.1`. However, "
"since we are assuming input is either UTF-8 or unicode already, we can "
"simplify things a little from the full method."
msgstr ""

msgid ""
"Takes an IRI in UTF-8 bytes and returns ASCII bytes containing the encoded "
"result."
msgstr ""

msgid ""
"Converts a Uniform Resource Identifier into an Internationalized Resource "
"Identifier."
msgstr ""
"Merubah Uniform Resource Identifier menjadi Internationalized Resource "
"Identifier."

msgid "This is an algorithm from section 3.2 of :rfc:`3987#section-3.2`."
msgstr ""
"Ini adalah sebuah algoritma dari bagian 3.2 dari :rfc:`3987#section-3.2`."

msgid ""
"Takes a URI in ASCII bytes and returns a unicode string containing the "
"encoded result."
msgstr ""

msgid ""
"Convert a file system path to a URI portion that is suitable for inclusion "
"in a URL. The path is assumed to be either UTF-8 or unicode."
msgstr ""

msgid ""
"This method will encode certain characters that would normally be recognized "
"as special characters for URIs.  Note that this method does not encode the ' "
"character, as it is a valid character within URIs. See "
"``encodeURIComponent()`` JavaScript function for more details."
msgstr ""

msgid "Returns an ASCII string containing the encoded result."
msgstr ""

msgid ""
"Escapes the unsafe characters from the path portion of a Uniform Resource "
"Identifier (URI)."
msgstr ""

msgid "``django.utils.feedgenerator``"
msgstr "``django.utils.feedgenerator``"

msgid ""
"For simplifying the selection of a generator use ``feedgenerator."
"DefaultFeed`` which is currently ``Rss201rev2Feed``"
msgstr ""

msgid ""
"For definitions of the different versions of RSS, see: https://web.archive."
"org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/"
"incompatible-rss"
msgstr ""
"Untuk pengertian dari versi berbeda dari RSS, lihat https://web.archive.org/"
"web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-"
"rss"

msgid "Creates a TagURI."
msgstr "Membuat TagURI."

msgid ""
"See https://web.archive.org/web/20110514113830/http://diveintomark.org/"
"archives/2004/05/28/howto-atom-id"
msgstr ""

msgid "``SyndicationFeed``"
msgstr "``SyndicationFeed``"

msgid ""
"Base class for all syndication feeds. Subclasses should provide write()."
msgstr ""

msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed."
msgstr ""

msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed``."
msgstr ""

msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects."
msgstr ""

msgid ""
"Adds an item to the feed. All args are expected to be Python ``unicode`` "
"objects except ``pubdate`` and ``updateddate``, which are ``datetime."
"datetime`` objects, ``enclosure``, which is an ``Enclosure`` instance, and "
"``enclosures``, which is a list of ``Enclosure`` instances."
msgstr ""

msgid ""
"The ``enclosure`` keyword argument is deprecated in favor of the new "
"``enclosures`` keyword argument which accepts a list of ``Enclosure`` "
"objects."
msgstr ""

msgid ""
"Return extra attributes to place on the root (i.e. feed/channel) element. "
"Called from ``write()``."
msgstr ""

msgid ""
"Add elements in the root (i.e. feed/channel) element. Called from "
"``write()``."
msgstr ""

msgid ""
"Return extra attributes to place on each item (i.e. item/entry) element."
msgstr ""

msgid "Add elements on each item (i.e. item/entry) element."
msgstr ""

msgid ""
"Outputs the feed in the given encoding to ``outfile``, which is a file-like "
"object. Subclasses should override this."
msgstr ""

msgid "Returns the feed in the given encoding as a string."
msgstr ""

msgid ""
"Returns the latest ``pubdate`` or ``updateddate`` for all items in the feed. "
"If no items have either of these attributes this returns the current UTC "
"date/time."
msgstr ""

msgid ""
"In older versions, it returned the current date/time without any timezone "
"information."
msgstr ""

msgid "``Enclosure``"
msgstr "``Enclosure``"

msgid "Represents an RSS enclosure"
msgstr "Mewakili sebuah lampiran RSS"

msgid "``RssFeed``"
msgstr "``RssFeed``"

msgid "``Rss201rev2Feed``"
msgstr ""

msgid "Spec: https://cyber.harvard.edu/rss/rss.html"
msgstr "Specifikasi: https://cyber.harvard.edu/rss/rss.html"

msgid "``RssUserland091Feed``"
msgstr "``RssUserland091Feed``"

msgid "Spec: http://backend.userland.com/rss091"
msgstr "Spesifikasi: http://backend.userland.com/rss091"

msgid "``Atom1Feed``"
msgstr "``Atom1Feed``"

msgid "Spec: https://tools.ietf.org/html/rfc4287"
msgstr "Spesifikasi: https://tools.ietf.org/html/rfc4287"

msgid "``django.utils.functional``"
msgstr "``django.utils.functional``"

msgid ""
"The ``@cached_property`` decorator caches the result of a method with a "
"single ``self`` argument as a property. The cached result will persist as "
"long as the instance does, so if the instance is passed around and the "
"function subsequently invoked, the cached result will be returned."
msgstr ""

msgid ""
"Consider a typical case, where a view might need to call a model's method to "
"perform some computation, before placing the model instance into the "
"context, where the template might invoke the method once more::"
msgstr ""

msgid "And in the template you would have:"
msgstr "Dan dalam cetakan anda akan miliki:"

msgid ""
"Here, ``friends()`` will be called twice. Since the instance ``person`` in "
"the view and the template are the same, ``@cached_property`` can avoid that::"
msgstr ""

msgid ""
"Note that as the method is now a property, in Python code it will need to be "
"invoked appropriately::"
msgstr ""

msgid ""
"The cached value can be treated like an ordinary attribute of the instance::"
msgstr ""

msgid ""
"As well as offering potential performance advantages, ``@cached_property`` "
"can ensure that an attribute's value does not change unexpectedly over the "
"life of an instance. This could occur with a method whose computation is "
"based on ``datetime.now()``, or simply if a change were saved to the "
"database by some other process in the brief interval between subsequent "
"invocations of a method on the same instance."
msgstr ""

msgid ""
"You can use the ``name`` argument to make cached properties of other "
"methods. For example, if you had an expensive ``get_friends()`` method and "
"wanted to allow calling it without retrieving the cached value, you could "
"write::"
msgstr ""

msgid ""
"While ``person.get_friends()`` will recompute the friends on each call, the "
"value of the cached property will persist until you delete it as described "
"above::"
msgstr ""

msgid ""
"Works like :meth:`~django.utils.functional.keep_lazy` except that it can't "
"be used as a decorator."
msgstr ""

msgid ""
"Django offers many utility functions (particularly in ``django.utils``) that "
"take a string as their first argument and do something to that string. These "
"functions are used by template filters as well as directly in other code."
msgstr ""
"Django menawarkan banyak fungsi-fungsi kegunaan (khususnya dalam ``django."
"utils``) yang mengambil sebuah string sebagai argumen pertama mereka dan "
"melakukan sesuatu ke string itu. Fungsi-fungsi ini digunakan oleh penyaring "
"cetakan sama halnya langsung dalam kode lain."

msgid ""
"If you write your own similar functions and deal with translations, you'll "
"face the problem of what to do when the first argument is a lazy translation "
"object. You don't want to convert it to a string immediately, because you "
"might be using this function outside of a view (and hence the current "
"thread's locale setting will not be correct)."
msgstr ""

msgid ""
"For cases like this, use the ``django.utils.functional.keep_lazy()`` "
"decorator. It modifies the function so that *if* it's called with a lazy "
"translation as one of its arguments, the function evaluation is delayed "
"until it needs to be converted to a string."
msgstr ""

msgid ""
"The ``keep_lazy()`` decorator takes a number of extra arguments (``*args``) "
"specifying the type(s) that the original function can return. A common use "
"case is to have functions that return text. For these, you can just pass the "
"``six.text_type`` type to ``keep_lazy`` (or even simpler, use the :func:"
"`keep_lazy_text` decorator described in the next section)."
msgstr ""

msgid ""
"Using this decorator means you can write your function and assume that the "
"input is a proper string, then add support for lazy translation objects at "
"the end."
msgstr ""

msgid "A shortcut for ``keep_lazy(six.text_type)(func)``."
msgstr "Sebuah jalan pintas untuk ``keep_lazy(six.text_type)(func)``."

msgid ""
"If you have a function that returns text and you want to be able to take "
"lazy arguments while delaying their evaluation, simply use this decorator::"
msgstr ""

msgid "``django.utils.html``"
msgstr "``django.utils.html``"

msgid ""
"Usually you should build up HTML using Django's templates to make use of its "
"autoescape mechanism, using the utilities in :mod:`django.utils.safestring` "
"where appropriate. This module provides some additional low level utilities "
"for escaping HTML."
msgstr ""

msgid ""
"Returns the given text with ampersands, quotes and angle brackets encoded "
"for use in HTML. The input is first passed through :func:`~django.utils."
"encoding.force_text` and the output has :func:`~django.utils.safestring."
"mark_safe` applied."
msgstr ""

msgid ""
"Similar to ``escape()``, except that it doesn't operate on pre-escaped "
"strings, so it will not double escape."
msgstr ""

msgid ""
"This is similar to :meth:`str.format`, except that it is appropriate for "
"building up HTML fragments. All args and kwargs are passed through :func:"
"`conditional_escape` before being passed to ``str.format()``."
msgstr ""

msgid ""
"For the case of building up small HTML fragments, this function is to be "
"preferred over string interpolation using ``%`` or ``str.format()`` "
"directly, because it applies escaping to all arguments - just like the "
"template system applies escaping by default."
msgstr ""

msgid "So, instead of writing::"
msgstr "Jadi, daripada menulis::"

msgid "You should instead use::"
msgstr "Sebaiknya anda gunakan::"

msgid ""
"This has the advantage that you don't need to apply :func:`escape` to each "
"argument and risk a bug and an XSS vulnerability if you forget one."
msgstr ""

msgid ""
"Note that although this function uses ``str.format()`` to do the "
"interpolation, some of the formatting options provided by ``str.format()`` "
"(e.g. number formatting) will not work, since all arguments are passed "
"through :func:`conditional_escape` which (ultimately) calls :func:`~django."
"utils.encoding.force_text` on the values."
msgstr ""

msgid ""
"A wrapper of :func:`format_html`, for the common case of a group of "
"arguments that need to be formatted using the same format string, and then "
"joined using ``sep``. ``sep`` is also passed through :func:"
"`conditional_escape`."
msgstr ""

msgid ""
"``args_generator`` should be an iterator that returns the sequence of "
"``args`` that will be passed to :func:`format_html`. For example::"
msgstr ""

msgid ""
"Tries to remove anything that looks like an HTML tag from the string, that "
"is anything contained within ``<>``."
msgstr ""

msgid ""
"Absolutely NO guarantee is provided about the resulting string being HTML "
"safe. So NEVER mark safe the result of a ``strip_tag`` call without escaping "
"it first, for example with :func:`~django.utils.html.escape`."
msgstr ""

msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"Joel is a slug\"``."
msgstr ""
"Jika ``value`` adalah ``\"<b>Joel</b> <button>is</button> a <span>slug</span>"
"\"`` nilai balikan akan menjadi ``\"Joel is a slug\"``."

msgid ""
"If you are looking for a more robust solution, take a look at the `bleach "
"<https://pypi.python.org/pypi/bleach>`_ Python library."
msgstr ""
"Jika anda sedang mencari pemecahan yang lebih kuat, lihatlah pada pustaka "
"Python `bleach <https://pypi.python.org/pypi/bleach>`_."

msgid ""
"The ``__html__()`` method on a class helps non-Django templates detect "
"classes whose output doesn't require HTML escaping."
msgstr ""

msgid ""
"This decorator defines the ``__html__()`` method on the decorated class by "
"wrapping the ``__unicode__()`` (Python 2) or ``__str__()`` (Python 3) in :"
"meth:`~django.utils.safestring.mark_safe`. Ensure the ``__unicode__()`` or "
"``__str__()`` method does indeed return text that doesn't require HTML "
"escaping."
msgstr ""

msgid "``django.utils.http``"
msgstr "``django.utils.http``"

msgid ""
"A version of Python's ``urllib.quote()`` function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent "
"``iri_to_uri()`` call without double-quoting occurring. Employs lazy "
"execution."
msgstr ""
"Sebuah versi dari fungsi ``urllib.quote()`` Python yang dapat berjalan pada "
"string unicode. Url adalah pertama disandikan UTF-8 sebelum mengutip. String "
"balikan dapat dengan aman digunakan sebagai bagian dari sebuah argumen ke "
"panggilan ``iri_to_uri()`` berikutnya tanpa kutipan-ganda muncul. "
"menggunakan penjalanan lazy."

msgid ""
"A version of Python's urllib.quote_plus() function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent "
"``iri_to_uri()`` call without double-quoting occurring. Employs lazy "
"execution."
msgstr ""

msgid ""
"A version of Python's urllib.urlencode() function that can operate on "
"unicode strings. The parameters are first cast to UTF-8 encoded strings and "
"then encoded as per normal."
msgstr ""

msgid ""
"Formats the time to ensure compatibility with Netscape's cookie standard."
msgstr ""

msgid ""
"Accepts a floating point number expressed in seconds since the epoch in UTC--"
"such as that outputted by ``time.time()``. If set to ``None``, defaults to "
"the current time."
msgstr ""

msgid "Outputs a string in the format ``Wdy, DD-Mon-YYYY HH:MM:SS GMT``."
msgstr ""

msgid ""
"Formats the time to match the :rfc:`1123` date format as specified by HTTP :"
"rfc:`7231#section-7.1.1.1`."
msgstr ""

msgid "Outputs a string in the format ``Wdy, DD Mon YYYY HH:MM:SS GMT``."
msgstr ""

msgid ""
"Converts a base 36 string to an integer. On Python 2 the output is "
"guaranteed to be an ``int`` and not a ``long``."
msgstr ""

msgid ""
"Converts a positive integer to a base 36 string. On Python 2 ``i`` must be "
"smaller than `sys.maxint`_."
msgstr ""

msgid ""
"Encodes a bytestring in base64 for use in URLs, stripping any trailing equal "
"signs."
msgstr ""

msgid ""
"Decodes a base64 encoded string, adding back any trailing equal signs that "
"might have been stripped."
msgstr ""

msgid "``django.utils.module_loading``"
msgstr ""

msgid "Functions for working with Python modules."
msgstr ""

msgid ""
"Imports a dotted module path and returns the attribute/class designated by "
"the last name in the path. Raises ``ImportError`` if the import failed. For "
"example::"
msgstr ""

msgid "``django.utils.safestring``"
msgstr ""

msgid ""
"Functions and classes for working with \"safe strings\": strings that can be "
"displayed safely without further escaping in HTML. Marking something as a "
"\"safe string\" means that the producer of the string has already turned "
"characters that should not be interpreted by the HTML engine (e.g. '<') into "
"the appropriate entities."
msgstr ""

msgid ""
"A ``bytes`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes."
msgstr ""

msgid ""
"A ``str`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes. This is :class:`SafeBytes` on "
"Python 2 and :class:`SafeText` on Python 3."
msgstr ""

msgid ""
"A ``str`` (in Python 3) or ``unicode`` (in Python 2) subclass that has been "
"specifically marked as \"safe\" for HTML output purposes."
msgstr ""

msgid "Historical name of :class:`SafeText`. Only available under Python 2."
msgstr ""

msgid ""
"Explicitly mark a string as safe for (HTML) output purposes. The returned "
"object can be used everywhere a string or unicode object is appropriate."
msgstr ""

msgid "Can be called multiple times on a single string."
msgstr ""

msgid "Can also be used as a decorator."
msgstr ""

msgid ""
"For building up fragments of HTML, you should normally be using :func:"
"`django.utils.html.format_html` instead."
msgstr ""

msgid "String marked safe will become unsafe again if modified. For example::"
msgstr ""

msgid "Added support for decorator usage."
msgstr ""

msgid ""
"Explicitly mark a string as requiring HTML escaping upon output. Has no "
"effect on ``SafeData`` subclasses."
msgstr ""

msgid ""
"Can be called multiple times on a single string (the resulting escaping is "
"only applied once)."
msgstr ""

msgid "``django.utils.text``"
msgstr ""

msgid ""
"A version of :meth:`str.format` for when ``format_string``, ``args``, and/or "
"``kwargs`` contain lazy objects. The first argument is the string to be "
"formatted. For example::"
msgstr ""

msgid ""
"This example allows translators to translate part of the URL. If \"person\" "
"is translated to \"persona\", the regular expression will match ``persona/(?"
"P<pk>\\d+)/$``, e.g. ``persona/5/``."
msgstr ""

msgid ""
"Converts to ASCII if ``allow_unicode`` is ``False`` (default). Converts "
"spaces to hyphens. Removes characters that aren't alphanumerics, "
"underscores, or hyphens. Converts to lowercase. Also strips leading and "
"trailing whitespace."
msgstr ""

msgid ""
"You can set the ``allow_unicode`` parameter to ``True``, if you want to "
"allow Unicode characters::"
msgstr ""

msgid ""
"If ``value`` is ``\"你好 World\"``, the output will be ``\"你好-world\"``."
msgstr ""

msgid "``django.utils.timezone``"
msgstr ""

msgid ":class:`~datetime.tzinfo` instance that represents UTC."
msgstr ""

msgid ""
"A :class:`~datetime.tzinfo` subclass modeling a fixed offset from UTC. "
"``offset`` is an integer number of minutes east of UTC."
msgstr ""

msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents a time zone "
"with a fixed offset from UTC."
msgstr ""

msgid ""
"``offset`` is a :class:`datetime.timedelta` or an integer number of minutes. "
"Use positive values for time zones east of UTC and negative values for west "
"of UTC."
msgstr ""

msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`default time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"Returns the name of the :ref:`default time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"Returns the name of the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"Sets the :ref:`current time zone <default-current-time-zone>`. The "
"``timezone`` argument must be an instance of a :class:`~datetime.tzinfo` "
"subclass or a time zone name."
msgstr ""

msgid "Unsets the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"This is a Python context manager that sets the :ref:`current time zone "
"<default-current-time-zone>` on entry with :func:`activate()`, and restores "
"the previously active time zone on exit. If the ``timezone`` argument is "
"``None``, the :ref:`current time zone <default-current-time-zone>` is unset "
"on entry with :func:`deactivate()` instead."
msgstr ""

msgid "``override`` is also usable as a function decorator."
msgstr ""

msgid ""
"Converts an aware :class:`~datetime.datetime` to a different time zone, by "
"default the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

msgid "When ``value`` is omitted, it defaults to :func:`now`."
msgstr ""

msgid ""
"This function doesn't work on naive datetimes; use :func:`make_aware` "
"instead."
msgstr ""

msgid "In older versions, ``value`` is a required argument."
msgstr ""

msgid ""
"Uses :func:`localtime` to convert an aware :class:`~datetime.datetime` to a :"
"meth:`~datetime.datetime.date` in a different time zone, by default the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

msgid "This function doesn't work on naive datetimes."
msgstr ""

msgid ""
"Returns a :class:`~datetime.datetime` that represents the current point in "
"time. Exactly what's returned depends on the value of :setting:`USE_TZ`:"
msgstr ""

msgid ""
"If :setting:`USE_TZ` is ``False``, this will be a :ref:`naive "
"<naive_vs_aware_datetimes>` datetime (i.e. a datetime without an associated "
"timezone) that represents the current time in the system's local timezone."
msgstr ""

msgid ""
"If :setting:`USE_TZ` is ``True``, this will be an :ref:`aware "
"<naive_vs_aware_datetimes>` datetime representing the current time in UTC. "
"Note that :func:`now` will always return times in UTC regardless of the "
"value of :setting:`TIME_ZONE`; you can use :func:`localtime` to convert to a "
"time in the current time zone."
msgstr ""

msgid ""
"Returns ``True`` if ``value`` is aware, ``False`` if it is naive. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

msgid ""
"Returns ``True`` if ``value`` is naive, ``False`` if it is aware. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

msgid ""
"Returns an aware :class:`~datetime.datetime` that represents the same point "
"in time as ``value`` in ``timezone``, ``value`` being a naive :class:"
"`~datetime.datetime`. If ``timezone`` is set to ``None``, it defaults to "
"the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

msgid ""
"The ``pytz.AmbiguousTimeError`` exception is raised if you try to make "
"``value`` aware during a DST transition where the same time occurs twice "
"(when reverting from DST). Setting ``is_dst`` to ``True`` or ``False`` will "
"avoid the exception by choosing if the time is pre-transition or post-"
"transition respectively."
msgstr ""

msgid ""
"The ``pytz.NonExistentTimeError`` exception is raised if you try to make "
"``value`` aware during a DST transition such that the time never occurred "
"(when entering into DST). Setting ``is_dst`` to ``True`` or ``False`` will "
"avoid the exception by moving the hour backwards or forwards by 1 "
"respectively. For example, ``is_dst=True`` would change a non-existent time "
"of 2:30 to 1:30 and ``is_dst=False`` would change the time to 3:30."
msgstr ""

msgid ""
"Returns an naive :class:`~datetime.datetime` that represents in "
"``timezone``  the same point in time as ``value``, ``value`` being an aware :"
"class:`~datetime.datetime`. If ``timezone`` is set to ``None``, it defaults "
"to the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

msgid "``django.utils.translation``"
msgstr ""

msgid ""
"For a complete discussion on the usage of the following see the :doc:"
"`translation documentation </topics/i18n/translation>`."
msgstr ""

msgid "Translates ``message`` and returns it in a UTF-8 bytestring"
msgstr ""

msgid "Translates ``message`` and returns it in a unicode string"
msgstr ""

msgid ""
"Translates ``message`` given the ``context`` and returns it in a unicode "
"string."
msgstr ""

msgid "For more information, see :ref:`contextual-markers`."
msgstr ""

msgid "Same as the non-lazy versions above, but using lazy execution."
msgstr ""

msgid "See :ref:`lazy translations documentation <lazy-translations>`."
msgstr ""

msgid ""
"Marks strings for translation but doesn't translate them now. This can be "
"used to store strings in global variables that should stay in the base "
"language (because they might be used externally) and will be translated "
"later."
msgstr ""

msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a UTF-8 bytestring."
msgstr ""

msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a unicode string."
msgstr ""

msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` and the ``context`` in a unicode string."
msgstr ""

msgid ""
"Use :meth:`django.utils.text.format_lazy` instead. "
"``string_concat(*strings)`` can be replaced by ``format_lazy('{}' * "
"len(strings), *strings)``."
msgstr ""

msgid ""
"Lazy variant of string concatenation, needed for translations that are "
"constructed from multiple parts."
msgstr ""

msgid ""
"Fetches the translation object for a given language and activates it as the "
"current translation object for the current thread."
msgstr ""

msgid ""
"Deactivates the currently active translation object so that further _ calls "
"will resolve against the default translation object, again."
msgstr ""

msgid ""
"Makes the active translation object a ``NullTranslations()`` instance. This "
"is useful when we want delayed translations to appear as the original string "
"for some reason."
msgstr ""

msgid ""
"A Python context manager that uses :func:`django.utils.translation.activate` "
"to fetch the translation object for a given language, activates it as the "
"translation object for the current thread and reactivates the previous "
"active language on exit. Optionally, it can simply deactivate the temporary "
"translation on exit with :func:`django.utils.translation.deactivate` if the "
"``deactivate`` argument is ``True``. If you pass ``None`` as the language "
"argument, a ``NullTranslations()`` instance is activated within the context."
msgstr ""

msgid ""
"Checks whether there is a global language file for the given language code "
"(e.g. 'fr', 'pt_BR'). This is used to decide whether a user-provided "
"language is available."
msgstr ""

msgid ""
"Returns the currently selected language code. Returns ``None`` if "
"translations are temporarily deactivated (by :func:`deactivate_all()` or "
"when ``None`` is passed to :func:`override()`)."
msgstr ""

msgid "Returns selected language's BiDi layout:"
msgstr ""

msgid "``False`` = left-to-right layout"
msgstr ""

msgid "``True`` = right-to-left layout"
msgstr ""

msgid ""
"Analyzes the request to find what language the user wants the system to "
"show. Only languages listed in settings.LANGUAGES are taken into account. If "
"the user requests a sublanguage where we have a main language, we send out "
"the main language."
msgstr ""

msgid ""
"If ``check_path`` is ``True``, the function first checks the requested URL "
"for whether its path begins with a language code listed in the :setting:"
"`LANGUAGES` setting."
msgstr ""

msgid "Turns a language name (en-us) into a locale name (en_US)."
msgstr ""

msgid ""
"Turns a Django template into something that is understood by ``xgettext``. "
"It does so by translating the Django translation tags into standard "
"``gettext`` function invocations."
msgstr ""

msgid ""
"Session key under which the active language for the current session is "
"stored."
msgstr ""

msgid "Writing validators"
msgstr ""

msgid ""
"A validator is a callable that takes a value and raises a :exc:`~django.core."
"exceptions.ValidationError` if it doesn't meet some criteria. Validators can "
"be useful for re-using validation logic between different types of fields."
msgstr ""

msgid "For example, here's a validator that only allows even numbers::"
msgstr ""
"Sebagai contoh, ini adalah pengesah yang hanya mengijinkan angka genap::"

msgid ""
"You can add this to a model field via the field's :attr:`~django.db.models."
"Field.validators` argument::"
msgstr ""

msgid ""
"Because values are converted to Python before validators are run, you can "
"even use the same validator with forms::"
msgstr ""

msgid ""
"You can also use a class with a ``__call__()`` method for more complex or "
"configurable validators. :class:`RegexValidator`, for example, uses this "
"technique. If a class-based validator is used in the :attr:`~django.db."
"models.Field.validators` model field option, you should make sure it is :ref:"
"`serializable by the migration framework <migration-serializing>` by adding :"
"ref:`deconstruct() <custom-deconstruct-method>` and ``__eq__()`` methods."
msgstr ""

msgid "How validators are run"
msgstr "Bagaimana pengesahan berjalan"

msgid ""
"See the :doc:`form validation </ref/forms/validation>` for more information "
"on how validators are run in forms, and :ref:`Validating objects <validating-"
"objects>` for how they're run in models. Note that validators will not be "
"run automatically when you save a model, but if you are using a :class:"
"`~django.forms.ModelForm`, it will run your validators on any fields that "
"are included in your form. See the :doc:`ModelForm documentation </topics/"
"forms/modelforms>` for information on how model validation interacts with "
"forms."
msgstr ""

msgid "Built-in validators"
msgstr "Pengesahan siap pakai"

msgid ""
"The :mod:`django.core.validators` module contains a collection of callable "
"validators for use with model and form fields. They're used internally but "
"are available for use with your own fields, too. They can be used in "
"addition to, or in lieu of custom ``field.clean()`` methods."
msgstr ""

msgid "``RegexValidator``"
msgstr "``RegexValidator``"

msgid ""
"If not ``None``, overrides :attr:`regex`. Can be a regular expression string "
"or a pre-compiled regular expression."
msgstr ""

msgid "If not ``None``, overrides :attr:`.message`."
msgstr "Jika bukan ``None``, kesampingkan :attr:`message`."

msgid "If not ``None``, overrides :attr:`code`."
msgstr "Jika bukan ``None``, kesampingkan :attr:`code`."

msgid "If not ``None``, overrides :attr:`inverse_match`."
msgstr "Jika bukan ``None``, kesampingkan :attr:`inverse_match`."

msgid ""
"If not ``None``, overrides :attr:`flags`. In that case, :attr:`regex` must "
"be a regular expression string, or :exc:`TypeError` is raised."
msgstr ""

msgid ""
"The regular expression pattern to search for within the provided ``value``, "
"or a pre-compiled regular expression. By default, raises a :exc:`~django."
"core.exceptions.ValidationError` with :attr:`message` and :attr:`code` if a "
"match is not found. That standard behavior can be reversed by setting :attr:"
"`inverse_match` to ``True``, in which case the :exc:`~django.core.exceptions."
"ValidationError` is raised when a match **is** found. By default, matches "
"any string (including an empty string)."
msgstr ""

msgid ""
"The error message used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"Enter a valid value\"``."
msgstr ""

msgid ""
"The error code used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"invalid\"``."
msgstr ""

msgid "The match mode for :attr:`regex`. Defaults to ``False``."
msgstr ""

msgid ""
"The flags used when compiling the regular expression string :attr:`regex`. "
"If :attr:`regex` is a pre-compiled regular expression, and :attr:`flags` is "
"overridden, :exc:`TypeError` is raised. Defaults to ``0``."
msgstr ""

msgid "``EmailValidator``"
msgstr "``EmailValidator``"

msgid "If not ``None``, overrides :attr:`whitelist`."
msgstr "Jika bukan ``None``, kesampingkan :attr:`whitelist`."

msgid ""
"The error message used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"Enter a valid email address\"``."
msgstr ""
"Pesan kesalahan digunakan oleh :exc:`~django.core.exceptions."
"ValidationError` jika pengecekan gagal. Nilai awal ``\"Enter a valid email "
"address\"``."

msgid ""
"Whitelist of email domains to allow. By default, a regular expression (the "
"``domain_regex`` attribute) is used to validate whatever appears after the @ "
"sign. However, if that string appears in the whitelist, this validation is "
"bypassed. If not provided, the default whitelist is ``['localhost']``. Other "
"domains that don't contain a dot won't pass validation, so you'd need to "
"whitelist them as necessary."
msgstr ""

msgid "``URLValidator``"
msgstr "``URLValidator``"

msgid ""
"A :class:`RegexValidator` that ensures a value looks like a URL, and raises "
"an error code of ``'invalid'`` if it doesn't."
msgstr ""

msgid ""
"Loopback addresses and reserved IP spaces are considered valid. Literal IPv6 "
"addresses (:rfc:`2732`) and unicode domains are both supported."
msgstr ""

msgid ""
"In addition to the optional arguments of its parent :class:`RegexValidator` "
"class, ``URLValidator`` accepts an extra optional attribute:"
msgstr ""

msgid ""
"URL/URI scheme list to validate against. If not provided, the default list "
"is ``['http', 'https', 'ftp', 'ftps']``. As a reference, the IANA website "
"provides a full list of `valid URI schemes`_."
msgstr ""

msgid "``validate_email``"
msgstr "``validate_email``"

msgid "An :class:`EmailValidator` instance without any customizations."
msgstr ""

msgid "``validate_slug``"
msgstr "``validate_slug``"

msgid ""
"A :class:`RegexValidator` instance that ensures a value consists of only "
"letters, numbers, underscores or hyphens."
msgstr ""

msgid "``validate_unicode_slug``"
msgstr "``validate_unicode_slug``"

msgid ""
"A :class:`RegexValidator` instance that ensures a value consists of only "
"Unicode letters, numbers, underscores, or hyphens."
msgstr ""

msgid "``validate_ipv4_address``"
msgstr "``validate_ipv4_address``"

msgid ""
"A :class:`RegexValidator` instance that ensures a value looks like an IPv4 "
"address."
msgstr ""

msgid "``validate_ipv6_address``"
msgstr "``validate_ipv6_address``"

msgid "Uses ``django.utils.ipv6`` to check the validity of an IPv6 address."
msgstr ""

msgid "``validate_ipv46_address``"
msgstr "``validate_ipv46_address``"

msgid ""
"Uses both ``validate_ipv4_address`` and ``validate_ipv6_address`` to ensure "
"a value is either a valid IPv4 or IPv6 address."
msgstr ""

msgid "``validate_comma_separated_integer_list``"
msgstr "``validate_comma_separated_integer_list``"

msgid ""
"A :class:`RegexValidator` instance that ensures a value is a comma-separated "
"list of integers."
msgstr ""

msgid "``int_list_validator``"
msgstr "``int_list_validator``"

msgid ""
"Returns a :class:`RegexValidator` instance that ensures a string consists of "
"integers separated by ``sep``. It allows negative integers when "
"``allow_negative`` is ``True``."
msgstr ""

msgid "The ``allow_negative`` parameter was added."
msgstr ""

msgid "``MaxValueValidator``"
msgstr "``MaxValueValidator``"

msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_value'`` if ``value`` is greater than ``max_value``."
msgstr ""

msgid "``MinValueValidator``"
msgstr "``MinValueValidator``"

msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_value'`` if ``value`` is less than ``min_value``."
msgstr ""

msgid "``MaxLengthValidator``"
msgstr "``MaxLengthValidator``"

msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_length'`` if the length of ``value`` is greater than ``max_length``."
msgstr ""

msgid "``MinLengthValidator``"
msgstr "``MinLengthValidator``"

msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_length'`` if the length of ``value`` is less than ``min_length``."
msgstr ""

msgid "``DecimalValidator``"
msgstr "``DecimalValidator``"

msgid ""
"Raises :exc:`~django.core.exceptions.ValidationError` with the following "
"codes:"
msgstr ""
"Memunculkan  :exc:`~django.core.exceptions.ValidationError` dengan kode "
"berikut:"

msgid "``'max_digits'`` if the number of digits is larger than ``max_digits``."
msgstr ""

msgid ""
"``'max_decimal_places'`` if the number of decimals is larger than "
"``decimal_places``."
msgstr ""

msgid ""
"``'max_whole_digits'`` if the number of whole digits is larger than the "
"difference between ``max_digits`` and ``decimal_places``."
msgstr ""

msgid "``FileExtensionValidator``"
msgstr ""

msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'invalid_extension'`` if the extension of ``value.name`` (``value`` is a :"
"class:`~django.core.files.File`) isn't found in ``allowed_extensions``."
msgstr ""

msgid ""
"Don't rely on validation of the file extension to determine a file's type. "
"Files can be renamed to have any extension no matter what data they contain."
msgstr ""

msgid "``validate_image_file_extension``"
msgstr ""

msgid ""
"Uses Pillow to ensure that ``value.name`` (``value`` is a :class:`~django."
"core.files.File`) has `a valid image extension <https://pillow.readthedocs."
"io/en/latest/handbook/image-file-formats.html>`_."
msgstr ""

msgid "Built-in Views"
msgstr "Tampilan Siap pakai"

msgid ""
"Several of Django's built-in views are documented in :doc:`/topics/http/"
"views` as well as elsewhere in the documentation."
msgstr ""

msgid "Serving files in development"
msgstr "Melayani berkas di pengembangan"

msgid ""
"There may be files other than your project's static assets that, for "
"convenience, you'd like to have Django serve for you in local development. "
"The :func:`~django.views.static.serve` view can be used to serve any "
"directory you give it. (This view is **not** hardened for production use and "
"should be used only as a development aid; you should serve these files in "
"production using a real front-end web server)."
msgstr ""

msgid ""
"The most likely example is user-uploaded content in :setting:`MEDIA_ROOT`. "
"``django.contrib.staticfiles`` is intended for static assets and has no "
"built-in handling for user-uploaded files, but you can have Django serve "
"your :setting:`MEDIA_ROOT` by appending something like this to your URLconf::"
msgstr ""

msgid ""
"Note, the snippet assumes your :setting:`MEDIA_URL` has a value of ``'/"
"media/'``. This will call the :func:`~django.views.static.serve` view, "
"passing in the path from the URLconf and the (required) ``document_root`` "
"parameter."
msgstr ""

msgid ""
"Since it can become a bit cumbersome to define this URL pattern, Django "
"ships with a small URL helper function :func:`~django.conf.urls.static."
"static` that takes as parameters the prefix such as :setting:`MEDIA_URL` and "
"a dotted path to a view, such as ``'django.views.static.serve'``. Any other "
"function parameter will be transparently passed to the view."
msgstr ""

msgid "Error views"
msgstr "Tampilan kesalahan"

msgid ""
"Django comes with a few views by default for handling HTTP errors. To "
"override these with your own custom views, see :ref:`customizing-error-"
"views`."
msgstr ""

msgid "The 404 (page not found) view"
msgstr "Tampilan 404 (halaman tidak ditemukan)"

msgid ""
"When you raise :exc:`~django.http.Http404` from within a view, Django loads "
"a special view devoted to handling 404 errors. By default, it's the view :"
"func:`django.views.defaults.page_not_found`, which either produces a very "
"simple \"Not Found\" message or loads and renders the template ``404.html`` "
"if you created it in your root template directory."
msgstr ""

msgid ""
"The default 404 view will pass two variables to the template: "
"``request_path``, which is the URL that resulted in the error, and "
"``exception``, which is a useful representation of the exception that "
"triggered the view (e.g. containing any message passed to a specific "
"``Http404`` instance)."
msgstr ""

msgid "Three things to note about 404 views:"
msgstr "Tiga hal untuk dicatat tentang tampilan 404:"

msgid ""
"The 404 view is also called if Django doesn't find a match after checking "
"every regular expression in the URLconf."
msgstr ""

msgid ""
"The 404 view is passed a :class:`~django.template.RequestContext` and will "
"have access to variables supplied by your template context processors (e.g. "
"``MEDIA_URL``)."
msgstr ""

msgid ""
"If :setting:`DEBUG` is set to ``True`` (in your settings module), then your "
"404 view will never be used, and your URLconf will be displayed instead, "
"with some debug information."
msgstr ""

msgid ""
"Passing a nonexistent ``template_name`` will raise ``TemplateDoesNotExist``."
msgstr ""

msgid "The 500 (server error) view"
msgstr "Tampilan 500 (kesalahan peladen)"

msgid ""
"Similarly, Django executes special-case behavior in the case of runtime "
"errors in view code. If a view results in an exception, Django will, by "
"default, call the view ``django.views.defaults.server_error``, which either "
"produces a very simple \"Server Error\" message or loads and renders the "
"template ``500.html`` if you created it in your root template directory."
msgstr ""

msgid ""
"The default 500 view passes no variables to the ``500.html`` template and is "
"rendered with an empty ``Context`` to lessen the chance of additional errors."
msgstr ""

msgid ""
"If :setting:`DEBUG` is set to ``True`` (in your settings module), then your "
"500 view will never be used, and the traceback will be displayed instead, "
"with some debug information."
msgstr ""

msgid "The 403 (HTTP Forbidden) view"
msgstr "Tampilan 403 (Terlarang HTTP) "

msgid ""
"In the same vein as the 404 and 500 views, Django has a view to handle 403 "
"Forbidden errors. If a view results in a 403 exception then Django will, by "
"default, call the view ``django.views.defaults.permission_denied``."
msgstr ""

msgid ""
"This view loads and renders the template ``403.html`` in your root template "
"directory, or if this file does not exist, instead serves the text \"403 "
"Forbidden\", as per :rfc:`7231#section-6.5.3` (the HTTP 1.1 Specification). "
"The template context contains ``exception``, which is the unicode "
"representation of the exception that triggered the view."
msgstr ""

msgid ""
"``django.views.defaults.permission_denied`` is triggered by a :exc:`~django."
"core.exceptions.PermissionDenied` exception. To deny access in a view you "
"can use code like this::"
msgstr ""

msgid "The 400 (bad request) view"
msgstr "Tampilan (permintaan buruk) 400"

msgid ""
"When a :exc:`~django.core.exceptions.SuspiciousOperation` is raised in "
"Django, it may be handled by a component of Django (for example resetting "
"the session data). If not specifically handled, Django will consider the "
"current request a 'bad request' instead of a server error."
msgstr ""
"Ketika sebuah :exc:`~django.core.exceptions.SuspiciousOperation` dimunculkan "
"di Django, dia mungkin ditangani oleh komponen dari Django (sebagai contoh "
"mengatur kembali data sesi). Jika tidak secara khusus ditangani, Django akan "
"memperimbangkan permintaan saat ini 'bad request'  daripada kesalahan "
"peladen."

msgid ""
"``django.views.defaults.bad_request``, is otherwise very similar to the "
"``server_error`` view, but returns with the status code 400 indicating that "
"the error condition was the result of a client operation. By default, "
"nothing related to the exception that triggered the view is passed to the "
"template context, as the exception message might contain sensitive "
"information like filesystem paths."
msgstr ""
"``django.views.defaults.bad_request``, jika tidak sangat mirip pada tampilan "
"``server_error``, tetapi mengembalikan dengan kode keadaan 400 yang kondisi "
"kesalahan adalah hasil dari pengerjaan klien. Secara awal, tidak ada "
"terhubung pada pengecualian yang memicu tampilan dilewatkan ke konteks "
"cetakan, sebagai pesan pengecualian mungkin mengandung informasi sensitif "
"seperti jalur sistem berkas."

msgid ""
"``bad_request`` views are also only used when :setting:`DEBUG` is ``False``."
msgstr ""
"Tampilan ``bad_request`` juga hanya digunakan ketika :setting:`DEBUG` adalah "
"``False``."
