# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Nick Mavrakis <mavrakis.n@gmail.com>, 2016
# Nick Mavrakis <mavrakis.n@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-18 18:24-0500\n"
"PO-Revision-Date: 2016-10-18 09:48+0000\n"
"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\n"
"Language-Team: Greek (http://www.transifex.com/django/django-docs/language/"
"el/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: el\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Authentication using ``REMOTE_USER``"
msgstr "Πιστοποίηση με χρήση του ``REMOTE_USER``"

msgid ""
"This document describes how to make use of external authentication sources "
"(where the Web server sets the ``REMOTE_USER`` environment variable) in your "
"Django applications.  This type of authentication solution is typically seen "
"on intranet sites, with single sign-on solutions such as IIS and Integrated "
"Windows Authentication or Apache and `mod_authnz_ldap`_, `CAS`_, `Cosign`_, "
"`WebAuth`_, `mod_auth_sspi`_, etc."
msgstr ""
"Αυτό το άρθρο περιγράφει πως μπορείτε να χρησιμοποιήσετε εξωτερικές πηγές "
"πιστοποίησης (όπου ο Web server έχει ορίσει ως environment variable το "
"``REMOTE_USER``) μέσα στις Django εφαρμογές σας. Αυτού του είδους οι "
"πιστοποιήσεις εμφανίζονται, συνήθως, μέσα σε intranet σελίδες, όπου η "
"είσοδος του χρήστη στο σύστημα γίνεται μέσω IIS και του Integrated Windows "
"Authentication ή μέσω Apache και `mod_authnz_ldap`_, `CAS`_, `Cosign`_, "
"`WebAuth`_, `mod_auth_sspi`_, κλπ."

msgid ""
"When the Web server takes care of authentication it typically sets the "
"``REMOTE_USER`` environment variable for use in the underlying application.  "
"In Django, ``REMOTE_USER`` is made available in the :attr:`request.META "
"<django.http.HttpRequest.META>` attribute.  Django can be configured to make "
"use of the ``REMOTE_USER`` value using the ``RemoteUserMiddleware`` or "
"``PersistentRemoteUserMiddleware``, and :class:`~django.contrib.auth."
"backends.RemoteUserBackend` classes found in :mod:`django.contrib.auth`."
msgstr ""
"Όταν ο Web server αναλαμβάνει την πιστοποίηση, στην ουσία θέτει τη μεταβλητή "
"``REMOTE_USER`` ως environment variable για να χρησιμοποιηθεί από την "
"εκάστοτε εφαρμογή. Στο Django, η μεταβλητή ``REMOTE_USER`` είναι διαθέσιμη "
"μέσα από το attribute :attr:`request.META <django.http.HttpRequest.META>` "
"του request object. Το Django μπορεί να παραμετροποιηθεί για να κάνει χρήση "
"της μεταβλητής ``REMOTE_USER`` χρησιμοποιώντας τη ``RemoteUserMiddleware`` ή "
"τη ``PersistentRemoteUserMiddleware`` και την κλάση :class:`~django.contrib."
"auth.backends.RemoteUserBackend` που βρίσκεται μέσα στο module :mod:`django."
"contrib.auth`."

msgid "Configuration"
msgstr "Παραμετροποίηση"

msgid ""
"First, you must add the :class:`django.contrib.auth.middleware."
"RemoteUserMiddleware` to the :setting:`MIDDLEWARE` setting **after** the :"
"class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"
msgstr ""
"Πρώτα πρέπει να προσθέσετε τη middleware κλάση :class:`django.contrib.auth."
"middleware.RemoteUserMiddleware` στη ρύθμιση :setting:`MIDDLEWARE` **μετά** "
"τη middleware κλάση :class:`django.contrib.auth.middleware."
"AuthenticationMiddleware`::"

msgid ""
"Next, you must replace the :class:`~django.contrib.auth.backends."
"ModelBackend` with :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"in the :setting:`AUTHENTICATION_BACKENDS` setting::"
msgstr ""
"Κατόπιν, πρέπει να αντικαταστήσετε την κλάση :class:`~django.contrib.auth."
"backends.ModelBackend` με την :class:`~django.contrib.auth.backends."
"RemoteUserBackend` μέσα στη ρύθμιση :setting:`AUTHENTICATION_BACKENDS`::"

msgid ""
"With this setup, ``RemoteUserMiddleware`` will detect the username in "
"``request.META['REMOTE_USER']`` and will authenticate and auto-login that "
"user using the :class:`~django.contrib.auth.backends.RemoteUserBackend`."
msgstr ""
"Με αυτές τις ρυθμίσεις, η ``RemoteUserMiddleware`` θα ανιχνεύσει το username "
"μέσα στο ``request.META['REMOTE_USER']`` και όχι μόνο θα πιστοποιήσει αλλά "
"και θα εισάγει αυτόν τον χρήστη αυτόματα στο σύστημα, χρησιμοποιώντας την "
"κλάση :class:`~django.contrib.auth.backends.RemoteUserBackend`."

msgid ""
"Be aware that this particular setup disables authentication with the default "
"``ModelBackend``. This means that if the ``REMOTE_USER`` value is not set "
"then the user is unable to log in, even using Django's admin interface. "
"Adding ``'django.contrib.auth.backends.ModelBackend'`` to the "
"``AUTHENTICATION_BACKENDS`` list will use ``ModelBackend`` as a fallback if "
"``REMOTE_USER`` is absent, which will solve these issues."
msgstr ""
"Ιδιαίτερη προσοχή πρέπει να δοθεί στο γεγονός ότι η ανωτέρω συγκεκριμένη "
"ρύθμιση απενεργοποιεί την πιστοποίηση του, προεπιλεγμένου, ``ModelBackend``. "
"Αυτό σημαίνει ότι αν η τιμή της μεταβλητής ``REMOTE_USER`` δεν έχει οριστεί, "
"τότε ο χρήστης δεν θα μπορεί να κάνει log in στο σύστημα, ακόμη και αν "
"χρησιμοποιεί το interface του Django admin. Για την επίλυση αυτού, απλώς "
"προσθέστε το ``'django.contrib.auth.backends.ModelBackend'`` στη λίστα "
"``AUTHENTICATION_BACKENDS``. Με αυτό τον τρόπο το Django θα χρησιμοποιήσει "
"το ``ModelBackend`` ως fallback αν το ``REMOTE_USER`` δεν έχει οριστεί."

msgid ""
"Django's user management, such as the views in ``contrib.admin`` and the :"
"djadmin:`createsuperuser` management command, doesn't integrate with remote "
"users. These interfaces work with users stored in the database regardless of "
"``AUTHENTICATION_BACKENDS``."
msgstr ""
"Η διαχείριση των χρηστών του Django, όπως τα views μέσα στο ``contrib."
"admin`` και η εντολή :djadmin:`createsuperuser`, δεν δουλεύουν με τους "
"απομακρυσμένους χρήστες (remote users). Αυτά τα interfaces δουλεύουν με τους "
"χρήστες οι οποίοι είναι αποθηκευμένοι στην βάση δεδομένων ανεξαρτήτως της "
"ρύθμισης ``AUTHENTICATION_BACKENDS``."

msgid ""
"Since the ``RemoteUserBackend`` inherits from ``ModelBackend``, you will "
"still have all of the same permissions checking that is implemented in "
"``ModelBackend``."
msgstr ""
"Επειδή η κλάση ``RemoteUserBackend`` κληρονομεί από την ``ModelBackend``, θα "
"έχετε στην διάθεση σας όλο το API, που είναι υλοποιημένο στο "
"``ModelBackend`` και αφορά τον έλεγχο δικαιωμάτων των χρηστών."

msgid ""
"Users with :attr:`is_active=False <django.contrib.auth.models.User."
"is_active>` won't be allowed to authenticate. Use :class:`~django.contrib."
"auth.backends.AllowAllUsersRemoteUserBackend` if you want to allow them to."
msgstr ""
"Οι χρήστες με το attribute :attr:`is_active=False <django.contrib.auth."
"models.User.is_active>` δεν θα τους επιτραπεί να πιστοποιηθούν. Για να το "
"παρακάμψετε αυτό χρησιμοποιήστε την κλάση :class:`~django.contrib.auth."
"backends.AllowAllUsersRemoteUserBackend`."

msgid "In older versions, inactive users weren't rejected as described above."
msgstr ""
"Σε παλαιότερες εκδόσεις, οι απενεργοποιημένοι χρήστες δεν απορριπτόντουσαν "
"όπως περιγράφηκε παραπάνω."

msgid ""
"If your authentication mechanism uses a custom HTTP header and not "
"``REMOTE_USER``, you can subclass ``RemoteUserMiddleware`` and set the "
"``header`` attribute to the desired ``request.META`` key.  For example::"
msgstr ""
"Οι χρήστες με το attribute :attr:`is_active=False <django.contrib.auth."
"models.User.is_active>` δεν θα τους επιτραπεί να πιστοποιηθούν. Για να το "
"παρακάμψετε αυτό χρησιμοποιήστε την κλάση :class:`~django.contrib.auth."
"backends.AllowAllUsersRemoteUserBackend`."

msgid ""
"Be very careful if using a ``RemoteUserMiddleware`` subclass with a custom "
"HTTP header. You must be sure that your front-end web server always sets or "
"strips that header based on the appropriate authentication checks, never "
"permitting an end-user to submit a fake (or \"spoofed\") header value. Since "
"the HTTP headers ``X-Auth-User`` and ``X-Auth_User`` (for example) both "
"normalize to the ``HTTP_X_AUTH_USER`` key in ``request.META``, you must also "
"check that your web server doesn't allow a spoofed header using underscores "
"in place of dashes."
msgstr ""
"Να είστε εξαιρετικά προσεκτικοί όταν χρησιμοποιείτε κάποια subclass της "
"``RemoteUserMiddleware`` η οποία ορίζει δικό της HTTP header. Πρέπει να "
"είστε σίγουροι ότι ο front-end web server ορίζει ή αφαιρεί πάντα αυτόν τον "
"header βασιζόμενος στους κατάλληλους ελέγχους πιστοποίησης. Ποτέ να μην "
"επιτρέπετε στον τελικό χρήστη να μπορεί να καταθέτει ψεύτικες (ή "
"\"πλαστογραφημένες\") τιμές του header. Εφόσον οι HTTP headers, π.χ ``X-Auth-"
"User`` και ``X-Auth_User`` ομαλοποιούνται και οι δύο στο κλειδί "
"``HTTP_X_AUTH_USER`` του ``request.META``, θα πρέπει, επίσης, να ελέγξετε "
"ότι ο web server σας δεν επιτρέπει πλαστογραφημένους headers οι οποίοι "
"χρησιμοποιούν κάτω παύλες (“_”) αντί σκέτων παυλών (“-”)."

msgid ""
"This warning doesn't apply to ``RemoteUserMiddleware`` in its default "
"configuration with ``header = 'REMOTE_USER'``, since a key that doesn't "
"start with ``HTTP_`` in ``request.META`` can only be set by your WSGI "
"server, not directly from an HTTP request header."
msgstr ""
"Η παραπάνω προειδοποίηση δεν αφορά μόνο την κλάση ``RemoteUserMiddleware`` "
"με τις προεπιλεγμένες της ρυθμίσεις (``header = 'REMOTE_USER'``), αφού ένα "
"κλειδί που το όνομα του δεν ξεκινά με το ``HTTP_`` μέσα στο ``request."
"META``, μπορεί να οριστεί μόνο από τον WSGI server σας και όχι απ’ ευθείας "
"από ένα HTTP request header."

msgid ""
"If you need more control, you can create your own authentication backend "
"that inherits from :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"and override one or more of its attributes and methods."
msgstr ""
"Αν χρειάζεστε περισσότερο έλεγχο, μπορείτε να δημιουργήσετε το δικό σας "
"backend πιστοποίησης ο οποίος θα κληρονομεί από την κλάση :class:`~django."
"contrib.auth.backends.RemoteUserBackend` και θα παρακάμπτει (override) ένα ή "
"περισσότερα από τα attributes και τις μεθόδους της."

msgid "Using ``REMOTE_USER`` on login pages only"
msgstr "Χρήση του ``REMOTE_USER`` μόνο στις σελίδες login"

msgid ""
"The ``RemoteUserMiddleware`` authentication middleware assumes that the HTTP "
"request header ``REMOTE_USER`` is present with all authenticated requests. "
"That might be expected and practical when Basic HTTP Auth with ``htpasswd`` "
"or other simple mechanisms are used, but with Negotiate (GSSAPI/Kerberos) or "
"other resource intensive authentication methods, the authentication in the "
"front-end HTTP server is usually only set up for one or a few login URLs, "
"and after successful authentication, the application is supposed to maintain "
"the authenticated session itself."
msgstr ""
"Η middleware πιστοποίησης ``RemoteUserMiddleware`` προϋποθέτει ότι ο HTTP "
"request header ``REMOTE_USER`` υφίσταται με όλα τα πιστοποιημένα requests. "
"Αυτό μπορεί να είναι πρακτικό και να λειτουργεί περίφημα όταν "
"χρησιμοποιούνται απλοί μηχανισμοί HTTP πιστοποίησης όπως o ``htpasswd``, "
"αλλά με άλλες μεθόδους ευαίσθητων πηγών όπως η Negotiate (GSSAPI/Kerberos), "
"η πιστοποίηση στον front-end HTTP server συνήθως ρυθμίζεται για ένα ή για "
"μερικά login URLs και κατόπιν επιτυχούς πιστοποίησης, η εφαρμογή υποτίθεται "
"ότι διατηρεί το πιστοποιημένο session κατά τη διάρκεια της επικοινωνίας."

msgid ""
":class:`~django.contrib.auth.middleware.PersistentRemoteUserMiddleware` "
"provides support for this use case. It will maintain the authenticated "
"session until explicit logout by the user. The class can be used as a drop-"
"in replacement of :class:`~django.contrib.auth.middleware."
"RemoteUserMiddleware` in the documentation above."
msgstr ""
"Η middleware κλάση :class:`~django.contrib.auth.middleware."
"PersistentRemoteUserMiddleware` παρέχει υποστήριξη για αυτήν ακριβώς την "
"περίπτωση. Θα διατηρήσει το πιστοποιημένο session μέχρις ότου ο χρήστης "
"κάνει logout ο ίδιος. Η κλάση μπορεί να χρησιμοποιηθεί ως αντικατάσταση της :"
"class:`~django.contrib.auth.middleware.RemoteUserMiddleware` όπως αναφέρθηκε "
"παραπάνω."

msgid "Writing a custom storage system"
msgstr "Γράφοντας ένα δικό σας σύστημα αποθήκευσης (storage system)"

msgid ""
"If you need to provide custom file storage -- a common example is storing "
"files on some remote system -- you can do so by defining a custom storage "
"class. You'll need to follow these steps:"
msgstr ""
"Αν θέλετε να έχετε το δικό σας σύστημα αποθήκευσης αρχείων -- ένα "
"συνηθισμένο παράδειγμα είναι η αποθήκευση αρχείων σε ένα απομακρυσμένο "
"σύστημα -- μπορείτε να το κάνετε ορίζοντας μια δικιά σας κλάση αποθήκευσης "
"(storage class). Θα χρειαστεί να ακολουθήσετε τα παρακάτω βήματα:"

msgid ""
"Your custom storage system must be a subclass of ``django.core.files.storage."
"Storage``::"
msgstr ""
"Το δικό σας σύστημα αποθήκευσης θα πρέπει να είναι μια subclass της κλάσης "
"``django.core.files.storage.Storage``::"

msgid ""
"Django must be able to instantiate your storage system without any "
"arguments. This means that any settings should be taken from ``django.conf."
"settings``::"
msgstr ""
"Το Django πρέπει να είναι σε θέση να αρχικοποιεί το δικό σας σύστημα "
"αποθήκευσης χωρίς arguments. Αυτό σημαίνει ότι τυχόν ρυθμίσεις του δικού σας "
"συστήματος θα πρέπει να λαμβάνονται από το γενικό αρχείο ρυθμίσεων ``django."
"conf.settings``::"

msgid ""
"Your storage class must implement the :meth:`_open()` and :meth:`_save()` "
"methods, along with any other methods appropriate to your storage class. See "
"below for more on these methods."
msgstr ""
"Η κλάση αποθήκευση σας πρέπει να υλοποιεί τις μεθόδους :meth:`_open()` και :"
"meth:`_save()`, μαζί με οποιεσδήποτε άλλες, απαραίτητες για τις ανάγκες σας. "
"Για περισσότερα σχετικά με αυτές τις μεθόδους, δείτε παρακάτω."

msgid ""
"In addition, if your class provides local file storage, it must override the "
"``path()`` method."
msgstr ""
"Επιπροσθέτως, αν η κλάση σας παρέχει τη δυνατότητα τοπικής αποθήκευσης των "
"αρχείων, θα πρέπει να παρακάμπτει (override) τη μέθοδο ``path()``."

msgid ""
"Your storage class must be :ref:`deconstructible <custom-deconstruct-"
"method>` so it can be serialized when it's used on a field in a migration. "
"As long as your field has arguments that are themselves :ref:`serializable "
"<migration-serializing>`, you can use the ``django.utils.deconstruct."
"deconstructible`` class decorator for this (that's what Django uses on "
"FileSystemStorage)."
msgstr ""
"Η κλάση αποθήκευσης σας θα πρέπει να είναι :ref:`deconstructible <custom-"
"deconstruct-method>` προκειμένου να γίνει serialized όταν χρησιμοποιείται "
"πάνω σε ένα πεδίο μέσα σε κάποιο migration. Αν το πεδίο σας έχει arguments "
"τα οποία είναι και αυτά :ref:`serializable <migration-serializing>`, "
"μπορείτε να χρησιμοποιήσετε τον decorator ``django.utils.deconstruct."
"deconstructible`` (αυτό χρησιμοποιεί και το Django στο σύστημα αποθήκευσης "
"FileSystemStorage)."

msgid ""
"By default, the following methods raise `NotImplementedError` and will "
"typically have to be overridden:"
msgstr ""
"Από προεπιλογή, οι ακόλουθες μέθοδοι κάνουν raise το σφάλμα "
"`NotImplementedError` που σημαίνει ότι πρέπει να γίνουν overridden:"

msgid ":meth:`Storage.delete`"
msgstr ":meth:`Storage.delete`"

msgid ":meth:`Storage.exists`"
msgstr ":meth:`Storage.exists`"

msgid ":meth:`Storage.listdir`"
msgstr ":meth:`Storage.listdir`"

msgid ":meth:`Storage.size`"
msgstr ":meth:`Storage.size`"

msgid ":meth:`Storage.url`"
msgstr ":meth:`Storage.url`"

msgid ""
"Note however that not all these methods are required and may be deliberately "
"omitted. As it happens, it is possible to leave each method unimplemented "
"and still have a working Storage."
msgstr ""
"Υπόψιν ότι δεν είναι απαραίτητο, όλες αυτές οι μέθοδοι, να υλοποιηθούν και "
"μερικές μπορούν σκοπίμως να παραλειφθούν. Παραβλέποντας, λοιπόν, μερικές από "
"αυτές το σύστημα αποθήκευσης σας θα μπορεί να λειτουργεί."

msgid ""
"By way of example, if listing the contents of certain storage backends turns "
"out to be expensive, you might decide not to implement `Storage.listdir`."
msgstr ""
"Αν, για παράδειγμα η εμφάνιση των αρχείων υπό τη μορφή λίστας φαίνεται "
"ακριβή, για το σύστημα, διαδικασία, μπορείτε να μην υλοποιήσετε τη μέθοδο "
"`Storage.listdir`."

msgid ""
"Another example would be a backend that only handles writing to files. In "
"this case, you would not need to implement any of the above methods."
msgstr ""
"Άλλο παράδειγμα είναι ένα άλλο σύστημα αποθήκευσης που μοναδικός του ρόλος "
"είναι η εγγραφή σε αρχεία. Σε αυτή την περίπτωση δεν χρειάζεται να "
"υλοποιήσετε καμία από τις παραπάνω μεθόδους."

msgid ""
"Ultimately, which of these methods are implemented is up to you. Leaving "
"some methods unimplemented will result in a partial (possibly broken) "
"interface."
msgstr ""
"Με άλλα λόγια, το ποιες μέθοδοι θα υλοποιηθούν εξαρτάται από σας και τις "
"ανάγκες σας. Από την άλλη, αν μερικές δεν υλοποιηθούν θα καταλήξετε με ένα "
"λειψό (πιθανόν χαλασμένο) interface."

msgid ""
"You'll also usually want to use hooks specifically designed for custom "
"storage objects. These are:"
msgstr ""
"Επίσης, ίσως να θέλατε να χρησιμοποιήσετε κάποια hooks τα οποία έχουν "
"σχεδιαστεί για παραμετροποιήσιμα συστήματα αποθήκευσης. Αυτά είναι:"

msgid "**Required**."
msgstr "Υποχρεωτικό"

msgid ""
"Called by ``Storage.open()``, this is the actual mechanism the storage class "
"uses to open the file. This must return a ``File`` object, though in most "
"cases, you'll want to return some subclass here that implements logic "
"specific to the backend storage system."
msgstr ""
"Η μέθοδος αυτή καλείται από την ``Storage.open()``. Αυτός είναι ο "
"ουσιαστικός μηχανισμός της κλάσης αποθήκευσης για να ανοίξει ένα αρχείο. "
"Πρέπει να επιστρέφει ένα ``File`` object, αλλά στις περισσότερες "
"περιπτώσεις, θα θέλατε να επιστρέφει κάποια subclass η οποία θα υλοποιεί τη "
"λογική που βασίζεται πάνω στο σύστημα αποθήκευσης."

msgid ""
"Called by ``Storage.save()``. The ``name`` will already have gone through "
"``get_valid_name()`` and ``get_available_name()``, and the ``content`` will "
"be a ``File`` object itself."
msgstr ""
"Η μέθοδος αυτή καλείται από την ``Storage.save()``. Το όρισμα ``name`` θα "
"έχει περάσει ήδη από την μέθοδο ``get_valid_name()`` και "
"``get_available_name()`` και το όρισμα ``content`` θα είναι ένα ``File`` "
"object."

msgid ""
"Should return the actual name of name of the file saved (usually the "
"``name`` passed in, but if the storage needs to change the file name return "
"the new name instead)."
msgstr ""
"Θα πρέπει να επιστρέφει το όνομα του αρχείου που αποθηκεύεται (συνήθως αυτό "
"θα είναι το ``name`` που περνάει ως όρισμα. Αλλά αν το σύστημα αποθήκευσης "
"χρειαστεί να αλλάξει το όνομα του αρχείου πριν την αποθήκευση του, θα πρέπει "
"να επιστρέψετε το νέο όνομα)."

msgid ""
"Returns a filename suitable for use with the underlying storage system. The "
"``name`` argument passed to this method is either the original filename sent "
"to the server or, if ``upload_to`` is a callable, the filename returned by "
"that method after any path information is removed. Override this to "
"customize how non-standard characters are converted to safe filenames."
msgstr ""
"Επιστρέφει το όνομα του αρχείου το οποίο θεωρείται έγκυρο για να αποθηκευτεί "
"στη συνέχεια από το σύστημα αποθήκευσης. Το όρισμα ``name`` είναι είτε το "
"αρχικό όνομα του αρχείου που στάλθηκε στον server είτε, αν το ``upload_to`` "
"είναι κάποιο callable, το όνομα που επεστράφη από αυτή τη μέθοδο αφού έχει "
"αφαιρεθεί κάθε πληροφορία σχετικά με το path του αρχείου. Μπορείτε να "
"παρακάμψετε αυτή τη μέθοδο για να ελέγξετε το πως οι μη-τυποποιημένοι "
"χαρακτήρες μπορούν να μετατραπούν σε έγκυρα-ασφαλή ονόματα αρχείων."

msgid ""
"In older versions, this method was not called when ``upload_to`` was a "
"callable."
msgstr ""
"Σε παλαιότερες εκδόσεις, αυτή η μέθοδος δεν καλούταν αν το ``upload_to`` "
"ήταν callable."

msgid ""
"The code provided on ``Storage`` retains only alpha-numeric characters, "
"periods and underscores from the original filename, removing everything else."
msgstr ""
"Ο κώδικας του ``Storage`` διατηρεί μόνο τους αλφαριθμητικούς χαρακτήρες, τις "
"τελείες και τις κάτω παύλες από τα αρχικά ονόματα των αρχείων (αυτά που "
"επιλέγονται προς αποθήκευση), αφαιρώντας οποιονδήποτε άλλον χαρακτήρα."

msgid ""
"Returns a filename that is available in the storage mechanism, possibly "
"taking the provided filename into account. The ``name`` argument passed to "
"this method will have already cleaned to a filename valid for the storage "
"system, according to the ``get_valid_name()`` method described above."
msgstr ""
"Επιστρέφει ένα όνομα αρχείου το οποίο είναι διαθέσιμο στο μηχανισμό "
"αποθήκευσης και πιθανόν να λαμβάνει υπόψιν του το, περασμένο ως όρισμα, "
"όνομα του αρχείου. Το όρισμα ``name`` θα έχει ήδη μετατραπεί σε κάποιο "
"έγκυρο όνομα αρχείου για αποθήκευση σύμφωνα με την μέθοδο "
"``get_valid_name()`` που περιγράφηκε πιο πάνω."

msgid ""
"The length of the filename will not exceed ``max_length``, if provided. If a "
"free unique filename cannot be found, a :exc:`SuspiciousFileOperation "
"<django.core.exceptions.SuspiciousOperation>` exception is raised."
msgstr ""
"Το μήκος του ονόματος του αρχείου δεν μπορεί να υπερβαίνει το "
"``max_length``, αν αυτό δίνεται. Αν ένα μοναδικό όνομα αρχείου δεν μπορεί να "
"βρεθεί, τότε γίνεται raise το exception :exc:`SuspiciousFileOperation "
"<django.core.exceptions.SuspiciousOperation>`."

msgid ""
"If a file with ``name`` already exists, an underscore plus a random 7 "
"character alphanumeric string is appended to the filename before the "
"extension."
msgstr ""
"Αν κάποιο αρχείο με το όνομα ``name`` υπάρχει ήδη, τότε θα προστεθούν μετά "
"το όνομα, ο χαρακτήρας της κάτω παύλας μαζί με 7 τυχαίους αλφαριθμητικούς "
"χαρακτήρες πριν την κατάληξη του αρχείου."

msgid "Custom Lookups"
msgstr "Παραμετροποιήσιμα Lookups"

msgid ""
"Django offers a wide variety of :ref:`built-in lookups <field-lookups>` for "
"filtering (for example, ``exact`` and ``icontains``). This documentation "
"explains how to write custom lookups and how to alter the working of "
"existing lookups. For the API references of lookups, see the :doc:`/ref/"
"models/lookups`."
msgstr ""
"Το Django προσφέρει μια μεγάλη ποικιλία από :ref:`προεγκατεστημένα lookups "
"<field-lookups>` για το φιλτράρισμα (π.χ ``exact`` και ``icontains``) των "
"δεδομένων σας από την βάση δεδομένων. Το παρών εγχειρίδιο εξηγεί πως να "
"γράψετε δικά σας lookups και πως να αλλάξετε τη συμπεριφορά των ήδη "
"υπαρχουσών lookups. Για την σχετική αναφορά στο API των lookups, δείτε στο "
"άρθρο :doc:`/ref/models/lookups`."

msgid "A simple lookup example"
msgstr "Ένα απλό lookup παράδειγμα"

msgid ""
"Let's start with a simple custom lookup. We will write a custom lookup "
"``ne`` which works opposite to ``exact``. ``Author.objects."
"filter(name__ne='Jack')`` will translate to the SQL::"
msgstr ""
"Ας ξεκινήσουμε με ένα απλό παραμετροποιήσιμο lookup. Θα γράψουμε ένα δικό "
"μας lookup και θα του δώσουμε το όνομα ``ne`` (από τις λέξεις not equal), το "
"οποίο θα έχει την ανάποδη συμπεριφορά του ``exact``. Για παράδειγμα, αν "
"γράψουμε ``Author.objects.filter(name__ne='Jack')``, τότε αυτό θα "
"μεταφραστεί στην SQL ως::"

msgid ""
"This SQL is backend independent, so we don't need to worry about different "
"databases."
msgstr ""
"Η παραπάνω εντολή SQL είναι ανεξάρτητη από τη βάση δεδομένων που "
"χρησιμοποιείτε, οπότε δεν θα χρειαστεί να ανησυχούμε γι' αυτό. Όλες οι "
"βάσεις καταλαβαίνουν αυτή τη σύνταξη."

msgid ""
"There are two steps to making this work. Firstly we need to implement the "
"lookup, then we need to tell Django about it. The implementation is quite "
"straightforward::"
msgstr ""
"Υπάρχουν δύο βήματα που πρέπει να κάνουμε για να δουλέψει το ανωτέρω. Πρώτα, "
"πρέπει να υλοποιήσουμε το lookup και μετά πρέπει να το αναφέρουμε στο "
"Django. Η υλοποίηση είναι λίγο πολύ ευθέως κατανοητή::"

msgid ""
"To register the ``NotEqual`` lookup we will just need to call "
"``register_lookup`` on the field class we want the lookup to be available. "
"In this case, the lookup makes sense on all ``Field`` subclasses, so we "
"register it with ``Field`` directly::"
msgstr ""
"Σε αυτό το σημείο απλώς έχουμε ορίσει μια κλάση. Τίποτε περισσότερο. Επόμενο "
"βήμα είναι κάνουμε register το νέο μας ``NotEqual`` lookup με κάποιο πεδίο "
"από τα Django μοντέλα ή με όλα. Θα χρειαστεί να καλέσουμε την "
"``register_lookup`` πάνω στο πεδίο που θέλουμε αυτό το lookup να είναι "
"διαθέσιμο. Αυτό γίνεται, γιατί σε μερικές περιπτώσεις δεν θέλουμε να έχουμε "
"διαθέσιμο (να φιλτράρουμε, αν θέλετε) το lookup μας σε όλα τα πεδία (πχ "
"IntegerField, DateField κλπ). Αν φτιάξουμε ένα άλλο lookup που να ελέγχει, "
"πχ το πρώτο γράμμα ενός string δεν θα ήταν λογικό να το συνδέσουμε με ένα "
"DateTimeField. Στην προκειμένη περίπτωση, το lookup μπορεί να εφαρμοστεί σε "
"όλων των ειδών τα ``Field`` subclasses, οπότε θα το κάνουμε register με το "
"``Field`` απ' ευθείας::"

msgid "Lookup registration can also be done using a decorator pattern::"
msgstr ""
"Το registration του lookup μπορεί να γίνει και με τη χρήση ενός decorator ως "
"εξής::"

msgid ""
"We can now use ``foo__ne`` for any field ``foo``. You will need to ensure "
"that this registration happens before you try to create any querysets using "
"it. You could place the implementation in a ``models.py`` file, or register "
"the lookup in the ``ready()`` method of an ``AppConfig``."
msgstr ""
"Τώρα μπορούμε να χρησιμοποιήσουμε το ``foo__ne`` για κάθε τύπο πεδίου του "
"``foo``. Θα χρειαστεί να βεβαιωθείτε ότι το registration του lookup, γίνεται "
"πριν προσπαθήσετε να δημιουργήσετε querysets χρησιμοποιώντας το. Θα "
"μπορούσατε να τοποθετήσετε τον παραπάνω κώδικα μέσα στο αρχείο ``models.py`` "
"ή να κάνετε register το lookup μέσα στη μέθοδο ``ready()`` στο αντίστοιχο "
"``AppConfig`` της εφαρμογής σας."

msgid ""
"Taking a closer look at the implementation, the first required attribute is "
"``lookup_name``. This allows the ORM to understand how to interpret "
"``name__ne`` and use ``NotEqual`` to generate the SQL. By convention, these "
"names are always lowercase strings containing only letters, but the only "
"hard requirement is that it must not contain the string ``__``."
msgstr ""
"Ρίχνοντας μια πιο προσεκτική ματιά στην υλοποίηση αυτού του lookup, το πρώτο "
"απαραίτητο attribute που χρειάζεται είναι το ``lookup_name``. Αυτό επιτρέπει "
"στο Django ORM να καταλάβει πως να μεταφράσει το ``name__ne`` και να "
"χρησιμοποιήσει την κλάση ``NotEqual`` για να παράξει την SQL. Συμβατικά, "
"αυτά τα ονόματα είναι πάντα πεζοί χαρακτήρες (μόνο γράμματα) και η μοναδική "
"αυστηρή απαίτηση είναι να μην περιέχουν δύο συνεχόμενες κάτω παύλες, ``__``."

msgid ""
"We then need to define the ``as_sql`` method. This takes a ``SQLCompiler`` "
"object, called ``compiler``,  and the active database connection. "
"``SQLCompiler`` objects are not documented, but the only thing we need to "
"know about them is that they have a ``compile()`` method which returns a "
"tuple containing an SQL string, and the parameters to be interpolated into "
"that string. In most cases, you don't need to use it directly and can pass "
"it on to ``process_lhs()`` and ``process_rhs()``."
msgstr ""
"Έπειτα χρειάζεται να ορίσουμε την μέθοδο ``as_sql``. Αυτή δέχεται ως όρισμα "
"ένα ``SQLCompiler`` object, με το όνομα ``compiler`` και την ενεργή σύνδεση "
"της βάσης δεδομένων με το όνομα ``connection``. Τα ``SQLCompiler`` objects "
"δεν βρίσκονται κάπου γραμμένα στο εγχειρίδιο του Django αλλά το μόνο πράγμα "
"που χρειάζεται να ξέρετε γι' αυτά είναι ότι έχουν μια μέθοδο ``compile()`` η "
"οποία επιστρέφει ένα tuple που περιέχει ένα SQL string και κάποιες "
"παραμέτρους οι οποίες “γεμίζουν” αυτό το SQL string. Στις περισσότερες "
"περιπτώσεις δεν θα χρειαστεί να την χρησιμοποιήσετε και μπορείτε να "
"συνεχίσετε με τις μεθόδους ``process_lhs()`` και ``process_rhs()``."

msgid ""
"A ``Lookup`` works against two values, ``lhs`` and ``rhs``, standing for "
"left-hand side and right-hand side. The left-hand side is usually a field "
"reference, but it can be anything implementing the :ref:`query expression "
"API <query-expression>`. The right-hand is the value given by the user. In "
"the example ``Author.objects.filter(name__ne='Jack')``, the left-hand side "
"is a reference to the ``name`` field of the ``Author`` model, and ``'Jack'`` "
"is the right-hand side."
msgstr ""
"Ένα ``Lookup`` συνεργάζεται με δύο τιμές, την ``lhs`` και την ``rhs``, οι "
"οποίες είναι σύντμηση των λέξεων left-hand side (αριστερό μέρος) και right-"
"hand side (δεξί μέρος). Το αριστερό μέρος αναφέρεται συνήθως σε κάποιο πεδίο "
"αλλά μπορεί να είναι οτιδήποτε αρκεί να έχει υλοποιήσει το :ref:`API για "
"εκφράσεις ερωτημάτων <query-expression>`. Το δεξί μέρος είναι η τιμή η οποία "
"δίνεται από τον χρήστη. Στο παράδειγμα ``Author.objects."
"filter(name__ne='Jack')``, το αριστερό μέρος αναφέρεται στο πεδίο ``name`` "
"του μοντέλου ``Author`` και το string ``'Jack'`` αποτελεί το δεξί μέρος."

msgid ""
"We call ``process_lhs`` and ``process_rhs`` to convert them into the values "
"we need for SQL using the ``compiler`` object described before. These "
"methods return tuples containing some SQL and the parameters to be "
"interpolated into that SQL, just as we need to return from our ``as_sql`` "
"method. In the above example, ``process_lhs`` returns ``('\"author\".\"name"
"\"', [])`` and ``process_rhs`` returns ``('\"%s\"', ['Jack'])``. In this "
"example there were no parameters for the left hand side, but this would "
"depend on the object we have, so we still need to include them in the "
"parameters we return."
msgstr ""
"Καλούμε την ``process_lhs`` και την ``process_rhs`` για να μετατρέψουμε το "
"``Author.objects.filter(name__ne='Jack')`` στις τιμές που χρειαζόμαστε για "
"την SQL χρησιμοποιώντας το ``compiler`` object που περιγράψαμε παραπάνω. "
"Αυτές οι μέθοδοι επιστρέφουν tuples που περιέχουν λίγη SQL και κάποιες "
"παραμέτρους που θα “γεμίσουν” αυτή την SQL. Ότι ακριβώς χρειαζόμαστε για να "
"επιστρέψει η μέθοδος ``as_sql``. Στο παραπάνω παράδειγμα, η ``process_lhs`` "
"επιστρέφει ``('\"author\".\"name\"', [])`` και η ``process_rhs`` επιστρέφει "
"``('\"%s\"', ['Jack'])``. Όπως θα είδατε, δεν υπάρχουν παράμετροι για το "
"αριστερό μέρος, αλλά αυτό εξαρτάται από την περίπτωση. Όπως και να έχει "
"πάντως, θα πρέπει πάντα να περιλαμβάνονται στο τελικό tuple προς επιστροφή "
"(η μεταβλητή ``params`` στην ``as_sql``)."

msgid ""
"Finally we combine the parts into an SQL expression with ``<>``, and supply "
"all the parameters for the query. We then return a tuple containing the "
"generated SQL string and the parameters."
msgstr ""
"Στο τέλος ενώνουμε τα μέρη σε μια SQL εντολή με τη χρήση του ``<>`` και "
"παρέχουμε όλες τις παραμέτρους για το query (ερώτημα). Αυτό που επιστρέφουμε "
"είναι ένα tuple που περιέχει την παραγόμενη SQL εντολή και τις παραμέτρους, "
"κενές ή όχι. Το tuple που θα επιστραφεί, αναφερόμενοι στην ανωτέρω "
"``as_sql``, είναι το ``('\"author\".\"name\" <> \"%s\"', ['Jack'])``."

msgid "A simple transformer example"
msgstr "Ένα απλό παράδειγμα transformer"

msgid ""
"The custom lookup above is great, but in some cases you may want to be able "
"to chain lookups together. For example, let's suppose we are building an "
"application where we want to make use of the ``abs()`` operator. We have an "
"``Experiment`` model which records a start value, end value, and the change "
"(start - end). We would like to find all experiments where the change was "
"equal to a certain amount (``Experiment.objects.filter(change__abs=27)``), "
"or where it did not exceed a certain amount (``Experiment.objects."
"filter(change__abs__lt=27)``)."
msgstr ""
"Το παραπάνω lookup που φτιάξαμε είναι ωραίο, αλλά σε αρκετές περιπτώσεις θα "
"θέλετε να έχετε τη δυνατότητα να ενώνετε τα lookups μεταξύ τους. Για "
"παράδειγμα, ας υποθέσουμε ότι χτίζουμε μια εφαρμογή όπου θέλουμε να κάνουμε "
"χρήση της μεθόδου ``abs()``, που επιστρέφει το απόλυτο ενός αριθμού. Έχουμε "
"ένα μοντέλο με το όνομα ``Experiment`` το οποίο καταγράφει μια τιμή έναρξης "
"(start), μια τέλους (end) και την αλλαγή (αρχή – τέλος). Θα θέλαμε να βρούμε "
"όλα τα πειράματα (experiments) όπου η αλλαγή ήταν ίση με μια συγκεκριμένη "
"τιμή (``Experiment.objects.filter(change__abs=27)``) ή η αλλαγή ήταν "
"μικρότερη ή ίση μιας συγκεκριμένης τιμής (``Experiment.objects."
"filter(change__abs__lt=27)``). Εδώ βλέπετε τη σύνδεση μεταξύ των lookups που "
"αναφέραμε πριν (``abs__lt``)."

msgid ""
"This example is somewhat contrived, but it nicely demonstrates the range of "
"functionality which is possible in a database backend independent manner, "
"and without duplicating functionality already in Django."
msgstr ""
"Αυτό το παράδειγμα είναι λίγο πολύ σκηνοθετημένο αλλά επιδεικνύει όμορφα "
"τις  λειτουργίες που είναι δυνατόν να υλοποιηθούν χωρίς την εξάρτηση πάνω σε "
"μια συγκεκριμένη βάση δεδομένων και χωρίς να ξαναγράφουμε κώδικα που υπάρχει "
"ήδη στο Django."

msgid ""
"We will start by writing a ``AbsoluteValue`` transformer. This will use the "
"SQL function ``ABS()`` to transform the value before comparison::"
msgstr ""
"Θα ξεκινήσουμε γράφοντας έναν ``AbsoluteValue`` transformer (στην ουσία "
"είναι μια δικιά μας κλάση που κληρονομεί από την κλάση ``Transform``). Η "
"κλάση αυτή θα χρησιμοποιήσει την SQL συνάρτηση ``ABS()`` για να μετατρέψει "
"την τιμή πριν την συγκρίνει::"

msgid "Next, let's register it for ``IntegerField``::"
msgstr ""
"Επόμενο βήμα είναι κάνουμε register την κλάση μας με το πεδίο "
"``IntegerField``::"

msgid ""
"We can now run the queries we had before. ``Experiment.objects."
"filter(change__abs=27)`` will generate the following SQL::"
msgstr ""
"Μπορούμε τώρα να τρέξουμε τα queries στα οποία αναφερθήκαμε παραπάνω. Το "
"``Experiment.objects.filter(change__abs=27)`` θα παράξει την ακόλουθη SQL "
"εντολή::"

msgid ""
"By using ``Transform`` instead of ``Lookup`` it means we are able to chain "
"further lookups afterwards. So ``Experiment.objects."
"filter(change__abs__lt=27)`` will generate the following SQL::"
msgstr ""
"Χρησιμοποιώντας την ``Transform`` αντί της ``Lookup`` μας επιτρέπει να "
"συνδέουμε περαιτέρω lookups στην αλυσίδα. Επομένως το ``Experiment.objects."
"filter(change__abs__lt=27)`` θα παράξει την ακόλουθη SQL εντολή::"

msgid ""
"Note that in case there is no other lookup specified, Django interprets "
"``change__abs=27`` as ``change__abs__exact=27``."
msgstr ""
"Σημειώστε ότι στην περίπτωση που δεν υπάρχει άλλο lookup στο τέλος, το "
"Django μεταφράζει το ``change__abs=27`` ως ``change__abs__exact=27``."

msgid ""
"When looking for which lookups are allowable after the ``Transform`` has "
"been applied, Django uses the ``output_field`` attribute. We didn't need to "
"specify this here as it didn't change, but supposing we were applying "
"``AbsoluteValue`` to some field which represents a more complex type (for "
"example a point relative to an origin, or a complex number) then we may have "
"wanted to specify that the transform returns a ``FloatField`` type for "
"further lookups. This can be done by adding an ``output_field`` attribute to "
"the transform::"
msgstr ""
"Για να βρει το Django τον τύπο των lookups που επιτρέπονται μετά το δικό μας "
"(``AbsoluteValue``), κοιτάζει το attribute ``output_field`` το οποίο δεν "
"χρειάστηκε να το ορίσουμε στο συγκεκριμένο παράδειγμα γιατί έτυχε ο αριθμός "
"που συγκρίνουμε, στο δεξί μέρος, να είναι ακέραιος (27). Αν μπερδευτήκατε, "
"ας το ξεκαθαρίσουμε: Η ``Transform`` προσφέρει τη μετατροπή ενός πεδίου (πχ "
"του ``change``) σε κάποια άλλη τιμή (πχ από -27 που μπορεί να ήταν, σε 27) "
"προτού συγκριθεί με το δεξί μέρος και γίνει το lookup στη βάση δεδομένων. Ο "
"τύπος της νέας αυτής τιμής (πχ 27 αντί -27) δηλώνεται στο ``output_field`` "
"του δικού μας ``AbsoluteValue ``. Δεν το δηλώσαμε γιατί και οι δύο τιμές "
"είναι τύπου int. Αν υποθέσουμε όμως ότι έχουμε πιο περίπλοκα πεδία (πχ "
"καρτεσιανές συντεταγμένες ή μιγαδικούς αριθμούς) τότε ίσως θα θέλαμε να "
"προσδιορίσουμε τον τύπο της νέας τιμής ως ``FloatField`` για περαιτέρω "
"lookups. Αυτό μπορεί να γίνει θέτοντας το attribute `` output_field`` ως "
"property της δικής μας κλάσης, ως εξής::"

msgid ""
"This ensures that further lookups like ``abs__lte`` behave as they would for "
"a ``FloatField``."
msgstr ""
"Με αυτό τον τρόπο είμαστε σίγουροι ότι το δικό μας transformation θα "
"επιστρέψει μια τιμή τύπου float και τα επόμενα lookups (αν υπάρχουν, πχ το "
"lte στο ``abs__lte``) θα “δουν” την τιμή αυτή ως float και όχι ως int όπως "
"ήταν στην αρχή. Ένα άλλο πολύ κοινό παράδειγμα της ``Transform`` είναι η "
"μετατροπή ενός ``DateField`` στην τιμή του έτους μόνο. Για παράδειγμα, θα "
"θέλατε να δείτε ποια πειράματα έγιναν το έτος 2016. Θα θέλατε να το γράψετε "
"ως εξής: ``Experiment.objects.filter(date__year=2016)``. Το ``date`` είναι "
"το πεδίο του μοντέλου μας, τύπου ``DateField`` και το ``year`` το lookup "
"(που υπάρχει ήδη μέσα στο Django). Το ``year`` lookup “ξηλώνει” μόνο το έτος "
"από την ημερομηνία και το συγκρίνει με το 2016. Έτσι, μετατρέπεται η "
"ημερομηνία (``DateField``) σε έτος (``IntegerField``) και συγκρίνεται με το "
"δεξί μέρος."

msgid "Writing an efficient ``abs__lt`` lookup"
msgstr "Γράφοντας ένα πιο αποτελεσματικό ``abs__lt`` lookup"

msgid ""
"When using the above written ``abs`` lookup, the SQL produced will not use "
"indexes efficiently in some cases. In particular, when we use "
"``change__abs__lt=27``, this is equivalent to ``change__gt=-27`` AND "
"``change__lt=27``. (For the ``lte`` case we could use the SQL ``BETWEEN``)."
msgstr ""
"Όταν χρησιμοποιούμε το παραπάνω ``abs`` lookup, η παραγόμενη SQL, σε μερικές "
"περιπτώσεις, δεν χρησιμοποιεί αποτελεσματικά τα ευρετήρια (indexes) της "
"βάσης δεδομένων. Πιο συγκεκριμένα, όταν χρησιμοποιούμε το "
"``change__abs__lt=27``, αυτό είναι ισοδύναμο με το ``change__gt=-27`` AND "
"``change__lt=27``. (Στη περίπτωση του ``lte`` θα μπορούσαμε να "
"χρησιμοποιήσουμε την εντολή SQL ``BETWEEN``)."

msgid ""
"So we would like ``Experiment.objects.filter(change__abs__lt=27)`` to "
"generate the following SQL::"
msgstr ""
"Θα θέλαμε, επομένως, η παραγόμενη SQL από το ``Experiment.objects."
"filter(change__abs__lt=27)`` να δείχνει κάπως έτσι::"

msgid "The implementation is::"
msgstr "Η υλοποίηση αυτού φαίνεται παρακάτω::"

msgid ""
"There are a couple of notable things going on. First, "
"``AbsoluteValueLessThan`` isn't calling ``process_lhs()``. Instead it skips "
"the transformation of the ``lhs`` done by ``AbsoluteValue`` and uses the "
"original ``lhs``. That is, we want to get ``\"experiments\".\"change\"`` not "
"``ABS(\"experiments\".\"change\")``. Referring directly to ``self.lhs.lhs`` "
"is safe as ``AbsoluteValueLessThan`` can be accessed only from the "
"``AbsoluteValue`` lookup, that is the ``lhs`` is always an instance of "
"``AbsoluteValue``."
msgstr ""
"Υπάρχουν μερικά αξιοσημείωτα πράγματα εδώ. Πρώτα απ’ όλα το "
"``AbsoluteValueLessThan`` δεν καλεί τη μέθοδο ``process_lhs()``. Αντιθέτως, "
"υπερπηδά τη μετατροπή του ``lhs`` που γίνεται από την ``AbsoluteValue`` και "
"χρησιμοποιεί την αρχική τιμή του `lhs`` (το ``self.lhs`` είναι η τιμή μετά "
"την μετατροπή ενώ το ``self.lhs.lhs`` είναι η αρχική τιμή του ``change``). "
"Αυτό γίνεται γιατί θέλουμε να έχουμε το ``\"experiments\".\"change\"`` και "
"όχι το ``ABS(\"experiments\".\"change\")``. Είναι ασφαλής η αναφορά μας απ’ "
"ευθείας στο ``self.lhs.lhs`` γιατί η ``Lookup`` κλάση "
"``AbsoluteValueLessThan`` μπορεί να προσπελασθεί μόνο από την ``Transform`` "
"κλάση ``AbsoluteValue`` (λόγω του register στην τελευταία γραμμή), δηλαδή το "
"``lhs`` θα είναι πάντα ένα instance της Transform κλάσης ``AbsoluteValue``."

msgid ""
"Notice also that  as both sides are used multiple times in the query the "
"params need to contain ``lhs_params`` and ``rhs_params`` multiple times."
msgstr ""
"Επισημαίνεται επίσης το γεγονός ότι όχι μόνο και τα δύο μέρη (αριστερό και "
"δεξί) χρησιμοποιούνται πολλές φορές μέσα στο SQL query αλλά και οι "
"παράμετροι επίσης (``lhs_params`` και ``rhs_params``)."

msgid ""
"The final query does the inversion (``27`` to ``-27``) directly in the "
"database. The reason for doing this is that if the ``self.rhs`` is something "
"else than a plain integer value (for example an ``F()`` reference) we can't "
"do the transformations in Python."
msgstr ""
"Ο λόγος που γίνεται αυτό είναι γιατί, σε περίπτωση που το ``self.rhs`` είναι "
"κάτι διαφορετικό από έναν ακέραιο (πχ μια αναφορά σε ένα ``F()``) δε θα "
"μπορούμε να κάνουμε τις μετατροπές στην Python."

msgid ""
"In fact, most lookups with ``__abs`` could be implemented as range queries "
"like this, and on most database backends it is likely to be more sensible to "
"do so as you can make use of the indexes. However with PostgreSQL you may "
"want to add an index on ``abs(change)`` which would allow these queries to "
"be very efficient."
msgstr ""
"Στην πραγματικότητα, τα περισσότερα lookups που εμπεριέχουν το ``__abs`` θα "
"μπορούσαν να υλοποιηθούν με την παραπάνω μέθοδο και στις περισσότερες βάσεις "
"δεδομένων θα μπορέσετε να εκμεταλλευτείτε τη δυνατότητα των ευρετηρίων "
"(indexes) τους. Ωστόσο, στην PostgreSQL ίσως θα θέλατε να προσθέσετε ένα "
"ευρετήριο για το ``abs(change)`` το οποίο θα επιτρέψει σε αυτά τα queries να "
"είναι πολύ αποτελεσματικά."

msgid "A bilateral transformer example"
msgstr "Ένα παράδειγμα ενός διμερούς transformer"

msgid ""
"The ``AbsoluteValue`` example we discussed previously is a transformation "
"which applies to the left-hand side of the lookup. There may be some cases "
"where you want the transformation to be applied to both the left-hand side "
"and the right-hand side. For instance, if you want to filter a queryset "
"based on the equality of the left and right-hand side insensitively to some "
"SQL function."
msgstr ""
"Το παράδειγμα της ``Transformer`` κλάσης ``AbsoluteValue`` που περιγράψαμε "
"παραπάνω είναι μια μετατροπή η οποία εφαρμόζεται στο αριστερό μέρος του "
"lookup (στο πεδίο ``change``). Ίσως να υπάρξουν, μερικές περιπτώσεις όπου θα "
"θέλατε η μετατροπή να εφαρμοστεί και στο αριστερό και στο δεξί μέρος. Για "
"παράδειγμα, αν θέλετε να φιλτράρετε ένα queryset βασιζόμενο στην ισότητα των "
"δύο μερών (αριστερό και δεξί) με την χρήση κάποιας SQL συνάρτησης."

msgid ""
"Let's examine the simple example of case-insensitive transformation here. "
"This transformation isn't very useful in practice as Django already comes "
"with a bunch of built-in case-insensitive lookups, but it will be a nice "
"demonstration of bilateral transformations in a database-agnostic way."
msgstr ""
"Ας εξετάσουμε την απλή περίπτωση μιας μετατροπής που δεν κάνει διάκριση "
"μεταξύ πεζών και κεφαλαίων γραμμάτων. Αυτή η μετατροπή δεν είναι πολύ "
"χρήσιμη στην πράξη καθώς το Django έχει προεγκατεστημένα αρκετά lookups που "
"δεν κάνουν διακρίσεις μεταξύ πεζών-κεφαλαίων. Παρόλ’ αυτά αποτελεί ένα "
"χρήσιμο παράδειγμα για την επίδειξη των διμερών μετατροπών (bilateral "
"transformations) ανεξαρτήτως της βάση δεδομένων που χρησιμοποιείται."

msgid ""
"We define an ``UpperCase`` transformer which uses the SQL function "
"``UPPER()`` to transform the values before comparison. We define :attr:"
"`bilateral = True <django.db.models.Transform.bilateral>` to indicate that "
"this transformation should apply to both ``lhs`` and ``rhs``::"
msgstr ""
"Ορίζουμε έναν transformer ``UpperCase`` ο οποίος χρησιμοποιεί την SQL "
"συνάρτηση ``UPPER()`` για να μετατρέψει τις τιμές πριν την σύγκριση. Θέτουμε "
"το attribute :attr:`bilateral = True <django.db.models.Transform.bilateral>` "
"για να υποδείξουμε ότι η μετατροπή θα πρέπει να γίνει όχι μόνο στο αριστερό "
"μέρος, ``lhs``, αλλά και στο δεξί, ``rhs``::"

msgid "Next, let's register it::"
msgstr "Έπειτα το κάνουμε register με τους ανάλογους τύπους πεδίων::"

msgid ""
"Now, the queryset ``Author.objects.filter(name__upper=\"doe\")`` will "
"generate a case insensitive query like this::"
msgstr ""
"Τώρα το queryset ``Author.objects.filter(name__upper=\"doe\")`` θα παράξει "
"ένα query το οποίο δεν θα κάνει διάκριση μεταξύ πεζών-κεφαλαίων γραμμάτων::"

msgid "Writing alternative implementations for existing lookups"
msgstr "Γράφοντας εναλλακτικές υλοποιήσεις για ήδη υπάρχοντα lookups"

msgid ""
"Sometimes different database vendors require different SQL for the same "
"operation. For this example we will rewrite a custom implementation for "
"MySQL for the NotEqual operator. Instead of ``<>`` we will be using ``!=`` "
"operator. (Note that in reality almost all databases support both, including "
"all the official databases supported by Django)."
msgstr ""
"Κάποιες φορές, μερικές βάσεις δεδομένων απαιτούν έναν διαφορετικό τρόπο "
"γραφής της SQL για την ίδια λειτουργία. Για παράδειγμα, κάποιες βάσεις για "
"να προσδιορίσουν τη λογική \"όχι ίσο με\", αντί του συμβόλου ``<>`` απαιτούν "
"το ``!=``. (Στην πραγματικότητα σχεδόν όλες οι βάσεις δεδομένων υποστηρίζουν "
"και τα δύο αυτά σύμβολα, συμπεριλαμβανομένων και όλων των επίσημων βάσεων "
"δεδομένων που υποστηρίζει το Django). Σε αυτό το παράδειγμα θα ξαναγράψουμε "
"μια δικιά μας υλοποίηση, για την MySQL, της λειτουργίας NotEqual."

msgid ""
"We can change the behavior on a specific backend by creating a subclass of "
"``NotEqual`` with a ``as_mysql`` method::"
msgstr ""
"Μπορούμε να αλλάξουμε τη συμπεριφορά για ένα συγκεκριμένο database backend "
"δημιουργώντας μια subclass της ``NotEqual`` η οποία δεν υλοποιεί τη μέθοδο "
"``as_sql `` αλλά την ``as_mysql``::"

msgid ""
"We can then register it with ``Field``. It takes the place of the original "
"``NotEqual`` class as it has the same ``lookup_name``."
msgstr ""
"Μπορούμε, έπειτα, να κάνουμε register την κλάση αυτή με το ``Field``. Η "
"κλάση ``MySQLNotEqual`` αντικαθιστά την κλάση ``NotEqual``, μόνο για τις "
"MySQL βάσεις δεδομένων, αφού μοιράζονται το ίδιο ``lookup_name``."

msgid ""
"When compiling a query, Django first looks for ``as_%s % connection.vendor`` "
"methods, and then falls back to ``as_sql``. The vendor names for the in-"
"built backends are ``sqlite``, ``postgresql``, ``oracle`` and ``mysql``."
msgstr ""
"Κατά τη διάρκεια μετάφρασης του query, το Django ψάχνει για τις μεθόδους``as_"
"%s % connection.vendor`` και αν δεν βρει κάποια τότε χρησιμοποιεί την "
"``as_sql``. Τα ονόματα των vendor για τις προεγκατεστημένες στο Django "
"database backends είναι τα ``sqlite``, ``postgresql``, ``oracle`` και "
"``mysql``."

msgid "How Django determines the lookups and transforms which are used"
msgstr ""
"Πως προσδιορίζει το Django τα lookups και τα transforms που χρησιμοποιούνται"

msgid ""
"In some cases you may wish to dynamically change which ``Transform`` or "
"``Lookup`` is returned based on the name passed in, rather than fixing it. "
"As an example, you could have a field which stores coordinates or an "
"arbitrary dimension, and wish to allow a syntax like ``."
"filter(coords__x7=4)`` to return the objects where the 7th coordinate has "
"value 4. In order to do this, you would override ``get_lookup`` with "
"something like::"
msgstr ""
"Σε μερικές περιπτώσεις θα θέλατε να αλλάξετε, δυναμικά, το ``Transform`` ή "
"το ``Lookup`` που επιστρέφεται ανάλογα το όνομα που δίνεται στο query παρά "
"να μπείτε στη διαδικασία να φτιάξετε ένα για το καθένα. Θα μπορούσατε, για "
"παράδειγμα, να έχετε ένα πεδίο το οποίο αποθηκεύει συντεταγμένες ή κάποια "
"αυθαίρετη διάσταση και θέλετε να μπορείτε να γράφετε το ``."
"filter(coords__x7=4)`` και να σας επιστρέφει τα objects όπου η 7η "
"συντεταγμένη έχει την τιμή 4. Για να το κάνετε αυτό, θα πρέπει να "
"παρακάμψετε (override) την ``get_lookup`` με κάτι σαν αυτό::"

msgid ""
"You would then define ``get_coordinate_lookup`` appropriately to return a "
"``Lookup`` subclass which handles the relevant value of ``dimension``."
msgstr ""
"Μετά θα ορίσετε τη μέθοδο ``get_coordinate_lookup``, καταλλήλως, για να "
"επιστρέφει μια subclass της ``Lookup`` η οποία θα χειριστεί την σχετική τιμή "
"της μεταβλητής ``dimension``."

msgid ""
"There is a similarly named method called ``get_transform()``. "
"``get_lookup()`` should always return a ``Lookup`` subclass, and "
"``get_transform()`` a ``Transform`` subclass. It is important to remember "
"that ``Transform`` objects can be further filtered on, and ``Lookup`` "
"objects cannot."
msgstr ""
"Ομοίως, υπάρχει μια μέθοδος για την ``Transform`` με το όνομα "
"``get_transform()``. Η μέθοδος ``get_lookup()`` θα πρέπει πάντα να "
"επιστρέφει μια subclass της ``Lookup`` ενώ η ``get_transform()`` μια "
"subclass της ``Transform``. Είναι σημαντικό να θυμάστε ότι τα objects της "
"κλάσης ``Transform`` μπορούν να φιλτραριστούν περαιτέρω ενώ τα objects της "
"κλάσης ``Lookup`` όχι."

msgid ""
"When filtering, if there is only one lookup name remaining to be resolved, "
"we will look for a ``Lookup``. If there are multiple names, it will look for "
"a ``Transform``. In the situation where there is only one name and a "
"``Lookup`` is not found, we look for a ``Transform`` and then the ``exact`` "
"lookup on that ``Transform``. All call sequences always end with a "
"``Lookup``. To clarify:"
msgstr ""
"Όταν φιλτράρετε και έχει απομείνει μόνο ένα lookup όνομα, το Django ψάξει "
"για κάποιο ``Lookup``. Αν υπάρχουν πολλά τότε θα ψάξει για κάποιο "
"``Transform``. Στην περίπτωση που υπάρχει μόνο ένα όνομα και δεν βρεθεί "
"κάποιο ``Lookup``, τότε το Django θα ψάξει για ένα ``Transform`` και μετά το "
"``exact`` lookup πάνω σε αυτό το ``Transform``. Στο τέλος, το Django, πάντα "
"θα ψάχνει για ένα ``Lookup``. Για να ξεκαθαρίσουμε λίγο το τοπίο:"

msgid ""
"``.filter(myfield__mylookup)`` will call ``myfield.get_lookup('mylookup')``."
msgstr ""
"Το ``.filter(myfield__mylookup)`` θα καλέσει την μέθοδο ``myfield."
"get_lookup('mylookup')``."

msgid ""
"``.filter(myfield__mytransform__mylookup)`` will call ``myfield."
"get_transform('mytransform')``, and then ``mytransform."
"get_lookup('mylookup')``."
msgstr ""
"Το ``.filter(myfield__mytransform__mylookup)`` θα καλέσει τη μέθοδο "
"``myfield.get_transform('mytransform')`` και μετά την ``mytransform."
"get_lookup('mylookup')``."

msgid ""
"``.filter(myfield__mytransform)`` will first call ``myfield."
"get_lookup('mytransform')``, which will fail, so it will fall back to "
"calling ``myfield.get_transform('mytransform')`` and then ``mytransform."
"get_lookup('exact')``."
msgstr ""
"Το ``.filter(myfield__mytransform)`` θα καλέσει πρώτα τη μέθοδο ``myfield."
"get_lookup('mytransform')``, η οποία θα αποτύχει. Έπειτα θα καλέσει την "
"μέθοδο ``myfield.get_transform('mytransform')`` και τέλος την ``mytransform."
"get_lookup('exact')``."

msgid "Writing custom ``django-admin`` commands"
msgstr "Γράφοντας δικές σας ``django-admin`` εντολές"

msgid ""
"Applications can register their own actions with ``manage.py``. For example, "
"you might want to add a ``manage.py`` action for a Django app that you're "
"distributing. In this document, we will be building a custom ``closepoll`` "
"command for the ``polls`` application from the :doc:`tutorial</intro/"
"tutorial01>`."
msgstr ""
"Οι εφαρμογές μπορούν να κάνουν register τις δικές τους ενέργειες με το "
"``manage.py``. Για παράδειγμα, ίσως να θέλετε να προσθέσετε μια ``manage."
"py`` ενέργεια για ένα Django app το οποίο προωθείτε για διανομή. Σε αυτό το "
"άρθρο θα χτίσουμε μια δικιά μας εντολή, με το όνομα ``closepoll``, για την "
"εφαρμογή ``polls`` που φτιάξαμε στον :doc:`οδηγό </intro/tutorial01>`."

msgid ""
"To do this, just add a ``management/commands`` directory to the application. "
"Django will register a ``manage.py`` command for each Python module in that "
"directory whose name doesn't begin with an underscore. For example::"
msgstr ""
"Για να το κάνουμε αυτό, απλά δημιουργήστε μια δομή φακέλων μέσα στην "
"εφαρμογή ως εξής: ``management/commands``. Το Django θα κάνει register μια "
"``manage.py`` εντολή για κάθε Python module μέσα σε αυτό το φάκελο του "
"οποίου το όνομα δεν ξεκινά με τον χαρακτήρα της κάτω παύλας. Για παράδειγμα::"

msgid ""
"On Python 2, be sure to include ``__init__.py`` files in both the "
"``management`` and ``management/commands`` directories as done above or your "
"command will not be detected."
msgstr ""
"Αν χρησιμοποιείτε την Python 2, σιγουρευτείτε ότι το αρχείο ``__init__.py`` "
"(κενό αρχείο) υπάρχει και στους δύο φακέλους (``management`` και "
"``management/commands``) όπως φαίνεται παραπάνω αλλιώς η εντολή σας δεν θα "
"μπορέσει να εντοπιστεί."

msgid ""
"In this example, the ``closepoll`` command will be made available to any "
"project that includes the ``polls`` application in :setting:`INSTALLED_APPS`."
msgstr ""
"Σε αυτό το παράδειγμα, η εντολή ``closepoll`` θα είναι διαθέσιμη σε κάθε "
"project που έχει εγκατεστημένη αυτή την εφαρμογή, ήτοι, η εφαρμογή ``polls`` "
"βρίσκεται μέσα στη ρύθμιση :setting:`INSTALLED_APPS`."

msgid ""
"The ``_private.py`` module will not be available as a management command."
msgstr ""
"Το module ``_private.py`` δεν θα είναι διαθέσιμο ως μια εντολή διαχείρισης "
"(management command), αφού το όνομα του ξεκινά με την κάτω παύλα."

msgid ""
"The ``closepoll.py`` module has only one requirement -- it must define a "
"class ``Command`` that extends :class:`BaseCommand` or one of its :ref:"
"`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"Το module ``closepoll.py`` έχει μόνο μια απαίτηση -- πρέπει να ορίσει μια "
"κλάση ``Command`` η οποία κάνει extend την κλάση :class:`BaseCommand` ή μια "
"από τις :ref:`subclasses<ref-basecommand-subclasses>` της."

msgid "Standalone scripts"
msgstr "Αυτόνομα scripts"

msgid ""
"Custom management commands are especially useful for running standalone "
"scripts or for scripts that are periodically executed from the UNIX crontab "
"or from Windows scheduled tasks control panel."
msgstr ""
"Οι παραμετροποιήσιμες εντολές διαχείρισης είναι εξαιρετικά χρήσιμες για την "
"εκτέλεση αυτόνομων scripts ή για scripts τα οποία εκτελούνται σε περιοδική "
"βάση από το crontab του UNIX ή από τα scheduled tasks των Windows."

msgid ""
"To implement the command, edit ``polls/management/commands/closepoll.py`` to "
"look like this::"
msgstr ""
"Για να υλοποιήσετε την εντολή επεξεργαστείτε το αρχείο ``polls/management/"
"commands/closepoll.py`` για να δείχνει κάπως έτσι::"

msgid ""
"When you are using management commands and wish to provide console output, "
"you should write to ``self.stdout`` and ``self.stderr``, instead of printing "
"to ``stdout`` and ``stderr`` directly. By using these proxies, it becomes "
"much easier to test your custom command. Note also that you don't need to "
"end messages with a newline character, it will be added automatically, "
"unless you specify the ``ending`` parameter::"
msgstr ""
"Όταν χρησιμοποιείτε εντολές διαχείρισης και θέλετε να εμφανίσετε κάτι στην "
"κονσόλα, θα πρέπει να το στέλνετε στο ``self.stdout`` και στο ``self."
"stderr``, αντί να το εκτυπώνετε απ’ ευθείας στο ``stdout`` και ``stderr``. "
"Χρησιμοποιώντας αυτά, το τεστ της εντολής σας γίνεται παιχνιδάκι. Σημειώστε, "
"επίσης, ότι δεν χρειάζεται να προσθέτετε το χαρακτήρα της νέας γραμμής (line "
"feed) στο τέλος κάθε ``self.stdout`` ή ``self.stderr`` του μηνύματος σας. Θα "
"προστεθεί αυτόματα από το Django εκτός και αν θέλετε διαφορετικά "
"χρησιμοποιώντας την παράμετρο ``ending``::"

msgid ""
"The new custom command can be called using ``python manage.py closepoll "
"<poll_id>``."
msgstr ""
"Την καινούργια σας εντολή μπορείτε να την καλείτε ως ``python manage.py "
"closepoll <poll_id>``. Αν θέλετε να δείτε όλες τις διαθέσιμες εντολές, όλων "
"των ενεργοποιημένων apps του project σας, πληκτρολογήστε ``python manage."
"py`` και εκεί θα δείτε και τη δική σας κάτω από την εφαρμογή ``polls``."

msgid ""
"The ``handle()`` method takes one or more ``poll_ids`` and sets ``poll."
"opened`` to ``False`` for each one. If the user referenced any nonexistent "
"polls, a :exc:`CommandError` is raised. The ``poll.opened`` attribute does "
"not exist in the :doc:`tutorial</intro/tutorial01>` and was added to ``polls."
"models.Question`` for this example."
msgstr ""
"Η μέθοδος ``handle()`` λαμβάνει ένα ή περισσότερα ``poll_ids`` (το "
"``<poll_id>`` μέσα στο ``python manage.py closepoll <poll_id>``, που αν "
"θέλουμε να προσθέσουμε πολλά τα διαχωρίζουμε με κενό) και θέτει το attribute "
"``poll.opened`` σε ``False`` για κάθε ένα poll. Αν ο χρήστης έχει "
"πληκτρολογήσει κάποιο ή κάποια polls που δεν υπάρχουν, το σφάλμα :exc:"
"`CommandError` γίνεται raised. Το attribute ``poll.opened`` δεν υπάρχει "
"στον :doc:`οδηγό </intro/tutorial01>` και προστέθηκε στο μοντέλο ``polls."
"models.Question`` για το συγκεκριμένο παράδειγμα. Δεν έχετε παρά να το "
"προσθέσετε και εσείς, όμως μην ξεχάσετε να τρέξετε τις εντολές "
"``makemigrations`` και ``migrate`` για να προστεθεί η αντίστοιχη στήλη στη "
"βάση δεδομένων σας."

msgid "Accepting optional arguments"
msgstr "Προαιρετικά arguments"

msgid ""
"The same ``closepoll`` could be easily modified to delete a given poll "
"instead of closing it by accepting additional command line options. These "
"custom options can be added in the :meth:`~BaseCommand.add_arguments` method "
"like this::"
msgstr ""
"Αλλάζοντας εύκολα την εντολή ``closepoll`` ώστε να δέχεται επιπρόσθετες "
"επιλογές όταν την καλείτε, θα μπορούσε να διαγράφει ένα poll αντί να το "
"θέτει ως κλειστό (``poll.opened = False``). Αυτές οι επιλογές μπορούν να "
"προστεθούν στη μέθοδο :meth:`~BaseCommand.add_arguments` ως εξής::"

msgid ""
"The option (``delete`` in our example) is available in the options dict "
"parameter of the handle method. See the :py:mod:`argparse` Python "
"documentation for more about ``add_argument`` usage."
msgstr ""
"Η επιλογή (η ``delete`` στο παράδειγμα μας) είναι διαθέσιμη μέσα στη μέθοδο "
"handle μέσα από το options dictionary με το key delete. Δείτε περισσότερα "
"στο εγχειρίδιο της Python σχετικά με τη χρήση της :py:mod:`argparse` και τη "
"μέθοδο ``add_argument`` ."

msgid ""
"In addition to being able to add custom command line options, all :doc:"
"`management commands</ref/django-admin>` can accept some default options "
"such as :option:`--verbosity` and :option:`--traceback`."
msgstr ""
"Πέρα από τη δυνατότητα της πρόσθεσης δικών σας επιλογών στην εντολή, όλες "
"οι :doc:`εντολές διαχείρισης </ref/django-admin>` μπορούν να δεχτούν μερικές "
"δικές τους, προεγκατεστημένες, επιλογές όπως η :option:`--verbosity` και η :"
"option:`--traceback`."

msgid "Management commands and locales"
msgstr "Εντολές διαχείρισης και locales"

msgid ""
"By default, the :meth:`BaseCommand.execute` method deactivates translations "
"because some commands shipped with Django perform several tasks (for "
"example, user-facing content rendering and database population) that require "
"a project-neutral string language."
msgstr ""
"Από προεπιλογή, η μέθοδος :meth:`BaseCommand.execute` απενεργοποιεί τις "
"μεταφράσεις (που τυχόν έχουν γίνει) επειδή κάποιες εντολές διαχείρισης του "
"Django εκτελούν διάφορες εργασίες (πχ population της database, rendering των "
"δεδομένων που βλέπει ο χρήστης) οι οποίες απαιτούν μια γλώσσα που να είναι "
"καθολική και να μην εξαρτάται από το εκάστοτε project του προγραμματιστή."

msgid ""
"If, for some reason, your custom management command needs to use a fixed "
"locale, you should manually activate and deactivate it in your :meth:"
"`~BaseCommand.handle` method using the functions provided by the I18N "
"support code::"
msgstr ""
"Αν, για κάποιο λόγο, η δική σας εντολή διαχείρισης χρειάζεται να "
"χρησιμοποιήσει ένα μόνιμο locale, θα χρειαστεί να το ενεργοποιήσετε/"
"απενεργοποιήσετε χειροκίνητα μέσα στη μέθοδο :meth:`~BaseCommand.handle` "
"χρησιμοποιώντας τις μεθόδους που παρέχονται από το module I18N::"

msgid ""
"Another need might be that your command simply should use the locale set in "
"settings and Django should be kept from deactivating it. You can achieve it "
"by using the :data:`BaseCommand.leave_locale_alone` option."
msgstr ""
"Μια άλλη προσέγγιση ίσως, είναι να χρησιμοποιήσετε το locale που έχετε θέσει "
"στα settings του project σας και το Django να μην το απενεργοποιήσει. Το "
"επιτυγχάνετε αυτό χρησιμοποιώντας την επιλογή :data:`BaseCommand."
"leave_locale_alone`."

msgid ""
"When working on the scenarios described above though, take into account that "
"system management commands typically have to be very careful about running "
"in non-uniform locales, so you might need to:"
msgstr ""
"Όταν δουλεύετε σε σενάρια παρόμοια με τα παραπάνω, λάβετε υπόψη σας ότι οι "
"εντολές διαχείρισης του συστήματος πρέπει να είναι πολύ προσεκτικές όταν "
"τρέχουν σε μη ομοιόμορφα locales, που σημαίνει ότι θα χρειαστεί να:"

msgid ""
"Make sure the :setting:`USE_I18N` setting is always ``True`` when running "
"the command (this is a good example of the potential problems stemming from "
"a dynamic runtime environment that Django commands avoid offhand by "
"deactivating translations)."
msgstr ""
"Σιγουρευτείτε ότι η ρύθμιση :setting:`USE_I18N` είναι πάντα ``True`` όταν "
"τρέχετε την εντολή (αυτό είναι ένα καλό παράδειγμα των πιθανών προβλημάτων "
"που απορρέουν από ένα δυναμικό runtime περιβάλλον, όπου οι Django εντολές "
"διαχείρισης προσπαθούν να αποφύγουν απενεργοποιώντας τις μεταφράσεις)."

msgid ""
"Review the code of your command and the code it calls for behavioral "
"differences when locales are changed and evaluate its impact on predictable "
"behavior of your command."
msgstr ""
"Ελέγξτε τον κώδικα της εντολής σας καθώς και τυχόν κώδικα που καλεί η εντολή "
"σας για να δείτε τυχόν διαφορές συμπεριφοράς όταν τα locales αλλάζουν και να "
"αξιοποιήσετε την επιρροή του κώδικα πάνω στην προβλέψιμη συμπεριφορά της "
"εντολής σας."

msgid "Testing"
msgstr "Τεστ"

msgid ""
"Information on how to test custom management commands can be found in the :"
"ref:`testing docs <topics-testing-management-commands>`."
msgstr ""
"Πληροφορίες στο πως να τεστάρετε τις δικές σας εντολές διαχείρισης, μπορείτε "
"να βρείτε στα :ref:`εργαλεία για τεστ <topics-testing-management-commands>`."

msgid "Command objects"
msgstr "Objects εντολών"

msgid "The base class from which all management commands ultimately derive."
msgstr "Η κύρια κλάση από την οποία πηγάζουν όλες οι εντολές διαχείρισης."

msgid ""
"Use this class if you want access to all of the mechanisms which parse the "
"command-line arguments and work out what code to call in response; if you "
"don't need to change any of that behavior, consider using one of its :ref:"
"`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"Χρησιμοποιήστε αυτή την κλάση αν θέλετε να έχετε πρόσβαση σε όλους τους "
"μηχανισμούς οι οποίοι μεταφράζουν τις επιλογές στη γραμμή εντολών (όπως την "
"``--delete`` που χρησιμοποιήσαμε νωρίτερα) και αποφασίζουν, ανάλογα την "
"επιλογή, ποιον κώδικα να καλέσουν περαιτέρω. Αν δεν θέλετε να αλλάξετε "
"κάποια από αυτές τις συμπεριφορές, ίσως σας φανεί χρήσιμη μια από τις :ref:"
"`subclasses <ref-basecommand-subclasses>` της ``BaseCommand``."

msgid ""
"Subclassing the :class:`BaseCommand` class requires that you implement the :"
"meth:`~BaseCommand.handle` method."
msgstr ""
"Πραγματοποιώντας subclassing στην κλάση :class:`BaseCommand` απαιτεί να "
"υλοποιήσετε τη μέθοδο :meth:`~BaseCommand.handle`."

msgid "Attributes"
msgstr "Attributes"

msgid ""
"All attributes can be set in your derived class and can be used in :class:"
"`BaseCommand`’s :ref:`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"Όλα τα attributes μπορούν να οριστούν στη δική σας κλάση και να "
"χρησιμοποιηθούν στις :ref:`subclasses <ref-basecommand-subclasses>` της :"
"class:`BaseCommand`."

msgid ""
"A boolean indicating whether the command needs to be able to import Django "
"settings; if ``True``, ``execute()`` will verify that this is possible "
"before proceeding. Default value is ``True``."
msgstr ""
"Τύπου boolean που υποδεικνύει αν η εντολή μπορεί να κάνει import τα Django "
"settings. Αν είναι ``True``, τότε η μέθοδος ``execute()`` θα επιβεβαιώσει "
"ότι αυτό είναι δυνατόν πριν προχωρήσει. Προεπιλεγμένη τιμή είναι το ``True``."

msgid ""
"A short description of the command, which will be printed in the help "
"message when the user runs the command ``python manage.py help <command>``."
msgstr ""
"Μια μικρή περιγραφή της εντολής η οποία θα εκτυπωθεί στην κονσόλα όταν ο "
"χρήστης τρέξει την εντολή ``python manage.py help <command>``."

msgid ""
"If your command defines mandatory positional arguments, you can customize "
"the message error returned in the case of missing arguments. The default is "
"output by :py:mod:`argparse` (\"too few arguments\")."
msgstr ""
"Αν η εντολή σας ορίζει κάποια υποχρεωτικά positional arguments, μπορείτε να "
"παραμετροποιήσετε το μήνυμα σφάλματος που επιστρέφεται, σε περίπτωση που "
"αυτά τα arguments λείπουν. Προεπιλεγμένη τιμή είναι η έξοδος της :py:mod:"
"`argparse` (\"too few arguments\")."

msgid ""
"A boolean indicating whether the command outputs SQL statements; if "
"``True``, the output will automatically be wrapped with ``BEGIN;`` and "
"``COMMIT;``. Default value is ``False``."
msgstr ""
"Τύπου boolean που υποδεικνύει αν η εντολή θα εκτυπώσει (στην κονσόλα) "
"εντολές SQL. Αν είναι ``True``, τότε η έξοδος θα συμπεριληφθεί μέσα σε ένα "
"``BEGIN;`` και ``COMMIT;``. Προεπιλεγμένη τιμή είναι το ``False``."

msgid ""
"A boolean; if ``True``, the command prints a warning if the set of "
"migrations on disk don't match the migrations in the database. A warning "
"doesn't prevent the command from executing. Default value is ``False``."
msgstr ""
"Τύπου boolean. Αν είναι ``True``, η εντολή θα εκτυπώσει ένα warning αν το "
"σετ των migrations στο δίσκο δεν ταιριάζει με τα migrations στη βάση "
"δεδομένων. Υπόψιν ότι, ένα warning δεν εμποδίζει την εντολή από το να "
"εκτελεστεί. Προεπιλεγμένη τιμή είναι το ``False``."

msgid ""
"A boolean; if ``True``, the entire Django project will be checked for "
"potential problems prior to executing the command. Default value is ``True``."
msgstr ""
"Τύπου boolean. Αν είναι ``True``, τότε ολόκληρο το Django project σας θα "
"ελεγχθεί για τυχόν σφάλματα πριν εκτελεστεί η εντολή. Προεπιλεγμένη τιμή "
"είναι το ``True``."

msgid ""
"A boolean indicating whether the locale set in settings should be preserved "
"during the execution of the command instead of being forcibly set to 'en-us'."
msgstr ""
"Τύπου boolean που υποδεικνύει αν το locale που έχει οριστεί στα settings του "
"project σας θα πρέπει να ληφθεί υπόψιν κατά τη διάρκεια εκτέλεσης της "
"εντολής, αντί να χρησιμοποιηθεί η τιμή 'en-us'."

msgid "Default value is ``False``."
msgstr "Προεπιλεγμένη τιμή είναι το ``False``."

msgid ""
"Make sure you know what you are doing if you decide to change the value of "
"this option in your custom command if it creates database content that is "
"locale-sensitive and such content shouldn't contain any translations (like "
"it happens e.g. with django.contrib.auth permissions) as making the locale "
"differ from the de facto default 'en-us' might cause unintended effects. "
"Seethe `Management commands and locales`_ section above for further details."
msgstr ""
"Σιγουρευτείτε ότι γνωρίζετε τι κάνετε αν αποφασίσετε να αλλάξετε την τιμή "
"αυτού του attribute μέσα στην εντολή σας. Για παράδειγμα, ας υποθέσουμε ότι "
"δημιουργείτε κάποιο περιεχόμενο (κάποια δεδομένα, αν θέλετε) το οποίο "
"προορίζεται για τη βάση δεδομένων και επηρεάζεται από το locale. Αυτό το "
"περιεχόμενο όμως δεν πρέπει να έχει μεταφράσεις (όπως συμβαίνει με τα "
"perimissions του πχ django.contrib.auth). Αν αλλάξετε το locale σε κάτι "
"διαφορετικό από το προεπιλεγμένο (‘en-us’), τότε ίσως να προκληθούν ακούσιες "
"συνέπειες. Δείτε στην ενότητα `Εντολές διαχείρισης και locales`_ παραπάνω "
"για περισσότερες λεπτομέρειες."

msgid ""
"This option can't be ``False`` when the :data:`~BaseCommand."
"can_import_settings` option is set to ``False`` too because attempting to "
"set the locale needs access to settings. This condition will generate a :exc:"
"`CommandError`."
msgstr ""
"Αυτή η επιλογή δεν μπορεί να είναι ``False`` όταν η επιλογή :data:"
"`~BaseCommand.can_import_settings` είναι, επίσης, ``False`` επειδή η "
"απόπειρα να οριστεί το locale χρειάζεται πρόσβαση στα settings. Σε αυτή την "
"περίπτωση θα γίνει raise ένα :exc:`CommandError`."

msgid ""
"An instance attribute that helps create colored output when writing to "
"``stdout`` or ``stderr``. For example::"
msgstr ""
"Ένα attribute που βοηθά στο να χρωματίσει την έξοδο (δηλαδή το κείμενο) όταν "
"γράφετε στο ``self.stdout`` ή στο ``self.stderr``. Για παράδειγμα::"

msgid ""
"See :ref:`syntax-coloring` to learn how to modify the color palette and to "
"see the available styles (use uppercased versions of the \"roles\" described "
"in that section)."
msgstr ""
"Δείτε στο :ref:`χρωματίζοντας την έξοδο <syntax-coloring>` για να μάθετε πως "
"να τροποποιείτε την παλέτα των χρωμάτων και να δείτε τα διαθέσιμα στυλ "
"(χρήση της έκδοσης των κεφαλαίων γραμμάτων των \"ρόλων\" όπως περιγράφονται "
"σε αυτή την ενότητα)."

msgid ""
"If you pass the :option:`--no-color` option when running your command, all "
"``self.style()`` calls will return the original string uncolored."
msgstr ""
"Αν δηλώσετε την επιλογή :option:`--no-color` όταν τρέχετε την εντολή σας, "
"όλες οι κλήσεις της ``self.style()`` θα επιστρέψουν το αρχικό string χωρίς "
"κάποιο χρώμα."

msgid "Methods"
msgstr "Μέθοδοι"

msgid ""
":class:`BaseCommand` has a few methods that can be overridden but only the :"
"meth:`~BaseCommand.handle` method must be implemented."
msgstr ""
"Η κλάση :class:`BaseCommand` έχει μερικές μεθόδους οι οποίες μπορούν να "
"παρακαμφθούν (overridden) αλλά μόνο η μέθοδος :meth:`~BaseCommand.handle` "
"πρέπει να υλοποιηθεί υποχρεωτικά."

msgid "Implementing a constructor in a subclass"
msgstr "Υλοποίηση ενός constructor μέσα σε μια subclass"

msgid ""
"If you implement ``__init__`` in your subclass of :class:`BaseCommand`, you "
"must call :class:`BaseCommand`’s ``__init__``::"
msgstr ""
"Αν υλοποιήσετε την ``__init__`` μέσα σε μια subclass της :class:"
"`BaseCommand` θα πρέπει πρώτα να καλέσετε την ``__init__`` της κλάσης :class:"
"`BaseCommand`, όπως φαίνεται παρακάτω::"

msgid ""
"Entry point to add parser arguments to handle command line arguments passed "
"to the command. Custom commands should override this method to add both "
"positional and optional arguments accepted by the command. Calling "
"``super()`` is not needed when directly subclassing ``BaseCommand``."
msgstr ""
"Σημείο εισόδου για να προσθέσετε arguments στο μεταφραστή (parser) για τον "
"χειρισμό των arguments που εισάγονται στη γραμμή εντολών (όπως το argument "
"``--delete`` που αναφέραμε παραπάνω). Τυχόν δικές σας διαχειριστικές εντολές "
"θα πρέπει να παρακάμπτουν αυτή τη μέθοδο για να προσθέσουν positional και "
"optional arguments που θα δέχεται η εντολή. Η κλήση της ``super()`` δεν "
"είναι απαραίτητη όταν κάνετε απ’ ευθείας subclass την κλάση ``BaseCommand``."

msgid ""
"Returns the Django version, which should be correct for all built-in Django "
"commands. User-supplied commands can override this method to return their "
"own version."
msgstr ""
"Επιστρέφει την έκδοση του Django, η οποία θα πρέπει να είναι η σωστή για "
"όλες τις προεγκατεστημένες εντολές του Django. Τυχόν δικές σας "
"διαχειριστικές εντολές μπορούν να παρακάμψουν αυτή τη μέθοδο για να "
"επιστρέφουν τη δική τους έκδοση."

msgid ""
"Tries to execute this command, performing system checks if needed (as "
"controlled by the :attr:`requires_system_checks` attribute). If the command "
"raises a :exc:`CommandError`, it's intercepted and printed to stderr."
msgstr ""
"Προσπαθεί να εκτελέσει την εντολή που γράψατε, πραγματοποιεί τυχόν τεστ που "
"αφορά το σύστημα (ανάλογα την τιμή του attribute :attr:"
"`requires_system_checks`). Αν η εντολή κάνει raise το exception :exc:"
"`CommandError`, τότε θα εμφανιστεί ανάλογο σφάλμα στο ``stderr``."

msgid "Calling a management command in your code"
msgstr "Καλώντας μια εντολή διαχείρισης μέσα από τον κώδικα σας"

msgid ""
"``execute()`` should not be called directly from your code to execute a "
"command. Use :func:`~django.core.management.call_command` instead."
msgstr ""
"Η μέθοδος ``execute()`` δεν θα πρέπει να καλείται απ' ευθείας από τον κώδικα "
"σας για την εκτέλεση μιας εντολής. Αντί αυτής, χρησιμοποιήστε τη συνάρτηση :"
"func:`~django.core.management.call_command`."

msgid "The actual logic of the command. Subclasses must implement this method."
msgstr ""
"Η πραγματική λογική της εντολής. Όλες οι subclasses πρέπει να υλοποιήσουν "
"αυτή τη μέθοδο."

msgid ""
"It may return a Unicode string which will be printed to ``stdout`` (wrapped "
"by ``BEGIN;`` and ``COMMIT;`` if :attr:`output_transaction` is ``True``)."
msgstr ""
"Μπορεί να επιστρέψει ένα Unicode string το οποίο θα εκτυπωθεί στο ``stdout`` "
"(συμπεριλαμβανόμενο μέσα στα ``BEGIN;`` και ``COMMIT;``, αν το attribute :"
"attr:`output_transaction` είναι ``True``)."

msgid ""
"Uses the system check framework to inspect the entire Django project for "
"potential problems. Serious problems are raised as a :exc:`CommandError`; "
"warnings are output to stderr; minor notifications are output to stdout."
msgstr ""
"Χρησιμοποιεί το σύστημα ελέγχου του framework για να επιθεωρήσει ολόκληρο το "
"Django project για τυχόν προβλήματα. Τα σοβαρά προβλήματα γίνονται raised "
"ως :exc:`CommandError`. Τα warnings εκτυπώνονται στο ``stderr``. Τυχόν "
"δευτερεύουσες ειδοποιήσεις εκτυπώνονται στο ``stdout``."

msgid ""
"If ``app_configs`` and ``tags`` are both ``None``, all system checks are "
"performed. ``tags`` can be a list of check tags, like ``compatibility`` or "
"``models``."
msgstr ""
"Αν τα ορίσματα ``app_configs`` και ``tags`` είναι και τα δύο τύπου ``None``, "
"τότε θα γίνουν όλα τα συστήματα ελέγχου. Το όρισμα ``tags`` μπορεί να είναι "
"μια λίστα από check tags, όπως ``compatibility`` ή ``models``."

msgid "``BaseCommand`` subclasses"
msgstr "``BaseCommand`` subclasses"

msgid ""
"A management command which takes one or more installed application labels as "
"arguments, and does something with each of them."
msgstr ""
"Μια εντολή διαχείρισης η οποία δέχεται ως arguments (όπως το ``<poll_id>`` "
"στην εντολή που γράψαμε παραπάνω ``python manage.py closepoll <poll_id>``) "
"ένα ή περισσότερα labels εφαρμογών και κάνει κάτι με καθένα από αυτά."

msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~AppCommand.handle_app_config`, which will be called once "
"for each application."
msgstr ""
"Αντί της υλοποίησης της μεθόδου :meth:`~BaseCommand.handle`, οι subclasses "
"πρέπει να υλοποιούν τη μέθοδο :meth:`~AppCommand.handle_app_config` η οποία "
"θα καλείται μια φορά για κάθε εφαρμογή."

msgid ""
"Perform the command's actions for ``app_config``, which will be an :class:"
"`~django.apps.AppConfig` instance corresponding to an application label "
"given on the command line."
msgstr ""
"Εκτελεί τις ενέργειες της εντολής για το ``app_config`` το οποίο θα είναι "
"ένα instance της κλάσης :class:`~django.apps.AppConfig` που αντιστοιχεί στο "
"label της εφαρμογής που δόθηκε στη γραμμή εντολών."

msgid ""
"A management command which takes one or more arbitrary arguments (labels) on "
"the command line, and does something with each of them."
msgstr ""
"Μια εντολή διαχείρισης η οποία δέχεται ένα η περισσότερα arguments (labels) "
"μέσω της γραμμής εντολών και κάνει κάτι με καθένα από αυτά."

msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~LabelCommand.handle_label`, which will be called once for "
"each label."
msgstr ""
"Αντί της υλοποίησης της μεθόδου :meth:`~BaseCommand.handle`, οι subclasses "
"πρέπει να υλοποιούν τη μέθοδο :meth:`~LabelCommand.handle_label`, η οποία θα "
"καλείται μια φορά για κάθε label."

msgid ""
"Perform the command's actions for ``label``, which will be the string as "
"given on the command line."
msgstr ""
"Εκτελεί τις ενέργειες της εντολής για το ``label``, το οποίο θα είναι ένα "
"string όπως δόθηκε στη γραμμή εντολών."

msgid "Command exceptions"
msgstr "Exceptions εντολής"

msgid ""
"Exception class indicating a problem while executing a management command."
msgstr ""
"Μια κλάση Exception που υποδεικνύει ότι προέκυψε κάποιο πρόβλημα κατά τη "
"διάρκεια εκτέλεσης της εντολής διαχείρισης."

msgid ""
"If this exception is raised during the execution of a management command "
"from a command line console, it will be caught and turned into a nicely-"
"printed error message to the appropriate output stream (i.e., stderr); as a "
"result, raising this exception (with a sensible description of the error) is "
"the preferred way to indicate that something has gone wrong in the execution "
"of a command."
msgstr ""
"Αν αυτό το exception γίνει raised κατά τη διάρκεια της εκτέλεσης, μέσω της "
"κονσόλας, μιας διαχειριστικής εντολής, θα “πιαστεί” (caught) και θα "
"μετατραπεί σε ένα όμορφα εκτυπώσιμο μήνυμα σφάλματος το οποίο θα προωθηθεί "
"στην ανάλογη έξοδο προβολής (πχ stderr, stdout κλπ). Επομένως, ο καλύτερος "
"τρόπος για να υποδείξετε ότι κάτι πήγε στραβά κατά τη διάρκεια της εκτέλεσης "
"της εντολής σας, είναι κάνοντας raise αυτό το exception (με μια λογική "
"περιγραφή του σφάλματος που προέκυψε, φυσικά)."

msgid ""
"If a management command is called from code through :func:`~django.core."
"management.call_command`, it's up to you to catch the exception when needed."
msgstr ""
"Αν η εντολή διαχείρισης καλείται μέσα από τον κώδικα σας μέσω της "
"συνάρτησης :func:`~django.core.management.call_command`, τότε είναι δικό σας "
"θέμα να κάνετε catch, όποτε το κρίνετε απαραίτητο, αυτό το exception."

msgid "Writing custom model fields"
msgstr "Γράφοντας δικά σας πεδία μοντέλων"

msgid "Introduction"
msgstr "Εισαγωγή"

msgid ""
"The :doc:`model reference </topics/db/models>` documentation explains how to "
"use Django's standard field classes -- :class:`~django.db.models."
"CharField`, :class:`~django.db.models.DateField`, etc. For many purposes, "
"those classes are all you'll need. Sometimes, though, the Django version "
"won't meet your precise requirements, or you'll want to use a field that is "
"entirely different from those shipped with Django."
msgstr ""
"Το άρθρο :doc:`μοντέλα </topics/db/models>` εξηγεί πως να χρησιμοποιήσετε "
"τις στάνταρντ κλάσεις πεδίων του Django -- :class:`~django.db.models."
"CharField`, :class:`~django.db.models.DateField` κλπ. Στις περισσότερες "
"περιπτώσεις αυτές οι κλάσεις θα σας είναι αρκετές. Ωστόσο, η έκδοση του "
"Django που χρησιμοποιείτε ίσως να μην καλύπτει τις ανάγκες και τις "
"απαιτήσεις σας ή θα θέλατε να χρησιμοποιήσετε ένα πεδίο μοντέλου το οποίο "
"είναι εντελώς διαφορετικό από αυτά που έρχονται με το Django."

msgid ""
"Django's built-in field types don't cover every possible database column "
"type -- only the common types, such as ``VARCHAR`` and ``INTEGER``. For more "
"obscure column types, such as geographic polygons or even user-created types "
"such as `PostgreSQL custom types`_, you can define your own Django ``Field`` "
"subclasses."
msgstr ""
"Οι τύποι των προεγκατεστημένων πεδίων του Django δεν καλύπτουν όλους τους "
"πιθανούς τύπους στηλών μιας βάσης δεδομένων (υπόψιν ότι μερικές βάσεις έχουν "
"αποκλειστικά δικούς τους τύπους στηλών που δεν βρίσκονται σε κάποια άλλη "
"βάση) -- μόνο τους βασικούς τύπους, όπως ``VARCHAR`` και ``INTEGER``. Για "
"περισσότερους τύπους στηλών, όπως γεωγραφικά πολύγονα ή ακόμη και τύπους που "
"μπορεί να δημιουργήσει ο χρήστης όπως οι `PostgreSQL custom types`_, "
"μπορείτε να ορίσετε τις δικές σας Django ``Field`` subclasses."

msgid ""
"Alternatively, you may have a complex Python object that can somehow be "
"serialized to fit into a standard database column type. This is another case "
"where a ``Field`` subclass will help you use your object with your models."
msgstr ""
"Εναλλακτικά, μπορείτε να έχετε ένα πολύπλοκο Python object το οποίο να "
"μπορεί κάπως να γίνει serialized για να μπορέσει να αναπαρασταθεί ως "
"στάνταρντ στήλη στη βάση δεδομένων. Αυτή είναι μια άλλη περίπτωση όπου μια "
"subclass της ``Field`` θα σας βοηθήσει να χρησιμοποιήσετε το object σας με "
"τα μοντέλα σας."

msgid "Our example object"
msgstr "Το object του παραδείγματος μας"

msgid ""
"Creating custom fields requires a bit of attention to detail. To make things "
"easier to follow, we'll use a consistent example throughout this document: "
"wrapping a Python object representing the deal of cards in a hand of "
"Bridge_. Don't worry, you don't have to know how to play Bridge to follow "
"this example. You only need to know that 52 cards are dealt out equally to "
"four players, who are traditionally called *north*, *east*, *south* and "
"*west*.  Our class looks something like this::"
msgstr ""
"Η δημιουργία δικών μας παραμετροποιήσιμων πεδίων απαιτεί προσοχή στη "
"λεπτομέρεια. Για να κάνουμε τα πράγματα πιο εύκολα, θα χρησιμοποιήσουμε το "
"ίδιο παράδειγμα σε όλο αυτό το άρθρο: θα δημιουργήσουμε ένα Python object "
"που θα αναπαριστά το μοίρασμα των χαρτιών σε μια παρτίδα Bridge_. Μην "
"ανησυχείτε, όμως, δεν χρειάζεται να γνωρίζετε πως παίζεται το Bridge για να "
"καταλάβετε αυτό το παράδειγμα. Το μόνο που χρειάζεται να ξέρετε είναι ότι "
"απαιτούνται 52 χαρτιά να μοιραστούν ισομερώς σε τέσσερις παίκτες, οι οποίοι "
"ονομάζονται, παραδοσιακά, *north*, *east*, *south* και *west*. Η κλάση μας "
"θα μοιάζει κάπως έτσι::"

msgid ""
"This is just an ordinary Python class, with nothing Django-specific about "
"it. We'd like to be able to do things like this in our models (we assume the "
"``hand`` attribute on the model is an instance of ``Hand``)::"
msgstr ""
"Η κλάση που γράψαμε δεν είναι τίποτε άλλο παρά μια συνηθισμένη κλάση Python, "
"χωρίς να την συνδέει κάτι με το Django. Θα θέλαμε να κάνουμε πράγματα, όπως "
"αυτό, στα Django μοντέλα μας (υποθέτουμε ότι το attribute ``hand`` του "
"μοντέλου είναι ένα instance της κλάσης ``Hand``)::"

msgid ""
"We assign to and retrieve from the ``hand`` attribute in our model just like "
"any other Python class. The trick is to tell Django how to handle saving and "
"loading such an object."
msgstr ""
"Εκχωρούμε στο και ανακτούμε από το attribute ``hand`` του μοντέλου μας όπως "
"ακριβώς θα κάναμε με κάθε άλλη κλάση της Python. Το κόλπο είναι να πούμε στο "
"Django πως να διαχειριστεί την αποθήκευση στην και τη φόρτωση από τη βάση "
"δεδομένων αυτού του object."

msgid ""
"In order to use the ``Hand`` class in our models, we **do not** have to "
"change this class at all. This is ideal, because it means you can easily "
"write model support for existing classes where you cannot change the source "
"code."
msgstr ""
"Για να χρησιμοποιήσουμε την κλάση ``Hand`` στα μοντέλα μας, **δεν "
"χρειάζεται** να αλλάξουμε αυτή την κλάση καθόλου. Αυτό είναι ιδανικό, καθώς "
"σημαίνει ότι μπορείτε να γράψετε Django μοντέλα για ήδη υπάρχουσες κλάσεις "
"χωρίς να χρειαστεί να πειράξετε τον πηγαίο κώδικα."

msgid ""
"You might only be wanting to take advantage of custom database column types "
"and deal with the data as standard Python types in your models; strings, or "
"floats, for example. This case is similar to our ``Hand`` example and we'll "
"note any differences as we go along."
msgstr ""
"Ίσως να θέλετε, μόνο, να επωφεληθείτε από τους δικούς σας τύπους στηλών στη "
"βάση δεδομένων και να διαχειριστείτε τα δεδομένα σας ως στάνταρντ τύπους "
"Python objects στα μοντέλα σας, πχ strings, floats κλπ. Αυτή η περίπτωση "
"είναι παρόμοια με το παράδειγμα μας, ``Hand``, όπου θα υποδεικνύουμε τυχόν "
"διαφορές καθώς προχωράμε."

msgid "Background theory"
msgstr "Βασική θεωρία"

msgid "Database storage"
msgstr "Αποθηκευτικός χώρος στη βάση δεδομένων"

msgid ""
"The simplest way to think of a model field is that it provides a way to take "
"a normal Python object -- string, boolean, ``datetime``, or something more "
"complex like ``Hand`` -- and convert it to and from a format that is useful "
"when dealing with the database (and serialization, but, as we'll see later, "
"that falls out fairly naturally once you have the database side under "
"control)."
msgstr ""
"Ο πιο απλός τρόπος για να σκεφτείτε έναν τύπο μοντέλου (model field) είναι "
"ότι προσφέρει έναν τρόπο ενός συνηθισμένου Python object -- string, boolean, "
"``datetime``, ή κάτι πιο περίπλοκο όπως το ``Hand`` -- να μετατραπεί σε και "
"από μια μορφή η οποία είναι χρήσιμη όταν επικοινωνούμε με τη βάση δεδομένων "
"(και με το serialization, αλλά, όπως θα δούμε αργότερα, αυτό δεν θα σας "
"απασχολήσει όταν έχετε τακτοποιήσει τη βάση)."

msgid ""
"Fields in a model must somehow be converted to fit into an existing database "
"column type. Different databases provide different sets of valid column "
"types, but the rule is still the same: those are the only types you have to "
"work with. Anything you want to store in the database must fit into one of "
"those types."
msgstr ""
"Τα πεδία σε ένα μοντέλο πρέπει με κάποιο τρόπο να μετατραπούν ούτως ώστε να "
"μπορέσει να τα δεχτεί ο αντίστοιχος τύπος στήλης της βάσης δεδομένων. "
"Διαφορετικές βάσεις δεδομένων προσφέρουν διαφορετικά σετ από έγκυρους τύπους "
"στηλών, αλλά ο κανόνας είναι ο ίδιος: αυτοί είναι οι μοναδικοί τύποι με τους "
"οποίους θα μπορείτε να δουλεύετε. Οτιδήποτε θέλετε να αποθηκεύσετε στη βάση "
"δεδομένων, πρέπει να προσαρμοστεί σε έναν από αυτούς τους τύπους."

msgid ""
"Normally, you're either writing a Django field to match a particular "
"database column type, or there's a fairly straightforward way to convert "
"your data to, say, a string."
msgstr ""
"Συνήθως, είτε θα γράφετε ένα πεδίο Django για να ταιριάζει με έναν "
"συγκεκριμένο τύπο στήλης της βάσης είτε θα μετατρέπετε σε μορφή string, με "
"κάποιον τρόπο, τα δεδομένα προς αποθήκευση στη βάση."

msgid ""
"For our ``Hand`` example, we could convert the card data to a string of 104 "
"characters by concatenating all the cards together in a pre-determined order "
"-- say, all the *north* cards first, then the *east*, *south* and *west* "
"cards. So ``Hand`` objects can be saved to text or character columns in the "
"database."
msgstr ""
"Για το δικό μας παράδειγμα ``Hand``, θα μπορούσαμε να μετατρέψουμε τα "
"δεδομένα των χαρτιών της τράπουλας σε ένα string 104 χαρακτήρων ενώνοντας "
"(concatenating) όλα τα χαρτιά μεταξύ τους σε μια προκαθορισμένη σειρά -- πχ, "
"όλα τα *north* χαρτιά πρώτα, μετά τα *east*, μετά τα *south* και τέλος τα "
"*west*. Επομένως, τα objects τύπου ``Hand`` θα μπορούσαν να αποθηκευτούν ως "
"στήλη κειμένου (text) ή ως στήλη χαρακτήρων (character) στη βάση δεδομένων. "
"Για άλλη μια φορά, επειδή η βάση δεν καταλαβαίνει την γλώσσα Python, θα "
"πρέπει να μετατρέψουμε τα δεδομένα μας σε κάποια μορφή που η βάση "
"καταλαβαίνει. Αντίστροφα, όταν αντλούμε δεδομένα από τη βάση, θα πρέπει να "
"τα μετατρέψουμε σε Python objects για να τα διαχειριστούμε, ανάλογα τις "
"ανάγκες μας."

msgid "What does a field class do?"
msgstr "Τι κάνει μια κλάση τύπου Field;"

msgid ""
"All of Django's fields (and when we say *fields* in this document, we always "
"mean model fields and not :doc:`form fields </ref/forms/fields>`) are "
"subclasses of :class:`django.db.models.Field`. Most of the information that "
"Django records about a field is common to all fields -- name, help text, "
"uniqueness and so forth. Storing all that information is handled by "
"``Field``. We'll get into the precise details of what ``Field`` can do later "
"on; for now, suffice it to say that everything descends from ``Field`` and "
"then customizes key pieces of the class behavior."
msgstr ""
"Όλα τα πεδία του Django (και όταν λέμε *πεδία* σε αυτό το άρθρο, εννοούμε "
"πάντα πεδία μοντέλων και όχι :doc:`πεδία φορμών </ref/forms/fields>`) είναι "
"subclasses της κλάσης :class:`django.db.models.Field`. Οι περισσότερες "
"πληροφορίες που καταγράφει το Django σχετικά με ένα πεδίο είναι κοινές για "
"όλα τα πεδία -- όνομα, βοηθητικό κείμενο, μοναδικότητα κοκ. Η αποθήκευση "
"όλων αυτών των πληροφοριών γίνεται από την κλάση ``Field``. Θα πούμε με "
"λεπτομέρειες τι μπορεί να κάνει η ``Field`` σε λίγο. Για τώρα, αρκεί να "
"πούμε ότι όλα τα πεδία κληρονομούν από την κλάση ``Field`` και "
"παραμετροποιούν διάφορα βασικά κομμάτια της συμπεριφοράς της."

msgid ""
"It's important to realize that a Django field class is not what is stored in "
"your model attributes. The model attributes contain normal Python objects. "
"The field classes you define in a model are actually stored in the ``Meta`` "
"class when the model class is created (the precise details of how this is "
"done are unimportant here). This is because the field classes aren't "
"necessary when you're just creating and modifying attributes. Instead, they "
"provide the machinery for converting between the attribute value and what is "
"stored in the database or sent to the :doc:`serializer </topics/"
"serialization>`."
msgstr ""
"Είναι σημαντικό να συνειδητοποιήσετε ότι η κλάση ενός πεδίου του Django (πχ "
"``CharField``, ``BooleanField`` κλπ) δεν αποθηκεύεται στα attributes των "
"μοντέλων σας. Τα attributes του μοντέλου περιέχουν συνηθισμένα Python "
"objects. Η κλάσεις των πεδίων που ορίζετε σε ένα μοντέλο αποθηκεύονται στην "
"ουσία σε μια ``Meta`` κλάση όταν δημιουργείται το μοντέλο (οι ακριβείς "
"λεπτομέρειες του πως γίνεται αυτό, δεν έχουν σημασία τώρα). Αυτό γίνεται "
"επειδή οι κλάσεις των πεδίων δεν είναι απαραίτητες όταν απλώς δημιουργείτε "
"και αλλάζετε τα attributes. Αντ’ αυτού οι κλάσεις προσφέρουν τον μηχανισμό "
"για την μετατροπή μεταξύ του attribute και αυτού που είναι αποθηκευμένο στη "
"βάση δεδομένων ή για την αποστολή στον :doc:`serializer </topics/"
"serialization>`."

msgid ""
"Keep this in mind when creating your own custom fields. The Django ``Field`` "
"subclass you write provides the machinery for converting between your Python "
"instances and the database/serializer values in various ways (there are "
"differences between storing a value and using a value for lookups, for "
"example). If this sounds a bit tricky, don't worry -- it will become clearer "
"in the examples below. Just remember that you will often end up creating two "
"classes when you want a custom field:"
msgstr ""
"Κρατήστε στο μυαλό σας τα ακόλουθα, όταν δημιουργείτε δικά σας πεδία. Η "
"subclass ``Field`` του Django που γράφετε, σας προσφέρει έναν μηχανισμό "
"μετατροπής μεταξύ Python instances και τιμών database/serializer με "
"διάφορους τρόπους (πχ, υπάρχουν διαφορές μεταξύ της αποθήκευσης της τιμής "
"και της χρησιμοποίησης της στα lookups). Αν αυτό ακούγεται κάπως περίπλοκο, "
"μην ανησυχείτε -- θα γίνει κατανοητό στα παραδείγματα παρακάτω. Να θυμάστε, "
"μόνο, ότι συχνά θα καταλήγετε με τη δημιουργία δύο κλάσεων, όταν γράφετε "
"δικά σας πεδία:"

msgid ""
"The first class is the Python object that your users will manipulate. They "
"will assign it to the model attribute, they will read from it for displaying "
"purposes, things like that. This is the ``Hand`` class in our example."
msgstr ""
"Η πρώτη κλάση θα είναι το Python object που θα χρησιμοποιούν οι χρήστες. Θα "
"το αναθέσουν σε ένα attribute του μοντέλου, θα διαβάζουν από αυτό για να "
"βλέπουν τα δεδομένα που αντιστοιχούν σε αυτό, θα αποθηκεύουν δεδομένα μέσω "
"αυτού κλπ. Αυτή η κλάση είναι η ``Hand`` στο παράδειγμα μας."

msgid ""
"The second class is the ``Field`` subclass. This is the class that knows how "
"to convert your first class back and forth between its permanent storage "
"form and the Python form."
msgstr ""
"Η δεύτερη κλάση θα είναι μια subclass της ``Field``. Αυτή είναι μια κλάση η "
"οποία ξέρει πως να μετατρέψει την πρώτη σας κλάση σε δεδομένα που "
"καταλαβαίνει η βάση δεδομένων και αντίστροφα τα δεδομένα που είναι "
"αποθηκευμένα στη βάση δεδομένων σε object που καταλαβαίνει η Python."

msgid "Writing a field subclass"
msgstr "Γράφοντας μια subclass ενός πεδίου"

msgid ""
"When planning your :class:`~django.db.models.Field` subclass, first give "
"some thought to which existing :class:`~django.db.models.Field` class your "
"new field is most similar to. Can you subclass an existing Django field and "
"save yourself some work? If not, you should subclass the :class:`~django.db."
"models.Field` class, from which everything is descended."
msgstr ""
"Όταν σχεδιάζετε τη subclass της κλάσης :class:`~django.db.models.Field` (το "
"δικό σας νέο πεδίο, αν θέλετε), θα πρέπει πρώτα να σκεφτείτε με ποια από τις "
"ήδη υπάρχουσες κλάσεις :class:`~django.db.models.Field` το νέο σας πεδίο "
"μοιάζει περισσότερο. Ίσως να μπορείτε να κάνετε subclass ένα ήδη υπάρχον "
"Django πεδίο και να γλυτώσετε τον εαυτό σας πολύτιμο χρόνο. Αν όχι, θα "
"πρέπει να κάνετε subclass την κλάση :class:`~django.db.models.Field`, απ' "
"όπου όλα κληρονομούν."

msgid ""
"Initializing your new field is a matter of separating out any arguments that "
"are specific to your case from the common arguments and passing the latter "
"to the ``__init__()`` method of :class:`~django.db.models.Field` (or your "
"parent class)."
msgstr ""
"Η αρχικοποίηση (initialization) του νέου σας πεδίου έχει να κάνει με τον "
"διαχωρισμό των arguments που είναι συγκεκριμένα για αυτό που θέλετε να κάνει "
"το πεδίο σας και των συνηθισμένων arguments. Στην μέθοδο ``__init__()`` της "
"κλάσης :class:`~django.db.models.Field` (ή στην parent κλάση) περνάτε τα "
"arguments που είναι συγκεκριμένα για το πεδίο σας."

msgid ""
"In our example, we'll call our field ``HandField``. (It's a good idea to "
"call your :class:`~django.db.models.Field` subclass ``<Something>Field``, so "
"it's easily identifiable as a :class:`~django.db.models.Field` subclass.) It "
"doesn't behave like any existing field, so we'll subclass directly from :"
"class:`~django.db.models.Field`::"
msgstr ""
"Στο παράδειγμα μας, θα ονομάσουμε το πεδίο μας ``HandField``. (Είναι, "
"γενικά, καλή πρακτική να καλείτε τη subclass της :class:`~django.db.models."
"Field` ως ``<Something>Field``, ούτως ώστε να εύκολα αναγνωρίσιμη ως μια "
"subclass της :class:`~django.db.models.Field`). Η ``HandField`` δεν "
"συμπεριφέρεται ως ένα ήδη υπάρχον Django πεδίο (πχ ``CharField`` ή "
"``TextField``), οπότε θα κάνουμε subclass απ’ ευθείας από την :class:"
"`~django.db.models.Field`::"

msgid ""
"Our ``HandField`` accepts most of the standard field options (see the list "
"below), but we ensure it has a fixed length, since it only needs to hold 52 "
"card values plus their suits; 104 characters in total."
msgstr ""
"Η ``HandField`` δέχεται τις περισσότερες από τις στάνταρντ επιλογές πεδίων "
"(δείτε τη λίστα παρακάτω), αλλά εδώ εξασφαλίζουμε ότι έχει ένα συγκεκριμένο "
"μέγιστο μήκος, αφού το μέγιστο που χρειάζεται είναι 52 τιμές φύλλων μαζί με "
"το χρώμα του καθενός, πχ άσσος μπαστούνι (As, ace of spades) ή τρία κούπα "
"(3h, 3 of hearts) κλπ: 104 χαρακτήρες στο σύνολο."

msgid ""
"Many of Django's model fields accept options that they don't do anything "
"with. For example, you can pass both :attr:`~django.db.models.Field."
"editable` and :attr:`~django.db.models.DateField.auto_now` to a :class:"
"`django.db.models.DateField` and it will simply ignore the :attr:`~django.db."
"models.Field.editable` parameter (:attr:`~django.db.models.DateField."
"auto_now` being set implies ``editable=False``). No error is raised in this "
"case."
msgstr ""
"Πολλά από τα πεδία των μοντέλων του Django δέχονται μερικές επιλογές με τις "
"οποίες δεν κάνουν τίποτα, απλώς τις αγνοούν. Για παράδειγμα, μπορείτε να "
"περάσετε την παράμετρο :attr:`~django.db.models.Field.editable` και την  :"
"attr:`~django.db.models.DateField.auto_now` σε μια κλάση τύπου :class:"
"`django.db.models.DateField` και η παράμετρος :attr:`~django.db.models.Field."
"editable` απλά θα αγνοηθεί (όταν το :attr:`~django.db.models.DateField."
"auto_now` είναι ``True`` προϋποθέτει ότι ``editable=False``). Κανένα σφάλμα "
"δεν θα γίνει raised σε αυτή την περίπτωση."

msgid ""
"This behavior simplifies the field classes, because they don't need to check "
"for options that aren't necessary. They just pass all the options to the "
"parent class and then don't use them later on. It's up to you whether you "
"want your fields to be more strict about the options they select, or to use "
"the simpler, more permissive behavior of the current fields."
msgstr ""
"Αυτή η συμπεριφορά απλοποιεί τις κλάσεις των πεδίων επειδή δεν χρειάζεται να "
"ελέγχουν για επιλογές (παραμέτρους) οι οποίες δεν είναι απαραίτητες. Απλώς, "
"περνούν όλες τις επιλογές στην parent class και στη συνέχεια δεν τις "
"χρησιμοποιούν. Από σας εξαρτάται αν θέλετε τα πεδία σας να είναι αυστηρά "
"(strict) σε σχέση με τις παραμέτρους που επιλέγουν, ή να είναι πιο απλά, "
"δηλαδή να δέχονται περισσότερες επιλογές."

msgid "The ``Field.__init__()`` method takes the following parameters:"
msgstr "Η μέθοδος ``Field.__init__()`` δέχεται τις ακόλουθες παραμέτρους:"

msgid ":attr:`~django.db.models.Field.verbose_name`"
msgstr ":attr:`~django.db.models.Field.verbose_name`"

msgid "``name``"
msgstr "``name``"

msgid ":attr:`~django.db.models.Field.primary_key`"
msgstr ":attr:`~django.db.models.Field.primary_key`"

msgid ":attr:`~django.db.models.CharField.max_length`"
msgstr ":attr:`~django.db.models.CharField.max_length`"

msgid ":attr:`~django.db.models.Field.unique`"
msgstr ":attr:`~django.db.models.Field.unique`"

msgid ":attr:`~django.db.models.Field.blank`"
msgstr ":attr:`~django.db.models.Field.blank`"

msgid ":attr:`~django.db.models.Field.null`"
msgstr ":attr:`~django.db.models.Field.null`"

msgid ":attr:`~django.db.models.Field.db_index`"
msgstr ":attr:`~django.db.models.Field.db_index`"

msgid ""
"``rel``: Used for related fields (like :class:`ForeignKey`). For advanced "
"use only."
msgstr ""
"``rel``: Χρησιμοποιείται για συσχετισμένα πεδία (όπως το :class:"
"`ForeignKey`). Για προχωρημένους χρήστες μόνο."

msgid ":attr:`~django.db.models.Field.default`"
msgstr ":attr:`~django.db.models.Field.default`"

msgid ":attr:`~django.db.models.Field.editable`"
msgstr ":attr:`~django.db.models.Field.editable`"

msgid ""
"``serialize``: If ``False``, the field will not be serialized when the model "
"is passed to Django's :doc:`serializers </topics/serialization>`. Defaults "
"to ``True``."
msgstr ""
"``serialize``: Αν είναι ``False``, το πεδίο δεν θα γίνει serialized όταν το "
"μοντέλο περάσει στους :doc:`serializers </topics/serialization>` του Django. "
"Η προεπιλεγμένη τιμή είναι ``True``."

msgid ":attr:`~django.db.models.Field.unique_for_date`"
msgstr ":attr:`~django.db.models.Field.unique_for_date`"

msgid ":attr:`~django.db.models.Field.unique_for_month`"
msgstr ":attr:`~django.db.models.Field.unique_for_month`"

msgid ":attr:`~django.db.models.Field.unique_for_year`"
msgstr ":attr:`~django.db.models.Field.unique_for_year`"

msgid ":attr:`~django.db.models.Field.choices`"
msgstr ":attr:`~django.db.models.Field.choices`"

msgid ":attr:`~django.db.models.Field.help_text`"
msgstr ":attr:`~django.db.models.Field.help_text`"

msgid ":attr:`~django.db.models.Field.db_column`"
msgstr ":attr:`~django.db.models.Field.db_column`"

msgid ""
":attr:`~django.db.models.Field.db_tablespace`: Only for index creation, if "
"the backend supports :doc:`tablespaces </topics/db/tablespaces>`. You can "
"usually ignore this option."
msgstr ""
":attr:`~django.db.models.Field.db_tablespace`: Μόνο για τη δημιουργία "
"περιεχομένων (indexes), αν η βάση δεδομένων υποστηρίζει τα :doc:`tablespaces "
"</topics/db/tablespaces>`. Τις πιο πολλές φορές, μπορείτε να αγνοείτε αυτή "
"την επιλογή."

msgid ""
":attr:`~django.db.models.Field.auto_created`: ``True`` if the field was "
"automatically created, as for the :class:`~django.db.models.OneToOneField` "
"used by model inheritance. For advanced use only."
msgstr ""
":attr:`~django.db.models.Field.auto_created`: Είναι ``True`` αν το πεδίο "
"δημιουργήθηκε αυτόματα, όπως το :class:`~django.db.models.OneToOneField` που "
"χρησιμοποιείται από την κληρονομικότητα των μοντέλων. Για προχωρημένους "
"χρήστες μόνο."

msgid ""
"All of the options without an explanation in the above list have the same "
"meaning they do for normal Django fields. See the :doc:`field documentation "
"</ref/models/fields>` for examples and details."
msgstr ""
"Όλες οι επιλογές χωρίς εξήγηση, στην ανωτέρω λίστα, έχουν την ίδια έννοια με "
"τα συνηθισμένα πεδία του Django. Δείτε στο άρθρο :doc:`εγχειρίδιο πεδίων των "
"μοντέλων </ref/models/fields>` για παραδείγματα και λεπτομέρειες."

msgid "Field deconstruction"
msgstr "Deconstruction του πεδίου"

msgid ""
"The counterpoint to writing your ``__init__()`` method is writing the "
"``deconstruct()`` method. This method tells Django how to take an instance "
"of your new field and reduce it to a serialized form - in particular, what "
"arguments to pass to ``__init__()`` to re-create it."
msgstr ""
"Όταν υλοποιείτε τη μέθοδο ``__init__()`` θα πρέπει να υλοποιήσετε και τη "
"μέθοδο ``deconstruct()``. Αυτή η μέθοδος λέει στο Django πως να μετατρέψει "
"το instance του καινούργιου σας πεδίου σε μια σειριακή μορφή (serialized "
"form) - πιο συγκεκριμένα, ποια arguments θα πρέπει να περαστούν στη μέθοδο "
"``__init__()`` για να ξαναφτιαχτεί το instance."

msgid ""
"If you haven't added any extra options on top of the field you inherited "
"from, then there's no need to write a new ``deconstruct()`` method. If, "
"however, you're changing the arguments passed in ``__init__()`` (like we are "
"in ``HandField``), you'll need to supplement the values being passed."
msgstr ""
"Αν δεν έχετε προσθέσει τυχόν έξτρα επιλογές στη μέθοδο ``__init__()`` του "
"δικού σας πεδίου, δεν χρειάζεται να γράψετε κάποια νέα μέθοδο "
"``deconstruct()``. Αν, ωστόσο, αλλάξετε τα arguments που περνούν στην "
"``__init__()`` (όπως κάναμε στην κλάση ``HandField`` που αλλάξαμε το "
"``kwargs['max_length']``), θα χρειαστεί να προσθέσετε τις τιμές που περάσατε."

msgid ""
"The contract of ``deconstruct()`` is simple; it returns a tuple of four "
"items: the field's attribute name, the full import path of the field class, "
"the positional arguments (as a list), and the keyword arguments (as a dict). "
"Note this is different from the ``deconstruct()`` method :ref:`for custom "
"classes <custom-deconstruct-method>` which returns a tuple of three things."
msgstr ""
"Το συμβόλαιο με την μέθοδο ``deconstruct()`` είναι απλό. Επιστρέφει ένα "
"tuple τεσσάρων στοιχείων: το όνομα του attribute του field, το πλήρες import "
"path της κλάσης του πεδίου, τα positional arguments (ως λίστα) και τα "
"keyword arguments (ως dictionary). Σημειώστε ότι αυτή η μέθοδος είναι "
"διαφορετική από τη μέθοδο ``deconstruct()`` :ref:`όταν γράφεται δικές σας "
"κλάσεις <custom-deconstruct-method>` η οποία επιστρέφει ένα tuple τριών "
"στοιχείων."

msgid ""
"As a custom field author, you don't need to care about the first two values; "
"the base ``Field`` class has all the code to work out the field's attribute "
"name and import path. You do, however, have to care about the positional and "
"keyword arguments, as these are likely the things you are changing."
msgstr ""
"Ως συντάκτης του δικού σας πεδίου, δεν θα σας απασχολήσουν τα δύο πρώτα "
"στοιχεία του tuple. Η κύρια κλάση της ``Field`` έχει όλο τον απαραίτητο "
"κώδικα για να υπολογίσει το όνομα και το import path του πεδίου σας. Ωστόσο, "
"σίγουρα θα σας απασχολήσουν τα positional και keyword arguments, αφού αυτά "
"είναι τα στοιχεία που πιθανόν να αλλάξετε."

msgid ""
"For example, in our ``HandField`` class we're always forcibly setting "
"max_length in ``__init__()``. The ``deconstruct()`` method on the base "
"``Field`` class will see this and try to return it in the keyword arguments; "
"thus, we can drop it from the keyword arguments for readability::"
msgstr ""
"Για παράδειγμα, στην κλάση ``HandField`` θέτουμε το ``max_length`` μέσα στην "
"``__init__()``. Η μέθοδος ``deconstruct()`` της κλάσης ``Field`` (την οποία "
"καλούμε - ``super(HandField, self).deconstruct()``) θα δει ότι έχει οριστεί "
"το ``max_length`` και θα το επιστρέψει μέσα στο ``kwargs`` dictionary. Για "
"λόγους αναγνωσιμότητας μπορούμε να το διαγράψουμε από το dictionary και έτσι "
"το ``kwargs`` να είναι κενό. Όταν, επομένως, πάρουμε αυτό το tuple των "
"τεσσάρων στοιχείων και προσπαθήσουμε να χτίσουμε ένα instance του "
"``HandField`` δεν έχει πολύ νόημα το ``kwargs`` να περιέχει το "
"``max_length`` αφού κατά το χτίσιμο του instance θα κληθεί η ``__init__`` η "
"οποία το ορίζει μέσα της::"

msgid ""
"If you add a new keyword argument, you need to write code to put its value "
"into ``kwargs`` yourself::"
msgstr ""
"Αν προσθέσετε ένα νέο keyword argument, θα χρειαστεί να γράψετε κώδικα για "
"να προσθέσετε την τιμή του στο ``kwargs``::"

msgid ""
"More complex examples are beyond the scope of this document, but remember - "
"for any configuration of your Field instance, ``deconstruct()`` must return "
"arguments that you can pass to ``__init__`` to reconstruct that state."
msgstr ""
"Πιο περίπλοκα παραδείγματα είναι πέρα από τους σκοπούς αυτού του άρθρου, "
"αλλά να θυμάστε – για κάθε παραμετροποίηση του instance του Field, η μέθοδος "
"``deconstruct()`` πρέπει να επιστρέφει arguments τα οποία αν περάσετε στην "
"``__init__`` θα ξαναφτιάξετε το πεδίο σας."

msgid ""
"Pay extra attention if you set new default values for arguments in the "
"``Field`` superclass; you want to make sure they're always included, rather "
"than disappearing if they take on the old default value."
msgstr ""
"Δώστε μεγάλη προσοχή στην περίπτωση που δώσετε τυχόν νέες προεπιλεγμένες "
"τιμές στα arguments της superclass της ``Field``. Πρέπει να εξασφαλίσετε ότι "
"πάντοτε περιλαμβάνονται παρά εξαφανίζονται όταν λαμβάνουν την παλιά "
"προεπιλεγμένη τιμή."

msgid ""
"In addition, try to avoid returning values as positional arguments; where "
"possible, return values as keyword arguments for maximum future "
"compatibility. Of course, if you change the names of things more often than "
"their position in the constructor's argument list, you might prefer "
"positional, but bear in mind that people will be reconstructing your field "
"from the serialized version for quite a while (possibly years), depending "
"how long your migrations live for."
msgstr ""
"Επιπροσθέτως, προσπαθήστε να αποφύγετε να περάσετε τιμές ως positional "
"arguments, όπου δυνατόν και αντί αυτού να επιστρέφετε τις τιμές ως keyword "
"arguments για περισσότερη συμβατότητα στο μέλλον. Φυσικά, αν αλλάζετε τα "
"ονόματα πιο συχνά από τη θέση τους στη λίστα των arguments του constructor, "
"ίσως να προτιμήσετε τα positional arguments, αλλά έχετε στο μυαλό σας ότι "
"άλλοι προγραμματιστές θα κάνουν reconstruct το πεδίο σας από την σειριακή "
"έκδοση του για αρκετό καιρό (πιθανόν χρόνια), αναλόγως το χρόνο ζωής των "
"migration σας."

msgid ""
"You can see the results of deconstruction by looking in migrations that "
"include the field, and you can test deconstruction in unit tests by just "
"deconstructing and reconstructing the field::"
msgstr ""
"Μπορείτε να δείτε τα αποτελέσματα του deconstruction κοιτάζοντας τα "
"migrations τα οποία περιέχουν το πεδίο και μπορείτε, επίσης, να τεστάρετε το "
"deconstruction σε unit tests απλώς κάνοντας deconstruct και reconstruct το "
"πεδίο::"

msgid "Changing a custom field's base class"
msgstr "Αλλάζοντας την base class του δικού σας πεδίου"

msgid ""
"You can't change the base class of a custom field because Django won't "
"detect the change and make a migration for it. For example, if you start "
"with::"
msgstr ""
"Δεν μπορείτε να αλλάξετε την base class ενός παραμετροποιήσιμου πεδίου "
"επειδή το Django δεν ανιχνεύει την αλλαγή και δεν θα δημιουργήσει migration "
"για αυτή την αλλαγή. Για παράδειγμα αν ξεκινήσετε με αυτό::"

msgid ""
"and then decide that you want to use ``TextField`` instead, you can't change "
"the subclass like this::"
msgstr ""
"και μετά αποφασίσετε ότι θέλετε να χρησιμοποιήσετε αντί αυτού ένα "
"``TextField``, δεν μπορείτε να αλλάξετε την subclass όπως::"

msgid ""
"Instead, you must create a new custom field class and update your models to "
"reference it::"
msgstr ""
"Αντιθέτως, πρέπει να δημιουργήσετε μια νέα κλάση πεδίου και να ενημερώσετε "
"τα μοντέλα σας για να αναφερθούν σε αυτό::"

msgid ""
"As discussed in :ref:`removing fields <migrations-removing-model-fields>`, "
"you must retain the original ``CustomCharField`` class as long as you have "
"migrations that reference it."
msgstr ""
"Όπως συζητήθηκε στο :ref:`αφαιρώντας πεδία μοντέλων <migrations-removing-"
"model-fields>`, θα πρέπει να διατηρήσετε την αρχική κλάση "
"``CustomCharField`` στον κώδικα σας όσο έχετε migrations τα οποία "
"αναφέρονται σε αυτή."

msgid "Documenting your custom field"
msgstr "Τεκμηριώνοντας το δικό σας πεδίο"

msgid ""
"As always, you should document your field type, so users will know what it "
"is. In addition to providing a docstring for it, which is useful for "
"developers, you can also allow users of the admin app to see a short "
"description of the field type via the :doc:`django.contrib.admindocs </ref/"
"contrib/admin/admindocs>` application. To do this simply provide descriptive "
"text in a :attr:`~Field.description` class attribute of your custom field. "
"In the above example, the description displayed by the ``admindocs`` "
"application for a ``HandField`` will be 'A hand of cards (bridge style)'."
msgstr ""
"Όπως πάντα, θα πρέπει να τεκμηριώνετε (περιγραφικά και βοηθητικά σχόλια) τον "
"τύπο του πεδίου σας, προκειμένου οι χρήστες αυτού να γνωρίζουν περί τίνος "
"πρόκειται. Πέρα από το γεγονός του να γράψετε ένα docstring για αυτό, το "
"οποίο είναι χρήσιμο για τους developers, μπορείτε επίσης να προσφέρετε στους "
"χρήστες του Django admin να δουν μια μικρή περιγραφή του τύπου του πεδίου "
"μέσω της εφαρμογής :doc:`django.contrib.admindocs </ref/contrib/admin/"
"admindocs>`. Για να γίνει αυτό απλώς προσθέστε ένα περιγραφικό κείμενο στο "
"class attribute :attr:`~Field.description` του δικού σας πεδίου. Στο "
"παραπάνω παράδειγμα, η περιγραφή που εμφανίζεται από την εφαρμογή "
"``admindocs`` για το πεδίο ``HandField`` θα είναι η 'A hand of cards (bridge "
"style)'."

msgid ""
"In the :mod:`django.contrib.admindocs` display, the field description is "
"interpolated with ``field.__dict__`` which allows the description to "
"incorporate arguments of the field. For example, the description for :class:"
"`~django.db.models.CharField` is::"
msgstr ""
"Στην εμφάνιση του module :mod:`django.contrib.admindocs`, η περιγραφή του "
"πεδίου ενσωματώνεται στο ``field.__dict__`` το οποίο επιτρέπει στην "
"περιγραφή να συνεργαστεί με arguments του πεδίου. Για παράδειγμα, η "
"περιγραφή του :class:`~django.db.models.CharField` είναι η::"

msgid "Useful methods"
msgstr "Χρήσιμες μέθοδοι"

msgid ""
"Once you've created your :class:`~django.db.models.Field` subclass, you "
"might consider overriding a few standard methods, depending on your field's "
"behavior. The list of methods below is in approximately decreasing order of "
"importance, so start from the top."
msgstr ""
"Όταν φτιάξετε την subclass της κλάσης :class:`~django.db.models.Field`, "
"μπορείτε, αν θέλετε, να παρακάμψετε (override) μερικές στάνταρντ μεθόδους, "
"ανάλογα τη συμπεριφορά του πεδίου σας. Η λίστα με τις μεθόδους, παρακάτω, "
"είναι περίπου κατά φθίνουσα σειρά σπουδαιότητας, οπότε ξεκινήστε από πάνω "
"προς τα κάτω."

msgid "Custom database types"
msgstr "Δικά σας πεδία βάσης δεδομένων"

msgid ""
"Say you've created a PostgreSQL custom type called ``mytype``. You can "
"subclass ``Field`` and implement the :meth:`~Field.db_type` method, like so::"
msgstr ""
"Ας υποθέσουμς ότι έχετε δημιουργήσει ένα δικό σας πεδίο στη PostgreSQL με το "
"όνομα ``mytype``. Μπορείτε να κάνετε subclass τη κλάση ``Field`` και να "
"υλοποιήσετε τη μέθοδο :meth:`~Field.db_type`, ως εξής::"

msgid ""
"Once you have ``MytypeField``, you can use it in any model, just like any "
"other ``Field`` type::"
msgstr ""
"Όταν θα έχετε γράψει το ``MytypeField``, μπορείτε να το χρησιμοποιήσετε σε "
"οποιοδήποτε από τα μοντέλα σας, όπως ακριβώς με οποιοδήποτε άλλο τύπο "
"``Field``::"

msgid ""
"If you aim to build a database-agnostic application, you should account for "
"differences in database column types. For example, the date/time column type "
"in PostgreSQL is called ``timestamp``, while the same column in MySQL is "
"called ``datetime``. The simplest way to handle this in a :meth:`~Field."
"db_type` method is to check the ``connection.settings_dict['ENGINE']`` "
"attribute."
msgstr ""
"Αν σκοπεύετε να φτιάξετε μια εφαρμογή η οποία είναι ανεξάρτητη από τη βάση "
"δεδομένων που χρησιμοποιείται, θα πρέπει να λάβετε υπόψη σας τις διαφορές "
"τύπων στηλών μεταξύ των βάσεων δεδομένων. Για παράδειγμα, η στήλη τύπου date/"
"time στην PostgreSQL καλείτε ``timestamp``, ενώ η ίδια στήλη στη MySQL "
"καλείται ``datetime``. Ο πιο απλός τρόπος να χειριστείτε αυτή την κατάσταση "
"μέσα στη μέθοδο :meth:`~Field.db_type` είναι να ελέγξετε το attribute "
"``connection.settings_dict['ENGINE']``."

msgid "For example::"
msgstr "Για παράδειγμα::"

msgid ""
"The :meth:`~Field.db_type` and :meth:`~Field.rel_db_type` methods are called "
"by Django when the framework constructs the ``CREATE TABLE`` statements for "
"your application -- that is, when you first create your tables. The methods "
"are also called when constructing a ``WHERE`` clause that includes the model "
"field -- that is, when you retrieve data using QuerySet methods like "
"``get()``, ``filter()``, and ``exclude()`` and have the model field as an "
"argument. They are not called at any other time, so it can afford to execute "
"slightly complex code, such as the ``connection.settings_dict`` check in the "
"above example."
msgstr ""
"Οι μέθοδοι :meth:`~Field.db_type` και :meth:`~Field.rel_db_type` καλούνται "
"από το Django όταν το framework φτιάχνει τα ``CREATE TABLE`` statements για "
"την εφαρμογή σας -- δηλαδή, στο αρχικό στάδιο δημιουργίας των πινάκων σας. "
"Οι μέθοδοι, καλούνται, επίσης, όταν δημιουργείται μια ``WHERE`` εντολή η "
"οποία περιλαμβάνει το πεδίο του μοντέλου -- δηλαδή, όταν αντλείτε δεδομένα "
"χρησιμοποιώντας μεθόδους QuerySet όπως η ``get()``, ``filter()`` και "
"``exclude()`` και έχετε περασμένο το πεδίο του μοντέλου ως argument. Οι "
"μέθοδοι αυτές δεν καλούνται κάποια άλλη στιγμή, οπότε αξίζει να εκτελέσουν "
"έναν ελαφρά περίπλοκο κώδικα, όπως το να ελέγξουν το ``connection."
"settings_dict`` όπως στο παραπάνω παράδειγμα."

msgid ""
"Some database column types accept parameters, such as ``CHAR(25)``, where "
"the parameter ``25`` represents the maximum column length. In cases like "
"these, it's more flexible if the parameter is specified in the model rather "
"than being hard-coded in the ``db_type()`` method. For example, it wouldn't "
"make much sense to have a ``CharMaxlength25Field``, shown here::"
msgstr ""
"Μερικοί τύποι στηλών βάσης δεδομένων δέχονται παραμέτρους, όπως "
"``CHAR(25)``, όπου η παράμετρος ``25`` αναπαριστά το μέγιστο μήκος "
"χαρακτήρων της στήλης. Σε παρόμοιες περιπτώσεις, είναι πιο ευέλικτο η "
"παράμετρος να δηλωθεί στο μοντέλο (ως ``max_length`` attribute) παρά να "
"γραφεί με το χέρι μέσα στη μέθοδο ``db_type()``. Για παράδειγμα, δεν θα είχε "
"πολύ νόημα να είχατε ένα πεδίο ``CharMaxlength25Field``, όπως φαίνεται εδώ::"

msgid ""
"The better way of doing this would be to make the parameter specifiable at "
"run time -- i.e., when the class is instantiated. To do that, just implement "
"``Field.__init__()``, like so::"
msgstr ""
"Ένας καλύτερος τρόπος είναι να προσδιορίσετε την παράμετρο κατά τη διάρκεια "
"του run time -- πχ, όταν η κλάση αρχικοποιείται. Για να το κάνετε αυτό, "
"απλώς υλοποιήστε την ``Field.__init__()``, ως εξής (εδώ περνάμε την "
"παράμετρο max_length ως positional argument)::"

msgid ""
"Finally, if your column requires truly complex SQL setup, return ``None`` "
"from :meth:`.db_type`. This will cause Django's SQL creation code to skip "
"over this field. You are then responsible for creating the column in the "
"right table in some other way, of course, but this gives you a way to tell "
"Django to get out of the way."
msgstr ""
"Εν τέλει, αν η στήλη σας απαιτεί πραγματικά περίπλοκο SQL στήσιμο, "
"επιστρέψτε ``None`` από την μέθοδο :meth:`.db_type`. Αυτό θα επιτρέψει στον "
"κώδικα του Django που παράγει την SQL να προσπεράσει αυτό το πεδίο. Είστε, "
"πλέον, υπεύθυνοι να δημιουργήσετε εσείς τη στήλη στο σωστό πίνακα με κάποιον "
"άλλο τρόπο. Αυτό, φυσικά, λέει στο Django να βγει από τη μέση."

msgid ""
"The :meth:`~Field.rel_db_type` method is called by fields such as "
"``ForeignKey`` and ``OneToOneField`` that point to another field to "
"determine their database column data types. For example, if you have an "
"``UnsignedAutoField``, you also need the foreign keys that point to that "
"field to use the same data type::"
msgstr ""
"Η μέθοδος :meth:`~Field.rel_db_type` καλείται από πεδία τύπου ``ForeignKey`` "
"και ``OneToOneField`` τα οποία δείχνουν σε ένα άλλο πεδίο για να καθορίσουν "
"τον τύπο δεδομένων της στήλης. Για παράδειγμα, αν έχετε ένα πεδίο τύπου "
"``UnsignedAutoField``, χρειάζεστε επίσης τα foreign keys τα οποία δείχνουν "
"σε αυτό το πεδίο για να χρησιμοποιηθεί ο ίδιος τύπος δεδομένων::"

msgid "The :meth:`~Field.rel_db_type` method was added."
msgstr "Προστέθηκε η μέθοδος :meth:`~Field.rel_db_type`."

msgid "Converting values to Python objects"
msgstr "Μετατρέποντας τιμές σε Python objects"

msgid ""
"If your custom :class:`~Field` class deals with data structures that are "
"more complex than strings, dates, integers, or floats, then you may need to "
"override :meth:`~Field.from_db_value` and :meth:`~Field.to_python`."
msgstr ""
"Αν η δικιά σας κλάση :class:`~Field` ασχολείται με δομές δεδομένων (data "
"structures) οι οποίες είναι πιο περίπλοκες από strings, dates, integers, ή "
"floats, τότε ίσως χρειαστεί να παρακάμψετε (override) τις μέθοδους :meth:"
"`~Field.from_db_value` και :meth:`~Field.to_python`."

msgid ""
"If present for the field subclass, ``from_db_value()`` will be called in all "
"circumstances when the data is loaded from the database, including in "
"aggregates and :meth:`~django.db.models.query.QuerySet.values` calls."
msgstr ""
"Αν η μέθοδος ``from_db_value()`` έχει υλοποιηθεί στη subclass του πεδίου, "
"τότε θα καλείται σε όλες τις περιπτώσεις που τα δεδομένα φορτώνονται από τη "
"βάση δεδομένων, συμπεριλαμβανομένων των κλήσεων των aggregate και :meth:"
"`~django.db.models.query.QuerySet.values`."

msgid ""
"``to_python()`` is called by deserialization and during the :meth:`~django."
"db.models.Model.clean` method used from forms."
msgstr ""
"Η μέθοδος ``to_python()`` καλείται κατά το deserialization και κατά τη "
"διάρκεια της μεθόδου :meth:`~django.db.models.Model.clean` που "
"χρησιμοποιείται από τις φόρμες."

msgid ""
"As a general rule, ``to_python()`` should deal gracefully with any of the "
"following arguments:"
msgstr ""
"Ως γενικός κανόνας, η μέθοδος ``to_python()`` θα πρέπει συνεργάζεται με "
"οποιοδήποτε από τα ακόλουθα arguments:"

msgid ""
"An instance of the correct type (e.g., ``Hand`` in our ongoing example)."
msgstr ""
"Ένα instance ενός σωστού τύπου (πχ, του ``Hand`` στο τρέχων παράδειγμα μας)."

msgid "A string"
msgstr "Ένα string"

msgid "``None`` (if the field allows ``null=True``)"
msgstr "``None`` (αν το πεδίο επιτρέπει ``null=True``)"

msgid ""
"In our ``HandField`` class, we're storing the data as a VARCHAR field in the "
"database, so we need to be able to process strings and ``None`` in the "
"``from_db_value()``. In ``to_python()``, we need to also handle ``Hand`` "
"instances::"
msgstr ""
"Στην κλάση ``HandField``, αποθηκεύουμε τα δεδομένα ως ένα πεδίο VARCHAR στη "
"βάση δεδομένων, οπότε θα πρέπει να είμαστε σε θέση να επεξεργαστούμε τύπου "
"strings και τύπου ``None`` στη μέθοδο ``from_db_value()``. Στη μέθοδο "
"``to_python()``, θα πρέπει, επίσης, να δουλέψουμε με instances της κλάσης "
"``Hand``::"

msgid ""
"Notice that we always return a ``Hand`` instance from these methods. That's "
"the Python object type we want to store in the model's attribute."
msgstr ""
"Σημειώστε ότι πάντα επιστρέφουμε ένα instance του ``Hand`` από αυτές τις "
"μεθόδους. Αυτός είναι ο τύπος του Python object που θέλουμε να αποθηκεύσουμε "
"στο attribute του model."

msgid ""
"For ``to_python()``, if anything goes wrong during value conversion, you "
"should raise a :exc:`~django.core.exceptions.ValidationError` exception."
msgstr ""
"Όσον αφορά τη μέθοδο ``to_python()``, αν κάτι πάει στραβά κατά τη μετατροπή "
"της τιμής, θα πρέπει να κάνετε raise ένα :exc:`~django.core.exceptions."
"ValidationError` exception (όπως κάνουμε μέσα στην ``parse_hand ``)."

msgid "Converting Python objects to query values"
msgstr "Μετατρέποντας τα Python objects σε query values"

msgid ""
"Since using a database requires conversion in both ways, if you override :"
"meth:`~Field.to_python` you also have to override :meth:`~Field."
"get_prep_value` to convert Python objects back to query values."
msgstr ""
"Εφόσον χρησιμοποιούμε μια βάση δεδομέμων θα πρέπει, όπως είπαμε, η μετατροπή "
"των δεδομένων να γίνεται μεταξύ Python και βάσης και αντίστροφα. Αν "
"παρακάμψετε (override) τη μέθοδο :meth:`~Field.to_python` θα χρειαστεί, "
"επίσης, να παρακάμψετε τη μέθοδο :meth:`~Field.get_prep_value` για να "
"μετατρέψετε τα Python objects σε query values, δηλαδή τιμές που καταλαβαίνει "
"η βάση δεδομένων. Η μέθοδος αυτή θα καλείται κάθε φορά που θα ερωτάται η "
"βάση, μέσω κάποιου query, πχ ``MyModel.objects.filter(...)`` ή ``MyModel."
"objects.get(...)`` κλπ. Με άλλα λόγια, η μέθοδος αυτή προετοιμάζει την τιμή "
"που δόθηκε στο query (η οποία είναι ένα Python object, πχ ``MyModel.objects."
"filter(hand=Hand('...26chars', '...26chars', '...26chars', '...26chars')``) "
"σε μια τιμή που καταλαβαίνει η βάση δεδομένων (στην προκειμένη, ένα string "
"με όλα τα φύλλα της τράπουλας ανά παίκτη, πχ 'Js6h3s5d6d...')."

msgid ""
"If your custom field uses the ``CHAR``, ``VARCHAR`` or ``TEXT`` types for "
"MySQL, you must make sure that :meth:`.get_prep_value` always returns a "
"string type. MySQL performs flexible and unexpected matching when a query is "
"performed on these types and the provided value is an integer, which can "
"cause queries to include unexpected objects in their results. This problem "
"cannot occur if you always return a string type from :meth:`.get_prep_value`."
msgstr ""
"Αν τα δικά σας πεδία χρησιμοποιούν του τύπους ``CHAR``, ``VARCHAR`` ή "
"``TEXT`` της MySQL, θα πρέπει να σιγουρευτείτε ότι η μέθοδος :meth:`."
"get_prep_value` επιστρέφει πάντα μεταβλητές τύπου string. Όταν κάνετε ένα "
"ερώτημα στη MySQL σχετικά με αυτά τα πεδία και η τιμή που δίνετε στο query "
"είναι τύπου integer τότε η MySQL συμπεριφέρεται κάπως αναπάντεχα και τα "
"αποτελέσματα από το query να μην είναι αυτά που περιμένετε. Αυτό το πρόβλημα "
"δεν θα υπάρξει αν επιστρέφετε, πάντα, μια μεταβλητή τύπου string στη μέθοδο :"
"meth:`.get_prep_value`."

msgid "Converting query values to database values"
msgstr "Μετατρέποντας τα query values σε database values"

msgid ""
"Some data types (for example, dates) need to be in a specific format before "
"they can be used by a database backend. :meth:`~Field.get_db_prep_value` is "
"the method where those conversions should be made. The specific connection "
"that will be used for the query is passed as the ``connection`` parameter. "
"This allows you to use backend-specific conversion logic if it is required."
msgstr ""
"Κάποιοι τύποι δεδομένων (πχ ημερομηνίες) χρειάζεται να είναι σε κάποια "
"συγκεκριμένη μορφή πριν χρησιμοποιηθούν με κάποια βάση δεδομένων. Η μέθοδος :"
"meth:`~Field.get_db_prep_value` είναι το μέρος όπου αυτές οι μετατροπές "
"πρέπει να γίνουν. Η σύνδεση (της βάση δεδομένων) που χρησιμοποιείται με το "
"query περνάει ως το όρισμα με το όνομα ``connection``. Αυτό σας επιτρέπει να "
"χρησιμοποιείτε διαφορετική λογική μετατροπής με διαφορετικούς τύπους βάσης "
"δεδομένων, αν αυτό είναι απαραίτητο."

msgid ""
"For example, Django uses the following method for its :class:`BinaryField`::"
msgstr ""
"Για παράδειγμα, το Django χρησιμοποιεί την ακόλουθη μέθοδο για πεδία τύπου :"
"class:`BinaryField`::"

msgid ""
"In case your custom field needs a special conversion when being saved that "
"is not the same as the conversion used for normal query parameters, you can "
"override :meth:`~Field.get_db_prep_save`."
msgstr ""
"Σε περίπτωση που το δικό σας πεδίο χρειάζεται μια ξεχωριστή μετατροπή όταν "
"αποθηκεύεται, δηλαδή όχι την ίδια μετατροπή που χρησιμοποιείται για "
"συνηθισμένες παραμέτρους ενός query, μπορείτε να παρακάμψετε (override) τη "
"μέθοδο :meth:`~Field.get_db_prep_save`."

msgid "Preprocessing values before saving"
msgstr "Επεξεργασία τιμών πριν την αποθήκευση"

msgid ""
"If you want to preprocess the value just before saving, you can use :meth:"
"`~Field.pre_save`. For example, Django's :class:`~django.db.models."
"DateTimeField` uses this method to set the attribute correctly in the case "
"of :attr:`~django.db.models.DateField.auto_now` or :attr:`~django.db.models."
"DateField.auto_now_add`."
msgstr ""
"Αν θέλετε να επεξεργαστείτε την τιμή ακριβώς πριν την αποθήκευση της (στη "
"βάση δεδομένων), μπορείτε να χρησιμοποιήσετε τη μέθοδο :meth:`~Field."
"pre_save`. Για παράδειγμα, η κλάση του Django :class:`~django.db.models."
"DateTimeField` χρησιμοποιεί αυτή τη μέθοδο για να θέσει το attribute στη "
"σωστή τιμή, όταν το :attr:`~django.db.models.DateField.auto_now` ή το :attr:"
"`~django.db.models.DateField.auto_now_add` είναι ``True``."

msgid ""
"If you do override this method, you must return the value of the attribute "
"at the end. You should also update the model's attribute if you make any "
"changes to the value so that code holding references to the model will "
"always see the correct value."
msgstr ""
"Αν παρακάμψετε αυτή τη μέθοδο, θα πρέπει να επιστρέψετε στο τέλος την τιμή "
"του attribute. Θα πρέπει, επίσης, να ενημερώσετε το αντίστοιχο attribute του "
"μοντέλου σας αν κάνετε τυχόν αλλαγές στην τιμή ούτως ώστε τυχόν κώδικας που "
"αναφέρεται στο μοντέλο θα βλέπει πάντα τη σωστή τιμή."

msgid "Specifying the form field for a model field"
msgstr "Προσδιορίζοντας το πεδίο της φόρμας για ένα πεδίο μοντέλου"

msgid ""
"To customize the form field used by :class:`~django.forms.ModelForm`, you "
"can override :meth:`~Field.formfield`."
msgstr ""
"Για να παραμετροποιήσετε το πεδίο της φόρμας (form field) που "
"χρησιμοποιείται από την κλάση :class:`~django.forms.ModelForm`, μπορείτε να "
"παρακάμψετε (override) τη μέθοδο :meth:`~Field.formfield`."

msgid ""
"The form field class can be specified via the ``form_class`` and "
"``choices_form_class`` arguments; the latter is used if the field has "
"choices specified, the former otherwise. If these arguments are not "
"provided, :class:`~django.forms.CharField` or :class:`~django.forms."
"TypedChoiceField` will be used."
msgstr ""
"Η κλάση του πεδίου της φόρμας μπορεί να οριστεί μέσω των arguments "
"``form_class`` και ``choices_form_class``. Το τελευταίο χρησιμοποιείται σε "
"περίπτωση που το πεδίο έχει ορίσει την παράμετρο choices, ενώ το πρώτο όχι. "
"Αν αυτά τα arguments δεν δηλωθούν, τότε το πεδίο :class:`~django.forms."
"CharField` ή :class:`~django.forms.TypedChoiceField` θα χρησιμοποίηθεί."

msgid ""
"All of the ``kwargs`` dictionary is passed directly to the form field's "
"``__init__()`` method. Normally, all you need to do is set up a good default "
"for the ``form_class`` (and maybe ``choices_form_class``) argument and then "
"delegate further handling to the parent class. This might require you to "
"write a custom form field (and even a form widget). See the :doc:`forms "
"documentation </topics/forms/index>` for information about this."
msgstr ""
"Ολόκληρο το ``kwargs`` dictionary περνάει ως όρισμα απ' ευθείας στη μέθοδο "
"``__init__()`` του πεδίου της φόρμας. Συνήθως, το μόνο που πρέπει να κάνετε "
"είναι να θέσετε ένα καλό ``kwargs`` ως προεπιλογή για το argument "
"``form_class`` (και ίσως για το ``choices_form_class``) και μετά να δώσετε "
"τον έλεγχο στην parent class. Αυτό ίσως απαιτήσει να γράψετε ένα δικό σας "
"πεδίο φόρμας (και ίσως ένα widget φόρμας). Δείτε στο :doc:`εγχειρίδιο για "
"φόρμες </topics/forms/index>`, για πληροφορίες σχετικά με αυτό."

msgid ""
"Continuing our ongoing example, we can write the :meth:`~Field.formfield` "
"method as::"
msgstr ""
"Συνεχίζοντας το παράδειγμα μας, μπορούμε να γράψουμε τη μέθοδο :meth:`~Field."
"formfield` ως εξής::"

msgid ""
"This assumes we've imported a ``MyFormField`` field class (which has its own "
"default widget). This document doesn't cover the details of writing custom "
"form fields."
msgstr ""
"Αυτό προϋποθέτει ότι έχουμε κάνει import μια κλάση φόρμας ``MyFormField`` (η "
"οποία έχει το δικό της προεπιλεγμένο widget). Το παρών άρθρο δεν καλύπτει τη "
"συγγραφή δικών σας πεδίων για φόρμες."

msgid "Emulating built-in field types"
msgstr "Προσομοιώνοντας προεγκατεστημένους (built-in) τύπους πεδίων"

msgid ""
"If you have created a :meth:`.db_type` method, you don't need to worry "
"about :meth:`.get_internal_type` -- it won't be used much. Sometimes, "
"though, your database storage is similar in type to some other field, so you "
"can use that other field's logic to create the right column."
msgstr ""
"Αν έχετε δημιουργήσει μια μέθοδο :meth:`.db_type`, δεν θα χρειαστεί να "
"ανησυχείτε για τη μέθοδο :meth:`.get_internal_type` -- δεν θα χρησιμοποιηθεί "
"πολύ. Μερικές φορές, όμως, η μονάδα αποθήκευσης της βάσης δεδομένων σας "
"είναι παρόμοια, σε επίπεδο τύπου, με κάποιο άλλο πεδίο, οπότε μπορείτε να "
"χρησιμοποιήσετε τη λογική αυτού του άλλου πεδίου για να δημιουργήσετε τη "
"σωστή τύπου στήλη."

msgid ""
"No matter which database backend we are using, this will mean that :djadmin:"
"`migrate` and other SQL commands create the right column type for storing a "
"string."
msgstr ""
"Ανεξαρτήτως της βάσης δεδομένων που χρησιμοποιούμε, αυτό θα σημαίνει ότι η "
"εντολή :djadmin:`migrate` και άλλες SQL εντολές, θα χρησιμοποιούν τη σωστή "
"τύπου στήλη για την αποθήκευση ενός string."

msgid ""
"If :meth:`.get_internal_type` returns a string that is not known to Django "
"for the database backend you are using -- that is, it doesn't appear in "
"``django.db.backends.<db_name>.base.DatabaseWrapper.data_types`` -- the "
"string will still be used by the serializer, but the default :meth:`~Field."
"db_type` method will return ``None``. See the documentation of :meth:`~Field."
"db_type` for reasons why this might be useful. Putting a descriptive string "
"in as the type of the field for the serializer is a useful idea if you're "
"ever going to be using the serializer output in some other place, outside of "
"Django."
msgstr ""
"Αν η μέθοδος :meth:`.get_internal_type` επιστρέφει ένα string το οποίο δεν "
"είναι γνωστό στο Django για την βάση δεδομένων που χρησιμοποιείται -- "
"δηλαδή, δεν εμφανίζεται στο ``django.db.backends.<db_name>.base."
"DatabaseWrapper.data_types`` -- το string θα εξακολουθήσει να "
"χρησιμοποιείται από τον serializer, αλλά η προεπιλεγμένη μέθοδος :meth:"
"`~Field.db_type` θα επιστρέψει ``None``. Δείτε το εγχειρίδιο της μεθόδου :"
"meth:`~Field.db_type` για περιπτώσεις που αυτό μπορεί να φανεί χρήσιμο. "
"Είναι μια καλή ιδέα να θέσετε ένα όμορφα περιγραφικό string ως τύπο πεδίου "
"για τον serializer αν πρόκειται να χρησιμοποιήσετε την έξοδο του serializer "
"σε κάποιο άλλο μέρος, εκτός του Django."

msgid "Converting field data for serialization"
msgstr "Μετατρέποντας τα δεδομένα του πεδίου για το serialization"

msgid ""
"To customize how the values are serialized by a serializer, you can "
"override :meth:`~Field.value_to_string`. Using ``value_from_object()`` is "
"the best way to get the field's value prior to serialization. For example, "
"since our ``HandField`` uses strings for its data storage anyway, we can "
"reuse some existing conversion code::"
msgstr ""
"Για την παραμετροποίηση των τιμών ούτως ώστε να γίνουν serialized από τον "
"serializer, μπορείτε να παρακάμψετε (override) τη μέθοδο :meth:`~Field."
"value_to_string`. Η χρήση της ``value_from_object()`` είναι ο καλύτερος "
"τρόπος να πάρετε την τιμή του πεδίου πριν το serialization. Για παράδειγμα, "
"εφόσον το ``HandField`` χρησιμοποιεί strings για την αποθήκευση των "
"δεδομένων του, μπορούμε να επαναχρησιμοποιήσουμε τον ήδη υπάρχον κώδικα που "
"θα κάνει τη μετατροπή (``get_prep_value()``)::"

msgid "Some general advice"
msgstr "Μερικές γενικές συμβουλές"

msgid ""
"Writing a custom field can be a tricky process, particularly if you're doing "
"complex conversions between your Python types and your database and "
"serialization formats. Here are a couple of tips to make things go more "
"smoothly:"
msgstr ""
"Η συγγραφή ενός δικού σας πεδίου μπορεί να είναι μια περίπλοκη διαδικασία, "
"ειδικά όταν πραγματοποιείτε περίπλοκες μετατροπές μεταξύ Python objects και "
"μορφών της βάσης δεδομένων και του serialization. Παρακάτω παρουσιάζονται "
"δύο συμβουλές για να ομαλοποιήσουν τα πράγματα:"

msgid ""
"Look at the existing Django fields (in :file:`django/db/models/fields/"
"__init__.py`) for inspiration. Try to find a field that's similar to what "
"you want and extend it a little bit, instead of creating an entirely new "
"field from scratch."
msgstr ""
"Κοιτάξτε στα ήδη υπάρχοντα πεδία του Django (μέσα στο αρχείο :file:`django/"
"db/models/fields/__init__.py`) για έμπνευση. Προσπαθήστε να βρείτε ένα πεδίο "
"που να έχει ομοιότητες με αυτό που προσπαθήστε να επεκτείνετε, αντί να "
"δημιουργήσετε ένα εντελώς νέο πεδίο από την αρχή."

msgid ""
"Put a ``__str__()`` (``__unicode__()`` on Python 2) method on the class "
"you're wrapping up as a field. There are a lot of places where the default "
"behavior of the field code is to call :func:`~django.utils.encoding."
"force_text` on the value. (In our examples in this document, ``value`` would "
"be a ``Hand`` instance, not a ``HandField``). So if your ``__str__()`` "
"method (``__unicode__()`` on Python 2) automatically converts to the string "
"form of your Python object, you can save yourself a lot of work."
msgstr ""
"Υλοποιήστε τη μέθοδο ``__str__()`` (την ``__unicode__()`` αν δουλεύετε με "
"την Python 2) στην κλάση που δηλώνεται ως πεδίο. Υπάρχουν πολλά μέρη όπου η "
"προεπιλεγμένη συμπεριφορά του κώδικα του πεδίου καλεί τη συνάρτηση :func:"
"`~django.utils.encoding.force_text` χρησιμοποιώντας την τιμή (στα "
"παραδείγματα μας σε αυτό το άρθρο, η τιμή, ``value``, θα είναι ένα instance "
"της κλάσης ``Hand`` και όχι της ``HandField``). Οπότε αν η μέθοδος "
"``__str__()`` (``__unicode__()`` στην Python 2) μετατρέπει αυτόματα το "
"Python object σε μια μορφή string, θα γλυτώσετε πολύ χρόνο."

msgid "Writing a ``FileField`` subclass"
msgstr "Γράφοντας μια subclass ενός πεδίου τύπου ``FileField``"

msgid ""
"In addition to the above methods, fields that deal with files have a few "
"other special requirements which must be taken into account. The majority of "
"the mechanics provided by ``FileField``, such as controlling database "
"storage and retrieval, can remain unchanged, leaving subclasses to deal with "
"the challenge of supporting a particular type of file."
msgstr ""
"Επιπροσθέτως των παραπάνω μεθόδων, τα πεδια που ασχολούνται με αρχεία έχουν "
"μερικές ακόμη απαιτήσεις, τις οποίες πρέπει να λάβετε υπόψιν σας. Η "
"πλειονότητα των μηχανισμών που προσφέρει ένα πεδίο τύπου ``FileField``, όπως "
"ο έλεγχος της μονάδας αποθήκευσης της βάσης δεδομένων (database storage) "
"καθώς και της ανάκτησης, μπορεί να μείνει ανέπαφος, αφήνοντας τις subclasses "
"να χειριστούν την πρόκληση της υποστήριξης ενός συγκεκριμένου τύπου αρχείου."

msgid ""
"Django provides a ``File`` class, which is used as a proxy to the file's "
"contents and operations. This can be subclassed to customize how the file is "
"accessed, and what methods are available. It lives at ``django.db.models."
"fields.files``, and its default behavior is explained in the :doc:`file "
"documentation </ref/files/file>`."
msgstr ""
"Το Django προσφέρει μια κλάση ``File``, που χρησιμοποιείται ως μεσάζων "
"(proxy) στα περιεχόμενα και λειτουργίες του αρχείου. Αυτή η κλάση μπορεί να "
"γίνει subclass προκειμένου να παραμετροποιηθεί η πρόσβαση στο αρχείο και το "
"ποιες μέθοδοι θα είναι διαθέσιμες. Βρίσκεται στο ``django.db.models.fields."
"files`` και η προεπιλεγμένη συμπεριφορά του εξηγείται στο :doc:`εγχειρίδιο "
"για αρχεία </ref/files/file>`."

msgid ""
"Once a subclass of ``File`` is created, the new ``FileField`` subclass must "
"be told to use it. To do so, simply assign the new ``File`` subclass to the "
"special ``attr_class`` attribute of the ``FileField`` subclass."
msgstr ""
"Όταν μια subclass της κλάσης ``File`` δημιουργηθεί, η νέα subclass "
"``FileField`` θα πρέπει να ξέρει πως να χρησιμοποιήσει τη subclass της "
"``File``. Για να γίνει αυτό, πρέπει να ορίσετε το ξεχωριστό attribute "
"``attr_class`` της ``FileField`` στην τιμή της νέας subclass της ``File``."

msgid "A few suggestions"
msgstr "Μερικές προτάσεις"

msgid ""
"In addition to the above details, there are a few guidelines which can "
"greatly improve the efficiency and readability of the field's code."
msgstr ""
"Πέρα από τις παραπάνω λεπτομέρειες, υπάρχουν μερικές κατευθυντήριες γραμμές "
"οι οποίες μπορούν να βελτιώσουν την αποδοτικότητα και την αναγνωσιμότητα του "
"κώδικα του πεδίου σας."

msgid ""
"The source for Django's own ``ImageField`` (in ``django/db/models/fields/"
"files.py``) is a great example of how to subclass ``FileField`` to support a "
"particular type of file, as it incorporates all of the techniques described "
"above."
msgstr ""
"Ο πηγαίος κώδικας του πεδίου ``ImageField`` του Django (βρίσκεται στο αρχείο "
"``django/db/models/fields/files.py``) είναι ένα καλό παράδειγμα του πως να "
"κάνετε subclass την κλάση ``FileField`` για να υποστηρίξετε έναν "
"συγκεκριμένο τύπο αρχείου, καθώς υιοθετεί όλες τις τεχνικές που αναφέρθηκαν "
"παραπάνω."

msgid ""
"Cache file attributes wherever possible. Since files may be stored in remote "
"storage systems, retrieving them may cost extra time, or even money, that "
"isn't always necessary. Once a file is retrieved to obtain some data about "
"its content, cache as much of that data as possible to reduce the number of "
"times the file must be retrieved on subsequent calls for that information."
msgstr ""
"Όσο μπορείτε να κάνετε cache τα attributes του αρχείου. Εφόσον τα αρχεία "
"μπορεί να αποθηκεύονται σε απομακρυσμένα συστήματα αποθήκευσης, η ανάκτηση "
"τους μπορεί να κοστίσει επιπλέον άσκοπο χρόνο ή ακόμη και χρήματα. Όταν ένα "
"αρχείο ανακτάται ούτως ώστε να δείτε κάποιες πληροφορίες σχετικά με τα "
"περιεχόμενα του, κάντε cache (αποθηκεύστε τα στη λανθάνουσα μνήμη) όσα "
"περισσότερα δεδομένα μπορείτε για να μειώσετε τον αριθμό μελλοντικών "
"προσπελάσεων του αρχείου για την απόκτηση των ίδιων πληροφοριών."

msgid "Custom template tags and filters"
msgstr "Γράφοντας δικά σας template tags και φίλτρα"

msgid ""
"Django's template language comes with a wide variety of :doc:`built-in tags "
"and filters </ref/templates/builtins>` designed to address the presentation "
"logic needs of your application. Nevertheless, you may find yourself needing "
"functionality that is not covered by the core set of template primitives. "
"You can extend the template engine by defining custom tags and filters using "
"Python, and then make them available to your templates using the :ttag:`{% "
"load %}<load>` tag."
msgstr ""
"Η γλώσσα template του Django έρχεται με μια μεγάλη ποικιλία από :doc:"
"`προεγκατεστημένα tags και φίλτρα </ref/templates/builtins>` που έχουν "
"σχεδιαστεί για να αντιμετωπίσουν τις ανάγκες της παρουσίασης της εφαρμογής "
"σας. Παρόλ' αυτά, ίσως χρειαστείτε κάποια λειτουργία η οποία δεν υπάρχει στο "
"βασικό πακέτο των template tags και φίλτρων. Μπορείτε να επεκτείνετε την "
"template μηχανή του Django ορίζοντας δικά σας tags και φίλτρα "
"χρησιμοποιώντας, τι άλλο, Python. Αφού τα δημιουργήσετε μπορείτε να τα "
"χρησιμοποιήσετε στα templates σας αφού πρώτα τα φορτώσετε με το tag :ttag:"
"`{% load %}<load>`."

msgid "Code layout"
msgstr "Διάταξη κώδικα"

msgid ""
"The most common place to specify custom template tags and filters is inside "
"a Django app. If they relate to an existing app, it makes sense to bundle "
"them there; otherwise, they can be added to a new app. When a Django app is "
"added to :setting:`INSTALLED_APPS`, any tags it defines in the conventional "
"location described below are automatically made available to load within "
"templates."
msgstr ""
"Το πιο κοινό μέρος για να προσδιορίσετε τα δικά σας template tags και φίλτρα "
"είναι μέσα στη Django εφαρμογή σας. Αν σχετίζονται, δε, και με την ήδη "
"υπάρχουσα εφαρμογή, τότε είναι πολύ λογικό να ζουν μέσα στο φάκελο της. Αν "
"όχι, τότε μπορούν να προστεθούν σε κάποια καινούργια εφαρμογή. Αν τα δικά "
"σας template tags και φίλτρα αφορούν γενικά το project ή κάποια άλλη "
"λειτουργία, μπορείτε να φτιάξετε μια νέα εφαρμογή πχ my_utils και να τα "
"αποθηκεύσετε εκεί. Όταν ένα Django app προστίθεται στη λίστα :setting:"
"`INSTALLED_APPS`, οποιοδήποτε tag που είναι ορισμένο στη συμβατική τοποθεσία "
"που περιγράφεται παρακάτω, αυτόματα γίνεται διαθέσιμο για να φορτωθεί μέσα "
"στα templates."

msgid ""
"The app should contain a ``templatetags`` directory, at the same level as "
"``models.py``, ``views.py``, etc. If this doesn't already exist, create it - "
"don't forget the ``__init__.py`` file to ensure the directory is treated as "
"a Python package."
msgstr ""
"Η εφαρμογή πρέπει να περιέχει ένα φάκελο ``templatetags``, στο ίδιο επίπεδο "
"με τα αρχεία ``models.py``, ``views.py``, κλπ. Αν ο φάκελος δεν υπάρχει ήδη, "
"δημιουργήστε τον – μη ξεχάσετε να προσθέσετε το αρχείο ``__init__.py`` για "
"να εξασφαλίσετε ότι ο φάκελος αυτός θα αντιμετωπιστεί ως ένα Python package."

msgid "Development server won't automatically restart"
msgstr "Ο development server δεν θα επανεκκινήσει αυτόματα"

msgid ""
"After adding the ``templatetags``  module, you will need to restart your "
"server before you can use the tags or filters in templates."
msgstr ""
"Αφού προσθέσετε το module ``templatetags``, θα χρειαστεί να επανεκκινήσετε "
"χειροκίνητα τον server πριν χρησιμοποιήσετε τα tags ή τα φίλτρα στα "
"templates."

msgid ""
"Your custom tags and filters will live in a module inside the "
"``templatetags`` directory. The name of the module file is the name you'll "
"use to load the tags later, so be careful to pick a name that won't clash "
"with custom tags and filters in another app."
msgstr ""
"Τα δικά σας tags και φίλτρα θα υπάρχουν σε ένα module (όποτε λέμε module "
"εννοούμε ένα φάκελο μαζί με το κενό αρχείο ``__init__.py`` μέσα του) μέσα "
"στο ``templatetags``. Το όνομα αυτού του module θα είναι αυτό που θα "
"χρησιμοποιείτε αργότερα, για να φορτώνετε τα tags/φίλτρα, οπότε να είστε "
"προσεκτικοί στην επιλογή του ονόματος ούτως ώστε να μην προκύψουν modules με "
"το ίδιο όνομα σε άλλη εφαρμογή."

msgid ""
"For example, if your custom tags/filters are in a file called ``poll_extras."
"py``, your app layout might look like this::"
msgstr ""
"Για παράδειγμα, αν τα δικά σας tags/φίλτρα βρίσκονται σε ένα αρχείο με το "
"όνομα ``poll_extras.py``, η δομή των αρχείων της εφαρμογής σας θα δείχνει "
"κάπως έτσι::"

msgid "And in your template you would use the following:"
msgstr ""
"Και μέσα στο template σας θα μπορείτε να κάνετε διαθέσιμα τα tags/φίλτρα "
"αυτού του αρχείου ως εξής:"

msgid ""
"The app that contains the custom tags must be in :setting:`INSTALLED_APPS` "
"in order for the :ttag:`{% load %}<load>` tag to work. This is a security "
"feature: It allows you to host Python code for many template libraries on a "
"single host machine without enabling access to all of them for every Django "
"installation."
msgstr ""
"Η εφαρμογή που περιέχει τα δικά σας tags πρέπει να βρίσκεται μέσα στα :"
"setting:`INSTALLED_APPS` προκειμένου το tag :ttag:`{% load %}<load>` να "
"δουλέψει. Αυτό γίνεται για λόγους ασφαλείας: σας επιτρέπει να έχετε Python "
"κώδικα από πολλές template βιβλιοθήκες σε μια μηχανή χωρίς να δοθεί πρόσβαση "
"σε όλες αυτές για κάθε εγκατάσταση του Django."

msgid ""
"There's no limit on how many modules you put in the ``templatetags`` "
"package. Just keep in mind that a :ttag:`{% load %}<load>` statement will "
"load tags/filters for the given Python module name, not the name of the app."
msgstr ""
"Δεν υπάρχει όριο στον αριθμό των modules που θα βάλετε μέσα στο "
"``templatetags``. Θυμηθείτε όμως ότι το tag :ttag:`{% load %}<load>` θα "
"φορτώσει τα tags/φίλτρα για το δοθέν όνομα του Python module που βρίσκεται "
"μέσα στο ``templatetags``, όχι το όνομα της εφαρμογής."

msgid ""
"To be a valid tag library, the module must contain a module-level variable "
"named ``register`` that is a ``template.Library`` instance, in which all the "
"tags and filters are registered. So, near the top of your module, put the "
"following::"
msgstr ""
"Για να είναι μια έγκυρη tag βιβλιοθήκη, το module πρέπει να περιέχει μια "
"μεταβλητή, επιπέδου module, με το όνομα ``register``, ήτοι ένα instance της "
"κλάσης ``template.Library``, με την οποία όλα τα tags και τα φίλτρα θα "
"γίνουν register. Επομένως, στην αρχή του module ``poll_extras.py``, "
"προσθέστε τα ακόλουθα::"

msgid ""
"Alternatively, template tag modules can be registered through the "
"``'libraries'`` argument to :class:`~django.template.backends.django."
"DjangoTemplates`. This is useful if you want to use a different label from "
"the template tag module name when loading template tags. It also enables you "
"to register tags without installing an application."
msgstr ""
"Εναλλακτικά, τα modules του template tag μπορούν να γίνουν register μέσω του "
"argument ``'libraries'`` της κλάσης :class:`~django.template.backends.django."
"DjangoTemplates`. Αυτό είναι χρήσιμο αν θέλετε να χρησιμοποιήσετε ένα "
"διαφορετικό label από το όνομα του module όταν φορτώνετε τα template tags. "
"Επίσης σας επιτρέπει να κάνετε register τα tags χωρίς την εγκατάσταση κάποια "
"εφαρμογής."

msgid "Behind the scenes"
msgstr "Πίσω από τις σκηνές"

msgid ""
"For a ton of examples, read the source code for Django's default filters and "
"tags. They're in ``django/template/defaultfilters.py`` and ``django/template/"
"defaulttags.py``, respectively."
msgstr ""
"Για πάρα πολλά παραδείγματα, διαβάστε τους πηγαίους κώδικες του Django "
"σχετικά με τα προεγκατεστημένα φίλτρα και tags. Βρίσκονται στο ``django/"
"template/defaultfilters.py`` και ``django/template/defaulttags.py``, "
"αντίστοιχα."

msgid "For more information on the :ttag:`load` tag, read its documentation."
msgstr ""
"Για περισσότερες πληροφορίες σχετικά με το tag :ttag:`load`, διαβάστε το "
"εγχειρίδιο του."

msgid "Writing custom template filters"
msgstr "Γράφοντας δικά σας template φίλτρα"

msgid ""
"Custom filters are just Python functions that take one or two arguments:"
msgstr ""
"Τα παραμετροποιήσιμα φίλτρα είναι απλώς Python συναρτήσεις οι οποίες "
"δέχονται ένα ή δύο arguments:"

msgid "The value of the variable (input) -- not necessarily a string."
msgstr "Την τιμή της μεταβλητής (input) -- όχι απαραίτητα τύπου string."

msgid ""
"The value of the argument -- this can have a default value, or be left out "
"altogether."
msgstr ""
"Την τιμή του argument (αν υπάρχει) -- αυτή μπορεί να είναι μια προεπιλεγμένη "
"τιμή ή να μην υπάρχει καθόλου."

msgid ""
"For example, in the filter ``{{ var|foo:\"bar\" }}``, the filter ``foo`` "
"would be passed the variable ``var`` and the argument ``\"bar\"``."
msgstr ""
"Για παράδειγμα, μέσα στη σύνταξη του φίλτρου ``{{ var|foo:\"bar\" }}``, το "
"φίλτρο ``foo`` θα λάβει μια μεταβλητή ``var`` (input) και ένα argument ``"
"\"bar\"``."

msgid ""
"Since the template language doesn't provide exception handling, any "
"exception raised from a template filter will be exposed as a server error. "
"Thus, filter functions should avoid raising exceptions if there is a "
"reasonable fallback value to return. In case of input that represents a "
"clear bug in a template, raising an exception may still be better than "
"silent failure which hides the bug."
msgstr ""
"Εφόσον η γλώσσα του template δεν παρέχει exception handling, κάθε exception "
"που θα γίνει raised από ένα template filter θα εμφανιστεί ως server error. "
"Επομένως, οι συναρτήσεις των φίλτρων θα πρέπει να αποφεύγουν να κάνουν raise "
"τυχόν exceptions αν υπάρχει κάποια λογική τιμή να επιστραφεί, ως fallback. "
"Σε περίπτωση κάποιου input λόγω του οποίου φαίνεται ξεκάθαρα κάποιο bug στο "
"template, το να κάνετε raise κάποιο exception είναι καλύτερο από το να το "
"αφήσετε απαρατήρητο κάτι το οποίο θα κρύψει το bug."

msgid "Here's an example filter definition::"
msgstr "Παρακάτω φαίνεται ένα παράδειγμα ορισμού ενός φίλτρου::"

msgid "And here's an example of how that filter would be used:"
msgstr ""
"Και εδώ φαίνεται ένα παράδειγμα του πως θα χρησιμοποιηθεί αυτό το φίλτρο στο "
"template:"

msgid ""
"Most filters don't take arguments. In this case, just leave the argument out "
"of your function. Example::"
msgstr ""
"Τα περισσότερα φίλτρα δεν παίρνουν arguments. Σε αυτή την περίπτωση, απλώς "
"αφήστε το εκτός από την συνάρτηση σας. Παράδειγμα::"

msgid "Registering custom filters"
msgstr "Κάνοντας register τα δικά σας φίλτρα"

msgid ""
"Once you've written your filter definition, you need to register it with "
"your ``Library`` instance, to make it available to Django's template "
"language::"
msgstr ""
"Όταν γράψετε τον ορισμό του φίλτρου σας, θα χρειαστεί να το κάνετε register "
"με το instance της κλάσης ``Library``, για να το κάνετε διαθέσιμο στη γλώσσα "
"template του Django::"

msgid "The ``Library.filter()`` method takes two arguments:"
msgstr "Η μέθοδος ``Library.filter()`` παίρνει δύο ορίσματα:"

msgid "The name of the filter -- a string."
msgstr "Το όνομα του φίλτρου -- τύπου string."

msgid ""
"The compilation function -- a Python function (not the name of the function "
"as a string)."
msgstr ""
"Τη συνάρτηση του φίλτρου -- μια Python συνάρτηση (όχι το όνομα της "
"συνάρτησης ως string)."

msgid "You can use ``register.filter()`` as a decorator instead::"
msgstr ""
"Μπορείτε, αντ' αυτού, να χρησιμοποιήσετε τη μέθοδο ``register.filter()`` ως "
"decorator::"

msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the filter name."
msgstr ""
"Αν δεν περάσετε το όρισμα ``name``, όπως στο δεύτερο παράδειγμα παραπάνω, το "
"Django θα χρησιμοποιήσει το όνομα της συνάρτησης ως το όνομα του φίλτρου."

msgid ""
"Finally, ``register.filter()`` also accepts three keyword arguments, "
"``is_safe``, ``needs_autoescape``, and ``expects_localtime``. These "
"arguments are described in :ref:`filters and auto-escaping <filters-auto-"
"escaping>` and :ref:`filters and time zones <filters-timezones>` below."
msgstr ""
"Εν τέλει, η μέθοδος ``register.filter()`` δέχεται τρία keyword arguments, το "
"``is_safe``, το ``needs_autoescape`` και το ``expects_localtime``. Αυτά τα "
"arguments περιγράφονται στα :ref:`φίλτρα και auto-escaping <filters-auto-"
"escaping>` και στα :ref:`φίλτρα και ζώνες ώρας <filters-timezones>` παρακάτω."

msgid "Template filters that expect strings"
msgstr "Template φίλτρα που περιμένουν strings"

msgid ""
"If you're writing a template filter that only expects a string as the first "
"argument, you should use the decorator ``stringfilter``. This will convert "
"an object to its string value before being passed to your function::"
msgstr ""
"Αν γράφετε ένα template φίλτρο το οποίο περιμένει ένα argument τύπου string "
"ως πρώτο argument, θα πρέπει να χρησιμοποιήσετε τον decorator "
"``stringfilter``. Αυτό θα μετατρέψει το object στην string τιμή του πριν "
"περαστεί στη συνάρτηση σας::"

msgid ""
"This way, you'll be able to pass, say, an integer to this filter, and it "
"won't cause an ``AttributeError`` (because integers don't have ``lower()`` "
"methods)."
msgstr ""
"Με αυτό τον τρόπο, θα μπορείτε να περνάτε, ας πούμε, έναν integer σε αυτό το "
"φίλτρο και αυτό δεν θα προκαλέσει κάποιο ``AttributeError`` (επειδή οι "
"integers δεν έχουν την μέθοδο ``lower()``)."

msgid "Filters and auto-escaping"
msgstr "Φίλτρα και auto-escaping"

msgid ""
"When writing a custom filter, give some thought to how the filter will "
"interact with Django's auto-escaping behavior. Note that three types of "
"strings can be passed around inside the template code:"
msgstr ""
"Όταν γράφετε ένα δικό σας φίλτρο, σκεφτείτε λιγάκι το πως θα αλληλεπιδρά με "
"την auto-escaping συμπεριφορά του Django. Όταν λέμε auto-escaping εννοούμε "
"τη δυνατότητα αυτόματης αποφυγής εμφάνισης συγκεκριμένων χαρακτήρων-λέξεων "
"οι οποίοι αν εμφανιζόντουσαν θα προκαλούσαν, ενδεχομένως, πρόβλημα στο "
"rendering της σελίδας. Σημειώστε ότι υπάρχουν τρεις τύποι strings οι οποίοι "
"μπορούν να περαστούν μέσα σε κώδικα template:"

msgid ""
"**Raw strings** are the native Python ``str`` or ``unicode`` types. On "
"output, they're escaped if auto-escaping is in effect and presented "
"unchanged, otherwise."
msgstr ""
"**Σκέτα strings**: είναι τα παραδοσιακά Python strings, τύπου ``str`` ή "
"``unicode``. Στην έξοδο, αυτά τα string γίνονται escaped αν το auto-escaping "
"είναι ενεργοποιημένο, ειδάλλως παρουσιάζονται όπως είναι."

msgid ""
"**Safe strings** are strings that have been marked safe from further "
"escaping at output time. Any necessary escaping has already been done. "
"They're commonly used for output that contains raw HTML that is intended to "
"be interpreted as-is on the client side."
msgstr ""
"**Ασφαλή strings**: είναι τα strings τα οποία έχουν μαρκαριστεί ως ασφαλή "
"από περαιτέρω escaping κατά την παρουσίαση τους. Όλα τα απαραίτητα escapings "
"έχουν γίνει μέχρι εδώ. Χρησιμοποιούνται συνήθως για έξοδο η οποία περιέχει "
"σκέτη HTML και προορίζεται να μεταφραστεί ως έχει από τη μεριά του client."

msgid ""
"Internally, these strings are of type ``SafeBytes`` or ``SafeText``. They "
"share a common base class of ``SafeData``, so you can test for them using "
"code like::"
msgstr ""
"Εσωτερικώς, αυτά τα strings είναι τύπου ``SafeBytes`` ή ``SafeText``. "
"Μοιράζονται μια κοινή κλάση της ``SafeData``, με αποτέλεσμα να μπορείτε να "
"κάνετε τεστ σε αυτά με κώδικα όπως::"

msgid "Template filter code falls into one of two situations:"
msgstr ""
"Ο κώδικας ενός template φίλτρου εμπίπτει σε μια από τις δύο ακόλουθες "
"καταστάσεις:"

msgid ""
"Your filter does not introduce any HTML-unsafe characters (``<``, ``>``, "
"``'``, ``\"`` or ``&``) into the result that were not already present. In "
"this case, you can let Django take care of all the auto-escaping handling "
"for you. All you need to do is set the ``is_safe`` flag to ``True`` when you "
"register your filter function, like so::"
msgstr ""
"Το φίλτρο σας δεν εισάγει τυχόν μη ασφαλείς HTML χαρακτήρες (``<``, ``>``,\n"
"   ``'``, ``\"`` ή ``&``) στο αποτέλεσμα, οι οποίοι δεν ήταν προηγουμένως "
"παρόντες. Σε αυτή την περίπτωση, μπορείτε να αφήσετε το Django να "
"τακτοποιήσει το auto-escaping για εσάς. Το μόνο που έχετε να κάνετε είναι να "
"θέσετε το flag ``is_safe`` σε ``True`` όταν κάνετε register τη συνάρτηση του "
"φίλτρου σας, ως εξής::"

msgid ""
"This flag tells Django that if a \"safe\" string is passed into your filter, "
"the result will still be \"safe\" and if a non-safe string is passed in, "
"Django will automatically escape it, if necessary."
msgstr ""
"Αυτό το flag λέει στο Django ότι αν ένα \"ασφαλές\" string περαστεί στο "
"φίλτρο σας, το αποτέλεσμα θα εξακολουθήσει να είναι \"ασφαλές\" ακόμη και αν "
"ένα μη-ασφαλές string περαστεί, το Django, αυτόματα θα το κάνει escape, εάν "
"χρειαστεί."

msgid ""
"You can think of this as meaning \"this filter is safe -- it doesn't "
"introduce any possibility of unsafe HTML.\""
msgstr ""
"Μπορείτε να το σκεφτείτε αλλιώς: \"αυτό το φίλτρο είναι ασφαλές -- δεν "
"υπάρχει πιθανότητα τυχόν μη ασφαλούς HTML\"."

msgid ""
"The reason ``is_safe`` is necessary is because there are plenty of normal "
"string operations that will turn a ``SafeData`` object back into a normal "
"``str`` or ``unicode`` object and, rather than try to catch them all, which "
"would be very difficult, Django repairs the damage after the filter has "
"completed."
msgstr ""
"Ο λόγος που το flag ``is_safe`` είναι απαραίτητο είναι επειδή υπάρχουν "
"πολλών ειδών λειτουργίες για τα strings οι οποίες θα μετατρέψουν ένα object "
"τύπου ``SafeData`` πίσω σε ένα κανονικό object τύπου ``str`` ή ``unicode`` "
"(παρά να προσπαθήσουν να πιάσουν όλα τα strings κάτι το οποίο είναι δύσκολο) "
"και το Django θα επιδιορθώσει τυχόν ζημιά αφού το φίλτρο έχει ολοκληρώσει "
"τις εργασίες του."

msgid ""
"For example, suppose you have a filter that adds the string ``xx`` to the "
"end of any input. Since this introduces no dangerous HTML characters to the "
"result (aside from any that were already present), you should mark your "
"filter with ``is_safe``::"
msgstr ""
"Για παράδειγμα, ας υποθέσουμε ότι έχετε ένα φίλτρο το οποίο προσθέτει το "
"string ``xx`` στο τέλος κάθε input. Επειδή αυτό δεν εισάγει επικινδύνους "
"HTML χαρακτήρες στο αποτέλεσμα (εκτός αυτού που είναι ήδη παρόν), θα πρέπει "
"να μαρκάρετε το φίλτρο σας με το ``is_safe``::"

msgid ""
"When this filter is used in a template where auto-escaping is enabled, "
"Django will escape the output whenever the input is not already marked as "
"\"safe\"."
msgstr ""
"Όταν αυτό το φίλτρο χρησιμοποιείται σε ένα template όπου το auto-escaping "
"είναι ενεργοποιημένο, το Django θα κάνει escape την έξοδο οποτεδήποτε το "
"input δεν είναι μαρκαρισμένο ως \"ασφαλές\"."

msgid ""
"By default, ``is_safe`` is ``False``, and you can omit it from any filters "
"where it isn't required."
msgstr ""
"Από προεπιλογή, το flag ``is_safe`` είναι ``False`` και μπορείτε να το "
"παραλείψετε από τα φίλτρα όπου δεν χρειάζεται."

msgid ""
"Be careful when deciding if your filter really does leave safe strings as "
"safe. If you're *removing* characters, you might inadvertently leave "
"unbalanced HTML tags or entities in the result. For example, removing a "
"``>`` from the input might turn ``<a>`` into ``<a``, which would need to be "
"escaped on output to avoid causing problems. Similarly, removing a semicolon "
"(``;``) can turn ``&amp;`` into ``&amp``, which is no longer a valid entity "
"and thus needs further escaping. Most cases won't be nearly this tricky, but "
"keep an eye out for any problems like that when reviewing your code."
msgstr ""
"Να είστε προσεκτικοί όταν αποφασίζετε αν το φίλτρο σας αφήνει όντως τα safe "
"strings ως safe. Εάν *αφαιρείτε* χαρακτήρες, μπορεί ακούσια να αφήσετε μη-"
"ισορροπημένα HTML tags (χωρίς το start ή το end tag) ή οντότητες στο "
"αποτέλεσμα. Για παράδειγμα, όταν αφαιρείτε ένα ``>`` από το input μπορεί να "
"μετατρέψει ένα ``<a>`` σε ``<a``, το οποίο θα χρειαστεί να γίνει escaped "
"στην έξοδο για την αποφυγή τυχόν προβλημάτων. Ομοίως, η αφαίρεση του ``;`` "
"μπορεί να μετατρέψει το ``&amp;`` σε ``&amp``, η οποία δεν είναι πλέον μια "
"έγκυρη οντότητα και επομένως χρειάζεται περαιτέρω escaping. Οι περισσότερες "
"περιπτώσεις δεν θα είναι τόσο πολύπλοκες αλλά προσέχετε για τέτοιου είδους "
"προβλήματα όταν επανεξετάζετε τον κώδικα σας."

msgid ""
"Marking a filter ``is_safe`` will coerce the filter's return value to a "
"string.  If your filter should return a boolean or other non-string value, "
"marking it ``is_safe`` will probably have unintended consequences (such as "
"converting a boolean False to the string 'False')."
msgstr ""
"Μαρκάροντας ένα φίλτρο ως ``is_safe`` θα αναγκάσει την επιστρεφόμενη τιμή "
"του φίλτρου να γίνει ένα string.  Αν το φίλτρο σας θα πρέπει να επιστρέψει "
"μια τιμή τύπου boolean ή κάποια άλλη πέρα από string, μαρκάροντας το ως "
"``is_safe`` θα έχει πιθανόν ακούσιες συνέπειες (όπως τη μετατροπή της τιμής "
"False τύπου boolean στο string 'False')."

msgid ""
"Alternatively, your filter code can manually take care of any necessary "
"escaping. This is necessary when you're introducing new HTML markup into the "
"result. You want to mark the output as safe from further escaping so that "
"your HTML markup isn't escaped further, so you'll need to handle the input "
"yourself."
msgstr ""
"Εναλλακτικά, ο κώδικας του φίλτρου σας μπορεί να χειριστεί χειροκίνητα, "
"τυχόν αναγκαίο escaping. Αυτό είναι απαραίτητο όταν εισάγετε καινούργιο HTML "
"κώδικα στο αποτέλεσμα σας. Θα θέλετε να μαρκάρετε την έξοδο ως ασφαλή από "
"περαιτέρω escaping ούτως ώστε ο HTML κώδικας να μην γίνει περαιτέρω escape, "
"οπότε θα χρειαστεί εσείς να χειριστείτε το input."

msgid ""
"To mark the output as a safe string, use :func:`django.utils.safestring."
"mark_safe`."
msgstr ""
"Για να μαρκάρετε την έξοδο ως ασφαλή string, χρησιμοποιήστε τη συνάρτηση :"
"func:`django.utils.safestring.mark_safe`."

msgid ""
"Be careful, though. You need to do more than just mark the output as safe. "
"You need to ensure it really *is* safe, and what you do depends on whether "
"auto-escaping is in effect. The idea is to write filters that can operate in "
"templates where auto-escaping is either on or off in order to make things "
"easier for your template authors."
msgstr ""
"Προσέχετε όμως. Θα χρειαστεί να κάνετε παραπάνω πράγματα από το να μαρκάρετε "
"μόνο την έξοδο ως ασφαλή. Θα χρειαστεί να εξασφαλίσετε ότι είναι *όντως* "
"ασφαλή και ότι κάνετε εξαρτάται από το αν το auto-escaping είναι "
"ενεργοποιημένο ή όχι. Η ιδέα είναι να γράφετε φίλτρα τα οποία μπορούν να "
"δρουν σε templates όπου το auto-escaping είναι είτε ενεργοποιημένο ή όχι, "
"προκειμένου να κάνετε ευκολότερη τη δουλειά για τους συντάκτες των templates."

msgid ""
"In order for your filter to know the current auto-escaping state, set the "
"``needs_autoescape`` flag to ``True`` when you register your filter "
"function. (If you don't specify this flag, it defaults to ``False``). This "
"flag tells Django that your filter function wants to be passed an extra "
"keyword argument, called ``autoescape``, that is ``True`` if auto-escaping "
"is in effect and ``False`` otherwise. It is recommended to set the default "
"of the ``autoescape`` parameter to ``True``, so that if you call the "
"function from Python code it will have escaping enabled by default."
msgstr ""
"Για να ξέρει το φίλτρο σας την κατάσταση του auto-escaping, θέστε το flag "
"``needs_autoescape`` σε ``True`` όταν κάνετε register το φίλτρο σας. (Αν δεν "
"θέσετε αυτό το flag, η προεπιλεγμένη του τιμή είναι ``False``). Αυτό το flag "
"λέει στο Django ότι η συνάρτηση του φίλτρου σας δέχεται ένα επιπλέον keyword "
"argument, με το όνομα ``autoescape``, δηλαδή ``True`` αν το auto-escaping "
"είναι ενεργοποιημένο και ``False`` αν όχι. Προτείνεται να θέσετε την "
"προεπιπλεγμένη τιμή της παραμέτρου ``autoescape`` σε ``True``, ούτως ώστε αν "
"καλέσετε τη συνάρτηση του φίλτρου σας από τον Python κώδικα σας, το φίλτρο "
"σας θα έχει το escaping ενεργοποιημένο από προεπιλογή."

msgid ""
"For example, let's write a filter that emphasizes the first character of a "
"string::"
msgstr ""
"Για παράδειγμα, ας γράψουμε ένα φίλτρο το οποίο δίνει έμφαση στον πρώτο "
"χαρακτήρα ενός string::"

msgid ""
"The ``needs_autoescape`` flag and the ``autoescape`` keyword argument mean "
"that our function will know whether automatic escaping is in effect when the "
"filter is called. We use ``autoescape`` to decide whether the input data "
"needs to be passed through ``django.utils.html.conditional_escape`` or not. "
"(In the latter case, we just use the identity function as the \"escape\" "
"function.) The ``conditional_escape()`` function is like ``escape()`` except "
"it only escapes input that is **not** a ``SafeData`` instance. If a "
"``SafeData`` instance is passed to ``conditional_escape()``, the data is "
"returned unchanged."
msgstr ""
"Tο flag ``needs_autoescape`` και το keyword argument ``autoescape`` "
"σημαίνουν ότι η συνάρτηση μας θα ξέρει αν το automatic escaping είναι "
"ενεργοποιημένο ή όχι όταν το φίλτρο μας τρέξει. Χρησιμοποιούμε το "
"``autoescape`` για να αποφασίσουμε αν τα input data (το string που πέρασε "
"στο φίλτρο μέσα από την HTML) θα χρειαστεί να περάσουν μέσα από την μέθοδο "
"``django.utils.html.conditional_escape`` ή όχι. (Στην τελευταία περίπτωση "
"χρησιμοποιούμε μια lambda συνάρτηση ως την \"escape\" συνάρτηση.) Η "
"συνάρτηση ``conditional_escape()`` είναι σαν την ``escape()`` αλλά κάνει "
"escape το input το οποίο **δεν είναι** instance της κλάσης ``SafeData``. Αν "
"ένα instance μιας κλάσης ``SafeData`` περαστεί στη συνάρτηση "
"``conditional_escape()``, τα δεδομένα θα επιστραφούν ανέπαφα."

msgid ""
"Finally, in the above example, we remember to mark the result as safe so "
"that our HTML is inserted directly into the template without further "
"escaping."
msgstr ""
"Στο παραπάνω παράδειγμα, θυμόμαστε να μαρκάρουμε το αποτέλεσμα ως ασφαλή "
"ούτως ώστε η HTML που θα εισαχθεί απ' ευθείας μέσα στο template να μην "
"υποστεί περαιτέρω escaping."

msgid ""
"There's no need to worry about the ``is_safe`` flag in this case (although "
"including it wouldn't hurt anything). Whenever you manually handle the auto-"
"escaping issues and return a safe string, the ``is_safe`` flag won't change "
"anything either way."
msgstr ""
"Δεν υπάρχει λόγος να ανησυχούμε για το flag ``is_safe`` σε αυτή την "
"περίπτωση (παρόλου που το περιλαμβάνουμε δεν βλάπτει κανέναν). Οποτεδήποτε "
"χειρίζεστε χειροκίνητα τα θέματα του auto-escaping και επιστρέφετε ένα "
"ασφαλή string, το flag ``is_safe`` δεν θα αλλάξει τίποτα με τον ένα ή τον "
"άλλο τρόπο."

msgid "Avoiding XSS vulnerabilities when reusing built-in filters"
msgstr ""
"Αποφεύγοντας τα τρωτά σημεία του XSS όταν επαναχρησιμοποιείτε τα "
"προεγκατεστημένα φίλτρα του Django"

msgid ""
"Django's built-in filters have ``autoescape=True`` by default in order to "
"get the proper autoescaping behavior and avoid a cross-site script "
"vulnerability."
msgstr ""
"Τα προεγκατεστημένα φίλτρα του Django έχουν το ``autoescape=True`` από "
"προεπιλογή, προκειμένου να έχουν την κατάλληλη autoescaping συμπεριφορά και "
"για να αποφύγουν το τρωτό σημείο ενός cross-site script."

msgid ""
"In older versions of Django, be careful when reusing Django's built-in "
"filters as ``autoescape`` defaults to ``None``. You'll need to pass "
"``autoescape=True`` to get autoescaping."
msgstr ""
"Σε παλαιότερες εκδόσεις του Django, να είστε προσεκτικοί όταν χρησιμοποιείτε "
"τα προεγκατεστημένα φίλτρα του Django επειδή η προεπιλεγμένη τιμή του "
"keyword argument ``autoescape`` είναι ``None``. Θα χρειαστεί να το δηλώσετε "
"ως ``autoescape=True`` για να έχετε autoescaping."

msgid ""
"For example, if you wanted to write a custom filter called "
"``urlize_and_linebreaks`` that combined the :tfilter:`urlize` and :tfilter:"
"`linebreaksbr` filters, the filter would look like::"
msgstr ""
"Για παράδειγμα, αν θέλετε να γράψετε ένα δικό σας φίλτρο με το όνομα "
"``urlize_and_linebreaks`` το οποίο συνδυάζει το φίλτρο :tfilter:`urlize` με :"
"tfilter:`linebreaksbr`, τότε το φίλτρο σας θα έδειχνε κάπως έτσι::"

msgid "Then:"
msgstr "Μετά το:"

msgid "would be equivalent to:"
msgstr "θα ήταν ισοδύναμο με αυτό:"

msgid "Filters and time zones"
msgstr "Φίλτρα και ζώνες ώρας"

msgid ""
"If you write a custom filter that operates on :class:`~datetime.datetime` "
"objects, you'll usually register it with the ``expects_localtime`` flag set "
"to ``True``::"
msgstr ""
"Αν γράφετε δικά σας φίλτρα τα οποία δρουν σε objects του τύπου :class:"
"`~datetime.datetime`, συνήθως θα το κάνετε register με το flag "
"``expects_localtime`` ως ``True``::"

msgid ""
"When this flag is set, if the first argument to your filter is a time zone "
"aware datetime, Django will convert it to the current time zone before "
"passing it to your filter when appropriate, according to :ref:`rules for "
"time zones conversions in templates <time-zones-in-templates>`."
msgstr ""
"Όταν αυτό το flag είναι ``True``, αν η πρώτη παράμετρος του φίλτρου σας "
"είναι ένα datetime με επίγνωση της ζώνης ώρας (time zone aware datetime), το "
"Django θα το μετατρέψει στην τρέχουσα ζώνη ώρας, κατά περίπτωση, πριν το "
"περάσει στο φίλτρο σας, σύμφωνα με τους :ref:`κανόνες μετατροπής ζωνών ώρας "
"στα templates <time-zones-in-templates>`."

msgid "Writing custom template tags"
msgstr "Γράφοντας δικάς σας template tags"

msgid ""
"Tags are more complex than filters, because tags can do anything. Django "
"provides a number of shortcuts that make writing most types of tags easier. "
"First we'll explore those shortcuts, then explain how to write a tag from "
"scratch for those cases when the shortcuts aren't powerful enough."
msgstr ""
"Τα tags είναι περισσότερο πολύπλοκα από τα φίλτρα, επειδή τα tags μπορούν να "
"κάνουν τα πάντα. Το Django παρέχει έναν αριθμό από συντομεύσεις που κάνει τη "
"συγγραφή των περισσότερων τύπων tags ευκολότερη. Πρώτα θα εξερευνήσουμε "
"αυτές τις συντομεύσεις και ύστερα θα εξηγήσουμε πως να γράψετε ένα tag από "
"την αρχή για τις περιπτώσεις που κάποια συντόμευση δεν σας καλύπτει."

msgid "Simple tags"
msgstr "Απλά tags"

msgid ""
"Many template tags take a number of arguments -- strings or template "
"variables -- and return a result after doing some processing based solely on "
"the input arguments and some external information. For example, a "
"``current_time`` tag might accept a format string and return the time as a "
"string formatted accordingly."
msgstr ""
"Πολλά template tags παίρνουν έναν αριθμό από παραμέτρους -- strings ή "
"μεταβλητές template -- και επιστρέφουν ένα αποτέλεσμα αφού κάνουν κάποια "
"επεξεργασία βασιζόμενα στις παραμέτρους και σε τυχόν εξωτερικές πληροφορίες. "
"Για παράδειγμα, ένα tag με το όνομα ``current_time`` μπορεί να δεχτεί ένα "
"string μορφοποίησης και να επιστρέψει την ώρα ως string, μορφοποιημένη "
"σύμφωνα με αυτό που περάστηκε."

msgid ""
"To ease the creation of these types of tags, Django provides a helper "
"function, ``simple_tag``. This function, which is a method of ``django."
"template.Library``, takes a function that accepts any number of arguments, "
"wraps it in a ``render`` function and the other necessary bits mentioned "
"above and registers it with the template system."
msgstr ""
"Για να διευκολύνουμε τη δημιουργία αυτού του τύπου των tags, το Django "
"παρέχει μια βοηθητική συνάρτηση, τη ``simple_tag``. Αυτή η συνάρτηση, η "
"οποία είναι μέθοδος της κλάσης ``django.template.Library``, δέχεται μια "
"συνάρτηση η οποία δέχεται παραμέτρους ανεξαρτήτως αριθμού, την κάνει wrap σε "
"μια render συνάρτηση και άλλων απαραίτητων στοιχείων που αναφέρθηκαν "
"παραπάνω και την κάνει register με το σύστημα του template."

msgid "Our ``current_time`` function could thus be written like this::"
msgstr ""
"Η συνάρτηση μας ``current_time`` θα μπορούσε, επομένως, να γραφτεί κάπως "
"έτσι::"

msgid "A few things to note about the ``simple_tag`` helper function:"
msgstr ""
"Μερικά πράγματα που πρέπει να σημειώσετε για την βοηθητική συνάρτηση "
"``simple_tag``:"

msgid ""
"Checking for the required number of arguments, etc., has already been done "
"by the time our function is called, so we don't need to do that."
msgstr ""
"Ο έλεγχος του αριθμού των απαιτούμενων παραμέτρων κλπ, έχει ήδη γίνει τη "
"στιγμή που η συνάρτηση μας καλείται, οπότε δεν θα χρειαστεί να γίνει κάτι "
"τέτοιο."

msgid ""
"The quotes around the argument (if any) have already been stripped away, so "
"we just receive a plain string."
msgstr ""
"Τα εισαγωγικά (``””`` ή ``''``) γύρω από την παράμετρο (αν υπάρχουν) έχουν "
"ήδη αποκοπεί, οπότε έχουμε να κάνουμε με ένα απλό string μέσα στη συνάρτηση "
"του template tag."

msgid ""
"If the argument was a template variable, our function is passed the current "
"value of the variable, not the variable itself."
msgstr ""
"Αν η παράμετρος ήταν μια μεταβλητή template, τότε η συνάρτηση μας θα "
"περνούσε την τιμή της μεταβλητής και όχι την ίδια τη μεταβλητή."

msgid ""
"Unlike other tag utilities, ``simple_tag`` passes its output through :func:"
"`~django.utils.html.conditional_escape` if the template context is in "
"autoescape mode, to ensure correct HTML and protect you from XSS "
"vulnerabilities."
msgstr ""
"Σε αντίθεση με λειτουργίες άλλων tags, το ``simple_tag`` περνάει την έξοδο "
"του μέσα από τη συνάρτηση :func:`~django.utils.html.conditional_escape` αν "
"το template context είναι σε λειτουργία autoescape, για να εξασφαλίσει σωστή "
"HTML και για να σας προστατέψει από τρωτά σημεία του XSS."

msgid ""
"If additional escaping is not desired, you will need to use :func:`~django."
"utils.safestring.mark_safe` if you are absolutely sure that your code does "
"not contain XSS vulnerabilities. For building small HTML snippets, use of :"
"func:`~django.utils.html.format_html` instead of ``mark_safe()`` is strongly "
"recommended."
msgstr ""
"Αν δεν επιθυμείτε κάποιο πρόσθετο escaping, θα χρειαστεί να χρησιμοποιήσετε "
"τη συνάρτηση :func:`~django.utils.safestring.mark_safe` αν είστε απόλυτα "
"σίγουροι ότι ο κώδικας σας δεν είναι ευάλωτος σε XSS επιθέσεις. Για το "
"χτίσιμο μικρών HTML αποσπασμάτων, η χρήση της συνάρτησης :func:`~django."
"utils.html.format_html` προτείνεται έναντι της ``mark_safe()``."

msgid ""
"Auto-escaping for ``simple_tag`` as described in the previous two paragraphs "
"was added."
msgstr ""
"Προστέθηκε η λειτουργία του auto-escaping για το ``simple_tag``, όπως "
"περιγράφηκε στις προηγούμενες δύο παραγράφους."

msgid ""
"If your template tag needs to access the current context, you can use the "
"``takes_context`` argument when registering your tag::"
msgstr ""
"Αν το template tag χρειάζεται να έχει πρόσβαση στο τρέχων template context, "
"μπορείτε να χρησιμοποιήσετε την παράμετρο ``takes_context`` όταν κάνετε "
"register το tag σας::"

msgid "Note that the first argument *must* be called ``context``."
msgstr "Σημειώστε ότι η πρώτη παράμετρος *πρέπει* να ονομαστεί ``context``."

msgid ""
"For more information on how the ``takes_context`` option works, see the "
"section on :ref:`inclusion tags<howto-custom-template-tags-inclusion-tags>`."
msgstr ""
"Για περισσότερες πληροφορίες σχετικά με τη λειτουργία της παραμέτρου "
"``takes_context``, δείτε στην ενότητα :ref:`inclusion tags<howto-custom-"
"template-tags-inclusion-tags>`."

msgid "If you need to rename your tag, you can provide a custom name for it::"
msgstr ""
"Αν χρειαστεί να μετονομάσετε το tag σας, μπορείτε να του δώσετε ένα δικό σας "
"όνομα::"

msgid ""
"``simple_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr ""
"Οι συναρτήσεις ``simple_tag`` μπορούν να δεχτούν απεριόριστο αριθμό από "
"positional ή keyword arguments. Για παράδειγμα::"

msgid ""
"Then in the template any number of arguments, separated by spaces, may be "
"passed to the template tag. Like in Python, the values for keyword arguments "
"are set using the equal sign (\"``=``\") and must be provided after the "
"positional arguments. For example:"
msgstr ""
"Μετά, στο template, όλα τα arguments διαχωρισμένα με κενά (space character) "
"μπορούν να περαστούν στο template tag. Όπως και στην Python, οι τιμές των "
"keyword arguments ορίζονται με το σύμβολο της ισότητας (\"``=``\") και "
"πρέπει να δηλωθούν μετά τα positional arguments. Για παράδειγμα:"

msgid ""
"It's possible to store the tag results in a template variable rather than "
"directly outputting it. This is done by using the ``as`` argument followed "
"by the variable name. Doing so enables you to output the content yourself "
"where you see fit:"
msgstr ""
"Είναι πιθανόν να αποθηκεύσετε το αποτέλεσμα ενός tag σε μια template "
"μεταβλητή παρά να την εμφανίζετε απ' ευθείας στο template σας. Αυτό γίνεται "
"χρησιμοποιώντας το argument ``as`` ακολουθούμενο από το όνομα της template "
"μεταβλητής όπου και θα αποθηκευτεί. Με αυτό τον τρόπο μπορείτε να εκτυπώσετε "
"την τιμή αυτή οπουδήποτε αλλού στο template σας ή και με κάποια επιπλέον "
"επεξεργασία (είτε σε αλλο tag ή φίλτρο):"

msgid "Inclusion tags"
msgstr "Inclusion tags"

msgid ""
"Another common type of template tag is the type that displays some data by "
"rendering *another* template. For example, Django's admin interface uses "
"custom template tags to display the buttons along the bottom of the \"add/"
"change\" form pages. Those buttons always look the same, but the link "
"targets change depending on the object being edited -- so they're a perfect "
"case for using a small template that is filled with details from the current "
"object. (In the admin's case, this is the ``submit_row`` tag.)"
msgstr ""
"Ένας άλλο κοινός τύπος ενός template tag είναι ο τύπος που εμφανίζει κάποια "
"δεδομένα κάνοντας rendering *ένα άλλο* template. Για παράδειγμα, το admin "
"interface του Django χρησιμοποιεί δικά του template tags για να εμφανίζει τα "
"κουμπιά στο κάτω μέρος της σελίδας της φόρμας που προσθέτετε ή αλλάζετε "
"κάποιο object. Αυτά τα κουμπιά δείχουν παντού το ίδιο, αλλά το target του "
"link αλάζει ανάλογα το object που επεξεργάζεται εκείνη τη στιγμή -- "
"αποτελούν λοιπόν μια τέλεια περίπτωση για τη χρήση μικρών template το οποίο "
"είναι γεμάτο λεπτομέρειες από το τρέχων object. (Στην περίπτωση του admin, "
"το tag ονομάζεται ``submit_row``.)"

msgid "These sorts of tags are called \"inclusion tags\"."
msgstr "Αυτού του είδους τα tags ονομάζονται \"inclusion tags\"."

msgid ""
"Writing inclusion tags is probably best demonstrated by example. Let's write "
"a tag that outputs a list of choices for a given ``Poll`` object, such as "
"was created in the :ref:`tutorials <creating-models>`. We'll use the tag "
"like this:"
msgstr ""
"Η συγγραφή των inclusion tags φαίνεται καλύτερα μέσα από ένα παράδειγμα. Ας "
"γράψουμε ένα tag το οποίο εξάγει μια λίστα από επιλογές για ένα δοθέν "
"``Poll`` object, το οποίο δημιουργήθηκε μέσα από το :ref:`δεύτερο μέρος του "
"οδηγού μας <creating-models>`. Θα χρησιμοποιήσουμε το tag ως εξής:"

msgid "...and the output will be something like this:"
msgstr "...και η έξοδος του θα μοιάζει κάπως έτσι:"

msgid ""
"First, define the function that takes the argument and produces a dictionary "
"of data for the result. The important point here is we only need to return a "
"dictionary, not anything more complex. This will be used as a template "
"context for the template fragment. Example::"
msgstr ""
"Πρώτα, πρέπει να ορίσετε τη συνάρτηση η οποία παίρνει το argument και "
"επιστρέφει ένα dictionary από δεδομένα. Το σημαντικό εδώ είναι ότι το μόνο "
"που χρειάζεται να επιστρέψουμε είναι ένα dictionary, όχι κάτι περίπλοκο. "
"Αυτό θα χρησιμοποιηθεί ως template context για το κομμάτι του template. "
"Παράδειγμα::"

msgid ""
"Next, create the template used to render the tag's output. This template is "
"a fixed feature of the tag: the tag writer specifies it, not the template "
"designer. Following our example, the template is very simple:"
msgstr ""
"Επόμενο βήμα είναι να δημιουργήσετε το template το οποίο θα κάνει render την "
"έξοδο του tag. Αυτό το template είναι ένα μόνιμο χαρακτηριστικό του tag: το "
"προσδιορίζει ο συντάκτης του tag και όχι ο σχεδιαστής του template. Εν "
"ακολουθία του παραδείγματος μας, το template είναι πολύ απλό:"

msgid ""
"Now, create and register the inclusion tag by calling the "
"``inclusion_tag()`` method on a ``Library`` object. Following our example, "
"if the above template is in a file called ``results.html`` in a directory "
"that's searched by the template loader, we'd register the tag like this::"
msgstr ""
"Τώρα, δημιουργήστε και κάντε register το inclusion tag καλώντας τη μέθοδο "
"``inclusion_tag()`` σε ένα object της κλάσης ``Library``. Ακολουθώντας το "
"παράδειγμα μας, αν το παραπάνω template βρίσκεται σε ένα αρχείο με το όνομα "
"``results.html`` σε κάποιο φάκελο που είναι ανιχνεύσιμος από τον template "
"loader, θα κάναμε register το tag κάπως έτσι::"

msgid ""
"Alternatively it is possible to register the inclusion tag using a :class:"
"`django.template.Template` instance::"
msgstr ""
"Εναλλακτικά μπορείτε να κάνετε register το inclusion tag χρησιμοποιώντας ένα "
"instance της κλάσης :class:`django.template."

msgid "...when first creating the function."
msgstr "...όταν πρωτο-δημιουργείτε τη συνάρτηση."

msgid ""
"Sometimes, your inclusion tags might require a large number of arguments, "
"making it a pain for template authors to pass in all the arguments and "
"remember their order. To solve this, Django provides a ``takes_context`` "
"option for inclusion tags. If you specify ``takes_context`` in creating a "
"template tag, the tag will have no required arguments, and the underlying "
"Python function will have one argument -- the template context as of when "
"the tag was called."
msgstr ""
"Μερικές φορές, τα inclusion tags μπορεί να χρειάζονται έναν μεγάλο αριθμό "
"από παραμέτρους, κάνοντας δύσκολο για τους συντάκτες των templates να "
"περάσουν όλες τις παραμέτρους και να θυμούνται τη σειρά τους. Για την "
"αντιμετώπιση αυτού του προβλήματος, το Django προσφέρει την επιλογή "
"``takes_context`` τύπου boolean για inclusion tags. Αν τη θέσετε ``True\t`` "
"όταν δημιουργείτε τη συνάρτηση, το tag δεν θα έχει απαιτούμενες παραμέτρους "
"και η Python συνάρτηση του tag θα έχει μόνο μια παράμετρο -- το template "
"context όπως είναι όταν κλήθηκε το tag."

msgid ""
"For example, say you're writing an inclusion tag that will always be used in "
"a context that contains ``home_link`` and ``home_title`` variables that "
"point back to the main page. Here's what the Python function would look "
"like::"
msgstr ""
"Για παράδειγμα, ας υποθέσουμε ότι γράφετε ένα inclusion tag το οποίο θα "
"χρησιμοποιείται πάντα σε κάποιο context που περιέχει τις μεταβλητές "
"``home_link`` και ``home_title`` οι οποίες θα οδηγούν πίσω στην αρχική "
"σελίδα. Η Python συνάρτηση του tag θα δείχνει κάπως έτσι::"

msgid ""
"Note that the first parameter to the function *must* be called ``context``."
msgstr ""
"Σημειώστε ότι η πρώτη παράμετρος της συνάρτησης *πρέπει* να ονομάζεται "
"``context``."

msgid ""
"In that ``register.inclusion_tag()`` line, we specified "
"``takes_context=True`` and the name of the template. Here's what the "
"template ``link.html`` might look like:"
msgstr ""
"Στη γραμμή ``register.inclusion_tag()``, προσδιορίσαμε το keyword argument "
"``takes_context=True`` και το όνομα του template. Το template ``link.html`` "
"θα δείχνει κάπως έτσι:"

msgid ""
"Then, any time you want to use that custom tag, load its library and call it "
"without any arguments, like so:"
msgstr ""
"Έπειτα, κάθε φορά που θέλετε να χρησιμοποιήσετε αυτό το tag, φορτώστε τη "
"βιβλιοθήκη (``{% load <όνομα_αρχείου> %}``) και καλέσετε τη χωρίς ορίσματα, "
"ως εξής:"

msgid ""
"Note that when you're using ``takes_context=True``, there's no need to pass "
"arguments to the template tag. It automatically gets access to the context."
msgstr ""
"Σημειώστε ότι, όταν χρησιμοποιείτε το ``takes_context=True``, δεν χρειάζεται "
"να περάσετε παραμέτρους μέσα στο template tag. Αυτόματα, έχει πρόσβαση στο "
"template context."

msgid ""
"The ``takes_context`` parameter defaults to ``False``. When it's set to "
"``True``, the tag is passed the context object, as in this example. That's "
"the only difference between this case and the previous ``inclusion_tag`` "
"example."
msgstr ""
"Η προεπιλεγμένη τιμή της παραμέτρου ``takes_context`` είναι ``False``. Όταν "
"τη θέτετε ``True``, περνάει το context object μέσα στο tag, όπως σε αυτό το "
"παράδειγμα. Αυτή είναι η μόνη διαφορά μεταξύ αυτής της περίπτωσης και του "
"προηγούμενου ``inclusion_tag`` παραδείγματος."

msgid ""
"``inclusion_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr ""
"Οι συναρτήσεις των ``inclusion_tag`` μπορούν να δεχτούν αναρίθμητα "
"positional ή keyword arguments. Για παράδειγμα::"

msgid "Assignment tags"
msgstr "Assignment tags"

msgid ""
"``simple_tag`` can now store results in a template variable and should be "
"used instead."
msgstr ""
"Το ``simple_tag`` θα πρέπει να χρησιμοποιείται καθώς μπορεί πλέον να "
"αποθηκεύει αποτελέσματα σε μια μεταβλητή template."

msgid ""
"To ease the creation of tags setting a variable in the context, Django "
"provides a helper function, ``assignment_tag``. This function works the same "
"way as :meth:`~django.template.Library.simple_tag` except that it stores the "
"tag's result in a specified context variable instead of directly outputting "
"it."
msgstr ""
"Για την διευκόλυνση της δημιουργίας μια μεταβλητής στο template context μέσω "
"των tags, το Django παρέχει μια βοηθητική συνάρτηση, την ``assignment_tag``. "
"Αυτή η συνάρτηση δουλεύει με τον ίδιο τρόπο όπως η μέθοδος :meth:`~django."
"template.Library.simple_tag` με τη μόνη διαφορά ότι η ``assignment_tag`` "
"αποθηκεύει το αποτέλεσμα του tag σε μια μεταβλητή του context αντί να την "
"εκτυπώνει απ' ευθείας στο template."

msgid "Our earlier ``current_time`` function could thus be written like this::"
msgstr ""
"Η προηγούμενη συνάρτηση ``current_time`` θα μπορούσε, επομένως, να γραφτεί "
"ως::"

msgid ""
"You may then store the result in a template variable using the ``as`` "
"argument followed by the variable name, and output it yourself where you see "
"fit:"
msgstr ""
"Μπορείτε πλέον να αποθηκεύσετε το αποτέλεσμα σε μια μεταβλητή του template "
"χρησιμοποιώντας το argument ``as`` ακολουθούμενο από το όνομα της "
"μεταβλητής. Έπειτα μπορείτε να εκτυπώσετε την τιμή της μεταβλητής οπουδήποτε "
"μέσα στο template επιθυμείτε:"

msgid "Advanced custom template tags"
msgstr "Παραμετροποιήσιμα template tags για προχωρημένους"

msgid ""
"Sometimes the basic features for custom template tag creation aren't enough. "
"Don't worry, Django gives you complete access to the internals required to "
"build a template tag from the ground up."
msgstr ""
"Μερικές φορές τα βασικά χαρακτηριστικά για τη δημιουργία του δικού σας "
"template tag δεν είναι αρκετά. Μην ανησυχείτε, το Django σας δίνει πλήρη "
"πρόσβαση στα εσωτερικά που απαιτούνται για να φτιάξετε ένα template tag από "
"την αρχή."

msgid "A quick overview"
msgstr "Μια γρήγορη ματιά"

msgid ""
"The template system works in a two-step process: compiling and rendering. To "
"define a custom template tag, you specify how the compilation works and how "
"the rendering works."
msgstr ""
"Το σύστημα του template λειτουργεί ακολουθώντας μια διαδικασία δύο σταδίων: "
"compiling και rendering. Για να ορίσετε ένα δικό σας template tag, πρέπει να "
"προσδιορίσετε πως δουλεύει το compilation και πως το rendering."

msgid ""
"When Django compiles a template, it splits the raw template text into "
"''nodes''. Each node is an instance of ``django.template.Node`` and has a "
"``render()`` method. A compiled template is, simply, a list of ``Node`` "
"objects. When you call ``render()`` on a compiled template object, the "
"template calls ``render()`` on each ``Node`` in its node list, with the "
"given context. The results are all concatenated together to form the output "
"of the template."
msgstr ""
"Όταν το Django συντάσσει (compiles) ένα template, χωρίζει το κείμενο του "
"template σε μια λίστα από ''nodes''. Κάθε node είναι ένα instance της κλάσης "
"``django.template.Node`` και έχει μια μέθοδο ``render()``. Ένα compiled "
"template είναι, απλώς, μια λίστα από objects τύπου ``Node``. Όταν καλείτε τη "
"μέθοδο ``render()`` σε ένα compiled template object, το template καλεί τη "
"μέθοδο ``render()`` για καθένα ``Node`` που βρίσκεται στη λίστα του, με το "
"δοθέν context. Τα αποτελέσματα ενώνονται όλα μεταξύ τους για να συνθέσουν "
"την έξοδο του template."

msgid ""
"Thus, to define a custom template tag, you specify how the raw template tag "
"is converted into a ``Node`` (the compilation function), and what the node's "
"``render()`` method does."
msgstr ""
"Επομένως, για να ορίσετε ένα δικό σας template tag, προσδιορίζετε πως ένα "
"template tag μετατρέπεται σε ένα ``Node`` (η συνάρτηση του compilation) και "
"τι κάνει η μέθοδος ``render()`` του node."

msgid "Writing the compilation function"
msgstr "Γράφοντας τη συνάρτηση του compilation"

msgid ""
"For each template tag the template parser encounters, it calls a Python "
"function with the tag contents and the parser object itself. This function "
"is responsible for returning a ``Node`` instance based on the contents of "
"the tag."
msgstr ""
"Για κάθε template tag που βρίσκει ο template parser, καλείται μια Python "
"συνάρτηση με τα περιεχόμενα του tag και το ίδιο το parser object. Αυτή η "
"συνάρτηση είναι υπεύθυνη να επιστρέψει ένα instance του ``Node`` βασιζόμενη "
"στα περιεχόμενα του tag."

msgid ""
"For example, let's write a full implementation of our simple template tag, "
"``{% current_time %}``, that displays the current date/time, formatted "
"according to a parameter given in the tag, in :func:`~time.strftime` syntax. "
"It's a good idea to decide the tag syntax before anything else. In our case, "
"let's say the tag should be used like this:"
msgstr ""
"Για παράδειγμα, ας γράψουμε μια πλήρης υλοποίηση του απλού μας template tag, "
"``{% current_time %}``, το οποίο εμφανίζει την τρέχουσα ημερομηνία/ώρα, "
"μορφοποιημένη σύμφωνα με τις παραμέτρους (σύνταξη func:`~time.strftime`) που "
"δόθηκαν στο tag. Είναι καλή ιδέα να αποφασίσετε τη σύνταξη του tag πριν από "
"οτιδήποτε άλλο. Στη δικιά μας περίπτωση, ας πούμε ότι το tag θα πρέπει να "
"χρησιμοποιείται κάπως έτσι:"

msgid ""
"The parser for this function should grab the parameter and create a ``Node`` "
"object::"
msgstr ""
"Ο parser για αυτή τη συνάρτηση θα πρέπει να παίρνει την παράμετρο και να "
"δημιουργεί ένα object του ``Node``::"

msgid "Notes:"
msgstr "Σημειώσεις"

msgid ""
"``parser`` is the template parser object. We don't need it in this example."
msgstr ""
"Η παράμετρος ``parser`` είναι ένα template parser object. Δεν το "
"χρειαζόμαστε σε αυτό το παράδειγμα."

msgid ""
"``token.contents`` is a string of the raw contents of the tag. In our "
"example, it's ``'current_time \"%Y-%m-%d %I:%M %p\"'``."
msgstr ""
"Το ``token.contents`` είναι ένα string των περιεχομένων του tag. Στο δικό "
"μας παράδειγμα, είναι το ``'current_time \"%Y-%m-%d %I:%M %p\"'``."

msgid ""
"The ``token.split_contents()`` method separates the arguments on spaces "
"while keeping quoted strings together. The more straightforward ``token."
"contents.split()`` wouldn't be as robust, as it would naively split on *all* "
"spaces, including those within quoted strings. It's a good idea to always "
"use ``token.split_contents()``."
msgstr ""
"Η μέθοδος ``token.split_contents()`` διαχωρίζει, με βάση τον χαρακτήρα του "
"διαστήματος, τις παραμέτρους ενώ παράλληλα κρατάει τα strings, ανέπαφα, με "
"τον χαρακτήρα που έχουν δηλωθεί (``’...’`` ή ``”...”``). Αν χρησιμοποιούνταν "
"η ``token.contents.split()`` τότε θα διαχώριζε *όλα* τα περιεχόμενα του tag "
"με βάση το χαρακτήρα του διαστήματος, συμπεριλαμβανομένων και των κενών που "
"υπάρχουν στο string. Αυτό βέβαια δεν είναι βολικό. Καλό είναι, λοιπόν, να "
"χρησιμοποιείτε τη μέθοδο ``token.split_contents()``."

msgid ""
"This function is responsible for raising ``django.template."
"TemplateSyntaxError``, with helpful messages, for any syntax error."
msgstr ""
"Η συνάρτηση που φτιάξαμε, είναι υπεύθυνη να κάνει raise το exception "
"``django.template.TemplateSyntaxError``, με βοηθητικά μηνύματα για τυχόν "
"συντακτικά λάθη."

msgid ""
"The ``TemplateSyntaxError`` exceptions use the ``tag_name`` variable. Don't "
"hard-code the tag's name in your error messages, because that couples the "
"tag's name to your function. ``token.contents.split()[0]`` will ''always'' "
"be the name of your tag -- even when the tag has no arguments."
msgstr ""
"Τα exceptions τύπου ``TemplateSyntaxError`` χρησιμοποιούν τη μεταβλητή "
"``tag_name``. Μην γράφετε μόνοι σας το όνομα του tag στα μηνύματα σφάλματος, "
"επειδή αυτό δεσμεύει το όνομα του tag με τη συνάρτηση σας. Το ``token."
"contents.split()[0]`` θα περιέχει ''πάντα'' το όνομα του tag σας -- ακόμη "
"και αν το tag δεν έχει παραμέτρους."

msgid ""
"The function returns a ``CurrentTimeNode`` with everything the node needs to "
"know about this tag. In this case, it just passes the argument -- ``\"%Y-%m-"
"%d %I:%M %p\"``. The leading and trailing quotes from the template tag are "
"removed in ``format_string[1:-1]``."
msgstr ""
"Η συνάρτηση επιστρέφει ένα ``CurrentTimeNode`` με όλα όσα χρειάζεται να "
"ξέρει το node για αυτό το tag. Σε αυτή την περίπτωση, απλώς περνάει την "
"παράμετρο --\n"
"  ``\"%Y-%m-%d %I:%M %p\"``. Τα διπλά εισαγωγικά στην αρχή και στο τέλος της "
"παραμέτρου αφαιρούνται μέσω της ``format_string[1:-1]``."

msgid ""
"The parsing is very low-level. The Django developers have experimented with "
"writing small frameworks on top of this parsing system, using techniques "
"such as EBNF grammars, but those experiments made the template engine too "
"slow. It's low-level because that's fastest."
msgstr ""
"Το parsing γίνεται σε πολύ χαμηλό επίπεδο. Οι Django developers έχουν "
"πειραματιστεί στο να γράφουν μικρά frameworks πάνω σε αυτό το σύστημα "
"parsing, χρησιμοποιώντας τεχνικές όπως οι γραμματικές EBNF (EBNF grammars), "
"αλλά αυτά τα πειράματα έκαναν την μηχανή του template πολύ αργή. Γίνεται, "
"λοιπόν, σε χαμηλό επίπεδο επειδή αυτό είναι γρηγορότερο."

msgid "Writing the renderer"
msgstr "Γράφοντας τον renderer"

msgid ""
"The second step in writing custom tags is to define a ``Node`` subclass that "
"has a ``render()`` method."
msgstr ""
"Το δεύτερο βήμα για τη δημιουργία δικών μας tags είναι ο ορισμός της "
"subclass της ``Node`` η οποία έχει μια μέθοδο ``render()``."

msgid "Continuing the above example, we need to define ``CurrentTimeNode``::"
msgstr ""
"Συνεχίζοντας το παραπάνω παράδειγμα, χρειάζεται να ορίσουμε το "
"``CurrentTimeNode``::"

msgid ""
"``__init__()`` gets the ``format_string`` from ``do_current_time()``. Always "
"pass any options/parameters/arguments to a ``Node`` via its ``__init__()``."
msgstr ""
"Η μέθοδος ``__init__()`` λαμβάνει τη μεταβλητή ``format_string`` από τη "
"συνάρτηση ``do_current_time()``. Πάντα να περνάτε τυχόν options/parameters/"
"arguments σε ένα ``Node`` μέσω της ``__init__()`` μεθόδου του."

msgid "The ``render()`` method is where the work actually happens."
msgstr "Η μέθοδος ``render()`` είναι εκεί όπου γίνονται όλα."

msgid ""
"``render()`` should generally fail silently, particularly in a production "
"environment. In some cases however, particularly if ``context.template."
"engine.debug`` is ``True``, this method may raise an exception to make "
"debugging easier. For example, several core tags raise ``django.template."
"TemplateSyntaxError`` if they receive the wrong number or type of arguments."
msgstr ""
"Η ``render()`` θα πρέπει γενικά να αποτυγχάνει σιωπηρά, ειδικά σε παραγωγικό "
"περιβάλλον (production environment). Ωστόσο, σε μερικές περιπτώσεις, ειδικά "
"αν το ``context.template.engine.debug`` είναι ``True``, αυτή η μέθοδος θα "
"πρέπει να κάνει raise ένα exception για να κάνει το debugging ευκολότερο. "
"Για παράδειγμα, πολλά προεγκατεστημένα tags του Django κάνουν raise το "
"``django.template.TemplateSyntaxError`` αν λάβουν λάθος αριθμό ή τύπο "
"παραμέτρων."

msgid ""
"Ultimately, this decoupling of compilation and rendering results in an "
"efficient template system, because a template can render multiple contexts "
"without having to be parsed multiple times."
msgstr ""
"Τελικώς, αυτή η αποσύνδεση μεταξύ του compilation και του rendering έχει ως "
"αποτέλεσμα ένα αποδοτικό σύστημα template, επειδή ένα template μπορεί να "
"κάνει render πολλαπλά contexts χωρίς να χρειαστεί να γίνει parsed πολλές "
"φορές."

msgid "Auto-escaping considerations"
msgstr "Εκτιμήσεις σχετικά με το auto-escaping"

msgid ""
"The output from template tags is **not** automatically run through the auto-"
"escaping filters (with the exception of :meth:`~django.template.Library."
"simple_tag` as described above). However, there are still a couple of things "
"you should keep in mind when writing a template tag."
msgstr ""
"Η έξοδος των template tags **δεν** περνούν αυτόματα μέσα από auto-escaping "
"φίλτρα (εκτός της μεθόδου :meth:`~django.template.Library.simple_tag`, όπως "
"περιγράφηκε παραπάνω). Ωστόσο, υπάρχουν ακόμη μερικά πράγματα που πρέπει να "
"έχετε στο νου σας όταν γράφετε ένα template tag."

msgid ""
"If the ``render()`` function of your template stores the result in a context "
"variable (rather than returning the result in a string), it should take care "
"to call ``mark_safe()`` if appropriate. When the variable is ultimately "
"rendered, it will be affected by the auto-escape setting in effect at the "
"time, so content that should be safe from further escaping needs to be "
"marked as such."
msgstr ""
"Αν η συνάρτηση ``render()`` του template σας αποθηκεύει το αποτέλεσμα σε μια "
"context variable (αντί να επιστρέφει το αποτέλεσμα σε ένα string), θα πρέπει "
"να φροντίσει να καλέσει την ``mark_safe()``, αν αυτό είναι απαραίτητο. Όταν "
"η μεταβλητή γίνει, τελικώς, rendered (εμφανιστεί-τυπωθεί στο template, αν "
"θέλετε), θα επηρεαστεί από τη ρύθμιση του auto-escape (αναλόγως αν είναι "
"ενεργοποιημένη ή όχι), οπότε το περιεχόμενο που πρέπει να είναι safe από "
"περαιτέρω escaping χρειάζεται να μαρκαριστεί."

msgid ""
"Also, if your template tag creates a new context for performing some sub-"
"rendering, set the auto-escape attribute to the current context's value. The "
"``__init__`` method for the ``Context`` class takes a parameter called "
"``autoescape`` that you can use for this purpose. For example::"
msgstr ""
"Επίσης, αν το template tag σας δημιουργεί ένα καινούργιο context για να "
"εκτελέσει κάποιο sub-rendering, θέστε το attribute του auto-escape στην τιμή "
"του τρέχοντος context. Η μέθοδος ``__init__`` για την κλάση ``Context`` "
"δέχεται μια παράμετρο με το όνομα ``autoescape``, την οποία μπορείτε να "
"χρησιμοποιήσετε για αυτό το σκοπό. Για παράδειγμα::"

msgid ""
"This is not a very common situation, but it's useful if you're rendering a "
"template yourself. For example::"
msgstr ""
"Αυτό δεν είναι μια συνηθισμένη περίπτωση, αλλά είναι χρήσιμο να το ξέρετε αν "
"κάνετε rendering ένα template εσείς οι ίδιοι."

msgid ""
"If we had neglected to pass in the current ``context.autoescape`` value to "
"our new ``Context`` in this example, the results would have *always* been "
"automatically escaped, which may not be the desired behavior if the template "
"tag is used inside a :ttag:`{% autoescape off %}<autoescape>` block."
msgstr ""
"Αν δεν περνάγαμε την τιμή του ``context.autoescape`` στο νέο μας ``Context`` "
"σε αυτό το παράδειγμα, τα αποτελέσματα θα γινόντουσαν *πάντα* αυτόματα "
"escaped, κάτι το οποίο μπορεί να μην ήταν η επιθυμητική συμπεριφορά αν το "
"template tag χρησιμοποιούταν μέσα στο block tag :ttag:`{% autoescape off %}"
"<autoescape>`."

msgid "Thread-safety considerations"
msgstr "Εκτιμήσεις σχετικά με την ασφάλεια των threads"

msgid ""
"Once a node is parsed, its ``render`` method may be called any number of "
"times. Since Django is sometimes run in multi-threaded environments, a "
"single node may be simultaneously rendering with different contexts in "
"response to two separate requests. Therefore, it's important to make sure "
"your template tags are thread safe."
msgstr ""
"Όταν ένα node γίνει parsed, η ``render`` μέθοδος του μπορεί να καλεστεί "
"πολλές φορές. Επειδή το Django, μερικές φορές, τρέχει σε περιβάλλοντα multi-"
"threaded, ένα απλό node μπορεί ταυτοχρόνως να γίνει rendering με διαφορετικά "
"contexts ως response για δύο ξεχωριστά requests. Επομένως, είναι σημαντικό "
"να εξασφαλίσετε ότι τα template tags σας είναι thread safe."

msgid ""
"To make sure your template tags are thread safe, you should never store "
"state information on the node itself. For example, Django provides a "
"builtin :ttag:`cycle` template tag that cycles among a list of given strings "
"each time it's rendered:"
msgstr ""
"Για να το εξασφαλίσετε αυτό, δεν θα πρέπει να αποθηκεύετε ποτέ τις "
"πληροφορίες της κατάστασης στο ίδιο το node. Για παράδειγμα, το Django "
"παρέχει ένα προεγκατεστημένο template tag :ttag:`cycle` το οποίο ανατρέχει "
"μια λίστα από δοθέντα strings κάθε φορά που γίνεται rendered:"

msgid ""
"A naive implementation of ``CycleNode`` might look something like this::"
msgstr "Μια απλοϊκή υλοποίηση του ``CycleNode`` θα έμοιαζε κάπως έτσι::"

msgid ""
"But, suppose we have two templates rendering the template snippet from above "
"at the same time:"
msgstr ""
"Αλλά, ας υποθέσουμε ότι την ίδια χρονική στιγμή, δύο templates κάνουν "
"rendering το κομμάτι του template παραπάνω:"

msgid ""
"Thread 1 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr ""
"Το Thread 1 πραγματοποιεί την πρώτη επανάληψη του βρόγχου, η μέθοδος "
"``CycleNode.render()`` επιστρέφει 'row1'"

msgid ""
"Thread 2 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr ""
"Το Thread 2 πραγματοποιεί την πρώτη επανάληψη του βρόγχου, η μέθοδος "
"``CycleNode.render()`` επιστρέφει 'row2'"

msgid ""
"Thread 1 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr ""
"Το Thread 1 πραγματοποιεί την δεύτερη επανάληψη του βρόγχου, η μέθοδος "
"``CycleNode.render()`` επιστρέφει 'row1'"

msgid ""
"Thread 2 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr ""
"Το Thread 2 πραγματοποιεί την δεύτερη επανάληψη του βρόγχου, η μέθοδος "
"``CycleNode.render()`` επιστρέφει 'row2'"

msgid ""
"The CycleNode is iterating, but it's iterating globally. As far as Thread 1 "
"and Thread 2 are concerned, it's always returning the same value. This is "
"obviously not what we want!"
msgstr ""
"Το CycleNode κάνει την επανάληψη (iterating), αλλά την κάνει καθολικά "
"(globally). Όσον αφορά τα Thread 1 και Thread 2, το καθένα επιστρέφει πάντα "
"την ίδια τιμή. Αυτό, φυσικά, δεν είναι αυτό που θέλουμε!"

msgid ""
"To address this problem, Django provides a ``render_context`` that's "
"associated with the ``context`` of the template that is currently being "
"rendered. The ``render_context`` behaves like a Python dictionary, and "
"should be used to store ``Node`` state between invocations of the ``render`` "
"method."
msgstr ""
"Για την αποφυγή τέτοιων καταστάσεων, το Django παρέχει ένα "
"``render_context`` το οποίο σχετίζεται με το ``context`` του template το "
"οποίο γίνεται εκείνη τη στιγμή rendered. Το ``render_context`` "
"συμπεριφέρεται όπως ένα Python dictionary και θα πρέπει να χρησιμοποιείται "
"για να αποθηκεύονται οι καταστάσεις του ``Node`` μεταξύ κλήσεων της μεθόδου "
"``render``."

msgid ""
"Let's refactor our ``CycleNode`` implementation to use the "
"``render_context``::"
msgstr ""
"Ας αλλάξουμε την υλοποίηση της κλάσης ``CycleNode`` για να χρησιμοποιεί το "
"``render_context``::"

msgid ""
"Note that it's perfectly safe to store global information that will not "
"change throughout the life of the ``Node`` as an attribute. In the case of "
"``CycleNode``, the ``cyclevars`` argument doesn't change after the ``Node`` "
"is instantiated, so we don't need to put it in the ``render_context``. But "
"state information that is specific to the template that is currently being "
"rendered, like the current iteration of the ``CycleNode``, should be stored "
"in the ``render_context``."
msgstr ""
"Σημειώστε ότι δεν είναι καθόλου λάθος να αποθηκεύετε ως attribute καθολικές "
"πληροφορίες οι οποίες δεν αλλάζουν κατά τη διάρκεια της ζωής ενός ``Node``. "
"Στην περίπτωση του ``CycleNode``, το argument ``cyclevars`` δεν αλλάζει μετά "
"την αρχικοποίηση του ``Node``, οπότε δεν χρειάζεται να το βάλουμε μέσα στο "
"``render_context``. Αλλά η πληροφορία της κατάστασης η οποία είναι "
"συγκεκριμένη στο template το οποίο γίνεται rendered, όπως η τρέχουσα "
"επανάληψη βρόγχου του ``CycleNode``, θα πρέπει να αποθηκευτεί μέσα στο "
"``render_context``."

msgid ""
"Notice how we used ``self`` to scope the ``CycleNode`` specific information "
"within the ``render_context``. There may be multiple ``CycleNodes`` in a "
"given template, so we need to be careful not to clobber another node's state "
"information. The easiest way to do this is to always use ``self`` as the key "
"into ``render_context``. If you're keeping track of several state variables, "
"make ``render_context[self]`` a dictionary."
msgstr ""
"Σημειώστε το πως χρησιμοποιήσαμε το ``self`` για να έχουμε πρόσβαση σε "
"συγκεκριμένη πληροφορία του ``CycleNode`` μέσα από το ``render_context``. "
"Μπορεί να υπάρχουν πολλαπλά ``CycleNodes`` μέσα σε ένα template, οπότε "
"πρέπει να είμαστε προσεκτικοί να μην αφαιρέσουμε την πληροφορία της "
"κατάστασης άλλου node. Ο πιο εύκολος τρόπος για να επιτευχθεί κάτι τέτοιο "
"είναι πάντα να χρησιμοποιείτε το ``self`` ως το key μέσα στο "
"``render_context``. Αν παρακολουθείτε πολλές ματαβλητές κατάστασης (state "
"variables), κάντε το ``render_context[self]`` ένα dictionary."

msgid "Registering the tag"
msgstr "Κάνοντας register το tag"

msgid ""
"Finally, register the tag with your module's ``Library`` instance, as "
"explained in :ref:`writing custom template filters<howto-writing-custom-"
"template-tags>` above. Example::"
msgstr ""
"Τέλος, κάντε register το tag με το instance του module ``Library``, όπως "
"εξηγήθηκε στην ενότητα :ref:`γράφοντας δικά σας template φίλτρα <howto-"
"writing-custom-template-tags>` παραπάνω. Παράδειγμα::"

msgid "The ``tag()`` method takes two arguments:"
msgstr "Η μέθοδος ``tag()`` λαμβάνει δύο arguments:"

msgid ""
"The name of the template tag -- a string. If this is left out, the name of "
"the compilation function will be used."
msgstr ""
"Το όνομα του template tag -- ένα string. Αν αυτό παραλειφθεί, θα "
"χρησιμοποιηθεί το όνομα της συνάρτησης του compilation."

msgid ""
"As with filter registration, it is also possible to use this as a decorator::"
msgstr ""
"Όπως και με το registration των φιλτρών, μπορείτε να χρησιμοποιήσετε έναν "
"decorator::"

msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the tag name."
msgstr ""
"Αν παραλείψετε την παράμετρο ``name``, όπως στο δεύτερο παράδειγμα παραπάνω, "
"το Django θα χρησιμοποιήσει το όνομα της συνάρτησης ως το όνομα του tag."

msgid "Passing template variables to the tag"
msgstr "Περνώντας template μεταβλητές στο tag"

msgid ""
"Although you can pass any number of arguments to a template tag using "
"``token.split_contents()``, the arguments are all unpacked as string "
"literals. A little more work is required in order to pass dynamic content (a "
"template variable) to a template tag as an argument."
msgstr ""
"Όπως γνωρίζετε μπορείτε να περάσετε οποιοδήποτε αριθμό από παραμέτρους σε "
"ένα template tag και χρησιμοποιώντας τη μέθοδο ``token.split_contents()`` οι "
"παράμετροι θα είναι διαθέσιμες σε εσάς ως strings. Ωστόσο, χρειάζεται λίγη "
"περισσότερη δουλειά για να περάσετε δυναμικό περιεχόμενο (μια template "
"μεταβλητή) στο template tag ως παράμετρο."

msgid ""
"While the previous examples have formatted the current time into a string "
"and returned the string, suppose you wanted to pass in a :class:`~django.db."
"models.DateTimeField` from an object and have the template tag format that "
"date-time:"
msgstr ""
"Ενώ τα προηγούμενα παραδείγματα μορφοποιούσαν την τρέχουσα ώρα σε ένα string "
"και επέστρεφαν το string, υποθέστε τώρα ότι θέλετε να περάσετε ένα :class:"
"`~django.db.models.DateTimeField` από ένα object και θέλετε το template tag "
"να μορφοποιήσει αυτό το object (αυτή την ημερομηνία-ώρα, αν θέλετε):"

msgid "Initially, ``token.split_contents()`` will return three values:"
msgstr ""
"Αρχικά, η μέθοδος ``token.split_contents()`` θα επιστρέψει τρεις τιμές:"

msgid "The tag name ``format_time``."
msgstr "Το όνομα του tag, ``format_time``."

msgid ""
"The string ``'blog_entry.date_updated'`` (without the surrounding quotes)."
msgstr "Το string ``'blog_entry.date_updated'`` (χωρίς τα μονά εισαγωγικά)."

msgid ""
"The formatting string ``'\"%Y-%m-%d %I:%M %p\"'``. The return value from "
"``split_contents()`` will include the leading and trailing quotes for string "
"literals like this."
msgstr ""
"Το string που θα χρησιμοποιηθεί για την μορφοποίηση ``'\"%Y-%m-%d %I:%M %p"
"\"'``. Η επιστρεφόμενη τιμή από τη μέθοδο ``split_contents()`` θα "
"συμπεριλάβει τα διπλά εισαγωγικά στην αρχή και το τέλος των strings (όπως "
"ακριβώς εισήχθησαν στο tag μέσα στο template)."

msgid "Now your tag should begin to look like this::"
msgstr "Τώρα το tag θα αρχίσει να μοιάζει κάπως έτσι::"

msgid ""
"You also have to change the renderer to retrieve the actual contents of the "
"``date_updated`` property of the ``blog_entry`` object.  This can be "
"accomplished by using the ``Variable()`` class in ``django.template``."
msgstr ""
"Θα χρειαστεί επίσης να αλλάξετε και τον renderer για να λάβει τα πραγματικά "
"περιεχόμενα του ``date_updated`` property του object ``blog_entry``. Αυτό "
"μπορεί να επιτευχθεί χρησιμοποιώντας την κλάση ``Variable()`` μέσα στο "
"``django.template``."

msgid ""
"To use the ``Variable`` class, simply instantiate it with the name of the "
"variable to be resolved, and then call ``variable.resolve(context)``. So, "
"for example::"
msgstr ""
"Για να χρησιμοποιήσετε την κλάση ``Variable``, απλώς αρχικοποιήστε τη με το "
"όνομα της μεταβλητής η οποία θα γίνει resolved και μετά καλέστε τη μέθοδο "
"``variable.resolve(context)``. Άρα, για παράδειγμα::"

msgid ""
"Variable resolution will throw a ``VariableDoesNotExist`` exception if it "
"cannot resolve the string passed to it in the current context of the page."
msgstr ""
"Η αναζήτηση της μεταβλητής (variable resolution) θα κάνει throw ένα "
"exception ``VariableDoesNotExist`` αν δεν μπορεί να γίνει resolve το string "
"(``'blog_entry.date_updated'``) που περάστηκε στο τρέχων context της σελίδας."

msgid "Setting a variable in the context"
msgstr "Θέτοντας μια μεταβλητή στο context"

msgid ""
"The above examples simply output a value. Generally, it's more flexible if "
"your template tags set template variables instead of outputting values. That "
"way, template authors can reuse the values that your template tags create."
msgstr ""
"Το παραπάνω παράδειγμα απλώς εξάγει μια τιμή. Γενικότερα, είναι περισσότερο "
"ευέλικτο αν τα template tags σας θέτουν template μεταβλητές αντί να εξάγουν "
"(εκτυπώνουν) τις τιμές τους. Με αυτό τον τρόπο, οι συντάκτες των template θα "
"μπορούν να επαναχρησιμοποιούν τις τιμές τις οποίες δημιούργησαν τα template "
"tags σας."

msgid ""
"To set a variable in the context, just use dictionary assignment on the "
"context object in the ``render()`` method. Here's an updated version of "
"``CurrentTimeNode`` that sets a template variable ``current_time`` instead "
"of outputting it::"
msgstr ""
"Για να θέσετε μια μεταβλητή στο context, απλώς χρησιμοποιήστε την εκχώρηση "
"της στο dictionary του context object μέσα στη μέθοδο ``render()``. Παρακάτω "
"φαίνεται μια ενημερωμένη έκδοση της κλάσης ``CurrentTimeNode`` η οποία θέτει "
"την template μεταβλητή ``current_time`` αντί απλώς να την εκτυπώνει::"

msgid ""
"Note that ``render()`` returns the empty string. ``render()`` should always "
"return string output. If all the template tag does is set a variable, "
"``render()`` should return the empty string."
msgstr ""
"Σημειώστε ότι η μέθοδος ``render()`` επιστρέφει ένα κενό string. Η "
"``render()`` θα πρέπει πάντα να επιστρέφει ένα string. Αν το μόνο που κάνει "
"ένα template tag είναι να ορίζει μια μεταβλητή, τότε η ``render()`` θα "
"πρέπει να επιστρέφει ένα κενό string."

msgid "Here's how you'd use this new version of the tag:"
msgstr ""
"Παρακάτω φαίνεται πως μπορείτε να χρησιμοποιείτε τη νέα αυτή έκδοση του tag:"

msgid "Variable scope in context"
msgstr "Το variable scope του context"

msgid ""
"Any variable set in the context will only be available in the same ``block`` "
"of the template in which it was assigned. This behavior is intentional; it "
"provides a scope for variables so that they don't conflict with context in "
"other blocks."
msgstr ""
"Οποιαδήποτε μεταβλητή οριστεί στο context, θα είναι διαθέσιμη στο ίδιο "
"``block`` του template στο οποίο ορίστηκε. Αυτή η συμπεριφορά είναι σκόπιμη. "
"Παρέχει ένα scope για μεταβλητές ούτως ώστε να μην συγκρούονται με κάποιο "
"context από άλλα blocks."

msgid ""
"But, there's a problem with ``CurrentTimeNode2``: The variable name "
"``current_time`` is hard-coded. This means you'll need to make sure your "
"template doesn't use ``{{ current_time }}`` anywhere else, because the ``{% "
"current_time %}`` will blindly overwrite that variable's value. A cleaner "
"solution is to make the template tag specify the name of the output "
"variable, like so:"
msgstr ""
"Αλλά υπάρχει ένα πρόβλημα με την κλάση ``CurrentTimeNode2``: Το όνομα της "
"μεταβλητής ``current_time`` είναι γραμμένο hard-coded. Αυτό σημαίνει ότι "
"πρέπει να σιγουρευτείτε πως το template σας δεν χρησιμοποιεί πουθενά αλλού "
"το ``{{ current_time }}``, επειδή το ``{% current_time %}`` θα έκανε "
"overwrite την τιμή της μεταβλητής. Μια πιο καθαρή λύση είναι να κάνετε το "
"template tag να προσδιορίσει ένα όνομα για τη μεταβλητή, ως εξής:"

msgid ""
"To do that, you'll need to refactor both the compilation function and "
"``Node`` class, like so::"
msgstr ""
"Για να το κάνετε αυτό, θα χρειαστεί να αλλάξετε και τη συνάρτηση του "
"compilation και την κλάση ``Node``, ως εξής::"

msgid ""
"The difference here is that ``do_current_time()`` grabs the format string "
"and the variable name, passing both to ``CurrentTimeNode3``."
msgstr ""
"Η διαφορά εδώ είναι ότι η μέθοδος ``do_current_time()`` παίρνει το format "
"μορφοποίησης και το όνομα της μεταβλητής και δίνει και τα δύο στην κλάση "
"``CurrentTimeNode3``."

msgid ""
"Finally, if you only need to have a simple syntax for your custom context-"
"updating template tag, consider using the :meth:`~django.template.Library."
"simple_tag` shortcut, which supports assigning the tag results to a template "
"variable."
msgstr ""
"Τέλος, αν θέλετε μόνο να έχετε μια απλή σύνταξη για το δικό σας template tag "
"που αλληλεπιδρά με το context και το ενημερώνει, σκεφτείτε να "
"χρησιμοποιήσετε τη συντόμευση :meth:`~django.template.Library.simple_tag`, η "
"οποία υποστηρίζει τον ορισμό μεταβλητής της εξόδου ενός tag (μέσω της λέξη-"
"κλειδί ``as``, όπως είδαμε παραπάνω)."

msgid "Parsing until another block tag"
msgstr "Κάνοντας parsing μέχρι να βρεθεί κάποιο άλλο block tag"

msgid ""
"Template tags can work in tandem. For instance, the standard :ttag:`{% "
"comment %}<comment>` tag hides everything until ``{% endcomment %}``. To "
"create a template tag such as this, use ``parser.parse()`` in your "
"compilation function."
msgstr ""
"Τα template tags μπορούν να δουλέψουν αλυσιδωτά. Για παράδειγμα, το "
"στάνταρντ tag :ttag:`{% comment %} <comment>` αγνοεί τα πάντα μέχρι να βρει "
"το tag ``{% endcomment %}``. Για να δημιουργήσετε ένα template tag όπως "
"αυτό, χρησιμοποιήστε τη μέθοδο ``parser.parse()`` μέσα στη συνάρτηση του "
"compilation."

msgid "Here's how a simplified ``{% comment %}`` tag might be implemented::"
msgstr ""
"Εδώ φαίνεται η υλοποίηση της απλοποιημένης έκδοσης του tag ``{% comment %}"
"``::"

msgid ""
"The actual implementation of :ttag:`{% comment %}<comment>` is slightly "
"different in that it allows broken template tags to appear between ``{% "
"comment %}`` and ``{% endcomment %}``. It does so by calling ``parser."
"skip_past('endcomment')`` instead of ``parser.parse(('endcomment',))`` "
"followed by ``parser.delete_first_token()``, thus avoiding the generation of "
"a node list."
msgstr ""
"Η υλοποίηση του tag :ttag:`{% comment %} <comment>` διαφέρει ελαφρώς στο "
"ότι  επιτρέπει την εμφάνιση broken template tags μεταξύ του ``{% comment %}"
"`` και του ``{% endcomment %}``. Το κάνει αυτό καλώντας τη μέθοδο ``parser."
"skip_past('endcomment')`` αντί της ``parser.parse(('endcomment',))`` "
"ακολουθούμενη από τη μέθοδο ``parser.delete_first_token()``, με αποτέλεσμα "
"την αποφυγή της δημιουργίας μιας λίστας από nodes."

msgid ""
"``parser.parse()`` takes a tuple of names of block tags ''to parse until''. "
"It returns an instance of ``django.template.NodeList``, which is a list of "
"all ``Node`` objects that the parser encountered ''before'' it encountered "
"any of the tags named in the tuple."
msgstr ""
"Η μέθοδος ``parser.parse()`` παίρνει ένα tuple από ονόματα block tags ''να "
"γίνει parse μέχρι''. Επιστρέφει ένα instance του ``django.template."
"NodeList``, το οποίο είναι μια λίστα από ``Node`` objects τα οποία βρήκε ο "
"parser ''πριν'' βρει κάποιο από τα tags που είναι μέσα στο tuple."

msgid ""
"In ``\"nodelist = parser.parse(('endcomment',))\"`` in the above example, "
"``nodelist`` is a list of all nodes between the ``{% comment %}`` and ``{% "
"endcomment %}``, not counting ``{% comment %}`` and ``{% endcomment %}`` "
"themselves."
msgstr ""
"Στο ``\"nodelist = parser.parse(('endcomment',))\"`` στο παραπάνω "
"παράδειγμα, η ``nodelist`` είναι μια λίστα από όλα τα nodes μεταξύ του ``{% "
"comment %}`` και του ``{% endcomment %}``, χωρίς τα ίδια τα ``{% comment %}"
"`` και ``{% endcomment %}``."

msgid ""
"After ``parser.parse()`` is called, the parser hasn't yet \"consumed\" the "
"``{% endcomment %}`` tag, so the code needs to explicitly call ``parser."
"delete_first_token()``."
msgstr ""
"Αφού καλεστεί η ``parser.parse()``, ο parser δεν έχει \"καταναλώσει\" ακόμα "
"το ``{% endcomment %}`` tag, οπότε ο κώδικας χρειάζεται να καλέσει ρητώς τη "
"μέθοδο ``parser.delete_first_token()``."

msgid ""
"``CommentNode.render()`` simply returns an empty string. Anything between "
"``{% comment %}`` and ``{% endcomment %}`` is ignored."
msgstr ""
"Η μέθοδος ``CommentNode.render()`` απλώς επιστρέφει ένα κενό string. "
"Οτιδήποτε μεταξύ του ``{% comment %}`` και ``{% endcomment %}`` αγνοείται."

msgid "Parsing until another block tag, and saving contents"
msgstr ""
"Κάνοντας parsing μέχρι να βρεθεί κάποιο άλλο block tag και αποθήκευση "
"περιεχομένων"

msgid ""
"In the previous example, ``do_comment()`` discarded everything between ``{% "
"comment %}`` and ``{% endcomment %}``. Instead of doing that, it's possible "
"to do something with the code between block tags."
msgstr ""
"Στο προηγούμενο παράδειγμα, η συνάρτηση ``do_comment()`` απέρριπτε τα πάντα "
"μεταξύ του blck tag ``{% comment %}`` και ``{% endcomment %}``, επειδή "
"θεωρούνταν σχόλια και αυτά δεν γινόντουσαν render στην τελική σελίδα που θα "
"έβλεπε ο χρήστης. Αντί να γίνεται αυτό, μπορείτε να κάνετε κάτι με τον "
"κώδικα μεταξύ των block tags."

msgid ""
"For example, here's a custom template tag, ``{% upper %}``, that capitalizes "
"everything between itself and ``{% endupper %}``."
msgstr ""
"Για παράδειγμα, εδώ φαίνεται ένα παραμετροποιήσιμο template tag, με το όνομα "
"``{% upper %}``, το οποίο μετατρέπει σε κεφαλαία γράμματα όλους τους "
"χαρακτήρες μεταξύ του ίδιου και του ``{% endupper %}``."

msgid "Usage:"
msgstr "Χρήση"

msgid ""
"As in the previous example, we'll use ``parser.parse()``. But this time, we "
"pass the resulting ``nodelist`` to the ``Node``::"
msgstr ""
"Όπως στο προηγούμενο παράδειγμα, θα χρησιμοποιήσουμε τη μέθοδο ``parser."
"parse()``. Αλλά αυτή τη φορά, θα περάσουμε τη ``nodelist`` στο ``Node``, εν "
"αντιθέσει με την προηγούμενη φορά που επιστρέφαμε το ``CommentNode()`` χωρίς "
"κάποιο ``nodelist`` μέσα::"

msgid ""
"The only new concept here is the ``self.nodelist.render(context)`` in "
"``UpperNode.render()``."
msgstr ""
"Η μοναδική καινούργια έννοια εδώ είναι το ``self.nodelist.render(context)`` "
"μέσα στη μέθοδο ``UpperNode.render()``."

msgid ""
"For more examples of complex rendering, see the source code of :ttag:`{% for "
"%}<for>` in ``django/template/defaulttags.py`` and :ttag:`{% if %}<if>` in "
"``django/template/smartif.py``."
msgstr ""
"Για περισσότερα παραδείγματα περίπλοκων renderings, δείτε τον πηγαίο κώδικα "
"του tag :ttag:`{% for %} <for>` στο αρχείο ``django/template/defaulttags."
"py`` και το tag :ttag:`{% if %} <if>` στο αρχείο ``django/template/smartif."
"py``."

msgid "Deployment checklist"
msgstr "Λίστα ελέγχου για το Deployment"

msgid ""
"The Internet is a hostile environment. Before deploying your Django project, "
"you should take some time to review your settings, with security, "
"performance, and operations in mind."
msgstr ""
"Το Internet είναι ένα εχθρικό περιβάλλον. Πριν ανεβάσετε το Django project "
"σας για το ευρύ κοινό, θα πρέπει να αφιερώσετε λίγο χρόνο να ξανακοιτάξετε "
"τις ρυθμίσεις σας σχετικά με την ασφάλεια, την απόδοση και την "
"λειτουργικότητα."

msgid ""
"Django includes many :doc:`security features </topics/security>`. Some are "
"built-in and always enabled. Others are optional because they aren't always "
"appropriate, or because they're inconvenient for development. For example, "
"forcing HTTPS may not be suitable for all websites, and it's impractical for "
"local development."
msgstr ""
"Το Django περιέχει πολλά :doc:`χαρακτηριστικά ασφαλείας </topics/security>`. "
"Κάποια είναι προεγκατεστημένα και πάντα ενεργοποιημένα. Κάποια άλλα είναι "
"προαιρετικά επειδή δεν είναι πάντα κατάλληλα ή είναι μη βολικά για το "
"development. Για παράδειγμα, ο εξαναγκασμός για χρήση HTTPS ίσως όχι μόνο να "
"μην είναι κατάλληλο για όλα τα websites αλλά, επίσης, και μη πρακτικό όταν "
"κάνετε development τοπικά στον υπολογιστή σας."

msgid ""
"Performance optimizations are another category of trade-offs with "
"convenience. For instance, caching is useful in production, less so for "
"local development. Error reporting needs are also widely different."
msgstr ""
"Ένα άλλο trade-off είναι μεταξύ των βελτιστοποιήσεων της απόδοσης "
"(performance optimizations) και της ευκολίας. Για παράδειγμα, το caching "
"είναι χρήσιμο στην παραγωγή, αλλά όχι τόσο για τοπικό development (στον "
"υπολογιστή σας). Οι ανάγκες για αναφορά σφαλμάτων είναι, επίσης, "
"διαφορετικές μεταξύ τοπικού (local) και παραγωγικού (production) "
"περιβάλλοντος."

msgid "The following checklist includes settings that:"
msgstr "Η ακόλουθη λίστα ελέγχου περιλαμβάνει ρυθμίσεις που:"

msgid ""
"must be set properly for Django to provide the expected level of security;"
msgstr ""
"πρέπει να ρυθμιστούν κατάλληλα για το Django για την παροχή του αναμενόμενου "
"επιπέδου ασφαλείας,"

msgid "are expected to be different in each environment;"
msgstr "αναμένονται να είναι διαφορετικές για κάθε περιβάλλον,"

msgid "enable optional security features;"
msgstr "ενεργοποιούν προαιρετικά χαρακτηριστικά ασφαλείας,"

msgid "enable performance optimizations;"
msgstr "ενεργοποιούν βελτιστοποιήσεις της απόδοσης και"

msgid "provide error reporting."
msgstr "παρέχουν αναφορές σφαλμάτων."

msgid ""
"Many of these settings are sensitive and should be treated as confidential. "
"If you're releasing the source code for your project, a common practice is "
"to publish suitable settings for development, and to use a private settings "
"module for production."
msgstr ""
"Πολλές από αυτές τις ρυθμίσεις είναι ευαίσθητες και θα πρέπει να "
"αντιμετωπιστούν ως απόρρητες. Αν πρόκειται να διανείμετε τον πηγαίο κώδικα "
"του project σας, μια κοινή πρακτική είναι να δημοσιοποιήσετε τις κατάλληλες "
"ρυθμίσεις για το αναπτυξιακό περιβάλλον και να χρησιμοποιήσετε ένα προσωπικό "
"module ρυθμίσεων για την παραγωγή. Αντί, λοιπόν, να έχετε ένα μόνο αρχείο "
"``settings.py`` μπορείτε να έχετε ένα Python package με το όνομα settings "
"και μέσα διάφορα settings αρχεία, καθένα διαφορετικό για κάθε περιβάλλον."

msgid "Run ``manage.py check --deploy``"
msgstr "Τρέξτε την εντολή ``manage.py check --deploy``"

msgid ""
"Some of the checks described below can be automated using the :option:`check "
"--deploy` option. Be sure to run it against your production settings file as "
"described in the option's documentation."
msgstr ""
"Μερικοί από τους ελέγχους που περιγράφονται παρακάτω μπορούν να "
"αυτοματοποιηθούν χρησιμοποιώντας την επιλογή :option:`check --deploy`. "
"Σιγουρευτείτε ότι τρέχετε αυτή την εντολή σύμφωνα με το αρχείο ρυθμίσεων που "
"αφορά στο παραγωγικό σας περιβάλλον, όπως περιγράφεται στο εγχειρίδιο της "
"επιλογής αυτής."

msgid "Critical settings"
msgstr "Σημαντικές ρυθμίσεις"

msgid ":setting:`SECRET_KEY`"
msgstr ":setting:`SECRET_KEY`"

msgid ""
"**The secret key must be a large random value and it must be kept secret.**"
msgstr ""
"**Το μυστικό κλειδί (secret key) πρέπει να είναι μια μεγάλου μήκους τυχαία "
"τιμή και πρέπει να κρατηθεί μυστική.**"

msgid ""
"Make sure that the key used in production isn't used anywhere else and avoid "
"committing it to source control. This reduces the number of vectors from "
"which an attacker may acquire the key."
msgstr ""
"Σιγουρευτείτε ότι το κλειδί που χρησιμοποιείτε σε παραγωγικό περιβάλλον δεν "
"χρησιμοποιείται πουθενά αλλού και αποφύγετε να το κάνετε commit σε κάποιο "
"source control (πχ git, mercurial κλπ). Αυτό ελαχιστοποιεί τις πιθανότητες "
"όπου κάποιος κακόβουλος τρίτος θα μπορούσε να αποκτήσει πρόσβαση στο κλειδί "
"σας."

msgid ""
"Instead of hardcoding the secret key in your settings module, consider "
"loading it from an environment variable::"
msgstr ""
"Αντί να υπάρχει γραμμένο, ως έχει, το κλειδί στο module των ρυθμίσεων σας, "
"σκεφτείτε να το φορτώνετε από μια environment variable::"

msgid "or from a file::"
msgstr "ή από ένα αρχείο::"

msgid ":setting:`DEBUG`"
msgstr ":setting:`DEBUG`"

msgid "**You must never enable debug in production.**"
msgstr "**Δεν πρέπει ποτέ να έχετε ενεργοποιημένο το debug στην παραγωγή."

msgid ""
"You're certainly developing your project with :setting:`DEBUG = True "
"<DEBUG>`, since this enables handy features like full tracebacks in your "
"browser."
msgstr ""
"Εννοείται πως αναπτύσσετε το project σας με το :setting:`DEBUG = True "
"<DEBUG>`, αφού αυτό παρέχει μερικά χρήσιμα χαρακτηριστικά όπως full "
"tracebacks μέσα στον browser σας."

msgid ""
"For a production environment, though, this is a really bad idea, because it "
"leaks lots of information about your project: excerpts of your source code, "
"local variables, settings, libraries used, etc."
msgstr ""
"Ωστόσο, για ένα παραγωγικό περιβάλλον, αυτό είναι μια εντελώς κακή ιδέα, "
"επειδή διαρρέει πολλές πληροφορίες για το project σας: αποσπάσματα από τον "
"πηγαίο κώδικα σας, τοπικές μεταβλητές, ρυθμίσεις, βιβλιοθήκες που "
"χρησιμοποιείτε κλπ."

msgid "Environment-specific settings"
msgstr "Ρυθμίσεις ανάλογα το περιβάλλον"

msgid ":setting:`ALLOWED_HOSTS`"
msgstr ":setting:`ALLOWED_HOSTS`"

msgid ""
"When :setting:`DEBUG = False <DEBUG>`, Django doesn't work at all without a "
"suitable value for :setting:`ALLOWED_HOSTS`."
msgstr ""
"Όταν το :setting:`DEBUG = False <DEBUG>`, το Django δεν μπορεί να δουλέψει "
"χωρίς μια κατάλληλη τιμή για την ρύθμιση :setting:`ALLOWED_HOSTS`."

msgid ""
"This setting is required to protect your site against some CSRF attacks. If "
"you use a wildcard, you must perform your own validation of the ``Host`` "
"HTTP header, or otherwise ensure that you aren't vulnerable to this category "
"of attacks."
msgstr ""
"Αυτή η ρύθμιση είναι απαραίτητη για να προστατέψει το site σας από τυχόν "
"CSRF επιθέσεις. Αν χρησιμοποιήσετε ένα wildcard (πχ ``*``), θα πρέπει να "
"φτιάξετε το δικό σας validation για τον HTTP header με το όνομα ``Host`` ή "
"αλλιώς σιγουρευτείτε ότι δεν είστε ευάλωτοι από τέτοιου είδους επιθέσεις."

msgid ""
"You should also configure the Web server that sits in front of Django to "
"validate the host. It should respond with a static error page or ignore "
"requests for incorrect hosts instead of forwarding the request to Django. "
"This way you'll avoid spurious errors in your Django logs (or emails if you "
"have error reporting configured that way). For example, on nginx you might "
"setup a default server to return \"444 No Response\" on an unrecognized host:"
msgstr ""
"Θα πρέπει επίσης να ρυθμίσετε τον Web server, που βρίσκεται μπροστά από το "
"Django, για να κάνει validate τον host. Θα πρέπει να ανταποκριθεί (respond) "
"με μια στατική σελίδα σφάλματος ή να αγνοήσει τα requests για λανθασμένους "
"hosts αντί να τα προωθεί στο Django. Με αυτό τον τρόπο θα αποφύγετε ψεύτικα "
"σφάλματα μέσα στα Django logs σας (ή στα emails αν έχετε ρυθμίσει κατ’ αυτό "
"τον τρόπο την αναφορά σφαλμάτων). Για παράδειγμα, θα μπορούσατε να ρυθμίσετε "
"τον Web server nginx να επιστρέφει ένα σφάλμα \"444 No Response\" σε κάθε μη "
"αναγνωρίσιμο host:"

msgid ":setting:`CACHES`"
msgstr ":setting:`CACHES`"

msgid ""
"If you're using a cache, connection parameters may be different in "
"development and in production."
msgstr ""
"Αν χρησιμοποιείτε μια cache, οι ρυθμίσεις της σύνδεσης ενδέχεται να είναι "
"διαφορετικές μεταξύ του development και του production περιβάλλοντος."

msgid ""
"Cache servers often have weak authentication. Make sure they only accept "
"connections from your application servers."
msgstr ""
"Οι cache servers δεν έχουν συνήθως δυνατό σύστημα πιστοποίησης "
"(authentication). Σιγουρευτείτε ότι δέχονται συνδέσεις μόνο από τους "
"application servers σας."

msgid ""
"If you're using Memcached, consider using :ref:`cached sessions <cached-"
"sessions-backend>` to improve performance."
msgstr ""
"Αν χρησιμοποιείτε την Memcached, σκεφτείτε μήπως χρησιμοποιήσετε τα :ref:"
"`cached sessions <cached-sessions-backend>` για να βελτιώσετε την απόδοση "
"της εφαρμογής σας."

msgid ":setting:`DATABASES`"
msgstr ":setting:`DATABASES`"

msgid ""
"Database connection parameters are probably different in development and in "
"production."
msgstr ""
"Οι παράμετροι σύνδεσης με την βάση δεδομένων είναι πιθανώς διαφορετικές "
"μεταξύ development και production."

msgid ""
"Database passwords are very sensitive. You should protect them exactly like :"
"setting:`SECRET_KEY`."
msgstr ""
"Οι κωδικοί της βάσης δεδομένων είναι πολύ ευαίσθητοι. Άλλωστε πρόκειται για "
"κωδικούς που αν γνωστοποιηθούν, τα πραγματικά δεδομένα σας θα είναι "
"εκτεθειμένα. Θα πρέπει να τους προστατέψετε ακριβώς όπως το :setting:"
"`SECRET_KEY`."

msgid ""
"For maximum security, make sure database servers only accept connections "
"from your application servers."
msgstr ""
"Για μέγιστη ασφάλεια, σιγουρευτείτε ότι οι database servers δέχονται μόνο "
"συνδέσεις από τους δικούς σας application servers."

msgid "If you haven't set up backups for your database, do it right now!"
msgstr ""
"Αν δεν έχετε κάνει κάποιο backup για τη βάση δεδομένων σας, κάντε το τώρα! "
"Σκεφτείτε επίσης να κάνετε συχνά backup (πχ τα ξημερώματα κάθε μέρα) μέσω "
"ενός cron job."

msgid ":setting:`EMAIL_BACKEND` and related settings"
msgstr ":setting:`EMAIL_BACKEND` και σχετικές ρυθμίσεις"

msgid "If your site sends emails, these values need to be set correctly."
msgstr ""
"Αν το site σας στέλνει emails, αυτές οι τιμές πρέπει να οριστούν καταλλήλως."

msgid ""
"By default, Django sends email from webmaster@localhost and root@localhost. "
"However, some mail providers reject email from these addresses. To use "
"different sender addresses, modify the :setting:`DEFAULT_FROM_EMAIL` and :"
"setting:`SERVER_EMAIL` settings."
msgstr ""
"Από προεπιλογή, το Django στέλνει email από τις διευθύνσεις "
"webmaster@localhost και root@localhost. Ωστόσο, μερικοί πάροχοι email "
"απορρίπτουν τα email από αυτές τις διευθύνσεις. Για να χρησιμοποιήσετε "
"διαφορετικές διευθύνσεις αποστολέα, αλλάξτε τις ρυθμίσεις :setting:"
"`DEFAULT_FROM_EMAIL` και :setting:`SERVER_EMAIL`."

msgid ":setting:`STATIC_ROOT` and :setting:`STATIC_URL`"
msgstr ":setting:`STATIC_ROOT` και :setting:`STATIC_URL`"

msgid ""
"Static files are automatically served by the development server. In "
"production, you must define a :setting:`STATIC_ROOT` directory where :"
"djadmin:`collectstatic` will copy them."
msgstr ""
"Τα static files (στατικά αρχεία – css, fonts, js, εικόνες κλπ) "
"εξυπηρετούνται αυτόματα από τον development server. Στην παραγωγή, όμως, θα "
"πρέπει να ορίσετε έναν φάκελο :setting:`STATIC_ROOT` όπου η εντολή :djadmin:"
"`collectstatic` θα τα αντιγράψει."

msgid "See :doc:`/howto/static-files/index` for more information."
msgstr ""
"Δείτε το άρθρο See :doc:`Διαχειρίζοντας τα static files (εικόνες, "
"JavaScript, CSS) </howto/static-files/index>` για περισσότερες πληροφορίες."

msgid ":setting:`MEDIA_ROOT` and :setting:`MEDIA_URL`"
msgstr ":setting:`MEDIA_ROOT` και :setting:`MEDIA_URL`"

msgid ""
"Media files are uploaded by your users. They're untrusted! Make sure your "
"web server never attempts to interpret them. For instance, if a user uploads "
"a ``.php`` file, the web server shouldn't execute it."
msgstr ""
"Τα media files τα ανεβάζουν οι χρήστες σας. Χρήστης θεωρείται και ο Django "
"admin που έχει πρόσβαση στο Django admin και μέσα από κει ανεβάζει σε "
"κάποιον server φωτογραφίες, αρχεία κλπ. Αυτού του είδους τα αρχεία είναι μη "
"έμπιστα! Σιγουρευτείτε ότι ο Web server σας δεν θα πρέπει ποτέ να "
"προσπαθήσει να τα εκτελέσει-τρέξει. Για παράδειγμα, αν ένας χρήστης ανεβάσει "
"ένα αρχείο ``.php``, ο Web server δεν θα πρέπει να το εκτελέσει."

msgid "Now is a good time to check your backup strategy for these files."
msgstr ""
"Τώρα είναι μια καλή στιγμή να ελέγξετε την στρατηγική σας σχετικά με αυτού "
"του είδους τα αρχεία."

msgid "HTTPS"
msgstr "HTTPS"

msgid ""
"Any website which allows users to log in should enforce site-wide HTTPS to "
"avoid transmitting access tokens in clear. In Django, access tokens include "
"the login/password, the session cookie, and password reset tokens. (You "
"can't do much to protect password reset tokens if you're sending them by "
"email.)"
msgstr ""
"Κάθε website το οποίο επιτρέπει σε χρήστες να κάνουν log in, θα πρέπει να "
"χρησιμοποιούν HTTPS πρόσβαση για την αποφυγή της εκπομπής των διακριτικών "
"πρόσβασης χωρίς κρυπτογράφηση. Στο Django, τα διακριτικά πρόσβασης "
"περιλαμβάνουν τα login/password, το session cookie και τα password reset "
"tokens. (Δεν μπορείτε να κάνετε και πολλά για να προστατέψετε τα password "
"reset tokens αν τα στέλνετε με email.)"

msgid ""
"Protecting sensitive areas such as the user account or the admin isn't "
"sufficient, because the same session cookie is used for HTTP and HTTPS. Your "
"web server must redirect all HTTP traffic to HTTPS, and only transmit HTTPS "
"requests to Django."
msgstr ""
"Η προστασία των ευαίσθητων τομέων όπως ο λογαριασμός του χρήστη ή του admin "
"δεν είναι αρκετή, επειδή το ίδιο το session cookie χρησιμοποιείται για το "
"HTTP και το HTTPS. Ο Web server σας θα πρέπει αν ανακατευθύνει όλη την HTTP "
"κίνηση στην HTTPS και να εκπέμπει μόνο HTTPS requests στο Django."

msgid "Once you've set up HTTPS, enable the following settings."
msgstr "Όταν ρυθμίσετε το HTTPS, ενεργοποιήστε τις ακόλουθες ρυθμίσεις."

msgid ":setting:`CSRF_COOKIE_SECURE`"
msgstr ":setting:`CSRF_COOKIE_SECURE`"

msgid ""
"Set this to ``True`` to avoid transmitting the CSRF cookie over HTTP "
"accidentally."
msgstr ""
"Θέστε το σε ``True`` για να αποφύγετε την ακούσια εκπομπή του CSRF cookie "
"μέσω HTTP."

msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

msgid ""
"Set this to ``True`` to avoid transmitting the session cookie over HTTP "
"accidentally."
msgstr ""
"Θέστε το σε ``True`` για να αποφύγετε την ακούσια εκπομπή του session cookie "
"μέσω HTTP."

msgid "Performance optimizations"
msgstr "Βελτιστοποιήσεις απόδοσης"

msgid ""
"Setting :setting:`DEBUG = False <DEBUG>` disables several features that are "
"only useful in development. In addition, you can tune the following settings."
msgstr ""
"Θέτοντας το :setting:`DEBUG = False <DEBUG>` απενεργοποιεί πολλά "
"χαρακτηριστικά τα οποία είναι χρήσιμα μόνο στο development. Επιπροσθέτως, "
"μπορείτε να φέρετε στα μέτρα σας τις ακόλουθες ρυθμίσεις."

msgid ":setting:`CONN_MAX_AGE`"
msgstr ":setting:`CONN_MAX_AGE`"

msgid ""
"Enabling :ref:`persistent database connections <persistent-database-"
"connections>` can result in a nice speed-up when connecting to the database "
"accounts for a significant part of the request processing time."
msgstr ""
"Ενεργοποιώντας τις :ref:`μόνιμες συνδέσεις στη βάση δεδομένων <persistent-"
"database-connections>` θα έχετε, ως αποτέλεσμα, περισσότερη ταχύτητα όταν "
"συνδέεστε στη βάση δεδομένων σας για πολλαπλά request. Με άλλα λόγια, δεν "
"θέλετε να περιλαμβάνεται το ovehead για την εγκαθίδρυση νέας σύνδεσης στη "
"βάση για κάθε νέο request."

msgid "This helps a lot on virtualized hosts with limited network performance."
msgstr ""
"Αυτό βοηθάει πολύ σε virtualized hosts με περιορισμένη απόδοση του δικτύου."

msgid ":setting:`TEMPLATES`"
msgstr ":setting:`TEMPLATES`"

msgid ""
"Enabling the cached template loader often improves performance drastically, "
"as it avoids compiling each template every time it needs to be rendered. See "
"the :ref:`template loaders docs <template-loaders>` for more information."
msgstr ""
"Ενεργοποιώντας τον cached template loader, συχνά βελτιώνει δραστικά την "
"απόδοση, αφού αποφεύγει το compiling κάθε template κάθε φορά που χρειάζεται "
"να γίνει rendered. Δείτε στο άρθρο :ref:`template loaders <template-"
"loaders>` για περισσότερες πληροφορίες."

msgid "Error reporting"
msgstr "Αναφορά σφαλμάτων"

msgid ""
"By the time you push your code to production, it's hopefully robust, but you "
"can't rule out unexpected errors. Thankfully, Django can capture errors and "
"notify you accordingly."
msgstr ""
"Όταν ανεβάσετε το site σας για το ευρύ κοινό, θα είναι πιθανόν σταθερό και "
"πλήρως λειτουργικό, αλλά αυτό δε σημαίνει ότι έχετε υπολογίσει κάθε σφάλμα "
"που μπορεί να προκύψει. Ευτυχώς, το Django μπορεί να αιχμαλωτίσει τα "
"σφάλματα και να σας ειδοποιήσει καταλλήλως."

msgid ":setting:`LOGGING`"
msgstr ":setting:`LOGGING`"

msgid ""
"Review your logging configuration before putting your website in production, "
"and check that it works as expected as soon as you have received some "
"traffic."
msgstr ""
"Επανεξετάστε τις ρυθμίσεις του logging σας πριν ανεβάσετε το website σας και "
"ελέγξτε ότι δουλεύει πλήρως, μόλις αποκτήσετε κάποια κίνηση."

msgid "See :doc:`/topics/logging` for details on logging."
msgstr ""
"Δείτε στο άρθρο :doc:`/topics/logging` για περισσότερες πληροφορίες σχετικά "
"με το logging."

msgid ":setting:`ADMINS` and :setting:`MANAGERS`"
msgstr ":setting:`ADMINS` και :setting:`MANAGERS`"

msgid ":setting:`ADMINS` will be notified of 500 errors by email."
msgstr ""
"Οι :setting:`ADMINS` θα ειδοποιηθούν για σφάλματα τύπου 500 μέσω email."

msgid ""
":setting:`MANAGERS` will be notified of 404 errors. :setting:"
"`IGNORABLE_404_URLS` can help filter out spurious reports."
msgstr ""
"Οι :setting:`MANAGERS` θα ειδοποιηθούν για σφάλματα τύπου 404. Η ρύθμιση :"
"setting:`IGNORABLE_404_URLS` μπορεί να σας βοηθήσει να φιλτράρετε τυχόν "
"ψεύτικες αναφορές. Δείτε στο άρθρο :doc:`αναφορές σφαλμάτων </howto/error-"
"reporting>` για λεπτομέρειες σχετικά με αναφορές σφαλμάτων μέσω email."

msgid ""
"See :doc:`/howto/error-reporting` for details on error reporting by email."
msgstr ""
"Δείτε στο άρθρο :doc:`αναφορές σφαλμάτων </howto/error-reporting>` για "
"λεπτομέρειες σχετικά με αναφορές σφαλμάτων μέσω email."

msgid "Error reporting by email doesn't scale very well"
msgstr "Οι αναφορές σφαλμάτων μέσω email δεν κλιμακώνονται πολύ καλά"

msgid ""
"Consider using an error monitoring system such as Sentry_ before your inbox "
"is flooded by reports. Sentry can also aggregate logs."
msgstr ""
"Σκεφτείτε να χρησιμοποιήσετε ένα σύστημα παρακολούθησης όπως το Sentry_ πριν "
"τα εισερχόμενα σας ξεχειλίσουν από αναφορές. Το Sentry μπορεί επίσης να "
"ομαδοποιήσει τα logs."

msgid "Customize the default error views"
msgstr "Παραμετροποιώντας τα προεπιλεγμένα views σφαλμάτων"

msgid ""
"Django includes default views and templates for several HTTP error codes. "
"You may want to override the default templates by creating the following "
"templates in your root template directory: ``404.html``, ``500.html``, ``403."
"html``, and ``400.html``. The default views should suffice for 99% of Web "
"applications, but if you desire to customize them, see these instructions "
"which also contain details about the default templates:"
msgstr ""
"Το Django περιλαμβάνει μερικά προεπιλεγμένα views και templates για "
"διάφορους HTTP κωδικούς σφαλμάτων. Αυτά τα templates ίσως να μην "
"αντιπροσωπεύουν πλήρως την αίσθηση και την εμφάνιση με το υπόλοιπο site σας, "
"οπότε ίσως να θέλετε να τα αλλάξετε. Μπορείτε, βεβαίως, παρακάμπτοντας τα "
"προεπιλεγμένα templates και δημιουργώντας δικά σας μέσα στον πηγαίο φάκελο "
"που κρατάτε τα templates σας: ``404.html``, ``500.html``, ``403.html`` και "
"``400.html``. Τα προεπιλεγμένα views αρκούν για το 99% των Web εφαρμογών, "
"αλλά αν θέλετε να τα παραμετροποιήσετε, δείτε αυτές τις οδηγίες οι οποίες "
"περιλαμβάνουν, επίσης, λεπτομέρειες σχετικά με τα προεπιλεγμένα templates:"

msgid ":ref:`http_not_found_view`"
msgstr ":ref:`http_not_found_view`"

msgid ":ref:`http_internal_server_error_view`"
msgstr ":ref:`http_internal_server_error_view`"

msgid ":ref:`http_forbidden_view`"
msgstr ":ref:`http_forbidden_view`"

msgid ":ref:`http_bad_request_view`"
msgstr ":ref:`http_bad_request_view`"

msgid "Python Options"
msgstr "Επιλογές Python"

msgid ""
"It's strongly recommended that you invoke the Python process running your "
"Django application using the `-R`_ option or with the :envvar:"
"`PYTHONHASHSEED` environment variable set to ``random``. This option is "
"enabled by default starting with Python 3.3."
msgstr ""
"Προτείνεται να ενεργοποιείτε την Python process η οποία τρέχει την Django "
"εφαρμογή σας, χρησιμοποιώντας την επιλογή `-R`_ ή με την environment "
"variable :envvar:`PYTHONHASHSEED` της οποίας η τιμή θα είναι ``random``. "
"Αυτή η επιλογή είναι ενεργοποιημένη, από προεπιλογή, στην Python 3.3."

msgid ""
"These options help protect your site from denial-of-service (DoS) attacks "
"triggered by carefully crafted inputs. Such an attack can drastically "
"increase CPU usage by causing worst-case performance when creating ``dict`` "
"instances. See `oCERT advisory #2011-003 <http://www.ocert.org/advisories/"
"ocert-2011-003.html>`_ for more information."
msgstr ""
"Αυτές οι επιλογές, σας βοηθούν να προστατέψετε το site σας από denial-of-"
"service (DoS) επιθέσεις οι οποίες ενεργοποιούνται από προσεκτικά "
"δημιουργημένα inputs. Αυτού του είδους η επίθεση μπορεί να αυξήσει σημαντικά "
"την χρήση της CPU προκαλώντας πτώση της απόδοσης όταν δημιουργείτε ``dict`` "
"instances. Δείτε στο `oCERT advisory #2011-003 <http://www.ocert.org/"
"advisories/ocert-2011-003.html>`_ για περισσότερες πληροφορίες."

msgid "Deploying Django"
msgstr "Ανεβάζοντας το Django site σας για το ευρύ κοινό (deploying)"

msgid ""
"Django's chock-full of shortcuts to make Web developer's lives easier, but "
"all those tools are of no use if you can't easily deploy your sites. Since "
"Django's inception, ease of deployment has been a major goal."
msgstr ""
"Το Django είναι γεμάτο συντομεύσεις για να κάνει τη ζωή των Web developers "
"ευκολότερη, αλλά όλα αυτά τα εργαλεία είναι άχρηστα αν δεν μπορείτε να "
"ανεβάσετε εύκολα τα sites σας στο internet (deployment). Από την αρχή που "
"ξεκίνησε το Django, η ευκολία του deployment υπήρξε πάντα ένας σημαντικός "
"στόχος."

msgid ""
"If you're new to deploying Django and/or Python, we'd recommend you try :doc:"
"`mod_wsgi </howto/deployment/wsgi/modwsgi>` first. In most cases it'll be "
"the easiest, fastest, and most stable deployment choice."
msgstr ""
"Αν είστε νέος σχετικά με το deployment στο Django και/η της Python, "
"προτείνουμε να δοκιμάστε πρώτα το :doc:`mod_wsgi </howto/deployment/wsgi/"
"modwsgi>`. Στις περισσότερες περιπτώσεις θα είναι η ευκολότερη, γρηγορότερη "
"και η περισσότερο σταθερή deployment επιλογή."

msgid "Authenticating against Django's user database from Apache"
msgstr "Πιστοποίηση της βάσης δεδομένων ενός Django χρήστη μέσω Apache"

msgid ""
"Since keeping multiple authentication databases in sync is a common problem "
"when dealing with Apache, you can configure Apache to authenticate against "
"Django's :doc:`authentication system </topics/auth/index>` directly. This "
"requires Apache version >= 2.2 and mod_wsgi >= 2.0. For example, you could:"
msgstr ""
"Επειδή το να συγχρονίζετε πολλές πιστοποιημένες βάσεις δεδομένων είναι κοινό "
"πρόβλημα, μπορείτε να παραμετροποιήσετε τον Apache ούτως ώστε να "
"πιστοποιήσει εκείνος απ’ ευθείας το :doc:`σύστημα πιστοποίησης </topics/auth/"
"index>` του Django. Αυτό απαιτεί έκδοση του Apache >= 2.2 και mod_wsgi >= "
"2.0. Για παράδειγμα, θα μπορούσατε να:"

msgid ""
"Serve static/media files directly from Apache only to authenticated users."
msgstr ""
"Εξυπηρετήσετε τα static/media αρχεία απ’ ευθείας από τον Apache, μόνο σε "
"πιστοποιημένους χρήστες."

msgid ""
"Authenticate access to a Subversion_ repository against Django users with a "
"certain permission."
msgstr ""
"Πιστοποιήσετε την πρόσβαση σε ένα Subversion_ repository για χρήστες του "
"Django με συγκεκριμένα δικαιώματα."

msgid "Allow certain users to connect to a WebDAV share created with mod_dav_."
msgstr ""
"Επιτρέπετε σε συγκεκριμένους χρήστες να συνδεθούν σε ένα κοινόχρηστο WebDAV "
"με το mod_dav_."

msgid ""
"If you have installed a :ref:`custom User model <auth-custom-user>` and want "
"to use this default auth handler, it must support an ``is_active`` "
"attribute. If you want to use group based authorization, your custom user "
"must have a relation named 'groups', referring to a related object that has "
"a 'name' field. You can also specify your own custom mod_wsgi auth handler "
"if your custom cannot conform to these requirements."
msgstr ""
"Αν έχετε εγκαταστήσει ένα :ref:`δικό σας μοντέλο Χρήστη <auth-custom-user>` "
"και θέλετε να χρησιμοποιήσετε αυτόν τον προεπιλεγμένο διαχειριστή "
"πιστοποίησης, τότε το δικό σας μοντέλο χρήστη θα πρέπει να υποστηρίζει το "
"attribute ``is_active``. Αν θέλετε να χρησιμοποιήσετε πιστοποίηση η οποία "
"βασίζεται σε ομάδα (group), το δικό σας μοντέλο χρήστη θα πρέπει να έχει μια "
"συσχέτιση με το όνομα 'groups', που θα αναφέρεται σε ένα συσχετισμένο object "
"που θα έχει το πεδίο 'name'. Μπορείτε, επίσης, να προσδιορίσετε το δικό σας "
"mod_wsgi διαχειριστή πιστοποίησης, αν το δικό σας μοντέλο χρήστη δεν μπορεί "
"να ανταποκριθεί στις παραπάνω απαιτήσεις."

msgid "Authentication with ``mod_wsgi``"
msgstr "Πιστοποίηση με το ``mod_wsgi``"

msgid ""
"The use of ``WSGIApplicationGroup %{GLOBAL}`` in the configurations below "
"presumes that your Apache instance is running only one Django application. "
"If you are running more than one Django application, please refer to the "
"`Defining Application Groups`_ section of the mod_wsgi docs for more "
"information about this setting."
msgstr ""
"Η χρήση του ``WSGIApplicationGroup %{GLOBAL}`` στις παραμετροποιήσεις "
"παρακάτω, προϋποθέτει ότι το δικό σας instance του Apache τρέχει μόνο μια "
"Django εφαρμογή. Αν τρέχετε παραπάνω από μια Django εφαρμογές, παρακαλούμε "
"ανατρέξτε στην ενότητα `Defining Application Groups`_ του εγχειριδίου του "
"mod_wsgi για περισσότερες πληροφορίες σχετικά με αυτή τη ρύθμιση."

msgid ""
"Make sure that mod_wsgi is installed and activated and that you have "
"followed the steps to setup :doc:`Apache with mod_wsgi </howto/deployment/"
"wsgi/modwsgi>`."
msgstr ""
"Σιγουρευτείτε ότι το mod_wsgi είναι εγκατεστημένο, ενεργοποιημένο και έχετε "
"ακολουθήσει τα βήματα για να εγκαταστήσετε το :doc:`Apache με το mod_wsgi </"
"howto/deployment/wsgi/modwsgi>`."

msgid ""
"Next, edit your Apache configuration to add a location that you want only "
"authenticated users to be able to view:"
msgstr ""
"Επόμενο βήμα είναι να επεξεργαστείτε τον Apache server σας για να προσθέσετε "
"μια τοποθεσία (location) όπου μόνο οι πιστοποιημένοι χρήστες θα μπορούν να "
"βλέπουν:"

msgid ""
"The ``WSGIAuthUserScript`` directive tells mod_wsgi to execute the "
"``check_password`` function in specified wsgi script, passing the user name "
"and password that it receives from the prompt. In this example, the "
"``WSGIAuthUserScript`` is the same as the ``WSGIScriptAlias`` that defines "
"your application :doc:`that is created by django-admin startproject </howto/"
"deployment/wsgi/index>`."
msgstr ""
"Το directive ``WSGIAuthUserScript`` λέει στο mod_wsgi να εκτελέσει τη "
"συνάρτηση ``check_password`` στο προσδιορισμένο wsgi script, περνώντας το "
"user name και το password το οποίο λαμβάνει από την είσοδο (πχ κονσόλα). Σε "
"αυτό το παράδειγμα, το ``WSGIAuthUserScript`` είναι το ίδιο με το "
"``WSGIScriptAlias`` που ορίζει την εφαρμογή σας :doc:`η οποία δημιουργήθηκε "
"με την εντολή django-admin startproject </howto/deployment/wsgi/index>`."

msgid "Using Apache 2.2 with authentication"
msgstr "Χρησιμοποιώντας τον Apache 2.2 με πιστοποίηση"

msgid "Make sure that ``mod_auth_basic`` and ``mod_authz_user`` are loaded."
msgstr ""
"Σιγουρευτείτε ότι τα modules ``mod_auth_basic`` και ``mod_authz_user`` είναι "
"φορτωμένα."

msgid ""
"These might be compiled statically into Apache, or you might need to use "
"LoadModule to load them dynamically in your ``httpd.conf``:"
msgstr ""
"Αυτά τα modules θα μπορούσαν να συγκεντρωθούν στατικά μέσα στον Apache ή θα "
"μπορούσατε να χρησιμοποιήσετε το LoadModule για να τα φορτώσετε δυναμικά "
"μέσα στο αρχείο ``httpd.conf``:"

msgid ""
"Finally, edit your WSGI script ``mysite.wsgi`` to tie Apache's "
"authentication to your site's authentication mechanisms by importing the "
"``check_password`` function::"
msgstr ""
"Τέλος, επεξεργαστείτε το WSGI script σας ``mysite.wsgi`` για να συνδέσετε "
"την πιστοποίηση του Apache με τους μηχανισμούς πιστοποίησης του site σας, "
"κάνοντας importing τη συνάρτηση ``check_password``::"

msgid ""
"Requests beginning with ``/secret/`` will now require a user to authenticate."
msgstr ""
"Πλέον, τα requests που θα αρχίζουν με ``/secret/`` θα απαιτούν πιστοποίηση "
"από τον χρήστη."

msgid ""
"The mod_wsgi `access control mechanisms documentation`_ provides additional "
"details and information about alternative methods of authentication."
msgstr ""
"Το mod_wsgi `access control mechanisms documentation`_ παρέχει επιπρόσθετες "
"λεπτομέρειες και πληροφορίες σχετικά με εναλλακτικές μεθόδους πιστοποίησης."

msgid "Authorization with ``mod_wsgi`` and Django groups"
msgstr "Πιστοποίηση με το ``mod_wsgi`` και τις ομάδες του Django"

msgid ""
"mod_wsgi also provides functionality to restrict a particular location to "
"members of a group."
msgstr ""
"Το mod_wsgi προσφέρει, επίσης, τη δυνατότητα να απαγορεύει την είσοδο σε μια "
"συγκεκριμένη τοποθεσία για κάποια μέλη μιας ομάδας."

msgid "In this case, the Apache configuration should look like this:"
msgstr ""
"Σε αυτή την περίπτωση, ο Apache server σας θα πρέπει να δείχνει κάπως έτσι:"

msgid ""
"To support the ``WSGIAuthGroupScript`` directive, the same WSGI script "
"``mysite.wsgi`` must also import the ``groups_for_user`` function which "
"returns a list groups the given user belongs to."
msgstr ""
"Για την υποστήριξη του directive ``WSGIAuthGroupScript``, το ίδιο WSGI "
"script ``mysite.wsgi`` πρέπει να κάνει import τη συνάρτηση "
"``groups_for_user`` η οποία επιστρέφει μια λίστα από ομάδες στις οποίες "
"ανήκει ο συγκεκριμένος χρήστης."

msgid ""
"Requests for ``/secret/`` will now also require user to be a member of the "
"\"secret-agents\" group."
msgstr ""
"Πλέον, τα requests που θα ξεκινούν με ``/secret/`` θα απαιτούν, επίσης, από "
"τον χρήστη να είναι μέλος της ομάδας με το όνομα \"secret-agents\"."

msgid "How to use Django with Gunicorn"
msgstr "Πως να χρησιμοποιήσετε το Django με το Gunicorn"

msgid ""
"Gunicorn_ ('Green Unicorn') is a pure-Python WSGI server for UNIX. It has no "
"dependencies and is easy to install and use."
msgstr ""
"Ο Gunicorn_ ('Green Unicorn') είναι ένας αμιγώς Python WSGI server για το "
"UNIX. Δεν έχει dependencies και είναι εύκολος στη χρήση και την εγκατάσταση."

msgid "Installing Gunicorn"
msgstr "Εγκαθιστώντας τον Gunicorn"

msgid ""
"Installing gunicorn is as easy as ``pip install gunicorn``. For more "
"details, see the `gunicorn documentation`_."
msgstr ""
"Η εγκατάσταση του gunicorn είναι τόσο εύκολη όσο το να γράψετε ``pip install "
"gunicorn``. Για περισσότερες πληροφορίες δείτε στο `gunicorn documentation`_."

msgid "Running Django in Gunicorn as a generic WSGI application"
msgstr "Τρέχοντας το Django στον Gunicorn ως μια γενική WSGI εφαρμογή"

msgid ""
"When Gunicorn is installed, a ``gunicorn`` command is available which starts "
"the Gunicorn server process. At its simplest, gunicorn just needs to be "
"called with the location of a module containing a WSGI application object "
"named `application`. So for a typical Django project, invoking gunicorn "
"would look like::"
msgstr ""
"Όταν εγκατασταθεί ο Gunicorn server, η εντολή ``gunicorn`` θα είναι "
"διαθέσιμη στο σύστημα σας η οποία ξεκινά τον Gunicorn server. Στην πιο απλή "
"μορφή της, η εντολή gunicorn χρειάζεται μια παράμετρο η οποία θα δείχνει την "
"τοποθεσία του module που περιέχει ένα WSGI application object με το όνομα "
"`application`. Άρα, σε ένα συνηθισμένο Django project, η ενεργοποίηση του "
"gunicorn θα έμοιαζε κάπως έτσι::"

msgid ""
"This will start one process running one thread listening on "
"``127.0.0.1:8000``. It requires that your project be on the Python path; the "
"simplest way to ensure that is to run this command from the same directory "
"as your ``manage.py`` file."
msgstr ""
"Αυτή η εντολή θα ξεκινήσει ένα process το οποίο τρέχει ένα thread που ακούει "
"στην πόρτα ``127.0.0.1:8000``. Απαιτεί ότι το project σας βρίσκεται στο "
"Python path. Για να βεβαιωθείτε ότι βρίσκεται, απλώς τρέξετε την παραπάνω "
"εντολή καθώς θα βρίσκεστε στον ίδιο φάκελο που βρίσκεται το αρχείο ``manage."
"py``."

msgid "See Gunicorn's `deployment documentation`_ for additional tips."
msgstr ""
"Δείτε στο `deployment documentation`_ του Gunicorn για περισσότερες "
"συμβουλές."

msgid "How to deploy with WSGI"
msgstr "Πως να ανεβάσετε το site σας χρησιμοποιώντας το WSGI"

msgid ""
"Django's primary deployment platform is WSGI_, the Python standard for web "
"servers and applications."
msgstr ""
"Η βασική πλατφόρμα του Django για να ανεβάσετε το site σας (deploying) είναι "
"το WSGI_, το Python στάνταρντ για τους Web servers και τις εφαρμογές. Αν δεν "
"γνωρίζετε τι είναι το WSGI (Web Server Gateway Interface) θα προσπαθήσουμε "
"να σας το εξηγήσουμε με λίγα λόγια εδώ: ένας παραδοσιακός Web server δεν "
"καταλαβαίνει ή δεν γνωρίζει πως να τρέξει μια Python εφαρμογή. Για το λόγο "
"αυτό χρειάζεται να υπάρξει ένας μεσολαβητής ο οποίος θα στέκεται μεταξύ του "
"Web server και της εφαρμογής σας (πχ μια Django ή κάποια άλλη Python "
"εφαρμογή). Αυτός ο μεσολαβητής ονομάζεται WSGI server και μια από τις "
"αρμοδιότητες του είναι να καλεί ένα callable object που βρίσκεται στην "
"Python εφαρμογή σας. Ο WSGI server τρέχει ως ένα διαφορετικό process και "
"ακούει σε διαφορετική πόρτα από αυτή που ακούει ο Web server. Η πιο "
"συνηθισμένη υλοποίηση ενός WSGI server είναι η εξής: ένας browser ζητά την "
"εμφάνιση μιας HTML σελίδας, στην πόρτα 80 όπου ακούει ο Web server. Αφού "
"πάρει το αίτημα ο Web server ζητάει από τον WSGI server, μέσω μιας άλλης "
"πόρτας πχ 8000, να του δώσει την HTML που ζητήθηκε. Ο WSGI server, με τη "
"σειρά του, καλεί το callable object της εφαρμογής σας και εκείνη τη στιγμή "
"ξεκινούν οι απαραίτητες διαδικασίες για να παραχθεί η ζητούμενη HTML. Τέλος, "
"η εφαρμογή σας δίνει την HTML στον WSGI server, αυτός στον Web server και "
"τελικά φθάνει στον browser όπου προβάλλεται."

msgid ""
"Django's :djadmin:`startproject` management command sets up a simple default "
"WSGI configuration for you, which you can tweak as needed for your project, "
"and direct any WSGI-compliant application server to use."
msgstr ""
"Η διαχειριστική εντολή του Django :djadmin:`startproject` δημιουργεί μια "
"μικρή προεπιλεγμένη παραμετροποίηση του WSGI για εσάς, την οποία μπορείτε να "
"αλλάξετε για τις ανάγκες του project σας και να κατευθύνετε οποιονδήποτε "
"συμβατό με το WSGI application server, για χρήση."

msgid ""
"Django includes getting-started documentation for the following WSGI servers:"
msgstr ""
"Το Django περιλαμβάνει εγχειρίδια για αρχάριους για τους ακόλουθους WSGI "
"servers:"

msgid "The ``application`` object"
msgstr "Το ``application`` object"

msgid ""
"The key concept of deploying with WSGI is the ``application`` callable which "
"the application server uses to communicate with your code. It's commonly "
"provided as an object named ``application`` in a Python module accessible to "
"the server."
msgstr ""
"Η έννοια κλειδί του deploying με το WSGI είναι το ``application`` callable "
"το οποίο χρησιμοποιεί ο application server για να επικοινωνήσει με τον "
"κώδικα σας. Συνήθως χρησιμοποιείται ως object με το όνομα ``application`` σε "
"κάποιο Python module στο οποίο έχει πρόσβαση ο server."

msgid ""
"The :djadmin:`startproject` command creates a file :file:`<project_name>/"
"wsgi.py` that contains such an ``application`` callable."
msgstr ""
"Η εντολή :djadmin:`startproject` δημιουργεί ένα αρχείο :file:`<project_name>/"
"wsgi.py` το οποίο περιέχει ένα τέτοιο ``application`` callable."

msgid ""
"It's used both by Django's development server and in production WSGI "
"deployments."
msgstr ""
"Χρησιμοποιείται όχι μόνο από τον development server του Django αλλά και σε "
"παραγωγικό περιβάλλον από WSGI deployments."

msgid ""
"WSGI servers obtain the path to the ``application`` callable from their "
"configuration. Django's built-in server, namely the :djadmin:`runserver` "
"command, reads it from the :setting:`WSGI_APPLICATION` setting. By default, "
"it's set to ``<project_name>.wsgi.application``, which points to the "
"``application`` callable in :file:`<project_name>/wsgi.py`."
msgstr ""
"Οι WSGI servers αποκτούν το path στο ``application`` callable από την "
"παραμετροποίηση τους. Ο προεγκατεστημένος server του Django, που τρέχετε με "
"την εντολή :djadmin:`runserver`, διαβάζει το path από τη ρύθμιση :setting:"
"`WSGI_APPLICATION`. Από προεπιλογή, είναι σεταρισμένη στην τιμή "
"``<project_name>.wsgi.application``, η οποία δείχνει στο ``application`` "
"callable που βρίσκεται μέσα στο αρχείο :file:`<project_name>/wsgi.py`."

msgid "Configuring the settings module"
msgstr "Παραμετροποιώντας το module των ρυθμίσεων"

msgid ""
"When the WSGI server loads your application, Django needs to import the "
"settings module — that's where your entire application is defined."
msgstr ""
"Όταν ο WSGI server φορτώσει την εφαρμογή σας, το Django χρειάζεται να κάνει "
"import το module των γενικών ρυθμίσεων σας — εκεί είναι το μέρος όπου "
"ορίζεται ολόκληρη η εφαρμογή σας."

msgid ""
"Django uses the :envvar:`DJANGO_SETTINGS_MODULE` environment variable to "
"locate the appropriate settings module. It must contain the dotted path to "
"the settings module. You can use a different value for development and "
"production; it all depends on how you organize your settings."
msgstr ""
"Το Django χρησιμοποιεί την environment variable :envvar:"
"`DJANGO_SETTINGS_MODULE`  για να εντοπίσει το κατάλληλο module ρυθμίσεων. Η "
"τιμή αυτή πρέπει να περιέχει το μονοπάτι για το module των ρυθμίσεων σύμφωνα "
"με τελείες (πχ ``myproject.settings`` και όχι ``myproject/settings.py``). "
"Μπορείτε να χρησιμοποιήσετε διαφορετική τιμή αυτής της μεταβλητής για "
"development και production περιβάλλοντα. Όλα εξαρτώνται από το πως έχετε "
"οργανώσει τις ρυθμίσεις σας."

msgid ""
"If this variable isn't set, the default :file:`wsgi.py` sets it to ``mysite."
"settings``, where ``mysite`` is the name of your project. That's how :"
"djadmin:`runserver` discovers the default settings file by default."
msgstr ""
"Αν αυτή η μεταβλητή δεν έχει οριστεί, το προεπιλεγμένο αρχείο :file:`wsgi."
"py` τη θέτει στην τιμή ``mysite.settings``, όπου το ``mysite`` είναι το "
"όνομα του project σας. Με αυτό τον τρόπο, από προεπιλογή, η εντολή :djadmin:"
"`runserver` ανακαλύπτει το προεπιλεγμένο αρχείο ρυθμίσεων."

msgid ""
"Since environment variables are process-wide, this doesn't work when you run "
"multiple Django sites in the same process. This happens with mod_wsgi."
msgstr ""
"Εφόσον τις environment variables τις βλέπει όλο το σύστημα καθολικώς, αυτή η "
"μέθοδος δεν θα δουλέψει αν έχετε πολλά Django sites μέσα στο ίδιο process. "
"Αυτό συμβαίνει με το mod_wsgi (ένας WSGI server από αρκετούς που είναι "
"διαθέσιμοι)."

msgid ""
"To avoid this problem, use mod_wsgi's daemon mode with each site in its own "
"daemon process, or override the value from the environment by enforcing ``os."
"environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` in your :file:"
"`wsgi.py`."
msgstr ""
"Για να αποφύγετε τέτοιου είδους προβλήματα, χρησιμοποιήστε το mod_wsgi σε "
"daemon mode με κάθε site σε δικό του daemon process ή παρακάμψτε (override) "
"την τιμή από το environment θέτοντας μια διαφορετική, ως ``os."
"environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` μέσα στο αρχείο :"
"file:`wsgi.py`."

msgid "Applying WSGI middleware"
msgstr "Εφαρμόζοντας ένα WSGI middleware"

msgid ""
"To apply `WSGI middleware`_ you can simply wrap the application object. For "
"instance you could add these lines at the bottom of :file:`wsgi.py`::"
msgstr ""
"Για να εφαρμόσετε ένα `WSGI middleware`_ μπορείτε, απλώς, να κάνετε wrap το "
"application object. Για παράδειγμα, θα μπορούσατε να προσθέσετε αυτές τις "
"γραμμές στο τέλος του αρχείου :file:`wsgi.py`::"

msgid ""
"You could also replace the Django WSGI application with a custom WSGI "
"application that later delegates to the Django WSGI application, if you want "
"to combine a Django application with a WSGI application of another framework."
msgstr ""
"Μπορείτε επίσης να αντικαταστήσετε το Django WSGI application με ένα δικό "
"σας WSGI application που το τελευταίο θα ανατεθεί στο Django WSGI "
"application, αν θέλετε να συνδυάσετε μια Django εφαρμογή με μια WSGI "
"εφαρμογή από ένα άλλο framework."

msgid ""
"Some third-party WSGI middleware do not call ``close`` on the response "
"object after handling a request. In those cases the :data:`~django.core."
"signals.request_finished` signal isn't sent. This can result in idle "
"connections to database and memcache servers."
msgstr ""
"Μερικά τρίτα WSGI middleware δεν καλούν τη μέθοδο ``close`` στο response "
"object αφού έχουν τελειώσει με το request. Σε αυτές τις περιπτώσεις το σήμα :"
"data:`~django.core.signals.request_finished` δεν στέλνεται. Αυτό μπορεί να "
"προκαλέσει αδρανείς συνδέσεις (idle connections) στη βάση δεδομένων και "
"στους memcache servers."

msgid "How to use Django with Apache and ``mod_wsgi``"
msgstr "Πως να χρησιμοποιήσετε το Django με τον Apache και το ``mod_wsgi``"

msgid ""
"Deploying Django with Apache_ and `mod_wsgi`_ is a tried and tested way to "
"get Django into production."
msgstr ""
"Το να ανεβάσετε το Django site σας (deploying) στην παραγωγή (production) "
"χρησιμοποιώντας τον Apache_ Web server και το `mod_wsgi`_ είναι μια "
"δοκιμασμένη και πετυχημένη μέθοδος."

msgid ""
"mod_wsgi is an Apache module which can host any Python WSGI_ application, "
"including Django. Django will work with any version of Apache which supports "
"mod_wsgi."
msgstr ""
"Το mod_wsgi είναι ένα Apache module το οποίο μπορεί να φιλοξενήσει κάθε "
"Python WSGI_ εφαρμογή, συμπεριλαμβανομένου και του Django. Το Django θα "
"δουλέψει με κάθε έκδοση του Apache που υποστηρίζει το mod_wsgi."

msgid ""
"The `official mod_wsgi documentation`_ is fantastic; it's your source for "
"all the details about how to use mod_wsgi. You'll probably want to start "
"with the `installation and configuration documentation`_."
msgstr ""
"Το `official mod_wsgi documentation`_ είναι φανταστικό. Είναι η πηγή για "
"όλες τις λεπτομέρειες σχετικά με τη χρήση του mod_wsgi. Το πιο πιθανό είναι "
"να ξεκινήσετε με το `installation and configuration documentation`_."

msgid "Basic configuration"
msgstr "Βασική παραμετροποίηση"

msgid ""
"Once you've got mod_wsgi installed and activated, edit your Apache server's "
"`httpd.conf`_ file and add the following. If you are using a version of "
"Apache older than 2.4, replace ``Require all granted`` with ``Allow from "
"all`` and also add the line ``Order deny,allow`` above it."
msgstr ""
"Αφού εγκαταστήσετε και ενεργοποιήσετε το mod_wsgi, επεξεργαστείτε το αρχείο "
"`httpd.conf`_ του Apache Web server και προσθέστε τα ακόλουθα. Αν "
"χρησιμοποιείτε κάποια έκδοση του Apache παλαιότερη της 2.4, αντικαταστήστε "
"το ``Require all granted`` με το ``Allow from all`` και επίσης προσθέστε τη "
"γραμμή ``Order deny,allow`` από πάνω."

msgid ""
"The first bit in the ``WSGIScriptAlias`` line is the base URL path you want "
"to serve your application at (``/`` indicates the root url), and the second "
"is the location of a \"WSGI file\" -- see below -- on your system, usually "
"inside of your project package (``mysite`` in this example). This tells "
"Apache to serve any request below the given URL using the WSGI application "
"defined in that file."
msgstr ""
"Η πρώτη παράμετρος στη γραμμή του ``WSGIScriptAlias`` είναι το βασικό URL "
"path που θέλετε να εξυπηρετηθεί η εφαρμογή σας (η κάθετος, ``/``, "
"υποδεικνύει το root url) και η δεύτερη είναι η τοποθεσία που βρίσκεται το "
"\"WSGI file\" -- δείτε παρακάτω -- στο σύστημα σας, συνήθως μέσα στο φάκελο "
"του project σας (``mysite``, σε αυτό το παράδειγμα). Αυτό λέει στον Apache "
"να εξυπηρετήσει κάθε request κάτω από αυτό το url (αν κατέχετε το url με το "
"όνομα πχ www.mysite.com τότε θα εξυπηρετηθούν όλα τα urls που ξεκινούν με "
"αυτό το όνομα) χρησιμοποιώντας την WSGI εφαρμογή η οποία ορίζεται σε αυτό το "
"αρχείο (``wsgi.py``)."

msgid ""
"The ``WSGIPythonPath`` line ensures that your project package is available "
"for import on the Python path; in other words, that ``import mysite`` works."
msgstr ""
"Η γραμμή ``WSGIPythonPath`` βεβαιώνει ότι το project σας θα είναι διαθέσιμο "
"για να γίνει import στο Python path. Με άλλα λόγια, ότι το ``import mysite`` "
"δουλεύει."

msgid ""
"The ``<Directory>`` piece just ensures that Apache can access your :file:"
"`wsgi.py` file."
msgstr ""
"Το κομμάτι του ``<Directory>`` απλώς βεβαιώνει ότι ο Apache μπορεί να έχει "
"πρόσβαση στο αρχείο σας :file:`wsgi.py`."

msgid ""
"Next we'll need to ensure this :file:`wsgi.py` with a WSGI application "
"object exists. As of Django version 1.4, :djadmin:`startproject` will have "
"created one for you; otherwise, you'll need to create it. See the :doc:`WSGI "
"overview documentation</howto/deployment/wsgi/index>` for the default "
"contents you should put in this file, and what else you can add to it."
msgstr ""
"Επόμενο βήμα είναι να σιγουρευτούμε ότι υπάρχει το αρχείο :file:`wsgi.py` με "
"το WSGI application object. Από την έκδοση του Django 1.4 και μετά, η "
"εντολή :djadmin:`startproject` θα δημιουργήσει ένα τέτοιο αρχείο. Αν όχι, θα "
"χρειαστεί να το δημιουργήσετε εσείς. Δείτε στο :doc:`εγχειρίδιο του WSGI </"
"howto/deployment/wsgi/index>` για τα προεπιλεγμένα περιεχόμενα που μπορείτε "
"να βάλτε σε αυτό το αρχείο καθώς και άλλα πράγματα που μπορείτε να "
"προσθέσετε."

msgid ""
"If multiple Django sites are run in a single mod_wsgi process, all of them "
"will use the settings of whichever one happens to run first. This can be "
"solved by changing::"
msgstr ""
"Αν μια mod_wsgi process τρέχει πολλά Django sites, τότε όλα τα sites θα "
"χρησιμοποιήσουν τις ρυθμίσεις του Django της εφαρμογής που θα τύχει να "
"τρέξει πρώτη. Αυτό το πρόβλημα μπορεί να λυθεί αλλάζοντας το::"

msgid "in ``wsgi.py``, to::"
msgstr "μέσα στο αρχείο ``wsgi.py``, με το::"

msgid ""
"or by :ref:`using mod_wsgi daemon mode<daemon-mode>` and ensuring that each "
"site runs in its own daemon process."
msgstr ""
"ή :ref:`χρησιμοποιώντας το mod_wsgi daemon mode <daemon-mode>` και "
"βεβαιώνοντας ότι κάθε site τρέχει σε ένα δικό του daemon process."

msgid "Fixing ``UnicodeEncodeError`` for file uploads"
msgstr "Διορθώνοντας το σφάλμα ``UnicodeEncodeError`` για uploads αρχείων"

msgid ""
"If you get a ``UnicodeEncodeError`` when uploading files with file names "
"that contain non-ASCII characters, make sure Apache is configured to accept "
"non-ASCII file names::"
msgstr ""
"Αν λαμβάνετε το σφάλμα ``UnicodeEncodeError`` όταν ανεβάζετε αρχεία που τα "
"ονόματα τους περιέχουν χαρακτήρες που δεν ανήκουν στον ASCII κώδικα (όπως "
"είναι οι ελληνικοί χαρακτήρες), σιγουρευτείτε ότι ο Apache είναι ρυθμισμένος "
"να δέχεται ονόματα αρχείων με χαρακτήρες που δεν είναι ASCII::"

msgid ""
"A common location to put this configuration is ``/etc/apache2/envvars``."
msgstr ""
"Ένα συνηθισμένο μέρος για να βάλετε τα άνωθεν είναι το ``/etc/apache2/"
"envvars``."

msgid ""
"See the :ref:`unicode-files` section of the Unicode reference guide for "
"details."
msgstr ""
"Δείτε στην ενότητα :ref:`Αρχεία <unicode-files>` του Unicode οδηγού για "
"λεπτομέρειες."

msgid "Using a ``virtualenv``"
msgstr "Χρησιμοποιώντας ένα ``virtualenv``"

msgid ""
"If you install your project's Python dependencies inside a `virtualenv`_, "
"you'll need to add the path to this virtualenv's ``site-packages`` directory "
"to your Python path as well. To do this, add an additional path to your "
"``WSGIPythonPath`` directive, with multiple paths separated by a colon (``:"
"``) if using a UNIX-like system, or a semicolon (``;``) if using Windows. If "
"any part of a directory path contains a space character, the complete "
"argument string to ``WSGIPythonPath`` must be quoted:"
msgstr ""
"Αν εγκαταστήσετε τα Python dependencies του project σας μέσα σε ένα "
"`virtualenv`_, θα χρειαστεί, επίσης, να προσθέσετε το path του φακέλου "
"``site-packages`` του virtualenv στο Python path σας. Για να το κάνετε αυτό, "
"προσθέστε ένα επιπλέον path στο ``WSGIPythonPath`` directive. Αν το σύστημα "
"μας βασίζεται στο UNIX τότε διαχωρίστε τα paths με άνω-κάτω τελεία (``:``), "
"ενώ αν βασίζεται σε Windows τα διαχωρίζετε με ερωτηματικό (``;``). Αν κάποιο "
"κομμάτι του path περιέχει κενό, τότε θα πρέπει όλο το path να συμπεριληφθεί "
"σε μονά ή διπλά εισαγωγικά (``’’`` ή ``””``):"

msgid ""
"Make sure you give the correct path to your virtualenv, and replace "
"``python3.X`` with the correct Python version (e.g. ``python3.4``)."
msgstr ""
"Σιγουρευτείτε ότι δώσατε το σωστό path για το virtualenv σας καθώς και "
"αντικαταστήσατε το ``python3.X`` με τη σωστή έκδοση Python που "
"χρησιμοποιείτε (πχ ``python3.4``)."

msgid "Using ``mod_wsgi`` daemon mode"
msgstr "Χρησιμοποιώντας το ``mod_wsgi`` daemon mode"

msgid ""
"\"Daemon mode\" is the recommended mode for running mod_wsgi (on non-Windows "
"platforms). To create the required daemon process group and delegate the "
"Django instance to run in it, you will need to add appropriate "
"``WSGIDaemonProcess`` and ``WSGIProcessGroup`` directives. A further change "
"required to the above configuration if you use daemon mode is that you can't "
"use ``WSGIPythonPath``; instead you should use the ``python-path`` option to "
"``WSGIDaemonProcess``, for example:"
msgstr ""
"Η λειτουργία daemon (\"daemon mode\") είναι η προτεινόμενη λειτουργία για να "
"τρέχετε το mod_wsgi (σε πλατφόρμες εκτός Windows). Για να δημιουργήσετε το "
"απαραίτητο daemon process group και να εξουσιοδοτήσετε το Django instance να "
"το τρέξει, θα πρέπει να προσθέσετε τα κατάλληλα directives "
"``WSGIDaemonProcess`` και ``WSGIProcessGroup``. Αν χρησιμοποιείτε την "
"παραπάνω ρύθμιση με το daemon mode δεν θα μπορείτε να χρησιμοποιήσετε το "
"``WSGIPythonPath``. Αντ’ αυτού θα πρέπει να χρησιμοποιήσετε την επιλογή "
"``python-path`` μέσα στο ``WSGIDaemonProcess``. Για παράδειγμα:"

msgid ""
"If you want to serve your project in a subdirectory (``https://example.com/"
"mysite`` in this example), you can add ``WSGIScriptAlias`` to the "
"configuration above:"
msgstr ""
"Αν θέλετε να εξυπηρετήσετε το project σας σε κάποιον υποφάκελο (πχ στη "
"διεύθυνση ``https://example.com/mysite``), μπορείτε να προσθέσετε το "
"``WSGIScriptAlias`` στην παραπάνω παραμετροποίηση:"

msgid ""
"See the official mod_wsgi documentation for `details on setting up daemon "
"mode`_."
msgstr ""
"Δείτε το επίσημο εγχειρίδιο του mod_wsgi για περισσότερες λεπτομέρειες στην "
"παραμετροποίηση του `daemon mode <https://modwsgi.readthedocs.io/en/develop/"
"user-guides/quick-configuration-guide.html#delegation-to-daemon-process>`_."

msgid "Serving files"
msgstr "Εξυπηρετώντας αρχεία"

msgid ""
"Django doesn't serve files itself; it leaves that job to whichever Web "
"server you choose."
msgstr ""
"Το Django δεν εξυπηρετεί το ίδιο, αρχεία. Αυτό το αφήνει στον Web server τον "
"οποίο θα διαλέξετε εσείς."

msgid ""
"We recommend using a separate Web server -- i.e., one that's not also "
"running Django -- for serving media. Here are some good choices:"
msgstr ""
"Προτείνουμε να διαλέξετε έναν διαφορετικό Web server -- πχ κάποιον ο οποίος "
"δεν τρέχει ήδη Django -- για να εξυπηρετήσετε τα media files. Παρακάτω "
"φαίνονται μερικές καλές επιλογές:"

msgid "Nginx_"
msgstr "Nginx_"

msgid "A stripped-down version of Apache_"
msgstr "`Μια stripped-down έκδοση του Apache <https://httpd.apache.org/>`_"

msgid ""
"If, however, you have no option but to serve media files on the same Apache "
"``VirtualHost`` as Django, you can set up Apache to serve some URLs as "
"static media, and others using the mod_wsgi interface to Django."
msgstr ""
"Αν, παρόλ’ αυτά, δεν έχετε άλλη επιλογή παρά να εξυπηρετήσετε τα media files "
"στον ίδιο Apache ``VirtualHost`` που τρέχει και το Django, μπορείτε να "
"ρυθμίσετε τον Apache να εξυπηρετήσει μερικά URLs ως static media και άλλα "
"χρησιμοποιώντας το mod_wsgi interface στο Django."

msgid ""
"This example sets up Django at the site root, but serves ``robots.txt``, "
"``favicon.ico``, and anything in the ``/static/`` and ``/media/`` URL space "
"as a static file. All other URLs will be served using mod_wsgi:"
msgstr ""
"Αυτό το παράδειγμα ρυθμίζει το Django στο site root, αλλά εξυπηρετεί τα "
"αρχεία ``robots.txt``, ``favicon.ico`` και οτιδήποτε μέσα στα URLs ``/static/"
"`` και ``/media/`` ως ένα static file (πχ JavaScript, CSS, fonts αρχείο "
"κλπ). Όλα τα άλλα URLs θα εξυπηρετηθούν χρησιμοποιώντας το mod_wsgi:"

msgid ""
"If you are using a version of Apache older than 2.4, replace ``Require all "
"granted`` with ``Allow from all`` and also add the line ``Order deny,allow`` "
"above it."
msgstr ""
"Αν χρησιμοποιείτε κάποια παλαιότερη έκδοση του Apache από 2.4, "
"αντικαταστήστε το ``Require all granted`` με το ``Allow from all`` και, "
"επίσης, προσθέστε τη γραμμή ``Order deny,allow`` από πάνω."

msgid "Serving the admin files"
msgstr "Εξυπηρετώντας τα αρχεία του admin"

msgid ""
"When :mod:`django.contrib.staticfiles` is in :setting:`INSTALLED_APPS`, the "
"Django development server automatically serves the static files of the admin "
"app (and any other installed apps). This is however not the case when you "
"use any other server arrangement. You're responsible for setting up Apache, "
"or whichever Web server you're using, to serve the admin files."
msgstr ""
"Όταν η εφαρμογή :mod:`django.contrib.staticfiles` είναι μέσα στα :setting:"
"`INSTALLED_APPS`, ο Django development server αυτόματα εξυπηρετεί τα static "
"files της εφαρμογής admin (και κάθε άλλης εγκατεστημένης εφαρμογής). Αυτό, "
"ωστόσο, δεν ισχύει ότι χρησιμοποιείτε κάποια άλλη διάταξη server. Είστε "
"υπεύθυνοι για να ρυθμίσετε τον Apache ή οποιονδήποτε άλλο Web server "
"χρησιμοποιείτε, για να εξυπηρετήσετε τα αρχεία για το site του admin."

msgid ""
"The admin files live in (:file:`django/contrib/admin/static/admin`) of the "
"Django distribution."
msgstr ""
"Τα αρχεία του admin βρίσκονται στην τοποθεσία :file:`django/contrib/admin/"
"static/admin` της Django διανομής."

msgid ""
"We **strongly** recommend using :mod:`django.contrib.staticfiles` to handle "
"the admin files (along with a Web server as outlined in the previous "
"section; this means using the :djadmin:`collectstatic` management command to "
"collect the static files in :setting:`STATIC_ROOT`, and then configuring "
"your Web server to serve :setting:`STATIC_ROOT` at :setting:`STATIC_URL`), "
"but here are three other approaches:"
msgstr ""
"Συνιστούμε **θερμά** να χρησιμοποιείτε την εφαρμογή :mod:`django.contrib."
"staticfiles` για να διαχειριστείτε τα αρχεία του admin (μαζί με κάποιον Web "
"server όπως περιγράφηκε στην προηγούμενη ενότητα. Αυτό σημαίνει ότι "
"χρησιμοποιείτε την διαχειριστική εντολή :djadmin:`collectstatic` για να "
"συγκεντρώσετε τα static files στο φάκελο in :setting:`STATIC_ROOT` και "
"κατόπιν να ρυθμίσετε τον Web server σας να εξυπηρετεί το φάκελο :setting:"
"`STATIC_ROOT` στη διεύθυνση :setting:`STATIC_URL`), αλλά αν δεν το κάνετε, "
"παρακάτω φαίνονται τρεις διαφορετικές προσεγγίσεις του θέματος:"

msgid ""
"Create a symbolic link to the admin static files from within your document "
"root (this may require ``+FollowSymLinks`` in your Apache configuration)."
msgstr ""
"Δημιουργήστε ένα symbolic link στα static files του admin από το document "
"root σας (αυτό ίσως απαιτήσει να χρησιμοποιήσετε το ``+FollowSymLinks`` στη "
"ρύθμιση του Apache)."

msgid ""
"Use an ``Alias`` directive, as demonstrated above, to alias the appropriate "
"URL (probably :setting:`STATIC_URL` + ``admin/``) to the actual location of "
"the admin files."
msgstr ""
"Χρησιμοποιήστε ένα directive ``Alias``, όπως περιγράφηκε παραπάνω, για να "
"κάνετε alias το κατάλληλο URL (πιθανόν το :setting:`STATIC_URL` + ``admin/"
"``) με την ακριβή τοποθεσία των αρχείων του admin."

msgid ""
"Copy the admin static files so that they live within your Apache document "
"root."
msgstr ""
"Αντιγράψτε τα static files του admin ούτως ώστε να υπάρχουν μέσα στο "
"document root του Apache σας."

msgid ""
"Django provides a handler to allow Apache to authenticate users directly "
"against Django's authentication backends. See the :doc:`mod_wsgi "
"authentication documentation </howto/deployment/wsgi/apache-auth>`."
msgstr ""
"Το Django παρέχει έναν handler που επιτρέπει στον Apache να πιστοποιεί τους "
"χρήστες απ’ ευθείας μέσω το σύστημα πιστοποίησης του Django. Δείτε "
"περισσότερα στο εγχειρίδιο της :doc:`πιστοποίησης του mod_wsgi </howto/"
"deployment/wsgi/apache-auth>`."

msgid "How to use Django with uWSGI"
msgstr "Πως να χρησιμοποιήσετε το Django με το uWSGI"

msgid ""
"uWSGI_ is a fast, self-healing and developer/sysadmin-friendly application "
"container server coded in pure C."
msgstr ""
"Το uWSGI_ είναι ένας γρήγορος, αυτό-θεραπευόμενος και φιλικός προς τον "
"developer και τον διαχειριστή application container server ο οποίος είναι "
"γραμμένος αμιγώς σε C."

msgid ""
"The uWSGI docs offer a `tutorial`_ covering Django, nginx, and uWSGI (one "
"possible deployment setup of many). The docs below are focused on how to "
"integrate Django with uWSGI."
msgstr ""
"Τα εγχειρίδια του uWSGI παρέχουν ένα `tutorial`_ που καλύπτουν το Django, "
"τον nginx και το uWSGI (ένας από τους πολλούς συνδυασμούς για να κάνετε "
"deployment). Τα άρθρα, παρακάτω, εστιάζουν στο πως να ενσωματώσετε το Django "
"με το uWSGI."

msgid "Prerequisite: uWSGI"
msgstr "Προαπαιτούμενο: uWSGI"

msgid ""
"The uWSGI wiki describes several `installation procedures`_. Using pip, the "
"Python package manager, you can install any uWSGI version with a single "
"command. For example:"
msgstr ""
"Το uWSGI wiki περιγράφει πολλά `installation procedures`_. Μπορείτε να "
"εγκαταστήσετε οποιαδήποτε uWSGI έκδοση επιθυμείτε χρησιμοποιώντας τον "
"διαχειριστή πακέτων της Python, pip. Για παράδειγμα:"

msgid ""
"Some distributions, including Debian and Ubuntu, ship an outdated version of "
"uWSGI that does not conform to the WSGI specification. Versions prior to "
"1.2.6 do not call ``close`` on the response object after handling a request. "
"In those cases the :data:`~django.core.signals.request_finished` signal "
"isn't sent. This can result in idle connections to database and memcache "
"servers."
msgstr ""
"Μερικές διανομές, συμπεριλαμβανομένων της Debian και του Ubuntu, έρχονται με "
"ξεπερασμένες εκδόσεις του uWSGI οι οποίες δεν συμμορφώνονται με την "
"προδιαγραφή του WSGI. Εκδόσεις πριν την 1.2.6 δεν καλούν τη μέθοδο ``close`` "
"στο response object μετά το πέρας χειρισμού ενός request. Σε αυτές τις "
"περιπτώσεις το σήμα :data:`~django.core.signals.request_finished` δεν "
"στέλνεται. Αυτό μπορεί να έχει ως αποτέλεσμα αδρανείς συνδέσεις στη βάση "
"δεδομένων και στους memcache servers."

msgid "uWSGI model"
msgstr "Το μοντέλο του uWSGI"

msgid ""
"uWSGI operates on a client-server model. Your Web server (e.g., nginx, "
"Apache) communicates with a django-uwsgi \"worker\" process to serve dynamic "
"content. See uWSGI's `background documentation`_ for more detail."
msgstr ""
"Το uWSGI λειτουργεί πάνω σε ένα μοντέλο client-server. Ο Web server σας (πχ "
"nginx, Apache) επικοινωνεί με ένα django-uwsgi \"worker\" process για να "
"εξυπηρετήσει δυναμικό περιεχόμενο. Δείτε στο `background documentation`_ του "
"uWSGI για περισσότερες λεπτομέρειες."

msgid "Configuring and starting the uWSGI server for Django"
msgstr "Παραμετροποιώντας και ξεκινώντας τον uWSGI server για το Django"

msgid ""
"uWSGI supports multiple ways to configure the process. See uWSGI's "
"`configuration documentation`_ and `examples`_."
msgstr ""
"Το uWSGI υποστηρίζει πολλούς τρόπους για να παραμετροποιήσετε το process. "
"Δείτε στο `configuration documentation`_ και στο `examples`_ του uWSGI."

msgid "Here's an example command to start a uWSGI server::"
msgstr ""
"Παρακάτω φαίνεται ένα παράδειγμα της εντολής ``uwsgi`` για να ξεκινήσετε "
"έναν uWSGI server::"

msgid ""
"This assumes you have a top-level project package named ``mysite``, and "
"within it a module :file:`mysite/wsgi.py` that contains a WSGI "
"``application`` object. This is the layout you'll have if you ran ``django-"
"admin startproject mysite`` (using your own project name in place of "
"``mysite``) with a recent version of Django. If this file doesn't exist, "
"you'll need to create it. See the :doc:`/howto/deployment/wsgi/index` "
"documentation for the default contents you should put in this file and what "
"else you can add to it."
msgstr ""
"Τα παραπανω προϋποθέτουν ότι έχετε ένα project με το όνομα ``mysite`` και "
"μέσα σε αυτό ένα module :file:`mysite/wsgi.py` το οποίο περιέχει ένα WSGI "
"``application`` object. Αυτή θα είναι η διάταξη που θα έχετε αν τρέξετε την "
"εντολή ``django-admin startproject mysite`` (χρησιμοποιώντας το δικό σας "
"όνομα project στη θέση του ``mysite``, φυσικά) με μια νεώτερη έκδοση του "
"Django. Αν το αρχείο :file:`mysite/wsgi.py` δεν υπάρχει, θα χρειαστεί να το "
"δημιουργήσετε. Δείτε στο άρθρο :doc:`Πως να ανεβάσετε το site σας "
"χρησιμοποιώντας το WSGI </howto/deployment/wsgi/index>` για τα προεπιλεγμένα "
"περιεχόμενα που θα πρέπει να βάλετε σε αυτό το αρχείο καθώς και άλλα που "
"μπορείτε να προσθέσετε."

msgid "The Django-specific options here are:"
msgstr "Οι επιλογές που αφορούν το Django είναι:"

msgid ""
"``chdir``: The path to the directory that needs to be on Python's import "
"path -- i.e., the directory containing the ``mysite`` package."
msgstr ""
"``chdir``: Το path στο φάκελο που χρειάζεται να είναι στο import path της "
"Python -- πχ ο φάκελος που περιέχει το project ``mysite``."

msgid ""
"``module``: The WSGI module to use -- probably the ``mysite.wsgi`` module "
"that :djadmin:`startproject` creates."
msgstr ""
"`module``: Το module WSGI που θα χρησιμοποιηθεί -- πιθανόν το αρχείο "
"``mysite.wsgi`` που δημιουργεί η εντολή :djadmin:`startproject`."

msgid "``env``: Should probably contain at least ``DJANGO_SETTINGS_MODULE``."
msgstr ""
"``env``: Θα πρέπει να περιέχει τουλάχιστον τη μεταβλητή "
"``DJANGO_SETTINGS_MODULE``."

msgid "``home``: Optional path to your project virtualenv."
msgstr "``home``: Προαιρετικό path για το to virtualenv του project σας."

msgid "Example ini configuration file::"
msgstr "Παράδειγμα του configuration αρχείου ini::"

msgid "Example ini configuration file usage::"
msgstr "Παράδειγμα χρήσης του configuration αρχείου ini::"

msgid ""
"If you get a ``UnicodeEncodeError`` when uploading files with file names "
"that contain non-ASCII characters, make sure uWSGI is configured to accept "
"non-ASCII file names by adding this to your ``uwsgi.ini``::"
msgstr ""
"Αν λαμβάνετε το σφάλμα ``UnicodeEncodeError`` όταν ανεβάζετε αρχεία που τα "
"ονόματα τους περιέχουν χαρακτήρες που δεν ανήκουν στον ASCII κώδικα (όπως "
"είναι οι ελληνικοί χαρακτήρες), σιγουρευτείτε ότι ο uWSGI είναι ρυθμισμένος "
"να δέχεται ονόματα αρχείων με χαρακτήρες που δεν είναι ASCII, προσθέτωντας "
"το παρακάτω στο αρχείο ``uwsgi.ini``::"

msgid ""
"See the uWSGI docs on `managing the uWSGI process`_ for information on "
"starting, stopping and reloading the uWSGI workers."
msgstr ""
"Ανατρέξτε στα εγχειρίδια του uWSGI σχετικά με `managing the uWSGI process`_ "
"για πληροφορίες σχετικά με την εκκίνηση, παύση και επαναφόρτωση των uWSGI "
"workers."

msgid ""
"When you're running a public site you should always turn off the :setting:"
"`DEBUG` setting. That will make your server run much faster, and will also "
"prevent malicious users from seeing details of your application that can be "
"revealed by the error pages."
msgstr ""
"Όταν έχετε στον αέρα την ιστοσελίδα σας θα πρέπει να έχετε πάντα "
"απενεργοποιημένη την επιλογή :setting:`DEBUG`, ήτοι να είναι ``False``. Αυτό "
"θα κάνει τον server σας πιο γρήγορο και θα αποτρέψει τους κακόβουλους "
"χρήστες να δουν λεπτομέρειες σχετικά με την εφαρμογή σας οι οποίες "
"εμφανίζονται όταν προκύπτουν σφάλματα στη σελίδα."

msgid ""
"However, running with :setting:`DEBUG` set to ``False`` means you'll never "
"see errors generated by your site -- everyone will just see your public "
"error pages. You need to keep track of errors that occur in deployed sites, "
"so Django can be configured to create reports with details about those "
"errors."
msgstr ""
"Ωστόσο, αν η επιλογή :setting:`DEBUG` είναι ``False`` τότε δεν θα μπορέσετε "
"ποτέ να δείτε τυχόν σφάλματα της σελίδας σας -- όλοι, ακόμη και εσείς οι "
"ίδιοι, θα βλέπουν τις δημόσιες σελίδες σφαλμάτων (πχ internal server error "
"500, page not found 404 κλπ). Θα χρειαστεί, λοιπόν, να παρακολουθείτε τα "
"σφάλματα τα οποία προκύπτουν στις σελίδες που είναι στον αέρα, ούτως ώστε το "
"Django να μπορεί να παραμετροποιηθεί για να δημιουργεί λεπτομερείς αναφορές "
"σφαλμάτων."

msgid "Email reports"
msgstr "Αναφορές email"

msgid "Server errors"
msgstr "Σφάλματα server"

msgid ""
"When :setting:`DEBUG` is ``False``, Django will email the users listed in "
"the :setting:`ADMINS` setting whenever your code raises an unhandled "
"exception and results in an internal server error (HTTP status code 500). "
"This gives the administrators immediate notification of any errors. The :"
"setting:`ADMINS` will get a description of the error, a complete Python "
"traceback, and details about the HTTP request that caused the error."
msgstr ""
"Όταν η ρύθμιση :setting:`DEBUG` είναι ``False``, το Django θα στείλει email "
"στους χρήστες που βρίσκονται στη λίστα της ρύθμισης :setting:`ADMINS`, "
"οποτεδήποτε ο κώδικας σας κάνει raise κάποιο unhandled exception και έχει ως "
"αποτέλεσμα ένα εσωτερικό σφάλμα server (HTTP status code 500). Αυτό δίνει "
"στους διαχειριστές (administrators) μια άμεση ειδοποίηση σχετικά με τυχόν "
"σφάλματα. Η επιλογή :setting:`ADMINS` θα λάβει μια περιγραφή του σφάλματος, "
"ένα πλήρες Python traceback και λεπτομέρειες σχετικά με το HTTP request το "
"οποίο προκάλεσε το σφάλμα."

msgid ""
"In order to send email, Django requires a few settings telling it how to "
"connect to your mail server. At the very least, you'll need to specify :"
"setting:`EMAIL_HOST` and possibly :setting:`EMAIL_HOST_USER` and :setting:"
"`EMAIL_HOST_PASSWORD`, though other settings may be also required depending "
"on your mail server's configuration. Consult :doc:`the Django settings "
"documentation </ref/settings>` for a full list of email-related settings."
msgstr ""
"Για να σταλεί το email, το Django απαιτεί μερικές ρυθμίσεις συνδεσιμότητας "
"με τον δικό σας mail server. Θα πρέπει, τουλάχιστον, να προσδιορίσετε την "
"επιλογή :setting:`EMAIL_HOST` και πιθανόν την :setting:`EMAIL_HOST_USER` "
"και :setting:`EMAIL_HOST_PASSWORD`. Ωστόσο, ίσως χρειαστεί να προσδιορίσετε "
"και άλλες επιλογές ανάλογα την παραμετροποίηση του mail server σας. "
"Συμβουλευτείτε το :doc:`εγχειρίδιο γενικών ρυθμίσεων του Django </ref/"
"settings>` για μια πλήρη λίστα σχετικά με τις ρυθμίσεις του email."

msgid ""
"By default, Django will send email from root@localhost. However, some mail "
"providers reject all email from this address. To use a different sender "
"address, modify the :setting:`SERVER_EMAIL` setting."
msgstr ""
"Από προεπιλογή, το Django θα στείλει email από τη διεύθυνση root@localhost. "
"Ωστόσο, κάποιοι πάροχοι ηλεκτρονικού ταχυδρομείου θα απορρίψουν όλα τα "
"emails από αυτή τη διεύθυνση. Για να χρησιμοποιήσετε μια διαφορετική "
"διεύθυνση αποστολέα, αλλάξτε τη ρύθμιση :setting:`SERVER_EMAIL`."

msgid ""
"To activate this behavior, put the email addresses of the recipients in the :"
"setting:`ADMINS` setting."
msgstr ""
"Για να ενεργοποιήσετε αυτή τη συμπεριφορά, εισάγετε τις διευθύνσεις email "
"των παραληπτών μέσα στη ρύθμιση :setting:`ADMINS`."

msgid ""
"Server error emails are sent using the logging framework, so you can "
"customize this behavior by :doc:`customizing your logging configuration </"
"topics/logging>`."
msgstr ""
"Για την αποστολή των emails που στέλνονται όταν προκύπτει σφάλμα στον "
"server, χρησιμοποιείται το logging framework, οπότε μπορείτε να "
"παραμετροποιήσετε αυτή τη συμπεριφορά :doc:`φέρνοντας στα μέτρα σας την "
"παραμετροποίηση του logging </topics/logging>`."

msgid "404 errors"
msgstr "Σφάλματα 404"

msgid ""
"Django can also be configured to email errors about broken links (404 \"page "
"not found\" errors). Django sends emails about 404 errors when:"
msgstr ""
"Το Django μπορεί, επίσης, να παραμετροποιηθεί για να στέλνει email όταν "
"προκύπτουν σπασμένοι σύνδεσμοι (broken links – σφάλμα 404 \"page not found"
"\"). Το Django στέλνει emails σχετικά με σφάλματα 404 όταν:"

msgid ":setting:`DEBUG` is ``False``;"
msgstr "Η ρύθμιση :setting:`DEBUG` είναι ``False`` και"

msgid ""
"Your :setting:`MIDDLEWARE` setting includes :class:`django.middleware.common."
"BrokenLinkEmailsMiddleware`."
msgstr ""
"Η ρύθμιση :setting:`MIDDLEWARE` περιέχει την :class:`django.middleware."
"common.BrokenLinkEmailsMiddleware`."

msgid ""
"If those conditions are met, Django will email the users listed in the :"
"setting:`MANAGERS` setting whenever your code raises a 404 and the request "
"has a referer. It doesn't bother to email for 404s that don't have a referer "
"-- those are usually just people typing in broken URLs or broken Web bots. "
"It also ignores 404s when the referer is equal to the requested URL, since "
"this behavior is from broken Web bots too."
msgstr ""
"Αν ισχύουν τα παραπάνω, το Django θα στείλει email στους χρήστες οι οποίοι "
"βρίσκονται στη λίστα της ρύθμισης :setting:`MANAGERS` οποτεδήποτε ο κώδικας "
"σας κάνει raise ένα σφάλμα 404 και το request έχει έναν referer. Δεν στέλνει "
"email για σφάλματα 404 τα οποία δεν έχουν referer -- αυτά είναι συνήθως "
"σφάλματα που προκύπτουν από χρήστες που γράφουν οι ίδιοι σπασμένα URLs ή από "
"broken Web bots. Αγνοεί, επίσης, σφάλματα 404 όταν ο referer είναι ίδιος με "
"το ζητούμενο URL, αφού αυτή η συμπεριφορά προέρχεται, επίσης, από broken Web "
"bots."

msgid ""
"In older versions, 404s were not ignored when the referer was equal to the "
"requested URL."
msgstr ""
"Σε παλαιότερες εκδόσεις, τα σφάλματα 404 δεν αγνοούνταν όταν ο referer ήταν "
"ο ίδιος με το ζητούμενο URL."

msgid ""
":class:`~django.middleware.common.BrokenLinkEmailsMiddleware` must appear "
"before other middleware that intercepts 404 errors, such as :class:`~django."
"middleware.locale.LocaleMiddleware` or :class:`~django.contrib.flatpages."
"middleware.FlatpageFallbackMiddleware`. Put it towards the top of your :"
"setting:`MIDDLEWARE` setting."
msgstr ""
"Η middleware κλάση :class:`~django.middleware.common."
"BrokenLinkEmailsMiddleware` πρέπει να εμφανίζεται πριν από άλλες middleware "
"οι οποίες ασχολούνται με σφάλματα 404, όπως η κλάση :class:`~django."
"middleware.locale.LocaleMiddleware` ή :class:`~django.contrib.flatpages."
"middleware.FlatpageFallbackMiddleware`. Βάλτε τη κοντά στην κορυφή της "
"ρύθμισης :setting:`MIDDLEWARE`."

msgid ""
"You can tell Django to stop reporting particular 404s by tweaking the :"
"setting:`IGNORABLE_404_URLS` setting. It should be a list of compiled "
"regular expression objects. For example::"
msgstr ""
"Μπορείτε να ρυθμίσετε το Django να σταματήσει την αναφορά συγκεκριμένων "
"σφαλμάτων 404 πειράζοντας την ρύθμιση :setting:`IGNORABLE_404_URLS`. Αυτή "
"είναι μια λίστα από regular expression objects. Για παράδειγμα::"

msgid ""
"In this example, a 404 to any URL ending with ``.php`` or ``.cgi`` will "
"*not* be reported. Neither will any URL starting with ``/phpmyadmin/``."
msgstr ""
"Σε αυτό το παράδειγμα, ένα σφάλμα 404 σε οποιοδήποτε URL που τελειώνει με ``."
"php`` ή ``.cgi`` *δεν* θα αναφερθεί. Ούτε, επίσης, οποιοδήποτε URL που "
"ξεκινά με το ``/phpmyadmin/``."

msgid ""
"The following example shows how to exclude some conventional URLs that "
"browsers and crawlers often request::"
msgstr ""
"Το ακόλουθο παράδειγμα δείχνει πως να εξαιρέσετε μερικά συμβατικά URLs τα "
"οποία οι browsers και οι crawlers ζητούν συχνά::"

msgid ""
"(Note that these are regular expressions, so we put a backslash in front of "
"periods to escape them.)"
msgstr ""
"(Σημειώστε ότι αυτά είναι regular expressions, οπότε βάζουμε ένα backslash "
"μπροστά από τους χαρακτήρες της τελείας για να τις κάνουμε escape.)"

msgid ""
"If you'd like to customize the behavior of :class:`django.middleware.common."
"BrokenLinkEmailsMiddleware` further (for example to ignore requests coming "
"from web crawlers), you should subclass it and override its methods."
msgstr ""
"Αν θέλετε να αλλάξετε τη συμπεριφορά της middleware κλάσης :class:`django."
"middleware.common.BrokenLinkEmailsMiddleware` (πχ να αγνοήσει τα requests "
"που προέρχονται από τους web crawlers), θα πρέπει να την κάνετε subclass, να "
"παρακάμψετε (override) τις μεθόδους της και να χρησιμοποιήσετε τη δική σας "
"στη ρύθμιση :setting:`MIDDLEWARE`."

msgid ""
"404 errors are logged using the logging framework. By default, these log "
"records are ignored, but you can use them for error reporting by writing a "
"handler and :doc:`configuring logging </topics/logging>` appropriately."
msgstr ""
"Τα σφάλματα 404 γίνονται logged χρησιμοποιώντας το logging framework της "
"Python. Από προεπιλογή, αυτά τα log αρχεία αγνοούνται, αλλά μπορείτε να τα "
"χρησιμοποιήσετε για αναφορά σφαλμάτων γράφοντας έναν handler και :doc:"
"`παραμετροποιώντας το logging </topics/logging>` καταλλήλως."

msgid "Filtering error reports"
msgstr "Φιλτράροντας τις αναφορές σφαλμάτων"

msgid ""
"Filtering sensitive data is a hard problem, and it's nearly impossible to "
"guarantee that sensitive won't leak into an error report. Therefore, error "
"reports should only be available to trusted team members and you should "
"avoid transmitting error reports unencrypted over the Internet (such as "
"through email)."
msgstr ""
"Το φιλτράρισμα των ευαίσθητων δεδομένων είναι ένα δύσκολο πρόβλημα και είναι "
"σχεδόν αδύνατο να εγγυηθείτε ότι τα ευαίσθητα δεδομένα δεν θα καταγραφούν σε "
"κάποια αναφορά σφάλματος. Επομένως, οι αναφορές σφάλματος θα πρέπει να είναι "
"διαθέσιμες μόνο σε μέλη της ομάδας και θα πρέπει να αποφεύγετε να στέλνετε "
"αναφορές σφαλμάτων χωρίς κρυπτογράφηση στο διαδίκτυο (όπως μέσω email)."

msgid "Filtering sensitive information"
msgstr "Φιλτράροντας ευαίσθητα δεδομένα"

msgid ""
"Error reports are really helpful for debugging errors, so it is generally "
"useful to record as much relevant information about those errors as "
"possible. For example, by default Django records the `full traceback`_ for "
"the exception raised, each `traceback frame`_’s local variables, and the :"
"class:`~django.http.HttpRequest`’s :ref:`attributes<httprequest-attributes>`."
msgstr ""
"Οι αναφορές σφαλμάτων είναι πολύ χρήσιμες για την αποσφαλμάτωση, οπότε είναι "
"γενικά χρήσιμο να καταγράφετε όσο το δυνατόν περισσότερη πληροφορία σχετικά "
"με αυτά τα λάθη γίνεται. Για παράδειγμα, από προεπιλογή, το Django "
"καταγράφει το `πλήρες traceback <https://en.wikipedia.org/wiki/"
"Stack_trace>`_ για το exception που έγινε raised, κάθε τοπική μεταβλητή ενός "
"`traceback frame <https://en.wikipedia.org/wiki/Stack_frame>`_’ και τα :ref:"
"`attributes<httprequest-attributes>` του :class:`~django.http.HttpRequest`."

msgid ""
"However, sometimes certain types of information may be too sensitive and "
"thus may not be appropriate to be kept track of, for example a user's "
"password or credit card number. So in addition to filtering out settings "
"that appear to be sensitive as described in the :setting:`DEBUG` "
"documentation, Django offers a set of function decorators to help you "
"control which information should be filtered out of error reports in a "
"production environment (that is, where :setting:`DEBUG` is set to "
"``False``): :func:`sensitive_variables` and :func:"
"`sensitive_post_parameters`."
msgstr ""
"Ωστόσο, μερικές φορές, μερικοί τύποι πληροφοριών μπορεί να είναι πολύ "
"ευαίσθητοι και επομένως δεν πρέπει να καταγράφονται, για παράδειγμα το "
"password ενός χρήστη ή ο αριθμός της πιστωτικής του κάρτας. Οπότε, εκτός από "
"το φιλτράρισμα των ρυθμίσεων οι οποίες είναι ευαίσθητες, όπως περιγράφεται "
"στο εγχειρίδιο του :setting:`DEBUG`, το Django προσφέρει ένα σετ από "
"decorator συναρτήσεις για να σας βοηθήσει να ελέγξετε ποιες πληροφορίες θα "
"πρέπει να μένουν εκτός σε αναφορές σφαλμάτων σε ένα παραγωγικό περιβάλλον "
"(ήτοι η ρύθμιση :setting:`DEBUG` είναι ``False``): η συνάρτηση :func:"
"`sensitive_variables` και η :func:`sensitive_post_parameters`."

msgid ""
"If a function (either a view or any regular callback) in your code uses "
"local variables susceptible to contain sensitive information, you may "
"prevent the values of those variables from being included in error reports "
"using the ``sensitive_variables`` decorator::"
msgstr ""
"Αν μια συνάρτηση (είτε ένα view είτε κάποιο συνηθισμένο callback) μέσα στον "
"κώδικα σας χρησιμοποιεί τοπικές μεταβλητές ικανές για να κρατήσουν ευαίσθητα "
"δεδομένα, μπορείτε να εμποδίσετε τις τιμές των μεταβλητών αυτών να "
"συμπεριληφθούν στις αναφορές σφαλμάτων, χρησιμοποιώντας τον decorator "
"``sensitive_variables``::"

msgid ""
"In the above example, the values for the ``user``, ``pw`` and ``cc`` "
"variables will be hidden and replaced with stars (`**********`) in the error "
"reports, whereas the value of the ``name`` variable will be disclosed."
msgstr ""
"Στο παραπάνω παράδειγμα, οι τιμές των μεταβλητών ``user``, ``pw`` και ``cc`` "
"δεν θα εμφανιστούν και θα αντικατασταθούν με αστερίσκους (`**********`) στις "
"αναφορές σφαλμάτων, αλλά η τιμή της μεταβλητής ``name`` θα εμφανιστεί ως "
"έχει."

msgid ""
"To systematically hide all local variables of a function from error logs, do "
"not provide any argument to the ``sensitive_variables`` decorator::"
msgstr ""
"Αν θέλετε να κρύψετε όλες τις τοπικές μεταβλητές μια συνάρτησης από τις "
"αναφορές σφαλμάτων, δεν έχετε παρά να μην δώσετε καμία παράμετρο στον "
"decorator ``sensitive_variables``::"

msgid "When using multiple decorators"
msgstr "Όταν χρησιμοποιείτε πολλούς decorators"

msgid ""
"If the variable you want to hide is also a function argument (e.g. "
"'``user``’ in the following example), and if the decorated function has "
"multiple decorators, then make sure to place ``@sensitive_variables`` at the "
"top of the decorator chain. This way it will also hide the function argument "
"as it gets passed through the other decorators::"
msgstr ""
"Αν η τιμή που θέλετε να αποκρύψετε είναι μια παράμετρος μιας συνάρτησης (πχ "
"η '``user``’ στο παρακάτω παράδειγμα) και αν η διακοσμημένη συνάρτηση "
"(συνάρτηση στην οποία έχει εφαρμοστεί ένας decorator) έχει πολλούς "
"decorators, τότε σιγουρευτείτε ότι το ``@sensitive_variables`` βρίσκεται "
"στην κορυφή της αλυσίδας των decorators. Με αυτό τον τρόπο θα αποκρύψει, "
"επίσης, την παράμετρο της συνάρτησης όσο αυτή περνάει στους επόμενους "
"decorators, κάτω στην αλυσίδα::"

msgid ""
"If one of your views receives an :class:`~django.http.HttpRequest` object "
"with :attr:`POST parameters<django.http.HttpRequest.POST>` susceptible to "
"contain sensitive information, you may prevent the values of those "
"parameters from being included in the error reports using the "
"``sensitive_post_parameters`` decorator::"
msgstr ""
"Αν ένα από τα views σας, λαμβάνει ένα object τύπου :class:`~django.http."
"HttpRequest` το οποίο έχει ικανές να αποθηκεύουν ευαίσθητα δεδομένα :attr:"
"`παραμέτρους POST <django.http.HttpRequest.POST>`, μπορείτε να αποτρέψετε "
"τις τιμές αυτών των παραμέτρων να καταγραφούν στις αναφορές σφαλμάτων "
"χρησιμοποιώντας τον decorator ``sensitive_post_parameters``::"

msgid ""
"In the above example, the values for the ``pass_word`` and "
"``credit_card_number`` POST parameters will be hidden and replaced with "
"stars (`**********`) in the request's representation inside the error "
"reports, whereas the value of the ``name`` parameter will be disclosed."
msgstr ""
"Στο παραπάνω παράδειγμα, οι τιμές των POST παραμέτρων ``pass_word`` και "
"``credit_card_number`` δεν θα εμφανιστούν και θα αντικατασταθούν με "
"αστερίσκους (`**********`) στην αναπαράσταση του request μέσα στις αναφορές "
"σφαλμάτων, αλλά η τιμή της παραμέτρου ``name`` θα εμφανιστεί ως έχει."

msgid ""
"To systematically hide all POST parameters of a request in error reports, do "
"not provide any argument to the ``sensitive_post_parameters`` decorator::"
msgstr ""
"Για να αποκρύψετε όλες τις POST παραμέτρους ενός request στις αναφορές "
"σφαλμάτων, δεν έχετε παρά να μην περάσετε καμία παράμετρο στον decorator "
"``sensitive_post_parameters``::"

msgid ""
"All POST parameters are systematically filtered out of error reports for "
"certain :mod:`django.contrib.auth.views` views (``login``, "
"``password_reset_confirm``, ``password_change``, and ``add_view`` and "
"``user_change_password`` in the ``auth`` admin) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr ""
"Για συγκεκριμένα :mod:`django.contrib.auth.views` views (``login``, "
"``password_reset_confirm``, ``password_change`` και ``add_view``, "
"``user_change_password`` για το ``auth`` admin), όλες οι POST παράμετροι "
"μένουν εκτός των αναφορών σφαλμάτων για να εμποδίσουν τυχόν διαρροές "
"ευαίσθητων δεδομένων, όπως είναι τα passwords των χρηστών."

msgid "Custom error reports"
msgstr "Παραμετροποιήσιμες αναφορές σφαλμάτων"

msgid ""
"All :func:`sensitive_variables` and :func:`sensitive_post_parameters` do is, "
"respectively, annotate the decorated function with the names of sensitive "
"variables and annotate the ``HttpRequest`` object with the names of "
"sensitive POST parameters, so that this sensitive information can later be "
"filtered out of reports when an error occurs. The actual filtering is done "
"by Django's default error reporter filter: :class:`django.views.debug."
"SafeExceptionReporterFilter`. This filter uses the decorators' annotations "
"to replace the corresponding values with stars (`**********`) when the error "
"reports are produced. If you wish to override or customize this default "
"behavior for your entire site, you need to define your own filter class and "
"tell Django to use it via the :setting:`DEFAULT_EXCEPTION_REPORTER_FILTER` "
"setting::"
msgstr ""
"Το μόνο που κάνουν οι συναρτήσεις :func:`sensitive_variables` και :func:"
"`sensitive_post_parameters`, αντίστοιχα, είναι να επισημαίνουν την "
"διακοσμημένη συνάρτηση με τα ονόματα των ευαίσθητων δεδομένων και να "
"επισημαίνουν το ``HttpRequest`` object με τα ονόματα των ευαίσθητων POST "
"παραμέτρων, ούτως ώστε αυτές οι ευαίσθητες πληροφορίες να μπορούν αργότερα "
"να μείνουν εκτός των αναφορών σφαλμάτων, όταν προκύψει κάποιο σφάλμα. Το "
"πραγματικό φιλτράρισμα γίνεται από ένα προεπιλεγμένο φίλτρο αναφορά "
"σφαλμάτων του Django: την κλάση :class:`django.views.debug."
"SafeExceptionReporterFilter`. Αυτό το φίλτρο χρησιμοποιεί τις επισημάνσεις "
"των decorator για να αντικαταστήσει τις αντίστοιχες τιμές με αστερίσκους "
"(`**********`) όταν παράγονται οι αναφορές σφάλματος. Αν θέλετε να "
"παρακάμψετε ή να παραμετροποιήσετε αυτή την προεπιλεγμένη συμπεριφορά για "
"όλο το site σας, θα πρέπει να ορίσετε τη δική σας κλάση φίλτρου και να πείτε "
"στο Django να χρησιμοποιήσει αυτή μέσω της ρύθμισης :setting:"
"`DEFAULT_EXCEPTION_REPORTER_FILTER`::"

msgid ""
"You may also control in a more granular way which filter to use within any "
"given view by setting the ``HttpRequest``’s ``exception_reporter_filter`` "
"attribute::"
msgstr ""
"Μπορείτε επίσης να ελέγξετε, σε πιο λεπτομερές επίπεδο, ποιο φίλτρο να "
"χρησιμοποιηθεί μέσα σε κάθε view θέτοντας το attribute "
"``exception_reporter_filter`` του ``HttpRequest``::"

msgid ""
"Your custom filter class needs to inherit from :class:`django.views.debug."
"SafeExceptionReporterFilter` and may override the following methods:"
msgstr ""
"Η δική σας κλάση φίλτρου χρειάζεται να κληρονομήσει από την κλάση :class:"
"`django.views.debug.SafeExceptionReporterFilter` και μπορεί να παρακάμψει "
"(override) τις ακόλουθες μεθόδους:"

msgid ""
"Returns ``True`` to activate the filtering operated in the other methods. By "
"default the filter is active if :setting:`DEBUG` is ``False``."
msgstr ""
"Επιστρέφει ``True`` για να ενεργοποιήσει το φιλτράρισμα που γίνεται σε άλλες "
"μεθόδους. Από προεπιλογή το φίλτρο είναι ενεργό αν η ρύθμιση :setting:"
"`DEBUG` είναι ``False``."

msgid ""
"Returns the filtered dictionary of POST parameters. By default it replaces "
"the values of sensitive parameters with stars (`**********`)."
msgstr ""
"Επιστρέφει το φιλτραρισμένο dictionary των POST παραμέτρων. Από προεπιλογή "
"αντικαθιστά τις τιμές των ευαίσθητων δεδομένων με αστερίσκους (`**********`)."

msgid ""
"Returns the filtered dictionary of local variables for the given traceback "
"frame. By default it replaces the values of sensitive variables with stars "
"(`**********`)."
msgstr ""
"Επιστρέφει το φιλτραρισμένο dictionary των τοπικών μεταβλητών για το τρέχων "
"traceback frame. Από προεπιλογή αντικαθιστά τις τιμές των ευαίσθητων "
"δεδομένων με αστερίσκους (`**********`)."

msgid ""
"You can also set up custom error reporting by writing a custom piece of :ref:"
"`exception middleware <exception-middleware>`. If you do write custom error "
"handling, it's a good idea to emulate Django's built-in error handling and "
"only report/log errors if :setting:`DEBUG` is ``False``."
msgstr ""
"Μπορείτε επίσης να ρυθμίσετε τις δικές σας αναφορές σφαλμάτων γράφοντας ένα "
"δικό σας κομμάτι μιας :ref:`exception middleware <exception-middleware>`. Αν "
"όντως γράψετε έναν δικό σας διαχειριστή σφαλμάτων, μια καλή ιδέα είναι να "
"μιμηθείτε τον προεγκατεστημένο διαχειριστή σφαλμάτων του Django και να "
"αναφέρετε ή να κάνετε log τυχόν σφάλματα μόνο αν η ρύθμιση :setting:`DEBUG` "
"είναι ``False``."

msgid "\"How-to\" guides"
msgstr "Οδηγοί \"Πως-να\""

msgid ""
"Here you'll find short answers to \"How do I....?\" types of questions. "
"These how-to guides don't cover topics in depth -- you'll find that material "
"in the :doc:`/topics/index` and the :doc:`/ref/index`. However, these guides "
"will help you quickly accomplish common tasks."
msgstr ""
"Εδώ θα βρείτε σύντομες απαντήσεις σε ερωτήματα του τύπου \"Πως να...;\". "
"Αυτοί οι οδηγοί δεν καλύπτουν τα θέματα εις βάθος -- αν θέλετε να εμβαθύνετε "
"κοιτάξτε στο άρθρο :doc:`χρησιμοποιώντας το Django </topics/index>` και "
"στην :doc:`αναφορά σχετικά με το API </ref/index>`. Ωστόσο, αυτοί οι οδηγοί "
"θα σας βοηθήσουν να λύσετε συνήθη προβλήματα μέσα σε γρήγορο χρονικό "
"διάστημα."

msgid ""
"The `Django community aggregator`_, where we aggregate content from the "
"global Django community. Many writers in the aggregator write this sort of "
"how-to material."
msgstr ""
"Στην `κοινότητα του Django <https://www.djangoproject.com/community/>`_, "
"όπου μαζεύουμε υλικό από όλη την Django κοινότητα. Πολλοί συγγραφείς από "
"εκεί, έχουν γράψει αυτού του είδους τους οδηγούς."

msgid "Providing initial data for models"
msgstr "Παρέχοντας αρχικά δεδομένα στα μοντέλα"

msgid ""
"It's sometimes useful to pre-populate your database with hard-coded data "
"when you're first setting up an app. You can provide initial data via "
"fixtures."
msgstr ""
"Μερικές φορές είναι χρήσιμο να κάνετε pre-populate τη βάση δεδομένων σας με "
"hard-coded δεδομένα όταν σετάρετε για πρώτη φορά μια εφαρμογή. Με άλλα "
"λόγια, θέλετε να δοκιμάστε την εφαρμογή σας με κάποια ψεύτικα δεδομένα (fake "
"data) τα οποία στο παραγωγικό περιβάλλον, φυσικά, δεν θα υπάρχουν. Μπορείτε "
"να παρέχετε αρχικά δεδομένα μέσω των fixtures."

msgid "Providing initial data with fixtures"
msgstr "Παρέχοντας αρχικά δεδομένα με τα fixtures"

msgid ""
"A fixture is a collection of data that Django knows how to import into a "
"database. The most straightforward way of creating a fixture if you've "
"already got some data is to use the :djadmin:`manage.py dumpdata <dumpdata>` "
"command. Or, you can write fixtures by hand; fixtures can be written as "
"JSON, XML or YAML (with PyYAML_ installed) documents. The :doc:"
"`serialization documentation </topics/serialization>` has more details about "
"each of these supported :ref:`serialization formats <serialization-formats>`."
msgstr ""
"Ένα fixture είναι μια συλλογή από δεδομένα την οποία το Django ξέρει πως να "
"την κάνει import σε μια βάση δεδομένων. Ο πιο ευθύς τρόπος να δημιουργήσετε "
"ένα fixture, αν έχετε ήδη κάποια data, είναι να χρησιμοποιήσετε την "
"διαχειριστική εντολή :djadmin:`manage.py dumpdata <dumpdata>`. Ή, μπορείτε "
"να γράψετε τα fixtures με το χέρι. Τα fixtures μπορούν να γραφτούν σε μορφή "
"JSON, XML ή YAML (με το PyYAML_ εγκατεστημένο, φυσικά) αρχείων. Το :doc:"
"`εγχειρίδιο για serialization </topics/serialization>` περιέχει περισσότερες "
"λεπτομέρειες σχετικά με αυτού του είδους των υποστηριζόμενων :ref:`μορφών "
"serialization <serialization-formats>`."

msgid ""
"As an example, though, here's what a fixture for a simple ``Person`` model "
"might look like in JSON:"
msgstr ""
"Για παράδειγμα, παρακάτω φαίνεται ένα fixture για ένα μοντέλο με το όνομα "
"``Person``σε JSON μορφή:"

msgid "And here's that same fixture as YAML:"
msgstr "Και εδώ φαίνεται το ίδιο fixture σε μορφή YAML:"

msgid "You'll store this data in a ``fixtures`` directory inside your app."
msgstr ""
"Θα αποθηκεύσετε αυτά τα δεδομένα σε ένα φάκελο ``fixtures`` μέσα στην "
"εφαρμογή σας."

msgid ""
"Loading data is easy: just call :djadmin:`manage.py loaddata <loaddata>` "
"``<fixturename>``, where ``<fixturename>`` is the name of the fixture file "
"you've created. Each time you run :djadmin:`loaddata`, the data will be read "
"from the fixture and re-loaded into the database. Note this means that if "
"you change one of the rows created by a fixture and then run :djadmin:"
"`loaddata` again, you'll wipe out any changes you've made."
msgstr ""
"Η φόρτωση των δεδομένων είναι εύκολη: απλώς καλέστε την διαχειριστική "
"εντολή :djadmin:`manage.py loaddata <loaddata>` ``<fixturename>``, όπου "
"``<fixturename>`` είναι το όνομα του fixture αρχείου που δημιουργήσατε. Κάθε "
"φορά που τρέχετε την εντολή :djadmin:`loaddata`, τα δεδομένα θα διαβαστούν "
"από το fixture και θα επαναφορτωθούν στη βάση δεδομένων. Αυτό σημαίνει ότι "
"αν αλλάξατε κάτι στη βάση δεδομένων και μετά ξανατρέξετε την εντολή :djadmin:"
"`loaddata`, θα χάσετε τις αλλαγές αυτές αφού θα φορτωθούν εκ νέου τα "
"fixtures."

msgid "Where Django finds fixture files"
msgstr "Που βρίσκει το Django τα fixture αρχεία"

msgid ""
"By default, Django looks in the ``fixtures`` directory inside each app for "
"fixtures. You can set the :setting:`FIXTURE_DIRS` setting to a list of "
"additional directories where Django should look."
msgstr ""
"Από προεπιλογή, το Django κοιτάει στο φάκελο ``fixtures`` μέσα σε κάθε app "
"για fixtures. Μπορείτε να ρυθμίσετε τη λίστα :setting:`FIXTURE_DIRS` από "
"επιπρόσθετους φακέλους όπου το Django θα ψάξει."

msgid ""
"When running :djadmin:`manage.py loaddata <loaddata>`, you can also specify "
"a path to a fixture file, which overrides searching the usual directories."
msgstr ""
"Όταν τρέχετε την εντολή :djadmin:`manage.py loaddata <loaddata>`, μπορείτε, "
"επίσης, να προσδιορίσετε ένα path σε ένα fixture αρχείο, το οποίο "
"παρακάμπτει (overrides) την εύρεση στους συνηθισμένους φακέλους."

msgid ""
"Fixtures are also used by the :ref:`testing framework <topics-testing-"
"fixtures>` to help set up a consistent test environment."
msgstr ""
"Τα fixtures χρησιμοποιούνται, επίσης, από το :ref:`testing framework <topics-"
"testing-fixtures>` για να βοηθήσουν να στηθεί ένα σταθερό περιβάλλον για "
"τεστ."

msgid "Running Django on Jython"
msgstr "Τρέχοντας το Django στη Jython"

msgid ""
"Jython_ is an implementation of Python that runs on the Java platform (JVM). "
"This document will get you up and running with Django on top of Jython."
msgstr ""
"Η Jython_ είναι μια υλοποίηση της Python η οποία τρέχει πάνω στην πλατφόρμα "
"της Java (Java platform – JVM). Το παρών άρθρο θα σας βοηθήσει να "
"ολοκληρώσετε και να τρέξετε το Django πάνω στη Jython."

msgid "Installing Jython"
msgstr "Εγκαθιστώντας την Jython"

msgid ""
"Django works with Jython versions 2.7b2 and higher. See the Jython_ website "
"for download and installation instructions."
msgstr ""
"Το Django δουλεύει με τις εκδόσεις της Jython 2.7b2 και μεγαλύτερες. Δείτε "
"την επίσημη ιστοσελίδα της Jython_ για συμβουλές download και εγκατάστασης."

msgid "Creating a servlet container"
msgstr "Δημιουργώντας ένα servlet container"

msgid ""
"If you just want to experiment with Django, skip ahead to the next section; "
"Django includes a lightweight Web server you can use for testing, so you "
"won't need to set up anything else until you're ready to deploy Django in "
"production."
msgstr ""
"Αν θέλετε, απλώς, να πειραματιστείτε με το Django, προχωρήσετε στην επόμενη "
"ενότητα. Το Django περιλαμβάνει έναν ελαφρύ Web server που μπορείτε να "
"χρησιμοποιήσετε για τεστ, οπότε δεν χρειάζεται να κάνετε κάτι άλλο μέχρις "
"ότου είστε έτοιμοι να ανεβάσετε το Django site σας για το ευρύ κοινό."

msgid ""
"If you want to use Django on a production site, use a Java servlet "
"container, such as `Apache Tomcat`_. Full JavaEE applications servers such "
"as `GlassFish`_ or `JBoss`_ are also OK, if you need the extra features they "
"include."
msgstr ""
"Αν θέλετε να χρησιμοποιήσετε το Django site σας στην παραγωγή, "
"χρησιμοποιήστε ένα Java servlet container, όπως το `Apache Tomcat`_. Άλλοι "
"πλήρεις JavaEE applications servers όπως οι `GlassFish`_ ή `JBoss`_ είναι, "
"επίσης, εντάξει, αν θέλετε τις επιπλέον λειτουργίες που προσφέρουν."

msgid "Installing Django"
msgstr "Εγκαθιστώντας το Django"

msgid ""
"The next step is to install Django itself. This is exactly the same as "
"installing Django on standard Python, so see :ref:`removing-old-versions-of-"
"django` and :ref:`install-django-code` for instructions."
msgstr ""
"Το επόμενο βήμα είναι να εγκαταστήσετε το ίδιο το Django. Αυτή η διαδικασία "
"είναι ακριβώς η ίδια με την εγκατάσταση του Django στην Python. Οπότε, δείτε "
"στην :ref:`απεγκατάσταση παλαιών εκδόσεων του Django <removing-old-versions-"
"of-django>` και στην :ref:`εγκατάσταση του Django <install-django-code>` για "
"οδηγίες."

msgid "Installing Jython platform support libraries"
msgstr "Εγκαθιστώντας τις βιβλιοθήκες υποστήριξης της πλατφόρμας Jython"

msgid ""
"The `django-jython`_ project contains database backends and management "
"commands for Django/Jython development. Note that the builtin Django "
"backends won't work on top of Jython."
msgstr ""
"Το project `django-jython`_ περιέχει database backends και διαχειριστικές "
"εντολές για το development του Django/Jython. Σημειώστε ότι τα "
"προεγκατεστημένα Django backends δεν θα δουλέψουν πάνω στη Jython."

msgid ""
"To install it, follow the `installation instructions`_ detailed on the "
"project website. Also, read the `database backends`_ documentation there."
msgstr ""
"Για να εγκαταστήσετε το πακέτο ``django-jython``, ακολουθήστε τις `οδηγίες "
"εγκατάστασης <https://pythonhosted.org/django-jython/quickstart."
"html#install>`_ που φαίνονται στην επίσημη ιστοσελίδα του project. Επίσης, "
"διαβάστε εκεί και το εγχειρίδιο `database backends`_."

msgid "Differences with Django on Jython"
msgstr "Διαφορές του Django πάνω στη Jython"

msgid ""
"At this point, Django on Jython should behave nearly identically to Django "
"running on standard Python. However, are a few differences to keep in mind:"
msgstr ""
"Σε αυτό το σημείο, το Django πάνω στη Jython θα συμπεριφέρεται σχεδόν το "
"ίδιο με το Django πάνω στην Python. Ωστόσο, παρακάτω φαίνονται μερικές "
"διαφορές για να τις έχετε στο νου σας:"

msgid ""
"Remember to use the ``jython`` command instead of ``python``. The "
"documentation uses ``python`` for consistency, but if you're using Jython "
"you'll want to mentally replace ``python`` with ``jython`` every time it "
"occurs."
msgstr ""
"Θυμηθείτε να χρησιμοποιείτε την εντολή ``jython`` αντί της ``python``. Το "
"εγχειρίδιο του Django χρησιμοποιεί την εντολή  ``python`` για λόγους "
"συνοχής, αλλά όταν χρησιμοποιείτε την Jython θα πρέπει να αντικαταστήσετε "
"την εντολή ``python`` με την ``jython`` κάθε φορά που θέλετε να τρέξετε "
"κάτι. Για παράδειγμα, αντί να τρέξετε την εντολή ``python manage.py "
"runserver`` θα τρέξετε την ``jython manage.py runserver``."

msgid ""
"Similarly, you'll need to use the ``JYTHONPATH`` environment variable "
"instead of ``PYTHONPATH``."
msgstr ""
"Ομοίως, θα χρειαστεί να χρησιμοποιήσετε την environment variable "
"``JYTHONPATH``  αντί της ``PYTHONPATH``."

msgid "Any part of Django that requires `Pillow`_ will not work."
msgstr ""
"Κάθε κομμάτι του Django που απαιτεί τη βιβλιοθήκη `Pillow`_ δεν θα δουλέψει."

msgid "Integrating Django with a legacy database"
msgstr "Ενσωματώνοντας το Django με μια legacy database"

msgid ""
"While Django is best suited for developing new applications, it's quite "
"possible to integrate it into legacy databases. Django includes a couple of "
"utilities to automate as much of this process as possible."
msgstr ""
"Ενώ το Django είναι κατάλληλο για να αναπτύσσετε καινούργιες εφαρμογές, "
"είναι δυνατόν να το ενσωματώσετε με legacy databases. Το Django περιλαμβάνει "
"μερικές λειτουργίες για να αυτοματοποιήσει όσο γίνεται αυτή τη διαδικασία. "
"Με άλλα λόγια, σκοπός αυτής της διαδικασίας είναι: έχετε μια υπάρχουσα βάση "
"δεδομένων για την οποία δεν υπάρχουν Django μοντέλα. Θέλετε, λοιπόν, αντί να "
"ξαναχτίσετε τη βάση αυτή γράφοντας τα μοντέλα σας που θα αντικατοπτρίζουν τη "
"βάση να κάνετε την αντίστροφη διαδικασία, ήτοι να χρησιμοποιήσετε την "
"υπάρχουσα βάση για να φτιάξετε τα μοντέλα σας."

msgid ""
"This document assumes you know the Django basics, as covered in the :doc:"
"`tutorial </intro/tutorial01>`."
msgstr ""
"Αυτό το άρθρο προϋποθέτει ότι γνωρίζετε τα βασικά του Django, όπως έχουν "
"καλυφθεί στον :doc:`οδηγό μας </intro/tutorial01>`."

msgid ""
"Once you've got Django set up, you'll follow this general process to "
"integrate with an existing database."
msgstr ""
"Αφού έχετε εγκαταστήσει και σετάρει το Django, θα ακολουθήσετε την παρακάτω "
"γενική διαδικασία για να ενσωματώσετε το Django με μια ήδη υπάρχουσα βάση "
"δεδομένων."

msgid "Give Django your database parameters"
msgstr "Δώστε στο Django τις παραμέτρους της βάσης δεδομένων σας"

msgid ""
"You'll need to tell Django what your database connection parameters are, and "
"what the name of the database is. Do that by editing the :setting:"
"`DATABASES` setting and assigning values to the following keys for the "
"``'default'`` connection:"
msgstr ""
"Θα χρειαστεί να πείτε στο Django ποιες είναι οι παράμετροι για σύνδεση με "
"την βάση δεδομένων καθώς και το όνομα της βάσης. Αυτό το κάνετε "
"επεξεργάζοντας τη ρύθμιση :setting:`DATABASES` και ορίζοντας τιμές στα "
"ακόλουθα keys για την σύνδεση ``'default'``:"

msgid ":setting:`NAME`"
msgstr ":setting:`NAME`"

msgid ":setting:`ENGINE <DATABASE-ENGINE>`"
msgstr ":setting:`ENGINE <DATABASE-ENGINE>`"

msgid ":setting:`USER`"
msgstr ":setting:`USER`"

msgid ":setting:`PASSWORD`"
msgstr ":setting:`PASSWORD`"

msgid ":setting:`HOST`"
msgstr ":setting:`HOST`"

msgid ":setting:`PORT`"
msgstr ":setting:`PORT`"

msgid "Auto-generate the models"
msgstr "Αυτόματη δημιουργία των μοντέλων"

msgid ""
"Django comes with a utility called :djadmin:`inspectdb` that can create "
"models by introspecting an existing database. You can view the output by "
"running this command::"
msgstr ""
"Το Django έρχεται με μια λειτουργία-εντολή με το όνομα :djadmin:`inspectdb` "
"η οποία μπορεί να δημιουργήσει μοντέλα κοιτάζοντας μια υπάρχουσα βάση "
"δεδομένων. Μπορείτε να δείτε την έξοδο αυτής της εντολής τρέχοντας την::"

msgid "Save this as a file by using standard Unix output redirection::"
msgstr ""
"Σώστε την έξοδο σε ένα αρχείο χρησιμοποιώντας τη στάνταρντ ανακατεύθυνση "
"εξόδου του Unix::"

msgid ""
"This feature is meant as a shortcut, not as definitive model generation. See "
"the :djadmin:`documentation of inspectdb <inspectdb>` for more information."
msgstr ""
"Αυτή η λειτουργία προορίζεται ως μια συντόμευση, όχι ως παραγωγή οριστικών "
"μοντέλων. Δείτε στο :djadmin:`εγχειρίδιο του inspectdb <inspectdb>` για "
"περισσότερες πληροφορίες."

msgid ""
"Once you've cleaned up your models, name the file ``models.py`` and put it "
"in the Python package that holds your app. Then add the app to your :setting:"
"`INSTALLED_APPS` setting."
msgstr ""
"Αφού κάνετε τυχόν εκκαθαρίσεις-αναδιατάξεις στα μοντέλα σας, ονομάστε το "
"αρχείο ``models.py`` και βάλτε το μέσα στο φάκελο της εφαρμογής σας. "
"Κατόπιν, προσθέστε την εφαρμογή αυτή στη ρύθμιση :setting:`INSTALLED_APPS`."

msgid ""
"By default, :djadmin:`inspectdb` creates unmanaged models. That is, "
"``managed = False`` in the model's ``Meta`` class tells Django not to manage "
"each table's creation, modification, and deletion::"
msgstr ""
"Από προεπιλογή, η εντολή :djadmin:`inspectdb` δημιουργεί αδιαχείριστα "
"μοντέλα (unmanaged models). Δηλαδή, το attribute μέσα στην κλάση ``Meta`` "
"του μοντέλου ``managed = False``, λέει στο Django να μην διαχειριστεί τη "
"δημιουργία, επεξεργασία και διαγραφή αυτού του πίνακα::"

msgid ""
"If you do want to allow Django to manage the table's lifecycle, you'll need "
"to change the :attr:`~django.db.models.Options.managed` option above to "
"``True`` (or simply remove it because ``True`` is its default value)."
msgstr ""
"Αν θέλετε να επιτρέψετε στο Django να διαχειριστεί τον κύκλο ζωής αυτού του "
"πίνακα, θα χρειαστεί να αλλάξετε το attribute :attr:`~django.db.models."
"Options.managed` σε ``True`` (ή απλά αφαιρέστε το επειδή η προεπιλεγμένη "
"τιμή του είναι ``True``)."

msgid "Install the core Django tables"
msgstr "Εγκατάσταση των βασικών πινάκων Django"

msgid ""
"Next, run the :djadmin:`migrate` command to install any extra needed "
"database records such as admin permissions and content types::"
msgstr ""
"Επόμενο βήμα, είναι να τρέξετε την διαχειριστική εντολή :djadmin:`migrate` "
"για την εγκατάσταση τυχόν επιπλέον database records όπως τα admin "
"permissions και τα content types::"

msgid "Test and tweak"
msgstr "Δοκιμές και αλλαγές"

msgid ""
"Those are the basic steps -- from here you'll want to tweak the models "
"Django generated until they work the way you'd like. Try accessing your data "
"via the Django database API, and try editing objects via Django's admin "
"site, and edit the models file accordingly."
msgstr ""
"Αυτά είναι τα βασικά βήματα -- από δω και μπρος θα θέλετε να πειράξετε τα "
"μοντέλα που δημιούργησε το Django για εσάς για να δουλεύουν όπως ακριβώς "
"θέλετε. Προσπαθήστε να προσπελάσετε τα δεδομένα σας μέσω του Django database "
"API και επίσης προσπαθήσετε να επεξεργαστείτε τα objects σας μέσω του Django "
"admin site και επεξεργαστείτε το αρχείο του μοντέλου σας καταλλήλως."

msgid "Outputting CSV with Django"
msgstr "Εξάγοντας αρχεία CSV με το Django"

msgid ""
"This document explains how to output CSV (Comma Separated Values) "
"dynamically using Django views. To do this, you can either use the Python "
"CSV library or the Django template system."
msgstr ""
"Αυτό το άρθρο εξηγεί πως να εξάγετε αρχεία CSV (Comma Separated Values), "
"δυναμικά, χρησιμοποιώντας τα Django views. Για να το κάνετε αυτό, μπορείτε "
"είτε να χρησιμοποιήσετε την βιβλιοθήκη CSV της Python ή το σύστημα template "
"του Django."

msgid "Using the Python CSV library"
msgstr "Χρησιμοποιώντας τη βιβλιοθήκη CSV της Python"

msgid ""
"Python comes with a CSV library, :mod:`csv`. The key to using it with Django "
"is that the :mod:`csv` module's CSV-creation capability acts on file-like "
"objects, and Django's :class:`~django.http.HttpResponse` objects are file-"
"like objects."
msgstr ""
"Η Python έρχεται με μια βιβλιοθήκη, :mod:`csv`. Το κλειδί για να την "
"χρησιμοποιήσετε με το Django είναι ότι η δυνατότητα της δημιουργίας CSV του "
"module :mod:`csv` ενεργεί πάνω σε objects που μοιάζουν με αρχεία και τα "
"objects της κλάσης :class:`~django.http.HttpResponse` του Django είναι "
"objects που μοιάζουν με αρχεία."

msgid "Here's an example::"
msgstr "Ορίστε ένα παράδειγμα::"

msgid ""
"The code and comments should be self-explanatory, but a few things deserve a "
"mention:"
msgstr ""
"Παρόλο που ο κώδικας και τα σχόλια είναι αρκετά επεξηγηματικά, θα πρέπει να "
"αναφέρουμε μερικά πράγματα:"

msgid ""
"The response gets a special MIME type, :mimetype:`text/csv`. This tells "
"browsers that the document is a CSV file, rather than an HTML file. If you "
"leave this off, browsers will probably interpret the output as HTML, which "
"will result in ugly, scary gobbledygook in the browser window."
msgstr ""
"Το response παίρνει έναν ειδικό τύπο MIME, :mimetype:`text/csv`. Αυτό λέει "
"στους browsers ότι το έγγραφο είναι ένα αρχείο CSV, παρά ένα αρχείο HTML. Αν "
"δεν το προσδιορίσετε, οι browsers, πιθανόν, να ερμηνεύσουν το reponse ως ένα "
"αρχείο HTML, που σημαίνει ότι το αποτέλεσμα θα είναι όχι μόνο άσχημο αλλά "
"δεν θα καταλαβαίνετε τίποτα!"

msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the CSV file. This filename is arbitrary; call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialog, "
"etc."
msgstr ""
"Το response παίρνει έναν επιπλέον header με το όνομα ``Content-"
"Disposition``, ο οποίος περιέχει το όνομα του αρχείου CSV. Αυτό το όνομα "
"είναι αυθαίρετο. Μπορείτε να το ονομάσετε όπως εσείς θέλετε. Θα "
"χρησιμοποιηθεί από τους browsers στο παράθυρο διαλόγου \"Αποθήκευση ως...\" "
"κλπ."

msgid ""
"Hooking into the CSV-generation API is easy: Just pass ``response`` as the "
"first argument to ``csv.writer``. The ``csv.writer`` function expects a file-"
"like object, and :class:`~django.http.HttpResponse` objects fit the bill."
msgstr ""
"Η σύνδεση με το CSV-generation API είναι εύκολη: Απλώς περάστε το "
"``response`` ως πρώτο όρισμα στη μέθοδο ``csv.writer``. Η μέθοδος ``csv."
"writer`` περιμένει ένα object τύπου αρχείου και τα objects της κλάσης :class:"
"`~django.http.HttpResponse` θα αναλάβουν τα υπόλοιπα."

msgid ""
"For each row in your CSV file, call ``writer.writerow``, passing it an "
"iterable object such as a list or tuple."
msgstr ""
"Για κάθε γραμμή μέσα στο αρχείο σας CSV, καλέστε τη μέθοδο ``writer."
"writerow``, περνώντας της ένα iterable object όπως μια λίστα ή ένα tuple."

msgid ""
"The CSV module takes care of quoting for you, so you don't have to worry "
"about escaping strings with quotes or commas in them. Just pass "
"``writerow()`` your raw strings, and it'll do the right thing."
msgstr ""
"Το CSV module τακτοποιεί τους χαρακτήρες των εισαγωγικών (``’’`` ή ``””``) "
"για εσάς. Οπότε, δεν χρειάζεται να ανησυχείτε για τυχόν escaping των strings "
"σας με εισαγωγικά ή κόμματα μέσα σε αυτά. Απλώς, περάστε τα στη μέθοδο "
"``writerow()`` ως έχουν και όλα θα τακτοποιηθούν αυτόματα."

msgid "Handling Unicode on Python 2"
msgstr "Δουλεύοντας με Unicode στην Python 2"

msgid ""
"Python 2's :mod:`csv` module does not support Unicode input. Since Django "
"uses Unicode internally this means strings read from sources such as :class:"
"`~django.http.HttpRequest` are potentially problematic. There are a few "
"options for handling this:"
msgstr ""
"Το :mod:`csv` module της Python 2 δεν υποστηρίζει Unicode εισόδους (ήτοι "
"χαρακτήρες εκτός ASCII κώδικα). Αφού το Django χρησιμοποιεί, εσωτερικώς, "
"Unicode, αυτό σημαίνει ότι τα strings που διαβάζονται από διάφορες πηγές, "
"όπως το :class:`~django.http.HttpRequest` θα είναι πιθανόν προβληματικά. "
"Υπάρχουν μερικοί τρόποι επίλυσης αυτού:"

msgid "Manually encode all Unicode objects to a compatible encoding."
msgstr ""
"Κωδικοποιήστε χειροκίνητα όλα τα Unicode objects σε μια συμβατική "
"κωδικοποίηση."

msgid ""
"Use the ``UnicodeWriter`` class provided in the `csv module's examples "
"section`_."
msgstr ""
"Χρησιμοποιήστε την κλάση ``UnicodeWriter`` που παρέχετε από την `ενότητα "
"παραδειγμάτων του module csv <https://docs.python.org/2/library/csv."
"html#examples>`_."

msgid ""
"Use the `python-unicodecsv module`_, which aims to be a drop-in replacement "
"for :mod:`csv` that gracefully handles Unicode."
msgstr ""
"Χρησιμοποιήστε το `python-unicodecsv module`_, το οποίο εκτός του ότι "
"στοχεύει να αντικαταστήσει το module :mod:`csv`, μπορεί να χειριστεί το "
"Unicode πολύ καλά."

msgid ""
"For more information, see the Python documentation of the :mod:`csv` module."
msgstr ""
"Για περισσότερες πληροφορίες, δείτε στο εγχειρίδιο της Python σχετικά με το :"
"mod:`csv` module."

msgid "Streaming large CSV files"
msgstr "Κάνοντας streaming σε μεγάλα αρχεία CSV"

msgid ""
"When dealing with views that generate very large responses, you might want "
"to consider using Django's :class:`~django.http.StreamingHttpResponse` "
"instead. For example, by streaming a file that takes a long time to generate "
"you can avoid a load balancer dropping a connection that might have "
"otherwise timed out while the server was generating the response."
msgstr ""
"Όταν έχουμε views τα οποία παράγουν πολύ μεγάλα responses, ίσως θα θέλατε να "
"χρησιμοποιήσετε το :class:`~django.http.StreamingHttpResponse` του Django. "
"Για παράδειγμα, όταν κάνετε streaming ένα αρχείο το οποίο παίρνει αρκετή ώρα "
"για να παραχθεί, μπορείτε να αποφύγετε την διακοπή σύνδεσης του load "
"balancer (Error 522: Connection timed out) που θα προέκυπτε όσο ο server σας "
"παράγει το response."

msgid ""
"In this example, we make full use of Python generators to efficiently handle "
"the assembly and transmission of a large CSV file::"
msgstr ""
"Σε αυτό το παράδειγμα, χρησιμοποιούμε αμιγώς τους Python generators για να "
"χειριστούμε αποδοτικά την συναρμολόγηση και εκπομπή ενός μεγάλου, σε "
"μέγεθος, αρχείου CSV::"

msgid "Using the template system"
msgstr "Χρησιμοποιώντας το σύστημα template του Django"

msgid ""
"Alternatively, you can use the :doc:`Django template system </topics/"
"templates>` to generate CSV. This is lower-level than using the convenient "
"Python :mod:`csv` module, but the solution is presented here for "
"completeness."
msgstr ""
"Εναλλακτικά, μπορείτε να χρησιμοποιήσετε το :doc:`σύστημα template του "
"Django </topics/templates>` για να δημιουργήσετε CSV αρχεία. Αυτή η μέθοδος "
"είναι χαμηλού επιπέδου (low-level) εν συγκρίσει με τη χρήση του, βολικού, "
"module :mod:`csv` της Python, αλλά παρουσιάζεται εδώ για λόγους πληρότητας."

msgid ""
"The idea here is to pass a list of items to your template, and have the "
"template output the commas in a :ttag:`for` loop."
msgstr ""
"Η ιδέα εδώ είναι να περάσετε μια λίστα από items στο template σας και να "
"βάλετε το template να εισάγει τα κόμματα μέσα σε ένα βρόγχο επανάληψης, :"
"ttag:`for`."

msgid "Here's an example, which generates the same CSV file as above::"
msgstr ""
"Εδώ φαίνεται ένα παράδειγμα, στο οποίο παράγεται το ίδιο αρχείο CSV όπως "
"παραπάνω::"

msgid ""
"The only difference between this example and the previous example is that "
"this one uses template loading instead of the CSV module. The rest of the "
"code -- such as the ``content_type='text/csv'`` -- is the same."
msgstr ""
"Η μόνη διαφορά αυτού του παραδείγματος με το προηγούμενο είναι ότι αυτό "
"χρησιμοποιεί το template loading αντί του CSV module. Ο υπόλοιπος κώδικας -- "
"όπως το ``content_type='text/csv'`` -- παραμένει ο ίδιος."

msgid ""
"Then, create the template ``my_template_name.txt``, with this template code:"
msgstr ""
"Έπειτα, δημιουργήστε ένα template ``my_template_name.txt``, με τον template "
"κώδικα, ως εξής:"

msgid ""
"This template is quite basic. It just iterates over the given data and "
"displays a line of CSV for each row. It uses the :tfilter:`addslashes` "
"template filter to ensure there aren't any problems with quotes."
msgstr ""
"Αυτό το template είναι αρκετά απλό. Απλώς κάνει iterate πάνω στα δοσμένα "
"δεδομένα (``data``) και εμφανίζει μια γραμμή CSV για κάθε γραμμή. "
"Χρησιμοποιεί το φίλτρο :tfilter:`addslashes` για την επιβεβαίωση μη ύπαρξης "
"προβλημάτων με τυχόν μονά ή διπλά εισαγωγικά."

msgid "Other text-based formats"
msgstr "Άλλες μορφές τύπου κειμένου"

msgid ""
"Notice that there isn't very much specific to CSV here -- just the specific "
"output format. You can use either of these techniques to output any text-"
"based format you can dream of. You can also use a similar technique to "
"generate arbitrary binary data; see :doc:`/howto/outputting-pdf` for an "
"example."
msgstr ""
"Όπως είδατε, δεν υπάρχει κάτι συγκεκριμένο με το CSV εδώ -- απλώς μια "
"συγκεκριμένη μορφή εξόδου. Μπορείτε να χρησιμοποιήσετε τις ανωτέρω τεχνικές "
"για να εξάγετε οποιαδήποτε μορφή τύπου κειμένου εσείς θέλετε. Μπορείτε, "
"επίσης, να χρησιμοποιήσετε μια παρόμοια τεχνική για να παράγετε αυθαίρετα "
"δυαδικά δεδομένα. Δείτε στο άρθρο :doc:`εξάγοντας αρχεία PDF με το Django </"
"howto/outputting-pdf>` για ένα παράδειγμα."

msgid "Outputting PDFs with Django"
msgstr "Εξάγοντας αρχεία PDF με το Django"

msgid ""
"This document explains how to output PDF files dynamically using Django "
"views. This is made possible by the excellent, open-source ReportLab_ Python "
"PDF library."
msgstr ""
"Αυτό το άρθρο εξηγεί πως να εξάγετε αρχεία PDF, δυναμικά, χρησιμοποιώντας τα "
"Django views. Αυτό είναι εφικτό, με τη χρήση της εξαιρετικής, ανοιχτού "
"λογισμικου PDF βιβλιοθήκης της Python, ReportLab_."

msgid ""
"The advantage of generating PDF files dynamically is that you can create "
"customized PDFs for different purposes -- say, for different users or "
"different pieces of content."
msgstr ""
"Το πλεονέκτημα της παραγωγής δυναμικών αρχείων PDF είναι ότι μπορείτε να "
"δημιουργείτε παραμετροποιήσιμα PDFs για διαφορετικούς σκοπούς -- πχ, για "
"διαφορετικούς χρήστες ή διαφορετικά κομμάτια δεδομένων."

msgid ""
"For example, Django was used at kusports.com_ to generate customized, "
"printer-friendly NCAA tournament brackets, as PDF files, for people "
"participating in a March Madness contest."
msgstr ""
"Για παράδειγμα, το Django χρησιμοποιήθηκε στο kusports.com_ για να παράγει "
"παραμετροποιήσιμα, φιλικά προς εκτύπωση αποτελέσματα αγώνων μπάσκετ (NCAA "
"tournament brackets), ως αρχεία PDF, για αυτούς που συμμετέχουν στον "
"διαγωνισμό March Madness."

msgid "Install ReportLab"
msgstr "Εγκατάσταση της βιβλιοθήκης ReportLab"

msgid ""
"The ReportLab library is `available on PyPI`_. A `user guide`_ (not "
"coincidentally, a PDF file) is also available for download. You can install "
"ReportLab with ``pip``:"
msgstr ""
"Η βιβλιοθήκη ReportLab είναι `διαθέσιμη στο PyPI <https://pypi.python.org/"
"pypi/reportlab>`_. Ένας `οδηγός χρήστη <http://www.reportlab.com/docs/"
"reportlab-userguide.pdf>`_ (όχι τυχαία, ένα PDF αρχείο) είναι επίσης "
"διαθέσιμο για download. Μπορείτε να εγκαταστήσετε το ReportLab με το ``pip``:"

msgid ""
"Test your installation by importing it in the Python interactive "
"interpreter::"
msgstr ""
"Ελέγξτε την εγκατάσταση της βιβλιοθήκης κάνοντας την import στο Python "
"interactive shell σας (αν την έχετε εγκαταστήσει globally, τότε σε κονσόλα "
"γράψτε πρώτα ``python`` ή ``python3.x`` όπου ``x`` η έκδοση Python που "
"χρησιμοποιείτε)::"

msgid "If that command doesn't raise any errors, the installation worked."
msgstr ""
"Αν αυτό δεν σας εμφανίσει κάποιο σφάλμα, η βιβλιοθήκη έχει εγκατασταθεί "
"επιτυχώς."

msgid "Write your view"
msgstr "Γράψτε το view"

msgid ""
"The key to generating PDFs dynamically with Django is that the ReportLab API "
"acts on file-like objects, and Django's :class:`~django.http.HttpResponse` "
"objects are file-like objects."
msgstr ""
"Το κλειδί για να παράγετε PDFs δυναμικά με το Django είναι ότι το ReportLab "
"API ενεργεί σε objects που μοιάζουν με αρχεία και τα objects της κλάσης :"
"class:`~django.http.HttpResponse` του Django μοιάζουν με αρχεία."

msgid "Here's a \"Hello World\" example::"
msgstr "Εδώ φαίνεται το κλασικό παράδειγμα \"Hello World\"::"

msgid ""
"The response gets a special MIME type, :mimetype:`application/pdf`. This "
"tells browsers that the document is a PDF file, rather than an HTML file. If "
"you leave this off, browsers will probably interpret the output as HTML, "
"which would result in ugly, scary gobbledygook in the browser window."
msgstr ""
"Το response παίρνει έναν ειδικό τύπο MIME, :mimetype:`application/pdf`. Αυτό "
"λέει στους browsers ότι το έγγραφο είναι ένα PDF αρχείο, αντί ένα HTML "
"αρχείο. Αν δεν το προσδιορίσετε, οι browsers θα ερμηνεύσουν την έξοδο ως "
"HTML, που σημαίνει ότι όχι μόνο η έξοδος θα είναι άσχημη αλλά δεν θα "
"καταλαβαίνετε τίποτα!"

msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the PDF file. This filename is arbitrary: Call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialog, "
"etc."
msgstr ""
"Το response παίρνει ένα επιπλέον header με το όνομα ``Content-Disposition``, "
"ο οποίος περιέχει το όνομα του αρχείου PDF. Το όνομα αυτό είναι αυθαίρετο: "
"Μπορείτε να το ονομάσετε όπως εσείς θέλετε. Θα χρησιμοποιηθεί από τους "
"browsers στο παράθυρο διαλόγου \"Αποθήκευση ως...\" κλπ."

msgid ""
"The ``Content-Disposition`` header starts with ``'attachment; '`` in this "
"example. This forces Web browsers to pop-up a dialog box prompting/"
"confirming how to handle the document even if a default is set on the "
"machine. If you leave off ``'attachment;'``, browsers will handle the PDF "
"using whatever program/plugin they've been configured to use for PDFs. "
"Here's what that code would look like::"
msgstr ""
"Σε αυτό το παράδειγμα, ο header ``Content-Disposition`` ξεκινά με τη λέξη "
"``'attachment; '``. Αυτό αναγκάζει τους Web browsers να εμφανίσουν ένα pop-"
"up παράθυρο διαλόγου ρωτώντας τον χρήστη πως να χειριστεί το έγγραφο ακόμη "
"και αν μια προεπιλεγμένη ενέργεια είναι ρυθμισμένη στον browser. Αν το "
"παραλείψετε αυτό, οι browsers θα χειριστούν το PDF χρησιμοποιώντας "
"οποιοδήποτε πρόγραμμα/plugin είναι ρυθμισμένοι να χρησιμοποιούν όταν "
"έρχονται αντιμέτωποι με τέτοιου είδους αρχεία. Ο κώδικας θα φαίνεται κάπως "
"έτσι::"

msgid ""
"Hooking into the ReportLab API is easy: Just pass ``response`` as the first "
"argument to ``canvas.Canvas``. The ``Canvas`` class expects a file-like "
"object, and :class:`~django.http.HttpResponse` objects fit the bill."
msgstr ""
"Η επικοινωνία με το ReportLab API είναι εύκολη: Απλώς περάστε το "
"``response`` ως πρώτο όρισμα στην κλάση ``canvas.Canvas``. Η κλάση "
"``Canvas`` περιμένει ένα object που μοιάζει με αρχείο και τα objects της "
"κλάσης :class:`~django.http.HttpResponse` ταιριάζουν ακριβώς με την "
"περιγραφή."

msgid ""
"Note that all subsequent PDF-generation methods are called on the PDF object "
"(in this case, ``p``) -- not on ``response``."
msgstr ""
"Σημειώστε ότι όλες οι ακόλουθες μέθοδοι που δημιουργούν PDF, καλούνται πάνω "
"στο PDF object (σε αυτή την περίπτωση, στο ``p``) -- όχι πάνω στο "
"``response``."

msgid ""
"Finally, it's important to call ``showPage()`` and ``save()`` on the PDF "
"file."
msgstr ""
"Στο τέλος είναι σημαντικό να καλέσετε τις μεθόδους ``showPage()`` και "
"``save()`` στο PDF object."

msgid ""
"ReportLab is not thread-safe. Some of our users have reported odd issues "
"with building PDF-generating Django views that are accessed by many people "
"at the same time."
msgstr ""
"Η βιβλιοθήκη ReportLab δεν είναι ασφαλής από πολλαπλά threads. Μερικοί από "
"τους χρήστες ανέφεραν κάποια περίεργα προβλήματα όταν πολλοί χρήστες είχαν "
"πρόσβαση, ταυτόχρονα, στα Django views που χρησιμοποιούνταν για να παράξουν "
"PDF αρχεία."

msgid "Complex PDFs"
msgstr "Περίπλοκα PDFs"

msgid ""
"If you're creating a complex PDF document with ReportLab, consider using "
"the :mod:`io` library as a temporary holding place for your PDF file. This "
"library provides a file-like object interface that is particularly "
"efficient. Here's the above \"Hello World\" example rewritten to use :mod:"
"`io`::"
msgstr ""
"Αν δημιουργείτε ένα περίπλοκο έγγραφο PDF με το ReportLab, σκεφτείτε να "
"χρησιμοποιήσετε τη βιβλιοθήκη :mod:`io` ως ένα προσωρινό μέρος για να "
"κρατάτε το PDF αρχείο σας. Αυτή η βιβλιοθήκη παρέχει ένα interface που "
"μοιάζει με file object το οποίο είναι ιδιαίτερα αποδοτικό. Παρακάτω φαίνεται "
"το παράδειγμα \"Hello World\" χρησιμοποιώντας, αυτή τη φορά, τη βιβλιοθήκη :"
"mod:`io`::"

msgid "Further resources"
msgstr "Επιπλέον πηγές"

msgid ""
"PDFlib_ is another PDF-generation library that has Python bindings. To use "
"it with Django, just use the same concepts explained in this article."
msgstr ""
"Η PDFlib_ είναι άλλη μια βιβλιοθήκη για παραγωγή PDF αρχείων που συνδέεται "
"με την Python. Για να τη χρησιμοποιήσετε με το Django, απλώς χρησιμοποιήστε "
"τις ίδιες τεχνικές που περιγράφτηκαν σε αυτό το άρθρο."

msgid ""
"`XHTML2PDF`_ is yet another PDF-generation library. It ships with an example "
"of how to integrate it with Django."
msgstr ""
"Άλλη μια βιβλιοθήκη παραγωγής PDF αρχείων είναι και η `XHTML2PDF`_. Έρχεται "
"με ένα παράδειγμα ενσωμάτωσης της με το Django."

msgid ""
"HTMLdoc_ is a command-line script that can convert HTML to PDF. It doesn't "
"have a Python interface, but you can escape out to the shell using "
"``system`` or ``popen`` and retrieve the output in Python."
msgstr ""
"Η HTMLdoc_ είναι μια εντολή κονσόλας η οποία μετατρέπει την HTML σε PDF. Δεν "
"έχει κάποιο Python interface, αλλά μπορείτε να βγείτε στο shell (στην "
"κονσόλα σας, αν θέλετε) χρησιμοποιώντας τη μέθοδο ``system`` ή ``popen`` του "
"module subprocess της Python για να έχετε πρόσβαση στην έξοδο της εντολής "
"μέσω της Python."

msgid "Other formats"
msgstr "Άλλες μορφές τύπου κειμένου"

msgid ""
"Notice that there isn't a lot in these examples that's PDF-specific -- just "
"the bits using ``reportlab``. You can use a similar technique to generate "
"any arbitrary format that you can find a Python library for. Also see :doc:`/"
"howto/outputting-csv` for another example and some techniques you can use "
"when generated text-based formats."
msgstr ""
"Όπως είδατε, δεν υπάρχει κάτι συγκεκριμένο με το PDF εδώ -- μόνο τα κομμάτια "
"που χρησιμοποιούν τη βιβλιοθήκη ``reportlab``. Μπορείτε να χρησιμοποιήσετε "
"κάποια παρόμοια τεχνική για να εξάγετε οποιαδήποτε μορφή τύπου κειμένου, "
"αρκεί να υπάρχει μια Python βιβλιοθήκη που να την υποστηρίζει. Δείτε στο "
"άρθρο :doc:`εξάγοντας αρχεία CSV με το Django </howto/outputting-csv>` για "
"ένα άλλο παράδειγμα και μερικές τεχνικές που μπορείτε να χρησιμοποιήσετε "
"όταν παράγετε αρχεία με μορφή τύπου κειμένου."

msgid "Deploying static files"
msgstr "Ανεβάζοντας τα static files"

msgid ""
"For an introduction to the use of :mod:`django.contrib.staticfiles`, see :"
"doc:`/howto/static-files/index`."
msgstr ""
"Για μια εισαγωγή στη χρήση του module :mod:`django.contrib.staticfiles`, "
"δείτε στο άρθρο :doc:`Διαχειρίζοντας τα static files (πχ εικόνες, "
"JavaScript, CSS κλπ) </howto/static-files/index>`."

msgid "Serving static files in production"
msgstr "Εξυπηρετώντας τα static files στην παραγωγή"

msgid ""
"The basic outline of putting static files into production is simple: run "
"the :djadmin:`collectstatic` command when static files change, then arrange "
"for the collected static files directory (:setting:`STATIC_ROOT`) to be "
"moved to the static file server and served. Depending on :setting:"
"`STATICFILES_STORAGE`, files may need to be moved to a new location manually "
"or the :func:`post_process <django.contrib.staticfiles.storage."
"StaticFilesStorage.post_process>` method of the ``Storage`` class might take "
"care of that."
msgstr ""
"Τα βασικά βήματα για να εξυπηρετήσετε τα static files σας από κάποιον server "
"και όχι, φυσικά, τοπικά από τον υπολογιστή σας (όπως γίνεται αυτόματα με το "
"``runserver``) είναι απλά: τρέξτε την διαχειριστική εντολή :djadmin:"
"`collectstatic` όταν αλλάζουν τα static files και μετά δείτε πως μπορείτε να "
"μεταφέρετε τα static files που έχουν συλλεχθεί στον προκαθορισμένο, από "
"εσάς, φάκελο (:setting:`STATIC_ROOT`) στον server που θα χειρίζεται τα "
"static files και θα τα εξυπηρετεί. Αναλόγως τη ρύθμιση :setting:"
"`STATICFILES_STORAGE`, τα αρχεία ίσως χρειαστεί να μετακινηθούν χειροκίνητα "
"στη νέα τοποθεσία ή αυτό μπορεί να το τακτοποιήσει η μέθοδος :func:"
"`post_process <django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process>` της κλάσης ``Storage``."

msgid ""
"Of course, as with all deployment tasks, the devil's in the details. Every "
"production setup will be a bit different, so you'll need to adapt the basic "
"outline to fit your needs. Below are a few common patterns that might help."
msgstr ""
"Φυσικά, όπως με όλες τις διαδικασίες μετάβασης από το development στο "
"production περιβάλλον, ο διάβολος κρύβεται στις λεπτομέρειες. Κάθε "
"εγκατάσταση-ρύθμιση ενός production περιβάλλοντος είναι διαφορετική, που "
"σημαίνει ότι θα πρέπει να προσαρμόσετε τα ανωτέρω βασικά βήματα για να "
"ταιριάζουν με τις ανάγκες σας. Παρακάτω φαίνονται μερικά συνηθισμένα "
"παραδείγματα που μπορεί να βοηθήσουν."

msgid "Serving the site and your static files from the same server"
msgstr "Εξυπηρετώντας το site και τα static files σας από τον ίδιο server"

msgid ""
"If you want to serve your static files from the same server that's already "
"serving your site, the process may look something like:"
msgstr ""
"Αν θέλετε να εξυπηρετήσετε τα static files σας από τον ίδιο server ο οποίος "
"εξυπηρετεί ήδη το site σας, η διαδικασία θα μοιάζει κάπως έτσι:"

msgid "Push your code up to the deployment server."
msgstr "Ανεβάστε τον κώδικα σας στον deployment server."

msgid ""
"On the server, run :djadmin:`collectstatic` to copy all the static files "
"into :setting:`STATIC_ROOT`."
msgstr ""
"Στον server, τρέξτε την εντολή :djadmin:`collectstatic` για να αντιγραφτούν "
"όλα τα static files μέσα στο φάκελο :setting:`STATIC_ROOT`."

msgid ""
"Configure your web server to serve the files in :setting:`STATIC_ROOT` under "
"the URL :setting:`STATIC_URL`. For example, here's :ref:`how to do this with "
"Apache and mod_wsgi <serving-files>`."
msgstr ""
"Παραμετροποιήστε τον Web server σας για να εξυπηρετεί τα αρχεία του φακέλου :"
"setting:`STATIC_ROOT` στο URL :setting:`STATIC_URL`. Για παράδειγμα, δείτε :"
"ref:`πως μπορείτε να το κάνετε αυτό με τον Apache και το mod_wsgi <serving-"
"files>`."

msgid ""
"You'll probably want to automate this process, especially if you've got "
"multiple web servers. There's any number of ways to do this automation, but "
"one option that many Django developers enjoy is `Fabric <http://fabfile.org/"
">`_."
msgstr ""
"Το πιο πιθανό είναι, ίσως, να αυτοματοποιήσετε την παραπάνω διαδικασία, "
"ειδικά όταν έχετε πολλούς Web servers. Υπάρχουν πολλοί τρόποι να "
"πραγματοποιήσετε αυτόν τον αυτοματισμό, αλλά μια επιλογή που απολαμβάνουν "
"πολλοί Django developers είναι το `Fabric <http://fabfile.org/>`_."

msgid ""
"Below, and in the following sections, we'll show off a few example fabfiles "
"(i.e. Fabric scripts) that automate these file deployment options. The "
"syntax of a fabfile is fairly straightforward but won't be covered here; "
"consult `Fabric's documentation <http://docs.fabfile.org/>`_, for a complete "
"explanation of the syntax."
msgstr ""
"Παρακάτω και στις επόμενες ενότητες, θα σας δείξουμε μερικά παραδείγματα των "
"fabfiles αρχείων (δηλαδή, Fabric scripts) τα οποία αυτοματοποιούν την "
"παραπάνω διαδικασία του deployment των static files (και όχι μόνο). Η "
"σύνταξη ενός fabfile είναι αρκετά επεξηγηματική αλλά δεν θα καλυφθεί εδώ. "
"Συμβουλευτείτε το `Fabric's documentation <http://docs.fabfile.org/>`_, για "
"μια πλήρη εξήγηση της σύνταξης fabfile αρχείων."

msgid ""
"So, a fabfile to deploy static files to a couple of web servers might look "
"something like::"
msgstr ""
"Οπότε, ένα fabfile για να ανεβάσει τα static files σε μερικούς Web servers, "
"θα μοιάζει κάπως έτσι::"

msgid "Serving static files from a dedicated server"
msgstr "Εξυπηρετώντας τα static files από έναν dedicated server"

msgid ""
"Most larger Django sites use a separate Web server -- i.e., one that's not "
"also running Django -- for serving static files. This server often runs a "
"different type of web server -- faster but less full-featured. Some common "
"choices are:"
msgstr ""
"Τα περισσότερα μεγάλα Django sites χρησιμοποιούν ένα ξεχωριστό Web server -- "
"πχ κάποιον ο οποίος δεν τρέχει ήδη το Django – για να εξυπηρετήσουν τα "
"static files. Αυτός ο server συνήθως τρέχει έναν διαφορετικού τύπου web "
"server -- γρηγορότερος αλλά με λιγότερες λειτουργίες. Μερικές κοινές "
"επιλογές είναι:"

msgid ""
"Configuring these servers is out of scope of this document; check each "
"server's respective documentation for instructions."
msgstr ""
"Η παραμετροποίηση αυτών των servers είναι εκτός του πεδίου εφαρμογής του "
"παρόντος άρθρου. Συμβουλευτείτε το εγχειρίδιο καθενός από τους παραπάνω "
"servers για λεπτομέρειες και οδηγίες."

msgid ""
"Since your static file server won't be running Django, you'll need to modify "
"the deployment strategy to look something like:"
msgstr ""
"Εφόσον ο static file server δεν θα τρέχει το Django, θα χρειαστεί να "
"αλλάξετε τη στρατηγική του deployment για να μοιάζει κάπως έτσι:"

msgid "When your static files change, run :djadmin:`collectstatic` locally."
msgstr ""
"Όταν τα static files αλλάζουν, τρέξτε την εντολή :djadmin:`collectstatic` "
"τοπικά στον υπολογιστή σας."

msgid ""
"Push your local :setting:`STATIC_ROOT` up to the static file server into the "
"directory that's being served. `rsync <https://rsync.samba.org/>`_ is a "
"common choice for this step since it only needs to transfer the bits of "
"static files that have changed."
msgstr ""
"Ανεβάστε τον τοπικό σας φάκελο :setting:`STATIC_ROOT` στον static file "
"server μέσα στο φάκελο όπου εξυπηρετείται. Η εντολή `rsync <https://rsync."
"samba.org/>`_ είναι μια κοινή λύση για αυτό το βήμα καθώς δεν αντιγράφει "
"κάθε φορά όλο το φάκελο, παρά μόνο τις αλλαγές που έγιναν."

msgid "Here's how this might look in a fabfile::"
msgstr "Δείτε πως φαίνεται η παραπάνω διαδικασία, μέσα σε ένα fabfile::"

msgid "Serving static files from a cloud service or CDN"
msgstr "Εξυπηρετώντας τα static files από μια υπηρεσία cloud ή CDN"

msgid ""
"Another common tactic is to serve static files from a cloud storage provider "
"like Amazon's S3 and/or a CDN (content delivery network). This lets you "
"ignore the problems of serving static files and can often make for faster-"
"loading Web pages (especially when using a CDN)."
msgstr ""
"Μια άλλη συνηθισμένη τακτική είναι να εξυπηρετείτε τα static files από έναν "
"πάροχο αποθήκευσης αρχείων στο cloud, όπως είναι η υπηρεσία S3 της Amazon "
"και/ή σε κάποιο CDN (content delivery network). Αυτό, φυσικά, σας απαλλάσσει "
"από το πρόβλημα της εξυπηρέτησης των static files και συχνά συμβάλλει στη "
"γρηγορότερη φόρτωση των ιστοσελίδων (ειδικότερα αν χρησιμοποιείτε CDN)."

msgid ""
"When using these services, the basic workflow would look a bit like the "
"above, except that instead of using ``rsync`` to transfer your static files "
"to the server you'd need to transfer the static files to the storage "
"provider or CDN."
msgstr ""
"Όταν χρησιμοποιείτε αυτές τις υπηρεσίες, η βασική διαδικασία θα μοιάζει λίγο-"
"πολύ με την παραπάνω, εκτός του ότι αντί να χρησιμοποιείτε την εντολή "
"``rsync`` για να μεταφέρετε τα static files στον server, θα χρειαστεί να "
"μεταφέρετε τα static files στον πάροχο αποθήκευσης αρχείων ή στο CDN."

msgid ""
"There's any number of ways you might do this, but if the provider has an API "
"a :doc:`custom file storage backend </howto/custom-file-storage>` will make "
"the process incredibly simple. If you've written or are using a 3rd party "
"custom storage backend, you can tell :djadmin:`collectstatic` to use it by "
"setting :setting:`STATICFILES_STORAGE` to the storage engine."
msgstr ""
"Υπάρχουν πολλοί τρόποι για το πετύχετε αυτό, αλλά αν ο πάροχος έχει κάποιο "
"API, τότε ένα :doc:`παραμετροποιήσιμο σύστημα αποθήκευσης </howto/custom-"
"file-storage>` θα κάνει την διαδικασία απίστευτα απλή. Αν έχετε γράψει ή "
"χρησιμοποιείτε ένα σύστημα αποθήκευσης τρίτου (third-party custom storage "
"backend), μπορείτε να πείτε στην εντολή :djadmin:`collectstatic` να "
"χρησιμοποιήσει αυτό το σύστημα, ρυθμίζοντας ανάλογα την επιλογή :setting:"
"`STATICFILES_STORAGE` στη μηχανή αποθήκευσης."

msgid ""
"For example, if you've written an S3 storage backend in ``myproject.storage."
"S3Storage`` you could use it with::"
msgstr ""
"Για παράδειγμα, αν έχετε γράψει ένα σύστημα αποθήκευσης S3 στο αρχείο "
"``myproject.storage.S3Storage``, μπορείτε να το χρησιμοποιήσετε ως εξής::"

msgid ""
"Once that's done, all you have to do is run :djadmin:`collectstatic` and "
"your static files would be pushed through your storage package up to S3. If "
"you later needed to switch to a different storage provider, it could be as "
"simple as changing your :setting:`STATICFILES_STORAGE` setting."
msgstr ""
"Όταν γίνει αυτό, το μόνο που έχετε να κάνετε είναι να τρέξετε την εντολή :"
"djadmin:`collectstatic` και όλα τα static files σας θα αποθηκευτούν, μέσω "
"του συστήματος αποθήκευσης σας, στο S3. Αν αργότερα αποφασίσετε ότι θέλετε "
"να αλλάξετε πάροχο αποθήκευσης αρχείων, δεν θα μπορούσε να είναι πιο απλό "
"από το να αλλάξετε τη ρύθμιση :setting:`STATICFILES_STORAGE` αναλόγως."

msgid ""
"For details on how you'd write one of these backends, see :doc:`/howto/"
"custom-file-storage`. There are 3rd party apps available that provide "
"storage backends for many common file storage APIs. A good starting point is "
"the `overview at djangopackages.com <https://www.djangopackages.com/grids/g/"
"storage-backends/>`_."
msgstr ""
"Για λεπτομέρειες του πως να γράψετε ένα από αυτά τα συστήματα, δείτε στο "
"άρθρο :doc:`παραμετροποιήσιμο σύστημα αποθήκευσης αρχείων /howto/custom-file-"
"storage`. Υπάρχουν, επίσης, και διάφορες διαθέσιμες εφαρμογές, οι οποίες "
"παρέχουν συστήματα αποθήκευσης αρχειών για πολύ κοινά APIs αποθήκευσης "
"αρχείων. Μια καλή αρχή να ξεκινήσετε να ψάξετε τέτοιου είδους πακέτα (και "
"όχι μόνο) είναι το `djangopackages.com <https://www.djangopackages.com/grids/"
"g/storage-backends/>`_."

msgid "Learn more"
msgstr "Μάθετε περισσότερα"

msgid ""
"For complete details on all the settings, commands, template tags, and other "
"pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr ""
"Για πλήρεις λεπτομέρειες πάνω σε όλες τις ρυθμίσεις, εντολές, template tags "
"και άλλα κομμάτια που περιέχονται στο :mod:`django.contrib.staticfiles`, "
"δείτε στο άρθρο :doc:`αναφορά στα staticfiles </ref/contrib/staticfiles>`."

msgid "Managing static files (e.g. images, JavaScript, CSS)"
msgstr "Διαχειρίζοντας τα static files (πχ εικόνες, JavaScript, CSS)"

msgid ""
"Websites generally need to serve additional files such as images, "
"JavaScript, or CSS. In Django, we refer to these files as \"static files\".  "
"Django provides :mod:`django.contrib.staticfiles` to help you manage them."
msgstr ""
"Οι ιστοσελίδες, γενικά, χρειάζονται να εξυπηρετούν και επιπρόσθετα αρχεία "
"πέρα από την ίδια την HTML, όπως εικόνες, JavaScript, CSS, γραμματοσειρές "
"κλπ. Στο Django, αναφερόμαστε σε αυτού του είδους τα αρχεία ως \"στατικά "
"αρχεία\" (static files). Το Django παρέχει το module :mod:`django.contrib."
"staticfiles` για να σας βοηθήσει να τα διαχειρίζεστε."

msgid "This page describes how you can serve these static files."
msgstr ""
"Η σελίδα αυτή περιγράφει πως μπορείτε να εξυπηρετήσετε τέτοιου είδους "
"αρχεία, static files."

msgid "Configuring static files"
msgstr "Ρυθμίζοντας τα static files"

msgid ""
"Make sure that ``django.contrib.staticfiles`` is included in your :setting:"
"`INSTALLED_APPS`."
msgstr ""
"Βεβαιωθείτε ότι η εφαρμογή ``django.contrib.staticfiles`` συμπεριλαμβάνεται "
"στη ρύθμιση :setting:`INSTALLED_APPS`."

msgid "In your settings file, define :setting:`STATIC_URL`, for example::"
msgstr ""
"Στο γενικό αρχείο ρυθμίσεων σας, settings file, δώστε μια τιμή, string, στη "
"μεταβλητή :`STATIC_URL`. Για παράδειγμα::"

msgid ""
"In your templates, either hardcode the url like ``/static/my_app/example."
"jpg`` or, preferably, use the :ttag:`static` template tag to build the URL "
"for the given relative path by using the configured :setting:"
"`STATICFILES_STORAGE` storage (this makes it much easier when you want to "
"switch to a content delivery network (CDN) for serving static files)."
msgstr ""
"Στα templates σας, είτε εισάγετε με το χέρι το url για μια εικόνα, πχ κάπως "
"έτσι ``/static/my_app/myexample.jpg`` ή, προτιμότερο, χρησιμοποιήστε το "
"template tag :ttag:`static` για να χτίσετε το URL ενός δοσμένου relative "
"path χρησιμοποιώντας την, ήδη παραμετροποιημένη ρύθμιση :setting:"
"`STATICFILES_STORAGE` (η χρήση του :ttag:`static` κάνει ακόμα πιο εύκολη, "
"μελλοντικά, την μετάβαση σε ένα content delivery network (CDN) για την "
"εξυπηρέτηση των static files)."

msgid ""
"Store your static files in a folder called ``static`` in your app. For "
"example ``my_app/static/my_app/example.jpg``."
msgstr ""
"Αποθηκεύστε τα static files σας σε έναν φάκελο που ονομάζεται ``static`` "
"μέσα στην εκάστοτε εφαρμογή σας. Για παράδειγμα ``my_app/static/my_app/"
"myimage.jpg``."

msgid "Serving the files"
msgstr "Εξυπηρετώντας τα αχεία"

msgid ""
"In addition to these configuration steps, you'll also need to actually serve "
"the static files."
msgstr ""
"Πέρα από τις ανωτέρω ρυθμίσεις, θα χρειαστεί, επίσης, να εξυπηρετήσετε αυτά "
"τα static files."

msgid ""
"During development, if you use :mod:`django.contrib.staticfiles`, this will "
"be done automatically by :djadmin:`runserver` when :setting:`DEBUG` is set "
"to ``True`` (see :func:`django.contrib.staticfiles.views.serve`)."
msgstr ""
"Κατά τη διάρκεια του development, αν χρησιμοποιείτε την εφαρμογή :mod:"
"`django.contrib.staticfiles`, η εξυπηρέτηση των static files θα γίνει "
"αυτόματα από το :djadmin:`runserver` όταν, φυσικά, το :setting:`DEBUG` είναι "
"``True`` (δείτε τη συνάρτηση :func:`django.contrib.staticfiles.views.serve`)."

msgid ""
"This method is **grossly inefficient** and probably **insecure**, so it is "
"**unsuitable for production**."
msgstr ""
"Αυτή η μέθοδος είναι **εντελώς αναποτελεσματική** και πιθανόν **μη "
"ασφαλής**, κάτι που την καθιστά **ακατάλληλη για την παραγωγή**."

msgid ""
"See :doc:`/howto/static-files/deployment` for proper strategies to serve "
"static files in production environments."
msgstr ""
"Δείτε στο άρθρο :doc:`ανεβάζοντας τα static files </howto/static-files/"
"deployment>` για τις σωστές στρατηγικές εξυπηρέτησης των static files σε "
"παραγωγικά περιβάλλοντα."

msgid ""
"Your project will probably also have static assets that aren't tied to a "
"particular app. In addition to using a ``static/`` directory inside your "
"apps, you can define a list of directories (:setting:`STATICFILES_DIRS`) in "
"your settings file where Django will also look for static files. For "
"example::"
msgstr ""
"Το project σας θα έχει, πιθανόν και κάποια static files τα οποία δεν θα "
"συνδέονται με κάποια συγκεκριμένη εφαρμογή. Αν θέλετε να εξυπηρετήσετε "
"στατικά αρχεία τα οποία θα είναι καθολικά για όλο το project σας, εκτός της "
"δημιουργίας του φακέλου ``static/`` μέσα σε κάθε εφαρμογή σας, μπορείτε να "
"ορίσετε μια λίστα από φακέλους (:setting:`STATICFILES_DIRS`) μέσα στο γενικό "
"αρχείο ρυθμίσεων σας, settings file, όπου το Django θα κοιτάξει, επίσης, για "
"επιπρόσθετα static files. Για παράδειγμα::"

msgid ""
"See the documentation for the :setting:`STATICFILES_FINDERS` setting for "
"details on how ``staticfiles`` finds your files."
msgstr ""
"Δείτε το εγχειρίδιο για τη ρύθμιση :setting:`STATICFILES_FINDERS` για "
"περισσότερες πληροφορίες σχετικά με το πως η εφαρμογή ``staticfiles`` "
"βρίσκει τα αρχεία σας. \n"
"\n"
"Αν μπερδευτήκατε σχετικά με την διαχείριση των static files, ας το πούμε με "
"άλλα λόγια: Ας υποθέσουμε ότι έχετε μέσα σε έναν φάκελο πχ static, στο root "
"του project σας (στο ίδιο επίπεδο που βρίσκεται και το ``manage.py``) ένα "
"CSS (πχ ``style.css``) και ένα JS αρχείο (πχ ``main.js``), τα οποία αφορούν "
"ολόκληρο το project σας. Όταν τρέξετε την εντολή :djadmin:`collectstatic`, "
"αυτά τα δύο αρχεία θα αντιγραφτούν από εκείνη την τοποθεσία (``static/``) "
"στο φάκελο που έχετε ορίσει στη ρύθμιση :setting:`STATIC_ROOT` (πχ "
"``static_remote/`` που βρίσκεται πάλι στο root του project σας). Ίσως αυτό "
"να σας φαίνεται παράξενο όταν γίνεται τοπικά στον υπολογιστή σας, επειδή "
"έχετε τα ίδια αρχεία σε δύο διαφορετικά σημεία, αλλά μην ανησυχείτε, η "
"εντολή :djadmin:`collectstatic` έχει ως σκοπό να μαζεύει-συγκεντρώνει όλα τα "
"static files σε έναν φάκελο για να μπορείτε να τον εξυπηρετήσετε αργότερα "
"στον server σας. Έχοντας δηλώσει το :setting:`STATIC_ROOT` θα πρέπει να "
"βρούμε έναν τρόπο να μπορούμε να αναφερθούμε σε αυτά τα αρχεία μέσω των "
"templates (πχ ``<link rel=\"stylesheet\" href=\"???\">``. Εδώ έρχονται να "
"βοηθήσουν η ρύθμιση :setting:`STATIC_URL` και το template tag :ttag:"
"`static`. Γράφοντας στο template ``<link rel=\"stylesheet\" href=\"{% static "
"'style.css' %}\">``, το Django γνωρίζει να βάλει στο attribute ``href`` την "
"τιμή ``<STATIC_URL>style.css`` ανάλογα την ρύθμιση :setting:`STATIC_URL`. Αν "
"πχ έχετε βάλει εκεί το ``/static/`` και το site σας βρίσκεται στη διεύθυνση "
"``http://www.mysite.com`` τότε η τιμή του ``href`` θα είναι ``http://www."
"mysite.com/static/style.css``."

msgid "Static file namespacing"
msgstr "Static file namespacing"

msgid ""
"Now we *might* be able to get away with putting our static files directly in "
"``my_app/static/`` (rather than creating another ``my_app`` subdirectory), "
"but it would actually be a bad idea. Django will use the first static file "
"it finds whose name matches, and if you had a static file with the same name "
"in a *different* application, Django would be unable to distinguish between "
"them. We need to be able to point Django at the right one, and the easiest "
"way to ensure this is by *namespacing* them. That is, by putting those "
"static files inside *another* directory named for the application itself."
msgstr ""
"Τώρα, *ίσως* θα μπορούσαμε να βάλουμε τα static files απ' ευθείας στο φάκελο "
"``my_app/static/`` (παρά να δημιουργήσουμε άλλον έναν υποφάκελο ``my_app``), "
"αλλά δεν θα ήταν καλή ιδέα. Το Django θα επιλέξει το πρώτο static file που "
"θα βρει το οποίο θα ταιριάξει στο όνομα που ψάχνει. Αν έχετε, λοιπόν, ένα "
"static file με το ίδιο όνομα σε μια *άλλη* εφαρμογή, τότε το Django δεν θα "
"μπορέσει να διαχωρίσει ποια από τα δύο να χρησιμοποιήσει. Χρειαζόμαστε ένα "
"τρόπο να καθοδηγήσουμε το Django στο σωστό αρχείο. Ο ευκολότερος τρόπος να "
"το κάνουμε είναι να εφαρμόσουμε την τεχνική του *namespacing* στα static "
"files. Δηλαδή, να τοποθετούμε αυτά τα static files μέσα σε *άλλον έναν* "
"φάκελο με το ίδιο όνομα με αυτό της εφαρμογής."

msgid "Serving static files during development"
msgstr "Εξυπηρετώντας τα static files κατά τη διάρκεια του development"

msgid ""
"If you use :mod:`django.contrib.staticfiles` as explained above, :djadmin:"
"`runserver` will do this automatically when :setting:`DEBUG` is set to "
"``True``. If you don't have ``django.contrib.staticfiles`` in :setting:"
"`INSTALLED_APPS`, you can still manually serve static files using the :func:"
"`django.contrib.staticfiles.views.serve` view."
msgstr ""
"Αν χρησιμοποιείτε την εφαρμογή :mod:`django.contrib.staticfiles` όπως "
"περιγράφηκε παραπάνω, ο :djadmin:`runserver` θα εξυπηρετήσει τα static files "
"αυτόματα αν το :setting:`DEBUG` είναι ``True``. Αν δεν έχετε την εφαρμογή "
"``django.contrib.staticfiles`` μέσα στη ρύθμιση :setting:`INSTALLED_APPS`, "
"μπορείτε ακόμη να τα εξυπηρετήσετε, χειροκίνητα, χρησιμοποιώντας το view :"
"func:`django.contrib.staticfiles.views.serve`."

msgid ""
"This is not suitable for production use! For some common deployment "
"strategies, see :doc:`/howto/static-files/deployment`."
msgstr ""
"Αυτό, φυσικά, δεν είναι κατάλληλο για την παραγωγή (όταν δηλαδή το site σας "
"είναι στον αέρα, διαθέσιμο για το ευρύ κοινό)! Για μερικές κοινές deployment "
"στρατηγικές δείτε στο άρθρο :doc:`ανεβάζοντας τα static files </howto/static-"
"files/deployment>`."

msgid ""
"For example, if your :setting:`STATIC_URL` is defined as ``/static/``, you "
"can do this by adding the following snippet to your urls.py::"
msgstr ""
"Για παράδειγμα, αν το :setting:`STATIC_URL` έχει οριστεί ως ``/static/``, "
"μπορείτε να κάνετε χρήση της :func:`django.contrib.staticfiles.views.serve`, "
"μέσα στο αρχείο urls.py, ως εξής::"

msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``/static/``) and not a URL (e.g. ``http://static.example.com/"
"``)."
msgstr ""
"Αυτή η βοηθητική συνάρτηση δουλεύει μόνο σε debug mode (ήτοι το :setting:"
"`DEBUG` είναι ``True``) και μόνο αν το δοσμένο πρόθεμα είναι τοπικό  (πχ ``/"
"static/``) και όχι ένα URL (πχ ``http://static.example.com/``)."

msgid ""
"Also this helper function only serves the actual :setting:`STATIC_ROOT` "
"folder; it doesn't perform static files discovery like :mod:`django.contrib."
"staticfiles`."
msgstr ""
"Επίσης, αυτή η βοηθητική συνάρτηση εξυπηρετεί μόνο το φάκελο :setting:"
"`STATIC_ROOT`. Δεν πραγματοποιεί την πραγματική αναζήτηση των static files, "
"όπως κάνει η εφαρμογή :mod:`django.contrib.staticfiles`."

msgid "Serving files uploaded by a user during development"
msgstr ""
"Εξυπηρετώντας αρχεία τα οποία ανέβηκαν από έναν χρήστη κατά τη διάρκεια του "
"development"

msgid ""
"During development, you can serve user-uploaded media files from :setting:"
"`MEDIA_ROOT` using the :func:`django.contrib.staticfiles.views.serve` view."
msgstr ""
"Στο Django, τα αρχεία που ανεβαίνουν στον server σας από κάποιον χρήστη (ή "
"από τον admin μέσω του :mod:`django.contrib.admin`) ονομάζονται media files "
"ή media assets και γι' αυτό το λόγο υπάρχει ένας διαχωρισμός μεταξύ των "
"μεταβλητών στις ρυθμίσεις, πχ :setting:`MEDIA_ROOT`, :setting:`MEDIA_URL`, :"
"setting:`STATIC_ROOT` και :setting:`STATIC_URL`. Κατά τη διάρκεια του "
"development, μπορείτε να εξυπηρετήσετε τα media files που ανέβηκαν από "
"κάποιον χρήστη μέσω της ρύθμισης :setting:`MEDIA_ROOT` χρησιμοποιώντας το "
"view :func:`django.contrib.staticfiles.views.serve`."

msgid ""
"For example, if your :setting:`MEDIA_URL` is defined as ``/media/``, you can "
"do this by adding the following snippet to your urls.py::"
msgstr ""
"Για παράδειγμα, αν το :setting:`MEDIA_URL` έχει οριστεί ως ``/media/``, "
"μπορείτε να κάνετε χρήση της :func:`django.contrib.staticfiles.views.serve`, "
"μέσα στο αρχείο urls.py, ως εξής::"

msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``/media/``) and not a URL (e.g. ``http://media.example.com/"
"``)."
msgstr ""
"Αυτή η βοηθητική συνάρτηση δουλεύει μόνο σε debug mode (ήτοι το :setting:"
"`DEBUG` είναι ``True``) και μόνο αν το δοσμένο πρόθεμα είναι τοπικό  (πχ ``/"
"media/``) και όχι ένα URL (πχ ``http://media.example.com/``).\n"
"\n"
"Σε περίπτωση που δεν είστε εξοικειωμένοι με τα media files διαβάστε αυτό: Ας "
"υποθέσουμε ότι έχουμε ένα μοντέλο το οποίο έχει ένα πεδίο τύπου "
"``ImageField`` με το όνομα ``thumbnail``. Σε αυτό το πεδίο έχετε περάσει το "
"όρισμα ``upload_to`` με την τιμή ``images``. Όλο αυτό σε κώδικα, θα μοιάζει "
"κάπως έτσι: ``thumbnail = models.ImageField('thumbnail image', "
"upload_to='images')``. Ας υποθέσουμε, επίσης, ότι αυτό το thumbnail μπορεί "
"να το ανεβάσει στον server όποιος έχει πρόσβαση μέσω του Django admin site, :"
"mod:`django.contrib.admin`. Τέλος, στο γενικό αρχείο ρυθμίσεων έχουμε τα "
"εξής: η ρύθμιση :setting:`MEDIA_ROOT` είναι πχ ``media_remote/`` και η "
"ρύθμιση :setting:`MEDIA_URL` είναι πχ ``/media/``. Αυτό, βέβαια, σημαίνει "
"ότι έχετε δημιουργήσει τον φάκελο ``media_remote`` μέσα στο root του project "
"σας. Κάθε φορά, λοιπόν, που κάποιος εξουσιοδοτημένος χρήστης επιλέγει μια "
"εικόνα και πατάει το κουμπί ``Αποθήκευση``, η εικόνα αυτή αποθηκεύεται στο "
"φάκελο ``<MEDIA_ROOT>/<upload_to>/<όνομα_αρχείου>``. Για το παράδειγμα μας, "
"αν θέλουμε να αποθηκεύσουμε την εικόνα ``sky.jpg``, τότε αυτή θα αποθηκευτεί "
"στην τοποθεσία ``media_remote/images/sky.jpg``. Για να εμφανίσουμε αυτή την "
"εικόνα στα templates μας, θα χρησιμοποιήσουμε το ``src`` attribute του HTML "
"``<img>`` element ως εξής: ``<img src=”{{ img.url}}” alt=”sky image”>``. Αν "
"το site σας βρίσκεται στη διεύθυνση ``http://www.mysite.com``, τότε η τιμή "
"του ``src`` θα γίνει ``http://www.mysite.com/media/images/sky.jpg`` (ή αν "
"δουλεύετε τοπικά στη διεύθυνση 127.0.0.1:8000, αυτό θα γίνει "
"``127.0.0.1:8000/media/images/sky.jpg``)."

msgid ""
"When running tests that use actual HTTP requests instead of the built-in "
"testing client (i.e. when using the built-in :class:`LiveServerTestCase "
"<django.test.LiveServerTestCase>`) the static assets need to be served along "
"the rest of the content so the test environment reproduces the real one as "
"faithfully as possible, but ``LiveServerTestCase`` has only very basic "
"static file-serving functionality: It doesn't know about the finders feature "
"of the ``staticfiles`` application and assumes the static content has "
"already been collected under :setting:`STATIC_ROOT`."
msgstr ""
"Όταν τρέχετε τα τεστ τα οποία χρησιμοποιούν πραγματικά HTTP requests αντί "
"του προεγκατεστημένου testing client (πχ όταν χρησιμοποιείτε την κλάση :"
"class:`LiveServerTestCase <django.test.LiveServerTestCase>`), τα static "
"files θα χρειαστεί να εξυπηρετηθούν μαζί με το υπόλοιπο περιεχόμενο, "
"προκειμένου το περιβάλλον του τεστ σας να αναπαράγει το πραγματικό "
"περιβάλλον όσο πιο πιστά γίνεται. Αλλά η κλάση ``LiveServerTestCase`` "
"παρέχει μια πολύ βασική λειτουργία εξυπηρέτησης των static files: Δεν "
"γνωρίζει τίποτα σχετικά με τη λειτουργία των finders της εφαρμογής "
"``staticfiles`` και προϋποθέτει ότι τα static files έχουν ήδη συγκεντρωθεί "
"μέσα στο φάκελο :setting:`STATIC_ROOT`."

msgid ""
"Because of this, ``staticfiles`` ships its own :class:`django.contrib."
"staticfiles.testing.StaticLiveServerTestCase`, a subclass of the built-in "
"one that has the ability to transparently serve all the assets during "
"execution of these tests in a way very similar to what we get at development "
"time with ``DEBUG = True``, i.e. without having to collect them using :"
"djadmin:`collectstatic` first."
msgstr ""
"Εξαιτίας αυτού, η εφαρμογή ``staticfiles`` έρχεται με μια δική της κλάση :"
"class:`django.contrib.staticfiles.testing.StaticLiveServerTestCase`, μια "
"subclass της προεγκατεστημένης, η οποία έχει τη δυνατότητα να εξυπηρετεί με "
"έναν παρόμοιο τρόπο με αυτόν που τρέχουμε κατά τη διάρκεια του development "
"όταν το ``DEBUG = True``, διαφανώς, όλα τα assets κατά τη διάρκεια εκτέλεσης "
"αυτών των τεστ, πχ χωρίς να χρειαστεί να τα συγκεντρώνουμε πρώτα, "
"χρησιμοποιώντας την εντολή :djadmin:`collectstatic`."

msgid "Deployment"
msgstr "Deployment"

msgid ""
":mod:`django.contrib.staticfiles` provides a convenience management command "
"for gathering static files in a single directory so you can serve them "
"easily."
msgstr ""
"Η εφαρμογή :mod:`django.contrib.staticfiles` παρέχει μια βολική "
"διαχειριστική εντολή για να συγκεντρώσει (collect) όλα τα static files σε "
"ένα μόνο φάκελο ούτως ώστε να τα εξυπηρετήσετε εύκολα."

msgid ""
"Set the :setting:`STATIC_ROOT` setting to the directory from which you'd "
"like to serve these files, for example::"
msgstr ""
"Θέστε τη ρύθμιση :setting:`STATIC_ROOT` στον φάκελο από τον οποίο θα θέλετε "
"να εξυπηρετήσετε αυτά τα αρχεία. Για παράδειγμα::"

msgid "Run the :djadmin:`collectstatic` management command::"
msgstr "Τρέξτε την εντολή :djadmin:`collectstatic`::"

msgid ""
"This will copy all files from your static folders into the :setting:"
"`STATIC_ROOT` directory."
msgstr ""
"Η εντολή αυτή θα αντιγράψει όλα τα αρχεία από τους επιμέρους φακέλους με το "
"όνομα ``static`` (αν υπάρχουν) κάθε εφαρμογής και όλα τα αρχεία στους "
"φακέλους που περιέχονται στη ρύθμιση :setting:`STATICFILES_DIRS` στον έναν "
"και μοναδικό φάκελο :setting:`STATIC_ROOT`."

msgid ""
"Use a web server of your choice to serve the files. :doc:`/howto/static-"
"files/deployment` covers some common deployment strategies for static files."
msgstr ""
"Χρησιμοποιήστε έναν Web server της επιλογής σας για να εξυπηρετήσετε αυτά τα "
"αρχεία. Το άρθρο :doc:`ανεβάζοντας τα static files </howto/static-files/"
"deployment>` καλύπτει μερικές κοινές deployment στρατηγικές για τα static "
"files."

msgid ""
"This document has covered the basics and some common usage patterns. For "
"complete details on all the settings, commands, template tags, and other "
"pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr ""
"Αυτό το άρθρο κάλυψε τα βασικά και μερικές συνηθισμένες πρακτικές. Για "
"πλήρεις λεπτομέρειες πάνω σε όλες τις ρυθμίσεις, εντολές, template tags και "
"άλλα κομμάτια που περιέχονται στο :mod:`django.contrib.staticfiles`, δείτε "
"στο άρθρο :doc:`αναφορά στα staticfiles </ref/contrib/staticfiles>`."

msgid "Upgrading Django to a newer version"
msgstr "Αναβαθμίζοντας το Django σε μια καινούργια έκδοση"

msgid ""
"While it can be a complex process at times, upgrading to the latest Django "
"version has several benefits:"
msgstr ""
"Παρόλο που μπορεί, μερικές φορές, να είναι περίπλοκη διαδικασία, η "
"αναβάθμιση στην τελευταία έκδοση του Django έχει πολλά οφέλη:"

msgid "New features and improvements are added."
msgstr "Προσθήκη καινούργιων λειτουργίων και βελτιστοποιήσεων."

msgid "Bugs are fixed."
msgstr "Επιδιόρθωση σφαλμάτων."

msgid ""
"Older version of Django will eventually no longer receive security updates. "
"(see :ref:`backwards-compatibility-policy`)."
msgstr ""
"Οι παλαιότερες εκδόσεις του Django δεν θα λαμβάνουν, από κάποιο σημείο κι "
"ύστερα, ενημερώσεις ασφαλείας (security updates). (δείτε την :ref:`πολιτική "
"συμβατότητας παλαιότερων εκδόσεων <backwards-compatibility-policy>`)."

msgid ""
"Upgrading as each new Django release is available makes future upgrades less "
"painful by keeping your code base up to date."
msgstr ""
"Η αναβάθμιση σε κάθε καινούργια διανομή του Django κάνει τις μελλοντικές "
"αναβαθμίσεις λιγότερο περίπλοκες, διατηρώντας τον κώδικα σας ενημερωμένο."

msgid ""
"Here are some things to consider to help make your upgrade process as smooth "
"as possible."
msgstr ""
"Παρακάτω επισημαίνουμε ορισμένα σημεία για να σας βοηθήσουμε να κάνετε την "
"κάθε αναβάθμιση όσο γίνεται πιο ομαλά."

msgid "Required Reading"
msgstr "Απαραίτητη ανάγνωση"

msgid ""
"If it's your first time doing an upgrade, it is useful to read the :doc:"
"`guide on the different release processes </internals/release-process>`."
msgstr ""
"Αν είναι η πρώτη σας φορά που κάνετε αναβάθμιση, είναι χρήσιμο να διαβάσετε "
"τον :doc:`οδηγό της διαδικασίας για διαφορετικές εκδόσεις </internals/"
"release-process>`."

msgid ""
"Afterwards, you should familiarize yourself with the changes that were made "
"in the new Django version(s):"
msgstr ""
"Έπειτα, θα πρέπει να εξοικειωθείτε με τις αλλαγές που έγιναν στην καινούργια "
"Django έκδοση ή εκδόσεις:"

msgid ""
"Read the :doc:`release notes </releases/index>` for each 'final' release "
"from the one after your current Django version, up to and including the "
"version to which you plan to upgrade."
msgstr ""
"Διαβάστε το άρθρο :doc:`σημειώσεις διανομής </releases/index>` για κάθε "
"'final' διανομή από την αμέσως επόμενη της δικής σας έκδοσης μέχρι αυτή που "
"θέλετε να αναβαθμίσετε."

msgid ""
"Look at the :doc:`deprecation timeline</internals/deprecation>` for the "
"relevant versions."
msgstr ""
"Δείτε στο άρθρο :doc:`χρονοδιάγραμμα του deprecation </internals/"
"deprecation>` για τις σχετικές εκδόσεις, ούτως ώστε να αποφύγετε να "
"χρησιμοποιείτε deprecated λειτουργίες."

msgid ""
"Pay particular attention to backwards incompatible changes to get a clear "
"idea of what will be needed for a successful upgrade."
msgstr ""
"Δώστε ιδιαίτερη προσοχή στις μη συμβατές, με παλαιότερες εκδόσεις, αλλαγές, "
"για να πάρετε μια σαφή ιδέα του τι χρειάζεται για μια επιτυχημένη αναβάθμιση."

msgid "Dependencies"
msgstr "Dependencies"

msgid ""
"In most cases it will be necessary to upgrade to the latest version of your "
"Django-related dependencies as well. If the Django version was recently "
"released or if some of your dependencies are not well-maintained, some of "
"your dependencies may not yet support the new Django version. In these cases "
"you may have to wait until new versions of your dependencies are released."
msgstr ""
"Στις περισσότερες περιπτώσεις θα είναι απαραίτητο να αναβαθμίσετε και τα "
"dependecies (πακέτα-εφαρμογές τρίτων) τα οποία χρησιμοποιείτε με το Django. "
"Αν μια έκδοση Django εκδόθηκε πρόσφατα ή κάποια από τα dependencies σας δεν "
"έχουν την ανάλογη και συχνή αναβάθμιση, τότε ίσως να μην υποστηρίζουν ακόμα "
"την καινούργια έκδοση του Django. Σε αυτές τις περιπτώσεις θα πρέπει να "
"περιμένετε μέχρις ότου εκδοθούν οι νέες εκδόσεις των dependencies σας."

msgid "Resolving deprecation warnings"
msgstr "Επιλύοντας τα deprecation warnings"

msgid ""
"Before upgrading, it's a good idea to resolve any deprecation warnings "
"raised by your project while using your current version of Django. Fixing "
"these warnings before upgrading ensures that you're informed about areas of "
"the code that need altering."
msgstr ""
"Πριν την αναβάθμιση, μια καλή ιδέα είναι να επιλύσετε τυχόν deprecation "
"warnings τα οποία γίνονται raised από το project σας, με την τρέχουσα έκδοση "
"του Django. Επιδιορθώνοντας αυτά τα warnings, πριν την αναβάθμιση, εγγυάται "
"ότι είστε ενημερωμένοι για τις περιοχές του κώδικα που θέλουν αλλαγή."

msgid ""
"In Python, deprecation warnings are silenced by default. You must turn them "
"on using the ``-Wall`` Python command line option or the :envvar:"
"`PYTHONWARNINGS` environment variable. For example, to show warnings while "
"running tests:"
msgstr ""
"Στην Python, τα deprecation warnings, από προεπιλογή, δεν εμφανίζονται. Θα "
"πρέπει να τα ενεργοποιήσετε χρησιμοποιώντας την παράμετρο ``-Wall`` της "
"εντολής ``python`` ή την environment variable :envvar:`PYTHONWARNINGS`. Για "
"παράδειγμα, για να εμφανίσετε τα warnings όταν τρέχετε τα τεστ σας, "
"χρησιμοποιήστε την εντολή ``python`` ως εξής:"

msgid ""
"If you're not using the Django test runner, you may need to also ensure that "
"any console output is not captured which would hide deprecation warnings. "
"For example, if you use `py.test`:"
msgstr ""
"Αν δεν χρησιμοποιείτε τον Django test runner, θα χρειαστεί, επίσης, να "
"σιγουρευτείτε ότι κάθε έξοδος της κονσόλας δεν γίνεται captured, κάτι το "
"οποίο θα έκρυβε τα deprecation warnings. Για παράδειγμα, αν χρησιμοποιείτε "
"το `py.test`:"

msgid ""
"Resolve any deprecation warnings with your current version of Django before "
"continuing the upgrade process."
msgstr ""
"Επιλύστε κάθε deprecation warning με την τρέχουσα έκδοση του Django που "
"χρησιμοποιείτε και μετά προχωρήστε στην διαδικασία της αναβάθμισης."

msgid ""
"Third party applications might use deprecated APIs in order to support "
"multiple versions of Django, so deprecation warnings in packages you've "
"installed don't necessarily indicate a problem. If a package doesn't support "
"the latest version of Django, consider raising an issue or sending a pull "
"request for it."
msgstr ""
"Οι εφαρμογές τρίτων ίσως χρησιμοποιούν deprecated APIs προκειμένου να "
"υποστηρίξουν πολλές εκδόσεις του Django, οπότε τα deprecation warnings στα "
"πακέτα που έχετε εγκαταστήσει, ίσως να μην αποτελούν πρόβλημα. Αν ένα πακέτο-"
"εφαρμογή δεν υποστηρίζει την τελευταία έκδοση του Django, σκεφτείτε μήπως "
"κάνετε raise κάποιο issue ή να στείλετε ένα pull request για αυτό."

msgid "Installation"
msgstr "Εγκατάσταση"

msgid ""
"Once you're ready, it is time to :doc:`install the new Django version </"
"topics/install>`. If you are using virtualenv_ and it is a major upgrade, "
"you might want to set up a new environment with all the dependencies first."
msgstr ""
"Όταν είστε έτοιμοι, :doc:`εγκαταστήστε τη νέα έκδοση του Django </topics/"
"install>`. Αν χρησιμοποιείτε virtualenv_ και αυτή αποτελεί κάποια σημαντική "
"αναβάθμιση, ίσως να θέλετε, πρώτα, να δημιουργήσετε ένα καινούργιο "
"περιβάλλον με όλα τα dependencies."

msgid ""
"Exactly which steps you will need to take depends on your installation "
"process. The most convenient way is to use pip_ with the ``--upgrade`` or ``-"
"U`` flag:"
msgstr ""
"Τα ακριβή βήματα που πρέπει να ακολουθήσετε, εξαρτώνται από την διαδικασία "
"της εγκατάστασης. Ο πιο βολικός τρόπος είναι η χρήση του pip_ με το flag ``--"
"upgrade`` ή ``-U``:"

msgid "pip_ also automatically uninstalls the previous version of Django."
msgstr ""
"Το pip_, επίσης, απεγκαθιστά, αυτόματα την προηγούμενη έκδοση του Django."

msgid ""
"If you use some other installation process, you might have to manually :ref:"
"`uninstall the old Django version <removing-old-versions-of-django>` and "
"should look at the complete installation instructions."
msgstr ""
"Αν χρησιμοποιείτε κάποια άλλη μέθοδο εγκατάστασης, θα πρέπει πρώτα να :ref:"
"`απεγκαταστήσετε την προηγούμενη έκδοση του Django <removing-old-versions-of-"
"django>` και μετά να εγκαταστήσετε την καινούργια σύμφωνα με τις οδηγίες "
"εγκατάστασης της μεθόδου αυτής."

msgid ""
"When the new environment is set up, :doc:`run the full test suite </topics/"
"testing/overview>` for your application. Again, it's useful to turn on "
"deprecation warnings on so they're shown in the test output (you can also "
"use the flag if you test your app manually using ``manage.py runserver``):"
msgstr ""
"Όταν το νέο περιβάλλον είναι έτοιμο, :doc:`τρέξτε ολόκληρη την σουίτα "
"ελέγχων του Django </topics/testing/overview>` για την εφαρμογή σας. Για "
"ακόμη μια φορά, είναι χρήσιμο να ενεργοποιήσετε τα deprecation warnings "
"ούτως ώστε να εμφανίζονται στην κονσόλα που τρέχει τα τεστ (μπορείτε επίσης "
"να χρησιμοποιήσετε το flag για να τεστάρετε την εφαρμογή σας χειροκίνητα, "
"χρησιμοποιώντας το ``manage.py runserver``):"

msgid ""
"After you have run the tests, fix any failures. While you have the release "
"notes fresh in your mind, it may also be a good time to take advantage of "
"new features in Django by refactoring your code to eliminate any deprecation "
"warnings."
msgstr ""
"Αφού έχετε τρέξει όλα τα τεστ, διορθώστε τυχόν περιπτώσεις που το τεστ δεν "
"πέτυχε (failures). Όσο έχετε φρέσκιες τις σημειώσεις της διανομής του Django "
"που αναβαθμίζετε, μια καλή ιδέα είναι να επωφεληθείτε των νέων "
"χαρακτηριστικών της καινούργια έκδοσης και να αλλάξετε τον κώδικα σας, σε "
"κάποια σημεία, για να εξαλείψετε τυχόν deprecation warnings."

msgid ""
"When you are sufficiently confident your app works with the new version of "
"Django, you're ready to go ahead and :doc:`deploy </howto/deployment/index>` "
"your upgraded Django project."
msgstr ""
"Όταν είστε απολύτως σίγουροι ότι η εφαρμογή σας δουλεύει με την νέα έκδοση "
"του Django, τότε είστε έτοιμοι να προχωρήσετε στο :doc:`deployment </howto/"
"deployment/index>` του αναβαθμισμένου, πλέον, Django project σας."

msgid ""
"If you are using caching provided by Django, you should consider clearing "
"your cache after upgrading. Otherwise you may run into problems, for "
"example, if you are caching pickled objects as these objects are not "
"guaranteed to be pickle-compatible across Django versions. A past instance "
"of incompatibility was caching pickled :class:`~django.http.HttpResponse` "
"objects, either directly or indirectly via the :func:`~django.views."
"decorators.cache.cache_page` decorator."
msgstr ""
"Αν χρησιμοποιείτε το caching που παρέχει το Django, ίσως θα ήταν καλύτερα να "
"αδειάσετε την μνήμη cache μετά την αναβάθμιση. Σε διαφορετική περίπτωση, "
"ίσως να έχετε προβλήματα, για παράδειγμα, αν κάνετε caching τυχόν pickled "
"objects καθώς αυτά τα objects δεν εγγυώνται ότι είναι συμβατά με όλες τις "
"εκδόσεις του Django.  Μια παλαιότερη ασυμβατότητα ήταν το caching των object "
"της κλάσης :class:`~django.http.HttpResponse`, είτε απ’ ευθείας είτε εμμέσως "
"μέσω του decorator :func:`~django.views.decorators.cache.cache_page`."

msgid "How to install Django on Windows"
msgstr "Πώς να εγκαταστήσετε το Django στα Windows"

msgid ""
"This document will guide you through installing Python 3.5 and Django on "
"Windows. It also provides instructions for installing `virtualenv`_ and "
"`virtualenvwrapper`_, which make it easier to work on Python projects. This "
"is meant as a beginner's guide for users working on Django projects and does "
"not reflect how Django should be installed when developing patches for "
"Django itself."
msgstr ""
"Το παρών άρθρο θα σας καθοδηγήσει στην εγκατάσταση της Python 3.5 και του "
"Django στα Windows. Παρέχει, επίσης, οδηγίες για την εγκατάσταση των πακέτων "
"`virtualenv`_ και `virtualenvwrapper`_, τα οποία διευκολύνουν, κατά πολύ, τη "
"ροή εργασίας με τα Python projects. Αυτό το άρθρο αφορά έναν οδηγό για "
"αρχάριους χρήστες που δουλεύουν πάνω σε Django projects και δεν "
"αντιπροσωπεύει το πώς πρέπει να εγκαθίσταται το Django όταν αναπτύσσετε "
"patches για το ίδιο το Django."

msgid ""
"The steps in this guide have been tested with Windows 7, 8, and 10. In other "
"versions, the steps would be similar. You will need to be familiar with "
"using the Windows command prompt."
msgstr ""
"Τα βήματα σε αυτό τον οδηγό έχουν ελεγχθεί στα Windows 7, 8 και 10. Σε άλλες "
"εκδόσεις, τα βήματα θα είναι παρόμοια. Θα χρειαστεί να είστε εξοικειωμένοι "
"με την γραμμή εντολών των Windows."

msgid "Install Python"
msgstr "Εγκατάσταση Python"

msgid ""
"Django is a Python web framework, thus requiring Python to be installed on "
"your machine. At the time of writing, Python 3.5 is the latest version."
msgstr ""
"Το Django είναι ένα Python web framework, που σημαίνει ότι απαιτεί "
"εγκατεστημένη στον υπολογιστή σας την γλώσσα προγραμματισμού Python. Τη "
"στιγμή που γράφεται το παρών άρθρο, η τελευταία έκδοση της Python είναι η "
"3.5."

msgid ""
"To install Python on your machine go to https://python.org/downloads/. The "
"website should offer you a download button for the latest Python version. "
"Download the executable installer and run it. Check the box next to ``Add "
"Python 3.5 to PATH`` and then click ``Install Now``."
msgstr ""
"Για να εγκαταστήσετε την Python στον υπολογιστή σας, επισκεφτείτε την "
"επίσημη ιστοσελίδα στη διεύθυνση https://python.org/downloads/. Το website "
"θα σας προσφέρει ένα download κουμπί για την τελευταία έκδοση της Python. "
"Κατεβάστε τον executable installer (το εκτελέσιμο αρχείο) και τρέξτε τον. "
"Τσεκάρετε επίσης το κουτάκι ``Add Python to environment variables`` και μετά "
"κλικάρετε στο κουμπί ``Install Now``."

msgid ""
"After installation, open the command prompt and check that the Python "
"version matches the version you installed by executing::"
msgstr ""
"Μετά την εγκατάσταση, ανοίξτε μια γραμμή εντολών και ελέγξτε ότι η έκδοση "
"Python που έχετε εγκατεστημένη ταιριάζει με αυτή που μόλις κατεβάσατε::"

msgid "About ``pip``"
msgstr "Σχετικά με το ``pip``"

msgid ""
"`pip`_ is a package manage for Python. It makes installing and uninstalling "
"Python packages (such as Django!) very easy. For the rest of the "
"installation, we'll use ``pip`` to install Python packages from the command "
"line."
msgstr ""
"Το `pip`_ είναι ένας διαχειριστής πακέτων για την Python. Κάνει την "
"εγκατάσταση και απεγκατάσταση των πακέτων της Python (όπως είναι και το "
"Django!) παιχνιδάκι. Για το υπόλοιπο της εγκατάστασης, θα χρησιμοποιήσουμε "
"το ``pip`` για να εγκαταστήσουμε διάφορα άλλα πακέτα της Python από τη "
"γραμμή εντολών."

msgid ""
"To install pip on your machine, go to https://pip.pypa.io/en/latest/"
"installing/, and follow the ``Installing with get-pip.py`` instructions."
msgstr ""
"Για την εγκατάσταση του pip στον υπολογιστή σας, επισκεφτείτε τη σελίδα "
"https://pip.pypa.io/en/latest/installing/ και ακολουθήστε τις οδηγίες στην "
"ενότητα ``Installing with get-pip.py``."

msgid "Install ``virtualenv`` and ``virtualenvwrapper``"
msgstr "Εγκατάσταση του ``virtualenv`` και του ``virtualenvwrapper``"

msgid ""
"`virtualenv`_ and `virtualenvwrapper`_ provide a dedicated environment for "
"each Django project you create. While not mandatory, this is considered a "
"best practice and will save you time in the future when you're ready to "
"deploy your project. Simply type::"
msgstr ""
"Τα πακέτα `virtualenv`_ και `virtualenvwrapper`_ παρέχουν ένα μεμονωμένο "
"περιβάλλον για κάθε Django project που δημιουργείτε. Παρόλο που δεν είναι "
"υποχρεωτικό, αυτό θεωρείται μια καλή πρακτική και θα σας γλυτώσει από πολύ "
"χρόνο στο μέλλον, όταν είστε έτοιμοι να ανεβάσετε το project σας στον αέρα "
"για το ευρύ κοινό (deployment). Για την εγκατάσταση τους, απλώς γράψτε::"

msgid "Then create a virtual environment for your project::"
msgstr ""
"Στη συνέχεια, δημιουργήστε ένα εικονικό περιβάλλον (virtual environment) για "
"το project σας::"

msgid ""
"The virtual environment will be activated automatically and you'll see "
"\"(myproject)\" next to the command prompt to designate that. If you start a "
"new command prompt, you'll need to activate the environment again using::"
msgstr ""
"Το virtual environment θα ενεργοποιηθεί αυτόματα και θα βλέπετε το "
"\"(myproject)\" στην αρχή κάθε γραμμής στη γραμμή εντολών για να σας "
"υπενθυμίζει ότι δουλεύετε σε αυτό το περιβάλλον (ήτοι το virtual environment "
"είναι ενεργοποιημένο). Αν ανοίξετε μια καινούργια γραμμή εντολών, θα "
"χρειαστεί να ενεργοποιήσετε, εκ νέου, το περιβάλλον χρησιμοποιώντας την "
"εντολή::"

msgid "Install Django"
msgstr "Εγκατάσταση Django"

msgid ""
"Django can be installed easily using ``pip`` within your virtual environment."
msgstr ""
"Το Django μπορεί να εγκατασταθεί εύκολα με το ``pip`` μέσα στο virtual "
"environment που μόλις φτιάξατε."

msgid ""
"In the command prompt, ensure your virtual environment is active, and "
"execute the following command::"
msgstr ""
"Από την γραμμή εντολών, βεβαιωθείτε ότι το virtual environment σας είναι "
"ενεργοποιημένο και εκτελέστε την ακόλουθη εντολή::"

msgid "This will download and install the latest Django release."
msgstr ""
"Η παραπάνω εντολή θα κατεβάσει και θα εγκαταστήσει την τελευταία έκδοση του "
"Django. Αν θέλατε άλλη έκδοση και όχι την τελευταία, τότε θα γράφατε ``pip "
"install django==x.x``, όπου x.x η έκδοση που θέλετε να εγκαταστήσετε."

msgid ""
"After the installation has completed, you can verify your Django "
"installation by executing ``django-admin --version`` in the command prompt."
msgstr ""
"Αφού ολοκληρωθεί η εγκατάσταση, μπορείτε να επιβεβαιώσετε ότι εγκαταστάθηκε "
"ορθά, εκτελώντας την εντολή ``django-admin --version`` μέσα από τη γραμμή "
"εντολών."

msgid ""
"See :ref:`database-installation` for information on database installation "
"with Django."
msgstr ""
"Δείτε στο άρθρο See :ref:`εγκατάσταση βάσης δεδομένων στο Django <database-"
"installation>` αν θέλετε να χρησιμοποιήσετε κάποια βάση δεδομένων για το "
"project σας."

msgid "Common pitfalls"
msgstr "Συνηθισμένα σφάλματα εγκατάστασης"

msgid ""
"If ``django-admin`` only displays the help text no matter what arguments it "
"is given, there is probably a problem with the file association in Windows. "
"Check if there is more than one environment variable set for running Python "
"scripts in ``PATH``. This usually occurs when there is more than one Python "
"version installed."
msgstr ""
"Αν η εντολή ``django-admin`` εμφανίζει μόνο το βοηθητικό μήνυμα ανεξαρτήτως "
"των παραμέτρων που δίνονται, τότε πιθανόν υπάρχει πρόβλημα στα Windows με το "
"file association. Ελέγξτε αν υπάρχει παραπάνω από μια environment variable "
"στο ``PATH``, που να είναι ρυθμισμένη για να τρέχει Python scripts. Αυτό "
"συνήθως συμβαίνει όταν είναι παραπάνω από μια εκδόσεις της Python "
"εγκατεστημένες στο σύστημα σας."

msgid ""
"If you are connecting to the internet behind a proxy, there might be problem "
"in running the command ``pip install django``. Set the environment variables "
"for proxy configuration in the command prompt as follows::"
msgstr ""
"Αν συνδέεστε στο internet μέσω ενός proxy, ίσως να υπάρξει πρόβλημα κατά την "
"εκτέλεση της εντολής ``pip install django``. Δείτε τις environment variables "
"για ρύθμιση του proxy μέσω της γραμμής εντολών, όπως παρακάτω::"

msgid "Writing database migrations"
msgstr "Γράφοντας migrations για τη βάση δεδομένων"

msgid ""
"This document explains how to structure and write database migrations for "
"different scenarios you might encounter. For introductory material on "
"migrations, see :doc:`the topic guide </topics/migrations>`."
msgstr ""
"Αυτό το άρθρο εξηγεί πως να δομήσετε και να γράψετε migrations για τη βάση "
"δεδομένων (database migrations), βασιζόμενοι σε διαφορετικά σενάρια που "
"μπορεί να συναντήσετε. Για μια εισαγωγή στα migrations, δείτε στο άρθρο :doc:"
"`migrations </topics/migrations>`."

msgid "Data migrations and multiple databases"
msgstr "Data migrations και πολλαπλές βάσεις δεδομένων"

msgid ""
"When using multiple databases, you may need to figure out whether or not to "
"run a migration against a particular database. For example, you may want to "
"**only** run a migration on a particular database."
msgstr ""
"Όταν χρησιμοποιείτε πολλές βάσεις δεδομένων, συχνά θα βρίσκεστε σε δίλλημα "
"να τρέξετε ένα migration σε κάποια συγκεκριμένη βάση δεδομένων. Για "
"παράδειγμα, ίσως να θέλετε να τρέξετε ένα migration **μόνο** για μια "
"συγκεκριμένη βάση δεδομένων."

msgid ""
"In order to do that you can check the database connection's alias inside a "
"``RunPython`` operation by looking at the ``schema_editor.connection.alias`` "
"attribute::"
msgstr ""
"Για να το κάνετε αυτό, ελέγξτε το alias της σύνδεσης της βάσης δεδομένων "
"μέσα σε μια ``RunPython`` λειτουργία, κοιτώντας το attribute του "
"``schema_editor.connection.alias``::"

msgid ""
"You can also provide hints that will be passed to the :meth:"
"`allow_migrate()` method of database routers as ``**hints``:"
msgstr ""
"Μπορείτε, επίσης, να δώσετε κάποια hints (πληροφορίες) οι οποίες θα "
"περαστούν στη μέθοδο :meth:`allow_migrate()` των database routers ως "
"``**hints``:"

msgid "Then, to leverage this in your migrations, do the following::"
msgstr ""
"Έπειτα, για να το αξιοποιήσετε αυτό στα migrations σας, κάντε τα ακόλουθα::"

msgid ""
"If your ``RunPython`` or ``RunSQL`` operation only affects one model, it's "
"good practice to pass ``model_name`` as a hint to make it as transparent as "
"possible to the router. This is especially important for reusable and third-"
"party apps."
msgstr ""
"Αν η ``RunPython`` ή η ``RunSQL`` λειτουργία σας, επιδρά μόνο σε ένα "
"μοντέλο, μια καλή πρακτική είναι να περάσετε το ``model_name`` ως hint για "
"να το κάνετε όσο γίνεται πιο διαφανές στον router. Αυτό είναι ιδιαίτερα "
"σημαντικό για επαναχρησιμοποιήσιμες και third-party εφαρμογές."

msgid "Migrations that add unique fields"
msgstr "Migrations τα οποία προσθέτουν unique πεδία"

msgid ""
"Applying a \"plain\" migration that adds a unique non-nullable field to a "
"table with existing rows will raise an error because the value used to "
"populate existing rows is generated only once, thus breaking the unique "
"constraint."
msgstr ""
"Εφαρμόζοντας ένα \"απλό\" migration το οποίο προσθέτει ένα μοναδικό μη-κενό "
"πεδίο (unique non-nullable field) σε έναν πίνακα με ήδη υπάρχουσες γραμμές, "
"θα κάνει raise κάποιο σφάλμα επειδή δεν είναι δυνατόν να αναπαραχθεί κάποια "
"μοναδική τιμή για κάθε γραμμή της στήλης αυτής. Επίσης δεν γίνεται να "
"ορίσουμε μια default τιμή καθώς δεν μπορεί κάθε γραμμή να έχει την ίδια τιμή "
"για αυτή τη στήλη."

msgid ""
"Therefore, the following steps should be taken. In this example, we'll add a "
"non-nullable :class:`~django.db.models.UUIDField` with a default value. "
"Modify the respective field according to your needs."
msgstr ""
"Για να λύσουμε αυτό το πρόβλημα, θα πρέπει να ακολουθήσουμε τα παρακάτω "
"βήματα. Σε αυτό το παράδειγμα, θα προσθέσουμε ένα μη-κενό πεδίο του τύπου :"
"class:`~django.db.models.UUIDField` με μια προεπιλεγμένη τιμή (default "
"value). Τροποποιήστε το αντίστοιχο δικό σας πεδίο ανάλογα τις ανάγκες σας."

msgid ""
"Add the field on your model with ``default=uuid.uuid4`` and ``unique=True`` "
"arguments (choose an appropriate default for the type of the field you're "
"adding)."
msgstr ""
"Προσθέστε ένα πεδίο στο μοντέλο σας με τις παραμέτρους ``default=uuid."
"uuid4`` και ``unique=True`` (επιλέξτε μια κατάλληλη προεπιλεγμένη τιμή "
"ανάλογα τον τύπο του πεδίου που πρόκειται να προσθέσετε)."

msgid ""
"Run the :djadmin:`makemigrations` command. This should generate a migration "
"with an ``AddField`` operation."
msgstr ""
"Τρέξτε την διαχειριστική εντολή :djadmin:`makemigrations`. Η εντολή αυτή θα "
"δημιουργήσει ένα αρχείο migration με την λειτουργία του ``AddField`` μέσα "
"του."

msgid ""
"Generate two empty migration files for the same app by running "
"``makemigrations myapp --empty`` twice. We've renamed the migration files to "
"give them meaningful names in the examples below."
msgstr ""
"Δημιουργήστε δύο κενά migration αρχεία για την ίδια εφαρμογή, τρέχοντας δύο "
"φορές την εντολή ``makemigrations myapp --empty``. Στο παράδειγμα μας, "
"έχουμε μετονομάσει τα αρχεία των migrations για να τους δώσουμε πιο "
"επεξηγηματικά ονόματα."

msgid ""
"Copy the ``AddField`` operation from the auto-generated migration (the first "
"of the three new files) to the last migration and change ``AddField`` to "
"``AlterField``. For example:"
msgstr ""
"Αντιγράψτε τη λειτουργία του ``AddField`` από το migration αρχείο που "
"δημιουργήθηκε με την εντολή :djadmin:`makemigrations` (το πρώτο από τα τρία "
"migration αρχεία) στο τελευταίο (το δεύτερο από τα δύο κενά) και αλλάξτε το "
"``AddField`` σε ``AlterField``. Για παράδειγμα:"

msgid ""
"Edit the first migration file. The generated migration class should look "
"similar to this:"
msgstr ""
"Επεξεργαστείτε το πρώτο αρχείο του migration, το οποίο θα μοιάζει κάπως έτσι:"

msgid ""
"Change ``unique=True`` to ``null=True`` -- this will create the intermediary "
"null field and defer creating the unique constraint until we've populated "
"unique values on all the rows."
msgstr ""
"Αλλάξτε το ``unique=True`` σε ``null=True`` -- αυτό θα δημιουργήσει ένα "
"μεσάζων κενό πεδίο που δεν περιέχει τον περιορισμό της μοναδικότητας (unique "
"constraint) μέχρις ότου δημιουργήσουμε μοναδικές τιμές για κάθε γραμμή αυτής "
"της στήλης.\n"
"\n"
"Με άλλα λόγια, αυτό που προσπαθούμε να κάνουμε είναι: Δημιουργία τριών "
"migration αρχείων (το πρώτο δημιουργείται αυτόματα με την εντολή :djadmin:"
"`makemigrations`) με διαφορετική λειτουργία το καθένα. Το πρώτο δημιουργεί "
"το πεδίο αλλά αντί του ``unique=True`` χρησιμοποιεί το ``null=True``. Το "
"δεύτερο (που θα φτιάξουμε στο αμέσως επόμενο βήμα) δημιουργεί μοναδικές "
"τιμές για κάθε γραμμή αυτής της στήλης. Το τρίτο αλλάζει το ``null=True`` σε "
"``unique=True`` για να εφαρμόσει τον περιορισμό της μοναδικότητας της στήλης "
"αυτής. Αφού, λοιπόν, δημιουργηθούν αυτά τα τρία migrations και τρέξουμε την "
"εντολή :djadmin:`migrate`, τότε καθένα migration θα τρέξει με τη σειρά και "
"πρώτα θα δημιουργηθεί η στήλη (με το απαραίτητο όνομα που δώσατε) η οποία θα "
"επιτρέπει κενές τιμές (``null=True``), μετά σε κάθε γραμμή αυτής της στήλης "
"θα μπουν μοναδικές τιμές και τέλος θα αλλάξει σε ``unique=True`` ούτως ώστε "
"από δω και μπρος να μην μπορεί να υπάρξει η ίδια τιμή σε παραπάνω από δύο "
"γραμμές για τη στήλη αυτή."

msgid ""
"In the first empty migration file, add a :class:`~django.db.migrations."
"operations.RunPython` or :class:`~django.db.migrations.operations.RunSQL` "
"operation to generate a unique value (UUID in the example) for each existing "
"row. For example:"
msgstr ""
"Στο πρώτο κενό migration αρχείο (το δεύτερο εκ των τριών), προσθέστε μια "
"λειτουργία :class:`~django.db.migrations.operations.RunPython` ή :class:"
"`~django.db.migrations.operations.RunSQL` για να δημιουργήσετε μια μοναδική "
"τιμή (σε αυτό το παράδειγμα δημιουργούμε μια τιμή του τύπου UUID) για κάθε "
"υπάρχουσα γραμμή. Για παράδειγμα:"

msgid ""
"Now you can apply the migrations as usual with the :djadmin:`migrate` "
"command."
msgstr ""
"Τώρα μπορείτε να εφαρμόσετε τα migration αρχεία, ως συνήθως, με την "
"διαχειριστική εντολή :djadmin:`migrate`."

msgid ""
"Note there is a race condition if you allow objects to be created while this "
"migration is running. Objects created after the ``AddField`` and before "
"``RunPython`` will have their original ``uuid``’s overwritten."
msgstr ""
"Σημειώστε ότι θα υπάρξει race condition αν επιτρέψετε να δημιουργηθούν "
"objects όσο το migration τρέχει. Η τιμή της ``uuid`` των objects που θα "
"δημιουργηθούν μεταξύ της λειτουργίας του ``AddField`` και της ``RunPython`` "
"θα γίνει overwritten."

msgid "Non-atomic migrations"
msgstr "Non-atomic migrations"

msgid ""
"On databases that support DDL transactions (SQLite and PostgreSQL), "
"migrations will run inside a transaction by default. For use cases such as "
"performing data migrations on large tables, you may want to prevent a "
"migration from running in a transaction by setting the ``atomic`` attribute "
"to ``False``::"
msgstr ""
"Στις βάσεις δεδομένων που υποστηρίζουν DDL transactions (όπως η SQLite και η "
"PostgreSQL), τα migrations θα τρέξουν μέσα σε ένα transaction από "
"προεπιλογή. Για τις περιπτώσεις όπου θα πραγματοποιηθούν data migrations σε "
"μεγάλους πίνακες, ίσως να θέλετε να αποτρέψετε το migration να τρέξει μέσα "
"σε ένα transaction θέτοντας το attribute ``atomic`` σε ``False``::"

msgid ""
"Within such a migration, all operations are run without a transaction. It's "
"possible to execute parts of the migration inside a transaction using :func:"
"`~django.db.transaction.atomic()` or by passing ``atomic=True`` to "
"``RunPython``."
msgstr ""
"Μέσα σε ένα τέτοιο migration, όλες οι λειτουργίες θα τρέξουν εκτός κάποιου "
"transaction. Μπορείτε, επίσης, να τρέξετε μερικά επιμέρους κομμάτια ενός "
"migration μέσα σε ένα transaction χρησιμοποιώντας τη μέθοδο :func:`~django."
"db.transaction.atomic()` ή περνώντας την παράμετρο ``atomic=True`` στη "
"λειτουργία του ``RunPython``."

msgid ""
"Here's an example of a non-atomic data migration that updates a large table "
"in smaller batches::"
msgstr ""
"Παρακάτω φαίνεται ένα παράδειγμα ενός non-atomic data migration, το οποίο "
"ενημερώνει έναν μεγάλο πίνακα ανά μικρότερα κομμάτια::"

msgid ""
"The ``atomic`` attribute doesn't have an effect on databases that don't "
"support DDL transactions (e.g. MySQL, Oracle)."
msgstr ""
"Το attribute ``atomic`` δεν επηρεάζει τις βάσεις δεδομένων οι οποίες δεν "
"υποστηρίζουν τα DDL transactions (πχ MySQL, Oracle)."

msgid "Controlling the order of migrations"
msgstr "Ελέγχοντας τη σειρά εκτέλεσης των migration αρχείων"

msgid ""
"Django determines the order in which migrations should be applied not by the "
"filename of each migration, but by building a graph using two properties on "
"the ``Migration`` class: ``dependencies`` and ``run_before``."
msgstr ""
"Το Django δεν καθορίζει τη σειρά εκτέλεσης των migration αρχείων από το "
"όνομα τους αλλά δημιουργώντας ένα γράφημα χρησιμοποιώντας δύο properties της "
"κλάσης ``Migration``: το ``dependencies`` και το ``run_before``."

msgid ""
"If you've used the :djadmin:`makemigrations` command you've probably already "
"seen ``dependencies`` in action because auto-created migrations have this "
"defined as part of their creation process."
msgstr ""
"Αν έχετε χρησιμοποιήσει την διαχειριστική εντολή :djadmin:`makemigrations` "
"θα έχετε δει, πιθανόν, το property ``dependencies`` που δημιουργείται "
"αυτόματα μέσα σε κάθε migration αρχείο."

msgid "The ``dependencies`` property is declared like this::"
msgstr "Το property ``dependencies`` ορίζεται ως εξής::"

msgid ""
"Usually this will be enough, but from time to time you may need to ensure "
"that your migration runs *before* other migrations. This is useful, for "
"example, to make third-party apps' migrations run *after* your :setting:"
"`AUTH_USER_MODEL` replacement."
msgstr ""
"Συνήθως αυτό θα είναι αρκετό, αλλά μερικές φορές ίσως χρειαστεί να "
"βεβαιωθείτε ότι το migration αρχείο σας τρέξει *πριν* τρέξουν άλλα "
"migrations. Αυτό είναι χρήσιμο, για παράδειγμα, να κάνετε τα migration "
"αρχεία τρίτων εφαρμογών να τρέξουν *μετά* την αντικατάσταση της δική σας "
"ρύθμισης :setting:`AUTH_USER_MODEL`."

msgid ""
"To achieve this, place all migrations that should depend on yours in the "
"``run_before`` attribute on your ``Migration`` class::"
msgstr ""
"Για να το επιτύχετε αυτό, τοποθετήστε όλα τα migrations τα οποία εξαρτώνται "
"από τα δικά σας, στο attribute ``run_before`` της κλάσης ``Migration``::"

msgid ""
"Prefer using ``dependencies`` over ``run_before`` when possible. You should "
"only use ``run_before`` if it is undesirable or impractical to specify "
"``dependencies`` in the migration which you want to run after the one you "
"are writing."
msgstr ""
"Προτιμήστε να χρησιμοποιείτε το ``dependencies`` αντί του ``run_before`` "
"όπου αυτό είναι δυνατόν. Θα πρέπει να χρησιμοποιείτε το ``run_before`` μόνο "
"όταν είναι μη επιθυμητό ή μη πρακτικό να προσδιορίσετε το ``dependencies`` "
"σε ένα migration αρχείο το οποίο θέλετε να τρέξει μετά από αυτό που γράφετε."

msgid "Migrating data between third-party apps"
msgstr "Κάνοντας migration των data μεταξύ third-party εφαρμογών"

msgid ""
"You can use a data migration to move data from one third-party application "
"to another."
msgstr ""
"Μπορείτε να χρησιμοποιήσετε το data migration για να μετακινήσετε δεδομένα "
"(data) από μια εφαρμογή τρίτου σε μια άλλη."

msgid ""
"If you plan to remove the old app later, you'll need to set the "
"``dependencies`` property based on whether or not the old app is installed. "
"Otherwise, you'll have missing dependencies once you uninstall the old app. "
"Similarly, you'll need to catch :exc:`LookupError` in the ``apps."
"get_model()`` call that retrieves models from the old app. This approach "
"allows you to deploy your project anywhere without first installing and then "
"uninstalling the old app."
msgstr ""
"Αν σκοπεύετε να αφαιρέσετε αργότερα την παλιά εφαρμογή σας, θα χρειαστεί να "
"ορίσετε το property ``dependencies`` βασιζόμενοι στο αν η παλιά σας εφαρμογή "
"είναι εγκατεστημένη ή όχι. Σε διαφορετική περίπτωση, θα έχετε απόντα "
"dependencies μόλις απεγκαταστήσετε την παλιά εφαρμογή. Ομοίως, θα χρειαστεί "
"να κάνετε catch το exception :exc:`LookupError` μέσα στην κλήση της μεθόδου "
"``apps.get_model()``η οποία ανακτά τα μοντέλα από την παλιά εφαρμογή. Αυτή η "
"μέθοδος σας επιτρέπει να ανεβάσετε το project σας σε κάποιον server "
"(deployment) χωρίς να χρειάζεται, πρώτα, να εγκαταστήσετε και μετά να "
"απεγκαταστήσετε την παλιά σας εφαρμογή."

msgid "Here's a sample migration:"
msgstr "Παρακάτω φαίνεται ένα δείγμα ενός migration αρχείου:"

msgid ""
"Also consider what you want to happen when the migration is unapplied. You "
"could either do nothing (as in the example above) or remove some or all of "
"the data from the new application. Adjust the second argument of the :mod:"
"`~django.db.migrations.operations.RunPython` operation accordingly."
msgstr ""
"Επίσης, σκεφτείτε τι θα θέλατε να γίνει όταν το migration δεν εφαρμοστεί. Θα "
"μπορούσατε να μην κάνετε τίποτα (όπως στο παραπάνω παράδειγμα) ή να "
"αφαιρέσετε κάποια ή όλα τα data από την καινούργια εφαρμογή. Προσαρμόστε το "
"δεύτερο argument της λειτουργίας του :mod:`~django.db.migrations.operations."
"RunPython` καταλλήλως."

msgid "Changing an unmanaged model to managed"
msgstr "Αλλαγή ενός unmanaged μοντέλου σε managed"

msgid ""
"If you want to change an unmanaged model (:attr:`managed=False <django.db."
"models.Options.managed>`) to managed, you must remove ``managed=False`` and "
"generate a migration before making other schema-related changes to the "
"model, since schema changes that appear in the migration that contains the "
"operation to change ``Meta.managed`` may not be applied."
msgstr ""
"Αν θέλετε να αλλάξετε ένα unmanaged μοντέλο (:attr:`managed=False <django.db."
"models.Options.managed>`) σε managed, θα πρέπει να αφαιρέσετε το "
"``managed=False`` και να δημιουργήσετε ένα migration προτού κάνετε άλλες "
"αλλαγές στο μοντέλο σχετικά με το schema, αφού οι αλλαγές στο schema οι "
"οποίες εμφανίζονται στο migration που περιέχει την αλλαγή του ``Meta."
"managed`` ίσως να μην εφαρμοστούν. Με άλλα λόγια, δημιουργήστε και τρέξτε "
"ένα migration μετά την αφαίρεση του ``managed=False`` και κατόπιν μπορείτε "
"ελεύθερα να κάνετε τις schema αλλαγές στο (managed) μοντέλο σας."
